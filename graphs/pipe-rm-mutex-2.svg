<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="870.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="853" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="853" > </text>
<g id="frames">
<g >
<title>_perf_ioctl (77 samples, 1.32%)</title><rect x="11.6" y="613" width="15.6" height="15.0" fill="rgb(213,227,53)" rx="2" ry="2" />
<text  x="14.61" y="623.5" ></text>
</g>
<g >
<title>__set_page_dirty (1 samples, 0.02%)</title><rect x="37.9" y="517" width="0.2" height="15.0" fill="rgb(206,129,30)" rx="2" ry="2" />
<text  x="40.85" y="527.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (2 samples, 0.03%)</title><rect x="34.6" y="325" width="0.4" height="15.0" fill="rgb(216,83,19)" rx="2" ry="2" />
<text  x="37.62" y="335.5" ></text>
</g>
<g >
<title>do_shared_fault (2 samples, 0.03%)</title><rect x="723.0" y="501" width="0.4" height="15.0" fill="rgb(233,96,12)" rx="2" ry="2" />
<text  x="726.00" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.10%)</title><rect x="638.0" y="613" width="1.3" height="15.0" fill="rgb(237,26,29)" rx="2" ry="2" />
<text  x="641.04" y="623.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="893.5" y="661" width="0.2" height="15.0" fill="rgb(249,156,39)" rx="2" ry="2" />
<text  x="896.54" y="671.5" ></text>
</g>
<g >
<title>leave_mm (2 samples, 0.03%)</title><rect x="1149.0" y="693" width="0.4" height="15.0" fill="rgb(228,14,48)" rx="2" ry="2" />
<text  x="1152.03" y="703.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.02%)</title><rect x="723.4" y="661" width="0.2" height="15.0" fill="rgb(227,21,33)" rx="2" ry="2" />
<text  x="726.41" y="671.5" ></text>
</g>
<g >
<title>dequeue_rt_stack (1 samples, 0.02%)</title><rect x="897.4" y="485" width="0.2" height="15.0" fill="rgb(239,19,15)" rx="2" ry="2" />
<text  x="900.37" y="495.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,048 samples, 17.92%)</title><rect x="956.3" y="757" width="211.5" height="15.0" fill="rgb(217,0,28)" rx="2" ry="2" />
<text  x="959.30" y="767.5" >cpu_startup_entry</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="119.4" y="149" width="0.2" height="15.0" fill="rgb(223,37,1)" rx="2" ry="2" />
<text  x="122.38" y="159.5" ></text>
</g>
<g >
<title>snd_ctl_ioctl (10 samples, 0.17%)</title><rect x="900.4" y="741" width="2.0" height="15.0" fill="rgb(210,11,47)" rx="2" ry="2" />
<text  x="903.40" y="751.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (37 samples, 0.63%)</title><rect x="41.7" y="773" width="7.5" height="15.0" fill="rgb(226,190,37)" rx="2" ry="2" />
<text  x="44.68" y="783.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.03%)</title><rect x="756.7" y="741" width="0.4" height="15.0" fill="rgb(207,133,10)" rx="2" ry="2" />
<text  x="759.71" y="751.5" ></text>
</g>
<g >
<title>update_pvclock_gtod (1 samples, 0.02%)</title><rect x="1189.0" y="549" width="0.2" height="15.0" fill="rgb(245,173,52)" rx="2" ry="2" />
<text  x="1191.99" y="559.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (4 samples, 0.07%)</title><rect x="964.0" y="373" width="0.8" height="15.0" fill="rgb(220,115,25)" rx="2" ry="2" />
<text  x="966.97" y="383.5" ></text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.02%)</title><rect x="930.1" y="709" width="0.2" height="15.0" fill="rgb(240,149,5)" rx="2" ry="2" />
<text  x="933.06" y="719.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2 samples, 0.03%)</title><rect x="929.1" y="693" width="0.4" height="15.0" fill="rgb(250,72,30)" rx="2" ry="2" />
<text  x="932.06" y="703.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="38.5" y="677" width="0.2" height="15.0" fill="rgb(246,141,31)" rx="2" ry="2" />
<text  x="41.46" y="687.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="138.4" y="517" width="0.2" height="15.0" fill="rgb(214,216,12)" rx="2" ry="2" />
<text  x="141.35" y="527.5" ></text>
</g>
<g >
<title>refill_stock (1 samples, 0.02%)</title><rect x="942.2" y="549" width="0.2" height="15.0" fill="rgb(251,149,49)" rx="2" ry="2" />
<text  x="945.17" y="559.5" ></text>
</g>
<g >
<title>__set_page_dirty (1 samples, 0.02%)</title><rect x="33.4" y="357" width="0.2" height="15.0" fill="rgb(241,142,5)" rx="2" ry="2" />
<text  x="36.41" y="367.5" ></text>
</g>
<g >
<title>net_rx_action (14 samples, 0.24%)</title><rect x="970.0" y="581" width="2.8" height="15.0" fill="rgb(206,17,8)" rx="2" ry="2" />
<text  x="973.02" y="591.5" ></text>
</g>
<g >
<title>check_cpu_stall (1 samples, 0.02%)</title><rect x="980.9" y="485" width="0.2" height="15.0" fill="rgb(213,207,52)" rx="2" ry="2" />
<text  x="983.92" y="495.5" ></text>
</g>
<g >
<title>irq_exit_rcu (24 samples, 0.41%)</title><rect x="986.2" y="645" width="4.8" height="15.0" fill="rgb(248,186,13)" rx="2" ry="2" />
<text  x="989.17" y="655.5" ></text>
</g>
<g >
<title>drm_atomic_check_only (2 samples, 0.03%)</title><rect x="899.2" y="645" width="0.4" height="15.0" fill="rgb(232,228,31)" rx="2" ry="2" />
<text  x="902.19" y="655.5" ></text>
</g>
<g >
<title>update_group_capacity (1 samples, 0.02%)</title><rect x="1169.2" y="437" width="0.2" height="15.0" fill="rgb(233,81,13)" rx="2" ry="2" />
<text  x="1172.21" y="447.5" ></text>
</g>
<g >
<title>amdgpu_cs_parser_bos (5 samples, 0.09%)</title><rect x="895.2" y="677" width="1.0" height="15.0" fill="rgb(207,72,14)" rx="2" ry="2" />
<text  x="898.15" y="687.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.03%)</title><rect x="608.4" y="469" width="0.4" height="15.0" fill="rgb(233,95,13)" rx="2" ry="2" />
<text  x="611.38" y="479.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.77%)</title><rect x="480.8" y="613" width="9.1" height="15.0" fill="rgb(243,112,50)" rx="2" ry="2" />
<text  x="483.83" y="623.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="744.2" y="613" width="0.2" height="15.0" fill="rgb(213,118,25)" rx="2" ry="2" />
<text  x="747.20" y="623.5" ></text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="950.6" y="597" width="0.3" height="15.0" fill="rgb(246,12,37)" rx="2" ry="2" />
<text  x="953.65" y="607.5" ></text>
</g>
<g >
<title>seq_read_iter (1 samples, 0.02%)</title><rect x="28.0" y="565" width="0.2" height="15.0" fill="rgb(243,127,22)" rx="2" ry="2" />
<text  x="30.96" y="575.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="744.2" y="629" width="0.2" height="15.0" fill="rgb(239,15,44)" rx="2" ry="2" />
<text  x="747.20" y="639.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="38.3" y="485" width="0.2" height="15.0" fill="rgb(220,142,3)" rx="2" ry="2" />
<text  x="41.25" y="495.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="890.7" y="597" width="0.2" height="15.0" fill="rgb(208,166,41)" rx="2" ry="2" />
<text  x="893.71" y="607.5" ></text>
</g>
<g >
<title>get_user_pages_fast (1 samples, 0.02%)</title><rect x="892.5" y="677" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="895.53" y="687.5" ></text>
</g>
<g >
<title>dc_resource_state_copy_construct_current (1 samples, 0.02%)</title><rect x="953.9" y="677" width="0.2" height="15.0" fill="rgb(216,12,46)" rx="2" ry="2" />
<text  x="956.88" y="687.5" ></text>
</g>
<g >
<title>enqueue_timer (1 samples, 0.02%)</title><rect x="947.0" y="693" width="0.2" height="15.0" fill="rgb(246,213,34)" rx="2" ry="2" />
<text  x="950.02" y="703.5" ></text>
</g>
<g >
<title>__note_gp_changes (1 samples, 0.02%)</title><rect x="946.6" y="725" width="0.2" height="15.0" fill="rgb(206,147,19)" rx="2" ry="2" />
<text  x="949.61" y="735.5" ></text>
</g>
<g >
<title>commit_tail (40 samples, 0.68%)</title><rect x="948.2" y="709" width="8.1" height="15.0" fill="rgb(231,126,13)" rx="2" ry="2" />
<text  x="951.23" y="719.5" ></text>
</g>
<g >
<title>update_process_times (13 samples, 0.22%)</title><rect x="980.9" y="533" width="2.6" height="15.0" fill="rgb(223,200,50)" rx="2" ry="2" />
<text  x="983.92" y="543.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.02%)</title><rect x="11.0" y="709" width="0.2" height="15.0" fill="rgb(232,12,51)" rx="2" ry="2" />
<text  x="14.01" y="719.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="120.0" y="661" width="0.2" height="15.0" fill="rgb(247,162,40)" rx="2" ry="2" />
<text  x="122.99" y="671.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3 samples, 0.05%)</title><rect x="109.9" y="629" width="0.6" height="15.0" fill="rgb(219,54,32)" rx="2" ry="2" />
<text  x="112.90" y="639.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.02%)</title><rect x="980.9" y="517" width="0.2" height="15.0" fill="rgb(216,149,23)" rx="2" ry="2" />
<text  x="983.92" y="527.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (2 samples, 0.03%)</title><rect x="756.7" y="613" width="0.4" height="15.0" fill="rgb(218,199,13)" rx="2" ry="2" />
<text  x="759.71" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (18 samples, 0.31%)</title><rect x="594.5" y="581" width="3.6" height="15.0" fill="rgb(245,25,47)" rx="2" ry="2" />
<text  x="597.45" y="591.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="1158.1" y="725" width="0.2" height="15.0" fill="rgb(234,93,31)" rx="2" ry="2" />
<text  x="1161.11" y="735.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (6 samples, 0.10%)</title><rect x="118.6" y="757" width="1.2" height="15.0" fill="rgb(233,17,38)" rx="2" ry="2" />
<text  x="121.58" y="767.5" ></text>
</g>
<g >
<title>[[heap]] (1 samples, 0.02%)</title><rect x="38.5" y="789" width="0.2" height="15.0" fill="rgb(245,221,42)" rx="2" ry="2" />
<text  x="41.46" y="799.5" ></text>
</g>
<g >
<title>generic_file_buffered_read_get_pages (1 samples, 0.02%)</title><rect x="120.6" y="341" width="0.2" height="15.0" fill="rgb(241,62,10)" rx="2" ry="2" />
<text  x="123.59" y="351.5" ></text>
</g>
<g >
<title>process_one_work (40 samples, 0.68%)</title><rect x="948.2" y="741" width="8.1" height="15.0" fill="rgb(242,226,18)" rx="2" ry="2" />
<text  x="951.23" y="751.5" ></text>
</g>
<g >
<title>dm_read_reg_func (6 samples, 0.10%)</title><rect x="960.3" y="341" width="1.2" height="15.0" fill="rgb(232,160,18)" rx="2" ry="2" />
<text  x="963.34" y="351.5" ></text>
</g>
<g >
<title>consume_skb (2 samples, 0.03%)</title><rect x="942.2" y="645" width="0.4" height="15.0" fill="rgb(248,52,2)" rx="2" ry="2" />
<text  x="945.17" y="655.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (4 samples, 0.07%)</title><rect x="972.0" y="485" width="0.8" height="15.0" fill="rgb(230,25,35)" rx="2" ry="2" />
<text  x="975.04" y="495.5" ></text>
</g>
<g >
<title>ip_list_rcv_finish.constprop.0 (1 samples, 0.02%)</title><rect x="972.2" y="437" width="0.2" height="15.0" fill="rgb(220,3,32)" rx="2" ry="2" />
<text  x="975.24" y="447.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (6 samples, 0.10%)</title><rect x="964.0" y="437" width="1.2" height="15.0" fill="rgb(240,170,37)" rx="2" ry="2" />
<text  x="966.97" y="447.5" ></text>
</g>
<g >
<title>lru_cache_add (12 samples, 0.21%)</title><rect x="712.9" y="645" width="2.4" height="15.0" fill="rgb(214,79,34)" rx="2" ry="2" />
<text  x="715.91" y="655.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (19 samples, 0.32%)</title><rect x="594.2" y="613" width="3.9" height="15.0" fill="rgb(228,150,25)" rx="2" ry="2" />
<text  x="597.25" y="623.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (52 samples, 0.89%)</title><rect x="490.5" y="549" width="10.5" height="15.0" fill="rgb(252,75,33)" rx="2" ry="2" />
<text  x="493.52" y="559.5" ></text>
</g>
<g >
<title>wait_for (1 samples, 0.02%)</title><rect x="10.4" y="693" width="0.2" height="15.0" fill="rgb(223,60,35)" rx="2" ry="2" />
<text  x="13.40" y="703.5" ></text>
</g>
<g >
<title>drm_sched_wakeup (3 samples, 0.05%)</title><rect x="897.0" y="645" width="0.6" height="15.0" fill="rgb(235,4,44)" rx="2" ry="2" />
<text  x="899.97" y="655.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1169.2" y="517" width="0.2" height="15.0" fill="rgb(212,134,20)" rx="2" ry="2" />
<text  x="1172.21" y="527.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (7 samples, 0.12%)</title><rect x="960.3" y="389" width="1.4" height="15.0" fill="rgb(216,80,11)" rx="2" ry="2" />
<text  x="963.34" y="399.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (66 samples, 1.13%)</title><rect x="84.7" y="757" width="13.3" height="15.0" fill="rgb(247,38,53)" rx="2" ry="2" />
<text  x="87.67" y="767.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (3 samples, 0.05%)</title><rect x="968.0" y="277" width="0.6" height="15.0" fill="rgb(246,47,6)" rx="2" ry="2" />
<text  x="971.01" y="287.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (5 samples, 0.09%)</title><rect x="1166.2" y="693" width="1.0" height="15.0" fill="rgb(252,3,28)" rx="2" ry="2" />
<text  x="1169.19" y="703.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="637.2" y="517" width="0.2" height="15.0" fill="rgb(242,73,24)" rx="2" ry="2" />
<text  x="640.23" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.09%)</title><rect x="37.4" y="773" width="1.1" height="15.0" fill="rgb(205,227,38)" rx="2" ry="2" />
<text  x="40.45" y="783.5" ></text>
</g>
<g >
<title>intercept_process_vm_writev (1 samples, 0.02%)</title><rect x="723.4" y="709" width="0.2" height="15.0" fill="rgb(210,199,3)" rx="2" ry="2" />
<text  x="726.41" y="719.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (2 samples, 0.03%)</title><rect x="489.9" y="597" width="0.4" height="15.0" fill="rgb(209,213,49)" rx="2" ry="2" />
<text  x="492.91" y="607.5" ></text>
</g>
<g >
<title>NaClHostDescRead (1,365 samples, 23.35%)</title><rect x="120.2" y="709" width="275.5" height="15.0" fill="rgb(234,65,1)" rx="2" ry="2" />
<text  x="123.19" y="719.5" >NaClHostDescRead</text>
</g>
<g >
<title>hrtimer_reprogram (1 samples, 0.02%)</title><rect x="934.1" y="661" width="0.2" height="15.0" fill="rgb(234,36,50)" rx="2" ry="2" />
<text  x="937.10" y="671.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (53 samples, 0.91%)</title><rect x="959.1" y="597" width="10.7" height="15.0" fill="rgb(208,170,38)" rx="2" ry="2" />
<text  x="962.13" y="607.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (2 samples, 0.03%)</title><rect x="949.8" y="565" width="0.4" height="15.0" fill="rgb(236,171,11)" rx="2" ry="2" />
<text  x="952.84" y="575.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (1 samples, 0.02%)</title><rect x="118.2" y="149" width="0.2" height="15.0" fill="rgb(241,51,16)" rx="2" ry="2" />
<text  x="121.17" y="159.5" ></text>
</g>
<g >
<title>ttm_bo_bulk_move_lru_tail (1 samples, 0.02%)</title><rect x="898.0" y="661" width="0.2" height="15.0" fill="rgb(241,160,25)" rx="2" ry="2" />
<text  x="900.98" y="671.5" ></text>
</g>
<g >
<title>__evlist__enable (80 samples, 1.37%)</title><rect x="11.2" y="741" width="16.2" height="15.0" fill="rgb(214,205,11)" rx="2" ry="2" />
<text  x="14.21" y="751.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (18 samples, 0.31%)</title><rect x="57.6" y="725" width="3.7" height="15.0" fill="rgb(239,134,7)" rx="2" ry="2" />
<text  x="60.63" y="735.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (2 samples, 0.03%)</title><rect x="608.4" y="453" width="0.4" height="15.0" fill="rgb(224,9,38)" rx="2" ry="2" />
<text  x="611.38" y="463.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="118.2" y="405" width="0.2" height="15.0" fill="rgb(220,106,3)" rx="2" ry="2" />
<text  x="121.17" y="415.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 0.02%)</title><rect x="752.1" y="581" width="0.2" height="15.0" fill="rgb(208,27,46)" rx="2" ry="2" />
<text  x="755.07" y="591.5" ></text>
</g>
<g >
<title>mmput (27 samples, 0.46%)</title><rect x="751.1" y="693" width="5.4" height="15.0" fill="rgb(211,195,54)" rx="2" ry="2" />
<text  x="754.06" y="703.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.02%)</title><rect x="11.0" y="741" width="0.2" height="15.0" fill="rgb(205,36,10)" rx="2" ry="2" />
<text  x="14.01" y="751.5" ></text>
</g>
<g >
<title>drm_get_last_vbltimestamp (5 samples, 0.09%)</title><rect x="963.0" y="453" width="1.0" height="15.0" fill="rgb(217,222,47)" rx="2" ry="2" />
<text  x="965.96" y="463.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="987.0" y="533" width="0.2" height="15.0" fill="rgb(239,135,13)" rx="2" ry="2" />
<text  x="989.98" y="543.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (4 samples, 0.07%)</title><rect x="949.4" y="613" width="0.8" height="15.0" fill="rgb(212,110,0)" rx="2" ry="2" />
<text  x="952.44" y="623.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.02%)</title><rect x="756.5" y="677" width="0.2" height="15.0" fill="rgb(248,104,40)" rx="2" ry="2" />
<text  x="759.51" y="687.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.02%)</title><rect x="119.8" y="389" width="0.2" height="15.0" fill="rgb(216,38,5)" rx="2" ry="2" />
<text  x="122.79" y="399.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (10 samples, 0.17%)</title><rect x="653.6" y="725" width="2.0" height="15.0" fill="rgb(252,103,36)" rx="2" ry="2" />
<text  x="656.58" y="735.5" ></text>
</g>
<g >
<title>ep_send_events (1 samples, 0.02%)</title><rect x="891.1" y="709" width="0.2" height="15.0" fill="rgb(220,164,16)" rx="2" ry="2" />
<text  x="894.12" y="719.5" ></text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.02%)</title><rect x="947.4" y="629" width="0.2" height="15.0" fill="rgb(222,145,31)" rx="2" ry="2" />
<text  x="950.42" y="639.5" ></text>
</g>
<g >
<title>read_hpet.part.0 (1 samples, 0.02%)</title><rect x="990.8" y="485" width="0.2" height="15.0" fill="rgb(251,229,37)" rx="2" ry="2" />
<text  x="993.81" y="495.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="969.0" y="245" width="0.2" height="15.0" fill="rgb(248,23,3)" rx="2" ry="2" />
<text  x="972.01" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (31 samples, 0.53%)</title><rect x="744.8" y="789" width="6.3" height="15.0" fill="rgb(245,73,26)" rx="2" ry="2" />
<text  x="747.80" y="799.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (6 samples, 0.10%)</title><rect x="118.6" y="661" width="1.2" height="15.0" fill="rgb(231,210,29)" rx="2" ry="2" />
<text  x="121.58" y="671.5" ></text>
</g>
<g >
<title>rcu_gp_cleanup (1 samples, 0.02%)</title><rect x="946.6" y="741" width="0.2" height="15.0" fill="rgb(205,75,8)" rx="2" ry="2" />
<text  x="949.61" y="751.5" ></text>
</g>
<g >
<title>lookup_open.isra.0 (1 samples, 0.02%)</title><rect x="118.8" y="373" width="0.2" height="15.0" fill="rgb(224,204,7)" rx="2" ry="2" />
<text  x="121.78" y="383.5" ></text>
</g>
<g >
<title>need_update (1 samples, 0.02%)</title><rect x="1156.7" y="677" width="0.2" height="15.0" fill="rgb(250,226,52)" rx="2" ry="2" />
<text  x="1159.70" y="687.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (5 samples, 0.09%)</title><rect x="963.0" y="373" width="1.0" height="15.0" fill="rgb(254,60,22)" rx="2" ry="2" />
<text  x="965.96" y="383.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="931.1" y="693" width="0.2" height="15.0" fill="rgb(254,76,22)" rx="2" ry="2" />
<text  x="934.07" y="703.5" ></text>
</g>
<g >
<title>ksys_write (44 samples, 0.75%)</title><rect x="28.6" y="581" width="8.8" height="15.0" fill="rgb(222,81,3)" rx="2" ry="2" />
<text  x="31.57" y="591.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.02%)</title><rect x="35.6" y="405" width="0.2" height="15.0" fill="rgb(226,100,38)" rx="2" ry="2" />
<text  x="38.63" y="415.5" ></text>
</g>
<g >
<title>ovl_create_or_link (1 samples, 0.02%)</title><rect x="118.8" y="325" width="0.2" height="15.0" fill="rgb(254,149,3)" rx="2" ry="2" />
<text  x="121.78" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="928.7" y="645" width="0.2" height="15.0" fill="rgb(240,14,30)" rx="2" ry="2" />
<text  x="931.65" y="655.5" ></text>
</g>
<g >
<title>tick_nohz_idle_got_tick (1 samples, 0.02%)</title><rect x="1150.2" y="677" width="0.2" height="15.0" fill="rgb(208,70,1)" rx="2" ry="2" />
<text  x="1153.24" y="687.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (4 samples, 0.07%)</title><rect x="1151.5" y="677" width="0.8" height="15.0" fill="rgb(211,157,26)" rx="2" ry="2" />
<text  x="1154.45" y="687.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="969.0" y="405" width="0.2" height="15.0" fill="rgb(250,152,7)" rx="2" ry="2" />
<text  x="972.01" y="415.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.03%)</title><rect x="754.3" y="517" width="0.4" height="15.0" fill="rgb(235,37,24)" rx="2" ry="2" />
<text  x="757.29" y="527.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (3 samples, 0.05%)</title><rect x="30.2" y="389" width="0.6" height="15.0" fill="rgb(235,27,31)" rx="2" ry="2" />
<text  x="33.18" y="399.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (1 samples, 0.02%)</title><rect x="33.8" y="309" width="0.2" height="15.0" fill="rgb(250,73,0)" rx="2" ry="2" />
<text  x="36.81" y="319.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (13 samples, 0.22%)</title><rect x="53.8" y="757" width="2.6" height="15.0" fill="rgb(244,63,35)" rx="2" ry="2" />
<text  x="56.79" y="767.5" ></text>
</g>
<g >
<title>get_futex_key (3 samples, 0.05%)</title><rect x="892.7" y="709" width="0.6" height="15.0" fill="rgb(247,49,47)" rx="2" ry="2" />
<text  x="895.73" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (39 samples, 0.67%)</title><rect x="473.0" y="581" width="7.8" height="15.0" fill="rgb(230,113,3)" rx="2" ry="2" />
<text  x="475.96" y="591.5" ></text>
</g>
<g >
<title>perf_mmap__push (46 samples, 0.79%)</title><rect x="28.2" y="709" width="9.2" height="15.0" fill="rgb(230,19,52)" rx="2" ry="2" />
<text  x="31.16" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="744.0" y="773" width="0.2" height="15.0" fill="rgb(240,51,42)" rx="2" ry="2" />
<text  x="746.99" y="783.5" ></text>
</g>
<g >
<title>do_group_exit (2 samples, 0.03%)</title><rect x="756.7" y="677" width="0.4" height="15.0" fill="rgb(250,94,45)" rx="2" ry="2" />
<text  x="759.71" y="687.5" ></text>
</g>
<g >
<title>pvclock_gtod_notify (1 samples, 0.02%)</title><rect x="980.3" y="469" width="0.2" height="15.0" fill="rgb(239,23,6)" rx="2" ry="2" />
<text  x="983.32" y="479.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="931.1" y="725" width="0.2" height="15.0" fill="rgb(248,54,53)" rx="2" ry="2" />
<text  x="934.07" y="735.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (22 samples, 0.38%)</title><rect x="974.7" y="565" width="4.4" height="15.0" fill="rgb(211,163,35)" rx="2" ry="2" />
<text  x="977.67" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (1 samples, 0.02%)</title><rect x="890.1" y="773" width="0.2" height="15.0" fill="rgb(210,184,16)" rx="2" ry="2" />
<text  x="893.11" y="783.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.02%)</title><rect x="723.4" y="757" width="0.2" height="15.0" fill="rgb(221,44,8)" rx="2" ry="2" />
<text  x="726.41" y="767.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="119.6" y="133" width="0.2" height="15.0" fill="rgb(237,156,37)" rx="2" ry="2" />
<text  x="122.58" y="143.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (2 samples, 0.03%)</title><rect x="1166.2" y="677" width="0.4" height="15.0" fill="rgb(230,171,43)" rx="2" ry="2" />
<text  x="1169.19" y="687.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.17%)</title><rect x="636.0" y="549" width="2.0" height="15.0" fill="rgb(209,22,0)" rx="2" ry="2" />
<text  x="639.02" y="559.5" ></text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.02%)</title><rect x="933.1" y="677" width="0.2" height="15.0" fill="rgb(229,181,37)" rx="2" ry="2" />
<text  x="936.09" y="687.5" ></text>
</g>
<g >
<title>nf_hook_slow_list (1 samples, 0.02%)</title><rect x="972.4" y="437" width="0.2" height="15.0" fill="rgb(224,93,8)" rx="2" ry="2" />
<text  x="975.45" y="447.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (59 samples, 1.01%)</title><rect x="973.1" y="629" width="11.9" height="15.0" fill="rgb(251,48,25)" rx="2" ry="2" />
<text  x="976.05" y="639.5" ></text>
</g>
<g >
<title>___sys_recvmsg (6 samples, 0.10%)</title><rect x="942.2" y="725" width="1.2" height="15.0" fill="rgb(214,92,12)" rx="2" ry="2" />
<text  x="945.17" y="735.5" ></text>
</g>
<g >
<title>rmqueue (4 samples, 0.07%)</title><rect x="710.9" y="613" width="0.8" height="15.0" fill="rgb(253,158,17)" rx="2" ry="2" />
<text  x="713.90" y="623.5" ></text>
</g>
<g >
<title>security_file_free (1 samples, 0.02%)</title><rect x="946.0" y="661" width="0.2" height="15.0" fill="rgb(241,173,21)" rx="2" ry="2" />
<text  x="949.01" y="671.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (1 samples, 0.02%)</title><rect x="942.2" y="597" width="0.2" height="15.0" fill="rgb(214,216,40)" rx="2" ry="2" />
<text  x="945.17" y="607.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.02%)</title><rect x="10.2" y="709" width="0.2" height="15.0" fill="rgb(254,37,27)" rx="2" ry="2" />
<text  x="13.20" y="719.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="929.1" y="629" width="0.2" height="15.0" fill="rgb(237,136,26)" rx="2" ry="2" />
<text  x="932.06" y="639.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="744.2" y="549" width="0.2" height="15.0" fill="rgb(219,73,2)" rx="2" ry="2" />
<text  x="747.20" y="559.5" ></text>
</g>
<g >
<title>snd_pcm_hwsync (84 samples, 1.44%)</title><rect x="902.4" y="709" width="17.0" height="15.0" fill="rgb(240,17,44)" rx="2" ry="2" />
<text  x="905.42" y="719.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="608.2" y="469" width="0.2" height="15.0" fill="rgb(207,31,31)" rx="2" ry="2" />
<text  x="611.17" y="479.5" ></text>
</g>
<g >
<title>snd_pcm_status_user64 (44 samples, 0.75%)</title><rect x="919.4" y="709" width="8.8" height="15.0" fill="rgb(246,11,54)" rx="2" ry="2" />
<text  x="922.37" y="719.5" ></text>
</g>
<g >
<title>core::cmp::min (1 samples, 0.02%)</title><rect x="504.0" y="613" width="0.2" height="15.0" fill="rgb(211,158,20)" rx="2" ry="2" />
<text  x="507.04" y="623.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.02%)</title><rect x="28.0" y="709" width="0.2" height="15.0" fill="rgb(249,142,15)" rx="2" ry="2" />
<text  x="30.96" y="719.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.07%)</title><rect x="119.0" y="581" width="0.8" height="15.0" fill="rgb(227,105,24)" rx="2" ry="2" />
<text  x="121.98" y="591.5" ></text>
</g>
<g >
<title>azx_get_pos_lpib (12 samples, 0.21%)</title><rect x="919.4" y="597" width="2.4" height="15.0" fill="rgb(254,125,42)" rx="2" ry="2" />
<text  x="922.37" y="607.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="973.1" y="613" width="0.2" height="15.0" fill="rgb(230,86,3)" rx="2" ry="2" />
<text  x="976.05" y="623.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (3 samples, 0.05%)</title><rect x="1164.8" y="725" width="0.6" height="15.0" fill="rgb(233,94,48)" rx="2" ry="2" />
<text  x="1167.77" y="735.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (4 samples, 0.07%)</title><rect x="39.7" y="773" width="0.8" height="15.0" fill="rgb(226,194,18)" rx="2" ry="2" />
<text  x="42.67" y="783.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (4 samples, 0.07%)</title><rect x="942.2" y="661" width="0.8" height="15.0" fill="rgb(245,83,49)" rx="2" ry="2" />
<text  x="945.17" y="671.5" ></text>
</g>
<g >
<title>ttwu_do_activate (3 samples, 0.05%)</title><rect x="897.0" y="533" width="0.6" height="15.0" fill="rgb(208,178,25)" rx="2" ry="2" />
<text  x="899.97" y="543.5" ></text>
</g>
<g >
<title>kvfree (1 samples, 0.02%)</title><rect x="896.4" y="661" width="0.2" height="15.0" fill="rgb(225,176,28)" rx="2" ry="2" />
<text  x="899.36" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.09%)</title><rect x="607.8" y="533" width="1.0" height="15.0" fill="rgb(215,98,38)" rx="2" ry="2" />
<text  x="610.77" y="543.5" ></text>
</g>
<g >
<title>gfx_v8_0_eop_irq (2 samples, 0.03%)</title><rect x="969.2" y="533" width="0.4" height="15.0" fill="rgb(224,102,54)" rx="2" ry="2" />
<text  x="972.22" y="543.5" ></text>
</g>
<g >
<title>pollwake (2 samples, 0.03%)</title><rect x="944.8" y="565" width="0.4" height="15.0" fill="rgb(235,223,30)" rx="2" ry="2" />
<text  x="947.80" y="575.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="1169.4" y="581" width="0.2" height="15.0" fill="rgb(239,167,17)" rx="2" ry="2" />
<text  x="1172.42" y="591.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.03%)</title><rect x="723.0" y="533" width="0.4" height="15.0" fill="rgb(250,189,51)" rx="2" ry="2" />
<text  x="726.00" y="543.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="929.1" y="645" width="0.2" height="15.0" fill="rgb(214,179,30)" rx="2" ry="2" />
<text  x="932.06" y="655.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (4 samples, 0.07%)</title><rect x="80.6" y="741" width="0.8" height="15.0" fill="rgb(227,179,13)" rx="2" ry="2" />
<text  x="83.63" y="751.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::pread_syscall (1 samples, 0.02%)</title><rect x="119.8" y="565" width="0.2" height="15.0" fill="rgb(205,224,49)" rx="2" ry="2" />
<text  x="122.79" y="575.5" ></text>
</g>
<g >
<title>start_secondary (1,048 samples, 17.92%)</title><rect x="956.3" y="773" width="211.5" height="15.0" fill="rgb(242,165,14)" rx="2" ry="2" />
<text  x="959.30" y="783.5" >start_secondary</text>
</g>
<g >
<title>drm_update_vblank_count (19 samples, 0.32%)</title><rect x="960.1" y="469" width="3.9" height="15.0" fill="rgb(247,14,26)" rx="2" ry="2" />
<text  x="963.14" y="479.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="594.2" y="597" width="0.3" height="15.0" fill="rgb(207,75,3)" rx="2" ry="2" />
<text  x="597.25" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (56 samples, 0.96%)</title><rect x="598.1" y="597" width="11.3" height="15.0" fill="rgb(252,107,13)" rx="2" ry="2" />
<text  x="601.08" y="607.5" ></text>
</g>
<g >
<title>add_module.constprop.0 (1 samples, 0.02%)</title><rect x="10.6" y="645" width="0.2" height="15.0" fill="rgb(210,150,35)" rx="2" ry="2" />
<text  x="13.61" y="655.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (4 samples, 0.07%)</title><rect x="30.0" y="405" width="0.8" height="15.0" fill="rgb(249,37,8)" rx="2" ry="2" />
<text  x="32.98" y="415.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.02%)</title><rect x="979.3" y="533" width="0.2" height="15.0" fill="rgb(228,182,21)" rx="2" ry="2" />
<text  x="982.31" y="543.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.02%)</title><rect x="723.2" y="341" width="0.2" height="15.0" fill="rgb(240,141,53)" rx="2" ry="2" />
<text  x="726.21" y="351.5" ></text>
</g>
<g >
<title>ext4_da_write_end (4 samples, 0.07%)</title><rect x="37.6" y="581" width="0.9" height="15.0" fill="rgb(230,2,31)" rx="2" ry="2" />
<text  x="40.65" y="591.5" ></text>
</g>
<g >
<title>dispatcher (1,123 samples, 19.21%)</title><rect x="424.3" y="677" width="226.7" height="15.0" fill="rgb(219,136,51)" rx="2" ry="2" />
<text  x="427.32" y="687.5" >dispatcher</text>
</g>
<g >
<title>task_seccomp (1 samples, 0.02%)</title><rect x="28.0" y="517" width="0.2" height="15.0" fill="rgb(237,6,26)" rx="2" ry="2" />
<text  x="30.96" y="527.5" ></text>
</g>
<g >
<title>det_surface_update.isra.0 (2 samples, 0.03%)</title><rect x="952.5" y="629" width="0.4" height="15.0" fill="rgb(246,46,49)" rx="2" ry="2" />
<text  x="955.47" y="639.5" ></text>
</g>
<g >
<title>dup_task_struct (1 samples, 0.02%)</title><rect x="744.0" y="677" width="0.2" height="15.0" fill="rgb(235,120,54)" rx="2" ry="2" />
<text  x="746.99" y="687.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.22%)</title><rect x="603.9" y="501" width="2.7" height="15.0" fill="rgb(214,161,47)" rx="2" ry="2" />
<text  x="606.94" y="511.5" ></text>
</g>
<g >
<title>generic_perform_write (42 samples, 0.72%)</title><rect x="29.0" y="437" width="8.4" height="15.0" fill="rgb(221,5,16)" rx="2" ry="2" />
<text  x="31.97" y="447.5" ></text>
</g>
<g >
<title>NaClMutexLock (36 samples, 0.62%)</title><rect x="98.8" y="725" width="7.3" height="15.0" fill="rgb(220,151,10)" rx="2" ry="2" />
<text  x="101.80" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (26 samples, 0.44%)</title><rect x="619.3" y="565" width="5.2" height="15.0" fill="rgb(245,47,38)" rx="2" ry="2" />
<text  x="622.27" y="575.5" ></text>
</g>
<g >
<title>release_pages (14 samples, 0.24%)</title><rect x="753.5" y="549" width="2.8" height="15.0" fill="rgb(217,34,24)" rx="2" ry="2" />
<text  x="756.48" y="559.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="941.6" y="709" width="0.4" height="15.0" fill="rgb(235,22,3)" rx="2" ry="2" />
<text  x="944.57" y="719.5" ></text>
</g>
<g >
<title>copy_fpregs_to_fpstate (3 samples, 0.05%)</title><rect x="888.5" y="789" width="0.6" height="15.0" fill="rgb(234,44,43)" rx="2" ry="2" />
<text  x="891.49" y="799.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (1 samples, 0.02%)</title><rect x="744.2" y="741" width="0.2" height="15.0" fill="rgb(226,202,4)" rx="2" ry="2" />
<text  x="747.20" y="751.5" ></text>
</g>
<g >
<title>__do_fault (3 samples, 0.05%)</title><rect x="109.9" y="501" width="0.6" height="15.0" fill="rgb(237,162,24)" rx="2" ry="2" />
<text  x="112.90" y="511.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 0.02%)</title><rect x="937.7" y="645" width="0.2" height="15.0" fill="rgb(221,51,49)" rx="2" ry="2" />
<text  x="940.73" y="655.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1169.4" y="533" width="0.2" height="15.0" fill="rgb(236,127,26)" rx="2" ry="2" />
<text  x="1172.42" y="543.5" ></text>
</g>
<g >
<title>exit_mmap (27 samples, 0.46%)</title><rect x="751.1" y="677" width="5.4" height="15.0" fill="rgb(226,89,33)" rx="2" ry="2" />
<text  x="754.06" y="687.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.02%)</title><rect x="714.7" y="613" width="0.2" height="15.0" fill="rgb(248,157,17)" rx="2" ry="2" />
<text  x="717.73" y="623.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1169.2" y="565" width="0.2" height="15.0" fill="rgb(228,198,39)" rx="2" ry="2" />
<text  x="1172.21" y="575.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="986.0" y="613" width="0.2" height="15.0" fill="rgb(246,225,9)" rx="2" ry="2" />
<text  x="988.97" y="623.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="929.1" y="661" width="0.2" height="15.0" fill="rgb(223,54,39)" rx="2" ry="2" />
<text  x="932.06" y="671.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.02%)</title><rect x="10.2" y="517" width="0.2" height="15.0" fill="rgb(216,76,14)" rx="2" ry="2" />
<text  x="13.20" y="527.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (5 samples, 0.09%)</title><rect x="963.0" y="357" width="1.0" height="15.0" fill="rgb(244,49,28)" rx="2" ry="2" />
<text  x="965.96" y="367.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="955.5" y="549" width="0.2" height="15.0" fill="rgb(205,122,29)" rx="2" ry="2" />
<text  x="958.49" y="559.5" ></text>
</g>
<g >
<title>handle_irq_event (53 samples, 0.91%)</title><rect x="959.1" y="613" width="10.7" height="15.0" fill="rgb(242,0,29)" rx="2" ry="2" />
<text  x="962.13" y="623.5" ></text>
</g>
<g >
<title>cpupri_set (1 samples, 0.02%)</title><rect x="897.2" y="469" width="0.2" height="15.0" fill="rgb(227,30,12)" rx="2" ry="2" />
<text  x="900.17" y="479.5" ></text>
</g>
<g >
<title>__GI___nss_lookup (1 samples, 0.02%)</title><rect x="10.2" y="661" width="0.2" height="15.0" fill="rgb(212,58,18)" rx="2" ry="2" />
<text  x="13.20" y="671.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.09%)</title><rect x="606.8" y="533" width="1.0" height="15.0" fill="rgb(210,1,30)" rx="2" ry="2" />
<text  x="609.76" y="543.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="1169.2" y="549" width="0.2" height="15.0" fill="rgb(235,145,6)" rx="2" ry="2" />
<text  x="1172.21" y="559.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="10.2" y="373" width="0.2" height="15.0" fill="rgb(215,166,5)" rx="2" ry="2" />
<text  x="13.20" y="383.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (2 samples, 0.03%)</title><rect x="1165.8" y="645" width="0.4" height="15.0" fill="rgb(244,149,25)" rx="2" ry="2" />
<text  x="1168.78" y="655.5" ></text>
</g>
<g >
<title>unix_stream_read_actor (1 samples, 0.02%)</title><rect x="942.8" y="645" width="0.2" height="15.0" fill="rgb(241,122,10)" rx="2" ry="2" />
<text  x="945.78" y="655.5" ></text>
</g>
<g >
<title>ProcessNaclCallOrJmpAddToRMWithRex (1 samples, 0.02%)</title><rect x="724.2" y="645" width="0.2" height="15.0" fill="rgb(234,20,14)" rx="2" ry="2" />
<text  x="727.22" y="655.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.02%)</title><rect x="979.3" y="517" width="0.2" height="15.0" fill="rgb(248,61,38)" rx="2" ry="2" />
<text  x="982.31" y="527.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="138.4" y="453" width="0.2" height="15.0" fill="rgb(242,95,47)" rx="2" ry="2" />
<text  x="141.35" y="463.5" ></text>
</g>
<g >
<title>poll_freewait (1 samples, 0.02%)</title><rect x="27.8" y="645" width="0.2" height="15.0" fill="rgb(231,203,53)" rx="2" ry="2" />
<text  x="30.76" y="655.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="119.0" y="309" width="0.2" height="15.0" fill="rgb(245,93,19)" rx="2" ry="2" />
<text  x="121.98" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.29%)</title><rect x="632.2" y="565" width="3.4" height="15.0" fill="rgb(226,136,26)" rx="2" ry="2" />
<text  x="635.19" y="575.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="975.9" y="485" width="0.2" height="15.0" fill="rgb(234,170,38)" rx="2" ry="2" />
<text  x="978.88" y="495.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.02%)</title><rect x="743.8" y="741" width="0.2" height="15.0" fill="rgb(248,92,38)" rx="2" ry="2" />
<text  x="746.79" y="751.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (24 samples, 0.41%)</title><rect x="646.1" y="597" width="4.9" height="15.0" fill="rgb(249,192,0)" rx="2" ry="2" />
<text  x="649.11" y="607.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="110.3" y="373" width="0.2" height="15.0" fill="rgb(252,8,24)" rx="2" ry="2" />
<text  x="113.30" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="119.6" y="117" width="0.2" height="15.0" fill="rgb(254,135,32)" rx="2" ry="2" />
<text  x="122.58" y="127.5" ></text>
</g>
<g >
<title>drm_crtc_accurate_vblank_count (18 samples, 0.31%)</title><rect x="965.2" y="501" width="3.6" height="15.0" fill="rgb(216,112,34)" rx="2" ry="2" />
<text  x="968.18" y="511.5" ></text>
</g>
<g >
<title>do_iter_read (1 samples, 0.02%)</title><rect x="119.8" y="341" width="0.2" height="15.0" fill="rgb(207,172,46)" rx="2" ry="2" />
<text  x="122.79" y="351.5" ></text>
</g>
<g >
<title>refresh_cpu_vm_stats (1 samples, 0.02%)</title><rect x="1157.3" y="661" width="0.2" height="15.0" fill="rgb(222,212,37)" rx="2" ry="2" />
<text  x="1160.31" y="671.5" ></text>
</g>
<g >
<title>note_gp_changes (1 samples, 0.02%)</title><rect x="986.4" y="549" width="0.2" height="15.0" fill="rgb(252,223,52)" rx="2" ry="2" />
<text  x="989.37" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (28 samples, 0.48%)</title><rect x="640.5" y="613" width="5.6" height="15.0" fill="rgb(235,85,53)" rx="2" ry="2" />
<text  x="643.46" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.02%)</title><rect x="118.8" y="517" width="0.2" height="15.0" fill="rgb(219,227,37)" rx="2" ry="2" />
<text  x="121.78" y="527.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (1 samples, 0.02%)</title><rect x="37.9" y="549" width="0.2" height="15.0" fill="rgb(240,157,28)" rx="2" ry="2" />
<text  x="40.85" y="559.5" ></text>
</g>
<g >
<title>alloc_page_buffers (1 samples, 0.02%)</title><rect x="30.0" y="373" width="0.2" height="15.0" fill="rgb(252,24,10)" rx="2" ry="2" />
<text  x="32.98" y="383.5" ></text>
</g>
<g >
<title>block_invalidatepage (1 samples, 0.02%)</title><rect x="118.2" y="101" width="0.2" height="15.0" fill="rgb(237,43,1)" rx="2" ry="2" />
<text  x="121.17" y="111.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="539.8" y="549" width="0.2" height="15.0" fill="rgb(236,229,51)" rx="2" ry="2" />
<text  x="542.76" y="559.5" ></text>
</g>
<g >
<title>dc_stream_get_vblank_counter (5 samples, 0.09%)</title><rect x="962.0" y="405" width="1.0" height="15.0" fill="rgb(206,195,8)" rx="2" ry="2" />
<text  x="964.95" y="415.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="119.2" y="101" width="0.2" height="15.0" fill="rgb(219,226,14)" rx="2" ry="2" />
<text  x="122.18" y="111.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (3 samples, 0.05%)</title><rect x="963.2" y="277" width="0.6" height="15.0" fill="rgb(212,129,3)" rx="2" ry="2" />
<text  x="966.16" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (14 samples, 0.24%)</title><rect x="980.7" y="549" width="2.8" height="15.0" fill="rgb(253,110,10)" rx="2" ry="2" />
<text  x="983.72" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (3 samples, 0.05%)</title><rect x="722.8" y="677" width="0.6" height="15.0" fill="rgb(245,74,18)" rx="2" ry="2" />
<text  x="725.80" y="687.5" ></text>
</g>
<g >
<title>__libc_start_main (3 samples, 0.05%)</title><rect x="10.2" y="773" width="0.6" height="15.0" fill="rgb(216,16,31)" rx="2" ry="2" />
<text  x="13.20" y="783.5" ></text>
</g>
<g >
<title>scheduler_tick (11 samples, 0.19%)</title><rect x="981.1" y="517" width="2.2" height="15.0" fill="rgb(251,134,43)" rx="2" ry="2" />
<text  x="984.12" y="527.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.36%)</title><rect x="598.7" y="565" width="4.2" height="15.0" fill="rgb(250,103,25)" rx="2" ry="2" />
<text  x="601.69" y="575.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="744.2" y="277" width="0.2" height="15.0" fill="rgb(228,130,35)" rx="2" ry="2" />
<text  x="747.20" y="287.5" ></text>
</g>
<g >
<title>cpuidle_enter (955 samples, 16.33%)</title><rect x="957.3" y="709" width="192.7" height="15.0" fill="rgb(250,8,32)" rx="2" ry="2" />
<text  x="960.31" y="719.5" >cpuidle_enter</text>
</g>
<g >
<title>snd_pcm_update_hw_ptr (84 samples, 1.44%)</title><rect x="902.4" y="677" width="17.0" height="15.0" fill="rgb(220,32,17)" rx="2" ry="2" />
<text  x="905.42" y="687.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (3 samples, 0.05%)</title><rect x="40.9" y="773" width="0.6" height="15.0" fill="rgb(247,33,41)" rx="2" ry="2" />
<text  x="43.88" y="783.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (3 samples, 0.05%)</title><rect x="723.8" y="757" width="0.6" height="15.0" fill="rgb(210,13,1)" rx="2" ry="2" />
<text  x="726.81" y="767.5" ></text>
</g>
<g >
<title>__wake_up (3 samples, 0.05%)</title><rect x="897.0" y="629" width="0.6" height="15.0" fill="rgb(211,216,0)" rx="2" ry="2" />
<text  x="899.97" y="639.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.02%)</title><rect x="10.2" y="741" width="0.2" height="15.0" fill="rgb(220,131,23)" rx="2" ry="2" />
<text  x="13.20" y="751.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="982.9" y="485" width="0.2" height="15.0" fill="rgb(223,51,12)" rx="2" ry="2" />
<text  x="985.94" y="495.5" ></text>
</g>
<g >
<title>amdgpu_amdkfd_interrupt (1 samples, 0.02%)</title><rect x="899.2" y="469" width="0.2" height="15.0" fill="rgb(251,59,10)" rx="2" ry="2" />
<text  x="902.19" y="479.5" ></text>
</g>
<g >
<title>irq_exit_rcu (14 samples, 0.24%)</title><rect x="970.0" y="645" width="2.8" height="15.0" fill="rgb(248,24,1)" rx="2" ry="2" />
<text  x="973.02" y="655.5" ></text>
</g>
<g >
<title>alx_clean_tx_irq (2 samples, 0.03%)</title><rect x="970.8" y="533" width="0.4" height="15.0" fill="rgb(237,211,38)" rx="2" ry="2" />
<text  x="973.83" y="543.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (3 samples, 0.05%)</title><rect x="397.7" y="741" width="0.6" height="15.0" fill="rgb(253,42,40)" rx="2" ry="2" />
<text  x="400.68" y="751.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="968.6" y="309" width="0.2" height="15.0" fill="rgb(245,224,41)" rx="2" ry="2" />
<text  x="971.61" y="319.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.03%)</title><rect x="539.6" y="613" width="0.4" height="15.0" fill="rgb(243,152,10)" rx="2" ry="2" />
<text  x="542.56" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="27.4" y="709" width="0.6" height="15.0" fill="rgb(245,33,33)" rx="2" ry="2" />
<text  x="30.36" y="719.5" ></text>
</g>
<g >
<title>drm_sched_fence_release_finished (1 samples, 0.02%)</title><rect x="896.6" y="629" width="0.2" height="15.0" fill="rgb(231,185,29)" rx="2" ry="2" />
<text  x="899.56" y="639.5" ></text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="963.0" y="309" width="0.2" height="15.0" fill="rgb(220,194,44)" rx="2" ry="2" />
<text  x="965.96" y="319.5" ></text>
</g>
<g >
<title>prepare_task_switch (2 samples, 0.03%)</title><rect x="1160.9" y="693" width="0.4" height="15.0" fill="rgb(247,139,20)" rx="2" ry="2" />
<text  x="1163.94" y="703.5" ></text>
</g>
<g >
<title>amdgpu_drm_ioctl (32 samples, 0.55%)</title><rect x="893.7" y="741" width="6.5" height="15.0" fill="rgb(210,116,44)" rx="2" ry="2" />
<text  x="896.74" y="751.5" ></text>
</g>
<g >
<title>shmem_fault (3 samples, 0.05%)</title><rect x="109.9" y="485" width="0.6" height="15.0" fill="rgb(251,207,44)" rx="2" ry="2" />
<text  x="112.90" y="495.5" ></text>
</g>
<g >
<title>_dl_start (2 samples, 0.03%)</title><rect x="744.4" y="773" width="0.4" height="15.0" fill="rgb(226,186,24)" rx="2" ry="2" />
<text  x="747.40" y="783.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="890.7" y="693" width="0.2" height="15.0" fill="rgb(227,43,54)" rx="2" ry="2" />
<text  x="893.71" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="722.8" y="709" width="0.6" height="15.0" fill="rgb(208,47,39)" rx="2" ry="2" />
<text  x="725.80" y="719.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="941.4" y="725" width="0.2" height="15.0" fill="rgb(216,158,37)" rx="2" ry="2" />
<text  x="944.37" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (45 samples, 0.77%)</title><rect x="480.8" y="629" width="9.1" height="15.0" fill="rgb(233,85,32)" rx="2" ry="2" />
<text  x="483.83" y="639.5" ></text>
</g>
<g >
<title>dma_fence_signal (2 samples, 0.03%)</title><rect x="969.2" y="501" width="0.4" height="15.0" fill="rgb(215,52,11)" rx="2" ry="2" />
<text  x="972.22" y="511.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (43 samples, 0.74%)</title><rect x="481.2" y="597" width="8.7" height="15.0" fill="rgb(220,168,12)" rx="2" ry="2" />
<text  x="484.23" y="607.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (9 samples, 0.15%)</title><rect x="404.7" y="725" width="1.9" height="15.0" fill="rgb(237,45,54)" rx="2" ry="2" />
<text  x="407.75" y="735.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.02%)</title><rect x="893.3" y="613" width="0.2" height="15.0" fill="rgb(228,36,31)" rx="2" ry="2" />
<text  x="896.34" y="623.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (1 samples, 0.02%)</title><rect x="744.0" y="645" width="0.2" height="15.0" fill="rgb(244,128,12)" rx="2" ry="2" />
<text  x="746.99" y="655.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="118.2" y="229" width="0.2" height="15.0" fill="rgb(239,157,3)" rx="2" ry="2" />
<text  x="121.17" y="239.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="394.7" y="549" width="0.2" height="15.0" fill="rgb(210,207,24)" rx="2" ry="2" />
<text  x="397.66" y="559.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="119.0" y="293" width="0.2" height="15.0" fill="rgb(247,158,19)" rx="2" ry="2" />
<text  x="121.98" y="303.5" ></text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.03%)</title><rect x="489.9" y="581" width="0.4" height="15.0" fill="rgb(217,176,14)" rx="2" ry="2" />
<text  x="492.91" y="591.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="132.7" y="613" width="0.2" height="15.0" fill="rgb(246,171,45)" rx="2" ry="2" />
<text  x="135.70" y="623.5" ></text>
</g>
<g >
<title>__run_hrtimer (2 samples, 0.03%)</title><rect x="1168.2" y="517" width="0.4" height="15.0" fill="rgb(242,73,41)" rx="2" ry="2" />
<text  x="1171.20" y="527.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (1 samples, 0.02%)</title><rect x="990.2" y="549" width="0.2" height="15.0" fill="rgb(229,129,50)" rx="2" ry="2" />
<text  x="993.21" y="559.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="944.0" y="661" width="0.2" height="15.0" fill="rgb(208,84,47)" rx="2" ry="2" />
<text  x="946.99" y="671.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="744.2" y="325" width="0.2" height="15.0" fill="rgb(234,120,6)" rx="2" ry="2" />
<text  x="747.20" y="335.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="983.1" y="501" width="0.2" height="15.0" fill="rgb(249,36,14)" rx="2" ry="2" />
<text  x="986.14" y="511.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 0.12%)</title><rect x="325.0" y="549" width="1.4" height="15.0" fill="rgb(236,2,17)" rx="2" ry="2" />
<text  x="328.03" y="559.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (18 samples, 0.31%)</title><rect x="57.6" y="741" width="3.7" height="15.0" fill="rgb(245,45,10)" rx="2" ry="2" />
<text  x="60.63" y="751.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (2 samples, 0.03%)</title><rect x="38.1" y="517" width="0.4" height="15.0" fill="rgb(217,91,11)" rx="2" ry="2" />
<text  x="41.05" y="527.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="118.6" y="325" width="0.2" height="15.0" fill="rgb(229,110,48)" rx="2" ry="2" />
<text  x="121.58" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::load_fs (1 samples, 0.02%)</title><rect x="744.2" y="709" width="0.2" height="15.0" fill="rgb(211,194,4)" rx="2" ry="2" />
<text  x="747.20" y="719.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.02%)</title><rect x="117.8" y="581" width="0.2" height="15.0" fill="rgb(241,147,49)" rx="2" ry="2" />
<text  x="120.77" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (172 samples, 2.94%)</title><rect x="893.7" y="757" width="34.8" height="15.0" fill="rgb(232,142,18)" rx="2" ry="2" />
<text  x="896.74" y="767.5" >__..</text>
</g>
<g >
<title>arch_do_signal_or_restart (2 samples, 0.03%)</title><rect x="756.7" y="709" width="0.4" height="15.0" fill="rgb(217,224,30)" rx="2" ry="2" />
<text  x="759.71" y="719.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (5 samples, 0.09%)</title><rect x="30.8" y="373" width="1.0" height="15.0" fill="rgb(253,135,14)" rx="2" ry="2" />
<text  x="33.79" y="383.5" ></text>
</g>
<g >
<title>drm_sched_fence_finished (2 samples, 0.03%)</title><rect x="969.2" y="453" width="0.4" height="15.0" fill="rgb(210,49,54)" rx="2" ry="2" />
<text  x="972.22" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (34 samples, 0.58%)</title><rect x="586.8" y="565" width="6.8" height="15.0" fill="rgb(235,101,46)" rx="2" ry="2" />
<text  x="589.78" y="575.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.02%)</title><rect x="1188.4" y="581" width="0.2" height="15.0" fill="rgb(229,61,28)" rx="2" ry="2" />
<text  x="1191.39" y="591.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="62.1" y="741" width="0.4" height="15.0" fill="rgb(225,87,28)" rx="2" ry="2" />
<text  x="65.07" y="751.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="756.5" y="469" width="0.2" height="15.0" fill="rgb(243,101,53)" rx="2" ry="2" />
<text  x="759.51" y="479.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (4 samples, 0.07%)</title><rect x="119.0" y="613" width="0.8" height="15.0" fill="rgb(218,111,22)" rx="2" ry="2" />
<text  x="121.98" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (55 samples, 0.94%)</title><rect x="489.9" y="629" width="11.1" height="15.0" fill="rgb(236,42,41)" rx="2" ry="2" />
<text  x="492.91" y="639.5" ></text>
</g>
<g >
<title>memcpy_erms (2 samples, 0.03%)</title><rect x="955.7" y="677" width="0.4" height="15.0" fill="rgb(214,186,28)" rx="2" ry="2" />
<text  x="958.70" y="687.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="599.1" y="501" width="0.2" height="15.0" fill="rgb(236,125,50)" rx="2" ry="2" />
<text  x="602.09" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (10 samples, 0.17%)</title><rect x="320.4" y="533" width="2.0" height="15.0" fill="rgb(247,201,21)" rx="2" ry="2" />
<text  x="323.39" y="543.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (4 samples, 0.07%)</title><rect x="968.0" y="373" width="0.8" height="15.0" fill="rgb(214,229,54)" rx="2" ry="2" />
<text  x="971.01" y="383.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (6 samples, 0.10%)</title><rect x="928.7" y="725" width="1.2" height="15.0" fill="rgb(242,6,39)" rx="2" ry="2" />
<text  x="931.65" y="735.5" ></text>
</g>
<g >
<title>serde_json::de::from_str (1 samples, 0.02%)</title><rect x="744.2" y="677" width="0.2" height="15.0" fill="rgb(221,58,0)" rx="2" ry="2" />
<text  x="747.20" y="687.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (3 samples, 0.05%)</title><rect x="963.2" y="309" width="0.6" height="15.0" fill="rgb(232,76,30)" rx="2" ry="2" />
<text  x="966.16" y="319.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (3 samples, 0.05%)</title><rect x="109.9" y="645" width="0.6" height="15.0" fill="rgb(227,3,45)" rx="2" ry="2" />
<text  x="112.90" y="655.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (46 samples, 0.79%)</title><rect x="398.3" y="741" width="9.3" height="15.0" fill="rgb(233,107,18)" rx="2" ry="2" />
<text  x="401.29" y="751.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.02%)</title><rect x="61.9" y="725" width="0.2" height="15.0" fill="rgb(248,9,14)" rx="2" ry="2" />
<text  x="64.87" y="735.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="950.6" y="549" width="0.3" height="15.0" fill="rgb(242,21,16)" rx="2" ry="2" />
<text  x="953.65" y="559.5" ></text>
</g>
<g >
<title>cs_watchdog_read (1 samples, 0.02%)</title><rect x="990.8" y="517" width="0.2" height="15.0" fill="rgb(214,144,3)" rx="2" ry="2" />
<text  x="993.81" y="527.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="752.5" y="549" width="0.2" height="15.0" fill="rgb(243,159,11)" rx="2" ry="2" />
<text  x="755.47" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 1.37%)</title><rect x="11.2" y="661" width="16.2" height="15.0" fill="rgb(231,115,16)" rx="2" ry="2" />
<text  x="14.21" y="671.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="947.6" y="629" width="0.2" height="15.0" fill="rgb(242,93,34)" rx="2" ry="2" />
<text  x="950.62" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="118.8" y="469" width="0.2" height="15.0" fill="rgb(234,78,30)" rx="2" ry="2" />
<text  x="121.78" y="479.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (3 samples, 0.05%)</title><rect x="963.2" y="293" width="0.6" height="15.0" fill="rgb(218,223,14)" rx="2" ry="2" />
<text  x="966.16" y="303.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (5 samples, 0.09%)</title><rect x="37.4" y="613" width="1.1" height="15.0" fill="rgb(251,68,38)" rx="2" ry="2" />
<text  x="40.45" y="623.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.02%)</title><rect x="1186.6" y="613" width="0.2" height="15.0" fill="rgb(247,143,5)" rx="2" ry="2" />
<text  x="1189.57" y="623.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (1 samples, 0.02%)</title><rect x="1148.4" y="661" width="0.2" height="15.0" fill="rgb(233,78,44)" rx="2" ry="2" />
<text  x="1151.43" y="671.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (1 samples, 0.02%)</title><rect x="118.6" y="261" width="0.2" height="15.0" fill="rgb(243,105,15)" rx="2" ry="2" />
<text  x="121.58" y="271.5" ></text>
</g>
<g >
<title>pick_next_task_dl (1 samples, 0.02%)</title><rect x="1159.7" y="693" width="0.2" height="15.0" fill="rgb(233,142,21)" rx="2" ry="2" />
<text  x="1162.73" y="703.5" ></text>
</g>
<g >
<title>internal_get_user_pages_fast (1 samples, 0.02%)</title><rect x="892.5" y="661" width="0.2" height="15.0" fill="rgb(237,190,15)" rx="2" ry="2" />
<text  x="895.53" y="671.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="898.6" y="613" width="0.2" height="15.0" fill="rgb(234,119,23)" rx="2" ry="2" />
<text  x="901.58" y="623.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="32.4" y="325" width="0.2" height="15.0" fill="rgb(225,178,7)" rx="2" ry="2" />
<text  x="35.40" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21 samples, 0.36%)</title><rect x="598.7" y="549" width="4.2" height="15.0" fill="rgb(212,201,19)" rx="2" ry="2" />
<text  x="601.69" y="559.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="39.1" y="773" width="0.2" height="15.0" fill="rgb(234,41,1)" rx="2" ry="2" />
<text  x="42.06" y="783.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="983.7" y="597" width="0.2" height="15.0" fill="rgb(215,118,12)" rx="2" ry="2" />
<text  x="986.75" y="607.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (2 samples, 0.03%)</title><rect x="29.6" y="405" width="0.4" height="15.0" fill="rgb(230,89,24)" rx="2" ry="2" />
<text  x="32.58" y="415.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (24 samples, 0.41%)</title><rect x="56.4" y="773" width="4.9" height="15.0" fill="rgb(205,73,54)" rx="2" ry="2" />
<text  x="59.42" y="783.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (1,155 samples, 19.75%)</title><rect x="417.9" y="709" width="233.1" height="15.0" fill="rgb(250,151,12)" rx="2" ry="2" />
<text  x="420.86" y="719.5" >NaClHostDescWrite</text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.02%)</title><rect x="118.6" y="245" width="0.2" height="15.0" fill="rgb(231,182,13)" rx="2" ry="2" />
<text  x="121.58" y="255.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.17%)</title><rect x="636.0" y="565" width="2.0" height="15.0" fill="rgb(209,15,10)" rx="2" ry="2" />
<text  x="639.02" y="575.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.02%)</title><rect x="957.1" y="709" width="0.2" height="15.0" fill="rgb(218,173,5)" rx="2" ry="2" />
<text  x="960.11" y="719.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="945.0" y="517" width="0.2" height="15.0" fill="rgb(232,42,45)" rx="2" ry="2" />
<text  x="948.00" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (16 samples, 0.27%)</title><rect x="437.4" y="581" width="3.3" height="15.0" fill="rgb(219,118,52)" rx="2" ry="2" />
<text  x="440.44" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (1 samples, 0.02%)</title><rect x="118.2" y="437" width="0.2" height="15.0" fill="rgb(238,10,14)" rx="2" ry="2" />
<text  x="121.17" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="10.8" y="613" width="0.2" height="15.0" fill="rgb(220,101,39)" rx="2" ry="2" />
<text  x="13.81" y="623.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="950.6" y="581" width="0.3" height="15.0" fill="rgb(218,199,26)" rx="2" ry="2" />
<text  x="953.65" y="591.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (2 samples, 0.03%)</title><rect x="949.8" y="533" width="0.4" height="15.0" fill="rgb(205,98,7)" rx="2" ry="2" />
<text  x="952.84" y="543.5" ></text>
</g>
<g >
<title>alloc_empty_file (1 samples, 0.02%)</title><rect x="10.8" y="517" width="0.2" height="15.0" fill="rgb(241,74,38)" rx="2" ry="2" />
<text  x="13.81" y="527.5" ></text>
</g>
<g >
<title>schedule_idle (5 samples, 0.09%)</title><rect x="1188.0" y="661" width="1.0" height="15.0" fill="rgb(244,131,54)" rx="2" ry="2" />
<text  x="1190.98" y="671.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.0 (1 samples, 0.02%)</title><rect x="1189.0" y="629" width="0.2" height="15.0" fill="rgb(213,80,27)" rx="2" ry="2" />
<text  x="1191.99" y="639.5" ></text>
</g>
<g >
<title>drm_crtc_send_vblank_event (2 samples, 0.03%)</title><rect x="968.8" y="501" width="0.4" height="15.0" fill="rgb(208,107,20)" rx="2" ry="2" />
<text  x="971.81" y="511.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.02%)</title><rect x="756.5" y="533" width="0.2" height="15.0" fill="rgb(213,196,3)" rx="2" ry="2" />
<text  x="759.51" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="61.9" y="757" width="0.2" height="15.0" fill="rgb(227,110,27)" rx="2" ry="2" />
<text  x="64.87" y="767.5" ></text>
</g>
<g >
<title>poll_idle (17 samples, 0.29%)</title><rect x="1144.8" y="677" width="3.4" height="15.0" fill="rgb(238,174,40)" rx="2" ry="2" />
<text  x="1147.79" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (1 samples, 0.02%)</title><rect x="120.6" y="581" width="0.2" height="15.0" fill="rgb(240,82,26)" rx="2" ry="2" />
<text  x="123.59" y="591.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (46 samples, 0.79%)</title><rect x="28.2" y="725" width="9.2" height="15.0" fill="rgb(212,13,8)" rx="2" ry="2" />
<text  x="31.16" y="735.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="968.8" y="469" width="0.2" height="15.0" fill="rgb(223,98,0)" rx="2" ry="2" />
<text  x="971.81" y="479.5" ></text>
</g>
<g >
<title>std::sync::once::Once::is_completed (1 samples, 0.02%)</title><rect x="454.2" y="533" width="0.2" height="15.0" fill="rgb(251,175,20)" rx="2" ry="2" />
<text  x="457.19" y="543.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (2 samples, 0.03%)</title><rect x="1155.3" y="629" width="0.4" height="15.0" fill="rgb(217,30,3)" rx="2" ry="2" />
<text  x="1158.29" y="639.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (16 samples, 0.27%)</title><rect x="132.9" y="597" width="3.2" height="15.0" fill="rgb(245,69,20)" rx="2" ry="2" />
<text  x="135.90" y="607.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="394.7" y="565" width="0.2" height="15.0" fill="rgb(240,135,18)" rx="2" ry="2" />
<text  x="397.66" y="575.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (3 samples, 0.05%)</title><rect x="724.4" y="773" width="0.6" height="15.0" fill="rgb(240,172,39)" rx="2" ry="2" />
<text  x="727.42" y="783.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (1 samples, 0.02%)</title><rect x="120.4" y="549" width="0.2" height="15.0" fill="rgb(241,101,42)" rx="2" ry="2" />
<text  x="123.39" y="559.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="1168.8" y="533" width="0.2" height="15.0" fill="rgb(229,119,50)" rx="2" ry="2" />
<text  x="1171.81" y="543.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (43 samples, 0.74%)</title><rect x="28.8" y="485" width="8.6" height="15.0" fill="rgb(234,179,26)" rx="2" ry="2" />
<text  x="31.77" y="495.5" ></text>
</g>
<g >
<title>drm_sched_entity_push_job (3 samples, 0.05%)</title><rect x="897.0" y="661" width="0.6" height="15.0" fill="rgb(253,183,39)" rx="2" ry="2" />
<text  x="899.97" y="671.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (1 samples, 0.02%)</title><rect x="1186.0" y="613" width="0.2" height="15.0" fill="rgb(253,218,26)" rx="2" ry="2" />
<text  x="1188.96" y="623.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (8 samples, 0.14%)</title><rect x="946.6" y="757" width="1.6" height="15.0" fill="rgb(211,3,31)" rx="2" ry="2" />
<text  x="949.61" y="767.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (3 samples, 0.05%)</title><rect x="651.0" y="725" width="0.6" height="15.0" fill="rgb(233,15,5)" rx="2" ry="2" />
<text  x="653.96" y="735.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (17 samples, 0.29%)</title><rect x="29.6" y="421" width="3.4" height="15.0" fill="rgb(251,172,44)" rx="2" ry="2" />
<text  x="32.58" y="431.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.02%)</title><rect x="1189.6" y="677" width="0.2" height="15.0" fill="rgb(239,103,39)" rx="2" ry="2" />
<text  x="1192.60" y="687.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (3 samples, 0.05%)</title><rect x="1153.9" y="645" width="0.6" height="15.0" fill="rgb(217,175,42)" rx="2" ry="2" />
<text  x="1156.88" y="655.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (2 samples, 0.03%)</title><rect x="723.0" y="453" width="0.4" height="15.0" fill="rgb(223,151,54)" rx="2" ry="2" />
<text  x="726.00" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_writev (6 samples, 0.10%)</title><rect x="944.2" y="757" width="1.2" height="15.0" fill="rgb(248,104,27)" rx="2" ry="2" />
<text  x="947.19" y="767.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (1 samples, 0.02%)</title><rect x="744.2" y="501" width="0.2" height="15.0" fill="rgb(217,82,26)" rx="2" ry="2" />
<text  x="747.20" y="511.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (15 samples, 0.26%)</title><rect x="753.3" y="565" width="3.0" height="15.0" fill="rgb(231,124,3)" rx="2" ry="2" />
<text  x="756.28" y="575.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (4 samples, 0.07%)</title><rect x="963.0" y="341" width="0.8" height="15.0" fill="rgb(224,188,1)" rx="2" ry="2" />
<text  x="965.96" y="351.5" ></text>
</g>
<g >
<title>do_exit (2 samples, 0.03%)</title><rect x="756.7" y="661" width="0.4" height="15.0" fill="rgb(224,54,18)" rx="2" ry="2" />
<text  x="759.71" y="671.5" ></text>
</g>
<g >
<title>kick_ilb (2 samples, 0.03%)</title><rect x="1160.3" y="645" width="0.4" height="15.0" fill="rgb(253,43,47)" rx="2" ry="2" />
<text  x="1163.33" y="655.5" ></text>
</g>
<g >
<title>dlerror_run (1 samples, 0.02%)</title><rect x="10.2" y="597" width="0.2" height="15.0" fill="rgb(233,226,21)" rx="2" ry="2" />
<text  x="13.20" y="607.5" ></text>
</g>
<g >
<title>dm_pflip_high_irq (26 samples, 0.44%)</title><rect x="964.0" y="517" width="5.2" height="15.0" fill="rgb(246,15,35)" rx="2" ry="2" />
<text  x="966.97" y="527.5" ></text>
</g>
<g >
<title>drm_crtc_vblank_helper_get_vblank_timestamp_internal (5 samples, 0.09%)</title><rect x="963.0" y="421" width="1.0" height="15.0" fill="rgb(228,11,12)" rx="2" ry="2" />
<text  x="965.96" y="431.5" ></text>
</g>
<g >
<title>free_unref_page_commit (7 samples, 0.12%)</title><rect x="754.7" y="517" width="1.4" height="15.0" fill="rgb(227,162,54)" rx="2" ry="2" />
<text  x="757.69" y="527.5" ></text>
</g>
<g >
<title>commit_work (40 samples, 0.68%)</title><rect x="948.2" y="725" width="8.1" height="15.0" fill="rgb(224,146,46)" rx="2" ry="2" />
<text  x="951.23" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (3 samples, 0.05%)</title><rect x="395.1" y="629" width="0.6" height="15.0" fill="rgb(235,19,52)" rx="2" ry="2" />
<text  x="398.06" y="639.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 0.02%)</title><rect x="1159.5" y="693" width="0.2" height="15.0" fill="rgb(224,185,21)" rx="2" ry="2" />
<text  x="1162.53" y="703.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.02%)</title><rect x="119.2" y="245" width="0.2" height="15.0" fill="rgb(207,103,1)" rx="2" ry="2" />
<text  x="122.18" y="255.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (1 samples, 0.02%)</title><rect x="118.2" y="501" width="0.2" height="15.0" fill="rgb(252,100,3)" rx="2" ry="2" />
<text  x="121.17" y="511.5" ></text>
</g>
<g >
<title>lockless_pages_from_mm (3 samples, 0.05%)</title><rect x="892.7" y="661" width="0.6" height="15.0" fill="rgb(228,160,42)" rx="2" ry="2" />
<text  x="895.73" y="671.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (6 samples, 0.10%)</title><rect x="964.0" y="485" width="1.2" height="15.0" fill="rgb(206,217,43)" rx="2" ry="2" />
<text  x="966.97" y="495.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.02%)</title><rect x="119.2" y="181" width="0.2" height="15.0" fill="rgb(220,78,47)" rx="2" ry="2" />
<text  x="122.18" y="191.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (10 samples, 0.17%)</title><rect x="713.3" y="629" width="2.0" height="15.0" fill="rgb(252,149,31)" rx="2" ry="2" />
<text  x="716.32" y="639.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 0.03%)</title><rect x="1156.3" y="677" width="0.4" height="15.0" fill="rgb(226,2,28)" rx="2" ry="2" />
<text  x="1159.30" y="687.5" ></text>
</g>
<g >
<title>perf_poll (2 samples, 0.03%)</title><rect x="27.4" y="629" width="0.4" height="15.0" fill="rgb(221,56,31)" rx="2" ry="2" />
<text  x="30.36" y="639.5" ></text>
</g>
<g >
<title>core::cmp::min_by (6 samples, 0.10%)</title><rect x="132.9" y="581" width="1.2" height="15.0" fill="rgb(249,6,23)" rx="2" ry="2" />
<text  x="135.90" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (147 samples, 2.51%)</title><rect x="268.9" y="565" width="29.7" height="15.0" fill="rgb(242,184,44)" rx="2" ry="2" />
<text  x="271.93" y="575.5" >co..</text>
</g>
<g >
<title>cpuidle_idle_call (992 samples, 16.97%)</title><rect x="957.3" y="725" width="200.2" height="15.0" fill="rgb(226,105,14)" rx="2" ry="2" />
<text  x="960.31" y="735.5" >cpuidle_idle_call</text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="394.7" y="629" width="0.2" height="15.0" fill="rgb(251,147,34)" rx="2" ry="2" />
<text  x="397.66" y="639.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (2 samples, 0.03%)</title><rect x="964.8" y="405" width="0.4" height="15.0" fill="rgb(214,165,47)" rx="2" ry="2" />
<text  x="967.78" y="415.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (9 samples, 0.15%)</title><rect x="965.2" y="421" width="1.8" height="15.0" fill="rgb(244,90,48)" rx="2" ry="2" />
<text  x="968.18" y="431.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (1 samples, 0.02%)</title><rect x="119.6" y="261" width="0.2" height="15.0" fill="rgb(221,16,19)" rx="2" ry="2" />
<text  x="122.58" y="271.5" ></text>
</g>
<g >
<title>update_curr_rt (4 samples, 0.07%)</title><rect x="936.1" y="613" width="0.8" height="15.0" fill="rgb(205,112,11)" rx="2" ry="2" />
<text  x="939.12" y="623.5" ></text>
</g>
<g >
<title>vfs_iter_read (1 samples, 0.02%)</title><rect x="120.6" y="437" width="0.2" height="15.0" fill="rgb(234,89,11)" rx="2" ry="2" />
<text  x="123.59" y="447.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.02%)</title><rect x="890.7" y="709" width="0.2" height="15.0" fill="rgb(254,60,45)" rx="2" ry="2" />
<text  x="893.71" y="719.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (3 samples, 0.05%)</title><rect x="35.0" y="325" width="0.6" height="15.0" fill="rgb(223,59,10)" rx="2" ry="2" />
<text  x="38.02" y="335.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.02%)</title><rect x="756.5" y="645" width="0.2" height="15.0" fill="rgb(209,200,52)" rx="2" ry="2" />
<text  x="759.51" y="655.5" ></text>
</g>
<g >
<title>down_read_trylock (3 samples, 0.05%)</title><rect x="696.8" y="725" width="0.6" height="15.0" fill="rgb(249,227,35)" rx="2" ry="2" />
<text  x="699.77" y="735.5" ></text>
</g>
<g >
<title>_dl_open (1 samples, 0.02%)</title><rect x="10.2" y="533" width="0.2" height="15.0" fill="rgb(238,156,3)" rx="2" ry="2" />
<text  x="13.20" y="543.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="948.0" y="741" width="0.2" height="15.0" fill="rgb(225,75,39)" rx="2" ry="2" />
<text  x="951.03" y="751.5" ></text>
</g>
<g >
<title>do_exit (28 samples, 0.48%)</title><rect x="751.1" y="725" width="5.6" height="15.0" fill="rgb(206,59,46)" rx="2" ry="2" />
<text  x="754.06" y="735.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="119.2" y="85" width="0.2" height="15.0" fill="rgb(220,91,22)" rx="2" ry="2" />
<text  x="122.18" y="95.5" ></text>
</g>
<g >
<title>handle_pte_fault (87 samples, 1.49%)</title><rect x="699.8" y="693" width="17.6" height="15.0" fill="rgb(252,186,51)" rx="2" ry="2" />
<text  x="702.80" y="703.5" ></text>
</g>
<g >
<title>futex_wake (5 samples, 0.09%)</title><rect x="892.7" y="725" width="1.0" height="15.0" fill="rgb(225,127,38)" rx="2" ry="2" />
<text  x="895.73" y="735.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (2 samples, 0.03%)</title><rect x="891.3" y="709" width="0.4" height="15.0" fill="rgb(235,102,38)" rx="2" ry="2" />
<text  x="894.32" y="719.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.02%)</title><rect x="756.1" y="517" width="0.2" height="15.0" fill="rgb(231,198,28)" rx="2" ry="2" />
<text  x="759.10" y="527.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="1160.1" y="645" width="0.2" height="15.0" fill="rgb(236,122,17)" rx="2" ry="2" />
<text  x="1163.13" y="655.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="33.0" y="341" width="0.2" height="15.0" fill="rgb(242,135,45)" rx="2" ry="2" />
<text  x="36.01" y="351.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (4 samples, 0.07%)</title><rect x="972.0" y="517" width="0.8" height="15.0" fill="rgb(227,31,48)" rx="2" ry="2" />
<text  x="975.04" y="527.5" ></text>
</g>
<g >
<title>dm_read_reg_func (5 samples, 0.09%)</title><rect x="965.2" y="357" width="1.0" height="15.0" fill="rgb(213,9,24)" rx="2" ry="2" />
<text  x="968.18" y="367.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="934.1" y="629" width="0.2" height="15.0" fill="rgb(251,207,36)" rx="2" ry="2" />
<text  x="937.10" y="639.5" ></text>
</g>
<g >
<title>copy_page_from_iter_iovec (1 samples, 0.02%)</title><rect x="722.8" y="597" width="0.2" height="15.0" fill="rgb(240,180,11)" rx="2" ry="2" />
<text  x="725.80" y="607.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="987.2" y="549" width="0.2" height="15.0" fill="rgb(211,32,15)" rx="2" ry="2" />
<text  x="990.18" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (1 samples, 0.02%)</title><rect x="118.6" y="581" width="0.2" height="15.0" fill="rgb(237,76,33)" rx="2" ry="2" />
<text  x="121.58" y="591.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.02%)</title><rect x="546.2" y="549" width="0.2" height="15.0" fill="rgb(232,133,42)" rx="2" ry="2" />
<text  x="549.22" y="559.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_init (1 samples, 0.02%)</title><rect x="454.2" y="597" width="0.2" height="15.0" fill="rgb(212,64,6)" rx="2" ry="2" />
<text  x="457.19" y="607.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_vblank_counter (5 samples, 0.09%)</title><rect x="967.0" y="405" width="1.0" height="15.0" fill="rgb(211,149,47)" rx="2" ry="2" />
<text  x="970.00" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="723.4" y="725" width="0.2" height="15.0" fill="rgb(242,0,10)" rx="2" ry="2" />
<text  x="726.41" y="735.5" ></text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.05%)</title><rect x="897.0" y="597" width="0.6" height="15.0" fill="rgb(246,153,26)" rx="2" ry="2" />
<text  x="899.97" y="607.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="928.7" y="613" width="0.2" height="15.0" fill="rgb(250,134,4)" rx="2" ry="2" />
<text  x="931.65" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="119.6" y="181" width="0.2" height="15.0" fill="rgb(245,158,47)" rx="2" ry="2" />
<text  x="122.58" y="191.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (5 samples, 0.09%)</title><rect x="965.2" y="325" width="1.0" height="15.0" fill="rgb(227,122,31)" rx="2" ry="2" />
<text  x="968.18" y="335.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (1 samples, 0.02%)</title><rect x="116.8" y="661" width="0.2" height="15.0" fill="rgb(227,29,34)" rx="2" ry="2" />
<text  x="119.76" y="671.5" ></text>
</g>
<g >
<title>NaClTextMapWrapper (3 samples, 0.05%)</title><rect x="109.9" y="709" width="0.6" height="15.0" fill="rgb(254,129,41)" rx="2" ry="2" />
<text  x="112.90" y="719.5" ></text>
</g>
<g >
<title>ovl_inode_real (1 samples, 0.02%)</title><rect x="28.6" y="517" width="0.2" height="15.0" fill="rgb(237,52,31)" rx="2" ry="2" />
<text  x="31.57" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (33 samples, 0.56%)</title><rect x="549.0" y="533" width="6.7" height="15.0" fill="rgb(233,184,38)" rx="2" ry="2" />
<text  x="552.04" y="543.5" ></text>
</g>
<g >
<title>pick_next_task_stop (1 samples, 0.02%)</title><rect x="939.8" y="661" width="0.2" height="15.0" fill="rgb(242,78,26)" rx="2" ry="2" />
<text  x="942.75" y="671.5" ></text>
</g>
<g >
<title>psi_group_change (4 samples, 0.07%)</title><rect x="1162.1" y="677" width="0.9" height="15.0" fill="rgb(232,220,31)" rx="2" ry="2" />
<text  x="1165.15" y="687.5" ></text>
</g>
<g >
<title>core::cmp::min (16 samples, 0.27%)</title><rect x="132.9" y="613" width="3.2" height="15.0" fill="rgb(243,200,32)" rx="2" ry="2" />
<text  x="135.90" y="623.5" ></text>
</g>
<g >
<title>_nc_get_screensize (1 samples, 0.02%)</title><rect x="10.0" y="773" width="0.2" height="15.0" fill="rgb(237,179,19)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>interrupt_is_wanted (1 samples, 0.02%)</title><rect x="899.2" y="453" width="0.2" height="15.0" fill="rgb(250,174,3)" rx="2" ry="2" />
<text  x="902.19" y="463.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="929.3" y="661" width="0.2" height="15.0" fill="rgb(243,146,50)" rx="2" ry="2" />
<text  x="932.26" y="671.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="983.5" y="565" width="0.2" height="15.0" fill="rgb(207,81,5)" rx="2" ry="2" />
<text  x="986.55" y="575.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (1 samples, 0.02%)</title><rect x="62.5" y="725" width="0.2" height="15.0" fill="rgb(216,58,18)" rx="2" ry="2" />
<text  x="65.47" y="735.5" ></text>
</g>
<g >
<title>dc_create_state (4 samples, 0.07%)</title><rect x="953.1" y="677" width="0.8" height="15.0" fill="rgb(221,163,44)" rx="2" ry="2" />
<text  x="956.07" y="687.5" ></text>
</g>
<g >
<title>dm_crtc_high_irq (19 samples, 0.32%)</title><rect x="960.1" y="517" width="3.9" height="15.0" fill="rgb(251,12,21)" rx="2" ry="2" />
<text  x="963.14" y="527.5" ></text>
</g>
<g >
<title>vfs_iter_write (5 samples, 0.09%)</title><rect x="37.4" y="677" width="1.1" height="15.0" fill="rgb(249,179,41)" rx="2" ry="2" />
<text  x="40.45" y="687.5" ></text>
</g>
<g >
<title>radix_tree_lookup (1 samples, 0.02%)</title><rect x="899.6" y="629" width="0.2" height="15.0" fill="rgb(212,180,27)" rx="2" ry="2" />
<text  x="902.59" y="639.5" ></text>
</g>
<g >
<title>sync_regs (17 samples, 0.29%)</title><rect x="719.0" y="773" width="3.4" height="15.0" fill="rgb(205,39,18)" rx="2" ry="2" />
<text  x="721.97" y="783.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (4 samples, 0.07%)</title><rect x="119.0" y="597" width="0.8" height="15.0" fill="rgb(222,147,18)" rx="2" ry="2" />
<text  x="121.98" y="607.5" ></text>
</g>
<g >
<title>update_pvclock_gtod (1 samples, 0.02%)</title><rect x="980.5" y="453" width="0.2" height="15.0" fill="rgb(229,176,28)" rx="2" ry="2" />
<text  x="983.52" y="463.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (8 samples, 0.14%)</title><rect x="715.3" y="661" width="1.7" height="15.0" fill="rgb(245,215,18)" rx="2" ry="2" />
<text  x="718.34" y="671.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_vblank_counter (1 samples, 0.02%)</title><rect x="950.4" y="613" width="0.2" height="15.0" fill="rgb(218,173,42)" rx="2" ry="2" />
<text  x="953.45" y="623.5" ></text>
</g>
<g >
<title>local_touch_nmi (1 samples, 0.02%)</title><rect x="1158.3" y="725" width="0.2" height="15.0" fill="rgb(232,46,22)" rx="2" ry="2" />
<text  x="1161.32" y="735.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (6 samples, 0.10%)</title><rect x="502.8" y="613" width="1.2" height="15.0" fill="rgb(208,193,40)" rx="2" ry="2" />
<text  x="505.83" y="623.5" ></text>
</g>
<g >
<title>ext4_add_nondir (1 samples, 0.02%)</title><rect x="118.8" y="245" width="0.2" height="15.0" fill="rgb(219,18,4)" rx="2" ry="2" />
<text  x="121.78" y="255.5" ></text>
</g>
<g >
<title>amdgpu_cs_ib_fill (2 samples, 0.03%)</title><rect x="894.7" y="677" width="0.5" height="15.0" fill="rgb(218,89,4)" rx="2" ry="2" />
<text  x="897.75" y="687.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="33.4" y="309" width="0.2" height="15.0" fill="rgb(215,138,37)" rx="2" ry="2" />
<text  x="36.41" y="319.5" ></text>
</g>
<g >
<title>dc_stream_get_vblank_counter (1 samples, 0.02%)</title><rect x="950.2" y="645" width="0.2" height="15.0" fill="rgb(247,128,52)" rx="2" ry="2" />
<text  x="953.25" y="655.5" ></text>
</g>
<g >
<title>idr_find (1 samples, 0.02%)</title><rect x="899.6" y="645" width="0.2" height="15.0" fill="rgb(223,184,21)" rx="2" ry="2" />
<text  x="902.59" y="655.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (2 samples, 0.03%)</title><rect x="756.7" y="629" width="0.4" height="15.0" fill="rgb(226,164,5)" rx="2" ry="2" />
<text  x="759.71" y="639.5" ></text>
</g>
<g >
<title>NaClSysWrite (1,229 samples, 21.02%)</title><rect x="407.6" y="741" width="248.0" height="15.0" fill="rgb(239,202,52)" rx="2" ry="2" />
<text  x="410.57" y="751.5" >NaClSysWrite</text>
</g>
<g >
<title>NaClSysDyncodeCreate (47 samples, 0.80%)</title><rect x="108.7" y="741" width="9.5" height="15.0" fill="rgb(213,143,43)" rx="2" ry="2" />
<text  x="111.69" y="751.5" ></text>
</g>
<g >
<title>_rl_set_screen_size (1 samples, 0.02%)</title><rect x="10.4" y="661" width="0.2" height="15.0" fill="rgb(218,174,44)" rx="2" ry="2" />
<text  x="13.40" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="118.6" y="549" width="0.2" height="15.0" fill="rgb(208,28,29)" rx="2" ry="2" />
<text  x="121.58" y="559.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="983.1" y="485" width="0.2" height="15.0" fill="rgb(241,15,34)" rx="2" ry="2" />
<text  x="986.14" y="495.5" ></text>
</g>
<g >
<title>free_unref_page_list (7 samples, 0.12%)</title><rect x="754.7" y="533" width="1.4" height="15.0" fill="rgb(207,0,14)" rx="2" ry="2" />
<text  x="757.69" y="543.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 1.09%)</title><rect x="14.2" y="485" width="13.0" height="15.0" fill="rgb(248,9,33)" rx="2" ry="2" />
<text  x="17.24" y="495.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (3 samples, 0.05%)</title><rect x="723.8" y="677" width="0.6" height="15.0" fill="rgb(240,21,27)" rx="2" ry="2" />
<text  x="726.81" y="687.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (3 samples, 0.05%)</title><rect x="968.0" y="341" width="0.6" height="15.0" fill="rgb(223,49,40)" rx="2" ry="2" />
<text  x="971.01" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (63 samples, 1.08%)</title><rect x="330.1" y="565" width="12.7" height="15.0" fill="rgb(212,117,7)" rx="2" ry="2" />
<text  x="333.08" y="575.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (175 samples, 2.99%)</title><rect x="504.2" y="597" width="35.4" height="15.0" fill="rgb(207,176,10)" rx="2" ry="2" />
<text  x="507.24" y="607.5" >&lt;s..</text>
</g>
<g >
<title>__getblk_gfp (1 samples, 0.02%)</title><rect x="35.4" y="293" width="0.2" height="15.0" fill="rgb(213,136,14)" rx="2" ry="2" />
<text  x="38.43" y="303.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.02%)</title><rect x="743.8" y="757" width="0.2" height="15.0" fill="rgb(235,181,40)" rx="2" ry="2" />
<text  x="746.79" y="767.5" ></text>
</g>
<g >
<title>__free_one_page (5 samples, 0.09%)</title><rect x="755.1" y="485" width="1.0" height="15.0" fill="rgb(250,74,26)" rx="2" ry="2" />
<text  x="758.09" y="495.5" ></text>
</g>
<g >
<title>ksys_write (5 samples, 0.09%)</title><rect x="37.4" y="741" width="1.1" height="15.0" fill="rgb(251,223,20)" rx="2" ry="2" />
<text  x="40.45" y="751.5" ></text>
</g>
<g >
<title>native_apic_mem_write (2 samples, 0.03%)</title><rect x="985.0" y="629" width="0.4" height="15.0" fill="rgb(207,32,26)" rx="2" ry="2" />
<text  x="987.96" y="639.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (4 samples, 0.07%)</title><rect x="119.0" y="469" width="0.8" height="15.0" fill="rgb(211,24,30)" rx="2" ry="2" />
<text  x="121.98" y="479.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.02%)</title><rect x="969.8" y="645" width="0.2" height="15.0" fill="rgb(209,228,29)" rx="2" ry="2" />
<text  x="972.82" y="655.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.03%)</title><rect x="943.8" y="725" width="0.4" height="15.0" fill="rgb(224,109,11)" rx="2" ry="2" />
<text  x="946.79" y="735.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.02%)</title><rect x="118.8" y="405" width="0.2" height="15.0" fill="rgb(217,131,41)" rx="2" ry="2" />
<text  x="121.78" y="415.5" ></text>
</g>
<g >
<title>__switch_to_asm (4 samples, 0.07%)</title><rect x="887.7" y="789" width="0.8" height="15.0" fill="rgb(238,159,9)" rx="2" ry="2" />
<text  x="890.68" y="799.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (175 samples, 2.99%)</title><rect x="504.2" y="549" width="35.4" height="15.0" fill="rgb(215,9,20)" rx="2" ry="2" />
<text  x="507.24" y="559.5" >__..</text>
</g>
<g >
<title>sysvec_call_function_single (1 samples, 0.02%)</title><rect x="1169.4" y="597" width="0.2" height="15.0" fill="rgb(248,198,17)" rx="2" ry="2" />
<text  x="1172.42" y="607.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (53 samples, 0.91%)</title><rect x="490.3" y="597" width="10.7" height="15.0" fill="rgb(241,139,1)" rx="2" ry="2" />
<text  x="493.31" y="607.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.03%)</title><rect x="743.2" y="757" width="0.4" height="15.0" fill="rgb(234,173,40)" rx="2" ry="2" />
<text  x="746.19" y="767.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.02%)</title><rect x="752.5" y="581" width="0.2" height="15.0" fill="rgb(234,10,19)" rx="2" ry="2" />
<text  x="755.47" y="591.5" ></text>
</g>
<g >
<title>amdgpu_vm_bo_update (1 samples, 0.02%)</title><rect x="898.8" y="661" width="0.2" height="15.0" fill="rgb(252,79,37)" rx="2" ry="2" />
<text  x="901.78" y="671.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="946.0" y="645" width="0.2" height="15.0" fill="rgb(235,205,44)" rx="2" ry="2" />
<text  x="949.01" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="119.8" y="453" width="0.2" height="15.0" fill="rgb(248,181,20)" rx="2" ry="2" />
<text  x="122.79" y="463.5" ></text>
</g>
<g >
<title>drm_handle_vblank (19 samples, 0.32%)</title><rect x="960.1" y="485" width="3.9" height="15.0" fill="rgb(252,89,28)" rx="2" ry="2" />
<text  x="963.14" y="495.5" ></text>
</g>
<g >
<title>__gconv_load_conf (1 samples, 0.02%)</title><rect x="10.6" y="677" width="0.2" height="15.0" fill="rgb(206,120,15)" rx="2" ry="2" />
<text  x="13.61" y="687.5" ></text>
</g>
<g >
<title>CompareAndSwap (48 samples, 0.82%)</title><rect x="88.3" y="741" width="9.7" height="15.0" fill="rgb(208,108,4)" rx="2" ry="2" />
<text  x="91.30" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="974.7" y="533" width="0.4" height="15.0" fill="rgb(247,147,49)" rx="2" ry="2" />
<text  x="977.67" y="543.5" ></text>
</g>
<g >
<title>__unlink (1 samples, 0.02%)</title><rect x="118.2" y="485" width="0.2" height="15.0" fill="rgb(218,15,46)" rx="2" ry="2" />
<text  x="121.17" y="495.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (8 samples, 0.14%)</title><rect x="742.4" y="773" width="1.6" height="15.0" fill="rgb(238,64,50)" rx="2" ry="2" />
<text  x="745.38" y="783.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="986.8" y="565" width="0.2" height="15.0" fill="rgb(211,34,42)" rx="2" ry="2" />
<text  x="989.77" y="575.5" ></text>
</g>
<g >
<title>tgetent_sp (1 samples, 0.02%)</title><rect x="10.4" y="629" width="0.2" height="15.0" fill="rgb(251,39,14)" rx="2" ry="2" />
<text  x="13.40" y="639.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="900.6" y="709" width="0.2" height="15.0" fill="rgb(218,37,40)" rx="2" ry="2" />
<text  x="903.60" y="719.5" ></text>
</g>
<g >
<title>__GI___clone (1 samples, 0.02%)</title><rect x="744.0" y="789" width="0.2" height="15.0" fill="rgb(252,181,24)" rx="2" ry="2" />
<text  x="746.99" y="799.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize (1 samples, 0.02%)</title><rect x="744.2" y="437" width="0.2" height="15.0" fill="rgb(232,124,15)" rx="2" ry="2" />
<text  x="747.20" y="447.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (8 samples, 0.14%)</title><rect x="604.9" y="469" width="1.7" height="15.0" fill="rgb(250,48,19)" rx="2" ry="2" />
<text  x="607.94" y="479.5" ></text>
</g>
<g >
<title>next_zone (1 samples, 0.02%)</title><rect x="1157.3" y="645" width="0.2" height="15.0" fill="rgb(234,214,35)" rx="2" ry="2" />
<text  x="1160.31" y="655.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="119.8" y="309" width="0.2" height="15.0" fill="rgb(230,140,1)" rx="2" ry="2" />
<text  x="122.79" y="319.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="718.6" y="773" width="0.2" height="15.0" fill="rgb(239,142,6)" rx="2" ry="2" />
<text  x="721.57" y="783.5" ></text>
</g>
<g >
<title>dc_stream_get_vblank_counter (1 samples, 0.02%)</title><rect x="950.4" y="629" width="0.2" height="15.0" fill="rgb(221,115,49)" rx="2" ry="2" />
<text  x="953.45" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1 samples, 0.02%)</title><rect x="744.0" y="741" width="0.2" height="15.0" fill="rgb(247,123,42)" rx="2" ry="2" />
<text  x="746.99" y="751.5" ></text>
</g>
<g >
<title>__get_user_pages (2 samples, 0.03%)</title><rect x="723.0" y="581" width="0.4" height="15.0" fill="rgb(209,15,47)" rx="2" ry="2" />
<text  x="726.00" y="591.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="899.2" y="597" width="0.2" height="15.0" fill="rgb(252,158,8)" rx="2" ry="2" />
<text  x="902.19" y="607.5" ></text>
</g>
<g >
<title>exc_page_fault (111 samples, 1.90%)</title><rect x="696.2" y="757" width="22.4" height="15.0" fill="rgb(250,143,19)" rx="2" ry="2" />
<text  x="699.16" y="767.5" >e..</text>
</g>
<g >
<title>dce_pipe_control_lock (1 samples, 0.02%)</title><rect x="950.6" y="629" width="0.3" height="15.0" fill="rgb(211,80,2)" rx="2" ry="2" />
<text  x="953.65" y="639.5" ></text>
</g>
<g >
<title>module_load (1 samples, 0.02%)</title><rect x="10.2" y="629" width="0.2" height="15.0" fill="rgb(225,100,8)" rx="2" ry="2" />
<text  x="13.20" y="639.5" ></text>
</g>
<g >
<title>alx_poll (14 samples, 0.24%)</title><rect x="970.0" y="549" width="2.8" height="15.0" fill="rgb(240,208,52)" rx="2" ry="2" />
<text  x="973.02" y="559.5" ></text>
</g>
<g >
<title>_nc_first_db (1 samples, 0.02%)</title><rect x="10.4" y="565" width="0.2" height="15.0" fill="rgb(222,102,1)" rx="2" ry="2" />
<text  x="13.40" y="575.5" ></text>
</g>
<g >
<title>__libc_open64 (1 samples, 0.02%)</title><rect x="118.8" y="501" width="0.2" height="15.0" fill="rgb(246,205,46)" rx="2" ry="2" />
<text  x="121.78" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.02%)</title><rect x="743.6" y="709" width="0.2" height="15.0" fill="rgb(234,155,44)" rx="2" ry="2" />
<text  x="746.59" y="719.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (3 samples, 0.05%)</title><rect x="1155.1" y="661" width="0.6" height="15.0" fill="rgb(223,151,29)" rx="2" ry="2" />
<text  x="1158.09" y="671.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (1 samples, 0.02%)</title><rect x="118.2" y="37" width="0.2" height="15.0" fill="rgb(241,170,9)" rx="2" ry="2" />
<text  x="121.17" y="47.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="952.9" y="533" width="0.2" height="15.0" fill="rgb(228,11,28)" rx="2" ry="2" />
<text  x="955.87" y="543.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.02%)</title><rect x="756.5" y="517" width="0.2" height="15.0" fill="rgb(219,174,20)" rx="2" ry="2" />
<text  x="759.51" y="527.5" ></text>
</g>
<g >
<title>dequeue_task (8 samples, 0.14%)</title><rect x="936.1" y="645" width="1.6" height="15.0" fill="rgb(243,30,28)" rx="2" ry="2" />
<text  x="939.12" y="655.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="961.5" y="341" width="0.2" height="15.0" fill="rgb(234,101,44)" rx="2" ry="2" />
<text  x="964.55" y="351.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.07%)</title><rect x="1188.0" y="645" width="0.8" height="15.0" fill="rgb(211,40,7)" rx="2" ry="2" />
<text  x="1190.98" y="655.5" ></text>
</g>
<g >
<title>perf (135 samples, 2.31%)</title><rect x="11.2" y="805" width="27.3" height="15.0" fill="rgb(245,218,16)" rx="2" ry="2" />
<text  x="14.21" y="815.5" >p..</text>
</g>
<g >
<title>sock_sendmsg (5 samples, 0.09%)</title><rect x="944.4" y="661" width="1.0" height="15.0" fill="rgb(221,14,50)" rx="2" ry="2" />
<text  x="947.39" y="671.5" ></text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.02%)</title><rect x="110.3" y="437" width="0.2" height="15.0" fill="rgb(249,72,54)" rx="2" ry="2" />
<text  x="113.30" y="447.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="119.8" y="229" width="0.2" height="15.0" fill="rgb(228,105,7)" rx="2" ry="2" />
<text  x="122.79" y="239.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (1 samples, 0.02%)</title><rect x="33.4" y="373" width="0.2" height="15.0" fill="rgb(253,167,9)" rx="2" ry="2" />
<text  x="36.41" y="383.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (2 samples, 0.03%)</title><rect x="33.2" y="389" width="0.4" height="15.0" fill="rgb(217,159,18)" rx="2" ry="2" />
<text  x="36.21" y="399.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (62 samples, 1.06%)</title><rect x="972.8" y="645" width="12.6" height="15.0" fill="rgb(213,10,52)" rx="2" ry="2" />
<text  x="975.85" y="655.5" ></text>
</g>
<g >
<title>NaClSysWrite (2 samples, 0.03%)</title><rect x="395.7" y="757" width="0.4" height="15.0" fill="rgb(230,36,46)" rx="2" ry="2" />
<text  x="398.66" y="767.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="132.7" y="485" width="0.2" height="15.0" fill="rgb(252,174,39)" rx="2" ry="2" />
<text  x="135.70" y="495.5" ></text>
</g>
<g >
<title>__cmd_record (130 samples, 2.22%)</title><rect x="11.2" y="757" width="26.2" height="15.0" fill="rgb(251,99,15)" rx="2" ry="2" />
<text  x="14.21" y="767.5" >_..</text>
</g>
<g >
<title>gup_pud_range.constprop.0 (3 samples, 0.05%)</title><rect x="892.7" y="629" width="0.6" height="15.0" fill="rgb(207,216,11)" rx="2" ry="2" />
<text  x="895.73" y="639.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="119.4" y="229" width="0.2" height="15.0" fill="rgb(215,82,18)" rx="2" ry="2" />
<text  x="122.38" y="239.5" ></text>
</g>
<g >
<title>main (1 samples, 0.02%)</title><rect x="744.2" y="757" width="0.2" height="15.0" fill="rgb(235,50,2)" rx="2" ry="2" />
<text  x="747.20" y="767.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (58 samples, 0.99%)</title><rect x="973.3" y="613" width="11.7" height="15.0" fill="rgb(235,17,53)" rx="2" ry="2" />
<text  x="976.25" y="623.5" ></text>
</g>
<g >
<title>shmem_add_to_page_cache (1 samples, 0.02%)</title><rect x="723.0" y="437" width="0.2" height="15.0" fill="rgb(245,149,44)" rx="2" ry="2" />
<text  x="726.00" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="38.5" y="693" width="0.2" height="15.0" fill="rgb(248,42,0)" rx="2" ry="2" />
<text  x="41.46" y="703.5" ></text>
</g>
<g >
<title>pm_qos_read_value (1 samples, 0.02%)</title><rect x="1153.5" y="677" width="0.2" height="15.0" fill="rgb(235,125,42)" rx="2" ry="2" />
<text  x="1156.47" y="687.5" ></text>
</g>
<g >
<title>generic_perform_write (5 samples, 0.09%)</title><rect x="37.4" y="597" width="1.1" height="15.0" fill="rgb(227,167,14)" rx="2" ry="2" />
<text  x="40.45" y="607.5" ></text>
</g>
<g >
<title>vfs_writev (5 samples, 0.09%)</title><rect x="944.4" y="725" width="1.0" height="15.0" fill="rgb(215,145,24)" rx="2" ry="2" />
<text  x="947.39" y="735.5" ></text>
</g>
<g >
<title>alx_mask_msix (3 samples, 0.05%)</title><rect x="971.2" y="533" width="0.6" height="15.0" fill="rgb(210,117,6)" rx="2" ry="2" />
<text  x="974.23" y="543.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (2 samples, 0.03%)</title><rect x="1188.2" y="597" width="0.4" height="15.0" fill="rgb(229,17,49)" rx="2" ry="2" />
<text  x="1191.18" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (92 samples, 1.57%)</title><rect x="454.4" y="581" width="18.6" height="15.0" fill="rgb(236,74,22)" rx="2" ry="2" />
<text  x="457.39" y="591.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="1164.8" y="709" width="0.2" height="15.0" fill="rgb(221,195,12)" rx="2" ry="2" />
<text  x="1167.77" y="719.5" ></text>
</g>
<g >
<title>ext4_create (1 samples, 0.02%)</title><rect x="118.8" y="261" width="0.2" height="15.0" fill="rgb(248,4,0)" rx="2" ry="2" />
<text  x="121.78" y="271.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="119.8" y="293" width="0.2" height="15.0" fill="rgb(230,206,34)" rx="2" ry="2" />
<text  x="122.79" y="303.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (7 samples, 0.12%)</title><rect x="325.0" y="533" width="1.4" height="15.0" fill="rgb(247,212,44)" rx="2" ry="2" />
<text  x="328.03" y="543.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (53 samples, 0.91%)</title><rect x="959.1" y="645" width="10.7" height="15.0" fill="rgb(235,81,39)" rx="2" ry="2" />
<text  x="962.13" y="655.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (2 samples, 0.03%)</title><rect x="956.9" y="725" width="0.4" height="15.0" fill="rgb(210,120,19)" rx="2" ry="2" />
<text  x="959.91" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="119.8" y="469" width="0.2" height="15.0" fill="rgb(237,87,38)" rx="2" ry="2" />
<text  x="122.79" y="479.5" ></text>
</g>
<g >
<title>eventfd_poll (1 samples, 0.02%)</title><rect x="928.7" y="709" width="0.2" height="15.0" fill="rgb(232,222,29)" rx="2" ry="2" />
<text  x="931.65" y="719.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (1 samples, 0.02%)</title><rect x="10.2" y="469" width="0.2" height="15.0" fill="rgb(245,16,14)" rx="2" ry="2" />
<text  x="13.20" y="479.5" ></text>
</g>
<g >
<title>tick_irq_enter (1 samples, 0.02%)</title><rect x="969.8" y="629" width="0.2" height="15.0" fill="rgb(236,15,40)" rx="2" ry="2" />
<text  x="972.82" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (1 samples, 0.02%)</title><rect x="546.4" y="565" width="0.2" height="15.0" fill="rgb(205,53,48)" rx="2" ry="2" />
<text  x="549.42" y="575.5" ></text>
</g>
<g >
<title>snd_ctl_find_id (1 samples, 0.02%)</title><rect x="902.2" y="709" width="0.2" height="15.0" fill="rgb(236,171,48)" rx="2" ry="2" />
<text  x="905.21" y="719.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="943.4" y="741" width="0.2" height="15.0" fill="rgb(245,169,20)" rx="2" ry="2" />
<text  x="946.38" y="751.5" ></text>
</g>
<g >
<title>NaClElfImageLoad (1 samples, 0.02%)</title><rect x="119.8" y="661" width="0.2" height="15.0" fill="rgb(212,38,15)" rx="2" ry="2" />
<text  x="122.79" y="671.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (4 samples, 0.07%)</title><rect x="419.5" y="693" width="0.8" height="15.0" fill="rgb(215,106,25)" rx="2" ry="2" />
<text  x="422.48" y="703.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="928.7" y="629" width="0.2" height="15.0" fill="rgb(240,129,16)" rx="2" ry="2" />
<text  x="931.65" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (947 samples, 16.20%)</title><rect x="440.9" y="645" width="191.1" height="15.0" fill="rgb(220,62,17)" rx="2" ry="2" />
<text  x="443.87" y="655.5" >rustposix::safeposix::sy..</text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="934.1" y="645" width="0.2" height="15.0" fill="rgb(237,209,50)" rx="2" ry="2" />
<text  x="937.10" y="655.5" ></text>
</g>
<g >
<title>hrtimer_cancel (2 samples, 0.03%)</title><rect x="1165.8" y="693" width="0.4" height="15.0" fill="rgb(221,86,0)" rx="2" ry="2" />
<text  x="1168.78" y="703.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (7 samples, 0.12%)</title><rect x="960.3" y="421" width="1.4" height="15.0" fill="rgb(223,181,46)" rx="2" ry="2" />
<text  x="963.34" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (38 samples, 0.65%)</title><rect x="433.0" y="661" width="7.7" height="15.0" fill="rgb(233,71,6)" rx="2" ry="2" />
<text  x="436.00" y="671.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="118.6" y="485" width="0.2" height="15.0" fill="rgb(232,31,12)" rx="2" ry="2" />
<text  x="121.58" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.24%)</title><rect x="606.6" y="581" width="2.8" height="15.0" fill="rgb(229,135,36)" rx="2" ry="2" />
<text  x="609.56" y="591.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (39 samples, 0.67%)</title><rect x="98.2" y="757" width="7.9" height="15.0" fill="rgb(208,203,43)" rx="2" ry="2" />
<text  x="101.19" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="722.8" y="725" width="0.6" height="15.0" fill="rgb(211,84,32)" rx="2" ry="2" />
<text  x="725.80" y="735.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="949.2" y="549" width="0.2" height="15.0" fill="rgb(246,222,26)" rx="2" ry="2" />
<text  x="952.24" y="559.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.02%)</title><rect x="723.4" y="581" width="0.2" height="15.0" fill="rgb(220,104,16)" rx="2" ry="2" />
<text  x="726.41" y="591.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="929.1" y="677" width="0.4" height="15.0" fill="rgb(244,152,26)" rx="2" ry="2" />
<text  x="932.06" y="687.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (1 samples, 0.02%)</title><rect x="118.2" y="53" width="0.2" height="15.0" fill="rgb(224,72,52)" rx="2" ry="2" />
<text  x="121.17" y="63.5" ></text>
</g>
<g >
<title>load_new_mm_cr3 (1 samples, 0.02%)</title><rect x="992.4" y="645" width="0.2" height="15.0" fill="rgb(250,114,14)" rx="2" ry="2" />
<text  x="995.43" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (80 samples, 1.37%)</title><rect x="11.2" y="645" width="16.2" height="15.0" fill="rgb(222,164,31)" rx="2" ry="2" />
<text  x="14.21" y="655.5" ></text>
</g>
<g >
<title>read_hpet (1 samples, 0.02%)</title><rect x="990.8" y="501" width="0.2" height="15.0" fill="rgb(249,49,53)" rx="2" ry="2" />
<text  x="993.81" y="511.5" ></text>
</g>
<g >
<title>vfs_write (5 samples, 0.09%)</title><rect x="37.4" y="725" width="1.1" height="15.0" fill="rgb(225,26,24)" rx="2" ry="2" />
<text  x="40.45" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (2 samples, 0.03%)</title><rect x="62.1" y="693" width="0.4" height="15.0" fill="rgb(221,75,42)" rx="2" ry="2" />
<text  x="65.07" y="703.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="952.9" y="581" width="0.2" height="15.0" fill="rgb(221,219,38)" rx="2" ry="2" />
<text  x="955.87" y="591.5" ></text>
</g>
<g >
<title>amdgpu_bo_unpin (1 samples, 0.02%)</title><rect x="954.5" y="645" width="0.2" height="15.0" fill="rgb(231,210,22)" rx="2" ry="2" />
<text  x="957.48" y="655.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (1 samples, 0.02%)</title><rect x="119.4" y="181" width="0.2" height="15.0" fill="rgb(253,191,46)" rx="2" ry="2" />
<text  x="122.38" y="191.5" ></text>
</g>
<g >
<title>choose_new_asid (1 samples, 0.02%)</title><rect x="1163.6" y="677" width="0.2" height="15.0" fill="rgb(228,90,28)" rx="2" ry="2" />
<text  x="1166.56" y="687.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="756.5" y="709" width="0.2" height="15.0" fill="rgb(229,41,19)" rx="2" ry="2" />
<text  x="759.51" y="719.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.02%)</title><rect x="394.9" y="613" width="0.2" height="15.0" fill="rgb(241,14,24)" rx="2" ry="2" />
<text  x="397.86" y="623.5" ></text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.02%)</title><rect x="969.0" y="341" width="0.2" height="15.0" fill="rgb(242,142,24)" rx="2" ry="2" />
<text  x="972.01" y="351.5" ></text>
</g>
<g >
<title>azx_get_delay_from_lpib (22 samples, 0.38%)</title><rect x="902.8" y="613" width="4.5" height="15.0" fill="rgb(215,28,40)" rx="2" ry="2" />
<text  x="905.82" y="623.5" ></text>
</g>
<g >
<title>perf_event__prepare_comm (1 samples, 0.02%)</title><rect x="28.0" y="725" width="0.2" height="15.0" fill="rgb(217,160,25)" rx="2" ry="2" />
<text  x="30.96" y="735.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="118.6" y="501" width="0.2" height="15.0" fill="rgb(251,168,41)" rx="2" ry="2" />
<text  x="121.58" y="511.5" ></text>
</g>
<g >
<title>serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.02%)</title><rect x="744.2" y="69" width="0.2" height="15.0" fill="rgb(212,92,10)" rx="2" ry="2" />
<text  x="747.20" y="79.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.05%)</title><rect x="407.0" y="725" width="0.6" height="15.0" fill="rgb(228,53,36)" rx="2" ry="2" />
<text  x="409.97" y="735.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (1 samples, 0.02%)</title><rect x="120.2" y="693" width="0.2" height="15.0" fill="rgb(250,214,25)" rx="2" ry="2" />
<text  x="123.19" y="703.5" ></text>
</g>
<g >
<title>NaClLog (8 samples, 0.14%)</title><rect x="106.1" y="757" width="1.6" height="15.0" fill="rgb(223,181,25)" rx="2" ry="2" />
<text  x="109.06" y="767.5" ></text>
</g>
<g >
<title>ip6_sublist_rcv_finish (1 samples, 0.02%)</title><rect x="972.6" y="421" width="0.2" height="15.0" fill="rgb(250,101,2)" rx="2" ry="2" />
<text  x="975.65" y="431.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="975.9" y="437" width="0.2" height="15.0" fill="rgb(236,73,13)" rx="2" ry="2" />
<text  x="978.88" y="447.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.02%)</title><rect x="118.6" y="469" width="0.2" height="15.0" fill="rgb(235,225,4)" rx="2" ry="2" />
<text  x="121.58" y="479.5" ></text>
</g>
<g >
<title>dm_read_reg_func (5 samples, 0.09%)</title><rect x="967.0" y="389" width="1.0" height="15.0" fill="rgb(240,137,14)" rx="2" ry="2" />
<text  x="970.00" y="399.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::open (1 samples, 0.02%)</title><rect x="118.8" y="597" width="0.2" height="15.0" fill="rgb(209,159,27)" rx="2" ry="2" />
<text  x="121.78" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="27.4" y="693" width="0.6" height="15.0" fill="rgb(220,76,35)" rx="2" ry="2" />
<text  x="30.36" y="703.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 0.02%)</title><rect x="1164.2" y="709" width="0.2" height="15.0" fill="rgb(250,74,38)" rx="2" ry="2" />
<text  x="1167.17" y="719.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (2 samples, 0.03%)</title><rect x="945.6" y="741" width="0.4" height="15.0" fill="rgb(226,143,47)" rx="2" ry="2" />
<text  x="948.60" y="751.5" ></text>
</g>
<g >
<title>error_return (1 samples, 0.02%)</title><rect x="1148.8" y="693" width="0.2" height="15.0" fill="rgb(252,81,33)" rx="2" ry="2" />
<text  x="1151.83" y="703.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (39 samples, 0.67%)</title><rect x="473.0" y="597" width="7.8" height="15.0" fill="rgb(233,182,34)" rx="2" ry="2" />
<text  x="475.96" y="607.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="1156.5" y="629" width="0.2" height="15.0" fill="rgb(240,67,54)" rx="2" ry="2" />
<text  x="1159.50" y="639.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (1 samples, 0.02%)</title><rect x="944.6" y="613" width="0.2" height="15.0" fill="rgb(254,60,40)" rx="2" ry="2" />
<text  x="947.60" y="623.5" ></text>
</g>
<g >
<title>update_audio_tstamp (1 samples, 0.02%)</title><rect x="919.2" y="661" width="0.2" height="15.0" fill="rgb(230,214,49)" rx="2" ry="2" />
<text  x="922.17" y="671.5" ></text>
</g>
<g >
<title>cpuidle_select (3 samples, 0.05%)</title><rect x="1186.4" y="645" width="0.6" height="15.0" fill="rgb(214,24,0)" rx="2" ry="2" />
<text  x="1189.37" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (62 samples, 1.06%)</title><rect x="441.7" y="613" width="12.5" height="15.0" fill="rgb(237,143,33)" rx="2" ry="2" />
<text  x="444.68" y="623.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (1 samples, 0.02%)</title><rect x="944.6" y="629" width="0.2" height="15.0" fill="rgb(239,136,17)" rx="2" ry="2" />
<text  x="947.60" y="639.5" ></text>
</g>
<g >
<title>unmap_page_range (27 samples, 0.46%)</title><rect x="751.1" y="629" width="5.4" height="15.0" fill="rgb(254,67,22)" rx="2" ry="2" />
<text  x="754.06" y="639.5" ></text>
</g>
<g >
<title>destroy_inode (1 samples, 0.02%)</title><rect x="118.2" y="341" width="0.2" height="15.0" fill="rgb(220,81,6)" rx="2" ry="2" />
<text  x="121.17" y="351.5" ></text>
</g>
<g >
<title>sched_rt_period_timer (1 samples, 0.02%)</title><rect x="979.3" y="565" width="0.2" height="15.0" fill="rgb(241,159,16)" rx="2" ry="2" />
<text  x="982.31" y="575.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="892.3" y="661" width="0.2" height="15.0" fill="rgb(217,66,3)" rx="2" ry="2" />
<text  x="895.33" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="119.4" y="133" width="0.2" height="15.0" fill="rgb(219,182,50)" rx="2" ry="2" />
<text  x="122.38" y="143.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (11 samples, 0.19%)</title><rect x="481.2" y="549" width="2.3" height="15.0" fill="rgb(217,8,45)" rx="2" ry="2" />
<text  x="484.23" y="559.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (4 samples, 0.07%)</title><rect x="722.8" y="773" width="0.8" height="15.0" fill="rgb(219,226,53)" rx="2" ry="2" />
<text  x="725.80" y="783.5" ></text>
</g>
<g >
<title>std::thread::panicking (3 samples, 0.05%)</title><rect x="609.4" y="581" width="0.6" height="15.0" fill="rgb(210,177,12)" rx="2" ry="2" />
<text  x="612.38" y="591.5" ></text>
</g>
<g >
<title>VerifyNaclCallOrJmpAddToRM (1 samples, 0.02%)</title><rect x="724.2" y="629" width="0.2" height="15.0" fill="rgb(246,202,26)" rx="2" ry="2" />
<text  x="727.22" y="639.5" ></text>
</g>
<g >
<title>dm_vblank_get_counter (1 samples, 0.02%)</title><rect x="950.4" y="645" width="0.2" height="15.0" fill="rgb(253,179,41)" rx="2" ry="2" />
<text  x="953.45" y="655.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (5 samples, 0.09%)</title><rect x="37.4" y="645" width="1.1" height="15.0" fill="rgb(228,64,51)" rx="2" ry="2" />
<text  x="40.45" y="655.5" ></text>
</g>
<g >
<title>exc_page_fault (3 samples, 0.05%)</title><rect x="109.9" y="613" width="0.6" height="15.0" fill="rgb(235,201,18)" rx="2" ry="2" />
<text  x="112.90" y="623.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.02%)</title><rect x="1186.8" y="629" width="0.2" height="15.0" fill="rgb(208,85,21)" rx="2" ry="2" />
<text  x="1189.77" y="639.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="117.8" y="645" width="0.2" height="15.0" fill="rgb(244,69,4)" rx="2" ry="2" />
<text  x="120.77" y="655.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.02%)</title><rect x="119.8" y="533" width="0.2" height="15.0" fill="rgb(228,185,47)" rx="2" ry="2" />
<text  x="122.79" y="543.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (1 samples, 0.02%)</title><rect x="723.2" y="325" width="0.2" height="15.0" fill="rgb(214,59,48)" rx="2" ry="2" />
<text  x="726.21" y="335.5" ></text>
</g>
<g >
<title>snd_ctl_elem_read_user (10 samples, 0.17%)</title><rect x="900.4" y="725" width="2.0" height="15.0" fill="rgb(240,13,42)" rx="2" ry="2" />
<text  x="903.40" y="735.5" ></text>
</g>
<g >
<title>__get_free_pages (1 samples, 0.02%)</title><rect x="928.7" y="677" width="0.2" height="15.0" fill="rgb(225,81,22)" rx="2" ry="2" />
<text  x="931.65" y="687.5" ></text>
</g>
<g >
<title>account_page_dirtied (1 samples, 0.02%)</title><rect x="37.9" y="501" width="0.2" height="15.0" fill="rgb(224,8,26)" rx="2" ry="2" />
<text  x="40.85" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="33.0" y="325" width="0.2" height="15.0" fill="rgb(243,65,2)" rx="2" ry="2" />
<text  x="36.01" y="335.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="968.6" y="325" width="0.2" height="15.0" fill="rgb(253,106,39)" rx="2" ry="2" />
<text  x="971.61" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.03%)</title><rect x="638.8" y="533" width="0.5" height="15.0" fill="rgb(213,89,16)" rx="2" ry="2" />
<text  x="641.85" y="543.5" ></text>
</g>
<g >
<title>ovl_create_over_whiteout (1 samples, 0.02%)</title><rect x="118.8" y="309" width="0.2" height="15.0" fill="rgb(217,78,29)" rx="2" ry="2" />
<text  x="121.78" y="319.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="975.9" y="453" width="0.2" height="15.0" fill="rgb(226,42,33)" rx="2" ry="2" />
<text  x="978.88" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="120.4" y="565" width="0.2" height="15.0" fill="rgb(217,187,47)" rx="2" ry="2" />
<text  x="123.39" y="575.5" ></text>
</g>
<g >
<title>lind_close (1 samples, 0.02%)</title><rect x="118.2" y="629" width="0.2" height="15.0" fill="rgb(206,222,51)" rx="2" ry="2" />
<text  x="121.17" y="639.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (9 samples, 0.15%)</title><rect x="1165.4" y="725" width="1.8" height="15.0" fill="rgb(239,196,21)" rx="2" ry="2" />
<text  x="1168.38" y="735.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="744.2" y="469" width="0.2" height="15.0" fill="rgb(239,126,28)" rx="2" ry="2" />
<text  x="747.20" y="479.5" ></text>
</g>
<g >
<title>swapper (2,144 samples, 36.67%)</title><rect x="757.3" y="805" width="432.7" height="15.0" fill="rgb(219,18,29)" rx="2" ry="2" />
<text  x="760.31" y="815.5" >swapper</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="119.2" y="261" width="0.2" height="15.0" fill="rgb(245,55,4)" rx="2" ry="2" />
<text  x="122.18" y="271.5" ></text>
</g>
<g >
<title>exit_mm (27 samples, 0.46%)</title><rect x="751.1" y="709" width="5.4" height="15.0" fill="rgb(240,151,14)" rx="2" ry="2" />
<text  x="754.06" y="719.5" ></text>
</g>
<g >
<title>kernel_clone (1 samples, 0.02%)</title><rect x="744.0" y="709" width="0.2" height="15.0" fill="rgb(253,210,49)" rx="2" ry="2" />
<text  x="746.99" y="719.5" ></text>
</g>
<g >
<title>dispatcher (6 samples, 0.10%)</title><rect x="118.6" y="709" width="1.2" height="15.0" fill="rgb(228,197,44)" rx="2" ry="2" />
<text  x="121.58" y="719.5" ></text>
</g>
<g >
<title>_dl_relocate_object (2 samples, 0.03%)</title><rect x="744.4" y="725" width="0.4" height="15.0" fill="rgb(251,217,45)" rx="2" ry="2" />
<text  x="747.40" y="735.5" ></text>
</g>
<g >
<title>drm_update_vblank_count (18 samples, 0.31%)</title><rect x="965.2" y="485" width="3.6" height="15.0" fill="rgb(208,149,43)" rx="2" ry="2" />
<text  x="968.18" y="495.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1153.7" y="661" width="0.2" height="15.0" fill="rgb(250,218,28)" rx="2" ry="2" />
<text  x="1156.67" y="671.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1166.0" y="597" width="0.2" height="15.0" fill="rgb(232,79,32)" rx="2" ry="2" />
<text  x="1168.98" y="607.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (3 samples, 0.05%)</title><rect x="1153.9" y="661" width="0.6" height="15.0" fill="rgb(227,62,14)" rx="2" ry="2" />
<text  x="1156.88" y="671.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (1 samples, 0.02%)</title><rect x="118.6" y="629" width="0.2" height="15.0" fill="rgb(217,76,23)" rx="2" ry="2" />
<text  x="121.58" y="639.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (92 samples, 1.57%)</title><rect x="972.8" y="661" width="18.6" height="15.0" fill="rgb(220,96,9)" rx="2" ry="2" />
<text  x="975.85" y="671.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.02%)</title><rect x="10.4" y="709" width="0.2" height="15.0" fill="rgb(214,78,44)" rx="2" ry="2" />
<text  x="13.40" y="719.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (6 samples, 0.10%)</title><rect x="713.5" y="613" width="1.2" height="15.0" fill="rgb(250,144,17)" rx="2" ry="2" />
<text  x="716.52" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (2 samples, 0.03%)</title><rect x="49.4" y="757" width="0.4" height="15.0" fill="rgb(234,19,3)" rx="2" ry="2" />
<text  x="52.35" y="767.5" ></text>
</g>
<g >
<title>ion (45 samples, 0.77%)</title><rect x="28.4" y="661" width="9.0" height="15.0" fill="rgb(226,162,4)" rx="2" ry="2" />
<text  x="31.36" y="671.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (1 samples, 0.02%)</title><rect x="1169.4" y="613" width="0.2" height="15.0" fill="rgb(223,64,22)" rx="2" ry="2" />
<text  x="1172.42" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1,361 samples, 23.28%)</title><rect x="120.4" y="661" width="274.7" height="15.0" fill="rgb(242,54,53)" rx="2" ry="2" />
<text  x="123.39" y="671.5" >rustposix::safeposix::dispatcher::di..</text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="37.4" y="565" width="0.2" height="15.0" fill="rgb(248,106,0)" rx="2" ry="2" />
<text  x="40.45" y="575.5" ></text>
</g>
<g >
<title>NaClLoadTrampoline (1 samples, 0.02%)</title><rect x="118.4" y="725" width="0.2" height="15.0" fill="rgb(214,150,41)" rx="2" ry="2" />
<text  x="121.37" y="735.5" ></text>
</g>
<g >
<title>CompareAndSwap (2 samples, 0.03%)</title><rect x="722.4" y="773" width="0.4" height="15.0" fill="rgb(225,47,28)" rx="2" ry="2" />
<text  x="725.40" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="120.4" y="629" width="0.2" height="15.0" fill="rgb(234,64,46)" rx="2" ry="2" />
<text  x="123.39" y="639.5" ></text>
</g>
<g >
<title>irq_enter_rcu (4 samples, 0.07%)</title><rect x="985.4" y="645" width="0.8" height="15.0" fill="rgb(221,188,48)" rx="2" ry="2" />
<text  x="988.36" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="28.0" y="645" width="0.2" height="15.0" fill="rgb(254,71,47)" rx="2" ry="2" />
<text  x="30.96" y="655.5" ></text>
</g>
<g >
<title>try_to_wake_up (18 samples, 0.31%)</title><rect x="975.3" y="533" width="3.6" height="15.0" fill="rgb(205,0,18)" rx="2" ry="2" />
<text  x="978.27" y="543.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (69 samples, 1.18%)</title><rect x="13.2" y="597" width="14.0" height="15.0" fill="rgb(241,73,21)" rx="2" ry="2" />
<text  x="16.23" y="607.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (1 samples, 0.02%)</title><rect x="931.1" y="709" width="0.2" height="15.0" fill="rgb(217,66,32)" rx="2" ry="2" />
<text  x="934.07" y="719.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="990.0" y="549" width="0.2" height="15.0" fill="rgb(214,129,7)" rx="2" ry="2" />
<text  x="993.00" y="559.5" ></text>
</g>
<g >
<title>kernel_init_free_pages (1 samples, 0.02%)</title><rect x="710.7" y="613" width="0.2" height="15.0" fill="rgb(253,129,49)" rx="2" ry="2" />
<text  x="713.69" y="623.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (36 samples, 0.62%)</title><rect x="632.0" y="661" width="7.3" height="15.0" fill="rgb(219,80,38)" rx="2" ry="2" />
<text  x="634.99" y="671.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect x="744.2" y="181" width="0.2" height="15.0" fill="rgb(228,207,20)" rx="2" ry="2" />
<text  x="747.20" y="191.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (20 samples, 0.34%)</title><rect x="400.5" y="677" width="4.0" height="15.0" fill="rgb(248,187,13)" rx="2" ry="2" />
<text  x="403.51" y="687.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="118.6" y="389" width="0.2" height="15.0" fill="rgb(253,184,2)" rx="2" ry="2" />
<text  x="121.58" y="399.5" ></text>
</g>
<g >
<title>dm_vblank_get_counter (5 samples, 0.09%)</title><rect x="967.0" y="437" width="1.0" height="15.0" fill="rgb(244,157,2)" rx="2" ry="2" />
<text  x="970.00" y="447.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.03%)</title><rect x="637.6" y="517" width="0.4" height="15.0" fill="rgb(226,216,15)" rx="2" ry="2" />
<text  x="640.64" y="527.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (1 samples, 0.02%)</title><rect x="440.7" y="645" width="0.2" height="15.0" fill="rgb(242,220,7)" rx="2" ry="2" />
<text  x="443.67" y="655.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.02%)</title><rect x="28.0" y="597" width="0.2" height="15.0" fill="rgb(254,193,16)" rx="2" ry="2" />
<text  x="30.96" y="607.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="950.4" y="549" width="0.2" height="15.0" fill="rgb(246,203,23)" rx="2" ry="2" />
<text  x="953.45" y="559.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="119.2" y="69" width="0.2" height="15.0" fill="rgb(205,129,39)" rx="2" ry="2" />
<text  x="122.18" y="79.5" ></text>
</g>
<g >
<title>try_to_release_page (1 samples, 0.02%)</title><rect x="118.2" y="85" width="0.2" height="15.0" fill="rgb(242,22,37)" rx="2" ry="2" />
<text  x="121.17" y="95.5" ></text>
</g>
<g >
<title>find_get_entry (2 samples, 0.03%)</title><rect x="32.6" y="373" width="0.4" height="15.0" fill="rgb(207,84,25)" rx="2" ry="2" />
<text  x="35.60" y="383.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.02%)</title><rect x="744.2" y="229" width="0.2" height="15.0" fill="rgb(220,144,31)" rx="2" ry="2" />
<text  x="747.20" y="239.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="454.2" y="565" width="0.2" height="15.0" fill="rgb(222,179,19)" rx="2" ry="2" />
<text  x="457.19" y="575.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (2 samples, 0.03%)</title><rect x="1164.4" y="725" width="0.4" height="15.0" fill="rgb(217,107,26)" rx="2" ry="2" />
<text  x="1167.37" y="735.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="939.6" y="661" width="0.2" height="15.0" fill="rgb(240,216,50)" rx="2" ry="2" />
<text  x="942.55" y="671.5" ></text>
</g>
<g >
<title>do_iter_read (1 samples, 0.02%)</title><rect x="120.6" y="421" width="0.2" height="15.0" fill="rgb(217,196,54)" rx="2" ry="2" />
<text  x="123.59" y="431.5" ></text>
</g>
<g >
<title>start_this_handle (1 samples, 0.02%)</title><rect x="29.8" y="373" width="0.2" height="15.0" fill="rgb(212,134,37)" rx="2" ry="2" />
<text  x="32.78" y="383.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (227 samples, 3.88%)</title><rect x="342.8" y="549" width="45.8" height="15.0" fill="rgb(235,52,26)" rx="2" ry="2" />
<text  x="345.79" y="559.5" >core..</text>
</g>
<g >
<title>NaClPatchOneTrampoline (1 samples, 0.02%)</title><rect x="118.4" y="709" width="0.2" height="15.0" fill="rgb(232,212,43)" rx="2" ry="2" />
<text  x="121.37" y="719.5" ></text>
</g>
<g >
<title>handle_edge_irq (53 samples, 0.91%)</title><rect x="959.1" y="629" width="10.7" height="15.0" fill="rgb(213,207,40)" rx="2" ry="2" />
<text  x="962.13" y="639.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.02%)</title><rect x="936.3" y="597" width="0.2" height="15.0" fill="rgb(205,55,34)" rx="2" ry="2" />
<text  x="939.32" y="607.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="952.9" y="597" width="0.2" height="15.0" fill="rgb(210,35,10)" rx="2" ry="2" />
<text  x="955.87" y="607.5" ></text>
</g>
<g >
<title>clocksource_watchdog (1 samples, 0.02%)</title><rect x="990.8" y="533" width="0.2" height="15.0" fill="rgb(232,116,16)" rx="2" ry="2" />
<text  x="993.81" y="543.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1169.4" y="565" width="0.2" height="15.0" fill="rgb(238,114,28)" rx="2" ry="2" />
<text  x="1172.42" y="575.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge (1 samples, 0.02%)</title><rect x="944.6" y="533" width="0.2" height="15.0" fill="rgb(232,32,3)" rx="2" ry="2" />
<text  x="947.60" y="543.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (1 samples, 0.02%)</title><rect x="624.5" y="581" width="0.2" height="15.0" fill="rgb(208,130,16)" rx="2" ry="2" />
<text  x="627.52" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="118.6" y="517" width="0.2" height="15.0" fill="rgb(208,154,53)" rx="2" ry="2" />
<text  x="121.58" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="944.6" y="581" width="0.2" height="15.0" fill="rgb(230,221,17)" rx="2" ry="2" />
<text  x="947.60" y="591.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="10.8" y="709" width="0.2" height="15.0" fill="rgb(246,29,31)" rx="2" ry="2" />
<text  x="13.81" y="719.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.03%)</title><rect x="723.0" y="517" width="0.4" height="15.0" fill="rgb(214,63,9)" rx="2" ry="2" />
<text  x="726.00" y="527.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.03%)</title><rect x="32.0" y="325" width="0.4" height="15.0" fill="rgb(248,181,40)" rx="2" ry="2" />
<text  x="35.00" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.02%)</title><rect x="118.2" y="549" width="0.2" height="15.0" fill="rgb(252,6,1)" rx="2" ry="2" />
<text  x="121.17" y="559.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (1 samples, 0.02%)</title><rect x="1189.0" y="565" width="0.2" height="15.0" fill="rgb(220,53,39)" rx="2" ry="2" />
<text  x="1191.99" y="575.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.05%)</title><rect x="109.9" y="581" width="0.6" height="15.0" fill="rgb(228,38,4)" rx="2" ry="2" />
<text  x="112.90" y="591.5" ></text>
</g>
<g >
<title>psi_flags_change (1 samples, 0.02%)</title><rect x="955.3" y="549" width="0.2" height="15.0" fill="rgb(238,8,9)" rx="2" ry="2" />
<text  x="958.29" y="559.5" ></text>
</g>
<g >
<title>__update_blocked_fair (4 samples, 0.07%)</title><rect x="989.2" y="549" width="0.8" height="15.0" fill="rgb(238,174,43)" rx="2" ry="2" />
<text  x="992.20" y="559.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.02%)</title><rect x="28.8" y="437" width="0.2" height="15.0" fill="rgb(233,24,26)" rx="2" ry="2" />
<text  x="31.77" y="447.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.02%)</title><rect x="1188.6" y="613" width="0.2" height="15.0" fill="rgb(210,49,9)" rx="2" ry="2" />
<text  x="1191.59" y="623.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (1 samples, 0.02%)</title><rect x="118.2" y="533" width="0.2" height="15.0" fill="rgb(238,0,17)" rx="2" ry="2" />
<text  x="121.17" y="543.5" ></text>
</g>
<g >
<title>do_sys_poll (3 samples, 0.05%)</title><rect x="27.4" y="661" width="0.6" height="15.0" fill="rgb(244,186,37)" rx="2" ry="2" />
<text  x="30.36" y="671.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (53 samples, 0.91%)</title><rect x="490.3" y="581" width="10.7" height="15.0" fill="rgb(208,150,12)" rx="2" ry="2" />
<text  x="493.31" y="591.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="723.0" y="549" width="0.4" height="15.0" fill="rgb(226,171,35)" rx="2" ry="2" />
<text  x="726.00" y="559.5" ></text>
</g>
<g >
<title>snd_ctl_elem_read (2 samples, 0.03%)</title><rect x="901.6" y="709" width="0.4" height="15.0" fill="rgb(225,123,18)" rx="2" ry="2" />
<text  x="904.61" y="719.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="1169.0" y="549" width="0.2" height="15.0" fill="rgb(227,104,14)" rx="2" ry="2" />
<text  x="1172.01" y="559.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="944.2" y="725" width="0.2" height="15.0" fill="rgb(217,43,9)" rx="2" ry="2" />
<text  x="947.19" y="735.5" ></text>
</g>
<g >
<title>ovl_read_iter (1 samples, 0.02%)</title><rect x="120.6" y="453" width="0.2" height="15.0" fill="rgb(215,21,43)" rx="2" ry="2" />
<text  x="123.59" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (72 samples, 1.23%)</title><rect x="610.0" y="597" width="14.5" height="15.0" fill="rgb(207,48,10)" rx="2" ry="2" />
<text  x="612.99" y="607.5" ></text>
</g>
<g >
<title>dequeue_task_rt (4 samples, 0.07%)</title><rect x="936.1" y="629" width="0.8" height="15.0" fill="rgb(234,225,27)" rx="2" ry="2" />
<text  x="939.12" y="639.5" ></text>
</g>
<g >
<title>gup_pmd_range.constprop.0 (1 samples, 0.02%)</title><rect x="893.1" y="613" width="0.2" height="15.0" fill="rgb(227,213,40)" rx="2" ry="2" />
<text  x="896.13" y="623.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (14 samples, 0.24%)</title><rect x="970.0" y="629" width="2.8" height="15.0" fill="rgb(207,32,36)" rx="2" ry="2" />
<text  x="973.02" y="639.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (3 samples, 0.05%)</title><rect x="35.0" y="309" width="0.6" height="15.0" fill="rgb(252,215,33)" rx="2" ry="2" />
<text  x="38.02" y="319.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (1 samples, 0.02%)</title><rect x="980.7" y="533" width="0.2" height="15.0" fill="rgb(233,145,44)" rx="2" ry="2" />
<text  x="983.72" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.03%)</title><rect x="608.4" y="501" width="0.4" height="15.0" fill="rgb(219,15,49)" rx="2" ry="2" />
<text  x="611.38" y="511.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.05%)</title><rect x="119.2" y="373" width="0.6" height="15.0" fill="rgb(234,83,20)" rx="2" ry="2" />
<text  x="122.18" y="383.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1,357 samples, 23.21%)</title><rect x="120.8" y="629" width="273.9" height="15.0" fill="rgb(236,202,13)" rx="2" ry="2" />
<text  x="123.80" y="639.5" >rustposix::interface::pipe::Emulated..</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.03%)</title><rect x="608.4" y="485" width="0.4" height="15.0" fill="rgb(254,113,32)" rx="2" ry="2" />
<text  x="611.38" y="495.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.02%)</title><rect x="118.8" y="421" width="0.2" height="15.0" fill="rgb(250,126,33)" rx="2" ry="2" />
<text  x="121.78" y="431.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="947.4" y="661" width="0.2" height="15.0" fill="rgb(225,203,23)" rx="2" ry="2" />
<text  x="950.42" y="671.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="891.3" y="677" width="0.4" height="15.0" fill="rgb(233,61,0)" rx="2" ry="2" />
<text  x="894.32" y="687.5" ></text>
</g>
<g >
<title>BitmapSetBit (1 samples, 0.02%)</title><rect x="116.6" y="645" width="0.2" height="15.0" fill="rgb(252,178,17)" rx="2" ry="2" />
<text  x="119.56" y="655.5" ></text>
</g>
<g >
<title>azx_pcm_pointer (44 samples, 0.75%)</title><rect x="919.4" y="645" width="8.8" height="15.0" fill="rgb(228,99,17)" rx="2" ry="2" />
<text  x="922.37" y="655.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="119.0" y="261" width="0.2" height="15.0" fill="rgb(215,222,33)" rx="2" ry="2" />
<text  x="121.98" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.19%)</title><rect x="430.8" y="645" width="2.2" height="15.0" fill="rgb(212,228,5)" rx="2" ry="2" />
<text  x="433.78" y="655.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1 samples, 0.02%)</title><rect x="1166.6" y="629" width="0.2" height="15.0" fill="rgb(205,218,23)" rx="2" ry="2" />
<text  x="1169.59" y="639.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="118.6" y="277" width="0.2" height="15.0" fill="rgb(228,143,37)" rx="2" ry="2" />
<text  x="121.58" y="287.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="982.7" y="437" width="0.2" height="15.0" fill="rgb(242,47,31)" rx="2" ry="2" />
<text  x="985.74" y="447.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="893.3" y="661" width="0.2" height="15.0" fill="rgb(239,212,6)" rx="2" ry="2" />
<text  x="896.34" y="671.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.05%)</title><rect x="955.1" y="613" width="0.6" height="15.0" fill="rgb(221,106,24)" rx="2" ry="2" />
<text  x="958.09" y="623.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (2 samples, 0.03%)</title><rect x="972.2" y="453" width="0.4" height="15.0" fill="rgb(206,145,20)" rx="2" ry="2" />
<text  x="975.24" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (2 samples, 0.03%)</title><rect x="1156.3" y="661" width="0.4" height="15.0" fill="rgb(210,69,42)" rx="2" ry="2" />
<text  x="1159.30" y="671.5" ></text>
</g>
<g >
<title>dma_fence_wait_timeout (1 samples, 0.02%)</title><rect x="952.9" y="645" width="0.2" height="15.0" fill="rgb(212,120,26)" rx="2" ry="2" />
<text  x="955.87" y="655.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.02%)</title><rect x="943.6" y="693" width="0.2" height="15.0" fill="rgb(206,14,6)" rx="2" ry="2" />
<text  x="946.59" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="28.0" y="629" width="0.2" height="15.0" fill="rgb(252,33,11)" rx="2" ry="2" />
<text  x="30.96" y="639.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="138.4" y="533" width="0.2" height="15.0" fill="rgb(238,47,54)" rx="2" ry="2" />
<text  x="141.35" y="543.5" ></text>
</g>
<g >
<title>main (3 samples, 0.05%)</title><rect x="10.2" y="757" width="0.6" height="15.0" fill="rgb(239,137,52)" rx="2" ry="2" />
<text  x="13.20" y="767.5" ></text>
</g>
<g >
<title>ksys_write (3 samples, 0.05%)</title><rect x="943.6" y="741" width="0.6" height="15.0" fill="rgb(231,68,26)" rx="2" ry="2" />
<text  x="946.59" y="751.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (4 samples, 0.07%)</title><rect x="949.4" y="597" width="0.8" height="15.0" fill="rgb(234,87,17)" rx="2" ry="2" />
<text  x="952.44" y="607.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="546.2" y="533" width="0.2" height="15.0" fill="rgb(237,146,16)" rx="2" ry="2" />
<text  x="549.22" y="543.5" ></text>
</g>
<g >
<title>ipv6_list_rcv (1 samples, 0.02%)</title><rect x="972.6" y="469" width="0.2" height="15.0" fill="rgb(227,83,34)" rx="2" ry="2" />
<text  x="975.65" y="479.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (2 samples, 0.03%)</title><rect x="949.0" y="613" width="0.4" height="15.0" fill="rgb(239,71,21)" rx="2" ry="2" />
<text  x="952.04" y="623.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="110.3" y="389" width="0.2" height="15.0" fill="rgb(246,208,53)" rx="2" ry="2" />
<text  x="113.30" y="399.5" ></text>
</g>
<g >
<title>open_last_lookups (1 samples, 0.02%)</title><rect x="118.8" y="389" width="0.2" height="15.0" fill="rgb(236,188,32)" rx="2" ry="2" />
<text  x="121.78" y="399.5" ></text>
</g>
<g >
<title>snd_pcm_update_hw_ptr0 (83 samples, 1.42%)</title><rect x="902.4" y="661" width="16.8" height="15.0" fill="rgb(241,23,51)" rx="2" ry="2" />
<text  x="905.42" y="671.5" ></text>
</g>
<g >
<title>__ioctl (80 samples, 1.37%)</title><rect x="11.2" y="693" width="16.2" height="15.0" fill="rgb(224,195,48)" rx="2" ry="2" />
<text  x="14.21" y="703.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.05%)</title><rect x="602.9" y="565" width="0.6" height="15.0" fill="rgb(205,195,34)" rx="2" ry="2" />
<text  x="605.93" y="575.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="1168.8" y="517" width="0.2" height="15.0" fill="rgb(244,18,32)" rx="2" ry="2" />
<text  x="1171.81" y="527.5" ></text>
</g>
<g >
<title>dma_resv_add_shared_fence (1 samples, 0.02%)</title><rect x="898.2" y="645" width="0.2" height="15.0" fill="rgb(224,127,39)" rx="2" ry="2" />
<text  x="901.18" y="655.5" ></text>
</g>
<g >
<title>insert_vmap_area.constprop.0 (1 samples, 0.02%)</title><rect x="744.0" y="597" width="0.2" height="15.0" fill="rgb(215,87,14)" rx="2" ry="2" />
<text  x="746.99" y="607.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="969.0" y="389" width="0.2" height="15.0" fill="rgb(241,126,12)" rx="2" ry="2" />
<text  x="972.01" y="399.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (4 samples, 0.07%)</title><rect x="991.8" y="661" width="0.8" height="15.0" fill="rgb(248,78,14)" rx="2" ry="2" />
<text  x="994.82" y="671.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.02%)</title><rect x="946.0" y="693" width="0.2" height="15.0" fill="rgb(247,100,3)" rx="2" ry="2" />
<text  x="949.01" y="703.5" ></text>
</g>
<g >
<title>udpv6_rcv (1 samples, 0.02%)</title><rect x="972.6" y="357" width="0.2" height="15.0" fill="rgb(241,161,39)" rx="2" ry="2" />
<text  x="975.65" y="367.5" ></text>
</g>
<g >
<title>[anon] (120 samples, 2.05%)</title><rect x="38.7" y="789" width="24.2" height="15.0" fill="rgb(236,198,9)" rx="2" ry="2" />
<text  x="41.66" y="799.5" >[..</text>
</g>
<g >
<title>ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="118.8" y="197" width="0.2" height="15.0" fill="rgb(208,136,21)" rx="2" ry="2" />
<text  x="121.78" y="207.5" ></text>
</g>
<g >
<title>drm_atomic_helper_cleanup_planes (3 samples, 0.05%)</title><rect x="954.1" y="677" width="0.6" height="15.0" fill="rgb(235,131,41)" rx="2" ry="2" />
<text  x="957.08" y="687.5" ></text>
</g>
<g >
<title>amdgpu_crtc_get_scanout_position (4 samples, 0.07%)</title><rect x="968.0" y="421" width="0.8" height="15.0" fill="rgb(222,18,43)" rx="2" ry="2" />
<text  x="971.01" y="431.5" ></text>
</g>
<g >
<title>irqentry_exit (2 samples, 0.03%)</title><rect x="718.2" y="741" width="0.4" height="15.0" fill="rgb(210,42,38)" rx="2" ry="2" />
<text  x="721.16" y="751.5" ></text>
</g>
<g >
<title>copy_page_from_iter (1 samples, 0.02%)</title><rect x="722.8" y="613" width="0.2" height="15.0" fill="rgb(242,53,46)" rx="2" ry="2" />
<text  x="725.80" y="623.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (2 samples, 0.03%)</title><rect x="964.8" y="373" width="0.4" height="15.0" fill="rgb(234,105,31)" rx="2" ry="2" />
<text  x="967.78" y="383.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="33.0" y="389" width="0.2" height="15.0" fill="rgb(220,112,16)" rx="2" ry="2" />
<text  x="36.01" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.05%)</title><rect x="632.8" y="549" width="0.6" height="15.0" fill="rgb(234,162,31)" rx="2" ry="2" />
<text  x="635.79" y="559.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1168.8" y="501" width="0.2" height="15.0" fill="rgb(223,204,49)" rx="2" ry="2" />
<text  x="1171.81" y="511.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="963.0" y="293" width="0.2" height="15.0" fill="rgb(245,172,28)" rx="2" ry="2" />
<text  x="965.96" y="303.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.02%)</title><rect x="118.2" y="293" width="0.2" height="15.0" fill="rgb(237,194,16)" rx="2" ry="2" />
<text  x="121.17" y="303.5" ></text>
</g>
<g >
<title>ttwu_do_activate (14 samples, 0.24%)</title><rect x="975.7" y="517" width="2.8" height="15.0" fill="rgb(210,126,25)" rx="2" ry="2" />
<text  x="978.67" y="527.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="1189.2" y="581" width="0.2" height="15.0" fill="rgb(250,228,47)" rx="2" ry="2" />
<text  x="1192.19" y="591.5" ></text>
</g>
<g >
<title>cpuacct_charge (2 samples, 0.03%)</title><rect x="936.5" y="597" width="0.4" height="15.0" fill="rgb(235,72,18)" rx="2" ry="2" />
<text  x="939.52" y="607.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2 samples, 0.03%)</title><rect x="891.3" y="693" width="0.4" height="15.0" fill="rgb(209,21,49)" rx="2" ry="2" />
<text  x="894.32" y="703.5" ></text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.02%)</title><rect x="952.9" y="613" width="0.2" height="15.0" fill="rgb(252,182,0)" rx="2" ry="2" />
<text  x="955.87" y="623.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.02%)</title><rect x="119.8" y="725" width="0.2" height="15.0" fill="rgb(238,108,37)" rx="2" ry="2" />
<text  x="122.79" y="735.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::is_initialized (1 samples, 0.02%)</title><rect x="454.2" y="549" width="0.2" height="15.0" fill="rgb(223,174,26)" rx="2" ry="2" />
<text  x="457.19" y="559.5" ></text>
</g>
<g >
<title>rustposix::interface::file::openfile (1 samples, 0.02%)</title><rect x="118.8" y="629" width="0.2" height="15.0" fill="rgb(216,143,28)" rx="2" ry="2" />
<text  x="121.78" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (1 samples, 0.02%)</title><rect x="38.5" y="741" width="0.2" height="15.0" fill="rgb(222,3,34)" rx="2" ry="2" />
<text  x="41.46" y="751.5" ></text>
</g>
<g >
<title>timekeeping_advance (1 samples, 0.02%)</title><rect x="1189.0" y="597" width="0.2" height="15.0" fill="rgb(234,150,27)" rx="2" ry="2" />
<text  x="1191.99" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_write (3 samples, 0.05%)</title><rect x="943.6" y="757" width="0.6" height="15.0" fill="rgb(253,165,1)" rx="2" ry="2" />
<text  x="946.59" y="767.5" ></text>
</g>
<g >
<title>send_vblank_event (2 samples, 0.03%)</title><rect x="968.8" y="485" width="0.4" height="15.0" fill="rgb(254,90,39)" rx="2" ry="2" />
<text  x="971.81" y="495.5" ></text>
</g>
<g >
<title>tick_program_event (3 samples, 0.05%)</title><rect x="984.4" y="597" width="0.6" height="15.0" fill="rgb(245,51,47)" rx="2" ry="2" />
<text  x="987.35" y="607.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="972.6" y="245" width="0.2" height="15.0" fill="rgb(239,65,37)" rx="2" ry="2" />
<text  x="975.65" y="255.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.02%)</title><rect x="744.2" y="533" width="0.2" height="15.0" fill="rgb(222,210,10)" rx="2" ry="2" />
<text  x="747.20" y="543.5" ></text>
</g>
<g >
<title>wake_up_process (22 samples, 0.38%)</title><rect x="974.7" y="549" width="4.4" height="15.0" fill="rgb(235,138,40)" rx="2" ry="2" />
<text  x="977.67" y="559.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="947.6" y="597" width="0.2" height="15.0" fill="rgb(224,76,46)" rx="2" ry="2" />
<text  x="950.62" y="607.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16 samples, 0.27%)</title><rect x="725.6" y="773" width="3.3" height="15.0" fill="rgb(213,158,50)" rx="2" ry="2" />
<text  x="728.63" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (175 samples, 2.99%)</title><rect x="504.2" y="613" width="35.4" height="15.0" fill="rgb(224,135,12)" rx="2" ry="2" />
<text  x="507.24" y="623.5" >co..</text>
</g>
<g >
<title>__x64_sys_epoll_wait (4 samples, 0.07%)</title><rect x="890.9" y="757" width="0.8" height="15.0" fill="rgb(245,128,8)" rx="2" ry="2" />
<text  x="893.91" y="767.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (92 samples, 1.57%)</title><rect x="972.8" y="677" width="18.6" height="15.0" fill="rgb(251,74,4)" rx="2" ry="2" />
<text  x="975.85" y="687.5" ></text>
</g>
<g >
<title>enter_lazy_tlb (1 samples, 0.02%)</title><rect x="892.1" y="661" width="0.2" height="15.0" fill="rgb(225,188,9)" rx="2" ry="2" />
<text  x="895.12" y="671.5" ></text>
</g>
<g >
<title>sock_wfree (1 samples, 0.02%)</title><rect x="942.4" y="597" width="0.2" height="15.0" fill="rgb(225,127,10)" rx="2" ry="2" />
<text  x="945.38" y="607.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (4 samples, 0.07%)</title><rect x="966.2" y="341" width="0.8" height="15.0" fill="rgb(241,115,51)" rx="2" ry="2" />
<text  x="969.19" y="351.5" ></text>
</g>
<g >
<title>activate_page (1 samples, 0.02%)</title><rect x="752.5" y="565" width="0.2" height="15.0" fill="rgb(219,120,51)" rx="2" ry="2" />
<text  x="755.47" y="575.5" ></text>
</g>
<g >
<title>drm_ioctl_kernel (26 samples, 0.44%)</title><rect x="894.5" y="709" width="5.3" height="15.0" fill="rgb(215,138,38)" rx="2" ry="2" />
<text  x="897.55" y="719.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="891.1" y="677" width="0.2" height="15.0" fill="rgb(247,225,48)" rx="2" ry="2" />
<text  x="894.12" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (277 samples, 4.74%)</title><rect x="890.3" y="773" width="55.9" height="15.0" fill="rgb(231,160,0)" rx="2" ry="2" />
<text  x="893.31" y="783.5" >do_sy..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.02%)</title><rect x="120.4" y="581" width="0.2" height="15.0" fill="rgb(235,49,35)" rx="2" ry="2" />
<text  x="123.39" y="591.5" ></text>
</g>
<g >
<title>unmap_single_vma (27 samples, 0.46%)</title><rect x="751.1" y="645" width="5.4" height="15.0" fill="rgb(237,150,17)" rx="2" ry="2" />
<text  x="754.06" y="655.5" ></text>
</g>
<g >
<title>NaClSysExecve (2 samples, 0.03%)</title><rect x="118.2" y="741" width="0.4" height="15.0" fill="rgb(211,105,36)" rx="2" ry="2" />
<text  x="121.17" y="751.5" ></text>
</g>
<g >
<title>dm_read_reg_func (2 samples, 0.03%)</title><rect x="949.4" y="565" width="0.4" height="15.0" fill="rgb(240,65,2)" rx="2" ry="2" />
<text  x="952.44" y="575.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (178 samples, 3.04%)</title><rect x="558.3" y="613" width="35.9" height="15.0" fill="rgb(241,44,38)" rx="2" ry="2" />
<text  x="561.33" y="623.5" >rin..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (32 samples, 0.55%)</title><rect x="50.0" y="773" width="6.4" height="15.0" fill="rgb(229,165,29)" rx="2" ry="2" />
<text  x="52.96" y="783.5" ></text>
</g>
<g >
<title>cpuidle_select (26 samples, 0.44%)</title><rect x="1150.4" y="709" width="5.3" height="15.0" fill="rgb(253,153,30)" rx="2" ry="2" />
<text  x="1153.44" y="719.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (4 samples, 0.07%)</title><rect x="710.9" y="597" width="0.8" height="15.0" fill="rgb(240,153,38)" rx="2" ry="2" />
<text  x="713.90" y="607.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (6 samples, 0.10%)</title><rect x="555.7" y="565" width="1.2" height="15.0" fill="rgb(229,131,10)" rx="2" ry="2" />
<text  x="558.70" y="575.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.05%)</title><rect x="32.0" y="341" width="0.6" height="15.0" fill="rgb(214,171,40)" rx="2" ry="2" />
<text  x="35.00" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2 samples, 0.03%)</title><rect x="489.9" y="533" width="0.4" height="15.0" fill="rgb(247,70,1)" rx="2" ry="2" />
<text  x="492.91" y="543.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.03%)</title><rect x="119.4" y="293" width="0.4" height="15.0" fill="rgb(209,139,6)" rx="2" ry="2" />
<text  x="122.38" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (92 samples, 1.57%)</title><rect x="454.4" y="597" width="18.6" height="15.0" fill="rgb(236,40,43)" rx="2" ry="2" />
<text  x="457.39" y="607.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.05%)</title><rect x="955.1" y="597" width="0.6" height="15.0" fill="rgb(215,54,3)" rx="2" ry="2" />
<text  x="958.09" y="607.5" ></text>
</g>
<g >
<title>do_iter_write (5 samples, 0.09%)</title><rect x="944.4" y="709" width="1.0" height="15.0" fill="rgb(244,140,33)" rx="2" ry="2" />
<text  x="947.39" y="719.5" ></text>
</g>
<g >
<title>udpv6_queue_rcv_one_skb (1 samples, 0.02%)</title><rect x="972.6" y="293" width="0.2" height="15.0" fill="rgb(216,229,12)" rx="2" ry="2" />
<text  x="975.65" y="303.5" ></text>
</g>
<g >
<title>ip6_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="972.6" y="373" width="0.2" height="15.0" fill="rgb(208,22,32)" rx="2" ry="2" />
<text  x="975.65" y="383.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="119.2" y="277" width="0.2" height="15.0" fill="rgb(249,208,12)" rx="2" ry="2" />
<text  x="122.18" y="287.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (3 samples, 0.05%)</title><rect x="722.8" y="629" width="0.6" height="15.0" fill="rgb(226,129,6)" rx="2" ry="2" />
<text  x="725.80" y="639.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (36 samples, 0.62%)</title><rect x="632.0" y="645" width="7.3" height="15.0" fill="rgb(243,43,9)" rx="2" ry="2" />
<text  x="634.99" y="655.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.02%)</title><rect x="990.6" y="549" width="0.2" height="15.0" fill="rgb(223,111,13)" rx="2" ry="2" />
<text  x="993.61" y="559.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="132.7" y="565" width="0.2" height="15.0" fill="rgb(233,129,41)" rx="2" ry="2" />
<text  x="135.70" y="575.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.02%)</title><rect x="947.4" y="645" width="0.2" height="15.0" fill="rgb(254,168,3)" rx="2" ry="2" />
<text  x="950.42" y="655.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (2 samples, 0.03%)</title><rect x="1187.0" y="645" width="0.4" height="15.0" fill="rgb(251,113,23)" rx="2" ry="2" />
<text  x="1189.97" y="655.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="33.4" y="325" width="0.2" height="15.0" fill="rgb(220,80,15)" rx="2" ry="2" />
<text  x="36.41" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="744.0" y="757" width="0.2" height="15.0" fill="rgb(224,3,4)" rx="2" ry="2" />
<text  x="746.99" y="767.5" ></text>
</g>
<g >
<title>handle_pte_fault (3 samples, 0.05%)</title><rect x="109.9" y="549" width="0.6" height="15.0" fill="rgb(215,4,22)" rx="2" ry="2" />
<text  x="112.90" y="559.5" ></text>
</g>
<g >
<title>enqueue_task_rt (2 samples, 0.03%)</title><rect x="897.2" y="501" width="0.4" height="15.0" fill="rgb(214,12,29)" rx="2" ry="2" />
<text  x="900.17" y="511.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="132.7" y="453" width="0.2" height="15.0" fill="rgb(246,84,9)" rx="2" ry="2" />
<text  x="135.70" y="463.5" ></text>
</g>
<g >
<title>llist_add_batch (1 samples, 0.02%)</title><rect x="1160.5" y="613" width="0.2" height="15.0" fill="rgb(250,134,10)" rx="2" ry="2" />
<text  x="1163.54" y="623.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="11.0" y="645" width="0.2" height="15.0" fill="rgb(227,5,17)" rx="2" ry="2" />
<text  x="14.01" y="655.5" ></text>
</g>
<g >
<title>dma_resv_wait_timeout_rcu (1 samples, 0.02%)</title><rect x="952.9" y="661" width="0.2" height="15.0" fill="rgb(229,115,38)" rx="2" ry="2" />
<text  x="955.87" y="671.5" ></text>
</g>
<g >
<title>drm_ioctl (30 samples, 0.51%)</title><rect x="893.7" y="725" width="6.1" height="15.0" fill="rgb(218,49,18)" rx="2" ry="2" />
<text  x="896.74" y="735.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="942.8" y="565" width="0.2" height="15.0" fill="rgb(253,168,52)" rx="2" ry="2" />
<text  x="945.78" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (22 samples, 0.38%)</title><rect x="433.0" y="597" width="4.4" height="15.0" fill="rgb(248,40,53)" rx="2" ry="2" />
<text  x="436.00" y="607.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (3 samples, 0.05%)</title><rect x="395.1" y="661" width="0.6" height="15.0" fill="rgb(229,187,20)" rx="2" ry="2" />
<text  x="398.06" y="671.5" ></text>
</g>
<g >
<title>resource_pixel_format_to_bpp (1 samples, 0.02%)</title><rect x="952.7" y="613" width="0.2" height="15.0" fill="rgb(213,120,34)" rx="2" ry="2" />
<text  x="955.67" y="623.5" ></text>
</g>
<g >
<title>asm_common_interrupt (68 samples, 1.16%)</title><rect x="959.1" y="677" width="13.7" height="15.0" fill="rgb(233,103,29)" rx="2" ry="2" />
<text  x="962.13" y="687.5" ></text>
</g>
<g >
<title>ip_list_rcv (2 samples, 0.03%)</title><rect x="972.2" y="469" width="0.4" height="15.0" fill="rgb(210,177,6)" rx="2" ry="2" />
<text  x="975.24" y="479.5" ></text>
</g>
<g >
<title>drm_get_last_vbltimestamp (4 samples, 0.07%)</title><rect x="968.0" y="469" width="0.8" height="15.0" fill="rgb(238,1,32)" rx="2" ry="2" />
<text  x="971.01" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (26 samples, 0.44%)</title><rect x="619.3" y="581" width="5.2" height="15.0" fill="rgb(208,128,1)" rx="2" ry="2" />
<text  x="622.27" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (481 samples, 8.23%)</title><rect x="501.0" y="629" width="97.1" height="15.0" fill="rgb(240,123,51)" rx="2" ry="2" />
<text  x="504.01" y="639.5" >rustposix::..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="27.8" y="613" width="0.2" height="15.0" fill="rgb(246,58,1)" rx="2" ry="2" />
<text  x="30.76" y="623.5" ></text>
</g>
<g >
<title>do_idle (108 samples, 1.85%)</title><rect x="1167.8" y="677" width="21.8" height="15.0" fill="rgb(240,119,47)" rx="2" ry="2" />
<text  x="1170.80" y="687.5" >d..</text>
</g>
<g >
<title>hrtimer_interrupt (5 samples, 0.09%)</title><rect x="1168.0" y="549" width="1.0" height="15.0" fill="rgb(209,130,32)" rx="2" ry="2" />
<text  x="1171.00" y="559.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.02%)</title><rect x="744.4" y="709" width="0.2" height="15.0" fill="rgb(218,197,37)" rx="2" ry="2" />
<text  x="747.40" y="719.5" ></text>
</g>
<g >
<title>sock_write_iter (5 samples, 0.09%)</title><rect x="944.4" y="677" width="1.0" height="15.0" fill="rgb(223,41,44)" rx="2" ry="2" />
<text  x="947.39" y="687.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (5 samples, 0.09%)</title><rect x="1168.0" y="565" width="1.0" height="15.0" fill="rgb(253,107,4)" rx="2" ry="2" />
<text  x="1171.00" y="575.5" ></text>
</g>
<g >
<title>task_tick_idle (1 samples, 0.02%)</title><rect x="983.3" y="517" width="0.2" height="15.0" fill="rgb(218,116,38)" rx="2" ry="2" />
<text  x="986.34" y="527.5" ></text>
</g>
<g >
<title>drm_sched_main (2 samples, 0.03%)</title><rect x="946.2" y="757" width="0.4" height="15.0" fill="rgb(249,200,19)" rx="2" ry="2" />
<text  x="949.21" y="767.5" ></text>
</g>
<g >
<title>up_read (3 samples, 0.05%)</title><rect x="717.6" y="725" width="0.6" height="15.0" fill="rgb(251,57,18)" rx="2" ry="2" />
<text  x="720.56" y="735.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (3 samples, 0.05%)</title><rect x="722.8" y="757" width="0.6" height="15.0" fill="rgb(219,43,48)" rx="2" ry="2" />
<text  x="725.80" y="767.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.02%)</title><rect x="947.6" y="661" width="0.2" height="15.0" fill="rgb(215,52,27)" rx="2" ry="2" />
<text  x="950.62" y="671.5" ></text>
</g>
<g >
<title>proc_single_show (1 samples, 0.02%)</title><rect x="28.0" y="549" width="0.2" height="15.0" fill="rgb(219,194,3)" rx="2" ry="2" />
<text  x="30.96" y="559.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="723.0" y="421" width="0.2" height="15.0" fill="rgb(239,197,20)" rx="2" ry="2" />
<text  x="726.00" y="431.5" ></text>
</g>
<g >
<title>CopyBundleTails (6 samples, 0.10%)</title><rect x="108.7" y="693" width="1.2" height="15.0" fill="rgb(249,229,16)" rx="2" ry="2" />
<text  x="111.69" y="703.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (4 samples, 0.07%)</title><rect x="968.0" y="357" width="0.8" height="15.0" fill="rgb(242,32,23)" rx="2" ry="2" />
<text  x="971.01" y="367.5" ></text>
</g>
<g >
<title>__prepare_to_swait (1 samples, 0.02%)</title><rect x="954.9" y="645" width="0.2" height="15.0" fill="rgb(217,93,26)" rx="2" ry="2" />
<text  x="957.89" y="655.5" ></text>
</g>
<g >
<title>get_signal (2 samples, 0.03%)</title><rect x="756.7" y="693" width="0.4" height="15.0" fill="rgb(213,152,50)" rx="2" ry="2" />
<text  x="759.71" y="703.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (15 samples, 0.26%)</title><rect x="753.3" y="581" width="3.0" height="15.0" fill="rgb(214,209,31)" rx="2" ry="2" />
<text  x="756.28" y="591.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (1 samples, 0.02%)</title><rect x="944.6" y="549" width="0.2" height="15.0" fill="rgb(229,0,22)" rx="2" ry="2" />
<text  x="947.60" y="559.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="37.4" y="549" width="0.2" height="15.0" fill="rgb(218,87,0)" rx="2" ry="2" />
<text  x="40.45" y="559.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="119.6" y="197" width="0.2" height="15.0" fill="rgb(213,2,33)" rx="2" ry="2" />
<text  x="122.58" y="207.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (1 samples, 0.02%)</title><rect x="119.4" y="197" width="0.2" height="15.0" fill="rgb(254,157,36)" rx="2" ry="2" />
<text  x="122.38" y="207.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (5 samples, 0.09%)</title><rect x="962.0" y="357" width="1.0" height="15.0" fill="rgb(237,127,21)" rx="2" ry="2" />
<text  x="964.95" y="367.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (8 samples, 0.14%)</title><rect x="740.8" y="773" width="1.6" height="15.0" fill="rgb(248,53,16)" rx="2" ry="2" />
<text  x="743.76" y="783.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="38.3" y="469" width="0.2" height="15.0" fill="rgb(218,229,45)" rx="2" ry="2" />
<text  x="41.25" y="479.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (3 samples, 0.05%)</title><rect x="968.0" y="293" width="0.6" height="15.0" fill="rgb(218,106,22)" rx="2" ry="2" />
<text  x="971.01" y="303.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (1 samples, 0.02%)</title><rect x="985.6" y="629" width="0.2" height="15.0" fill="rgb(245,145,39)" rx="2" ry="2" />
<text  x="988.56" y="639.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (1 samples, 0.02%)</title><rect x="594.2" y="581" width="0.3" height="15.0" fill="rgb(254,225,16)" rx="2" ry="2" />
<text  x="597.25" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (2 samples, 0.03%)</title><rect x="889.7" y="773" width="0.4" height="15.0" fill="rgb(234,6,36)" rx="2" ry="2" />
<text  x="892.70" y="783.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.02%)</title><rect x="110.1" y="421" width="0.2" height="15.0" fill="rgb(242,200,45)" rx="2" ry="2" />
<text  x="113.10" y="431.5" ></text>
</g>
<g >
<title>new_sync_write (44 samples, 0.75%)</title><rect x="28.6" y="549" width="8.8" height="15.0" fill="rgb(206,180,33)" rx="2" ry="2" />
<text  x="31.57" y="559.5" ></text>
</g>
<g >
<title>ovl_create_real (1 samples, 0.02%)</title><rect x="118.8" y="293" width="0.2" height="15.0" fill="rgb(250,200,27)" rx="2" ry="2" />
<text  x="121.78" y="303.5" ></text>
</g>
<g >
<title>amdgpu_cs_vm_handling (3 samples, 0.05%)</title><rect x="898.4" y="677" width="0.6" height="15.0" fill="rgb(214,207,21)" rx="2" ry="2" />
<text  x="901.38" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (16 samples, 0.27%)</title><rect x="437.4" y="597" width="3.3" height="15.0" fill="rgb(247,138,16)" rx="2" ry="2" />
<text  x="440.44" y="607.5" ></text>
</g>
<g >
<title>exc_page_fault (2 samples, 0.03%)</title><rect x="117.8" y="693" width="0.4" height="15.0" fill="rgb(225,20,8)" rx="2" ry="2" />
<text  x="120.77" y="703.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (2 samples, 0.03%)</title><rect x="949.4" y="581" width="0.4" height="15.0" fill="rgb(253,190,28)" rx="2" ry="2" />
<text  x="952.44" y="591.5" ></text>
</g>
<g >
<title>__udpv6_queue_rcv_skb (1 samples, 0.02%)</title><rect x="972.6" y="277" width="0.2" height="15.0" fill="rgb(208,23,14)" rx="2" ry="2" />
<text  x="975.65" y="287.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="756.5" y="549" width="0.2" height="15.0" fill="rgb(206,0,33)" rx="2" ry="2" />
<text  x="759.51" y="559.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (6 samples, 0.10%)</title><rect x="754.9" y="501" width="1.2" height="15.0" fill="rgb(218,70,10)" rx="2" ry="2" />
<text  x="757.89" y="511.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (2 samples, 0.03%)</title><rect x="723.0" y="597" width="0.4" height="15.0" fill="rgb(211,207,11)" rx="2" ry="2" />
<text  x="726.00" y="607.5" ></text>
</g>
<g >
<title>NaClSysExit (6 samples, 0.10%)</title><rect x="118.6" y="741" width="1.2" height="15.0" fill="rgb(226,2,36)" rx="2" ry="2" />
<text  x="121.58" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 1.37%)</title><rect x="11.2" y="677" width="16.2" height="15.0" fill="rgb(238,149,24)" rx="2" ry="2" />
<text  x="14.21" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.02%)</title><rect x="723.4" y="693" width="0.2" height="15.0" fill="rgb(245,147,51)" rx="2" ry="2" />
<text  x="726.41" y="703.5" ></text>
</g>
<g >
<title>drm_mode_object_find (1 samples, 0.02%)</title><rect x="899.6" y="677" width="0.2" height="15.0" fill="rgb(213,174,49)" rx="2" ry="2" />
<text  x="902.59" y="687.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="119.0" y="245" width="0.2" height="15.0" fill="rgb(244,48,43)" rx="2" ry="2" />
<text  x="121.98" y="255.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="918.4" y="645" width="0.2" height="15.0" fill="rgb(211,220,47)" rx="2" ry="2" />
<text  x="921.36" y="655.5" ></text>
</g>
<g >
<title>snd_ctl_find_id (2 samples, 0.03%)</title><rect x="901.6" y="693" width="0.4" height="15.0" fill="rgb(217,184,38)" rx="2" ry="2" />
<text  x="904.61" y="703.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="947.6" y="613" width="0.2" height="15.0" fill="rgb(248,205,40)" rx="2" ry="2" />
<text  x="950.62" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_poll (3 samples, 0.05%)</title><rect x="27.4" y="677" width="0.6" height="15.0" fill="rgb(216,7,53)" rx="2" ry="2" />
<text  x="30.36" y="687.5" ></text>
</g>
<g >
<title>open_verify.constprop.0 (1 samples, 0.02%)</title><rect x="10.8" y="645" width="0.2" height="15.0" fill="rgb(252,153,13)" rx="2" ry="2" />
<text  x="13.81" y="655.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="987.0" y="549" width="0.2" height="15.0" fill="rgb(250,28,49)" rx="2" ry="2" />
<text  x="989.98" y="559.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.03%)</title><rect x="119.4" y="309" width="0.4" height="15.0" fill="rgb(222,153,26)" rx="2" ry="2" />
<text  x="122.38" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="119.4" y="101" width="0.2" height="15.0" fill="rgb(228,68,20)" rx="2" ry="2" />
<text  x="122.38" y="111.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.02%)</title><rect x="30.0" y="341" width="0.2" height="15.0" fill="rgb(211,29,42)" rx="2" ry="2" />
<text  x="32.98" y="351.5" ></text>
</g>
<g >
<title>amdgpu_crtc_get_scanout_position (5 samples, 0.09%)</title><rect x="963.0" y="405" width="1.0" height="15.0" fill="rgb(228,2,45)" rx="2" ry="2" />
<text  x="965.96" y="415.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 1.09%)</title><rect x="14.2" y="421" width="13.0" height="15.0" fill="rgb(254,52,21)" rx="2" ry="2" />
<text  x="17.24" y="431.5" ></text>
</g>
<g >
<title>ep_poll (4 samples, 0.07%)</title><rect x="890.9" y="725" width="0.8" height="15.0" fill="rgb(205,115,16)" rx="2" ry="2" />
<text  x="893.91" y="735.5" ></text>
</g>
<g >
<title>update_cpu_capacity (1 samples, 0.02%)</title><rect x="988.8" y="485" width="0.2" height="15.0" fill="rgb(228,110,0)" rx="2" ry="2" />
<text  x="991.79" y="495.5" ></text>
</g>
<g >
<title>NaClSysRead (1,365 samples, 23.35%)</title><rect x="120.2" y="741" width="275.5" height="15.0" fill="rgb(216,129,6)" rx="2" ry="2" />
<text  x="123.19" y="751.5" >NaClSysRead</text>
</g>
<g >
<title>schedule (3 samples, 0.05%)</title><rect x="947.4" y="709" width="0.6" height="15.0" fill="rgb(235,140,29)" rx="2" ry="2" />
<text  x="950.42" y="719.5" ></text>
</g>
<g >
<title>amdgpu_job_free_cb (1 samples, 0.02%)</title><rect x="946.2" y="741" width="0.2" height="15.0" fill="rgb(248,222,29)" rx="2" ry="2" />
<text  x="949.21" y="751.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="744.2" y="149" width="0.2" height="15.0" fill="rgb(230,41,16)" rx="2" ry="2" />
<text  x="747.20" y="159.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (58 samples, 0.99%)</title><rect x="639.3" y="629" width="11.7" height="15.0" fill="rgb(232,192,8)" rx="2" ry="2" />
<text  x="642.25" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="10.2" y="437" width="0.2" height="15.0" fill="rgb(238,44,21)" rx="2" ry="2" />
<text  x="13.20" y="447.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.02%)</title><rect x="969.0" y="325" width="0.2" height="15.0" fill="rgb(237,168,35)" rx="2" ry="2" />
<text  x="972.01" y="335.5" ></text>
</g>
<g >
<title>timekeeping_advance (5 samples, 0.09%)</title><rect x="979.7" y="501" width="1.0" height="15.0" fill="rgb(226,168,16)" rx="2" ry="2" />
<text  x="982.71" y="511.5" ></text>
</g>
<g >
<title>__alloc_file (1 samples, 0.02%)</title><rect x="10.8" y="501" width="0.2" height="15.0" fill="rgb(222,219,30)" rx="2" ry="2" />
<text  x="13.81" y="511.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.02%)</title><rect x="947.6" y="645" width="0.2" height="15.0" fill="rgb(241,37,38)" rx="2" ry="2" />
<text  x="950.62" y="655.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.02%)</title><rect x="117.8" y="565" width="0.2" height="15.0" fill="rgb(232,24,42)" rx="2" ry="2" />
<text  x="120.77" y="575.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.02%)</title><rect x="987.0" y="485" width="0.2" height="15.0" fill="rgb(208,50,16)" rx="2" ry="2" />
<text  x="989.98" y="495.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="987.4" y="549" width="0.2" height="15.0" fill="rgb(243,38,39)" rx="2" ry="2" />
<text  x="990.38" y="559.5" ></text>
</g>
<g >
<title>psi_group_change (3 samples, 0.05%)</title><rect x="977.9" y="469" width="0.6" height="15.0" fill="rgb(218,142,47)" rx="2" ry="2" />
<text  x="980.89" y="479.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (5 samples, 0.09%)</title><rect x="944.4" y="693" width="1.0" height="15.0" fill="rgb(216,32,52)" rx="2" ry="2" />
<text  x="947.39" y="703.5" ></text>
</g>
<g >
<title>_dl_map_object (1 samples, 0.02%)</title><rect x="10.2" y="485" width="0.2" height="15.0" fill="rgb(219,178,8)" rx="2" ry="2" />
<text  x="13.20" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="984.2" y="597" width="0.2" height="15.0" fill="rgb(239,92,1)" rx="2" ry="2" />
<text  x="987.15" y="607.5" ></text>
</g>
<g >
<title>do_writev (6 samples, 0.10%)</title><rect x="944.2" y="741" width="1.2" height="15.0" fill="rgb(209,40,26)" rx="2" ry="2" />
<text  x="947.19" y="751.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="723.0" y="565" width="0.4" height="15.0" fill="rgb(227,23,52)" rx="2" ry="2" />
<text  x="726.00" y="575.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (1 samples, 0.02%)</title><rect x="120.0" y="677" width="0.2" height="15.0" fill="rgb(216,58,51)" rx="2" ry="2" />
<text  x="122.99" y="687.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.02%)</title><rect x="118.2" y="709" width="0.2" height="15.0" fill="rgb(213,69,4)" rx="2" ry="2" />
<text  x="121.17" y="719.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.07%)</title><rect x="891.7" y="677" width="0.8" height="15.0" fill="rgb(212,224,49)" rx="2" ry="2" />
<text  x="894.72" y="687.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="946.0" y="741" width="0.2" height="15.0" fill="rgb(216,205,3)" rx="2" ry="2" />
<text  x="949.01" y="751.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1186.2" y="597" width="0.2" height="15.0" fill="rgb(240,104,20)" rx="2" ry="2" />
<text  x="1189.17" y="607.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.26%)</title><rect x="599.9" y="517" width="3.0" height="15.0" fill="rgb(244,130,47)" rx="2" ry="2" />
<text  x="602.90" y="527.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="929.7" y="693" width="0.2" height="15.0" fill="rgb(220,56,22)" rx="2" ry="2" />
<text  x="932.66" y="703.5" ></text>
</g>
<g >
<title>cpuidle_reflect (2 samples, 0.03%)</title><rect x="1150.0" y="709" width="0.4" height="15.0" fill="rgb(229,12,3)" rx="2" ry="2" />
<text  x="1153.04" y="719.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="119.4" y="277" width="0.2" height="15.0" fill="rgb(205,228,19)" rx="2" ry="2" />
<text  x="122.38" y="287.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="454.2" y="581" width="0.2" height="15.0" fill="rgb(238,118,36)" rx="2" ry="2" />
<text  x="457.19" y="591.5" ></text>
</g>
<g >
<title>update_audio_tstamp (2 samples, 0.03%)</title><rect x="918.8" y="645" width="0.4" height="15.0" fill="rgb(207,178,6)" rx="2" ry="2" />
<text  x="921.76" y="655.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.02%)</title><rect x="1187.6" y="661" width="0.2" height="15.0" fill="rgb(230,26,49)" rx="2" ry="2" />
<text  x="1190.58" y="671.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="132.7" y="437" width="0.2" height="15.0" fill="rgb(214,190,25)" rx="2" ry="2" />
<text  x="135.70" y="447.5" ></text>
</g>
<g >
<title>record__pushfn (45 samples, 0.77%)</title><rect x="28.4" y="693" width="9.0" height="15.0" fill="rgb(251,197,23)" rx="2" ry="2" />
<text  x="31.36" y="703.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="118.2" y="197" width="0.2" height="15.0" fill="rgb(231,195,52)" rx="2" ry="2" />
<text  x="121.17" y="207.5" ></text>
</g>
<g >
<title>drm_send_event_locked (1 samples, 0.02%)</title><rect x="969.0" y="469" width="0.2" height="15.0" fill="rgb(218,78,27)" rx="2" ry="2" />
<text  x="972.01" y="479.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (38 samples, 0.65%)</title><rect x="433.0" y="629" width="7.7" height="15.0" fill="rgb(245,162,31)" rx="2" ry="2" />
<text  x="436.00" y="639.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="132.7" y="469" width="0.2" height="15.0" fill="rgb(236,172,21)" rx="2" ry="2" />
<text  x="135.70" y="479.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (2 samples, 0.03%)</title><rect x="38.1" y="549" width="0.4" height="15.0" fill="rgb(210,152,1)" rx="2" ry="2" />
<text  x="41.05" y="559.5" ></text>
</g>
<g >
<title>unix_write_space (1 samples, 0.02%)</title><rect x="942.4" y="581" width="0.2" height="15.0" fill="rgb(224,96,26)" rx="2" ry="2" />
<text  x="945.38" y="591.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="955.3" y="565" width="0.2" height="15.0" fill="rgb(206,180,5)" rx="2" ry="2" />
<text  x="958.29" y="575.5" ></text>
</g>
<g >
<title>_dl_protect_relro (1 samples, 0.02%)</title><rect x="744.6" y="709" width="0.2" height="15.0" fill="rgb(238,210,10)" rx="2" ry="2" />
<text  x="747.60" y="719.5" ></text>
</g>
<g >
<title>worker_thread (40 samples, 0.68%)</title><rect x="948.2" y="757" width="8.1" height="15.0" fill="rgb(216,19,12)" rx="2" ry="2" />
<text  x="951.23" y="767.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="34.8" y="309" width="0.2" height="15.0" fill="rgb(242,78,17)" rx="2" ry="2" />
<text  x="37.82" y="319.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (1 samples, 0.02%)</title><rect x="118.2" y="325" width="0.2" height="15.0" fill="rgb(251,81,22)" rx="2" ry="2" />
<text  x="121.17" y="335.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="119.8" y="325" width="0.2" height="15.0" fill="rgb(225,87,6)" rx="2" ry="2" />
<text  x="122.79" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (11 samples, 0.19%)</title><rect x="430.8" y="629" width="2.2" height="15.0" fill="rgb(223,84,10)" rx="2" ry="2" />
<text  x="433.78" y="639.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="723.2" y="389" width="0.2" height="15.0" fill="rgb(238,99,18)" rx="2" ry="2" />
<text  x="726.21" y="399.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.02%)</title><rect x="10.8" y="565" width="0.2" height="15.0" fill="rgb(236,148,16)" rx="2" ry="2" />
<text  x="13.81" y="575.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.02%)</title><rect x="892.3" y="645" width="0.2" height="15.0" fill="rgb(239,122,33)" rx="2" ry="2" />
<text  x="895.33" y="655.5" ></text>
</g>
<g >
<title>amdgpu_cs_ioctl (23 samples, 0.39%)</title><rect x="894.5" y="693" width="4.7" height="15.0" fill="rgb(231,139,29)" rx="2" ry="2" />
<text  x="897.55" y="703.5" ></text>
</g>
<g >
<title>atime_needs_update (1 samples, 0.02%)</title><rect x="942.0" y="677" width="0.2" height="15.0" fill="rgb(227,151,44)" rx="2" ry="2" />
<text  x="944.97" y="687.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="37.4" y="485" width="0.2" height="15.0" fill="rgb(236,98,0)" rx="2" ry="2" />
<text  x="40.45" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.07%)</title><rect x="634.8" y="533" width="0.8" height="15.0" fill="rgb(252,133,38)" rx="2" ry="2" />
<text  x="637.81" y="543.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.02%)</title><rect x="942.0" y="709" width="0.2" height="15.0" fill="rgb(229,80,31)" rx="2" ry="2" />
<text  x="944.97" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (6 samples, 0.10%)</title><rect x="118.6" y="677" width="1.2" height="15.0" fill="rgb(219,68,26)" rx="2" ry="2" />
<text  x="121.58" y="687.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21 samples, 0.36%)</title><rect x="598.7" y="533" width="4.2" height="15.0" fill="rgb(207,103,12)" rx="2" ry="2" />
<text  x="601.69" y="543.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="1168.6" y="517" width="0.2" height="15.0" fill="rgb(251,88,30)" rx="2" ry="2" />
<text  x="1171.61" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_dlopen_mode (1 samples, 0.02%)</title><rect x="10.2" y="613" width="0.2" height="15.0" fill="rgb(205,62,22)" rx="2" ry="2" />
<text  x="13.20" y="623.5" ></text>
</g>
<g >
<title>update_wall_time (5 samples, 0.09%)</title><rect x="979.7" y="517" width="1.0" height="15.0" fill="rgb(222,114,38)" rx="2" ry="2" />
<text  x="982.71" y="527.5" ></text>
</g>
<g >
<title>amdgpu_sync_fence (1 samples, 0.02%)</title><rect x="898.6" y="645" width="0.2" height="15.0" fill="rgb(240,185,3)" rx="2" ry="2" />
<text  x="901.58" y="655.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (5 samples, 0.09%)</title><rect x="1168.0" y="581" width="1.0" height="15.0" fill="rgb(226,210,14)" rx="2" ry="2" />
<text  x="1171.00" y="591.5" ></text>
</g>
<g >
<title>do_sched_rt_period_timer (1 samples, 0.02%)</title><rect x="979.3" y="549" width="0.2" height="15.0" fill="rgb(208,112,49)" rx="2" ry="2" />
<text  x="982.31" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.10%)</title><rect x="638.0" y="597" width="1.3" height="15.0" fill="rgb(235,139,9)" rx="2" ry="2" />
<text  x="641.04" y="607.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.03%)</title><rect x="137.9" y="581" width="0.5" height="15.0" fill="rgb(210,14,37)" rx="2" ry="2" />
<text  x="140.95" y="591.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (2 samples, 0.03%)</title><rect x="964.8" y="389" width="0.4" height="15.0" fill="rgb(223,197,18)" rx="2" ry="2" />
<text  x="967.78" y="399.5" ></text>
</g>
<g >
<title>dma_fence_release (1 samples, 0.02%)</title><rect x="896.6" y="645" width="0.2" height="15.0" fill="rgb(210,135,40)" rx="2" ry="2" />
<text  x="899.56" y="655.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (3 samples, 0.05%)</title><rect x="609.4" y="597" width="0.6" height="15.0" fill="rgb(252,216,12)" rx="2" ry="2" />
<text  x="612.38" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (1 samples, 0.02%)</title><rect x="119.2" y="325" width="0.2" height="15.0" fill="rgb(235,130,8)" rx="2" ry="2" />
<text  x="122.18" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="394.7" y="581" width="0.2" height="15.0" fill="rgb(237,170,30)" rx="2" ry="2" />
<text  x="397.66" y="591.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (27 samples, 0.46%)</title><rect x="751.1" y="613" width="5.4" height="15.0" fill="rgb(249,203,36)" rx="2" ry="2" />
<text  x="754.06" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (23 samples, 0.39%)</title><rect x="320.4" y="549" width="4.6" height="15.0" fill="rgb(239,67,2)" rx="2" ry="2" />
<text  x="323.39" y="559.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (3 samples, 0.05%)</title><rect x="33.8" y="341" width="0.6" height="15.0" fill="rgb(209,65,3)" rx="2" ry="2" />
<text  x="36.81" y="351.5" ></text>
</g>
<g >
<title>unmap_vmas (27 samples, 0.46%)</title><rect x="751.1" y="661" width="5.4" height="15.0" fill="rgb(236,144,21)" rx="2" ry="2" />
<text  x="754.06" y="671.5" ></text>
</g>
<g >
<title>get_typical_interval (5 samples, 0.09%)</title><rect x="1152.3" y="677" width="1.0" height="15.0" fill="rgb(227,192,54)" rx="2" ry="2" />
<text  x="1155.26" y="687.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.02%)</title><rect x="118.6" y="565" width="0.2" height="15.0" fill="rgb(212,195,22)" rx="2" ry="2" />
<text  x="121.58" y="575.5" ></text>
</g>
<g >
<title>__getblk_gfp (1 samples, 0.02%)</title><rect x="118.8" y="165" width="0.2" height="15.0" fill="rgb(208,25,18)" rx="2" ry="2" />
<text  x="121.78" y="175.5" ></text>
</g>
<g >
<title>dm_read_reg_func (2 samples, 0.03%)</title><rect x="964.8" y="421" width="0.4" height="15.0" fill="rgb(213,229,29)" rx="2" ry="2" />
<text  x="967.78" y="431.5" ></text>
</g>
<g >
<title>do_epoll_pwait.part.0 (1 samples, 0.02%)</title><rect x="890.7" y="741" width="0.2" height="15.0" fill="rgb(217,80,54)" rx="2" ry="2" />
<text  x="893.71" y="751.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="1169.2" y="453" width="0.2" height="15.0" fill="rgb(245,49,1)" rx="2" ry="2" />
<text  x="1172.21" y="463.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.02%)</title><rect x="37.4" y="581" width="0.2" height="15.0" fill="rgb(233,20,43)" rx="2" ry="2" />
<text  x="40.45" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="744.6" y="661" width="0.2" height="15.0" fill="rgb(233,145,9)" rx="2" ry="2" />
<text  x="747.60" y="671.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="11.0" y="629" width="0.2" height="15.0" fill="rgb(253,96,19)" rx="2" ry="2" />
<text  x="14.01" y="639.5" ></text>
</g>
<g >
<title>__switch_to_xtra (1 samples, 0.02%)</title><rect x="935.9" y="629" width="0.2" height="15.0" fill="rgb(237,14,12)" rx="2" ry="2" />
<text  x="938.92" y="639.5" ></text>
</g>
<g >
<title>dc_check_update_surfaces_for_stream (2 samples, 0.03%)</title><rect x="952.5" y="645" width="0.4" height="15.0" fill="rgb(217,204,11)" rx="2" ry="2" />
<text  x="955.47" y="655.5" ></text>
</g>
<g >
<title>azx_get_pos_skl (55 samples, 0.94%)</title><rect x="907.3" y="613" width="11.1" height="15.0" fill="rgb(215,83,15)" rx="2" ry="2" />
<text  x="910.26" y="623.5" ></text>
</g>
<g >
<title>tonga_ih_get_wptr (1 samples, 0.02%)</title><rect x="969.6" y="565" width="0.2" height="15.0" fill="rgb(254,148,32)" rx="2" ry="2" />
<text  x="972.62" y="575.5" ></text>
</g>
<g >
<title>tick_sched_timer (20 samples, 0.34%)</title><rect x="979.5" y="565" width="4.0" height="15.0" fill="rgb(208,181,12)" rx="2" ry="2" />
<text  x="982.51" y="575.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_vblank_counter (5 samples, 0.09%)</title><rect x="962.0" y="389" width="1.0" height="15.0" fill="rgb(218,109,48)" rx="2" ry="2" />
<text  x="964.95" y="399.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (5 samples, 0.09%)</title><rect x="963.0" y="389" width="1.0" height="15.0" fill="rgb(230,194,7)" rx="2" ry="2" />
<text  x="965.96" y="399.5" ></text>
</g>
<g >
<title>CheckMemoryAccess (1 samples, 0.02%)</title><rect x="116.4" y="661" width="0.2" height="15.0" fill="rgb(217,131,5)" rx="2" ry="2" />
<text  x="119.36" y="671.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.02%)</title><rect x="938.1" y="629" width="0.2" height="15.0" fill="rgb(236,229,53)" rx="2" ry="2" />
<text  x="941.14" y="639.5" ></text>
</g>
<g >
<title>get_scaling_info_update_type (1 samples, 0.02%)</title><rect x="952.5" y="613" width="0.2" height="15.0" fill="rgb(241,222,54)" rx="2" ry="2" />
<text  x="955.47" y="623.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="1165.4" y="709" width="0.2" height="15.0" fill="rgb(220,198,52)" rx="2" ry="2" />
<text  x="1168.38" y="719.5" ></text>
</g>
<g >
<title>try_grab_compound_head (1 samples, 0.02%)</title><rect x="893.1" y="581" width="0.2" height="15.0" fill="rgb(243,17,41)" rx="2" ry="2" />
<text  x="896.13" y="591.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.02%)</title><rect x="118.0" y="661" width="0.2" height="15.0" fill="rgb(243,7,27)" rx="2" ry="2" />
<text  x="120.97" y="671.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (33 samples, 0.56%)</title><rect x="933.3" y="709" width="6.7" height="15.0" fill="rgb(245,5,35)" rx="2" ry="2" />
<text  x="936.29" y="719.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="1188.6" y="629" width="0.2" height="15.0" fill="rgb(225,63,11)" rx="2" ry="2" />
<text  x="1191.59" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (1 samples, 0.02%)</title><rect x="41.5" y="773" width="0.2" height="15.0" fill="rgb(230,50,25)" rx="2" ry="2" />
<text  x="44.48" y="783.5" ></text>
</g>
<g >
<title>internal_get_user_pages_fast (3 samples, 0.05%)</title><rect x="892.7" y="677" width="0.6" height="15.0" fill="rgb(211,139,11)" rx="2" ry="2" />
<text  x="895.73" y="687.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (3 samples, 0.05%)</title><rect x="725.0" y="773" width="0.6" height="15.0" fill="rgb(223,5,29)" rx="2" ry="2" />
<text  x="728.02" y="783.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="941.0" y="725" width="0.4" height="15.0" fill="rgb(229,107,24)" rx="2" ry="2" />
<text  x="943.96" y="735.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (15 samples, 0.26%)</title><rect x="129.7" y="613" width="3.0" height="15.0" fill="rgb(236,125,37)" rx="2" ry="2" />
<text  x="132.68" y="623.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="946.2" y="725" width="0.2" height="15.0" fill="rgb(213,154,29)" rx="2" ry="2" />
<text  x="949.21" y="735.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (62 samples, 1.06%)</title><rect x="441.7" y="629" width="12.5" height="15.0" fill="rgb(252,171,9)" rx="2" ry="2" />
<text  x="444.68" y="639.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="539.8" y="581" width="0.2" height="15.0" fill="rgb(226,139,24)" rx="2" ry="2" />
<text  x="542.76" y="591.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.05%)</title><rect x="754.1" y="533" width="0.6" height="15.0" fill="rgb(253,82,37)" rx="2" ry="2" />
<text  x="757.08" y="543.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.22%)</title><rect x="603.9" y="517" width="2.7" height="15.0" fill="rgb(240,148,48)" rx="2" ry="2" />
<text  x="606.94" y="527.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.02%)</title><rect x="1187.6" y="645" width="0.2" height="15.0" fill="rgb(213,162,4)" rx="2" ry="2" />
<text  x="1190.58" y="655.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="743.6" y="757" width="0.2" height="15.0" fill="rgb(231,176,25)" rx="2" ry="2" />
<text  x="746.59" y="767.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (3 samples, 0.05%)</title><rect x="723.8" y="773" width="0.6" height="15.0" fill="rgb(246,117,7)" rx="2" ry="2" />
<text  x="726.81" y="783.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="638.2" y="581" width="0.6" height="15.0" fill="rgb(220,147,6)" rx="2" ry="2" />
<text  x="641.24" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (2 samples, 0.03%)</title><rect x="62.1" y="709" width="0.4" height="15.0" fill="rgb(248,28,34)" rx="2" ry="2" />
<text  x="65.07" y="719.5" ></text>
</g>
<g >
<title>do_group_exit (28 samples, 0.48%)</title><rect x="751.1" y="741" width="5.6" height="15.0" fill="rgb(250,31,20)" rx="2" ry="2" />
<text  x="754.06" y="751.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="118.6" y="309" width="0.2" height="15.0" fill="rgb(232,173,48)" rx="2" ry="2" />
<text  x="121.58" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.12%)</title><rect x="633.4" y="533" width="1.4" height="15.0" fill="rgb(227,169,43)" rx="2" ry="2" />
<text  x="636.40" y="543.5" ></text>
</g>
<g >
<title>azx_get_delay_from_lpib (12 samples, 0.21%)</title><rect x="919.4" y="613" width="2.4" height="15.0" fill="rgb(229,36,44)" rx="2" ry="2" />
<text  x="922.37" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (7 samples, 0.12%)</title><rect x="942.2" y="757" width="1.4" height="15.0" fill="rgb(205,44,42)" rx="2" ry="2" />
<text  x="945.17" y="767.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="963.0" y="277" width="0.2" height="15.0" fill="rgb(240,182,46)" rx="2" ry="2" />
<text  x="965.96" y="287.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.02%)</title><rect x="37.4" y="469" width="0.2" height="15.0" fill="rgb(220,59,1)" rx="2" ry="2" />
<text  x="40.45" y="479.5" ></text>
</g>
<g >
<title>record__mmap_read_all (46 samples, 0.79%)</title><rect x="28.2" y="741" width="9.2" height="15.0" fill="rgb(238,7,0)" rx="2" ry="2" />
<text  x="31.16" y="751.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="950.4" y="581" width="0.2" height="15.0" fill="rgb(212,182,44)" rx="2" ry="2" />
<text  x="953.45" y="591.5" ></text>
</g>
<g >
<title>pipe_write (2 samples, 0.03%)</title><rect x="943.8" y="693" width="0.4" height="15.0" fill="rgb(210,118,43)" rx="2" ry="2" />
<text  x="946.79" y="703.5" ></text>
</g>
<g >
<title>stop_this_handle (1 samples, 0.02%)</title><rect x="37.6" y="533" width="0.3" height="15.0" fill="rgb(220,109,18)" rx="2" ry="2" />
<text  x="40.65" y="543.5" ></text>
</g>
<g >
<title>enqueue_task (14 samples, 0.24%)</title><rect x="975.7" y="501" width="2.8" height="15.0" fill="rgb(205,47,50)" rx="2" ry="2" />
<text  x="978.67" y="511.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.03%)</title><rect x="891.3" y="661" width="0.4" height="15.0" fill="rgb(239,43,19)" rx="2" ry="2" />
<text  x="894.32" y="671.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="132.7" y="517" width="0.2" height="15.0" fill="rgb(234,103,40)" rx="2" ry="2" />
<text  x="135.70" y="527.5" ></text>
</g>
<g >
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="942.8" y="581" width="0.2" height="15.0" fill="rgb(238,179,48)" rx="2" ry="2" />
<text  x="945.78" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.03%)</title><rect x="638.8" y="565" width="0.5" height="15.0" fill="rgb(232,216,20)" rx="2" ry="2" />
<text  x="641.85" y="575.5" ></text>
</g>
<g >
<title>lind (6 samples, 0.10%)</title><rect x="10.0" y="805" width="1.2" height="15.0" fill="rgb(214,113,40)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>delete_from_page_cache (1 samples, 0.02%)</title><rect x="756.5" y="485" width="0.2" height="15.0" fill="rgb(218,54,38)" rx="2" ry="2" />
<text  x="759.51" y="495.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (6 samples, 0.10%)</title><rect x="108.7" y="709" width="1.2" height="15.0" fill="rgb(216,229,9)" rx="2" ry="2" />
<text  x="111.69" y="719.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.02%)</title><rect x="120.6" y="485" width="0.2" height="15.0" fill="rgb(225,18,28)" rx="2" ry="2" />
<text  x="123.59" y="495.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (6 samples, 0.10%)</title><rect x="960.3" y="293" width="1.2" height="15.0" fill="rgb(221,44,10)" rx="2" ry="2" />
<text  x="963.34" y="303.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (3 samples, 0.05%)</title><rect x="325.8" y="517" width="0.6" height="15.0" fill="rgb(238,92,28)" rx="2" ry="2" />
<text  x="328.84" y="527.5" ></text>
</g>
<g >
<title>schedule (28 samples, 0.48%)</title><rect x="934.3" y="677" width="5.7" height="15.0" fill="rgb(253,147,19)" rx="2" ry="2" />
<text  x="937.30" y="687.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="119.2" y="165" width="0.2" height="15.0" fill="rgb(240,63,16)" rx="2" ry="2" />
<text  x="122.18" y="175.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="718.4" y="725" width="0.2" height="15.0" fill="rgb(220,82,41)" rx="2" ry="2" />
<text  x="721.36" y="735.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (3 samples, 0.05%)</title><rect x="109.9" y="469" width="0.6" height="15.0" fill="rgb(217,64,34)" rx="2" ry="2" />
<text  x="112.90" y="479.5" ></text>
</g>
<g >
<title>create_empty_buffers (1 samples, 0.02%)</title><rect x="30.0" y="389" width="0.2" height="15.0" fill="rgb(210,200,8)" rx="2" ry="2" />
<text  x="32.98" y="399.5" ></text>
</g>
<g >
<title>azx_get_position (44 samples, 0.75%)</title><rect x="919.4" y="629" width="8.8" height="15.0" fill="rgb(207,139,20)" rx="2" ry="2" />
<text  x="922.37" y="639.5" ></text>
</g>
<g >
<title>amdgpu_dm_irq_handler (45 samples, 0.77%)</title><rect x="960.1" y="533" width="9.1" height="15.0" fill="rgb(238,93,10)" rx="2" ry="2" />
<text  x="963.14" y="543.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="723.2" y="357" width="0.2" height="15.0" fill="rgb(230,159,47)" rx="2" ry="2" />
<text  x="726.21" y="367.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="756.5" y="629" width="0.2" height="15.0" fill="rgb(223,187,4)" rx="2" ry="2" />
<text  x="759.51" y="639.5" ></text>
</g>
<g >
<title>dispatcher (3 samples, 0.05%)</title><rect x="728.9" y="773" width="0.6" height="15.0" fill="rgb(239,130,42)" rx="2" ry="2" />
<text  x="731.86" y="783.5" ></text>
</g>
<g >
<title>__get_vblank_counter (14 samples, 0.24%)</title><rect x="965.2" y="469" width="2.8" height="15.0" fill="rgb(208,12,41)" rx="2" ry="2" />
<text  x="968.18" y="479.5" ></text>
</g>
<g >
<title>amdgpu_ih_process (1 samples, 0.02%)</title><rect x="959.9" y="581" width="0.2" height="15.0" fill="rgb(219,153,11)" rx="2" ry="2" />
<text  x="962.93" y="591.5" ></text>
</g>
<g >
<title>dm_read_reg_func (4 samples, 0.07%)</title><rect x="964.0" y="405" width="0.8" height="15.0" fill="rgb(253,9,7)" rx="2" ry="2" />
<text  x="966.97" y="415.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="891.5" y="597" width="0.2" height="15.0" fill="rgb(249,160,43)" rx="2" ry="2" />
<text  x="894.52" y="607.5" ></text>
</g>
<g >
<title>do_sys_poll (52 samples, 0.89%)</title><rect x="930.5" y="741" width="10.5" height="15.0" fill="rgb(241,27,3)" rx="2" ry="2" />
<text  x="933.47" y="751.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (2 samples, 0.03%)</title><rect x="62.1" y="725" width="0.4" height="15.0" fill="rgb(248,127,1)" rx="2" ry="2" />
<text  x="65.07" y="735.5" ></text>
</g>
<g >
<title>udpv6_queue_rcv_skb (1 samples, 0.02%)</title><rect x="972.6" y="309" width="0.2" height="15.0" fill="rgb(217,228,33)" rx="2" ry="2" />
<text  x="975.65" y="319.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.02%)</title><rect x="1165.2" y="709" width="0.2" height="15.0" fill="rgb(252,68,9)" rx="2" ry="2" />
<text  x="1168.18" y="719.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.02%)</title><rect x="61.3" y="757" width="0.2" height="15.0" fill="rgb(220,199,46)" rx="2" ry="2" />
<text  x="64.26" y="767.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.02%)</title><rect x="118.2" y="693" width="0.2" height="15.0" fill="rgb(249,3,11)" rx="2" ry="2" />
<text  x="121.17" y="703.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.03%)</title><rect x="944.8" y="581" width="0.4" height="15.0" fill="rgb(233,164,25)" rx="2" ry="2" />
<text  x="947.80" y="591.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1187.2" y="597" width="0.2" height="15.0" fill="rgb(220,103,41)" rx="2" ry="2" />
<text  x="1190.17" y="607.5" ></text>
</g>
<g >
<title>alloc_pages_current (4 samples, 0.07%)</title><rect x="31.8" y="373" width="0.8" height="15.0" fill="rgb(223,99,54)" rx="2" ry="2" />
<text  x="34.80" y="383.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.02%)</title><rect x="10.4" y="725" width="0.2" height="15.0" fill="rgb(233,187,39)" rx="2" ry="2" />
<text  x="13.40" y="735.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="756.5" y="565" width="0.2" height="15.0" fill="rgb(220,24,52)" rx="2" ry="2" />
<text  x="759.51" y="575.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.05%)</title><rect x="119.2" y="389" width="0.6" height="15.0" fill="rgb(222,90,48)" rx="2" ry="2" />
<text  x="122.18" y="399.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (37 samples, 0.63%)</title><rect x="624.5" y="629" width="7.5" height="15.0" fill="rgb(229,28,13)" rx="2" ry="2" />
<text  x="627.52" y="639.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="893.3" y="677" width="0.2" height="15.0" fill="rgb(218,177,54)" rx="2" ry="2" />
<text  x="896.34" y="687.5" ></text>
</g>
<g >
<title>MarkValidJumpTarget (1 samples, 0.02%)</title><rect x="116.6" y="661" width="0.2" height="15.0" fill="rgb(226,129,4)" rx="2" ry="2" />
<text  x="119.56" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="744.6" y="645" width="0.2" height="15.0" fill="rgb(250,87,17)" rx="2" ry="2" />
<text  x="747.60" y="655.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.02%)</title><rect x="118.8" y="437" width="0.2" height="15.0" fill="rgb(253,87,1)" rx="2" ry="2" />
<text  x="121.78" y="447.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (1 samples, 0.02%)</title><rect x="404.5" y="677" width="0.2" height="15.0" fill="rgb(237,49,15)" rx="2" ry="2" />
<text  x="407.54" y="687.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="928.9" y="693" width="0.2" height="15.0" fill="rgb(239,162,28)" rx="2" ry="2" />
<text  x="931.85" y="703.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="961.5" y="309" width="0.2" height="15.0" fill="rgb(241,209,5)" rx="2" ry="2" />
<text  x="964.55" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="633.2" y="533" width="0.2" height="15.0" fill="rgb(233,23,26)" rx="2" ry="2" />
<text  x="636.20" y="543.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="37.6" y="549" width="0.3" height="15.0" fill="rgb(210,171,29)" rx="2" ry="2" />
<text  x="40.65" y="559.5" ></text>
</g>
<g >
<title>generic_exec_single (66 samples, 1.13%)</title><rect x="13.8" y="533" width="13.4" height="15.0" fill="rgb(243,131,36)" rx="2" ry="2" />
<text  x="16.83" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (1 samples, 0.02%)</title><rect x="120.6" y="597" width="0.2" height="15.0" fill="rgb(241,91,1)" rx="2" ry="2" />
<text  x="123.59" y="607.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (1 samples, 0.02%)</title><rect x="978.9" y="533" width="0.2" height="15.0" fill="rgb(239,156,25)" rx="2" ry="2" />
<text  x="981.90" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="138.4" y="581" width="0.2" height="15.0" fill="rgb(237,130,16)" rx="2" ry="2" />
<text  x="141.35" y="591.5" ></text>
</g>
<g >
<title>from_kuid (1 samples, 0.02%)</title><rect x="34.0" y="309" width="0.2" height="15.0" fill="rgb(254,35,15)" rx="2" ry="2" />
<text  x="37.02" y="319.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (14 samples, 0.24%)</title><rect x="970.0" y="597" width="2.8" height="15.0" fill="rgb(227,46,43)" rx="2" ry="2" />
<text  x="973.02" y="607.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="744.2" y="293" width="0.2" height="15.0" fill="rgb(231,168,31)" rx="2" ry="2" />
<text  x="747.20" y="303.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::deserialize (1 samples, 0.02%)</title><rect x="744.2" y="341" width="0.2" height="15.0" fill="rgb(246,211,23)" rx="2" ry="2" />
<text  x="747.20" y="351.5" ></text>
</g>
<g >
<title>pfn_pte (1 samples, 0.02%)</title><rect x="717.2" y="661" width="0.2" height="15.0" fill="rgb(221,210,4)" rx="2" ry="2" />
<text  x="720.15" y="671.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (11 samples, 0.19%)</title><rect x="30.8" y="405" width="2.2" height="15.0" fill="rgb(222,175,45)" rx="2" ry="2" />
<text  x="33.79" y="415.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.02%)</title><rect x="1187.4" y="661" width="0.2" height="15.0" fill="rgb(206,132,41)" rx="2" ry="2" />
<text  x="1190.38" y="671.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.19%)</title><rect x="633.4" y="549" width="2.2" height="15.0" fill="rgb(247,159,23)" rx="2" ry="2" />
<text  x="636.40" y="559.5" ></text>
</g>
<g >
<title>do_iter_write (43 samples, 0.74%)</title><rect x="28.8" y="501" width="8.6" height="15.0" fill="rgb(215,80,10)" rx="2" ry="2" />
<text  x="31.77" y="511.5" ></text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.03%)</title><rect x="489.9" y="565" width="0.4" height="15.0" fill="rgb(239,159,28)" rx="2" ry="2" />
<text  x="492.91" y="575.5" ></text>
</g>
<g >
<title>amdgpu_cs_bo_validate (2 samples, 0.03%)</title><rect x="895.6" y="645" width="0.4" height="15.0" fill="rgb(223,30,42)" rx="2" ry="2" />
<text  x="898.55" y="655.5" ></text>
</g>
<g >
<title>wake_up_state (1 samples, 0.02%)</title><rect x="969.4" y="389" width="0.2" height="15.0" fill="rgb(214,14,22)" rx="2" ry="2" />
<text  x="972.42" y="399.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (6 samples, 0.10%)</title><rect x="960.3" y="325" width="1.2" height="15.0" fill="rgb(222,221,30)" rx="2" ry="2" />
<text  x="963.34" y="335.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (91 samples, 1.56%)</title><rect x="540.0" y="613" width="18.3" height="15.0" fill="rgb(208,139,0)" rx="2" ry="2" />
<text  x="542.96" y="623.5" ></text>
</g>
<g >
<title>rcu_needs_cpu (1 samples, 0.02%)</title><rect x="1154.9" y="661" width="0.2" height="15.0" fill="rgb(229,193,35)" rx="2" ry="2" />
<text  x="1157.88" y="671.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (3 samples, 0.05%)</title><rect x="609.4" y="613" width="0.6" height="15.0" fill="rgb(253,69,39)" rx="2" ry="2" />
<text  x="612.38" y="623.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (2 samples, 0.03%)</title><rect x="119.8" y="757" width="0.4" height="15.0" fill="rgb(227,169,49)" rx="2" ry="2" />
<text  x="122.79" y="767.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.02%)</title><rect x="120.6" y="469" width="0.2" height="15.0" fill="rgb(225,136,0)" rx="2" ry="2" />
<text  x="123.59" y="479.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (84 samples, 1.44%)</title><rect x="540.0" y="581" width="16.9" height="15.0" fill="rgb(220,81,11)" rx="2" ry="2" />
<text  x="542.96" y="591.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="118.2" y="245" width="0.2" height="15.0" fill="rgb(244,131,37)" rx="2" ry="2" />
<text  x="121.17" y="255.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (2 samples, 0.03%)</title><rect x="949.0" y="645" width="0.4" height="15.0" fill="rgb(206,53,32)" rx="2" ry="2" />
<text  x="952.04" y="655.5" ></text>
</g>
<g >
<title>handle_mm_fault (99 samples, 1.69%)</title><rect x="697.4" y="725" width="20.0" height="15.0" fill="rgb(205,205,2)" rx="2" ry="2" />
<text  x="700.37" y="735.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (5 samples, 0.09%)</title><rect x="965.2" y="341" width="1.0" height="15.0" fill="rgb(246,60,42)" rx="2" ry="2" />
<text  x="968.18" y="351.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.02%)</title><rect x="1157.9" y="725" width="0.2" height="15.0" fill="rgb(237,4,23)" rx="2" ry="2" />
<text  x="1160.91" y="735.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2 samples, 0.03%)</title><rect x="756.7" y="597" width="0.4" height="15.0" fill="rgb(216,202,48)" rx="2" ry="2" />
<text  x="759.71" y="607.5" ></text>
</g>
<g >
<title>__getpwuid_r (1 samples, 0.02%)</title><rect x="10.2" y="677" width="0.2" height="15.0" fill="rgb(205,45,43)" rx="2" ry="2" />
<text  x="13.20" y="687.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="119.2" y="293" width="0.2" height="15.0" fill="rgb(212,151,17)" rx="2" ry="2" />
<text  x="122.18" y="303.5" ></text>
</g>
<g >
<title>generic_write_end (12 samples, 0.21%)</title><rect x="33.2" y="405" width="2.4" height="15.0" fill="rgb(213,132,17)" rx="2" ry="2" />
<text  x="36.21" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="138.4" y="549" width="0.2" height="15.0" fill="rgb(205,126,53)" rx="2" ry="2" />
<text  x="141.35" y="559.5" ></text>
</g>
<g >
<title>truncate_inode_page (1 samples, 0.02%)</title><rect x="756.5" y="501" width="0.2" height="15.0" fill="rgb(237,87,45)" rx="2" ry="2" />
<text  x="759.51" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 0.62%)</title><rect x="632.0" y="629" width="7.3" height="15.0" fill="rgb(241,180,19)" rx="2" ry="2" />
<text  x="634.99" y="639.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.02%)</title><rect x="119.8" y="421" width="0.2" height="15.0" fill="rgb(209,191,54)" rx="2" ry="2" />
<text  x="122.79" y="431.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="756.5" y="581" width="0.2" height="15.0" fill="rgb(224,128,3)" rx="2" ry="2" />
<text  x="759.51" y="591.5" ></text>
</g>
<g >
<title>NaClValidateCode (3 samples, 0.05%)</title><rect x="723.8" y="693" width="0.6" height="15.0" fill="rgb(236,24,49)" rx="2" ry="2" />
<text  x="726.81" y="703.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (5 samples, 0.09%)</title><rect x="967.0" y="341" width="1.0" height="15.0" fill="rgb(254,26,45)" rx="2" ry="2" />
<text  x="970.00" y="351.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (72 samples, 1.23%)</title><rect x="610.0" y="613" width="14.5" height="15.0" fill="rgb(237,17,44)" rx="2" ry="2" />
<text  x="612.99" y="623.5" ></text>
</g>
<g >
<title>[sel_ldr] (2,932 samples, 50.15%)</title><rect x="63.9" y="789" width="591.7" height="15.0" fill="rgb(231,228,30)" rx="2" ry="2" />
<text  x="66.88" y="799.5" >[sel_ldr]</text>
</g>
<g >
<title>_start (3 samples, 0.05%)</title><rect x="744.2" y="789" width="0.6" height="15.0" fill="rgb(206,185,31)" rx="2" ry="2" />
<text  x="747.20" y="799.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.02%)</title><rect x="744.6" y="597" width="0.2" height="15.0" fill="rgb(227,229,6)" rx="2" ry="2" />
<text  x="747.60" y="607.5" ></text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.02%)</title><rect x="723.2" y="437" width="0.2" height="15.0" fill="rgb(218,63,36)" rx="2" ry="2" />
<text  x="726.21" y="447.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (4 samples, 0.07%)</title><rect x="968.0" y="389" width="0.8" height="15.0" fill="rgb(215,137,8)" rx="2" ry="2" />
<text  x="971.01" y="399.5" ></text>
</g>
<g >
<title>std::lazy::SyncLazy&lt;T,F&gt;::force (1 samples, 0.02%)</title><rect x="454.2" y="613" width="0.2" height="15.0" fill="rgb(232,82,5)" rx="2" ry="2" />
<text  x="457.19" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (1 samples, 0.02%)</title><rect x="62.5" y="709" width="0.2" height="15.0" fill="rgb(209,129,27)" rx="2" ry="2" />
<text  x="65.47" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.03%)</title><rect x="889.1" y="789" width="0.4" height="15.0" fill="rgb(232,87,53)" rx="2" ry="2" />
<text  x="892.10" y="799.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (13 samples, 0.22%)</title><rect x="322.4" y="533" width="2.6" height="15.0" fill="rgb(238,97,3)" rx="2" ry="2" />
<text  x="325.41" y="543.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="119.2" y="149" width="0.2" height="15.0" fill="rgb(239,182,37)" rx="2" ry="2" />
<text  x="122.18" y="159.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="119.6" y="213" width="0.2" height="15.0" fill="rgb(227,122,49)" rx="2" ry="2" />
<text  x="122.58" y="223.5" ></text>
</g>
<g >
<title>get_timespec64 (2 samples, 0.03%)</title><rect x="941.0" y="741" width="0.4" height="15.0" fill="rgb(248,140,16)" rx="2" ry="2" />
<text  x="943.96" y="751.5" ></text>
</g>
<g >
<title>drm_self_refresh_helper_update_avg_times (1 samples, 0.02%)</title><rect x="956.1" y="693" width="0.2" height="15.0" fill="rgb(234,225,36)" rx="2" ry="2" />
<text  x="959.10" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (32 samples, 0.55%)</title><rect x="483.5" y="565" width="6.4" height="15.0" fill="rgb(215,134,3)" rx="2" ry="2" />
<text  x="486.45" y="575.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (15 samples, 0.26%)</title><rect x="603.5" y="533" width="3.1" height="15.0" fill="rgb(212,114,26)" rx="2" ry="2" />
<text  x="606.53" y="543.5" ></text>
</g>
<g >
<title>drm_sched_fence_create (2 samples, 0.03%)</title><rect x="897.6" y="645" width="0.4" height="15.0" fill="rgb(206,227,51)" rx="2" ry="2" />
<text  x="900.57" y="655.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (5 samples, 0.09%)</title><rect x="967.0" y="373" width="1.0" height="15.0" fill="rgb(220,80,2)" rx="2" ry="2" />
<text  x="970.00" y="383.5" ></text>
</g>
<g >
<title>BitmapClearBit (1 samples, 0.02%)</title><rect x="116.4" y="645" width="0.2" height="15.0" fill="rgb(229,214,45)" rx="2" ry="2" />
<text  x="119.36" y="655.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="969.0" y="453" width="0.2" height="15.0" fill="rgb(226,188,17)" rx="2" ry="2" />
<text  x="972.01" y="463.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.05%)</title><rect x="953.3" y="613" width="0.6" height="15.0" fill="rgb(220,78,41)" rx="2" ry="2" />
<text  x="956.27" y="623.5" ></text>
</g>
<g >
<title>__find_get_block (1 samples, 0.02%)</title><rect x="35.4" y="277" width="0.2" height="15.0" fill="rgb(218,158,23)" rx="2" ry="2" />
<text  x="38.43" y="287.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="944.0" y="645" width="0.2" height="15.0" fill="rgb(220,115,21)" rx="2" ry="2" />
<text  x="946.99" y="655.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (1 samples, 0.02%)</title><rect x="963.8" y="341" width="0.2" height="15.0" fill="rgb(220,212,38)" rx="2" ry="2" />
<text  x="966.77" y="351.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="897.6" y="629" width="0.4" height="15.0" fill="rgb(242,61,36)" rx="2" ry="2" />
<text  x="900.57" y="639.5" ></text>
</g>
<g >
<title>ext4_da_write_end (14 samples, 0.24%)</title><rect x="33.0" y="421" width="2.8" height="15.0" fill="rgb(211,192,2)" rx="2" ry="2" />
<text  x="36.01" y="431.5" ></text>
</g>
<g >
<title>lru_cache_add (2 samples, 0.03%)</title><rect x="109.9" y="453" width="0.4" height="15.0" fill="rgb(217,66,40)" rx="2" ry="2" />
<text  x="112.90" y="463.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.03%)</title><rect x="899.8" y="725" width="0.4" height="15.0" fill="rgb(207,133,20)" rx="2" ry="2" />
<text  x="902.79" y="735.5" ></text>
</g>
<g >
<title>azx_get_position (77 samples, 1.32%)</title><rect x="902.8" y="629" width="15.6" height="15.0" fill="rgb(237,40,31)" rx="2" ry="2" />
<text  x="905.82" y="639.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="138.4" y="565" width="0.2" height="15.0" fill="rgb(234,204,0)" rx="2" ry="2" />
<text  x="141.35" y="575.5" ></text>
</g>
<g >
<title>do_iter_write (5 samples, 0.09%)</title><rect x="37.4" y="661" width="1.1" height="15.0" fill="rgb(249,128,45)" rx="2" ry="2" />
<text  x="40.45" y="671.5" ></text>
</g>
<g >
<title>unix_destruct_scm (1 samples, 0.02%)</title><rect x="942.4" y="613" width="0.2" height="15.0" fill="rgb(211,2,30)" rx="2" ry="2" />
<text  x="945.38" y="623.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="117.8" y="661" width="0.2" height="15.0" fill="rgb(235,44,8)" rx="2" ry="2" />
<text  x="120.77" y="671.5" ></text>
</g>
<g >
<title>alx_mask_msix (3 samples, 0.05%)</title><rect x="959.3" y="565" width="0.6" height="15.0" fill="rgb(233,162,23)" rx="2" ry="2" />
<text  x="962.33" y="575.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="933.1" y="661" width="0.2" height="15.0" fill="rgb(232,218,5)" rx="2" ry="2" />
<text  x="936.09" y="671.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (8 samples, 0.14%)</title><rect x="35.8" y="405" width="1.6" height="15.0" fill="rgb(205,130,6)" rx="2" ry="2" />
<text  x="38.83" y="415.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (1 samples, 0.02%)</title><rect x="980.5" y="469" width="0.2" height="15.0" fill="rgb(246,145,29)" rx="2" ry="2" />
<text  x="983.52" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (1 samples, 0.02%)</title><rect x="546.4" y="549" width="0.2" height="15.0" fill="rgb(237,105,50)" rx="2" ry="2" />
<text  x="549.42" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="938.7" y="661" width="0.4" height="15.0" fill="rgb(252,35,25)" rx="2" ry="2" />
<text  x="941.74" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="120.6" y="533" width="0.2" height="15.0" fill="rgb(249,215,33)" rx="2" ry="2" />
<text  x="123.59" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (38 samples, 0.65%)</title><rect x="433.0" y="613" width="7.7" height="15.0" fill="rgb(220,145,15)" rx="2" ry="2" />
<text  x="436.00" y="623.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (1 samples, 0.02%)</title><rect x="119.8" y="277" width="0.2" height="15.0" fill="rgb(239,15,18)" rx="2" ry="2" />
<text  x="122.79" y="287.5" ></text>
</g>
<g >
<title>getenv (1 samples, 0.02%)</title><rect x="10.4" y="533" width="0.2" height="15.0" fill="rgb(222,111,51)" rx="2" ry="2" />
<text  x="13.40" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (19 samples, 0.32%)</title><rect x="477.0" y="549" width="3.8" height="15.0" fill="rgb(223,34,21)" rx="2" ry="2" />
<text  x="480.00" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_poll (9 samples, 0.15%)</title><rect x="928.5" y="757" width="1.8" height="15.0" fill="rgb(218,41,36)" rx="2" ry="2" />
<text  x="931.45" y="767.5" ></text>
</g>
<g >
<title>wait_for_unix_gc (1 samples, 0.02%)</title><rect x="945.2" y="645" width="0.2" height="15.0" fill="rgb(222,203,50)" rx="2" ry="2" />
<text  x="948.20" y="655.5" ></text>
</g>
<g >
<title>[unknown] (107 samples, 1.83%)</title><rect x="722.4" y="789" width="21.6" height="15.0" fill="rgb(231,178,12)" rx="2" ry="2" />
<text  x="725.40" y="799.5" >[..</text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="118.2" y="389" width="0.2" height="15.0" fill="rgb(222,76,31)" rx="2" ry="2" />
<text  x="121.17" y="399.5" ></text>
</g>
<g >
<title>NaClDescIoDescDtor (1 samples, 0.02%)</title><rect x="118.2" y="661" width="0.2" height="15.0" fill="rgb(230,86,44)" rx="2" ry="2" />
<text  x="121.17" y="671.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (1 samples, 0.02%)</title><rect x="119.8" y="245" width="0.2" height="15.0" fill="rgb(212,71,2)" rx="2" ry="2" />
<text  x="122.79" y="255.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.02%)</title><rect x="120.4" y="597" width="0.2" height="15.0" fill="rgb(227,216,14)" rx="2" ry="2" />
<text  x="123.39" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::restore_metadata (1 samples, 0.02%)</title><rect x="744.2" y="693" width="0.2" height="15.0" fill="rgb(234,165,48)" rx="2" ry="2" />
<text  x="747.20" y="703.5" ></text>
</g>
<g >
<title>NaClXMutexLock (2 samples, 0.03%)</title><rect x="39.3" y="773" width="0.4" height="15.0" fill="rgb(213,181,30)" rx="2" ry="2" />
<text  x="42.26" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (58 samples, 0.99%)</title><rect x="930.3" y="757" width="11.7" height="15.0" fill="rgb(248,127,18)" rx="2" ry="2" />
<text  x="933.27" y="767.5" ></text>
</g>
<g >
<title>__udp_enqueue_schedule_skb (1 samples, 0.02%)</title><rect x="972.6" y="261" width="0.2" height="15.0" fill="rgb(253,129,53)" rx="2" ry="2" />
<text  x="975.65" y="271.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.02%)</title><rect x="394.9" y="629" width="0.2" height="15.0" fill="rgb(244,118,13)" rx="2" ry="2" />
<text  x="397.86" y="639.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (8 samples, 0.14%)</title><rect x="950.9" y="549" width="1.6" height="15.0" fill="rgb(227,69,39)" rx="2" ry="2" />
<text  x="953.85" y="559.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (75 samples, 1.28%)</title><rect x="609.4" y="629" width="15.1" height="15.0" fill="rgb(233,55,4)" rx="2" ry="2" />
<text  x="612.38" y="639.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (2 samples, 0.03%)</title><rect x="756.7" y="725" width="0.4" height="15.0" fill="rgb(233,168,32)" rx="2" ry="2" />
<text  x="759.71" y="735.5" ></text>
</g>
<g >
<title>__enqueue_rt_entity (1 samples, 0.02%)</title><rect x="897.2" y="485" width="0.2" height="15.0" fill="rgb(216,22,48)" rx="2" ry="2" />
<text  x="900.17" y="495.5" ></text>
</g>
<g >
<title>schedule_timeout (3 samples, 0.05%)</title><rect x="955.1" y="629" width="0.6" height="15.0" fill="rgb(246,118,37)" rx="2" ry="2" />
<text  x="958.09" y="639.5" ></text>
</g>
<g >
<title>intel_idle (1 samples, 0.02%)</title><rect x="991.4" y="677" width="0.2" height="15.0" fill="rgb(213,39,36)" rx="2" ry="2" />
<text  x="994.42" y="687.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (44 samples, 0.75%)</title><rect x="931.5" y="725" width="8.9" height="15.0" fill="rgb(212,19,2)" rx="2" ry="2" />
<text  x="934.48" y="735.5" ></text>
</g>
<g >
<title>choose_new_asid (1 samples, 0.02%)</title><rect x="992.2" y="645" width="0.2" height="15.0" fill="rgb(208,195,2)" rx="2" ry="2" />
<text  x="995.22" y="655.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.02%)</title><rect x="723.4" y="677" width="0.2" height="15.0" fill="rgb(221,187,34)" rx="2" ry="2" />
<text  x="726.41" y="687.5" ></text>
</g>
<g >
<title>get_l4proto (1 samples, 0.02%)</title><rect x="972.4" y="373" width="0.2" height="15.0" fill="rgb(206,196,39)" rx="2" ry="2" />
<text  x="975.45" y="383.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="119.0" y="389" width="0.2" height="15.0" fill="rgb(214,228,40)" rx="2" ry="2" />
<text  x="121.98" y="399.5" ></text>
</g>
<g >
<title>generic_write_end (3 samples, 0.05%)</title><rect x="37.9" y="565" width="0.6" height="15.0" fill="rgb(230,158,34)" rx="2" ry="2" />
<text  x="40.85" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.02%)</title><rect x="61.9" y="709" width="0.2" height="15.0" fill="rgb(218,105,42)" rx="2" ry="2" />
<text  x="64.87" y="719.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 0.05%)</title><rect x="953.3" y="581" width="0.6" height="15.0" fill="rgb(211,170,1)" rx="2" ry="2" />
<text  x="956.27" y="591.5" ></text>
</g>
<g >
<title>snd_ctl_elem_user_get (1 samples, 0.02%)</title><rect x="902.0" y="709" width="0.2" height="15.0" fill="rgb(223,150,47)" rx="2" ry="2" />
<text  x="905.01" y="719.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (42 samples, 0.72%)</title><rect x="108.7" y="725" width="8.5" height="15.0" fill="rgb(216,127,36)" rx="2" ry="2" />
<text  x="111.69" y="735.5" ></text>
</g>
<g >
<title>__gconv_find_transform (1 samples, 0.02%)</title><rect x="10.6" y="693" width="0.2" height="15.0" fill="rgb(251,167,2)" rx="2" ry="2" />
<text  x="13.61" y="703.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.65%)</title><rect x="433.0" y="645" width="7.7" height="15.0" fill="rgb(228,70,35)" rx="2" ry="2" />
<text  x="436.00" y="655.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (4 samples, 0.07%)</title><rect x="119.0" y="501" width="0.8" height="15.0" fill="rgb(218,19,21)" rx="2" ry="2" />
<text  x="121.98" y="511.5" ></text>
</g>
<g >
<title>amdgpu_dm_atomic_commit_tail (38 samples, 0.65%)</title><rect x="948.4" y="693" width="7.7" height="15.0" fill="rgb(230,140,25)" rx="2" ry="2" />
<text  x="951.43" y="703.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (58 samples, 0.99%)</title><rect x="639.3" y="645" width="11.7" height="15.0" fill="rgb(220,79,51)" rx="2" ry="2" />
<text  x="642.25" y="655.5" ></text>
</g>
<g >
<title>dc_stream_get_vblank_counter (1 samples, 0.02%)</title><rect x="961.7" y="421" width="0.3" height="15.0" fill="rgb(216,216,31)" rx="2" ry="2" />
<text  x="964.75" y="431.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (2 samples, 0.03%)</title><rect x="27.4" y="645" width="0.4" height="15.0" fill="rgb(228,78,53)" rx="2" ry="2" />
<text  x="30.36" y="655.5" ></text>
</g>
<g >
<title>kmalloc_large_node (3 samples, 0.05%)</title><rect x="953.3" y="629" width="0.6" height="15.0" fill="rgb(211,154,43)" rx="2" ry="2" />
<text  x="956.27" y="639.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.02%)</title><rect x="723.4" y="597" width="0.2" height="15.0" fill="rgb(215,102,17)" rx="2" ry="2" />
<text  x="726.41" y="607.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.02%)</title><rect x="1188.4" y="565" width="0.2" height="15.0" fill="rgb(209,95,23)" rx="2" ry="2" />
<text  x="1191.39" y="575.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="945.0" y="501" width="0.2" height="15.0" fill="rgb(242,137,44)" rx="2" ry="2" />
<text  x="948.00" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="953.1" y="629" width="0.2" height="15.0" fill="rgb(212,159,7)" rx="2" ry="2" />
<text  x="956.07" y="639.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.02%)</title><rect x="1153.3" y="677" width="0.2" height="15.0" fill="rgb(208,122,12)" rx="2" ry="2" />
<text  x="1156.27" y="687.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.07%)</title><rect x="10.2" y="789" width="0.8" height="15.0" fill="rgb(227,25,10)" rx="2" ry="2" />
<text  x="13.20" y="799.5" ></text>
</g>
<g >
<title>_dl_map_object (1 samples, 0.02%)</title><rect x="10.8" y="677" width="0.2" height="15.0" fill="rgb(235,179,22)" rx="2" ry="2" />
<text  x="13.81" y="687.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (1 samples, 0.02%)</title><rect x="119.6" y="245" width="0.2" height="15.0" fill="rgb(254,2,26)" rx="2" ry="2" />
<text  x="122.58" y="255.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="947.8" y="693" width="0.2" height="15.0" fill="rgb(211,70,32)" rx="2" ry="2" />
<text  x="950.82" y="703.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (43 samples, 0.74%)</title><rect x="547.0" y="549" width="8.7" height="15.0" fill="rgb(253,117,32)" rx="2" ry="2" />
<text  x="550.02" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="120.6" y="517" width="0.2" height="15.0" fill="rgb(215,180,6)" rx="2" ry="2" />
<text  x="123.59" y="527.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="744.2" y="309" width="0.2" height="15.0" fill="rgb(209,205,33)" rx="2" ry="2" />
<text  x="747.20" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.02%)</title><rect x="10.8" y="581" width="0.2" height="15.0" fill="rgb(222,0,47)" rx="2" ry="2" />
<text  x="13.81" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="28.0" y="661" width="0.2" height="15.0" fill="rgb(221,31,18)" rx="2" ry="2" />
<text  x="30.96" y="671.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (1 samples, 0.02%)</title><rect x="624.5" y="597" width="0.2" height="15.0" fill="rgb(254,18,43)" rx="2" ry="2" />
<text  x="627.52" y="607.5" ></text>
</g>
<g >
<title>mprotect_fixup (1 samples, 0.02%)</title><rect x="744.6" y="613" width="0.2" height="15.0" fill="rgb(221,105,34)" rx="2" ry="2" />
<text  x="747.60" y="623.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="987.0" y="501" width="0.2" height="15.0" fill="rgb(240,142,45)" rx="2" ry="2" />
<text  x="989.98" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1155.5" y="613" width="0.2" height="15.0" fill="rgb(249,29,8)" rx="2" ry="2" />
<text  x="1158.49" y="623.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.02%)</title><rect x="119.8" y="709" width="0.2" height="15.0" fill="rgb(218,109,13)" rx="2" ry="2" />
<text  x="122.79" y="719.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampolineCall (1 samples, 0.02%)</title><rect x="118.4" y="693" width="0.2" height="15.0" fill="rgb(249,152,30)" rx="2" ry="2" />
<text  x="121.37" y="703.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (2 samples, 0.03%)</title><rect x="1168.2" y="421" width="0.4" height="15.0" fill="rgb(207,129,46)" rx="2" ry="2" />
<text  x="1171.20" y="431.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.02%)</title><rect x="743.6" y="725" width="0.2" height="15.0" fill="rgb(215,159,25)" rx="2" ry="2" />
<text  x="746.59" y="735.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 1.09%)</title><rect x="14.2" y="469" width="13.0" height="15.0" fill="rgb(246,137,51)" rx="2" ry="2" />
<text  x="17.24" y="479.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.02%)</title><rect x="1148.2" y="677" width="0.2" height="15.0" fill="rgb(254,91,26)" rx="2" ry="2" />
<text  x="1151.22" y="687.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="38.1" y="501" width="0.2" height="15.0" fill="rgb(235,164,2)" rx="2" ry="2" />
<text  x="41.05" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (2 samples, 0.03%)</title><rect x="40.5" y="773" width="0.4" height="15.0" fill="rgb(232,4,5)" rx="2" ry="2" />
<text  x="43.47" y="783.5" ></text>
</g>
<g >
<title>pipe_read (1 samples, 0.02%)</title><rect x="942.0" y="693" width="0.2" height="15.0" fill="rgb(217,95,6)" rx="2" ry="2" />
<text  x="944.97" y="703.5" ></text>
</g>
<g >
<title>amdgpu_cs_parser_init (2 samples, 0.03%)</title><rect x="896.2" y="677" width="0.4" height="15.0" fill="rgb(206,103,21)" rx="2" ry="2" />
<text  x="899.16" y="687.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (56 samples, 0.96%)</title><rect x="598.1" y="613" width="11.3" height="15.0" fill="rgb(205,20,48)" rx="2" ry="2" />
<text  x="601.08" y="623.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="969.0" y="421" width="0.2" height="15.0" fill="rgb(205,187,48)" rx="2" ry="2" />
<text  x="972.01" y="431.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1165.2" y="677" width="0.2" height="15.0" fill="rgb(216,228,9)" rx="2" ry="2" />
<text  x="1168.18" y="687.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.02%)</title><rect x="1189.4" y="661" width="0.2" height="15.0" fill="rgb(249,164,20)" rx="2" ry="2" />
<text  x="1192.39" y="671.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 0.02%)</title><rect x="744.6" y="629" width="0.2" height="15.0" fill="rgb(223,26,33)" rx="2" ry="2" />
<text  x="747.60" y="639.5" ></text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.02%)</title><rect x="940.8" y="709" width="0.2" height="15.0" fill="rgb(216,110,47)" rx="2" ry="2" />
<text  x="943.76" y="719.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (18 samples, 0.31%)</title><rect x="57.6" y="709" width="3.7" height="15.0" fill="rgb(221,163,9)" rx="2" ry="2" />
<text  x="60.63" y="719.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="893.3" y="693" width="0.4" height="15.0" fill="rgb(222,194,16)" rx="2" ry="2" />
<text  x="896.34" y="703.5" ></text>
</g>
<g >
<title>drm_crtc_vblank_helper_get_vblank_timestamp (4 samples, 0.07%)</title><rect x="968.0" y="453" width="0.8" height="15.0" fill="rgb(207,42,43)" rx="2" ry="2" />
<text  x="971.01" y="463.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="1187.2" y="613" width="0.2" height="15.0" fill="rgb(211,214,2)" rx="2" ry="2" />
<text  x="1190.17" y="623.5" ></text>
</g>
<g >
<title>do_futex (10 samples, 0.17%)</title><rect x="891.7" y="741" width="2.0" height="15.0" fill="rgb(232,172,1)" rx="2" ry="2" />
<text  x="894.72" y="751.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="607.8" y="501" width="0.2" height="15.0" fill="rgb(242,77,50)" rx="2" ry="2" />
<text  x="610.77" y="511.5" ></text>
</g>
<g >
<title>menu_select (3 samples, 0.05%)</title><rect x="1155.7" y="709" width="0.6" height="15.0" fill="rgb(250,127,48)" rx="2" ry="2" />
<text  x="1158.69" y="719.5" ></text>
</g>
<g >
<title>dc_stream_get_vblank_counter (5 samples, 0.09%)</title><rect x="967.0" y="421" width="1.0" height="15.0" fill="rgb(225,135,1)" rx="2" ry="2" />
<text  x="970.00" y="431.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.02%)</title><rect x="118.2" y="677" width="0.2" height="15.0" fill="rgb(222,60,26)" rx="2" ry="2" />
<text  x="121.17" y="687.5" ></text>
</g>
<g >
<title>copy_process (1 samples, 0.02%)</title><rect x="744.0" y="693" width="0.2" height="15.0" fill="rgb(248,165,34)" rx="2" ry="2" />
<text  x="746.99" y="703.5" ></text>
</g>
<g >
<title>lind_pread (1 samples, 0.02%)</title><rect x="119.8" y="613" width="0.2" height="15.0" fill="rgb(205,68,39)" rx="2" ry="2" />
<text  x="122.79" y="623.5" ></text>
</g>
<g >
<title>__drm_dbg (1 samples, 0.02%)</title><rect x="948.2" y="693" width="0.2" height="15.0" fill="rgb(252,124,38)" rx="2" ry="2" />
<text  x="951.23" y="703.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="969.0" y="293" width="0.2" height="15.0" fill="rgb(209,137,30)" rx="2" ry="2" />
<text  x="972.01" y="303.5" ></text>
</g>
<g >
<title>populate_seccomp_data (1 samples, 0.02%)</title><rect x="945.8" y="709" width="0.2" height="15.0" fill="rgb(242,78,12)" rx="2" ry="2" />
<text  x="948.81" y="719.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.02%)</title><rect x="118.2" y="725" width="0.2" height="15.0" fill="rgb(210,62,12)" rx="2" ry="2" />
<text  x="121.17" y="735.5" ></text>
</g>
<g >
<title>snd_pcm_ioctl (1 samples, 0.02%)</title><rect x="945.4" y="757" width="0.2" height="15.0" fill="rgb(205,31,46)" rx="2" ry="2" />
<text  x="948.40" y="767.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.02%)</title><rect x="897.8" y="613" width="0.2" height="15.0" fill="rgb(226,66,2)" rx="2" ry="2" />
<text  x="900.77" y="623.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 1.37%)</title><rect x="11.2" y="709" width="16.2" height="15.0" fill="rgb(210,2,25)" rx="2" ry="2" />
<text  x="14.21" y="719.5" ></text>
</g>
<g >
<title>poll_freewait (2 samples, 0.03%)</title><rect x="929.9" y="725" width="0.4" height="15.0" fill="rgb(211,172,40)" rx="2" ry="2" />
<text  x="932.86" y="735.5" ></text>
</g>
<g >
<title>set_next_entity (1 samples, 0.02%)</title><rect x="1160.7" y="677" width="0.2" height="15.0" fill="rgb(218,108,9)" rx="2" ry="2" />
<text  x="1163.74" y="687.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (42 samples, 0.72%)</title><rect x="598.1" y="581" width="8.5" height="15.0" fill="rgb(227,86,41)" rx="2" ry="2" />
<text  x="601.08" y="591.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="138.4" y="485" width="0.2" height="15.0" fill="rgb(254,33,30)" rx="2" ry="2" />
<text  x="141.35" y="495.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="713.1" y="629" width="0.2" height="15.0" fill="rgb(219,167,53)" rx="2" ry="2" />
<text  x="716.12" y="639.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="38.5" y="709" width="0.2" height="15.0" fill="rgb(221,91,50)" rx="2" ry="2" />
<text  x="41.46" y="719.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.19%)</title><rect x="481.2" y="565" width="2.3" height="15.0" fill="rgb(207,149,10)" rx="2" ry="2" />
<text  x="484.23" y="575.5" ></text>
</g>
<g >
<title>amdgpu_get_vblank_counter_kms (14 samples, 0.24%)</title><rect x="965.2" y="453" width="2.8" height="15.0" fill="rgb(251,36,47)" rx="2" ry="2" />
<text  x="968.18" y="463.5" ></text>
</g>
<g >
<title>_nc_setupterm (1 samples, 0.02%)</title><rect x="10.4" y="613" width="0.2" height="15.0" fill="rgb(209,163,0)" rx="2" ry="2" />
<text  x="13.40" y="623.5" ></text>
</g>
<g >
<title>dm_plane_helper_cleanup_fb (2 samples, 0.03%)</title><rect x="954.3" y="661" width="0.4" height="15.0" fill="rgb(218,135,2)" rx="2" ry="2" />
<text  x="957.28" y="671.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="928.7" y="661" width="0.2" height="15.0" fill="rgb(243,136,11)" rx="2" ry="2" />
<text  x="931.65" y="671.5" ></text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.02%)</title><rect x="110.3" y="453" width="0.2" height="15.0" fill="rgb(206,143,23)" rx="2" ry="2" />
<text  x="113.30" y="463.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (165 samples, 2.82%)</title><rect x="560.9" y="581" width="33.3" height="15.0" fill="rgb(206,65,17)" rx="2" ry="2" />
<text  x="563.95" y="591.5" >ri..</text>
</g>
<g >
<title>amdgpu_get_vblank_counter_kms (13 samples, 0.22%)</title><rect x="960.3" y="437" width="2.7" height="15.0" fill="rgb(233,146,51)" rx="2" ry="2" />
<text  x="963.34" y="447.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (1 samples, 0.02%)</title><rect x="37.6" y="565" width="0.3" height="15.0" fill="rgb(217,98,40)" rx="2" ry="2" />
<text  x="40.65" y="575.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (1 samples, 0.02%)</title><rect x="729.7" y="741" width="0.2" height="15.0" fill="rgb(237,97,51)" rx="2" ry="2" />
<text  x="732.66" y="751.5" ></text>
</g>
<g >
<title>dce110_tg_is_blanked (1 samples, 0.02%)</title><rect x="950.6" y="613" width="0.3" height="15.0" fill="rgb(250,129,8)" rx="2" ry="2" />
<text  x="953.65" y="623.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="953.9" y="661" width="0.2" height="15.0" fill="rgb(218,37,26)" rx="2" ry="2" />
<text  x="956.88" y="671.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.07%)</title><rect x="119.0" y="517" width="0.8" height="15.0" fill="rgb(252,119,45)" rx="2" ry="2" />
<text  x="121.98" y="527.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize::MapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="744.2" y="517" width="0.2" height="15.0" fill="rgb(209,179,23)" rx="2" ry="2" />
<text  x="747.20" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.22%)</title><rect x="603.9" y="485" width="2.7" height="15.0" fill="rgb(222,60,5)" rx="2" ry="2" />
<text  x="606.94" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="394.7" y="533" width="0.2" height="15.0" fill="rgb(225,104,35)" rx="2" ry="2" />
<text  x="397.66" y="543.5" ></text>
</g>
<g >
<title>dma_fence_release (1 samples, 0.02%)</title><rect x="896.8" y="661" width="0.2" height="15.0" fill="rgb(215,39,4)" rx="2" ry="2" />
<text  x="899.77" y="671.5" ></text>
</g>
<g >
<title>ProcessInvalidJumpTargets (1 samples, 0.02%)</title><rect x="117.0" y="661" width="0.2" height="15.0" fill="rgb(210,224,12)" rx="2" ry="2" />
<text  x="119.96" y="671.5" ></text>
</g>
<g >
<title>memdup_user (4 samples, 0.07%)</title><rect x="900.8" y="709" width="0.8" height="15.0" fill="rgb(218,140,2)" rx="2" ry="2" />
<text  x="903.80" y="719.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (43 samples, 0.74%)</title><rect x="610.6" y="581" width="8.7" height="15.0" fill="rgb(208,170,8)" rx="2" ry="2" />
<text  x="613.60" y="591.5" ></text>
</g>
<g >
<title>snd_pcm_ioctl (129 samples, 2.21%)</title><rect x="902.4" y="741" width="26.1" height="15.0" fill="rgb(250,163,17)" rx="2" ry="2" />
<text  x="905.42" y="751.5" >s..</text>
</g>
<g >
<title>dm_read_reg_func (8 samples, 0.14%)</title><rect x="950.9" y="581" width="1.6" height="15.0" fill="rgb(237,217,22)" rx="2" ry="2" />
<text  x="953.85" y="591.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="717.0" y="661" width="0.2" height="15.0" fill="rgb(205,7,43)" rx="2" ry="2" />
<text  x="719.95" y="671.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="38.7" y="773" width="0.2" height="15.0" fill="rgb(234,91,21)" rx="2" ry="2" />
<text  x="41.66" y="783.5" ></text>
</g>
<g >
<title>timekeeping_update (1 samples, 0.02%)</title><rect x="1189.0" y="581" width="0.2" height="15.0" fill="rgb(216,79,53)" rx="2" ry="2" />
<text  x="1191.99" y="591.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (5 samples, 0.09%)</title><rect x="37.4" y="629" width="1.1" height="15.0" fill="rgb(221,8,43)" rx="2" ry="2" />
<text  x="40.45" y="639.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="969.0" y="357" width="0.2" height="15.0" fill="rgb(233,81,42)" rx="2" ry="2" />
<text  x="972.01" y="367.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.02%)</title><rect x="119.8" y="485" width="0.2" height="15.0" fill="rgb(237,73,37)" rx="2" ry="2" />
<text  x="122.79" y="495.5" ></text>
</g>
<g >
<title>snd_pcm_update_state (1 samples, 0.02%)</title><rect x="918.6" y="645" width="0.2" height="15.0" fill="rgb(249,221,22)" rx="2" ry="2" />
<text  x="921.56" y="655.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.07%)</title><rect x="119.0" y="549" width="0.8" height="15.0" fill="rgb(223,120,33)" rx="2" ry="2" />
<text  x="121.98" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open (1 samples, 0.02%)</title><rect x="118.8" y="565" width="0.2" height="15.0" fill="rgb(206,128,36)" rx="2" ry="2" />
<text  x="121.78" y="575.5" ></text>
</g>
<g >
<title>drm_atomic_helper_page_flip (2 samples, 0.03%)</title><rect x="899.2" y="677" width="0.4" height="15.0" fill="rgb(209,40,36)" rx="2" ry="2" />
<text  x="902.19" y="687.5" ></text>
</g>
<g >
<title>read (1 samples, 0.02%)</title><rect x="28.0" y="693" width="0.2" height="15.0" fill="rgb(242,36,3)" rx="2" ry="2" />
<text  x="30.96" y="703.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.02%)</title><rect x="892.3" y="629" width="0.2" height="15.0" fill="rgb(221,38,16)" rx="2" ry="2" />
<text  x="895.33" y="639.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="891.7" y="709" width="0.8" height="15.0" fill="rgb(217,24,1)" rx="2" ry="2" />
<text  x="894.72" y="719.5" ></text>
</g>
<g >
<title>do_anonymous_page (86 samples, 1.47%)</title><rect x="700.0" y="677" width="17.4" height="15.0" fill="rgb(240,19,28)" rx="2" ry="2" />
<text  x="703.00" y="687.5" ></text>
</g>
<g >
<title>__gconv_read_conf (1 samples, 0.02%)</title><rect x="10.6" y="661" width="0.2" height="15.0" fill="rgb(235,38,42)" rx="2" ry="2" />
<text  x="13.61" y="671.5" ></text>
</g>
<g >
<title>set_default_locale (1 samples, 0.02%)</title><rect x="10.6" y="741" width="0.2" height="15.0" fill="rgb(254,202,53)" rx="2" ry="2" />
<text  x="13.61" y="751.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="932.3" y="693" width="0.4" height="15.0" fill="rgb(229,15,38)" rx="2" ry="2" />
<text  x="935.28" y="703.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (3 samples, 0.05%)</title><rect x="30.2" y="357" width="0.6" height="15.0" fill="rgb(212,199,39)" rx="2" ry="2" />
<text  x="33.18" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.03%)</title><rect x="489.9" y="517" width="0.4" height="15.0" fill="rgb(241,56,11)" rx="2" ry="2" />
<text  x="492.91" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (30 samples, 0.51%)</title><rect x="632.0" y="613" width="6.0" height="15.0" fill="rgb(229,117,39)" rx="2" ry="2" />
<text  x="634.99" y="623.5" ></text>
</g>
<g >
<title>ttm_eu_fence_buffer_objects (1 samples, 0.02%)</title><rect x="898.2" y="661" width="0.2" height="15.0" fill="rgb(234,205,5)" rx="2" ry="2" />
<text  x="901.18" y="671.5" ></text>
</g>
<g >
<title>NaClValidateImage (3 samples, 0.05%)</title><rect x="723.8" y="709" width="0.6" height="15.0" fill="rgb(228,129,31)" rx="2" ry="2" />
<text  x="726.81" y="719.5" ></text>
</g>
<g >
<title>ip6_input (1 samples, 0.02%)</title><rect x="972.6" y="389" width="0.2" height="15.0" fill="rgb(248,23,28)" rx="2" ry="2" />
<text  x="975.65" y="399.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.02%)</title><rect x="986.6" y="549" width="0.2" height="15.0" fill="rgb(231,33,46)" rx="2" ry="2" />
<text  x="989.57" y="559.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (7 samples, 0.12%)</title><rect x="61.5" y="773" width="1.4" height="15.0" fill="rgb(231,60,2)" rx="2" ry="2" />
<text  x="64.46" y="783.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.03%)</title><rect x="638.8" y="549" width="0.5" height="15.0" fill="rgb(214,18,51)" rx="2" ry="2" />
<text  x="641.85" y="559.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (1 samples, 0.02%)</title><rect x="1189.2" y="613" width="0.2" height="15.0" fill="rgb(224,188,54)" rx="2" ry="2" />
<text  x="1192.19" y="623.5" ></text>
</g>
<g >
<title>azx_pcm_pointer (78 samples, 1.33%)</title><rect x="902.6" y="645" width="15.8" height="15.0" fill="rgb(244,124,25)" rx="2" ry="2" />
<text  x="905.62" y="655.5" ></text>
</g>
<g >
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="892.5" y="709" width="0.2" height="15.0" fill="rgb(216,7,13)" rx="2" ry="2" />
<text  x="895.53" y="719.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (6 samples, 0.10%)</title><rect x="964.0" y="453" width="1.2" height="15.0" fill="rgb(222,17,54)" rx="2" ry="2" />
<text  x="966.97" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="119.8" y="581" width="0.2" height="15.0" fill="rgb(218,227,6)" rx="2" ry="2" />
<text  x="122.79" y="591.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.02%)</title><rect x="10.8" y="549" width="0.2" height="15.0" fill="rgb(209,107,17)" rx="2" ry="2" />
<text  x="13.81" y="559.5" ></text>
</g>
<g >
<title>alloc_buffer_head (1 samples, 0.02%)</title><rect x="30.0" y="357" width="0.2" height="15.0" fill="rgb(211,116,7)" rx="2" ry="2" />
<text  x="32.98" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="120.6" y="549" width="0.2" height="15.0" fill="rgb(228,177,7)" rx="2" ry="2" />
<text  x="123.59" y="559.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="65.3" y="773" width="0.2" height="15.0" fill="rgb(232,182,12)" rx="2" ry="2" />
<text  x="68.30" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (30 samples, 0.51%)</title><rect x="751.1" y="773" width="6.0" height="15.0" fill="rgb(225,10,39)" rx="2" ry="2" />
<text  x="754.06" y="783.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (1 samples, 0.02%)</title><rect x="118.2" y="117" width="0.2" height="15.0" fill="rgb(209,214,20)" rx="2" ry="2" />
<text  x="121.17" y="127.5" ></text>
</g>
<g >
<title>ovl_write_iter (44 samples, 0.75%)</title><rect x="28.6" y="533" width="8.8" height="15.0" fill="rgb(224,194,10)" rx="2" ry="2" />
<text  x="31.57" y="543.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (5 samples, 0.09%)</title><rect x="967.0" y="357" width="1.0" height="15.0" fill="rgb(249,195,9)" rx="2" ry="2" />
<text  x="970.00" y="367.5" ></text>
</g>
<g >
<title>dma_fence_signal (2 samples, 0.03%)</title><rect x="969.2" y="437" width="0.4" height="15.0" fill="rgb(217,142,46)" rx="2" ry="2" />
<text  x="972.22" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.02%)</title><rect x="10.2" y="405" width="0.2" height="15.0" fill="rgb(243,60,8)" rx="2" ry="2" />
<text  x="13.20" y="415.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (5 samples, 0.09%)</title><rect x="30.8" y="357" width="1.0" height="15.0" fill="rgb(244,156,47)" rx="2" ry="2" />
<text  x="33.79" y="367.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (2 samples, 0.03%)</title><rect x="949.4" y="517" width="0.4" height="15.0" fill="rgb(254,180,19)" rx="2" ry="2" />
<text  x="952.44" y="527.5" ></text>
</g>
<g >
<title>azx_get_pos_skl (1 samples, 0.02%)</title><rect x="902.6" y="629" width="0.2" height="15.0" fill="rgb(240,197,19)" rx="2" ry="2" />
<text  x="905.62" y="639.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.03%)</title><rect x="539.6" y="597" width="0.4" height="15.0" fill="rgb(239,3,40)" rx="2" ry="2" />
<text  x="542.56" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (45 samples, 0.77%)</title><rect x="28.4" y="613" width="9.0" height="15.0" fill="rgb(236,158,45)" rx="2" ry="2" />
<text  x="31.36" y="623.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (1 samples, 0.02%)</title><rect x="744.2" y="197" width="0.2" height="15.0" fill="rgb(213,173,35)" rx="2" ry="2" />
<text  x="747.20" y="207.5" ></text>
</g>
<g >
<title>HandleStackContext (61 samples, 1.04%)</title><rect x="71.8" y="757" width="12.3" height="15.0" fill="rgb(250,198,37)" rx="2" ry="2" />
<text  x="74.75" y="767.5" ></text>
</g>
<g >
<title>newidle_balance (3 samples, 0.05%)</title><rect x="1160.1" y="677" width="0.6" height="15.0" fill="rgb(214,1,10)" rx="2" ry="2" />
<text  x="1163.13" y="687.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="723.2" y="373" width="0.2" height="15.0" fill="rgb(238,174,49)" rx="2" ry="2" />
<text  x="726.21" y="383.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="988.8" y="533" width="0.2" height="15.0" fill="rgb(246,65,48)" rx="2" ry="2" />
<text  x="991.79" y="543.5" ></text>
</g>
<g >
<title>alloc_thread_stack_node (1 samples, 0.02%)</title><rect x="744.0" y="661" width="0.2" height="15.0" fill="rgb(212,35,4)" rx="2" ry="2" />
<text  x="746.99" y="671.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (5 samples, 0.09%)</title><rect x="962.0" y="341" width="1.0" height="15.0" fill="rgb(206,191,52)" rx="2" ry="2" />
<text  x="964.95" y="351.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="955.5" y="517" width="0.2" height="15.0" fill="rgb(243,102,51)" rx="2" ry="2" />
<text  x="958.49" y="527.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (1 samples, 0.02%)</title><rect x="119.8" y="517" width="0.2" height="15.0" fill="rgb(245,164,10)" rx="2" ry="2" />
<text  x="122.79" y="527.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="969.0" y="261" width="0.2" height="15.0" fill="rgb(226,113,1)" rx="2" ry="2" />
<text  x="972.01" y="271.5" ></text>
</g>
<g >
<title>llist_add_batch (1 samples, 0.02%)</title><rect x="1188.4" y="549" width="0.2" height="15.0" fill="rgb(237,108,6)" rx="2" ry="2" />
<text  x="1191.39" y="559.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="119.4" y="85" width="0.2" height="15.0" fill="rgb(240,225,12)" rx="2" ry="2" />
<text  x="122.38" y="95.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.03%)</title><rect x="603.1" y="533" width="0.4" height="15.0" fill="rgb(241,31,25)" rx="2" ry="2" />
<text  x="606.13" y="543.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (4 samples, 0.07%)</title><rect x="964.0" y="421" width="0.8" height="15.0" fill="rgb(209,79,26)" rx="2" ry="2" />
<text  x="966.97" y="431.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (1 samples, 0.02%)</title><rect x="119.0" y="325" width="0.2" height="15.0" fill="rgb(223,136,43)" rx="2" ry="2" />
<text  x="121.98" y="335.5" ></text>
</g>
<g >
<title>eventfd_poll (3 samples, 0.05%)</title><rect x="932.7" y="709" width="0.6" height="15.0" fill="rgb(248,124,32)" rx="2" ry="2" />
<text  x="935.69" y="719.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="743.6" y="741" width="0.2" height="15.0" fill="rgb(230,141,32)" rx="2" ry="2" />
<text  x="746.59" y="751.5" ></text>
</g>
<g >
<title>ret_from_fork (50 samples, 0.86%)</title><rect x="946.2" y="789" width="10.1" height="15.0" fill="rgb(226,140,7)" rx="2" ry="2" />
<text  x="949.21" y="799.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="132.7" y="581" width="0.2" height="15.0" fill="rgb(205,32,42)" rx="2" ry="2" />
<text  x="135.70" y="591.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.02%)</title><rect x="698.6" y="693" width="0.2" height="15.0" fill="rgb(222,211,38)" rx="2" ry="2" />
<text  x="701.59" y="703.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (1 samples, 0.02%)</title><rect x="119.0" y="357" width="0.2" height="15.0" fill="rgb(225,64,31)" rx="2" ry="2" />
<text  x="121.98" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.34%)</title><rect x="473.0" y="565" width="4.0" height="15.0" fill="rgb(244,179,35)" rx="2" ry="2" />
<text  x="475.96" y="575.5" ></text>
</g>
<g >
<title>__do_fault (2 samples, 0.03%)</title><rect x="723.0" y="485" width="0.4" height="15.0" fill="rgb(233,129,53)" rx="2" ry="2" />
<text  x="726.00" y="495.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (1 samples, 0.02%)</title><rect x="119.2" y="53" width="0.2" height="15.0" fill="rgb(235,4,28)" rx="2" ry="2" />
<text  x="122.18" y="63.5" ></text>
</g>
<g >
<title>do_fault (3 samples, 0.05%)</title><rect x="109.9" y="533" width="0.6" height="15.0" fill="rgb(249,112,45)" rx="2" ry="2" />
<text  x="112.90" y="543.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (1 samples, 0.02%)</title><rect x="120.6" y="629" width="0.2" height="15.0" fill="rgb(208,114,41)" rx="2" ry="2" />
<text  x="123.59" y="639.5" ></text>
</g>
<g >
<title>tick_program_event (3 samples, 0.05%)</title><rect x="1166.6" y="661" width="0.6" height="15.0" fill="rgb(223,91,21)" rx="2" ry="2" />
<text  x="1169.59" y="671.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (3 samples, 0.05%)</title><rect x="968.0" y="309" width="0.6" height="15.0" fill="rgb(239,55,25)" rx="2" ry="2" />
<text  x="971.01" y="319.5" ></text>
</g>
<g >
<title>lind_read (1,364 samples, 23.33%)</title><rect x="120.4" y="693" width="275.3" height="15.0" fill="rgb(222,10,37)" rx="2" ry="2" />
<text  x="123.39" y="703.5" >lind_read</text>
</g>
<g >
<title>alloc_pages_vma (55 samples, 0.94%)</title><rect x="700.6" y="661" width="11.1" height="15.0" fill="rgb(241,26,4)" rx="2" ry="2" />
<text  x="703.60" y="671.5" ></text>
</g>
<g >
<title>security_file_ioctl (1 samples, 0.02%)</title><rect x="900.2" y="741" width="0.2" height="15.0" fill="rgb(252,185,11)" rx="2" ry="2" />
<text  x="903.20" y="751.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (1 samples, 0.02%)</title><rect x="107.7" y="757" width="0.2" height="15.0" fill="rgb(206,50,53)" rx="2" ry="2" />
<text  x="110.68" y="767.5" ></text>
</g>
<g >
<title>intercept_process_vm_writev (3 samples, 0.05%)</title><rect x="722.8" y="693" width="0.6" height="15.0" fill="rgb(220,140,9)" rx="2" ry="2" />
<text  x="725.80" y="703.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.07%)</title><rect x="119.0" y="453" width="0.8" height="15.0" fill="rgb(235,50,44)" rx="2" ry="2" />
<text  x="121.98" y="463.5" ></text>
</g>
<g >
<title>NaClDescIoDescPRead (1 samples, 0.02%)</title><rect x="119.8" y="645" width="0.2" height="15.0" fill="rgb(238,164,40)" rx="2" ry="2" />
<text  x="122.79" y="655.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (15 samples, 0.26%)</title><rect x="603.5" y="549" width="3.1" height="15.0" fill="rgb(249,226,27)" rx="2" ry="2" />
<text  x="606.53" y="559.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (9 samples, 0.15%)</title><rect x="965.2" y="405" width="1.8" height="15.0" fill="rgb(216,99,27)" rx="2" ry="2" />
<text  x="968.18" y="415.5" ></text>
</g>
<g >
<title>ext4_evict_inode (1 samples, 0.02%)</title><rect x="118.2" y="181" width="0.2" height="15.0" fill="rgb(241,109,31)" rx="2" ry="2" />
<text  x="121.17" y="191.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="37.4" y="501" width="0.2" height="15.0" fill="rgb(246,218,9)" rx="2" ry="2" />
<text  x="40.45" y="511.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1148.0" y="661" width="0.2" height="15.0" fill="rgb(217,12,28)" rx="2" ry="2" />
<text  x="1151.02" y="671.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="744.2" y="133" width="0.2" height="15.0" fill="rgb(227,61,49)" rx="2" ry="2" />
<text  x="747.20" y="143.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="118.6" y="405" width="0.2" height="15.0" fill="rgb(250,14,52)" rx="2" ry="2" />
<text  x="121.58" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="118.2" y="469" width="0.2" height="15.0" fill="rgb(217,165,33)" rx="2" ry="2" />
<text  x="121.17" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="400.3" y="677" width="0.2" height="15.0" fill="rgb(250,195,1)" rx="2" ry="2" />
<text  x="403.31" y="687.5" ></text>
</g>
<g >
<title>dispatcher (3 samples, 0.05%)</title><rect x="49.2" y="773" width="0.6" height="15.0" fill="rgb(212,147,14)" rx="2" ry="2" />
<text  x="52.15" y="783.5" ></text>
</g>
<g >
<title>put_timespec64 (2 samples, 0.03%)</title><rect x="941.6" y="725" width="0.4" height="15.0" fill="rgb(231,73,30)" rx="2" ry="2" />
<text  x="944.57" y="735.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1165.0" y="709" width="0.2" height="15.0" fill="rgb(232,147,48)" rx="2" ry="2" />
<text  x="1167.98" y="719.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="1169.2" y="469" width="0.2" height="15.0" fill="rgb(209,54,9)" rx="2" ry="2" />
<text  x="1172.21" y="479.5" ></text>
</g>
<g >
<title>__import_iovec (1 samples, 0.02%)</title><rect x="943.0" y="693" width="0.2" height="15.0" fill="rgb(220,135,37)" rx="2" ry="2" />
<text  x="945.98" y="703.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (47 samples, 0.80%)</title><rect x="108.7" y="757" width="9.5" height="15.0" fill="rgb(247,205,21)" rx="2" ry="2" />
<text  x="111.69" y="767.5" ></text>
</g>
<g >
<title>rcu_core_si (2 samples, 0.03%)</title><rect x="986.4" y="581" width="0.4" height="15.0" fill="rgb(212,215,46)" rx="2" ry="2" />
<text  x="989.37" y="591.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1165.2" y="693" width="0.2" height="15.0" fill="rgb(243,42,50)" rx="2" ry="2" />
<text  x="1168.18" y="703.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="744.2" y="565" width="0.2" height="15.0" fill="rgb(228,177,47)" rx="2" ry="2" />
<text  x="747.20" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize (1 samples, 0.02%)</title><rect x="744.2" y="645" width="0.2" height="15.0" fill="rgb(242,120,15)" rx="2" ry="2" />
<text  x="747.20" y="655.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="893.3" y="645" width="0.2" height="15.0" fill="rgb(227,78,37)" rx="2" ry="2" />
<text  x="896.34" y="655.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (1 samples, 0.02%)</title><rect x="942.8" y="597" width="0.2" height="15.0" fill="rgb(226,64,32)" rx="2" ry="2" />
<text  x="945.78" y="607.5" ></text>
</g>
<g >
<title>refill_obj_stock (1 samples, 0.02%)</title><rect x="942.2" y="581" width="0.2" height="15.0" fill="rgb(228,157,51)" rx="2" ry="2" />
<text  x="945.17" y="591.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (1 samples, 0.02%)</title><rect x="119.6" y="229" width="0.2" height="15.0" fill="rgb(226,170,30)" rx="2" ry="2" />
<text  x="122.58" y="239.5" ></text>
</g>
<g >
<title>cpupri_set (2 samples, 0.03%)</title><rect x="976.5" y="469" width="0.4" height="15.0" fill="rgb(210,68,40)" rx="2" ry="2" />
<text  x="979.48" y="479.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (4 samples, 0.07%)</title><rect x="119.0" y="437" width="0.8" height="15.0" fill="rgb(240,105,40)" rx="2" ry="2" />
<text  x="121.98" y="447.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="38.5" y="773" width="0.2" height="15.0" fill="rgb(228,173,35)" rx="2" ry="2" />
<text  x="41.46" y="783.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="326.4" y="533" width="0.2" height="15.0" fill="rgb(250,3,27)" rx="2" ry="2" />
<text  x="329.44" y="543.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (91 samples, 1.56%)</title><rect x="1168.0" y="629" width="18.4" height="15.0" fill="rgb(252,62,23)" rx="2" ry="2" />
<text  x="1171.00" y="639.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.09%)</title><rect x="891.7" y="725" width="1.0" height="15.0" fill="rgb(253,77,23)" rx="2" ry="2" />
<text  x="894.72" y="735.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (420 samples, 7.18%)</title><rect x="306.9" y="581" width="84.7" height="15.0" fill="rgb(233,71,46)" rx="2" ry="2" />
<text  x="309.87" y="591.5" >ringbuf::..</text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="987.0" y="517" width="0.2" height="15.0" fill="rgb(253,106,44)" rx="2" ry="2" />
<text  x="989.98" y="527.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="744.2" y="101" width="0.2" height="15.0" fill="rgb(254,111,19)" rx="2" ry="2" />
<text  x="747.20" y="111.5" ></text>
</g>
<g >
<title>wait_for_completion_timeout (4 samples, 0.07%)</title><rect x="954.9" y="661" width="0.8" height="15.0" fill="rgb(225,3,46)" rx="2" ry="2" />
<text  x="957.89" y="671.5" ></text>
</g>
<g >
<title>open_path (1 samples, 0.02%)</title><rect x="10.8" y="661" width="0.2" height="15.0" fill="rgb(226,163,31)" rx="2" ry="2" />
<text  x="13.81" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (1 samples, 0.02%)</title><rect x="890.7" y="757" width="0.2" height="15.0" fill="rgb(218,39,18)" rx="2" ry="2" />
<text  x="893.71" y="767.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="957.3" y="693" width="0.4" height="15.0" fill="rgb(236,19,30)" rx="2" ry="2" />
<text  x="960.31" y="703.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (1 samples, 0.02%)</title><rect x="1189.0" y="645" width="0.2" height="15.0" fill="rgb(248,193,35)" rx="2" ry="2" />
<text  x="1191.99" y="655.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.03%)</title><rect x="943.8" y="709" width="0.4" height="15.0" fill="rgb(238,132,39)" rx="2" ry="2" />
<text  x="946.79" y="719.5" ></text>
</g>
<g >
<title>snd_pcm_update_hw_ptr0 (44 samples, 0.75%)</title><rect x="919.4" y="661" width="8.8" height="15.0" fill="rgb(241,182,25)" rx="2" ry="2" />
<text  x="922.37" y="671.5" ></text>
</g>
<g >
<title>__get_vblank_counter (13 samples, 0.22%)</title><rect x="960.3" y="453" width="2.7" height="15.0" fill="rgb(251,88,45)" rx="2" ry="2" />
<text  x="963.34" y="463.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.05%)</title><rect x="604.3" y="469" width="0.6" height="15.0" fill="rgb(240,185,13)" rx="2" ry="2" />
<text  x="607.34" y="479.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (442 samples, 7.56%)</title><rect x="305.5" y="613" width="89.2" height="15.0" fill="rgb(250,136,1)" rx="2" ry="2" />
<text  x="308.45" y="623.5" >ringbuf::c..</text>
</g>
<g >
<title>vfs_iter_read (1 samples, 0.02%)</title><rect x="119.8" y="357" width="0.2" height="15.0" fill="rgb(238,31,47)" rx="2" ry="2" />
<text  x="122.79" y="367.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.02%)</title><rect x="11.0" y="725" width="0.2" height="15.0" fill="rgb(250,217,0)" rx="2" ry="2" />
<text  x="14.01" y="735.5" ></text>
</g>
<g >
<title>udp_v4_early_demux (1 samples, 0.02%)</title><rect x="972.2" y="405" width="0.2" height="15.0" fill="rgb(247,21,36)" rx="2" ry="2" />
<text  x="975.24" y="415.5" ></text>
</g>
<g >
<title>perf_swevent_stop (1 samples, 0.02%)</title><rect x="138.4" y="405" width="0.2" height="15.0" fill="rgb(205,126,21)" rx="2" ry="2" />
<text  x="141.35" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.29%)</title><rect x="632.2" y="581" width="3.4" height="15.0" fill="rgb(215,217,32)" rx="2" ry="2" />
<text  x="635.19" y="591.5" ></text>
</g>
<g >
<title>drm_crtc_vblank_helper_get_vblank_timestamp (5 samples, 0.09%)</title><rect x="963.0" y="437" width="1.0" height="15.0" fill="rgb(235,190,4)" rx="2" ry="2" />
<text  x="965.96" y="447.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::new (1 samples, 0.02%)</title><rect x="118.8" y="613" width="0.2" height="15.0" fill="rgb(212,111,45)" rx="2" ry="2" />
<text  x="121.78" y="623.5" ></text>
</g>
<g >
<title>map_id_up (1 samples, 0.02%)</title><rect x="34.0" y="293" width="0.2" height="15.0" fill="rgb(209,98,48)" rx="2" ry="2" />
<text  x="37.02" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="394.7" y="613" width="0.2" height="15.0" fill="rgb(247,94,19)" rx="2" ry="2" />
<text  x="397.66" y="623.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="972.4" y="421" width="0.2" height="15.0" fill="rgb(205,108,12)" rx="2" ry="2" />
<text  x="975.45" y="431.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (4 samples, 0.07%)</title><rect x="966.2" y="357" width="0.8" height="15.0" fill="rgb(224,81,44)" rx="2" ry="2" />
<text  x="969.19" y="367.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="943.2" y="709" width="0.2" height="15.0" fill="rgb(209,115,2)" rx="2" ry="2" />
<text  x="946.18" y="719.5" ></text>
</g>
<g >
<title>__udp6_lib_rcv (1 samples, 0.02%)</title><rect x="972.6" y="341" width="0.2" height="15.0" fill="rgb(229,81,47)" rx="2" ry="2" />
<text  x="975.65" y="351.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="938.3" y="613" width="0.2" height="15.0" fill="rgb(228,219,52)" rx="2" ry="2" />
<text  x="941.34" y="623.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (4 samples, 0.07%)</title><rect x="966.2" y="325" width="0.8" height="15.0" fill="rgb(225,181,1)" rx="2" ry="2" />
<text  x="969.19" y="335.5" ></text>
</g>
<g >
<title>memchr_inv (2 samples, 0.03%)</title><rect x="1156.9" y="661" width="0.4" height="15.0" fill="rgb(222,133,0)" rx="2" ry="2" />
<text  x="1159.90" y="671.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (2 samples, 0.03%)</title><rect x="33.8" y="325" width="0.4" height="15.0" fill="rgb(246,1,39)" rx="2" ry="2" />
<text  x="36.81" y="335.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.02%)</title><rect x="118.6" y="293" width="0.2" height="15.0" fill="rgb(231,219,15)" rx="2" ry="2" />
<text  x="121.58" y="303.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (43 samples, 0.74%)</title><rect x="28.8" y="469" width="8.6" height="15.0" fill="rgb(236,224,39)" rx="2" ry="2" />
<text  x="31.77" y="479.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.09%)</title><rect x="606.8" y="549" width="1.0" height="15.0" fill="rgb(225,43,20)" rx="2" ry="2" />
<text  x="609.76" y="559.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1 samples, 0.02%)</title><rect x="119.2" y="117" width="0.2" height="15.0" fill="rgb(237,72,0)" rx="2" ry="2" />
<text  x="122.18" y="127.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.02%)</title><rect x="10.8" y="773" width="0.2" height="15.0" fill="rgb(207,86,36)" rx="2" ry="2" />
<text  x="13.81" y="783.5" ></text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="949.0" y="581" width="0.2" height="15.0" fill="rgb(228,121,26)" rx="2" ry="2" />
<text  x="952.04" y="591.5" ></text>
</g>
<g >
<title>amdgpu_sync_vm_fence (1 samples, 0.02%)</title><rect x="898.6" y="661" width="0.2" height="15.0" fill="rgb(220,118,14)" rx="2" ry="2" />
<text  x="901.58" y="671.5" ></text>
</g>
<g >
<title>rest_init (109 samples, 1.86%)</title><rect x="1167.8" y="709" width="22.0" height="15.0" fill="rgb(249,224,8)" rx="2" ry="2" />
<text  x="1170.80" y="719.5" >r..</text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.02%)</title><rect x="1157.7" y="725" width="0.2" height="15.0" fill="rgb(254,14,14)" rx="2" ry="2" />
<text  x="1160.71" y="735.5" ></text>
</g>
<g >
<title>_rl_init_terminal_io (1 samples, 0.02%)</title><rect x="10.4" y="645" width="0.2" height="15.0" fill="rgb(236,30,35)" rx="2" ry="2" />
<text  x="13.40" y="655.5" ></text>
</g>
<g >
<title>__seccomp_filter (1 samples, 0.02%)</title><rect x="945.6" y="709" width="0.2" height="15.0" fill="rgb(244,187,37)" rx="2" ry="2" />
<text  x="948.60" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (52 samples, 0.89%)</title><rect x="490.5" y="565" width="10.5" height="15.0" fill="rgb(242,226,52)" rx="2" ry="2" />
<text  x="493.52" y="575.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="744.2" y="165" width="0.2" height="15.0" fill="rgb(205,89,20)" rx="2" ry="2" />
<text  x="747.20" y="175.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="949.0" y="549" width="0.2" height="15.0" fill="rgb(222,170,23)" rx="2" ry="2" />
<text  x="952.04" y="559.5" ></text>
</g>
<g >
<title>drm_sched_job_init (2 samples, 0.03%)</title><rect x="897.6" y="661" width="0.4" height="15.0" fill="rgb(244,190,17)" rx="2" ry="2" />
<text  x="900.57" y="671.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.02%)</title><rect x="504.0" y="581" width="0.2" height="15.0" fill="rgb(212,61,52)" rx="2" ry="2" />
<text  x="507.04" y="591.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (1 samples, 0.02%)</title><rect x="118.2" y="165" width="0.2" height="15.0" fill="rgb(252,21,6)" rx="2" ry="2" />
<text  x="121.17" y="175.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (4 samples, 0.07%)</title><rect x="968.0" y="405" width="0.8" height="15.0" fill="rgb(250,90,5)" rx="2" ry="2" />
<text  x="971.01" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (24 samples, 0.41%)</title><rect x="646.1" y="613" width="4.9" height="15.0" fill="rgb(249,166,38)" rx="2" ry="2" />
<text  x="649.11" y="623.5" ></text>
</g>
<g >
<title>[perf-5071.map] (5 samples, 0.09%)</title><rect x="62.9" y="789" width="1.0" height="15.0" fill="rgb(252,68,4)" rx="2" ry="2" />
<text  x="65.87" y="799.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (15 samples, 0.26%)</title><rect x="388.6" y="565" width="3.0" height="15.0" fill="rgb(209,72,6)" rx="2" ry="2" />
<text  x="391.60" y="575.5" ></text>
</g>
<g >
<title>amdgpu_ctx_wait_prev_fence (1 samples, 0.02%)</title><rect x="894.9" y="661" width="0.3" height="15.0" fill="rgb(232,150,6)" rx="2" ry="2" />
<text  x="897.95" y="671.5" ></text>
</g>
<g >
<title>napi_complete_done (5 samples, 0.09%)</title><rect x="971.8" y="533" width="1.0" height="15.0" fill="rgb(251,229,19)" rx="2" ry="2" />
<text  x="974.84" y="543.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.03%)</title><rect x="891.3" y="629" width="0.4" height="15.0" fill="rgb(208,99,47)" rx="2" ry="2" />
<text  x="894.32" y="639.5" ></text>
</g>
<g >
<title>amdgpu_irq_dispatch (1 samples, 0.02%)</title><rect x="899.2" y="485" width="0.2" height="15.0" fill="rgb(244,120,39)" rx="2" ry="2" />
<text  x="902.19" y="495.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (1 samples, 0.02%)</title><rect x="120.6" y="357" width="0.2" height="15.0" fill="rgb(232,40,1)" rx="2" ry="2" />
<text  x="123.59" y="367.5" ></text>
</g>
<g >
<title>stop_this_handle (1 samples, 0.02%)</title><rect x="33.0" y="373" width="0.2" height="15.0" fill="rgb(232,40,45)" rx="2" ry="2" />
<text  x="36.01" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.02%)</title><rect x="11.0" y="757" width="0.2" height="15.0" fill="rgb(242,122,24)" rx="2" ry="2" />
<text  x="14.01" y="767.5" ></text>
</g>
<g >
<title>openaux (1 samples, 0.02%)</title><rect x="10.8" y="693" width="0.2" height="15.0" fill="rgb(225,226,5)" rx="2" ry="2" />
<text  x="13.81" y="703.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="37.4" y="533" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="40.45" y="543.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (4 samples, 0.07%)</title><rect x="107.9" y="757" width="0.8" height="15.0" fill="rgb(219,5,4)" rx="2" ry="2" />
<text  x="110.88" y="767.5" ></text>
</g>
<g >
<title>__sys_recvmsg (6 samples, 0.10%)</title><rect x="942.2" y="741" width="1.2" height="15.0" fill="rgb(222,48,26)" rx="2" ry="2" />
<text  x="945.17" y="751.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (18 samples, 0.31%)</title><rect x="57.6" y="757" width="3.7" height="15.0" fill="rgb(210,110,49)" rx="2" ry="2" />
<text  x="60.63" y="767.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="119.2" y="309" width="0.2" height="15.0" fill="rgb(232,75,31)" rx="2" ry="2" />
<text  x="122.18" y="319.5" ></text>
</g>
<g >
<title>dma_fence_default_wait_cb (1 samples, 0.02%)</title><rect x="969.4" y="405" width="0.2" height="15.0" fill="rgb(215,145,52)" rx="2" ry="2" />
<text  x="972.42" y="415.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="756.5" y="661" width="0.2" height="15.0" fill="rgb(229,82,11)" rx="2" ry="2" />
<text  x="759.51" y="671.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.02%)</title><rect x="120.6" y="613" width="0.2" height="15.0" fill="rgb(233,49,36)" rx="2" ry="2" />
<text  x="123.59" y="623.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="394.7" y="597" width="0.2" height="15.0" fill="rgb(251,13,7)" rx="2" ry="2" />
<text  x="397.66" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (1 samples, 0.02%)</title><rect x="62.5" y="757" width="0.2" height="15.0" fill="rgb(254,21,44)" rx="2" ry="2" />
<text  x="65.47" y="767.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="1169.2" y="581" width="0.2" height="15.0" fill="rgb(210,136,36)" rx="2" ry="2" />
<text  x="1172.21" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="608.0" y="501" width="0.2" height="15.0" fill="rgb(212,87,29)" rx="2" ry="2" />
<text  x="610.97" y="511.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.94%)</title><rect x="489.9" y="613" width="11.1" height="15.0" fill="rgb(217,167,46)" rx="2" ry="2" />
<text  x="492.91" y="623.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.02%)</title><rect x="1167.4" y="741" width="0.2" height="15.0" fill="rgb(215,170,23)" rx="2" ry="2" />
<text  x="1170.40" y="751.5" ></text>
</g>
<g >
<title>ext4_fc_track_template (1 samples, 0.02%)</title><rect x="34.2" y="325" width="0.2" height="15.0" fill="rgb(225,131,37)" rx="2" ry="2" />
<text  x="37.22" y="335.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (12 samples, 0.21%)</title><rect x="712.9" y="661" width="2.4" height="15.0" fill="rgb(220,228,3)" rx="2" ry="2" />
<text  x="715.91" y="671.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2 samples, 0.03%)</title><rect x="743.2" y="741" width="0.4" height="15.0" fill="rgb(224,53,45)" rx="2" ry="2" />
<text  x="746.19" y="751.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="119.2" y="213" width="0.2" height="15.0" fill="rgb(243,170,49)" rx="2" ry="2" />
<text  x="122.18" y="223.5" ></text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.02%)</title><rect x="897.0" y="517" width="0.2" height="15.0" fill="rgb(224,195,7)" rx="2" ry="2" />
<text  x="899.97" y="527.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.02%)</title><rect x="1157.3" y="629" width="0.2" height="15.0" fill="rgb(228,154,13)" rx="2" ry="2" />
<text  x="1160.31" y="639.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (435 samples, 7.44%)</title><rect x="306.9" y="597" width="87.8" height="15.0" fill="rgb(214,135,7)" rx="2" ry="2" />
<text  x="309.87" y="607.5" >ringbuf::c..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="62.5" y="693" width="0.2" height="15.0" fill="rgb(241,110,26)" rx="2" ry="2" />
<text  x="65.47" y="703.5" ></text>
</g>
<g >
<title>timekeeping_advance (1 samples, 0.02%)</title><rect x="979.5" y="517" width="0.2" height="15.0" fill="rgb(217,43,53)" rx="2" ry="2" />
<text  x="982.51" y="527.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="1169.4" y="453" width="0.2" height="15.0" fill="rgb(223,173,2)" rx="2" ry="2" />
<text  x="1172.42" y="463.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="935.7" y="629" width="0.2" height="15.0" fill="rgb(228,172,42)" rx="2" ry="2" />
<text  x="938.72" y="639.5" ></text>
</g>
<g >
<title>fdarray__poll (3 samples, 0.05%)</title><rect x="27.4" y="741" width="0.6" height="15.0" fill="rgb(213,73,22)" rx="2" ry="2" />
<text  x="30.36" y="751.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.03%)</title><rect x="714.9" y="613" width="0.4" height="15.0" fill="rgb(243,142,8)" rx="2" ry="2" />
<text  x="717.93" y="623.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1169.4" y="517" width="0.2" height="15.0" fill="rgb(232,81,26)" rx="2" ry="2" />
<text  x="1172.42" y="527.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="947.4" y="677" width="0.2" height="15.0" fill="rgb(207,117,14)" rx="2" ry="2" />
<text  x="950.42" y="687.5" ></text>
</g>
<g >
<title>pick_next_task_fair (5 samples, 0.09%)</title><rect x="1159.9" y="693" width="1.0" height="15.0" fill="rgb(242,104,21)" rx="2" ry="2" />
<text  x="1162.93" y="703.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="985.8" y="613" width="0.2" height="15.0" fill="rgb(238,196,49)" rx="2" ry="2" />
<text  x="988.77" y="623.5" ></text>
</g>
<g >
<title>reader_loop (1 samples, 0.02%)</title><rect x="10.4" y="741" width="0.2" height="15.0" fill="rgb(244,35,52)" rx="2" ry="2" />
<text  x="13.40" y="751.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (109 samples, 1.86%)</title><rect x="1167.8" y="757" width="22.0" height="15.0" fill="rgb(242,228,36)" rx="2" ry="2" />
<text  x="1170.80" y="767.5" >x..</text>
</g>
<g >
<title>_dl_map_object_deps (1 samples, 0.02%)</title><rect x="10.8" y="725" width="0.2" height="15.0" fill="rgb(216,73,5)" rx="2" ry="2" />
<text  x="13.81" y="735.5" ></text>
</g>
<g >
<title>dma_fence_signal_locked (1 samples, 0.02%)</title><rect x="969.4" y="421" width="0.2" height="15.0" fill="rgb(214,57,13)" rx="2" ry="2" />
<text  x="972.42" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (1 samples, 0.02%)</title><rect x="1187.2" y="629" width="0.2" height="15.0" fill="rgb(241,100,24)" rx="2" ry="2" />
<text  x="1190.17" y="639.5" ></text>
</g>
<g >
<title>menu_reflect (2 samples, 0.03%)</title><rect x="1150.0" y="693" width="0.4" height="15.0" fill="rgb(230,194,39)" rx="2" ry="2" />
<text  x="1153.04" y="703.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (51 samples, 0.87%)</title><rect x="701.4" y="645" width="10.3" height="15.0" fill="rgb(228,180,8)" rx="2" ry="2" />
<text  x="704.41" y="655.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (2 samples, 0.03%)</title><rect x="945.6" y="757" width="0.4" height="15.0" fill="rgb(251,81,8)" rx="2" ry="2" />
<text  x="948.60" y="767.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.03%)</title><rect x="137.9" y="549" width="0.5" height="15.0" fill="rgb(251,24,13)" rx="2" ry="2" />
<text  x="140.95" y="559.5" ></text>
</g>
<g >
<title>__mmap (1 samples, 0.02%)</title><rect x="10.2" y="453" width="0.2" height="15.0" fill="rgb(219,87,35)" rx="2" ry="2" />
<text  x="13.20" y="463.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (12 samples, 0.21%)</title><rect x="635.6" y="581" width="2.4" height="15.0" fill="rgb(254,200,27)" rx="2" ry="2" />
<text  x="638.62" y="591.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="37.4" y="517" width="0.2" height="15.0" fill="rgb(211,118,3)" rx="2" ry="2" />
<text  x="40.45" y="527.5" ></text>
</g>
<g >
<title>smp_call_function_single (66 samples, 1.13%)</title><rect x="13.8" y="549" width="13.4" height="15.0" fill="rgb(218,46,17)" rx="2" ry="2" />
<text  x="16.83" y="559.5" ></text>
</g>
<g >
<title>rcu_gp_fqs_loop (6 samples, 0.10%)</title><rect x="946.8" y="741" width="1.2" height="15.0" fill="rgb(242,209,8)" rx="2" ry="2" />
<text  x="949.82" y="751.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.02%)</title><rect x="638.6" y="533" width="0.2" height="15.0" fill="rgb(213,19,27)" rx="2" ry="2" />
<text  x="641.65" y="543.5" ></text>
</g>
<g >
<title>__remove_hrtimer (2 samples, 0.03%)</title><rect x="1165.8" y="661" width="0.4" height="15.0" fill="rgb(242,127,5)" rx="2" ry="2" />
<text  x="1168.78" y="671.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (22 samples, 0.38%)</title><rect x="433.0" y="581" width="4.4" height="15.0" fill="rgb(210,218,6)" rx="2" ry="2" />
<text  x="436.00" y="591.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="990.8" y="581" width="0.2" height="15.0" fill="rgb(253,140,13)" rx="2" ry="2" />
<text  x="993.81" y="591.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (1 samples, 0.02%)</title><rect x="10.2" y="581" width="0.2" height="15.0" fill="rgb(243,227,30)" rx="2" ry="2" />
<text  x="13.20" y="591.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="990.8" y="565" width="0.2" height="15.0" fill="rgb(234,206,17)" rx="2" ry="2" />
<text  x="993.81" y="575.5" ></text>
</g>
<g >
<title>NaClHostDescPRead (1 samples, 0.02%)</title><rect x="119.8" y="629" width="0.2" height="15.0" fill="rgb(248,153,0)" rx="2" ry="2" />
<text  x="122.79" y="639.5" ></text>
</g>
<g >
<title>__wait_for_common (3 samples, 0.05%)</title><rect x="955.1" y="645" width="0.6" height="15.0" fill="rgb(242,201,9)" rx="2" ry="2" />
<text  x="958.09" y="655.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1 samples, 0.02%)</title><rect x="38.9" y="773" width="0.2" height="15.0" fill="rgb(220,226,35)" rx="2" ry="2" />
<text  x="41.86" y="783.5" ></text>
</g>
<g >
<title>do_fault_around (1 samples, 0.02%)</title><rect x="117.8" y="597" width="0.2" height="15.0" fill="rgb(214,200,13)" rx="2" ry="2" />
<text  x="120.77" y="607.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (1 samples, 0.02%)</title><rect x="729.7" y="725" width="0.2" height="15.0" fill="rgb(236,209,25)" rx="2" ry="2" />
<text  x="732.66" y="735.5" ></text>
</g>
<g >
<title>rcu_irq_exit (1 samples, 0.02%)</title><rect x="991.0" y="645" width="0.2" height="15.0" fill="rgb(217,201,51)" rx="2" ry="2" />
<text  x="994.01" y="655.5" ></text>
</g>
<g >
<title>dequeue_task (2 samples, 0.03%)</title><rect x="955.1" y="581" width="0.4" height="15.0" fill="rgb(223,72,8)" rx="2" ry="2" />
<text  x="958.09" y="591.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (1 samples, 0.02%)</title><rect x="83.9" y="741" width="0.2" height="15.0" fill="rgb(235,211,11)" rx="2" ry="2" />
<text  x="86.86" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (281 samples, 4.81%)</title><rect x="889.5" y="789" width="56.7" height="15.0" fill="rgb(237,29,45)" rx="2" ry="2" />
<text  x="892.50" y="799.5" >entry_..</text>
</g>
<g >
<title>dequeue_task (2 samples, 0.03%)</title><rect x="891.7" y="661" width="0.4" height="15.0" fill="rgb(221,169,4)" rx="2" ry="2" />
<text  x="894.72" y="671.5" ></text>
</g>
<g >
<title>enqueue_task (2 samples, 0.03%)</title><rect x="897.2" y="517" width="0.4" height="15.0" fill="rgb(214,228,15)" rx="2" ry="2" />
<text  x="900.17" y="527.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (112 samples, 1.92%)</title><rect x="696.0" y="773" width="22.6" height="15.0" fill="rgb(232,65,27)" rx="2" ry="2" />
<text  x="698.96" y="783.5" >a..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (1,361 samples, 23.28%)</title><rect x="120.4" y="645" width="274.7" height="15.0" fill="rgb(224,3,15)" rx="2" ry="2" />
<text  x="123.39" y="655.5" >rustposix::safeposix::syscalls::fs_c..</text>
</g>
<g >
<title>psi_task_switch (8 samples, 0.14%)</title><rect x="1161.3" y="693" width="1.7" height="15.0" fill="rgb(230,91,45)" rx="2" ry="2" />
<text  x="1164.34" y="703.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="893.5" y="645" width="0.2" height="15.0" fill="rgb(234,176,1)" rx="2" ry="2" />
<text  x="896.54" y="655.5" ></text>
</g>
<g >
<title>cpu_startup_entry (109 samples, 1.86%)</title><rect x="1167.8" y="693" width="22.0" height="15.0" fill="rgb(236,43,37)" rx="2" ry="2" />
<text  x="1170.80" y="703.5" >c..</text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.02%)</title><rect x="38.3" y="501" width="0.2" height="15.0" fill="rgb(223,49,10)" rx="2" ry="2" />
<text  x="41.25" y="511.5" ></text>
</g>
<g >
<title>schedule_idle (29 samples, 0.50%)</title><rect x="1158.5" y="725" width="5.9" height="15.0" fill="rgb(236,181,5)" rx="2" ry="2" />
<text  x="1161.52" y="735.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="1169.4" y="469" width="0.2" height="15.0" fill="rgb(225,9,41)" rx="2" ry="2" />
<text  x="1172.42" y="479.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="931.3" y="725" width="0.2" height="15.0" fill="rgb(213,209,49)" rx="2" ry="2" />
<text  x="934.28" y="735.5" ></text>
</g>
<g >
<title>do_shared_fault (3 samples, 0.05%)</title><rect x="109.9" y="517" width="0.6" height="15.0" fill="rgb(229,194,6)" rx="2" ry="2" />
<text  x="112.90" y="527.5" ></text>
</g>
<g >
<title>timekeeping_update (2 samples, 0.03%)</title><rect x="980.3" y="485" width="0.4" height="15.0" fill="rgb(253,19,1)" rx="2" ry="2" />
<text  x="983.32" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (243 samples, 4.16%)</title><rect x="138.6" y="613" width="49.0" height="15.0" fill="rgb(244,12,7)" rx="2" ry="2" />
<text  x="141.55" y="623.5" >core..</text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="638.2" y="565" width="0.6" height="15.0" fill="rgb(225,76,8)" rx="2" ry="2" />
<text  x="641.24" y="575.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.17%)</title><rect x="600.3" y="501" width="2.0" height="15.0" fill="rgb(232,71,18)" rx="2" ry="2" />
<text  x="603.30" y="511.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (1 samples, 0.02%)</title><rect x="972.4" y="405" width="0.2" height="15.0" fill="rgb(245,81,48)" rx="2" ry="2" />
<text  x="975.45" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (3 samples, 0.05%)</title><rect x="395.1" y="613" width="0.6" height="15.0" fill="rgb(247,175,25)" rx="2" ry="2" />
<text  x="398.06" y="623.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.02%)</title><rect x="1152.1" y="661" width="0.2" height="15.0" fill="rgb(229,7,41)" rx="2" ry="2" />
<text  x="1155.06" y="671.5" ></text>
</g>
<g >
<title>__srcu_read_lock (2 samples, 0.03%)</title><rect x="894.1" y="693" width="0.4" height="15.0" fill="rgb(212,109,51)" rx="2" ry="2" />
<text  x="897.14" y="703.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (2 samples, 0.03%)</title><rect x="489.9" y="549" width="0.4" height="15.0" fill="rgb(251,131,2)" rx="2" ry="2" />
<text  x="492.91" y="559.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="138.4" y="501" width="0.2" height="15.0" fill="rgb(234,77,9)" rx="2" ry="2" />
<text  x="141.35" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="38.1" y="485" width="0.2" height="15.0" fill="rgb(221,68,47)" rx="2" ry="2" />
<text  x="41.05" y="495.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 1.37%)</title><rect x="11.2" y="725" width="16.2" height="15.0" fill="rgb(212,158,27)" rx="2" ry="2" />
<text  x="14.21" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.02%)</title><rect x="118.8" y="453" width="0.2" height="15.0" fill="rgb(228,19,29)" rx="2" ry="2" />
<text  x="121.78" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="599.7" y="501" width="0.2" height="15.0" fill="rgb(219,112,13)" rx="2" ry="2" />
<text  x="602.70" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="119.6" y="149" width="0.2" height="15.0" fill="rgb(221,211,9)" rx="2" ry="2" />
<text  x="122.58" y="159.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (33 samples, 0.56%)</title><rect x="110.5" y="693" width="6.7" height="15.0" fill="rgb(240,38,33)" rx="2" ry="2" />
<text  x="113.50" y="703.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (12 samples, 0.21%)</title><rect x="81.4" y="741" width="2.5" height="15.0" fill="rgb(243,213,8)" rx="2" ry="2" />
<text  x="84.44" y="751.5" ></text>
</g>
<g >
<title>__libc_write (45 samples, 0.77%)</title><rect x="28.4" y="645" width="9.0" height="15.0" fill="rgb(241,19,38)" rx="2" ry="2" />
<text  x="31.36" y="655.5" ></text>
</g>
<g >
<title>mutex_unlock (3 samples, 0.05%)</title><rect x="12.6" y="597" width="0.6" height="15.0" fill="rgb(216,63,4)" rx="2" ry="2" />
<text  x="15.62" y="607.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (3 samples, 0.05%)</title><rect x="1160.1" y="661" width="0.6" height="15.0" fill="rgb(243,6,1)" rx="2" ry="2" />
<text  x="1163.13" y="671.5" ></text>
</g>
<g >
<title>touch_softlockup_watchdog_sched (1 samples, 0.02%)</title><rect x="969.8" y="613" width="0.2" height="15.0" fill="rgb(245,60,41)" rx="2" ry="2" />
<text  x="972.82" y="623.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="952.9" y="517" width="0.2" height="15.0" fill="rgb(244,45,39)" rx="2" ry="2" />
<text  x="955.87" y="527.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (28 samples, 0.48%)</title><rect x="399.1" y="725" width="5.6" height="15.0" fill="rgb(205,145,3)" rx="2" ry="2" />
<text  x="402.10" y="735.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="952.9" y="501" width="0.2" height="15.0" fill="rgb(210,24,32)" rx="2" ry="2" />
<text  x="955.87" y="511.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="33.4" y="293" width="0.2" height="15.0" fill="rgb(236,142,26)" rx="2" ry="2" />
<text  x="36.41" y="303.5" ></text>
</g>
<g >
<title>snd_pcm_common_ioctl (129 samples, 2.21%)</title><rect x="902.4" y="725" width="26.1" height="15.0" fill="rgb(226,225,12)" rx="2" ry="2" />
<text  x="905.42" y="735.5" >s..</text>
</g>
<g >
<title>gup_pgd_range (3 samples, 0.05%)</title><rect x="892.7" y="645" width="0.6" height="15.0" fill="rgb(229,226,47)" rx="2" ry="2" />
<text  x="895.73" y="655.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (8 samples, 0.14%)</title><rect x="950.9" y="565" width="1.6" height="15.0" fill="rgb(237,104,5)" rx="2" ry="2" />
<text  x="953.85" y="575.5" ></text>
</g>
<g >
<title>tick_irq_enter (1 samples, 0.02%)</title><rect x="1169.0" y="565" width="0.2" height="15.0" fill="rgb(218,188,49)" rx="2" ry="2" />
<text  x="1172.01" y="575.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="723.0" y="389" width="0.2" height="15.0" fill="rgb(207,227,19)" rx="2" ry="2" />
<text  x="726.00" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (147 samples, 2.51%)</title><rect x="268.9" y="581" width="29.7" height="15.0" fill="rgb(232,186,16)" rx="2" ry="2" />
<text  x="271.93" y="591.5" >co..</text>
</g>
<g >
<title>__libc_read (1 samples, 0.02%)</title><rect x="28.0" y="677" width="0.2" height="15.0" fill="rgb(206,191,34)" rx="2" ry="2" />
<text  x="30.96" y="687.5" ></text>
</g>
<g >
<title>amdgpu_cs_ioctl (1 samples, 0.02%)</title><rect x="893.9" y="709" width="0.2" height="15.0" fill="rgb(235,207,19)" rx="2" ry="2" />
<text  x="896.94" y="719.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="744.2" y="85" width="0.2" height="15.0" fill="rgb(236,7,0)" rx="2" ry="2" />
<text  x="747.20" y="95.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.02%)</title><rect x="952.9" y="549" width="0.2" height="15.0" fill="rgb(214,218,41)" rx="2" ry="2" />
<text  x="955.87" y="559.5" ></text>
</g>
<g >
<title>_perf_event_enable (66 samples, 1.13%)</title><rect x="13.8" y="581" width="13.4" height="15.0" fill="rgb(244,101,17)" rx="2" ry="2" />
<text  x="16.83" y="591.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="893.3" y="597" width="0.2" height="15.0" fill="rgb(209,103,16)" rx="2" ry="2" />
<text  x="896.34" y="607.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (2 samples, 0.03%)</title><rect x="38.1" y="533" width="0.4" height="15.0" fill="rgb(241,62,35)" rx="2" ry="2" />
<text  x="41.05" y="543.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.02%)</title><rect x="946.0" y="677" width="0.2" height="15.0" fill="rgb(234,86,9)" rx="2" ry="2" />
<text  x="949.01" y="687.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (36 samples, 0.62%)</title><rect x="624.7" y="613" width="7.3" height="15.0" fill="rgb(243,132,13)" rx="2" ry="2" />
<text  x="627.72" y="623.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.03%)</title><rect x="716.1" y="645" width="0.4" height="15.0" fill="rgb(252,206,40)" rx="2" ry="2" />
<text  x="719.14" y="655.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.02%)</title><rect x="928.7" y="693" width="0.2" height="15.0" fill="rgb(207,42,23)" rx="2" ry="2" />
<text  x="931.65" y="703.5" ></text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (3 samples, 0.05%)</title><rect x="109.9" y="661" width="0.6" height="15.0" fill="rgb(226,30,53)" rx="2" ry="2" />
<text  x="112.90" y="671.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="983.9" y="597" width="0.3" height="15.0" fill="rgb(216,99,0)" rx="2" ry="2" />
<text  x="986.95" y="607.5" ></text>
</g>
<g >
<title>__run_hrtimer (45 samples, 0.77%)</title><rect x="974.7" y="581" width="9.0" height="15.0" fill="rgb(217,72,11)" rx="2" ry="2" />
<text  x="977.67" y="591.5" ></text>
</g>
<g >
<title>lind_write (1,143 samples, 19.55%)</title><rect x="420.3" y="693" width="230.7" height="15.0" fill="rgb(207,165,43)" rx="2" ry="2" />
<text  x="423.29" y="703.5" >lind_write</text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,157 samples, 19.79%)</title><rect x="956.3" y="789" width="233.5" height="15.0" fill="rgb(209,9,38)" rx="2" ry="2" />
<text  x="959.30" y="799.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>lockless_pages_from_mm (1 samples, 0.02%)</title><rect x="892.5" y="645" width="0.2" height="15.0" fill="rgb(221,225,1)" rx="2" ry="2" />
<text  x="895.53" y="655.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (51 samples, 0.87%)</title><rect x="973.5" y="597" width="10.2" height="15.0" fill="rgb(231,192,42)" rx="2" ry="2" />
<text  x="976.45" y="607.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.02%)</title><rect x="1169.0" y="581" width="0.2" height="15.0" fill="rgb(214,114,16)" rx="2" ry="2" />
<text  x="1172.01" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (92 samples, 1.57%)</title><rect x="454.4" y="613" width="18.6" height="15.0" fill="rgb(245,90,24)" rx="2" ry="2" />
<text  x="457.39" y="623.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.02%)</title><rect x="11.0" y="677" width="0.2" height="15.0" fill="rgb(216,17,53)" rx="2" ry="2" />
<text  x="14.01" y="687.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (6 samples, 0.10%)</title><rect x="960.3" y="309" width="1.2" height="15.0" fill="rgb(216,26,2)" rx="2" ry="2" />
<text  x="963.34" y="319.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (2 samples, 0.03%)</title><rect x="711.3" y="581" width="0.4" height="15.0" fill="rgb(227,16,28)" rx="2" ry="2" />
<text  x="714.30" y="591.5" ></text>
</g>
<g >
<title>clear_page_erms (41 samples, 0.70%)</title><rect x="702.4" y="613" width="8.3" height="15.0" fill="rgb(211,190,39)" rx="2" ry="2" />
<text  x="705.42" y="623.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (1 samples, 0.02%)</title><rect x="594.2" y="565" width="0.3" height="15.0" fill="rgb(238,55,48)" rx="2" ry="2" />
<text  x="597.25" y="575.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect x="119.0" y="373" width="0.2" height="15.0" fill="rgb(205,150,31)" rx="2" ry="2" />
<text  x="121.98" y="383.5" ></text>
</g>
<g >
<title>snd_pcm_poll (2 samples, 0.03%)</title><rect x="940.0" y="709" width="0.4" height="15.0" fill="rgb(217,133,27)" rx="2" ry="2" />
<text  x="942.95" y="719.5" ></text>
</g>
<g >
<title>do_epoll_wait (4 samples, 0.07%)</title><rect x="890.9" y="741" width="0.8" height="15.0" fill="rgb(219,11,31)" rx="2" ry="2" />
<text  x="893.91" y="751.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (1 samples, 0.02%)</title><rect x="110.1" y="437" width="0.2" height="15.0" fill="rgb(235,95,30)" rx="2" ry="2" />
<text  x="113.10" y="447.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.02%)</title><rect x="119.8" y="693" width="0.2" height="15.0" fill="rgb(248,19,49)" rx="2" ry="2" />
<text  x="122.79" y="703.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.02%)</title><rect x="1149.4" y="693" width="0.2" height="15.0" fill="rgb(236,30,52)" rx="2" ry="2" />
<text  x="1152.44" y="703.5" ></text>
</g>
<g >
<title>azx_get_pos_skl (32 samples, 0.55%)</title><rect x="921.8" y="613" width="6.4" height="15.0" fill="rgb(228,158,6)" rx="2" ry="2" />
<text  x="924.79" y="623.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.0 (1 samples, 0.02%)</title><rect x="34.8" y="293" width="0.2" height="15.0" fill="rgb(229,213,34)" rx="2" ry="2" />
<text  x="37.82" y="303.5" ></text>
</g>
<g >
<title>do_unlinkat (1 samples, 0.02%)</title><rect x="118.2" y="421" width="0.2" height="15.0" fill="rgb(232,56,50)" rx="2" ry="2" />
<text  x="121.17" y="431.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (46 samples, 0.79%)</title><rect x="729.9" y="773" width="9.2" height="15.0" fill="rgb(245,23,31)" rx="2" ry="2" />
<text  x="732.87" y="783.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1169.2" y="533" width="0.2" height="15.0" fill="rgb(212,60,20)" rx="2" ry="2" />
<text  x="1172.21" y="543.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (1 samples, 0.02%)</title><rect x="963.0" y="325" width="0.2" height="15.0" fill="rgb(251,108,35)" rx="2" ry="2" />
<text  x="965.96" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="723.4" y="741" width="0.2" height="15.0" fill="rgb(208,122,19)" rx="2" ry="2" />
<text  x="726.41" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="119.0" y="277" width="0.2" height="15.0" fill="rgb(219,191,37)" rx="2" ry="2" />
<text  x="121.98" y="287.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="120.6" y="389" width="0.2" height="15.0" fill="rgb(251,7,22)" rx="2" ry="2" />
<text  x="123.59" y="399.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="982.7" y="469" width="0.2" height="15.0" fill="rgb(215,36,39)" rx="2" ry="2" />
<text  x="985.74" y="479.5" ></text>
</g>
<g >
<title>timerfd_poll (2 samples, 0.03%)</title><rect x="929.5" y="709" width="0.4" height="15.0" fill="rgb(245,189,41)" rx="2" ry="2" />
<text  x="932.46" y="719.5" ></text>
</g>
<g >
<title>rcu_segcblist_pend_cbs (1 samples, 0.02%)</title><rect x="946.6" y="693" width="0.2" height="15.0" fill="rgb(229,64,37)" rx="2" ry="2" />
<text  x="949.61" y="703.5" ></text>
</g>
<g >
<title>drm_atomic_nonblocking_commit (2 samples, 0.03%)</title><rect x="899.2" y="661" width="0.4" height="15.0" fill="rgb(240,192,54)" rx="2" ry="2" />
<text  x="902.19" y="671.5" ></text>
</g>
<g >
<title>alx_clean_rx_irq (1 samples, 0.02%)</title><rect x="970.6" y="533" width="0.2" height="15.0" fill="rgb(212,212,12)" rx="2" ry="2" />
<text  x="973.63" y="543.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="890.7" y="661" width="0.2" height="15.0" fill="rgb(217,211,35)" rx="2" ry="2" />
<text  x="893.71" y="671.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (2 samples, 0.03%)</title><rect x="1155.3" y="645" width="0.4" height="15.0" fill="rgb(247,204,30)" rx="2" ry="2" />
<text  x="1158.29" y="655.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (178 samples, 3.04%)</title><rect x="558.3" y="597" width="35.9" height="15.0" fill="rgb(242,210,14)" rx="2" ry="2" />
<text  x="561.33" y="607.5" >rin..</text>
</g>
<g >
<title>mark_buffer_dirty (1 samples, 0.02%)</title><rect x="37.9" y="533" width="0.2" height="15.0" fill="rgb(232,229,17)" rx="2" ry="2" />
<text  x="40.85" y="543.5" ></text>
</g>
<g >
<title>dm_read_reg_func (3 samples, 0.05%)</title><rect x="968.0" y="325" width="0.6" height="15.0" fill="rgb(212,178,38)" rx="2" ry="2" />
<text  x="971.01" y="335.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="138.4" y="421" width="0.2" height="15.0" fill="rgb(244,207,54)" rx="2" ry="2" />
<text  x="141.35" y="431.5" ></text>
</g>
<g >
<title>amdgpu_gmc_pd_addr (1 samples, 0.02%)</title><rect x="899.0" y="677" width="0.2" height="15.0" fill="rgb(228,157,4)" rx="2" ry="2" />
<text  x="901.99" y="687.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.02%)</title><rect x="892.5" y="693" width="0.2" height="15.0" fill="rgb(231,142,11)" rx="2" ry="2" />
<text  x="895.53" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.51%)</title><rect x="751.1" y="789" width="6.0" height="15.0" fill="rgb(231,47,43)" rx="2" ry="2" />
<text  x="754.06" y="799.5" ></text>
</g>
<g >
<title>sel_ldr (3,562 samples, 60.92%)</title><rect x="38.5" y="805" width="718.8" height="15.0" fill="rgb(249,125,20)" rx="2" ry="2" />
<text  x="41.46" y="815.5" >sel_ldr</text>
</g>
<g >
<title>lindrustinit (1 samples, 0.02%)</title><rect x="744.2" y="725" width="0.2" height="15.0" fill="rgb(252,138,5)" rx="2" ry="2" />
<text  x="747.20" y="735.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="896.4" y="645" width="0.2" height="15.0" fill="rgb(232,83,35)" rx="2" ry="2" />
<text  x="899.36" y="655.5" ></text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="968.6" y="341" width="0.2" height="15.0" fill="rgb(233,65,31)" rx="2" ry="2" />
<text  x="971.61" y="351.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="120.4" y="613" width="0.2" height="15.0" fill="rgb(213,184,12)" rx="2" ry="2" />
<text  x="123.39" y="623.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (1 samples, 0.02%)</title><rect x="942.8" y="629" width="0.2" height="15.0" fill="rgb(243,83,29)" rx="2" ry="2" />
<text  x="945.78" y="639.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="984.4" y="581" width="0.2" height="15.0" fill="rgb(212,218,47)" rx="2" ry="2" />
<text  x="987.35" y="591.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="949.0" y="533" width="0.2" height="15.0" fill="rgb(244,92,40)" rx="2" ry="2" />
<text  x="952.04" y="543.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (13 samples, 0.22%)</title><rect x="53.8" y="741" width="2.6" height="15.0" fill="rgb(222,10,10)" rx="2" ry="2" />
<text  x="56.79" y="751.5" ></text>
</g>
<g >
<title>dma_fence_release (1 samples, 0.02%)</title><rect x="896.6" y="613" width="0.2" height="15.0" fill="rgb(233,85,20)" rx="2" ry="2" />
<text  x="899.56" y="623.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="943.0" y="661" width="0.2" height="15.0" fill="rgb(249,171,25)" rx="2" ry="2" />
<text  x="945.98" y="671.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="982.7" y="453" width="0.2" height="15.0" fill="rgb(222,105,9)" rx="2" ry="2" />
<text  x="985.74" y="463.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="61.3" y="741" width="0.2" height="15.0" fill="rgb(208,221,25)" rx="2" ry="2" />
<text  x="64.26" y="751.5" ></text>
</g>
<g >
<title>process_vm_rw (3 samples, 0.05%)</title><rect x="722.8" y="661" width="0.6" height="15.0" fill="rgb(212,180,26)" rx="2" ry="2" />
<text  x="725.80" y="671.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (3 samples, 0.05%)</title><rect x="395.1" y="645" width="0.6" height="15.0" fill="rgb(248,16,52)" rx="2" ry="2" />
<text  x="398.06" y="655.5" ></text>
</g>
<g >
<title>record__write (45 samples, 0.77%)</title><rect x="28.4" y="677" width="9.0" height="15.0" fill="rgb(212,124,9)" rx="2" ry="2" />
<text  x="31.36" y="687.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="893.5" y="677" width="0.2" height="15.0" fill="rgb(244,182,42)" rx="2" ry="2" />
<text  x="896.54" y="687.5" ></text>
</g>
<g >
<title>drm_atomic_plane_check (1 samples, 0.02%)</title><rect x="899.4" y="629" width="0.2" height="15.0" fill="rgb(225,102,33)" rx="2" ry="2" />
<text  x="902.39" y="639.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.02%)</title><rect x="10.8" y="533" width="0.2" height="15.0" fill="rgb(252,119,49)" rx="2" ry="2" />
<text  x="13.81" y="543.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.02%)</title><rect x="10.2" y="565" width="0.2" height="15.0" fill="rgb(227,95,49)" rx="2" ry="2" />
<text  x="13.20" y="575.5" ></text>
</g>
<g >
<title>NaClLog (10 samples, 0.17%)</title><rect x="651.6" y="725" width="2.0" height="15.0" fill="rgb(215,24,26)" rx="2" ry="2" />
<text  x="654.56" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.02%)</title><rect x="743.8" y="725" width="0.2" height="15.0" fill="rgb(237,147,12)" rx="2" ry="2" />
<text  x="746.79" y="735.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="944.8" y="533" width="0.4" height="15.0" fill="rgb(228,5,7)" rx="2" ry="2" />
<text  x="947.80" y="543.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.03%)</title><rect x="1166.8" y="629" width="0.4" height="15.0" fill="rgb(223,45,16)" rx="2" ry="2" />
<text  x="1169.79" y="639.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (1 samples, 0.02%)</title><rect x="504.0" y="597" width="0.2" height="15.0" fill="rgb(248,184,6)" rx="2" ry="2" />
<text  x="507.04" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="118.2" y="453" width="0.2" height="15.0" fill="rgb(209,109,25)" rx="2" ry="2" />
<text  x="121.17" y="463.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="990.4" y="549" width="0.2" height="15.0" fill="rgb(243,102,28)" rx="2" ry="2" />
<text  x="993.41" y="559.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.03%)</title><rect x="1168.2" y="453" width="0.4" height="15.0" fill="rgb(215,197,22)" rx="2" ry="2" />
<text  x="1171.20" y="463.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="38.5" y="725" width="0.2" height="15.0" fill="rgb(206,72,12)" rx="2" ry="2" />
<text  x="41.46" y="735.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="955.5" y="533" width="0.2" height="15.0" fill="rgb(231,212,45)" rx="2" ry="2" />
<text  x="958.49" y="543.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (1 samples, 0.02%)</title><rect x="729.7" y="757" width="0.2" height="15.0" fill="rgb(229,218,29)" rx="2" ry="2" />
<text  x="732.66" y="767.5" ></text>
</g>
<g >
<title>update_group_capacity (1 samples, 0.02%)</title><rect x="988.8" y="501" width="0.2" height="15.0" fill="rgb(220,167,5)" rx="2" ry="2" />
<text  x="991.79" y="511.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.02%)</title><rect x="744.2" y="773" width="0.2" height="15.0" fill="rgb(213,181,38)" rx="2" ry="2" />
<text  x="747.20" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (43 samples, 0.74%)</title><rect x="481.2" y="581" width="8.7" height="15.0" fill="rgb(235,12,4)" rx="2" ry="2" />
<text  x="484.23" y="591.5" ></text>
</g>
<g >
<title>page_counter_uncharge (1 samples, 0.02%)</title><rect x="942.2" y="517" width="0.2" height="15.0" fill="rgb(228,118,4)" rx="2" ry="2" />
<text  x="945.17" y="527.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="944.8" y="517" width="0.2" height="15.0" fill="rgb(240,24,35)" rx="2" ry="2" />
<text  x="947.80" y="527.5" ></text>
</g>
<g >
<title>clockevents_program_event (3 samples, 0.05%)</title><rect x="1166.6" y="645" width="0.6" height="15.0" fill="rgb(229,116,36)" rx="2" ry="2" />
<text  x="1169.59" y="655.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.02%)</title><rect x="28.0" y="613" width="0.2" height="15.0" fill="rgb(221,146,42)" rx="2" ry="2" />
<text  x="30.96" y="623.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="944.8" y="613" width="0.4" height="15.0" fill="rgb(220,103,34)" rx="2" ry="2" />
<text  x="947.80" y="623.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.02%)</title><rect x="1186.4" y="613" width="0.2" height="15.0" fill="rgb(209,212,18)" rx="2" ry="2" />
<text  x="1189.37" y="623.5" ></text>
</g>
<g >
<title>gup_pte_range (1 samples, 0.02%)</title><rect x="893.1" y="597" width="0.2" height="15.0" fill="rgb(242,78,37)" rx="2" ry="2" />
<text  x="896.13" y="607.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::_open (1 samples, 0.02%)</title><rect x="118.8" y="581" width="0.2" height="15.0" fill="rgb(228,124,17)" rx="2" ry="2" />
<text  x="121.78" y="591.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (13 samples, 0.22%)</title><rect x="53.8" y="725" width="2.6" height="15.0" fill="rgb(232,216,5)" rx="2" ry="2" />
<text  x="56.79" y="735.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2 samples, 0.03%)</title><rect x="117.8" y="709" width="0.4" height="15.0" fill="rgb(239,71,47)" rx="2" ry="2" />
<text  x="120.77" y="719.5" ></text>
</g>
<g >
<title>ext4_check_bdev_write_error (1 samples, 0.02%)</title><rect x="34.6" y="309" width="0.2" height="15.0" fill="rgb(233,123,7)" rx="2" ry="2" />
<text  x="37.62" y="319.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="942.2" y="613" width="0.2" height="15.0" fill="rgb(213,155,44)" rx="2" ry="2" />
<text  x="945.17" y="623.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (2 samples, 0.03%)</title><rect x="949.0" y="661" width="0.4" height="15.0" fill="rgb(226,39,16)" rx="2" ry="2" />
<text  x="952.04" y="671.5" ></text>
</g>
<g >
<title>drm_crtc_handle_vblank (19 samples, 0.32%)</title><rect x="960.1" y="501" width="3.9" height="15.0" fill="rgb(206,126,35)" rx="2" ry="2" />
<text  x="963.14" y="511.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="11.0" y="661" width="0.2" height="15.0" fill="rgb(233,170,28)" rx="2" ry="2" />
<text  x="14.01" y="671.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.02%)</title><rect x="756.5" y="693" width="0.2" height="15.0" fill="rgb(213,147,53)" rx="2" ry="2" />
<text  x="759.51" y="703.5" ></text>
</g>
<g >
<title>psi_task_change (4 samples, 0.07%)</title><rect x="936.9" y="629" width="0.8" height="15.0" fill="rgb(213,148,50)" rx="2" ry="2" />
<text  x="939.93" y="639.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="638.2" y="549" width="0.6" height="15.0" fill="rgb(218,144,44)" rx="2" ry="2" />
<text  x="641.24" y="559.5" ></text>
</g>
<g >
<title>quiet_vmstat (3 samples, 0.05%)</title><rect x="1156.9" y="677" width="0.6" height="15.0" fill="rgb(224,95,11)" rx="2" ry="2" />
<text  x="1159.90" y="687.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.02%)</title><rect x="757.1" y="773" width="0.2" height="15.0" fill="rgb(210,194,44)" rx="2" ry="2" />
<text  x="760.11" y="783.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.02%)</title><rect x="1189.2" y="645" width="0.2" height="15.0" fill="rgb(232,162,33)" rx="2" ry="2" />
<text  x="1192.19" y="655.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="118.8" y="229" width="0.2" height="15.0" fill="rgb(248,101,1)" rx="2" ry="2" />
<text  x="121.78" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (30 samples, 0.51%)</title><rect x="320.4" y="565" width="6.0" height="15.0" fill="rgb(242,139,47)" rx="2" ry="2" />
<text  x="323.39" y="575.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="756.5" y="613" width="0.2" height="15.0" fill="rgb(238,63,14)" rx="2" ry="2" />
<text  x="759.51" y="623.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="744.2" y="245" width="0.2" height="15.0" fill="rgb(215,37,21)" rx="2" ry="2" />
<text  x="747.20" y="255.5" ></text>
</g>
<g >
<title>do_sys_poll (9 samples, 0.15%)</title><rect x="928.5" y="741" width="1.8" height="15.0" fill="rgb(224,181,7)" rx="2" ry="2" />
<text  x="931.45" y="751.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (10 samples, 0.17%)</title><rect x="134.1" y="581" width="2.0" height="15.0" fill="rgb(222,164,6)" rx="2" ry="2" />
<text  x="137.11" y="591.5" ></text>
</g>
<g >
<title>shmem_fault (2 samples, 0.03%)</title><rect x="723.0" y="469" width="0.4" height="15.0" fill="rgb(233,19,14)" rx="2" ry="2" />
<text  x="726.00" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::PIPE_TABLE (1 samples, 0.02%)</title><rect x="757.1" y="789" width="0.2" height="15.0" fill="rgb(240,134,7)" rx="2" ry="2" />
<text  x="760.11" y="799.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.05%)</title><rect x="602.3" y="501" width="0.6" height="15.0" fill="rgb(241,56,19)" rx="2" ry="2" />
<text  x="605.32" y="511.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.02%)</title><rect x="975.9" y="469" width="0.2" height="15.0" fill="rgb(238,8,42)" rx="2" ry="2" />
<text  x="978.88" y="479.5" ></text>
</g>
<g >
<title>__get_vm_area_node (1 samples, 0.02%)</title><rect x="744.0" y="629" width="0.2" height="15.0" fill="rgb(208,133,3)" rx="2" ry="2" />
<text  x="746.99" y="639.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 0.03%)</title><rect x="933.9" y="677" width="0.4" height="15.0" fill="rgb(250,84,29)" rx="2" ry="2" />
<text  x="936.90" y="687.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.02%)</title><rect x="714.5" y="597" width="0.2" height="15.0" fill="rgb(220,215,25)" rx="2" ry="2" />
<text  x="717.53" y="607.5" ></text>
</g>
<g >
<title>amdgpu_fence_emit (1 samples, 0.02%)</title><rect x="946.4" y="709" width="0.2" height="15.0" fill="rgb(244,39,15)" rx="2" ry="2" />
<text  x="949.41" y="719.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (2 samples, 0.03%)</title><rect x="901.0" y="677" width="0.4" height="15.0" fill="rgb(210,19,36)" rx="2" ry="2" />
<text  x="904.00" y="687.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.03%)</title><rect x="638.8" y="581" width="0.5" height="15.0" fill="rgb(223,70,54)" rx="2" ry="2" />
<text  x="641.85" y="591.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.02%)</title><rect x="891.1" y="693" width="0.2" height="15.0" fill="rgb(212,199,15)" rx="2" ry="2" />
<text  x="894.12" y="703.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (17 samples, 0.29%)</title><rect x="326.6" y="565" width="3.5" height="15.0" fill="rgb(208,8,52)" rx="2" ry="2" />
<text  x="329.64" y="575.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="118.2" y="213" width="0.2" height="15.0" fill="rgb(244,25,34)" rx="2" ry="2" />
<text  x="121.17" y="223.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="940.8" y="693" width="0.2" height="15.0" fill="rgb(228,214,4)" rx="2" ry="2" />
<text  x="943.76" y="703.5" ></text>
</g>
<g >
<title>__udp4_lib_mcast_demux_lookup (1 samples, 0.02%)</title><rect x="972.2" y="389" width="0.2" height="15.0" fill="rgb(206,43,2)" rx="2" ry="2" />
<text  x="975.24" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt_r (1 samples, 0.02%)</title><rect x="118.8" y="533" width="0.2" height="15.0" fill="rgb(254,131,54)" rx="2" ry="2" />
<text  x="121.78" y="543.5" ></text>
</g>
<g >
<title>____sys_recvmsg (4 samples, 0.07%)</title><rect x="942.2" y="709" width="0.8" height="15.0" fill="rgb(214,175,22)" rx="2" ry="2" />
<text  x="945.17" y="719.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.02%)</title><rect x="942.0" y="741" width="0.2" height="15.0" fill="rgb(229,210,20)" rx="2" ry="2" />
<text  x="944.97" y="751.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.02%)</title><rect x="1189.2" y="597" width="0.2" height="15.0" fill="rgb(225,173,46)" rx="2" ry="2" />
<text  x="1192.19" y="607.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::VariantAccess&lt;R&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (1 samples, 0.02%)</title><rect x="744.2" y="373" width="0.2" height="15.0" fill="rgb(223,203,44)" rx="2" ry="2" />
<text  x="747.20" y="383.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (5 samples, 0.09%)</title><rect x="965.2" y="309" width="1.0" height="15.0" fill="rgb(222,203,3)" rx="2" ry="2" />
<text  x="968.18" y="319.5" ></text>
</g>
<g >
<title>d_path (1 samples, 0.02%)</title><rect x="744.6" y="549" width="0.2" height="15.0" fill="rgb(224,196,6)" rx="2" ry="2" />
<text  x="747.60" y="559.5" ></text>
</g>
<g >
<title>rcu_core (2 samples, 0.03%)</title><rect x="986.4" y="565" width="0.4" height="15.0" fill="rgb(214,94,14)" rx="2" ry="2" />
<text  x="989.37" y="575.5" ></text>
</g>
<g >
<title>amdgpu_ib_schedule (1 samples, 0.02%)</title><rect x="946.4" y="725" width="0.2" height="15.0" fill="rgb(205,114,29)" rx="2" ry="2" />
<text  x="949.41" y="735.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (33 samples, 0.56%)</title><rect x="933.3" y="693" width="6.7" height="15.0" fill="rgb(251,97,48)" rx="2" ry="2" />
<text  x="936.29" y="703.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.03%)</title><rect x="1168.2" y="469" width="0.4" height="15.0" fill="rgb(206,142,22)" rx="2" ry="2" />
<text  x="1171.20" y="479.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.02%)</title><rect x="946.0" y="725" width="0.2" height="15.0" fill="rgb(222,162,10)" rx="2" ry="2" />
<text  x="949.01" y="735.5" ></text>
</g>
<g >
<title>napi_poll (14 samples, 0.24%)</title><rect x="970.0" y="565" width="2.8" height="15.0" fill="rgb(251,143,36)" rx="2" ry="2" />
<text  x="973.02" y="575.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (584 samples, 9.99%)</title><rect x="187.6" y="613" width="117.9" height="15.0" fill="rgb(252,68,2)" rx="2" ry="2" />
<text  x="190.60" y="623.5" >ringbuf::consu..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (198 samples, 3.39%)</title><rect x="348.6" y="533" width="40.0" height="15.0" fill="rgb(205,201,28)" rx="2" ry="2" />
<text  x="351.64" y="543.5" >__m..</text>
</g>
<g >
<title>__schedule (20 samples, 0.34%)</title><rect x="934.7" y="661" width="4.0" height="15.0" fill="rgb(217,225,26)" rx="2" ry="2" />
<text  x="937.71" y="671.5" ></text>
</g>
<g >
<title>mblen (1 samples, 0.02%)</title><rect x="10.6" y="725" width="0.2" height="15.0" fill="rgb(235,200,36)" rx="2" ry="2" />
<text  x="13.61" y="735.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (8 samples, 0.14%)</title><rect x="950.9" y="533" width="1.6" height="15.0" fill="rgb(226,198,41)" rx="2" ry="2" />
<text  x="953.85" y="543.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="990.4" y="533" width="0.2" height="15.0" fill="rgb(228,153,7)" rx="2" ry="2" />
<text  x="993.41" y="543.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (24 samples, 0.41%)</title><rect x="986.2" y="613" width="4.8" height="15.0" fill="rgb(216,206,41)" rx="2" ry="2" />
<text  x="989.17" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (175 samples, 2.99%)</title><rect x="504.2" y="565" width="35.4" height="15.0" fill="rgb(238,85,31)" rx="2" ry="2" />
<text  x="507.24" y="575.5" >st..</text>
</g>
<g >
<title>load_balance (7 samples, 0.12%)</title><rect x="987.6" y="549" width="1.4" height="15.0" fill="rgb(213,158,48)" rx="2" ry="2" />
<text  x="990.58" y="559.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (1 samples, 0.02%)</title><rect x="933.7" y="677" width="0.2" height="15.0" fill="rgb(227,188,54)" rx="2" ry="2" />
<text  x="936.70" y="687.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="118.2" y="613" width="0.2" height="15.0" fill="rgb(242,4,34)" rx="2" ry="2" />
<text  x="121.17" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="118.8" y="485" width="0.2" height="15.0" fill="rgb(234,57,32)" rx="2" ry="2" />
<text  x="121.78" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (92 samples, 1.57%)</title><rect x="454.4" y="629" width="18.6" height="15.0" fill="rgb(247,46,21)" rx="2" ry="2" />
<text  x="457.39" y="639.5" ></text>
</g>
<g >
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="901.0" y="661" width="0.4" height="15.0" fill="rgb(242,101,47)" rx="2" ry="2" />
<text  x="904.00" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.09%)</title><rect x="37.4" y="789" width="1.1" height="15.0" fill="rgb(222,177,34)" rx="2" ry="2" />
<text  x="40.45" y="799.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (1 samples, 0.02%)</title><rect x="744.2" y="405" width="0.2" height="15.0" fill="rgb(233,176,24)" rx="2" ry="2" />
<text  x="747.20" y="415.5" ></text>
</g>
<g >
<title>amdgpu_get_vblank_counter_kms (6 samples, 0.10%)</title><rect x="964.0" y="501" width="1.2" height="15.0" fill="rgb(242,200,14)" rx="2" ry="2" />
<text  x="966.97" y="511.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (7 samples, 0.12%)</title><rect x="960.3" y="405" width="1.4" height="15.0" fill="rgb(209,129,48)" rx="2" ry="2" />
<text  x="963.34" y="415.5" ></text>
</g>
<g >
<title>ahci_single_level_irq_intr (1 samples, 0.02%)</title><rect x="959.1" y="581" width="0.2" height="15.0" fill="rgb(243,124,14)" rx="2" ry="2" />
<text  x="962.13" y="591.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.02%)</title><rect x="1148.6" y="677" width="0.2" height="15.0" fill="rgb(209,131,11)" rx="2" ry="2" />
<text  x="1151.63" y="687.5" ></text>
</g>
<g >
<title>get_page_from_freelist (48 samples, 0.82%)</title><rect x="702.0" y="629" width="9.7" height="15.0" fill="rgb(218,221,36)" rx="2" ry="2" />
<text  x="705.02" y="639.5" ></text>
</g>
<g >
<title>calc_load_nohz_start (1 samples, 0.02%)</title><rect x="1187.0" y="629" width="0.2" height="15.0" fill="rgb(219,93,6)" rx="2" ry="2" />
<text  x="1189.97" y="639.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="119.4" y="117" width="0.2" height="15.0" fill="rgb(211,75,31)" rx="2" ry="2" />
<text  x="122.38" y="127.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.02%)</title><rect x="887.5" y="789" width="0.2" height="15.0" fill="rgb(214,29,1)" rx="2" ry="2" />
<text  x="890.48" y="799.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="105.9" y="709" width="0.2" height="15.0" fill="rgb(245,2,19)" rx="2" ry="2" />
<text  x="108.86" y="719.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.17%)</title><rect x="636.0" y="533" width="2.0" height="15.0" fill="rgb(215,60,40)" rx="2" ry="2" />
<text  x="639.02" y="543.5" ></text>
</g>
<g >
<title>[unknown] (130 samples, 2.22%)</title><rect x="11.2" y="789" width="26.2" height="15.0" fill="rgb(251,98,24)" rx="2" ry="2" />
<text  x="14.21" y="799.5" >[..</text>
</g>
<g >
<title>nf_conntrack_in (1 samples, 0.02%)</title><rect x="972.4" y="389" width="0.2" height="15.0" fill="rgb(211,129,42)" rx="2" ry="2" />
<text  x="975.45" y="399.5" ></text>
</g>
<g >
<title>amdgpu_cs_submit (9 samples, 0.15%)</title><rect x="896.6" y="677" width="1.8" height="15.0" fill="rgb(234,98,3)" rx="2" ry="2" />
<text  x="899.56" y="687.5" ></text>
</g>
<g >
<title>amdgpu_ctx_add_fence (1 samples, 0.02%)</title><rect x="896.6" y="661" width="0.2" height="15.0" fill="rgb(218,87,6)" rx="2" ry="2" />
<text  x="899.56" y="671.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="890.7" y="677" width="0.2" height="15.0" fill="rgb(233,214,47)" rx="2" ry="2" />
<text  x="893.71" y="687.5" ></text>
</g>
<g >
<title>DynArrayGet (1 samples, 0.02%)</title><rect x="397.5" y="741" width="0.2" height="15.0" fill="rgb(225,189,32)" rx="2" ry="2" />
<text  x="400.48" y="751.5" ></text>
</g>
<g >
<title>amdgpu_ih_process (1 samples, 0.02%)</title><rect x="899.2" y="501" width="0.2" height="15.0" fill="rgb(238,181,5)" rx="2" ry="2" />
<text  x="902.19" y="511.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 1.09%)</title><rect x="14.2" y="437" width="13.0" height="15.0" fill="rgb(229,37,11)" rx="2" ry="2" />
<text  x="17.24" y="447.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="28.0" y="501" width="0.2" height="15.0" fill="rgb(207,154,8)" rx="2" ry="2" />
<text  x="30.96" y="511.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="950.6" y="565" width="0.3" height="15.0" fill="rgb(243,46,31)" rx="2" ry="2" />
<text  x="953.65" y="575.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (12 samples, 0.21%)</title><rect x="136.1" y="613" width="2.5" height="15.0" fill="rgb(254,92,28)" rx="2" ry="2" />
<text  x="139.13" y="623.5" ></text>
</g>
<g >
<title>snd_pcm_update_hw_ptr (44 samples, 0.75%)</title><rect x="919.4" y="677" width="8.8" height="15.0" fill="rgb(210,5,41)" rx="2" ry="2" />
<text  x="922.37" y="687.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.02%)</title><rect x="62.7" y="757" width="0.2" height="15.0" fill="rgb(230,72,45)" rx="2" ry="2" />
<text  x="65.67" y="767.5" ></text>
</g>
<g >
<title>dequeue_task (2 samples, 0.03%)</title><rect x="891.3" y="645" width="0.4" height="15.0" fill="rgb(217,0,51)" rx="2" ry="2" />
<text  x="894.32" y="655.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (39 samples, 0.67%)</title><rect x="473.0" y="629" width="7.8" height="15.0" fill="rgb(229,44,6)" rx="2" ry="2" />
<text  x="475.96" y="639.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 0.03%)</title><rect x="944.8" y="549" width="0.4" height="15.0" fill="rgb(205,49,50)" rx="2" ry="2" />
<text  x="947.80" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.77%)</title><rect x="28.4" y="629" width="9.0" height="15.0" fill="rgb(224,141,47)" rx="2" ry="2" />
<text  x="31.36" y="639.5" ></text>
</g>
<g >
<title>new_sync_write (5 samples, 0.09%)</title><rect x="37.4" y="709" width="1.1" height="15.0" fill="rgb(212,113,39)" rx="2" ry="2" />
<text  x="40.45" y="719.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="890.7" y="629" width="0.2" height="15.0" fill="rgb(225,40,0)" rx="2" ry="2" />
<text  x="893.71" y="639.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.19%)</title><rect x="430.8" y="661" width="2.2" height="15.0" fill="rgb(236,63,46)" rx="2" ry="2" />
<text  x="433.78" y="671.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="119.8" y="261" width="0.2" height="15.0" fill="rgb(236,180,13)" rx="2" ry="2" />
<text  x="122.79" y="271.5" ></text>
</g>
<g >
<title>memset (1 samples, 0.02%)</title><rect x="10.8" y="485" width="0.2" height="15.0" fill="rgb(235,80,3)" rx="2" ry="2" />
<text  x="13.81" y="495.5" ></text>
</g>
<g >
<title>drm_sched_fence_release_scheduled (1 samples, 0.02%)</title><rect x="896.6" y="597" width="0.2" height="15.0" fill="rgb(250,207,27)" rx="2" ry="2" />
<text  x="899.56" y="607.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (3 samples, 0.05%)</title><rect x="723.8" y="725" width="0.6" height="15.0" fill="rgb(210,61,51)" rx="2" ry="2" />
<text  x="726.81" y="735.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.03%)</title><rect x="599.3" y="501" width="0.4" height="15.0" fill="rgb(213,6,33)" rx="2" ry="2" />
<text  x="602.29" y="511.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (6 samples, 0.10%)</title><rect x="960.3" y="357" width="1.2" height="15.0" fill="rgb(230,112,43)" rx="2" ry="2" />
<text  x="963.34" y="367.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.02%)</title><rect x="61.3" y="773" width="0.2" height="15.0" fill="rgb(241,152,0)" rx="2" ry="2" />
<text  x="64.26" y="783.5" ></text>
</g>
<g >
<title>insert_module (1 samples, 0.02%)</title><rect x="10.6" y="629" width="0.2" height="15.0" fill="rgb(206,216,21)" rx="2" ry="2" />
<text  x="13.61" y="639.5" ></text>
</g>
<g >
<title>dl_main (2 samples, 0.03%)</title><rect x="744.4" y="741" width="0.4" height="15.0" fill="rgb(226,165,34)" rx="2" ry="2" />
<text  x="747.40" y="751.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.02%)</title><rect x="118.6" y="613" width="0.2" height="15.0" fill="rgb(207,102,16)" rx="2" ry="2" />
<text  x="121.58" y="623.5" ></text>
</g>
<g >
<title>process_vm_writev (3 samples, 0.05%)</title><rect x="722.8" y="741" width="0.6" height="15.0" fill="rgb(227,200,3)" rx="2" ry="2" />
<text  x="725.80" y="751.5" ></text>
</g>
<g >
<title>NaClAppThreadSpawn (1 samples, 0.02%)</title><rect x="120.0" y="709" width="0.2" height="15.0" fill="rgb(205,132,22)" rx="2" ry="2" />
<text  x="122.99" y="719.5" ></text>
</g>
<g >
<title>cpuidle_enter (91 samples, 1.56%)</title><rect x="1168.0" y="645" width="18.4" height="15.0" fill="rgb(215,203,51)" rx="2" ry="2" />
<text  x="1171.00" y="655.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="947.6" y="677" width="0.2" height="15.0" fill="rgb(213,193,10)" rx="2" ry="2" />
<text  x="950.62" y="687.5" ></text>
</g>
<g >
<title>NaClHostDescClose (1 samples, 0.02%)</title><rect x="118.2" y="645" width="0.2" height="15.0" fill="rgb(249,159,1)" rx="2" ry="2" />
<text  x="121.17" y="655.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (10 samples, 0.17%)</title><rect x="33.6" y="357" width="2.0" height="15.0" fill="rgb(252,45,22)" rx="2" ry="2" />
<text  x="36.61" y="367.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (24 samples, 0.41%)</title><rect x="986.2" y="629" width="4.8" height="15.0" fill="rgb(250,180,31)" rx="2" ry="2" />
<text  x="989.17" y="639.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="110.3" y="421" width="0.2" height="15.0" fill="rgb(223,85,49)" rx="2" ry="2" />
<text  x="113.30" y="431.5" ></text>
</g>
<g >
<title>xas_store (1 samples, 0.02%)</title><rect x="31.6" y="341" width="0.2" height="15.0" fill="rgb(227,138,5)" rx="2" ry="2" />
<text  x="34.59" y="351.5" ></text>
</g>
<g >
<title>ip6_sublist_rcv (1 samples, 0.02%)</title><rect x="972.6" y="453" width="0.2" height="15.0" fill="rgb(223,151,5)" rx="2" ry="2" />
<text  x="975.65" y="463.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_enum (1 samples, 0.02%)</title><rect x="744.2" y="421" width="0.2" height="15.0" fill="rgb(215,117,5)" rx="2" ry="2" />
<text  x="747.20" y="431.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.05%)</title><rect x="605.8" y="453" width="0.6" height="15.0" fill="rgb(230,48,54)" rx="2" ry="2" />
<text  x="608.75" y="463.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="969.0" y="373" width="0.2" height="15.0" fill="rgb(242,163,45)" rx="2" ry="2" />
<text  x="972.01" y="383.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="969.4" y="373" width="0.2" height="15.0" fill="rgb(243,86,47)" rx="2" ry="2" />
<text  x="972.42" y="383.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.03%)</title><rect x="1188.2" y="629" width="0.4" height="15.0" fill="rgb(225,154,20)" rx="2" ry="2" />
<text  x="1191.18" y="639.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.02%)</title><rect x="1148.4" y="677" width="0.2" height="15.0" fill="rgb(205,127,11)" rx="2" ry="2" />
<text  x="1151.43" y="687.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="990.4" y="517" width="0.2" height="15.0" fill="rgb(228,67,11)" rx="2" ry="2" />
<text  x="993.41" y="527.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (3 samples, 0.05%)</title><rect x="959.3" y="581" width="0.6" height="15.0" fill="rgb(247,139,10)" rx="2" ry="2" />
<text  x="962.33" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.19%)</title><rect x="606.6" y="565" width="2.2" height="15.0" fill="rgb(211,101,35)" rx="2" ry="2" />
<text  x="609.56" y="575.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (24 samples, 0.41%)</title><rect x="986.2" y="597" width="4.8" height="15.0" fill="rgb(210,157,23)" rx="2" ry="2" />
<text  x="989.17" y="607.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.02%)</title><rect x="120.6" y="501" width="0.2" height="15.0" fill="rgb(208,71,39)" rx="2" ry="2" />
<text  x="123.59" y="511.5" ></text>
</g>
<g >
<title>_nc_read_entry2 (1 samples, 0.02%)</title><rect x="10.4" y="581" width="0.2" height="15.0" fill="rgb(230,187,16)" rx="2" ry="2" />
<text  x="13.40" y="591.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="723.0" y="405" width="0.2" height="15.0" fill="rgb(209,110,45)" rx="2" ry="2" />
<text  x="726.00" y="415.5" ></text>
</g>
<g >
<title>do_idle (1,045 samples, 17.87%)</title><rect x="956.3" y="741" width="210.9" height="15.0" fill="rgb(238,55,1)" rx="2" ry="2" />
<text  x="959.30" y="751.5" >do_idle</text>
</g>
<g >
<title>__ext4_journal_stop (1 samples, 0.02%)</title><rect x="33.0" y="405" width="0.2" height="15.0" fill="rgb(238,47,33)" rx="2" ry="2" />
<text  x="36.01" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.02%)</title><rect x="62.7" y="725" width="0.2" height="15.0" fill="rgb(239,36,12)" rx="2" ry="2" />
<text  x="65.67" y="735.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (3 samples, 0.05%)</title><rect x="609.4" y="549" width="0.6" height="15.0" fill="rgb(243,201,51)" rx="2" ry="2" />
<text  x="612.38" y="559.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (15 samples, 0.26%)</title><rect x="603.5" y="565" width="3.1" height="15.0" fill="rgb(206,174,28)" rx="2" ry="2" />
<text  x="606.53" y="575.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.03%)</title><rect x="891.7" y="645" width="0.4" height="15.0" fill="rgb(224,126,43)" rx="2" ry="2" />
<text  x="894.72" y="655.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (18 samples, 0.31%)</title><rect x="594.5" y="597" width="3.6" height="15.0" fill="rgb(221,16,11)" rx="2" ry="2" />
<text  x="597.45" y="607.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.02%)</title><rect x="118.8" y="213" width="0.2" height="15.0" fill="rgb(237,194,18)" rx="2" ry="2" />
<text  x="121.78" y="223.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="110.3" y="405" width="0.2" height="15.0" fill="rgb(231,214,13)" rx="2" ry="2" />
<text  x="113.30" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="132.7" y="597" width="0.2" height="15.0" fill="rgb(236,94,21)" rx="2" ry="2" />
<text  x="135.70" y="607.5" ></text>
</g>
<g >
<title>__kmalloc_node (4 samples, 0.07%)</title><rect x="953.1" y="645" width="0.8" height="15.0" fill="rgb(207,167,36)" rx="2" ry="2" />
<text  x="956.07" y="655.5" ></text>
</g>
<g >
<title>poll_freewait (1 samples, 0.02%)</title><rect x="940.8" y="725" width="0.2" height="15.0" fill="rgb(246,211,49)" rx="2" ry="2" />
<text  x="943.76" y="735.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (14 samples, 0.24%)</title><rect x="970.0" y="613" width="2.8" height="15.0" fill="rgb(244,192,14)" rx="2" ry="2" />
<text  x="973.02" y="623.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="138.4" y="469" width="0.2" height="15.0" fill="rgb(222,93,23)" rx="2" ry="2" />
<text  x="141.35" y="479.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="969.0" y="437" width="0.2" height="15.0" fill="rgb(227,42,11)" rx="2" ry="2" />
<text  x="972.01" y="447.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.67%)</title><rect x="473.0" y="613" width="7.8" height="15.0" fill="rgb(238,189,7)" rx="2" ry="2" />
<text  x="475.96" y="623.5" ></text>
</g>
<g >
<title>unlock_page_memcg (1 samples, 0.02%)</title><rect x="756.3" y="581" width="0.2" height="15.0" fill="rgb(219,195,42)" rx="2" ry="2" />
<text  x="759.30" y="591.5" ></text>
</g>
<g >
<title>perf_event_task_tick (10 samples, 0.17%)</title><rect x="981.1" y="501" width="2.0" height="15.0" fill="rgb(228,121,48)" rx="2" ry="2" />
<text  x="984.12" y="511.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (12 samples, 0.21%)</title><rect x="136.1" y="597" width="2.5" height="15.0" fill="rgb(253,207,49)" rx="2" ry="2" />
<text  x="139.13" y="607.5" ></text>
</g>
<g >
<title>hrtimer_init_sleeper (1 samples, 0.02%)</title><rect x="933.5" y="677" width="0.2" height="15.0" fill="rgb(205,15,44)" rx="2" ry="2" />
<text  x="936.50" y="687.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3 samples, 0.05%)</title><rect x="109.9" y="597" width="0.6" height="15.0" fill="rgb(213,222,53)" rx="2" ry="2" />
<text  x="112.90" y="607.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="119.2" y="197" width="0.2" height="15.0" fill="rgb(225,59,17)" rx="2" ry="2" />
<text  x="122.18" y="207.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (6 samples, 0.10%)</title><rect x="711.7" y="661" width="1.2" height="15.0" fill="rgb(236,39,6)" rx="2" ry="2" />
<text  x="714.70" y="671.5" ></text>
</g>
<g >
<title>cr4_update_irqsoff (1 samples, 0.02%)</title><rect x="1159.3" y="693" width="0.2" height="15.0" fill="rgb(254,85,18)" rx="2" ry="2" />
<text  x="1162.32" y="703.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (9 samples, 0.15%)</title><rect x="559.1" y="581" width="1.8" height="15.0" fill="rgb(252,188,24)" rx="2" ry="2" />
<text  x="562.13" y="591.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (91 samples, 1.56%)</title><rect x="540.0" y="597" width="18.3" height="15.0" fill="rgb(222,4,41)" rx="2" ry="2" />
<text  x="542.96" y="607.5" ></text>
</g>
<g >
<title>schedule_timeout (5 samples, 0.09%)</title><rect x="947.0" y="725" width="1.0" height="15.0" fill="rgb(235,144,15)" rx="2" ry="2" />
<text  x="950.02" y="735.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.03%)</title><rect x="940.4" y="725" width="0.4" height="15.0" fill="rgb(219,99,36)" rx="2" ry="2" />
<text  x="943.36" y="735.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.02%)</title><rect x="901.4" y="693" width="0.2" height="15.0" fill="rgb(219,67,12)" rx="2" ry="2" />
<text  x="904.41" y="703.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (8 samples, 0.14%)</title><rect x="739.1" y="773" width="1.7" height="15.0" fill="rgb(229,8,1)" rx="2" ry="2" />
<text  x="742.15" y="783.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="756.5" y="597" width="0.2" height="15.0" fill="rgb(226,37,48)" rx="2" ry="2" />
<text  x="759.51" y="607.5" ></text>
</g>
<g >
<title>drain_stock (1 samples, 0.02%)</title><rect x="942.2" y="533" width="0.2" height="15.0" fill="rgb(218,171,25)" rx="2" ry="2" />
<text  x="945.17" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="11.0" y="789" width="0.2" height="15.0" fill="rgb(225,77,4)" rx="2" ry="2" />
<text  x="14.01" y="799.5" ></text>
</g>
<g >
<title>amdgpu_vram_mgr_usage (1 samples, 0.02%)</title><rect x="896.0" y="661" width="0.2" height="15.0" fill="rgb(246,28,38)" rx="2" ry="2" />
<text  x="898.96" y="671.5" ></text>
</g>
<g >
<title>__enqueue_rt_entity (2 samples, 0.03%)</title><rect x="976.1" y="469" width="0.4" height="15.0" fill="rgb(242,131,20)" rx="2" ry="2" />
<text  x="979.08" y="479.5" ></text>
</g>
<g >
<title>do_user_addr_fault (108 samples, 1.85%)</title><rect x="696.4" y="741" width="21.8" height="15.0" fill="rgb(237,0,49)" rx="2" ry="2" />
<text  x="699.37" y="751.5" >d..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="744.6" y="677" width="0.2" height="15.0" fill="rgb(206,22,5)" rx="2" ry="2" />
<text  x="747.60" y="687.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (1,161 samples, 19.86%)</title><rect x="416.7" y="725" width="234.3" height="15.0" fill="rgb(248,83,36)" rx="2" ry="2" />
<text  x="419.65" y="735.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.02%)</title><rect x="891.5" y="613" width="0.2" height="15.0" fill="rgb(221,22,45)" rx="2" ry="2" />
<text  x="894.52" y="623.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.02%)</title><rect x="938.5" y="645" width="0.2" height="15.0" fill="rgb(217,158,37)" rx="2" ry="2" />
<text  x="941.54" y="655.5" ></text>
</g>
<g >
<title>kthread (50 samples, 0.86%)</title><rect x="946.2" y="773" width="10.1" height="15.0" fill="rgb(254,33,37)" rx="2" ry="2" />
<text  x="949.21" y="783.5" ></text>
</g>
<g >
<title>dm_vblank_get_counter (5 samples, 0.09%)</title><rect x="962.0" y="421" width="1.0" height="15.0" fill="rgb(248,198,51)" rx="2" ry="2" />
<text  x="964.95" y="431.5" ></text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="961.5" y="357" width="0.2" height="15.0" fill="rgb(223,196,23)" rx="2" ry="2" />
<text  x="964.55" y="367.5" ></text>
</g>
<g >
<title>wake_up_q (2 samples, 0.03%)</title><rect x="893.3" y="709" width="0.4" height="15.0" fill="rgb(254,31,44)" rx="2" ry="2" />
<text  x="896.34" y="719.5" ></text>
</g>
<g >
<title>amdgpu_sync_fence.part.0 (1 samples, 0.02%)</title><rect x="898.6" y="629" width="0.2" height="15.0" fill="rgb(224,63,33)" rx="2" ry="2" />
<text  x="901.58" y="639.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="893.3" y="629" width="0.2" height="15.0" fill="rgb(250,215,3)" rx="2" ry="2" />
<text  x="896.34" y="639.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.02%)</title><rect x="1159.1" y="693" width="0.2" height="15.0" fill="rgb(241,8,11)" rx="2" ry="2" />
<text  x="1162.12" y="703.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (4 samples, 0.07%)</title><rect x="944.4" y="645" width="0.8" height="15.0" fill="rgb(242,104,1)" rx="2" ry="2" />
<text  x="947.39" y="655.5" ></text>
</g>
<g >
<title>menu_select (2 samples, 0.03%)</title><rect x="1186.4" y="629" width="0.4" height="15.0" fill="rgb(249,118,32)" rx="2" ry="2" />
<text  x="1189.37" y="639.5" ></text>
</g>
<g >
<title>update_plane_addr (8 samples, 0.14%)</title><rect x="950.9" y="629" width="1.6" height="15.0" fill="rgb(220,37,15)" rx="2" ry="2" />
<text  x="953.85" y="639.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="899.2" y="533" width="0.2" height="15.0" fill="rgb(223,109,28)" rx="2" ry="2" />
<text  x="902.19" y="543.5" ></text>
</g>
<g >
<title>HandleStackContext (3 samples, 0.05%)</title><rect x="64.5" y="773" width="0.6" height="15.0" fill="rgb(241,206,49)" rx="2" ry="2" />
<text  x="67.49" y="783.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (2 samples, 0.03%)</title><rect x="1165.8" y="677" width="0.4" height="15.0" fill="rgb(225,27,40)" rx="2" ry="2" />
<text  x="1168.78" y="687.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="969.0" y="309" width="0.2" height="15.0" fill="rgb(210,62,22)" rx="2" ry="2" />
<text  x="972.01" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (6 samples, 0.10%)</title><rect x="1156.3" y="693" width="1.2" height="15.0" fill="rgb(226,138,35)" rx="2" ry="2" />
<text  x="1159.30" y="703.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7 samples, 0.12%)</title><rect x="1168.0" y="597" width="1.4" height="15.0" fill="rgb(233,219,9)" rx="2" ry="2" />
<text  x="1171.00" y="607.5" ></text>
</g>
<g >
<title>NaClMutexLock (1 samples, 0.02%)</title><rect x="723.6" y="773" width="0.2" height="15.0" fill="rgb(218,115,54)" rx="2" ry="2" />
<text  x="726.61" y="783.5" ></text>
</g>
<g >
<title>psi_task_change (7 samples, 0.12%)</title><rect x="977.1" y="485" width="1.4" height="15.0" fill="rgb(223,127,41)" rx="2" ry="2" />
<text  x="980.09" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (1 samples, 0.02%)</title><rect x="119.8" y="501" width="0.2" height="15.0" fill="rgb(251,97,31)" rx="2" ry="2" />
<text  x="122.79" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.07%)</title><rect x="31.8" y="357" width="0.8" height="15.0" fill="rgb(243,83,45)" rx="2" ry="2" />
<text  x="34.80" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.09%)</title><rect x="598.9" y="517" width="1.0" height="15.0" fill="rgb(212,133,31)" rx="2" ry="2" />
<text  x="601.89" y="527.5" ></text>
</g>
<g >
<title>update_blocked_averages (9 samples, 0.15%)</title><rect x="989.0" y="565" width="1.8" height="15.0" fill="rgb(231,1,53)" rx="2" ry="2" />
<text  x="991.99" y="575.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (3 samples, 0.05%)</title><rect x="84.1" y="757" width="0.6" height="15.0" fill="rgb(212,28,25)" rx="2" ry="2" />
<text  x="87.07" y="767.5" ></text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="949.2" y="597" width="0.2" height="15.0" fill="rgb(242,35,39)" rx="2" ry="2" />
<text  x="952.24" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (4 samples, 0.07%)</title><rect x="119.0" y="565" width="0.8" height="15.0" fill="rgb(221,147,51)" rx="2" ry="2" />
<text  x="121.98" y="575.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="938.3" y="645" width="0.2" height="15.0" fill="rgb(247,226,20)" rx="2" ry="2" />
<text  x="941.34" y="655.5" ></text>
</g>
<g >
<title>NaClCreateThread (1 samples, 0.02%)</title><rect x="120.0" y="725" width="0.2" height="15.0" fill="rgb(239,133,15)" rx="2" ry="2" />
<text  x="122.99" y="735.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2 samples, 0.03%)</title><rect x="756.7" y="757" width="0.4" height="15.0" fill="rgb(254,71,16)" rx="2" ry="2" />
<text  x="759.71" y="767.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (1 samples, 0.02%)</title><rect x="119.8" y="549" width="0.2" height="15.0" fill="rgb(222,143,8)" rx="2" ry="2" />
<text  x="122.79" y="559.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (13 samples, 0.22%)</title><rect x="53.8" y="709" width="2.6" height="15.0" fill="rgb(212,23,4)" rx="2" ry="2" />
<text  x="56.79" y="719.5" ></text>
</g>
<g >
<title>cmd_record (130 samples, 2.22%)</title><rect x="11.2" y="773" width="26.2" height="15.0" fill="rgb(226,100,27)" rx="2" ry="2" />
<text  x="14.21" y="783.5" >c..</text>
</g>
<g >
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="944.8" y="629" width="0.4" height="15.0" fill="rgb(210,187,42)" rx="2" ry="2" />
<text  x="947.80" y="639.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.03%)</title><rect x="714.9" y="597" width="0.4" height="15.0" fill="rgb(235,32,43)" rx="2" ry="2" />
<text  x="717.93" y="607.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.02%)</title><rect x="27.6" y="613" width="0.2" height="15.0" fill="rgb(250,137,27)" rx="2" ry="2" />
<text  x="30.56" y="623.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (27 samples, 0.46%)</title><rect x="399.3" y="709" width="5.4" height="15.0" fill="rgb(209,15,17)" rx="2" ry="2" />
<text  x="402.30" y="719.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (1 samples, 0.02%)</title><rect x="38.5" y="757" width="0.2" height="15.0" fill="rgb(227,163,20)" rx="2" ry="2" />
<text  x="41.46" y="767.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (9 samples, 0.15%)</title><rect x="981.1" y="485" width="1.8" height="15.0" fill="rgb(228,47,13)" rx="2" ry="2" />
<text  x="984.12" y="495.5" ></text>
</g>
<g >
<title>NaClSysFork (2 samples, 0.03%)</title><rect x="119.8" y="741" width="0.4" height="15.0" fill="rgb(222,121,8)" rx="2" ry="2" />
<text  x="122.79" y="751.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="49.8" y="773" width="0.2" height="15.0" fill="rgb(246,87,20)" rx="2" ry="2" />
<text  x="52.76" y="783.5" ></text>
</g>
<g >
<title>__secure_computing (2 samples, 0.03%)</title><rect x="945.6" y="725" width="0.4" height="15.0" fill="rgb(220,30,51)" rx="2" ry="2" />
<text  x="948.60" y="735.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="946.0" y="757" width="0.2" height="15.0" fill="rgb(223,59,48)" rx="2" ry="2" />
<text  x="949.01" y="767.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (1 samples, 0.02%)</title><rect x="118.2" y="581" width="0.2" height="15.0" fill="rgb(206,166,17)" rx="2" ry="2" />
<text  x="121.17" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.02%)</title><rect x="594.2" y="549" width="0.3" height="15.0" fill="rgb(238,175,19)" rx="2" ry="2" />
<text  x="597.25" y="559.5" ></text>
</g>
<g >
<title>enter_lazy_tlb (1 samples, 0.02%)</title><rect x="939.1" y="661" width="0.2" height="15.0" fill="rgb(212,113,1)" rx="2" ry="2" />
<text  x="942.15" y="671.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.05%)</title><rect x="325.8" y="501" width="0.6" height="15.0" fill="rgb(223,0,37)" rx="2" ry="2" />
<text  x="328.84" y="511.5" ></text>
</g>
<g >
<title>dm_read_reg_func (3 samples, 0.05%)</title><rect x="963.2" y="325" width="0.6" height="15.0" fill="rgb(241,50,43)" rx="2" ry="2" />
<text  x="966.16" y="335.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.02%)</title><rect x="118.6" y="373" width="0.2" height="15.0" fill="rgb(239,47,0)" rx="2" ry="2" />
<text  x="121.58" y="383.5" ></text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.02%)</title><rect x="27.8" y="629" width="0.2" height="15.0" fill="rgb(251,138,11)" rx="2" ry="2" />
<text  x="30.76" y="639.5" ></text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.02%)</title><rect x="891.5" y="581" width="0.2" height="15.0" fill="rgb(219,108,30)" rx="2" ry="2" />
<text  x="894.52" y="591.5" ></text>
</g>
<g >
<title>__mprotect (1 samples, 0.02%)</title><rect x="744.6" y="693" width="0.2" height="15.0" fill="rgb(240,223,5)" rx="2" ry="2" />
<text  x="747.60" y="703.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="608.2" y="501" width="0.2" height="15.0" fill="rgb(220,42,50)" rx="2" ry="2" />
<text  x="611.17" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c (1 samples, 0.02%)</title><rect x="118.8" y="549" width="0.2" height="15.0" fill="rgb(230,189,2)" rx="2" ry="2" />
<text  x="121.78" y="559.5" ></text>
</g>
<g >
<title>dequeue_rt_stack (1 samples, 0.02%)</title><rect x="976.9" y="469" width="0.2" height="15.0" fill="rgb(228,135,16)" rx="2" ry="2" />
<text  x="979.89" y="479.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.02%)</title><rect x="723.4" y="629" width="0.2" height="15.0" fill="rgb(229,163,14)" rx="2" ry="2" />
<text  x="726.41" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (20 samples, 0.34%)</title><rect x="473.0" y="549" width="4.0" height="15.0" fill="rgb(250,62,29)" rx="2" ry="2" />
<text  x="475.96" y="559.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="890.7" y="645" width="0.2" height="15.0" fill="rgb(221,94,28)" rx="2" ry="2" />
<text  x="893.71" y="655.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.02%)</title><rect x="744.4" y="693" width="0.2" height="15.0" fill="rgb(239,66,14)" rx="2" ry="2" />
<text  x="747.40" y="703.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.02%)</title><rect x="118.6" y="421" width="0.2" height="15.0" fill="rgb(220,125,21)" rx="2" ry="2" />
<text  x="121.58" y="431.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="119.4" y="245" width="0.2" height="15.0" fill="rgb(214,222,28)" rx="2" ry="2" />
<text  x="122.38" y="255.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (1,365 samples, 23.35%)</title><rect x="120.2" y="757" width="275.5" height="15.0" fill="rgb(235,170,6)" rx="2" ry="2" />
<text  x="123.19" y="767.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="33.0" y="357" width="0.2" height="15.0" fill="rgb(225,181,22)" rx="2" ry="2" />
<text  x="36.01" y="367.5" ></text>
</g>
<g >
<title>event_function (64 samples, 1.09%)</title><rect x="14.2" y="501" width="13.0" height="15.0" fill="rgb(252,39,29)" rx="2" ry="2" />
<text  x="17.24" y="511.5" ></text>
</g>
<g >
<title>enqueue_task_rt (5 samples, 0.09%)</title><rect x="976.1" y="485" width="1.0" height="15.0" fill="rgb(245,91,5)" rx="2" ry="2" />
<text  x="979.08" y="495.5" ></text>
</g>
<g >
<title>__wcsmbs_load_conv (1 samples, 0.02%)</title><rect x="10.6" y="709" width="0.2" height="15.0" fill="rgb(210,69,46)" rx="2" ry="2" />
<text  x="13.61" y="719.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (584 samples, 9.99%)</title><rect x="187.6" y="597" width="117.9" height="15.0" fill="rgb(218,178,10)" rx="2" ry="2" />
<text  x="190.60" y="607.5" >ringbuf::ring_..</text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="117.8" y="613" width="0.2" height="15.0" fill="rgb(211,12,5)" rx="2" ry="2" />
<text  x="120.77" y="623.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (96 samples, 1.64%)</title><rect x="1168.0" y="661" width="19.4" height="15.0" fill="rgb(232,139,3)" rx="2" ry="2" />
<text  x="1171.00" y="671.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.02%)</title><rect x="723.4" y="613" width="0.2" height="15.0" fill="rgb(240,134,8)" rx="2" ry="2" />
<text  x="726.41" y="623.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.02%)</title><rect x="119.8" y="677" width="0.2" height="15.0" fill="rgb(234,183,18)" rx="2" ry="2" />
<text  x="122.79" y="687.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="968.6" y="293" width="0.2" height="15.0" fill="rgb(249,63,2)" rx="2" ry="2" />
<text  x="971.61" y="303.5" ></text>
</g>
<g >
<title>do_dlopen (1 samples, 0.02%)</title><rect x="10.2" y="549" width="0.2" height="15.0" fill="rgb(236,107,31)" rx="2" ry="2" />
<text  x="13.20" y="559.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="979.1" y="565" width="0.2" height="15.0" fill="rgb(208,92,45)" rx="2" ry="2" />
<text  x="982.11" y="575.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (6 samples, 0.10%)</title><rect x="34.4" y="341" width="1.2" height="15.0" fill="rgb(246,132,39)" rx="2" ry="2" />
<text  x="37.42" y="351.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="987.0" y="565" width="0.2" height="15.0" fill="rgb(219,101,19)" rx="2" ry="2" />
<text  x="989.98" y="575.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (33 samples, 0.56%)</title><rect x="110.5" y="677" width="6.7" height="15.0" fill="rgb(254,228,12)" rx="2" ry="2" />
<text  x="113.50" y="687.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="744.2" y="261" width="0.2" height="15.0" fill="rgb(224,182,3)" rx="2" ry="2" />
<text  x="747.20" y="271.5" ></text>
</g>
<g >
<title>__pick_next_task_fair (1 samples, 0.02%)</title><rect x="935.7" y="645" width="0.2" height="15.0" fill="rgb(229,54,15)" rx="2" ry="2" />
<text  x="938.72" y="655.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="1189.0" y="613" width="0.2" height="15.0" fill="rgb(244,228,12)" rx="2" ry="2" />
<text  x="1191.99" y="623.5" ></text>
</g>
<g >
<title>__kmalloc (1 samples, 0.02%)</title><rect x="896.2" y="661" width="0.2" height="15.0" fill="rgb(253,155,0)" rx="2" ry="2" />
<text  x="899.16" y="671.5" ></text>
</g>
<g >
<title>vfs_create (1 samples, 0.02%)</title><rect x="118.8" y="277" width="0.2" height="15.0" fill="rgb(227,194,17)" rx="2" ry="2" />
<text  x="121.78" y="287.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="637.0" y="501" width="0.2" height="15.0" fill="rgb(216,223,49)" rx="2" ry="2" />
<text  x="640.03" y="511.5" ></text>
</g>
<g >
<title>ip6_mc_input (1 samples, 0.02%)</title><rect x="972.6" y="405" width="0.2" height="15.0" fill="rgb(247,181,45)" rx="2" ry="2" />
<text  x="975.65" y="415.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 1.09%)</title><rect x="14.2" y="453" width="13.0" height="15.0" fill="rgb(228,172,19)" rx="2" ry="2" />
<text  x="17.24" y="463.5" ></text>
</g>
<g >
<title>account_page_dirtied (1 samples, 0.02%)</title><rect x="33.4" y="341" width="0.2" height="15.0" fill="rgb(252,9,19)" rx="2" ry="2" />
<text  x="36.41" y="351.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="637.4" y="517" width="0.2" height="15.0" fill="rgb(248,138,13)" rx="2" ry="2" />
<text  x="640.44" y="527.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="1169.4" y="485" width="0.2" height="15.0" fill="rgb(231,50,25)" rx="2" ry="2" />
<text  x="1172.42" y="495.5" ></text>
</g>
<g >
<title>poll_select_finish (3 samples, 0.05%)</title><rect x="941.4" y="741" width="0.6" height="15.0" fill="rgb(215,20,35)" rx="2" ry="2" />
<text  x="944.37" y="751.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="1187.8" y="661" width="0.2" height="15.0" fill="rgb(226,71,11)" rx="2" ry="2" />
<text  x="1190.78" y="671.5" ></text>
</g>
<g >
<title>dispatcher (1,364 samples, 23.33%)</title><rect x="120.4" y="677" width="275.3" height="15.0" fill="rgb(250,106,45)" rx="2" ry="2" />
<text  x="123.39" y="687.5" >dispatcher</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.07%)</title><rect x="119.0" y="533" width="0.8" height="15.0" fill="rgb(249,142,3)" rx="2" ry="2" />
<text  x="121.98" y="543.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="119.4" y="165" width="0.2" height="15.0" fill="rgb(221,33,1)" rx="2" ry="2" />
<text  x="122.38" y="175.5" ></text>
</g>
<g >
<title>perf_event_task_tick (2 samples, 0.03%)</title><rect x="1168.2" y="437" width="0.4" height="15.0" fill="rgb(249,125,50)" rx="2" ry="2" />
<text  x="1171.20" y="447.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="722.8" y="581" width="0.2" height="15.0" fill="rgb(247,129,46)" rx="2" ry="2" />
<text  x="725.80" y="591.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize::MapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="744.2" y="213" width="0.2" height="15.0" fill="rgb(231,221,44)" rx="2" ry="2" />
<text  x="747.20" y="223.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (10 samples, 0.17%)</title><rect x="33.6" y="389" width="2.0" height="15.0" fill="rgb(229,196,20)" rx="2" ry="2" />
<text  x="36.61" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (35 samples, 0.60%)</title><rect x="624.9" y="581" width="7.1" height="15.0" fill="rgb(213,132,40)" rx="2" ry="2" />
<text  x="627.92" y="591.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (4 samples, 0.07%)</title><rect x="119.0" y="421" width="0.8" height="15.0" fill="rgb(254,171,37)" rx="2" ry="2" />
<text  x="121.98" y="431.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="963.0" y="261" width="0.2" height="15.0" fill="rgb(252,85,23)" rx="2" ry="2" />
<text  x="965.96" y="271.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (1,365 samples, 23.35%)</title><rect x="120.2" y="725" width="275.5" height="15.0" fill="rgb(247,179,35)" rx="2" ry="2" />
<text  x="123.19" y="735.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>dl_main (1 samples, 0.02%)</title><rect x="10.8" y="741" width="0.2" height="15.0" fill="rgb(216,65,9)" rx="2" ry="2" />
<text  x="13.81" y="751.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="624.5" y="613" width="0.2" height="15.0" fill="rgb(207,66,9)" rx="2" ry="2" />
<text  x="627.52" y="623.5" ></text>
</g>
<g >
<title>rcu_accelerate_cbs (1 samples, 0.02%)</title><rect x="946.6" y="709" width="0.2" height="15.0" fill="rgb(230,217,51)" rx="2" ry="2" />
<text  x="949.61" y="719.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.constprop.0 (1 samples, 0.02%)</title><rect x="972.2" y="421" width="0.2" height="15.0" fill="rgb(236,138,23)" rx="2" ry="2" />
<text  x="975.24" y="431.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1,286 samples, 21.99%)</title><rect x="396.1" y="757" width="259.5" height="15.0" fill="rgb(211,39,5)" rx="2" ry="2" />
<text  x="399.07" y="767.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>__drm_mode_object_find (1 samples, 0.02%)</title><rect x="899.6" y="661" width="0.2" height="15.0" fill="rgb(238,60,52)" rx="2" ry="2" />
<text  x="902.59" y="671.5" ></text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.02%)</title><rect x="723.2" y="421" width="0.2" height="15.0" fill="rgb(244,201,31)" rx="2" ry="2" />
<text  x="726.21" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="118.6" y="533" width="0.2" height="15.0" fill="rgb(248,215,12)" rx="2" ry="2" />
<text  x="121.58" y="543.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (45 samples, 0.77%)</title><rect x="546.6" y="565" width="9.1" height="15.0" fill="rgb(217,133,24)" rx="2" ry="2" />
<text  x="549.62" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_write (44 samples, 0.75%)</title><rect x="28.6" y="597" width="8.8" height="15.0" fill="rgb(247,97,34)" rx="2" ry="2" />
<text  x="31.57" y="607.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="899.2" y="581" width="0.2" height="15.0" fill="rgb(228,66,4)" rx="2" ry="2" />
<text  x="902.19" y="591.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect x="119.4" y="261" width="0.2" height="15.0" fill="rgb(253,60,35)" rx="2" ry="2" />
<text  x="122.38" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="119.8" y="437" width="0.2" height="15.0" fill="rgb(230,210,42)" rx="2" ry="2" />
<text  x="122.79" y="447.5" ></text>
</g>
<g >
<title>[unknown]  (331 samples, 5.66%)</title><rect x="655.6" y="789" width="66.8" height="15.0" fill="rgb(218,78,36)" rx="2" ry="2" />
<text  x="658.60" y="799.5" >[unknow..</text>
</g>
<g >
<title>lapic_next_deadline (1 samples, 0.02%)</title><rect x="984.8" y="581" width="0.2" height="15.0" fill="rgb(233,220,37)" rx="2" ry="2" />
<text  x="987.76" y="591.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="394.7" y="517" width="0.2" height="15.0" fill="rgb(247,185,4)" rx="2" ry="2" />
<text  x="397.66" y="527.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (9 samples, 0.15%)</title><rect x="965.2" y="437" width="1.8" height="15.0" fill="rgb(214,9,4)" rx="2" ry="2" />
<text  x="968.18" y="447.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.02%)</title><rect x="33.4" y="277" width="0.2" height="15.0" fill="rgb(218,116,48)" rx="2" ry="2" />
<text  x="36.41" y="287.5" ></text>
</g>
<g >
<title>[sel_ldr] (94 samples, 1.61%)</title><rect x="677.0" y="773" width="19.0" height="15.0" fill="rgb(222,98,4)" rx="2" ry="2" />
<text  x="679.99" y="783.5" ></text>
</g>
<g >
<title>amdgpu_job_run (1 samples, 0.02%)</title><rect x="946.4" y="741" width="0.2" height="15.0" fill="rgb(218,133,39)" rx="2" ry="2" />
<text  x="949.41" y="751.5" ></text>
</g>
<g >
<title>menu_select (26 samples, 0.44%)</title><rect x="1150.4" y="693" width="5.3" height="15.0" fill="rgb(216,173,40)" rx="2" ry="2" />
<text  x="1153.44" y="703.5" ></text>
</g>
<g >
<title>rcu_pending (1 samples, 0.02%)</title><rect x="980.9" y="501" width="0.2" height="15.0" fill="rgb(219,143,9)" rx="2" ry="2" />
<text  x="983.92" y="511.5" ></text>
</g>
<g >
<title>page_add_file_rmap (1 samples, 0.02%)</title><rect x="117.8" y="549" width="0.2" height="15.0" fill="rgb(242,121,47)" rx="2" ry="2" />
<text  x="120.77" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1188.8" y="645" width="0.2" height="15.0" fill="rgb(250,125,34)" rx="2" ry="2" />
<text  x="1191.79" y="655.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="119.4" y="213" width="0.2" height="15.0" fill="rgb(226,58,48)" rx="2" ry="2" />
<text  x="122.38" y="223.5" ></text>
</g>
<g >
<title>drm_format_info (1 samples, 0.02%)</title><rect x="899.4" y="597" width="0.2" height="15.0" fill="rgb(215,114,49)" rx="2" ry="2" />
<text  x="902.39" y="607.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="10.8" y="757" width="0.2" height="15.0" fill="rgb(223,88,43)" rx="2" ry="2" />
<text  x="13.81" y="767.5" ></text>
</g>
<g >
<title>arch_call_rest_init (109 samples, 1.86%)</title><rect x="1167.8" y="725" width="22.0" height="15.0" fill="rgb(209,66,4)" rx="2" ry="2" />
<text  x="1170.80" y="735.5" >a..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="394.7" y="501" width="0.2" height="15.0" fill="rgb(221,148,39)" rx="2" ry="2" />
<text  x="397.66" y="511.5" ></text>
</g>
<g >
<title>poll_idle (9 samples, 0.15%)</title><rect x="1184.1" y="613" width="1.9" height="15.0" fill="rgb(226,193,38)" rx="2" ry="2" />
<text  x="1187.15" y="623.5" ></text>
</g>
<g >
<title>default_wake_function (3 samples, 0.05%)</title><rect x="897.0" y="565" width="0.6" height="15.0" fill="rgb(249,16,24)" rx="2" ry="2" />
<text  x="899.97" y="575.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (3 samples, 0.05%)</title><rect x="1166.6" y="677" width="0.6" height="15.0" fill="rgb(216,64,35)" rx="2" ry="2" />
<text  x="1169.59" y="687.5" ></text>
</g>
<g >
<title>available_idle_cpu (1 samples, 0.02%)</title><rect x="969.4" y="341" width="0.2" height="15.0" fill="rgb(241,186,21)" rx="2" ry="2" />
<text  x="972.42" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.09%)</title><rect x="117.2" y="725" width="1.0" height="15.0" fill="rgb(224,150,40)" rx="2" ry="2" />
<text  x="120.16" y="735.5" ></text>
</g>
<g >
<title>force_qs_rnp (1 samples, 0.02%)</title><rect x="946.8" y="725" width="0.2" height="15.0" fill="rgb(230,16,6)" rx="2" ry="2" />
<text  x="949.82" y="735.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="944.0" y="677" width="0.2" height="15.0" fill="rgb(248,197,12)" rx="2" ry="2" />
<text  x="946.99" y="687.5" ></text>
</g>
<g >
<title>NaClXMutexLock (38 samples, 0.65%)</title><rect x="98.4" y="741" width="7.7" height="15.0" fill="rgb(240,184,17)" rx="2" ry="2" />
<text  x="101.39" y="751.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.02%)</title><rect x="933.5" y="661" width="0.2" height="15.0" fill="rgb(221,29,42)" rx="2" ry="2" />
<text  x="936.50" y="671.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="117.8" y="677" width="0.4" height="15.0" fill="rgb(238,186,30)" rx="2" ry="2" />
<text  x="120.77" y="687.5" ></text>
</g>
<g >
<title>newidle_balance (2 samples, 0.03%)</title><rect x="1188.2" y="613" width="0.4" height="15.0" fill="rgb(210,189,14)" rx="2" ry="2" />
<text  x="1191.18" y="623.5" ></text>
</g>
<g >
<title>DynArrayGet (4 samples, 0.07%)</title><rect x="415.8" y="725" width="0.9" height="15.0" fill="rgb(244,94,50)" rx="2" ry="2" />
<text  x="418.85" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="61.9" y="693" width="0.2" height="15.0" fill="rgb(211,85,51)" rx="2" ry="2" />
<text  x="64.87" y="703.5" ></text>
</g>
<g >
<title>proc_pid_status (1 samples, 0.02%)</title><rect x="28.0" y="533" width="0.2" height="15.0" fill="rgb(212,146,22)" rx="2" ry="2" />
<text  x="30.96" y="543.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.03%)</title><rect x="603.1" y="517" width="0.4" height="15.0" fill="rgb(237,84,51)" rx="2" ry="2" />
<text  x="606.13" y="527.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="1169.4" y="501" width="0.2" height="15.0" fill="rgb(241,58,16)" rx="2" ry="2" />
<text  x="1172.42" y="511.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="942.4" y="565" width="0.2" height="15.0" fill="rgb(217,165,5)" rx="2" ry="2" />
<text  x="945.38" y="575.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="744.2" y="597" width="0.2" height="15.0" fill="rgb(218,163,32)" rx="2" ry="2" />
<text  x="747.20" y="607.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="943.6" y="725" width="0.2" height="15.0" fill="rgb(244,30,26)" rx="2" ry="2" />
<text  x="946.59" y="735.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.02%)</title><rect x="1162.8" y="661" width="0.2" height="15.0" fill="rgb(248,152,17)" rx="2" ry="2" />
<text  x="1165.76" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="62.1" y="757" width="0.4" height="15.0" fill="rgb(224,129,17)" rx="2" ry="2" />
<text  x="65.07" y="767.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="949.2" y="581" width="0.2" height="15.0" fill="rgb(250,97,47)" rx="2" ry="2" />
<text  x="952.24" y="591.5" ></text>
</g>
<g >
<title>tick_nohz_irq_exit (1 samples, 0.02%)</title><rect x="991.2" y="645" width="0.2" height="15.0" fill="rgb(222,213,13)" rx="2" ry="2" />
<text  x="994.21" y="655.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="120.6" y="373" width="0.2" height="15.0" fill="rgb(251,59,45)" rx="2" ry="2" />
<text  x="123.59" y="383.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (6 samples, 0.10%)</title><rect x="964.0" y="469" width="1.2" height="15.0" fill="rgb(219,150,23)" rx="2" ry="2" />
<text  x="966.97" y="479.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (2 samples, 0.03%)</title><rect x="949.4" y="549" width="0.4" height="15.0" fill="rgb(221,178,39)" rx="2" ry="2" />
<text  x="952.44" y="559.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.02%)</title><rect x="942.6" y="645" width="0.2" height="15.0" fill="rgb(206,216,43)" rx="2" ry="2" />
<text  x="945.58" y="655.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (3 samples, 0.05%)</title><rect x="723.8" y="661" width="0.6" height="15.0" fill="rgb(219,208,13)" rx="2" ry="2" />
<text  x="726.81" y="671.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (4 samples, 0.07%)</title><rect x="949.4" y="645" width="0.8" height="15.0" fill="rgb(219,229,33)" rx="2" ry="2" />
<text  x="952.44" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="10.2" y="421" width="0.2" height="15.0" fill="rgb(254,190,29)" rx="2" ry="2" />
<text  x="13.20" y="431.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.03%)</title><rect x="891.7" y="629" width="0.4" height="15.0" fill="rgb(227,171,40)" rx="2" ry="2" />
<text  x="894.72" y="639.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.02%)</title><rect x="933.1" y="693" width="0.2" height="15.0" fill="rgb(232,64,48)" rx="2" ry="2" />
<text  x="936.09" y="703.5" ></text>
</g>
<g >
<title>leave_mm (5 samples, 0.09%)</title><rect x="991.6" y="677" width="1.0" height="15.0" fill="rgb(249,225,24)" rx="2" ry="2" />
<text  x="994.62" y="687.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1 samples, 0.02%)</title><rect x="1165.8" y="597" width="0.2" height="15.0" fill="rgb(239,97,23)" rx="2" ry="2" />
<text  x="1168.78" y="607.5" ></text>
</g>
<g >
<title>security_mmap_file (1 samples, 0.02%)</title><rect x="10.2" y="357" width="0.2" height="15.0" fill="rgb(242,63,13)" rx="2" ry="2" />
<text  x="13.20" y="367.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.02%)</title><rect x="955.5" y="565" width="0.2" height="15.0" fill="rgb(218,34,4)" rx="2" ry="2" />
<text  x="958.49" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="118.2" y="597" width="0.2" height="15.0" fill="rgb(224,92,32)" rx="2" ry="2" />
<text  x="121.17" y="607.5" ></text>
</g>
<g >
<title>page_remove_rmap (3 samples, 0.05%)</title><rect x="752.7" y="581" width="0.6" height="15.0" fill="rgb(246,213,7)" rx="2" ry="2" />
<text  x="755.67" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="624.5" y="549" width="0.2" height="15.0" fill="rgb(234,120,54)" rx="2" ry="2" />
<text  x="627.52" y="559.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="990.8" y="549" width="0.2" height="15.0" fill="rgb(224,110,2)" rx="2" ry="2" />
<text  x="993.81" y="559.5" ></text>
</g>
<g >
<title>ovl_create_object (1 samples, 0.02%)</title><rect x="118.8" y="341" width="0.2" height="15.0" fill="rgb(208,84,2)" rx="2" ry="2" />
<text  x="121.78" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (28 samples, 0.48%)</title><rect x="751.1" y="757" width="5.6" height="15.0" fill="rgb(219,24,6)" rx="2" ry="2" />
<text  x="754.06" y="767.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="120.6" y="405" width="0.2" height="15.0" fill="rgb(215,228,28)" rx="2" ry="2" />
<text  x="123.59" y="415.5" ></text>
</g>
<g >
<title>amdgpu_cs_get_threshold_for_moves (1 samples, 0.02%)</title><rect x="895.2" y="661" width="0.2" height="15.0" fill="rgb(221,117,25)" rx="2" ry="2" />
<text  x="898.15" y="671.5" ></text>
</g>
<g >
<title>NaClForkThreadContextSetup (1 samples, 0.02%)</title><rect x="120.0" y="693" width="0.2" height="15.0" fill="rgb(209,89,30)" rx="2" ry="2" />
<text  x="122.99" y="703.5" ></text>
</g>
<g >
<title>find_get_pages_contig (1 samples, 0.02%)</title><rect x="120.6" y="325" width="0.2" height="15.0" fill="rgb(215,156,44)" rx="2" ry="2" />
<text  x="123.59" y="335.5" ></text>
</g>
<g >
<title>drain_obj_stock (1 samples, 0.02%)</title><rect x="942.2" y="565" width="0.2" height="15.0" fill="rgb(216,166,45)" rx="2" ry="2" />
<text  x="945.17" y="575.5" ></text>
</g>
<g >
<title>lind_exit (6 samples, 0.10%)</title><rect x="118.6" y="725" width="1.2" height="15.0" fill="rgb(228,157,19)" rx="2" ry="2" />
<text  x="121.58" y="735.5" ></text>
</g>
<g >
<title>ovl_create (1 samples, 0.02%)</title><rect x="118.8" y="357" width="0.2" height="15.0" fill="rgb(247,53,47)" rx="2" ry="2" />
<text  x="121.78" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_write (5 samples, 0.09%)</title><rect x="37.4" y="757" width="1.1" height="15.0" fill="rgb(214,176,12)" rx="2" ry="2" />
<text  x="40.45" y="767.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="118.2" y="277" width="0.2" height="15.0" fill="rgb(237,112,27)" rx="2" ry="2" />
<text  x="121.17" y="287.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="944.8" y="597" width="0.4" height="15.0" fill="rgb(244,209,18)" rx="2" ry="2" />
<text  x="947.80" y="607.5" ></text>
</g>
<g >
<title>all (5,847 samples, 100%)</title><rect x="10.0" y="821" width="1180.0" height="15.0" fill="rgb(211,34,13)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>run_rebalance_domains (20 samples, 0.34%)</title><rect x="986.8" y="581" width="4.0" height="15.0" fill="rgb(240,87,38)" rx="2" ry="2" />
<text  x="989.77" y="591.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="891.9" y="613" width="0.2" height="15.0" fill="rgb(243,157,17)" rx="2" ry="2" />
<text  x="894.92" y="623.5" ></text>
</g>
<g >
<title>__kmalloc_track_caller (3 samples, 0.05%)</title><rect x="900.8" y="693" width="0.6" height="15.0" fill="rgb(241,130,16)" rx="2" ry="2" />
<text  x="903.80" y="703.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1 samples, 0.02%)</title><rect x="65.1" y="773" width="0.2" height="15.0" fill="rgb(250,73,36)" rx="2" ry="2" />
<text  x="68.09" y="783.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (754 samples, 12.90%)</title><rect x="992.6" y="677" width="152.2" height="15.0" fill="rgb(225,104,18)" rx="2" ry="2" />
<text  x="995.63" y="687.5" >mwait_idle_with_hin..</text>
</g>
<g >
<title>unix_stream_recvmsg (4 samples, 0.07%)</title><rect x="942.2" y="677" width="0.8" height="15.0" fill="rgb(249,57,23)" rx="2" ry="2" />
<text  x="945.17" y="687.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (6 samples, 0.10%)</title><rect x="118.6" y="645" width="1.2" height="15.0" fill="rgb(252,220,25)" rx="2" ry="2" />
<text  x="121.58" y="655.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="326.4" y="517" width="0.2" height="15.0" fill="rgb(226,108,4)" rx="2" ry="2" />
<text  x="329.44" y="527.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.03%)</title><rect x="1168.2" y="501" width="0.4" height="15.0" fill="rgb(247,20,47)" rx="2" ry="2" />
<text  x="1171.20" y="511.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.02%)</title><rect x="723.4" y="645" width="0.2" height="15.0" fill="rgb(236,47,15)" rx="2" ry="2" />
<text  x="726.41" y="655.5" ></text>
</g>
<g >
<title>[libncursesw.so.6.2] (1 samples, 0.02%)</title><rect x="10.4" y="549" width="0.2" height="15.0" fill="rgb(226,126,52)" rx="2" ry="2" />
<text  x="13.40" y="559.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (3 samples, 0.05%)</title><rect x="119.2" y="341" width="0.6" height="15.0" fill="rgb(220,97,52)" rx="2" ry="2" />
<text  x="122.18" y="351.5" ></text>
</g>
<g >
<title>__GI___poll (3 samples, 0.05%)</title><rect x="27.4" y="725" width="0.6" height="15.0" fill="rgb(242,213,7)" rx="2" ry="2" />
<text  x="30.36" y="735.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="132.7" y="533" width="0.2" height="15.0" fill="rgb(254,207,25)" rx="2" ry="2" />
<text  x="135.70" y="543.5" ></text>
</g>
<g >
<title>snd_pcm_status64 (44 samples, 0.75%)</title><rect x="919.4" y="693" width="8.8" height="15.0" fill="rgb(233,199,4)" rx="2" ry="2" />
<text  x="922.37" y="703.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (62 samples, 1.06%)</title><rect x="441.7" y="597" width="12.5" height="15.0" fill="rgb(254,14,15)" rx="2" ry="2" />
<text  x="444.68" y="607.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.03%)</title><rect x="947.4" y="693" width="0.4" height="15.0" fill="rgb(232,174,23)" rx="2" ry="2" />
<text  x="950.42" y="703.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.02%)</title><rect x="944.6" y="565" width="0.2" height="15.0" fill="rgb(225,202,36)" rx="2" ry="2" />
<text  x="947.60" y="575.5" ></text>
</g>
<g >
<title>psi_group_change (4 samples, 0.07%)</title><rect x="936.9" y="613" width="0.8" height="15.0" fill="rgb(215,84,14)" rx="2" ry="2" />
<text  x="939.93" y="623.5" ></text>
</g>
<g >
<title>drm_atomic_helper_wait_for_flip_done (5 samples, 0.09%)</title><rect x="954.7" y="677" width="1.0" height="15.0" fill="rgb(246,11,9)" rx="2" ry="2" />
<text  x="957.69" y="687.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (2 samples, 0.03%)</title><rect x="949.4" y="533" width="0.4" height="15.0" fill="rgb(250,14,12)" rx="2" ry="2" />
<text  x="952.44" y="543.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="61.9" y="741" width="0.2" height="15.0" fill="rgb(217,164,39)" rx="2" ry="2" />
<text  x="64.87" y="751.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 1.09%)</title><rect x="14.2" y="517" width="13.0" height="15.0" fill="rgb(250,23,29)" rx="2" ry="2" />
<text  x="17.24" y="527.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="891.7" y="693" width="0.8" height="15.0" fill="rgb(243,24,8)" rx="2" ry="2" />
<text  x="894.72" y="703.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (1 samples, 0.02%)</title><rect x="118.2" y="133" width="0.2" height="15.0" fill="rgb(217,25,33)" rx="2" ry="2" />
<text  x="121.17" y="143.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.02%)</title><rect x="28.0" y="581" width="0.2" height="15.0" fill="rgb(209,183,3)" rx="2" ry="2" />
<text  x="30.96" y="591.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (2 samples, 0.03%)</title><rect x="949.0" y="629" width="0.4" height="15.0" fill="rgb(217,172,32)" rx="2" ry="2" />
<text  x="952.04" y="639.5" ></text>
</g>
<g >
<title>&lt;std::lazy::SyncLazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="454.2" y="629" width="0.2" height="15.0" fill="rgb(221,38,34)" rx="2" ry="2" />
<text  x="457.19" y="639.5" ></text>
</g>
<g >
<title>ext4_releasepage (1 samples, 0.02%)</title><rect x="118.2" y="69" width="0.2" height="15.0" fill="rgb(241,106,33)" rx="2" ry="2" />
<text  x="121.17" y="79.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (10 samples, 0.17%)</title><rect x="33.6" y="373" width="2.0" height="15.0" fill="rgb(245,119,3)" rx="2" ry="2" />
<text  x="36.61" y="383.5" ></text>
</g>
<g >
<title>__nss_module_get_function (1 samples, 0.02%)</title><rect x="10.2" y="645" width="0.2" height="15.0" fill="rgb(227,41,15)" rx="2" ry="2" />
<text  x="13.20" y="655.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.03%)</title><rect x="1168.2" y="485" width="0.4" height="15.0" fill="rgb(250,204,16)" rx="2" ry="2" />
<text  x="1171.20" y="495.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect x="744.2" y="485" width="0.2" height="15.0" fill="rgb(250,126,52)" rx="2" ry="2" />
<text  x="747.20" y="495.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.02%)</title><rect x="1160.5" y="629" width="0.2" height="15.0" fill="rgb(249,212,32)" rx="2" ry="2" />
<text  x="1163.54" y="639.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="118.2" y="357" width="0.2" height="15.0" fill="rgb(206,167,28)" rx="2" ry="2" />
<text  x="121.17" y="367.5" ></text>
</g>
<g >
<title>get_user_pages_fast (3 samples, 0.05%)</title><rect x="892.7" y="693" width="0.6" height="15.0" fill="rgb(243,149,27)" rx="2" ry="2" />
<text  x="895.73" y="703.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.03%)</title><rect x="1149.6" y="693" width="0.4" height="15.0" fill="rgb(250,217,22)" rx="2" ry="2" />
<text  x="1152.64" y="703.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="969.2" y="421" width="0.2" height="15.0" fill="rgb(249,67,39)" rx="2" ry="2" />
<text  x="972.22" y="431.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (175 samples, 2.99%)</title><rect x="504.2" y="581" width="35.4" height="15.0" fill="rgb(240,109,32)" rx="2" ry="2" />
<text  x="507.24" y="591.5" >st..</text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.02%)</title><rect x="756.1" y="533" width="0.2" height="15.0" fill="rgb(233,172,30)" rx="2" ry="2" />
<text  x="759.10" y="543.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="952.9" y="485" width="0.2" height="15.0" fill="rgb(231,162,1)" rx="2" ry="2" />
<text  x="955.87" y="495.5" ></text>
</g>
<g >
<title>__inc_numa_state (1 samples, 0.02%)</title><rect x="32.4" y="293" width="0.2" height="15.0" fill="rgb(246,183,13)" rx="2" ry="2" />
<text  x="35.40" y="303.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="607.2" y="517" width="0.6" height="15.0" fill="rgb(228,72,29)" rx="2" ry="2" />
<text  x="610.16" y="527.5" ></text>
</g>
<g >
<title>dma_fence_default_wait (1 samples, 0.02%)</title><rect x="952.9" y="629" width="0.2" height="15.0" fill="rgb(242,182,25)" rx="2" ry="2" />
<text  x="955.87" y="639.5" ></text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.02%)</title><rect x="27.6" y="597" width="0.2" height="15.0" fill="rgb(249,93,27)" rx="2" ry="2" />
<text  x="30.56" y="607.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="899.2" y="549" width="0.2" height="15.0" fill="rgb(251,120,0)" rx="2" ry="2" />
<text  x="902.19" y="559.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (15 samples, 0.26%)</title><rect x="391.6" y="581" width="3.1" height="15.0" fill="rgb(213,69,1)" rx="2" ry="2" />
<text  x="394.63" y="591.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="132.7" y="549" width="0.2" height="15.0" fill="rgb(241,200,49)" rx="2" ry="2" />
<text  x="135.70" y="559.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (56 samples, 0.96%)</title><rect x="598.1" y="629" width="11.3" height="15.0" fill="rgb(207,195,6)" rx="2" ry="2" />
<text  x="601.08" y="639.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (3 samples, 0.05%)</title><rect x="593.6" y="565" width="0.6" height="15.0" fill="rgb(210,158,18)" rx="2" ry="2" />
<text  x="596.64" y="575.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (227 samples, 3.88%)</title><rect x="342.8" y="565" width="45.8" height="15.0" fill="rgb(219,9,47)" rx="2" ry="2" />
<text  x="345.79" y="575.5" >ring..</text>
</g>
<g >
<title>core::sync::atomic::atomic_load (243 samples, 4.16%)</title><rect x="138.6" y="597" width="49.0" height="15.0" fill="rgb(228,49,37)" rx="2" ry="2" />
<text  x="141.55" y="607.5" >core..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="30.6" y="325" width="0.2" height="15.0" fill="rgb(249,183,7)" rx="2" ry="2" />
<text  x="33.58" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7 samples, 0.12%)</title><rect x="1168.0" y="613" width="1.4" height="15.0" fill="rgb(210,167,7)" rx="2" ry="2" />
<text  x="1171.00" y="623.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.02%)</title><rect x="1167.2" y="741" width="0.2" height="15.0" fill="rgb(253,175,29)" rx="2" ry="2" />
<text  x="1170.20" y="751.5" ></text>
</g>
<g >
<title>__do_sys_clone (1 samples, 0.02%)</title><rect x="744.0" y="725" width="0.2" height="15.0" fill="rgb(209,80,15)" rx="2" ry="2" />
<text  x="746.99" y="735.5" ></text>
</g>
<g >
<title>put_ctx (1 samples, 0.02%)</title><rect x="27.2" y="629" width="0.2" height="15.0" fill="rgb(231,185,0)" rx="2" ry="2" />
<text  x="30.15" y="639.5" ></text>
</g>
<g >
<title>generic_reg_update_ex (8 samples, 0.14%)</title><rect x="950.9" y="597" width="1.6" height="15.0" fill="rgb(234,171,7)" rx="2" ry="2" />
<text  x="953.85" y="607.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (58 samples, 0.99%)</title><rect x="639.3" y="661" width="11.7" height="15.0" fill="rgb(225,160,30)" rx="2" ry="2" />
<text  x="642.25" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.02%)</title><rect x="394.9" y="581" width="0.2" height="15.0" fill="rgb(239,151,50)" rx="2" ry="2" />
<text  x="397.86" y="591.5" ></text>
</g>
<g >
<title>kvmalloc_node (4 samples, 0.07%)</title><rect x="953.1" y="661" width="0.8" height="15.0" fill="rgb(240,47,46)" rx="2" ry="2" />
<text  x="956.07" y="671.5" ></text>
</g>
<g >
<title>amdgpu_get_vblank_counter_kms (6 samples, 0.10%)</title><rect x="949.4" y="661" width="1.2" height="15.0" fill="rgb(229,67,51)" rx="2" ry="2" />
<text  x="952.44" y="671.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="983.1" y="469" width="0.2" height="15.0" fill="rgb(208,185,51)" rx="2" ry="2" />
<text  x="986.14" y="479.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.02%)</title><rect x="890.7" y="725" width="0.2" height="15.0" fill="rgb(205,165,12)" rx="2" ry="2" />
<text  x="893.71" y="735.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.02%)</title><rect x="935.9" y="645" width="0.2" height="15.0" fill="rgb(206,178,19)" rx="2" ry="2" />
<text  x="938.92" y="655.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="946.0" y="709" width="0.2" height="15.0" fill="rgb(240,226,2)" rx="2" ry="2" />
<text  x="949.01" y="719.5" ></text>
</g>
<g >
<title>alloc_vmap_area (1 samples, 0.02%)</title><rect x="744.0" y="613" width="0.2" height="15.0" fill="rgb(217,55,38)" rx="2" ry="2" />
<text  x="746.99" y="623.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.02%)</title><rect x="118.6" y="437" width="0.2" height="15.0" fill="rgb(223,142,2)" rx="2" ry="2" />
<text  x="121.58" y="447.5" ></text>
</g>
<g >
<title>__mod_timer (1 samples, 0.02%)</title><rect x="947.0" y="709" width="0.2" height="15.0" fill="rgb(237,84,48)" rx="2" ry="2" />
<text  x="950.02" y="719.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (34 samples, 0.58%)</title><rect x="298.6" y="581" width="6.9" height="15.0" fill="rgb(246,0,51)" rx="2" ry="2" />
<text  x="301.59" y="591.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="27.6" y="581" width="0.2" height="15.0" fill="rgb(206,221,29)" rx="2" ry="2" />
<text  x="30.56" y="591.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="118.2" y="309" width="0.2" height="15.0" fill="rgb(217,68,49)" rx="2" ry="2" />
<text  x="121.17" y="319.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (3 samples, 0.05%)</title><rect x="723.8" y="741" width="0.6" height="15.0" fill="rgb(238,58,7)" rx="2" ry="2" />
<text  x="726.81" y="751.5" ></text>
</g>
<g >
<title>amdgpu_cs_list_validate (3 samples, 0.05%)</title><rect x="895.4" y="661" width="0.6" height="15.0" fill="rgb(244,103,4)" rx="2" ry="2" />
<text  x="898.35" y="671.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="890.7" y="613" width="0.2" height="15.0" fill="rgb(233,26,47)" rx="2" ry="2" />
<text  x="893.71" y="623.5" ></text>
</g>
<g >
<title>drm_dev_enter (2 samples, 0.03%)</title><rect x="894.1" y="709" width="0.4" height="15.0" fill="rgb(208,62,3)" rx="2" ry="2" />
<text  x="897.14" y="719.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (2 samples, 0.03%)</title><rect x="723.0" y="613" width="0.4" height="15.0" fill="rgb(225,56,23)" rx="2" ry="2" />
<text  x="726.00" y="623.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="961.5" y="325" width="0.2" height="15.0" fill="rgb(248,86,25)" rx="2" ry="2" />
<text  x="964.55" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_futex (10 samples, 0.17%)</title><rect x="891.7" y="757" width="2.0" height="15.0" fill="rgb(242,196,14)" rx="2" ry="2" />
<text  x="894.72" y="767.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (6 samples, 0.10%)</title><rect x="979.5" y="549" width="1.2" height="15.0" fill="rgb(208,23,23)" rx="2" ry="2" />
<text  x="982.51" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.09%)</title><rect x="607.8" y="517" width="1.0" height="15.0" fill="rgb(233,216,3)" rx="2" ry="2" />
<text  x="610.77" y="527.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.05%)</title><rect x="325.8" y="485" width="0.6" height="15.0" fill="rgb(245,229,47)" rx="2" ry="2" />
<text  x="328.84" y="495.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="988.8" y="517" width="0.2" height="15.0" fill="rgb(219,161,38)" rx="2" ry="2" />
<text  x="991.79" y="527.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (3 samples, 0.05%)</title><rect x="928.9" y="709" width="0.6" height="15.0" fill="rgb(244,12,6)" rx="2" ry="2" />
<text  x="931.85" y="719.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2,924 samples, 50.01%)</title><rect x="65.5" y="773" width="590.1" height="15.0" fill="rgb(233,27,37)" rx="2" ry="2" />
<text  x="68.50" y="783.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>try_charge (2 samples, 0.03%)</title><rect x="716.5" y="645" width="0.5" height="15.0" fill="rgb(231,1,27)" rx="2" ry="2" />
<text  x="719.55" y="655.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (2 samples, 0.03%)</title><rect x="118.2" y="757" width="0.4" height="15.0" fill="rgb(235,46,36)" rx="2" ry="2" />
<text  x="121.17" y="767.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.02%)</title><rect x="744.2" y="117" width="0.2" height="15.0" fill="rgb(213,140,4)" rx="2" ry="2" />
<text  x="747.20" y="127.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="945.0" y="485" width="0.2" height="15.0" fill="rgb(249,147,26)" rx="2" ry="2" />
<text  x="948.00" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (36 samples, 0.62%)</title><rect x="624.7" y="597" width="7.3" height="15.0" fill="rgb(253,138,6)" rx="2" ry="2" />
<text  x="627.72" y="607.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.02%)</title><rect x="1167.6" y="741" width="0.2" height="15.0" fill="rgb(232,151,30)" rx="2" ry="2" />
<text  x="1170.60" y="751.5" ></text>
</g>
<g >
<title>__schedule (28 samples, 0.48%)</title><rect x="1158.5" y="709" width="5.7" height="15.0" fill="rgb(232,72,28)" rx="2" ry="2" />
<text  x="1161.52" y="719.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (2 samples, 0.03%)</title><rect x="417.5" y="709" width="0.4" height="15.0" fill="rgb(246,200,37)" rx="2" ry="2" />
<text  x="420.46" y="719.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="978.7" y="485" width="0.2" height="15.0" fill="rgb(226,202,19)" rx="2" ry="2" />
<text  x="981.70" y="495.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (12 samples, 0.21%)</title><rect x="635.6" y="597" width="2.4" height="15.0" fill="rgb(236,105,40)" rx="2" ry="2" />
<text  x="638.62" y="607.5" ></text>
</g>
<g >
<title>amdgpu_ih_process (47 samples, 0.80%)</title><rect x="960.1" y="565" width="9.5" height="15.0" fill="rgb(249,88,36)" rx="2" ry="2" />
<text  x="963.14" y="575.5" ></text>
</g>
<g >
<title>workingset_update_node (1 samples, 0.02%)</title><rect x="31.6" y="325" width="0.2" height="15.0" fill="rgb(230,31,16)" rx="2" ry="2" />
<text  x="34.59" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (6 samples, 0.10%)</title><rect x="118.6" y="693" width="1.2" height="15.0" fill="rgb(227,46,43)" rx="2" ry="2" />
<text  x="121.58" y="703.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="969.4" y="357" width="0.2" height="15.0" fill="rgb(252,172,38)" rx="2" ry="2" />
<text  x="972.42" y="367.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="118.8" y="181" width="0.2" height="15.0" fill="rgb(252,169,13)" rx="2" ry="2" />
<text  x="121.78" y="191.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="969.0" y="277" width="0.2" height="15.0" fill="rgb(206,54,48)" rx="2" ry="2" />
<text  x="972.01" y="287.5" ></text>
</g>
<g >
<title>ovl_write_iter (5 samples, 0.09%)</title><rect x="37.4" y="693" width="1.1" height="15.0" fill="rgb(230,132,34)" rx="2" ry="2" />
<text  x="40.45" y="703.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (3 samples, 0.05%)</title><rect x="722.8" y="645" width="0.6" height="15.0" fill="rgb(209,116,23)" rx="2" ry="2" />
<text  x="725.80" y="655.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.07%)</title><rect x="119.0" y="405" width="0.8" height="15.0" fill="rgb(216,167,49)" rx="2" ry="2" />
<text  x="121.98" y="415.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="539.8" y="565" width="0.2" height="15.0" fill="rgb(223,21,29)" rx="2" ry="2" />
<text  x="542.76" y="575.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (2 samples, 0.03%)</title><rect x="406.6" y="725" width="0.4" height="15.0" fill="rgb(211,99,40)" rx="2" ry="2" />
<text  x="409.56" y="735.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="932.3" y="709" width="0.4" height="15.0" fill="rgb(254,218,52)" rx="2" ry="2" />
<text  x="935.28" y="719.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="955.5" y="581" width="0.2" height="15.0" fill="rgb(247,132,27)" rx="2" ry="2" />
<text  x="958.49" y="591.5" ></text>
</g>
<g >
<title>__GI___open_nocancel (1 samples, 0.02%)</title><rect x="10.8" y="629" width="0.2" height="15.0" fill="rgb(220,60,2)" rx="2" ry="2" />
<text  x="13.81" y="639.5" ></text>
</g>
<g >
<title>__handle_mm_fault (92 samples, 1.57%)</title><rect x="698.8" y="709" width="18.6" height="15.0" fill="rgb(231,228,0)" rx="2" ry="2" />
<text  x="701.79" y="719.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="978.7" y="517" width="0.2" height="15.0" fill="rgb(218,204,0)" rx="2" ry="2" />
<text  x="981.70" y="527.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="978.7" y="501" width="0.2" height="15.0" fill="rgb(218,135,4)" rx="2" ry="2" />
<text  x="981.70" y="511.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.02%)</title><rect x="28.2" y="693" width="0.2" height="15.0" fill="rgb(219,91,2)" rx="2" ry="2" />
<text  x="31.16" y="703.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (63 samples, 1.08%)</title><rect x="330.1" y="549" width="12.7" height="15.0" fill="rgb(250,153,14)" rx="2" ry="2" />
<text  x="333.08" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (2 samples, 0.03%)</title><rect x="1189.0" y="661" width="0.4" height="15.0" fill="rgb(230,164,40)" rx="2" ry="2" />
<text  x="1191.99" y="671.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (4 samples, 0.07%)</title><rect x="119.0" y="629" width="0.8" height="15.0" fill="rgb(209,172,50)" rx="2" ry="2" />
<text  x="121.98" y="639.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.03%)</title><rect x="729.5" y="773" width="0.4" height="15.0" fill="rgb(246,95,47)" rx="2" ry="2" />
<text  x="732.46" y="783.5" ></text>
</g>
<g >
<title>tick_program_event (2 samples, 0.03%)</title><rect x="1165.8" y="629" width="0.4" height="15.0" fill="rgb(216,48,41)" rx="2" ry="2" />
<text  x="1168.78" y="639.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.02%)</title><rect x="62.7" y="741" width="0.2" height="15.0" fill="rgb(207,11,44)" rx="2" ry="2" />
<text  x="65.67" y="751.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.02%)</title><rect x="118.6" y="357" width="0.2" height="15.0" fill="rgb(212,111,24)" rx="2" ry="2" />
<text  x="121.58" y="367.5" ></text>
</g>
<g >
<title>std::fs::remove_file (1 samples, 0.02%)</title><rect x="118.2" y="517" width="0.2" height="15.0" fill="rgb(252,122,7)" rx="2" ry="2" />
<text  x="121.17" y="527.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.02%)</title><rect x="10.2" y="389" width="0.2" height="15.0" fill="rgb(250,8,31)" rx="2" ry="2" />
<text  x="13.20" y="399.5" ></text>
</g>
<g >
<title>drm_mode_page_flip_ioctl (3 samples, 0.05%)</title><rect x="899.2" y="693" width="0.6" height="15.0" fill="rgb(227,95,40)" rx="2" ry="2" />
<text  x="902.19" y="703.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (2 samples, 0.03%)</title><rect x="1163.8" y="693" width="0.4" height="15.0" fill="rgb(215,90,21)" rx="2" ry="2" />
<text  x="1166.76" y="703.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (1 samples, 0.02%)</title><rect x="887.3" y="789" width="0.2" height="15.0" fill="rgb(252,116,23)" rx="2" ry="2" />
<text  x="890.28" y="799.5" ></text>
</g>
<g >
<title>drm_crtc_vblank_helper_get_vblank_timestamp_internal (4 samples, 0.07%)</title><rect x="968.0" y="437" width="0.8" height="15.0" fill="rgb(232,129,17)" rx="2" ry="2" />
<text  x="971.01" y="447.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="132.7" y="501" width="0.2" height="15.0" fill="rgb(223,208,39)" rx="2" ry="2" />
<text  x="135.70" y="511.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (4 samples, 0.07%)</title><rect x="1163.0" y="693" width="0.8" height="15.0" fill="rgb(222,198,32)" rx="2" ry="2" />
<text  x="1165.96" y="703.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="717.4" y="725" width="0.2" height="15.0" fill="rgb(248,21,42)" rx="2" ry="2" />
<text  x="720.35" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (2 samples, 0.03%)</title><rect x="119.4" y="325" width="0.4" height="15.0" fill="rgb(243,29,28)" rx="2" ry="2" />
<text  x="122.38" y="335.5" ></text>
</g>
<g >
<title>getpwuid (1 samples, 0.02%)</title><rect x="10.2" y="693" width="0.2" height="15.0" fill="rgb(229,172,21)" rx="2" ry="2" />
<text  x="13.20" y="703.5" ></text>
</g>
<g >
<title>ovl_read_iter (1 samples, 0.02%)</title><rect x="119.8" y="373" width="0.2" height="15.0" fill="rgb(226,223,27)" rx="2" ry="2" />
<text  x="122.79" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="10.8" y="597" width="0.2" height="15.0" fill="rgb(234,216,49)" rx="2" ry="2" />
<text  x="13.81" y="607.5" ></text>
</g>
<g >
<title>tick_irq_enter (2 samples, 0.03%)</title><rect x="985.8" y="629" width="0.4" height="15.0" fill="rgb(228,26,21)" rx="2" ry="2" />
<text  x="988.77" y="639.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="546.2" y="565" width="0.2" height="15.0" fill="rgb(223,132,53)" rx="2" ry="2" />
<text  x="549.22" y="575.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="952.9" y="565" width="0.2" height="15.0" fill="rgb(215,36,41)" rx="2" ry="2" />
<text  x="955.87" y="575.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="899.2" y="565" width="0.2" height="15.0" fill="rgb(223,5,48)" rx="2" ry="2" />
<text  x="902.19" y="575.5" ></text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="950.4" y="597" width="0.2" height="15.0" fill="rgb(205,60,26)" rx="2" ry="2" />
<text  x="953.45" y="607.5" ></text>
</g>
<g >
<title>do_pcm_hwsync (84 samples, 1.44%)</title><rect x="902.4" y="693" width="17.0" height="15.0" fill="rgb(218,116,15)" rx="2" ry="2" />
<text  x="905.42" y="703.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="723.2" y="405" width="0.2" height="15.0" fill="rgb(233,36,11)" rx="2" ry="2" />
<text  x="726.21" y="415.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.02%)</title><rect x="1157.5" y="725" width="0.2" height="15.0" fill="rgb(206,159,2)" rx="2" ry="2" />
<text  x="1160.51" y="735.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="118.2" y="373" width="0.2" height="15.0" fill="rgb(215,5,20)" rx="2" ry="2" />
<text  x="121.17" y="383.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (2 samples, 0.03%)</title><rect x="30.4" y="341" width="0.4" height="15.0" fill="rgb(217,161,53)" rx="2" ry="2" />
<text  x="33.38" y="351.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="754.1" y="517" width="0.2" height="15.0" fill="rgb(210,211,27)" rx="2" ry="2" />
<text  x="757.08" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.09%)</title><rect x="607.8" y="549" width="1.0" height="15.0" fill="rgb(245,173,22)" rx="2" ry="2" />
<text  x="610.77" y="559.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.02%)</title><rect x="118.6" y="341" width="0.2" height="15.0" fill="rgb(222,50,30)" rx="2" ry="2" />
<text  x="121.58" y="351.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (2 samples, 0.03%)</title><rect x="744.4" y="757" width="0.4" height="15.0" fill="rgb(234,198,45)" rx="2" ry="2" />
<text  x="747.40" y="767.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (8 samples, 0.14%)</title><rect x="35.8" y="421" width="1.6" height="15.0" fill="rgb(233,94,27)" rx="2" ry="2" />
<text  x="38.83" y="431.5" ></text>
</g>
<g >
<title>azx_get_pos_lpib (22 samples, 0.38%)</title><rect x="902.8" y="597" width="4.5" height="15.0" fill="rgb(224,6,17)" rx="2" ry="2" />
<text  x="905.82" y="607.5" ></text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (3 samples, 0.05%)</title><rect x="109.9" y="677" width="0.6" height="15.0" fill="rgb(250,79,24)" rx="2" ry="2" />
<text  x="112.90" y="687.5" ></text>
</g>
<g >
<title>dm_read_reg_func (2 samples, 0.03%)</title><rect x="949.8" y="581" width="0.4" height="15.0" fill="rgb(233,24,53)" rx="2" ry="2" />
<text  x="952.84" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.02%)</title><rect x="394.9" y="597" width="0.2" height="15.0" fill="rgb(240,171,15)" rx="2" ry="2" />
<text  x="397.86" y="607.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="744.2" y="357" width="0.2" height="15.0" fill="rgb(239,28,19)" rx="2" ry="2" />
<text  x="747.20" y="367.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (948 samples, 16.21%)</title><rect x="440.7" y="661" width="191.3" height="15.0" fill="rgb(217,74,29)" rx="2" ry="2" />
<text  x="443.67" y="671.5" >rustposix::safeposix::dis..</text>
</g>
<g >
<title>clockevents_program_event (2 samples, 0.03%)</title><rect x="1165.8" y="613" width="0.4" height="15.0" fill="rgb(233,98,27)" rx="2" ry="2" />
<text  x="1168.78" y="623.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (1 samples, 0.02%)</title><rect x="978.5" y="517" width="0.2" height="15.0" fill="rgb(237,208,54)" rx="2" ry="2" />
<text  x="981.50" y="527.5" ></text>
</g>
<g >
<title>amdgpu_irq_handler (1 samples, 0.02%)</title><rect x="899.2" y="517" width="0.2" height="15.0" fill="rgb(235,224,38)" rx="2" ry="2" />
<text  x="902.19" y="527.5" ></text>
</g>
<g >
<title>import_iovec (1 samples, 0.02%)</title><rect x="943.0" y="709" width="0.2" height="15.0" fill="rgb(215,16,36)" rx="2" ry="2" />
<text  x="945.98" y="719.5" ></text>
</g>
<g >
<title>pick_next_task_dl (1 samples, 0.02%)</title><rect x="939.3" y="661" width="0.3" height="15.0" fill="rgb(229,142,52)" rx="2" ry="2" />
<text  x="942.35" y="671.5" ></text>
</g>
<g >
<title>dl_open_worker (1 samples, 0.02%)</title><rect x="10.2" y="501" width="0.2" height="15.0" fill="rgb(242,47,22)" rx="2" ry="2" />
<text  x="13.20" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="594.2" y="533" width="0.3" height="15.0" fill="rgb(243,172,28)" rx="2" ry="2" />
<text  x="597.25" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="326.4" y="565" width="0.2" height="15.0" fill="rgb(252,190,3)" rx="2" ry="2" />
<text  x="329.44" y="575.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (2 samples, 0.03%)</title><rect x="29.2" y="421" width="0.4" height="15.0" fill="rgb(209,188,32)" rx="2" ry="2" />
<text  x="32.17" y="431.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="119.6" y="277" width="0.2" height="15.0" fill="rgb(211,131,41)" rx="2" ry="2" />
<text  x="122.58" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.05%)</title><rect x="109.9" y="565" width="0.6" height="15.0" fill="rgb(229,96,28)" rx="2" ry="2" />
<text  x="112.90" y="575.5" ></text>
</g>
<g >
<title>std::panicking::panicking (3 samples, 0.05%)</title><rect x="609.4" y="565" width="0.6" height="15.0" fill="rgb(206,44,12)" rx="2" ry="2" />
<text  x="612.38" y="575.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="1189.8" y="789" width="0.2" height="15.0" fill="rgb(234,17,45)" rx="2" ry="2" />
<text  x="1192.80" y="799.5" ></text>
</g>
<g >
<title>snd_power_wait (1 samples, 0.02%)</title><rect x="928.2" y="709" width="0.3" height="15.0" fill="rgb(212,182,20)" rx="2" ry="2" />
<text  x="931.25" y="719.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="900.4" y="709" width="0.2" height="15.0" fill="rgb(234,97,16)" rx="2" ry="2" />
<text  x="903.40" y="719.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.02%)</title><rect x="119.2" y="229" width="0.2" height="15.0" fill="rgb(247,125,1)" rx="2" ry="2" />
<text  x="122.18" y="239.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="1188.2" y="581" width="0.2" height="15.0" fill="rgb(253,59,42)" rx="2" ry="2" />
<text  x="1191.18" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="942.0" y="757" width="0.2" height="15.0" fill="rgb(214,30,34)" rx="2" ry="2" />
<text  x="944.97" y="767.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (2 samples, 0.03%)</title><rect x="949.8" y="549" width="0.4" height="15.0" fill="rgb(215,188,36)" rx="2" ry="2" />
<text  x="952.84" y="559.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.02%)</title><rect x="942.0" y="725" width="0.2" height="15.0" fill="rgb(210,188,33)" rx="2" ry="2" />
<text  x="944.97" y="735.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath.part.0 (2 samples, 0.03%)</title><rect x="756.7" y="581" width="0.4" height="15.0" fill="rgb(206,32,14)" rx="2" ry="2" />
<text  x="759.71" y="591.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (10 samples, 0.17%)</title><rect x="1153.7" y="677" width="2.0" height="15.0" fill="rgb(211,185,48)" rx="2" ry="2" />
<text  x="1156.67" y="687.5" ></text>
</g>
<g >
<title>commit_planes_for_stream (9 samples, 0.15%)</title><rect x="950.6" y="645" width="1.9" height="15.0" fill="rgb(215,10,36)" rx="2" ry="2" />
<text  x="953.65" y="655.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="942.4" y="629" width="0.2" height="15.0" fill="rgb(241,94,27)" rx="2" ry="2" />
<text  x="945.38" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="11.0" y="773" width="0.2" height="15.0" fill="rgb(207,218,27)" rx="2" ry="2" />
<text  x="14.01" y="783.5" ></text>
</g>
<g >
<title>serde_json::de::from_trait (1 samples, 0.02%)</title><rect x="744.2" y="661" width="0.2" height="15.0" fill="rgb(209,136,17)" rx="2" ry="2" />
<text  x="747.20" y="671.5" ></text>
</g>
<g >
<title>drm_plane_check_pixel_format (1 samples, 0.02%)</title><rect x="899.4" y="613" width="0.2" height="15.0" fill="rgb(233,150,22)" rx="2" ry="2" />
<text  x="902.39" y="623.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="62.5" y="741" width="0.2" height="15.0" fill="rgb(227,31,7)" rx="2" ry="2" />
<text  x="65.47" y="751.5" ></text>
</g>
<g >
<title>dm_read_reg_func (4 samples, 0.07%)</title><rect x="966.2" y="373" width="0.8" height="15.0" fill="rgb(244,125,43)" rx="2" ry="2" />
<text  x="969.19" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (32 samples, 0.55%)</title><rect x="99.4" y="709" width="6.5" height="15.0" fill="rgb(253,95,16)" rx="2" ry="2" />
<text  x="102.40" y="719.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="119.8" y="597" width="0.2" height="15.0" fill="rgb(220,159,21)" rx="2" ry="2" />
<text  x="122.79" y="607.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="606.4" y="453" width="0.2" height="15.0" fill="rgb(227,205,17)" rx="2" ry="2" />
<text  x="609.36" y="463.5" ></text>
</g>
<g >
<title>try_to_wake_up (3 samples, 0.05%)</title><rect x="897.0" y="549" width="0.6" height="15.0" fill="rgb(207,99,46)" rx="2" ry="2" />
<text  x="899.97" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_restart (8 samples, 0.14%)</title><rect x="1165.6" y="709" width="1.6" height="15.0" fill="rgb(240,58,2)" rx="2" ry="2" />
<text  x="1168.58" y="719.5" ></text>
</g>
<g >
<title>[[heap]] (1 samples, 0.02%)</title><rect x="10.0" y="789" width="0.2" height="15.0" fill="rgb(227,219,17)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (7 samples, 0.12%)</title><rect x="960.3" y="373" width="1.4" height="15.0" fill="rgb(240,99,39)" rx="2" ry="2" />
<text  x="963.34" y="383.5" ></text>
</g>
<g >
<title>common_interrupt (68 samples, 1.16%)</title><rect x="959.1" y="661" width="13.7" height="15.0" fill="rgb(206,161,39)" rx="2" ry="2" />
<text  x="962.13" y="671.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="117.8" y="629" width="0.2" height="15.0" fill="rgb(217,71,40)" rx="2" ry="2" />
<text  x="120.77" y="639.5" ></text>
</g>
<g >
<title>ip6_list_rcv_finish.constprop.0 (1 samples, 0.02%)</title><rect x="972.6" y="437" width="0.2" height="15.0" fill="rgb(230,147,53)" rx="2" ry="2" />
<text  x="975.65" y="447.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (1 samples, 0.02%)</title><rect x="942.8" y="613" width="0.2" height="15.0" fill="rgb(237,154,33)" rx="2" ry="2" />
<text  x="945.78" y="623.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (947 samples, 16.20%)</title><rect x="957.7" y="693" width="191.1" height="15.0" fill="rgb(221,215,37)" rx="2" ry="2" />
<text  x="960.71" y="703.5" >cpuidle_enter_state</text>
</g>
<g >
<title>dce_mi_program_surface_flip_and_addr (8 samples, 0.14%)</title><rect x="950.9" y="613" width="1.6" height="15.0" fill="rgb(231,50,42)" rx="2" ry="2" />
<text  x="953.85" y="623.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (3 samples, 0.05%)</title><rect x="897.0" y="613" width="0.6" height="15.0" fill="rgb(252,143,29)" rx="2" ry="2" />
<text  x="899.97" y="623.5" ></text>
</g>
<g >
<title>CachedMapWritableText (3 samples, 0.05%)</title><rect x="109.9" y="693" width="0.6" height="15.0" fill="rgb(225,209,25)" rx="2" ry="2" />
<text  x="112.90" y="703.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="950.4" y="565" width="0.2" height="15.0" fill="rgb(225,25,53)" rx="2" ry="2" />
<text  x="953.45" y="575.5" ></text>
</g>
<g >
<title>error_return (1 samples, 0.02%)</title><rect x="718.8" y="773" width="0.2" height="15.0" fill="rgb(234,87,2)" rx="2" ry="2" />
<text  x="721.77" y="783.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.02%)</title><rect x="32.4" y="309" width="0.2" height="15.0" fill="rgb(233,66,14)" rx="2" ry="2" />
<text  x="35.40" y="319.5" ></text>
</g>
<g >
<title>sock_recvmsg (4 samples, 0.07%)</title><rect x="942.2" y="693" width="0.8" height="15.0" fill="rgb(223,39,47)" rx="2" ry="2" />
<text  x="945.17" y="703.5" ></text>
</g>
<g >
<title>exit_notify (2 samples, 0.03%)</title><rect x="756.7" y="645" width="0.4" height="15.0" fill="rgb(215,1,28)" rx="2" ry="2" />
<text  x="759.71" y="655.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="943.6" y="709" width="0.2" height="15.0" fill="rgb(246,107,33)" rx="2" ry="2" />
<text  x="946.59" y="719.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (1 samples, 0.02%)</title><rect x="10.6" y="613" width="0.2" height="15.0" fill="rgb(252,164,28)" rx="2" ry="2" />
<text  x="13.61" y="623.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="138.4" y="437" width="0.2" height="15.0" fill="rgb(239,90,45)" rx="2" ry="2" />
<text  x="141.35" y="447.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="744.2" y="453" width="0.2" height="15.0" fill="rgb(254,57,51)" rx="2" ry="2" />
<text  x="747.20" y="463.5" ></text>
</g>
<g >
<title>amdgpu_dm_commit_planes (21 samples, 0.36%)</title><rect x="948.8" y="677" width="4.3" height="15.0" fill="rgb(248,33,54)" rx="2" ry="2" />
<text  x="951.83" y="687.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.29%)</title><rect x="632.2" y="597" width="3.4" height="15.0" fill="rgb(224,102,33)" rx="2" ry="2" />
<text  x="635.19" y="607.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.02%)</title><rect x="120.6" y="565" width="0.2" height="15.0" fill="rgb(231,22,33)" rx="2" ry="2" />
<text  x="123.59" y="575.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="38.5" y="645" width="0.2" height="15.0" fill="rgb(228,38,18)" rx="2" ry="2" />
<text  x="41.46" y="655.5" ></text>
</g>
<g >
<title>del_timer_sync (1 samples, 0.02%)</title><rect x="947.2" y="709" width="0.2" height="15.0" fill="rgb(245,225,9)" rx="2" ry="2" />
<text  x="950.22" y="719.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (1 samples, 0.02%)</title><rect x="949.0" y="597" width="0.2" height="15.0" fill="rgb(248,50,53)" rx="2" ry="2" />
<text  x="952.04" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (34 samples, 0.58%)</title><rect x="586.8" y="549" width="6.8" height="15.0" fill="rgb(240,141,28)" rx="2" ry="2" />
<text  x="589.78" y="559.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.02%)</title><rect x="28.0" y="741" width="0.2" height="15.0" fill="rgb(220,144,23)" rx="2" ry="2" />
<text  x="30.96" y="751.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="989.8" y="533" width="0.2" height="15.0" fill="rgb(214,90,42)" rx="2" ry="2" />
<text  x="992.80" y="543.5" ></text>
</g>
<g >
<title>select_task_rq_rt (1 samples, 0.02%)</title><rect x="975.1" y="533" width="0.2" height="15.0" fill="rgb(233,173,11)" rx="2" ry="2" />
<text  x="978.07" y="543.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (43 samples, 0.74%)</title><rect x="28.8" y="453" width="8.6" height="15.0" fill="rgb(218,17,25)" rx="2" ry="2" />
<text  x="31.77" y="463.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (1 samples, 0.02%)</title><rect x="744.2" y="389" width="0.2" height="15.0" fill="rgb(231,55,12)" rx="2" ry="2" />
<text  x="747.20" y="399.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.02%)</title><rect x="118.2" y="565" width="0.2" height="15.0" fill="rgb(253,192,54)" rx="2" ry="2" />
<text  x="121.17" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.03%)</title><rect x="636.8" y="517" width="0.4" height="15.0" fill="rgb(242,182,7)" rx="2" ry="2" />
<text  x="639.83" y="527.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="744.2" y="581" width="0.2" height="15.0" fill="rgb(215,211,41)" rx="2" ry="2" />
<text  x="747.20" y="591.5" ></text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.02%)</title><rect x="752.3" y="581" width="0.2" height="15.0" fill="rgb(207,158,9)" rx="2" ry="2" />
<text  x="755.27" y="591.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="949.2" y="565" width="0.2" height="15.0" fill="rgb(239,27,44)" rx="2" ry="2" />
<text  x="952.24" y="575.5" ></text>
</g>
<g >
<title>zap_pte_range (27 samples, 0.46%)</title><rect x="751.1" y="597" width="5.4" height="15.0" fill="rgb(235,145,26)" rx="2" ry="2" />
<text  x="754.06" y="607.5" ></text>
</g>
<g >
<title>amdgpu_fence_process (2 samples, 0.03%)</title><rect x="969.2" y="517" width="0.4" height="15.0" fill="rgb(245,26,3)" rx="2" ry="2" />
<text  x="972.22" y="527.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.02%)</title><rect x="119.0" y="341" width="0.2" height="15.0" fill="rgb(209,58,37)" rx="2" ry="2" />
<text  x="121.98" y="351.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (5 samples, 0.09%)</title><rect x="965.2" y="373" width="1.0" height="15.0" fill="rgb(243,11,49)" rx="2" ry="2" />
<text  x="968.18" y="383.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="949.0" y="565" width="0.2" height="15.0" fill="rgb(228,51,26)" rx="2" ry="2" />
<text  x="952.04" y="575.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="937.9" y="645" width="0.2" height="15.0" fill="rgb(224,198,15)" rx="2" ry="2" />
<text  x="940.94" y="655.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (4 samples, 0.07%)</title><rect x="949.4" y="629" width="0.8" height="15.0" fill="rgb(242,224,12)" rx="2" ry="2" />
<text  x="952.44" y="639.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect x="119.2" y="133" width="0.2" height="15.0" fill="rgb(235,209,40)" rx="2" ry="2" />
<text  x="122.18" y="143.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1186.2" y="613" width="0.2" height="15.0" fill="rgb(211,173,18)" rx="2" ry="2" />
<text  x="1189.17" y="623.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.0 (6 samples, 0.10%)</title><rect x="979.5" y="533" width="1.2" height="15.0" fill="rgb(233,103,49)" rx="2" ry="2" />
<text  x="982.51" y="543.5" ></text>
</g>
<g >
<title>initialize_shell_variables (1 samples, 0.02%)</title><rect x="10.2" y="725" width="0.2" height="15.0" fill="rgb(254,69,35)" rx="2" ry="2" />
<text  x="13.20" y="735.5" ></text>
</g>
<g >
<title>__fget_files (2 samples, 0.03%)</title><rect x="932.3" y="677" width="0.4" height="15.0" fill="rgb(245,206,14)" rx="2" ry="2" />
<text  x="935.28" y="687.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="119.6" y="165" width="0.2" height="15.0" fill="rgb(213,141,13)" rx="2" ry="2" />
<text  x="122.58" y="175.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (3 samples, 0.05%)</title><rect x="30.2" y="373" width="0.6" height="15.0" fill="rgb(221,48,46)" rx="2" ry="2" />
<text  x="33.18" y="383.5" ></text>
</g>
<g >
<title>event_function_call (66 samples, 1.13%)</title><rect x="13.8" y="565" width="13.4" height="15.0" fill="rgb(242,131,34)" rx="2" ry="2" />
<text  x="16.83" y="575.5" ></text>
</g>
<g >
<title>amdgpu_irq_dispatch (47 samples, 0.80%)</title><rect x="960.1" y="549" width="9.5" height="15.0" fill="rgb(227,47,6)" rx="2" ry="2" />
<text  x="963.14" y="559.5" ></text>
</g>
<g >
<title>dc_resource_is_dsc_encoding_supported (1 samples, 0.02%)</title><rect x="899.2" y="629" width="0.2" height="15.0" fill="rgb(215,177,26)" rx="2" ry="2" />
<text  x="902.19" y="639.5" ></text>
</g>
<g >
<title>NaClValidateCode (33 samples, 0.56%)</title><rect x="110.5" y="709" width="6.7" height="15.0" fill="rgb(224,202,10)" rx="2" ry="2" />
<text  x="113.50" y="719.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.02%)</title><rect x="1189.2" y="629" width="0.2" height="15.0" fill="rgb(219,165,27)" rx="2" ry="2" />
<text  x="1192.19" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="119.0" y="213" width="0.2" height="15.0" fill="rgb(222,150,22)" rx="2" ry="2" />
<text  x="121.98" y="223.5" ></text>
</g>
<g >
<title>__udp6_lib_mcast_deliver (1 samples, 0.02%)</title><rect x="972.6" y="325" width="0.2" height="15.0" fill="rgb(216,181,40)" rx="2" ry="2" />
<text  x="975.65" y="335.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="119.0" y="229" width="0.2" height="15.0" fill="rgb(249,89,21)" rx="2" ry="2" />
<text  x="121.98" y="239.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="938.3" y="629" width="0.2" height="15.0" fill="rgb(246,79,31)" rx="2" ry="2" />
<text  x="941.34" y="639.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="899.2" y="613" width="0.2" height="15.0" fill="rgb(249,37,51)" rx="2" ry="2" />
<text  x="902.19" y="623.5" ></text>
</g>
<g >
<title>file_path (1 samples, 0.02%)</title><rect x="744.6" y="565" width="0.2" height="15.0" fill="rgb(220,189,16)" rx="2" ry="2" />
<text  x="747.60" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (3 samples, 0.05%)</title><rect x="608.8" y="565" width="0.6" height="15.0" fill="rgb(248,107,40)" rx="2" ry="2" />
<text  x="611.78" y="575.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.03%)</title><rect x="137.9" y="565" width="0.5" height="15.0" fill="rgb(209,47,20)" rx="2" ry="2" />
<text  x="140.95" y="575.5" ></text>
</g>
<g >
<title>check_tsc_unstable (1 samples, 0.02%)</title><rect x="956.9" y="709" width="0.2" height="15.0" fill="rgb(205,31,29)" rx="2" ry="2" />
<text  x="959.91" y="719.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.02%)</title><rect x="624.5" y="565" width="0.2" height="15.0" fill="rgb(248,182,8)" rx="2" ry="2" />
<text  x="627.52" y="575.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (1 samples, 0.02%)</title><rect x="899.6" y="613" width="0.2" height="15.0" fill="rgb(254,122,54)" rx="2" ry="2" />
<text  x="902.59" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (1 samples, 0.02%)</title><rect x="118.6" y="597" width="0.2" height="15.0" fill="rgb(213,162,48)" rx="2" ry="2" />
<text  x="121.58" y="607.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="608.2" y="485" width="0.2" height="15.0" fill="rgb(252,169,31)" rx="2" ry="2" />
<text  x="611.17" y="495.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="942.2" y="629" width="0.2" height="15.0" fill="rgb(243,76,8)" rx="2" ry="2" />
<text  x="945.17" y="639.5" ></text>
</g>
<g >
<title>amdgpu_irq_handler (48 samples, 0.82%)</title><rect x="960.1" y="581" width="9.7" height="15.0" fill="rgb(249,11,54)" rx="2" ry="2" />
<text  x="963.14" y="591.5" ></text>
</g>
<g >
<title>drm_sched_process_job (2 samples, 0.03%)</title><rect x="969.2" y="469" width="0.4" height="15.0" fill="rgb(254,0,54)" rx="2" ry="2" />
<text  x="972.22" y="479.5" ></text>
</g>
<g >
<title>perf_event_mmap_event (1 samples, 0.02%)</title><rect x="744.6" y="581" width="0.2" height="15.0" fill="rgb(211,13,6)" rx="2" ry="2" />
<text  x="747.60" y="591.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="118.2" y="261" width="0.2" height="15.0" fill="rgb(213,16,31)" rx="2" ry="2" />
<text  x="121.17" y="271.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (72 samples, 1.23%)</title><rect x="1169.6" y="613" width="14.5" height="15.0" fill="rgb(247,143,41)" rx="2" ry="2" />
<text  x="1172.62" y="623.5" ></text>
</g>
<g >
<title>_nc_setup_tinfo (1 samples, 0.02%)</title><rect x="10.4" y="597" width="0.2" height="15.0" fill="rgb(239,201,28)" rx="2" ry="2" />
<text  x="13.40" y="607.5" ></text>
</g>
<g >
<title>jbd2__journal_start (2 samples, 0.03%)</title><rect x="29.6" y="389" width="0.4" height="15.0" fill="rgb(249,40,47)" rx="2" ry="2" />
<text  x="32.58" y="399.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (4 samples, 0.07%)</title><rect x="964.0" y="357" width="0.8" height="15.0" fill="rgb(209,118,46)" rx="2" ry="2" />
<text  x="966.97" y="367.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="1169.4" y="549" width="0.2" height="15.0" fill="rgb(217,134,11)" rx="2" ry="2" />
<text  x="1172.42" y="559.5" ></text>
</g>
<g >
<title>timerqueue_add (2 samples, 0.03%)</title><rect x="1166.2" y="645" width="0.4" height="15.0" fill="rgb(227,69,47)" rx="2" ry="2" />
<text  x="1169.19" y="655.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="1169.2" y="485" width="0.2" height="15.0" fill="rgb(251,16,39)" rx="2" ry="2" />
<text  x="1172.21" y="495.5" ></text>
</g>
<g >
<title>vfs_iter_write (43 samples, 0.74%)</title><rect x="28.8" y="517" width="8.6" height="15.0" fill="rgb(228,103,52)" rx="2" ry="2" />
<text  x="31.77" y="527.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (109 samples, 1.86%)</title><rect x="1167.8" y="773" width="22.0" height="15.0" fill="rgb(241,66,50)" rx="2" ry="2" />
<text  x="1170.80" y="783.5" >x..</text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="944.6" y="597" width="0.2" height="15.0" fill="rgb(234,122,42)" rx="2" ry="2" />
<text  x="947.60" y="607.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (5 samples, 0.09%)</title><rect x="962.0" y="325" width="1.0" height="15.0" fill="rgb(215,131,52)" rx="2" ry="2" />
<text  x="964.95" y="335.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.02%)</title><rect x="119.8" y="405" width="0.2" height="15.0" fill="rgb(237,53,24)" rx="2" ry="2" />
<text  x="122.79" y="415.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="1169.2" y="501" width="0.2" height="15.0" fill="rgb(231,224,33)" rx="2" ry="2" />
<text  x="1172.21" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="38.5" y="661" width="0.2" height="15.0" fill="rgb(224,66,43)" rx="2" ry="2" />
<text  x="41.46" y="671.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="326.4" y="549" width="0.2" height="15.0" fill="rgb(240,107,24)" rx="2" ry="2" />
<text  x="329.44" y="559.5" ></text>
</g>
<g >
<title>pagecache_get_page (11 samples, 0.19%)</title><rect x="30.8" y="389" width="2.2" height="15.0" fill="rgb(245,221,28)" rx="2" ry="2" />
<text  x="33.79" y="399.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.02%)</title><rect x="698.6" y="709" width="0.2" height="15.0" fill="rgb(217,35,21)" rx="2" ry="2" />
<text  x="701.59" y="719.5" ></text>
</g>
<g >
<title>start_kernel (109 samples, 1.86%)</title><rect x="1167.8" y="741" width="22.0" height="15.0" fill="rgb(230,132,54)" rx="2" ry="2" />
<text  x="1170.80" y="751.5" >s..</text>
</g>
<g >
<title>get_new_window_size (1 samples, 0.02%)</title><rect x="10.4" y="677" width="0.2" height="15.0" fill="rgb(238,5,15)" rx="2" ry="2" />
<text  x="13.40" y="687.5" ></text>
</g>
<g >
<title>put_prev_task_rt (1 samples, 0.02%)</title><rect x="938.1" y="645" width="0.2" height="15.0" fill="rgb(227,210,45)" rx="2" ry="2" />
<text  x="941.14" y="655.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (9 samples, 0.15%)</title><rect x="965.2" y="389" width="1.8" height="15.0" fill="rgb(228,102,49)" rx="2" ry="2" />
<text  x="968.18" y="399.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.05%)</title><rect x="602.9" y="549" width="0.6" height="15.0" fill="rgb(218,192,27)" rx="2" ry="2" />
<text  x="605.93" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (18 samples, 0.31%)</title><rect x="594.5" y="565" width="3.6" height="15.0" fill="rgb(227,189,2)" rx="2" ry="2" />
<text  x="597.45" y="575.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (2 samples, 0.03%)</title><rect x="1166.2" y="661" width="0.4" height="15.0" fill="rgb(253,75,21)" rx="2" ry="2" />
<text  x="1169.19" y="671.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (2 samples, 0.03%)</title><rect x="1154.5" y="661" width="0.4" height="15.0" fill="rgb(210,140,23)" rx="2" ry="2" />
<text  x="1157.48" y="671.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.02%)</title><rect x="1148.6" y="661" width="0.2" height="15.0" fill="rgb(209,101,43)" rx="2" ry="2" />
<text  x="1151.63" y="671.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.02%)</title><rect x="118.6" y="453" width="0.2" height="15.0" fill="rgb(240,224,24)" rx="2" ry="2" />
<text  x="121.58" y="463.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="933.9" y="661" width="0.2" height="15.0" fill="rgb(244,142,1)" rx="2" ry="2" />
<text  x="936.90" y="671.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.02%)</title><rect x="11.0" y="693" width="0.2" height="15.0" fill="rgb(226,34,37)" rx="2" ry="2" />
<text  x="14.01" y="703.5" ></text>
</g>
<g >
<title>perf_ioctl (79 samples, 1.35%)</title><rect x="11.2" y="629" width="16.0" height="15.0" fill="rgb(208,192,33)" rx="2" ry="2" />
<text  x="14.21" y="639.5" ></text>
</g>
<g >
<title>dm_read_reg_func (5 samples, 0.09%)</title><rect x="962.0" y="373" width="1.0" height="15.0" fill="rgb(222,79,21)" rx="2" ry="2" />
<text  x="964.95" y="383.5" ></text>
</g>
<g >
<title>iovec_from_user (1 samples, 0.02%)</title><rect x="943.0" y="677" width="0.2" height="15.0" fill="rgb(243,208,7)" rx="2" ry="2" />
<text  x="945.98" y="687.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="985.4" y="629" width="0.2" height="15.0" fill="rgb(249,28,21)" rx="2" ry="2" />
<text  x="988.36" y="639.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (2 samples, 0.03%)</title><rect x="1156.3" y="645" width="0.4" height="15.0" fill="rgb(254,198,26)" rx="2" ry="2" />
<text  x="1159.30" y="655.5" ></text>
</g>
<g >
<title>vfs_write (44 samples, 0.75%)</title><rect x="28.6" y="565" width="8.8" height="15.0" fill="rgb(224,129,35)" rx="2" ry="2" />
<text  x="31.57" y="575.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (4 samples, 0.07%)</title><rect x="964.0" y="389" width="0.8" height="15.0" fill="rgb(209,164,22)" rx="2" ry="2" />
<text  x="966.97" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (19 samples, 0.32%)</title><rect x="477.0" y="565" width="3.8" height="15.0" fill="rgb(219,24,15)" rx="2" ry="2" />
<text  x="480.00" y="575.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (25 samples, 0.43%)</title><rect x="399.7" y="693" width="5.0" height="15.0" fill="rgb(240,120,16)" rx="2" ry="2" />
<text  x="402.70" y="703.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (32 samples, 0.55%)</title><rect x="483.5" y="549" width="6.4" height="15.0" fill="rgb(210,101,26)" rx="2" ry="2" />
<text  x="486.45" y="559.5" ></text>
</g>
<g >
<title>dc_commit_updates_for_stream (11 samples, 0.19%)</title><rect x="950.6" y="661" width="2.3" height="15.0" fill="rgb(205,220,19)" rx="2" ry="2" />
<text  x="953.65" y="671.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (6 samples, 0.10%)</title><rect x="1156.3" y="709" width="1.2" height="15.0" fill="rgb(250,32,6)" rx="2" ry="2" />
<text  x="1159.30" y="719.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="984.6" y="581" width="0.2" height="15.0" fill="rgb(228,91,10)" rx="2" ry="2" />
<text  x="987.55" y="591.5" ></text>
</g>
<g >
<title>dma_fence_signal_locked (2 samples, 0.03%)</title><rect x="969.2" y="485" width="0.4" height="15.0" fill="rgb(243,40,17)" rx="2" ry="2" />
<text  x="972.22" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4 samples, 0.07%)</title><rect x="1168.0" y="533" width="0.8" height="15.0" fill="rgb(251,11,14)" rx="2" ry="2" />
<text  x="1171.00" y="543.5" ></text>
</g>
<g >
<title>_raw_write_lock (1 samples, 0.02%)</title><rect x="30.2" y="341" width="0.2" height="15.0" fill="rgb(205,211,32)" rx="2" ry="2" />
<text  x="33.18" y="351.5" ></text>
</g>
<g >
<title>amdgpu_vram_mgr_bo_visible_size (1 samples, 0.02%)</title><rect x="954.5" y="629" width="0.2" height="15.0" fill="rgb(219,168,40)" rx="2" ry="2" />
<text  x="957.48" y="639.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (7 samples, 0.12%)</title><rect x="556.9" y="581" width="1.4" height="15.0" fill="rgb(238,10,12)" rx="2" ry="2" />
<text  x="559.91" y="591.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (4 samples, 0.07%)</title><rect x="972.0" y="501" width="0.8" height="15.0" fill="rgb(230,64,48)" rx="2" ry="2" />
<text  x="975.04" y="511.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.05%)</title><rect x="953.3" y="597" width="0.6" height="15.0" fill="rgb(222,201,37)" rx="2" ry="2" />
<text  x="956.27" y="607.5" ></text>
</g>
<g >
<title>rebalance_domains (9 samples, 0.15%)</title><rect x="987.2" y="565" width="1.8" height="15.0" fill="rgb(244,41,1)" rx="2" ry="2" />
<text  x="990.18" y="575.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="119.4" y="69" width="0.2" height="15.0" fill="rgb(228,86,32)" rx="2" ry="2" />
<text  x="122.38" y="79.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (3 samples, 0.05%)</title><rect x="119.2" y="357" width="0.6" height="15.0" fill="rgb(218,41,30)" rx="2" ry="2" />
<text  x="122.18" y="367.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1 samples, 0.02%)</title><rect x="98.0" y="757" width="0.2" height="15.0" fill="rgb(221,73,43)" rx="2" ry="2" />
<text  x="100.99" y="767.5" ></text>
</g>
<g >
<title>autoremove_wake_function (3 samples, 0.05%)</title><rect x="897.0" y="581" width="0.6" height="15.0" fill="rgb(216,13,33)" rx="2" ry="2" />
<text  x="899.97" y="591.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (4 samples, 0.07%)</title><rect x="119.0" y="485" width="0.8" height="15.0" fill="rgb(211,70,11)" rx="2" ry="2" />
<text  x="121.98" y="495.5" ></text>
</g>
</g>
</svg>
