<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="966.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="949" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="949" > </text>
<g id="frames">
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (27 samples, 0.66%)</title><rect x="801.3" y="693" width="7.8" height="15.0" fill="rgb(251,45,5)" rx="2" ry="2" />
<text  x="804.30" y="703.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (6 samples, 0.15%)</title><rect x="46.8" y="869" width="1.8" height="15.0" fill="rgb(209,4,45)" rx="2" ry="2" />
<text  x="49.81" y="879.5" ></text>
</g>
<g >
<title>smp_call_function_single (73 samples, 1.79%)</title><rect x="12.9" y="645" width="21.2" height="15.0" fill="rgb(206,91,8)" rx="2" ry="2" />
<text  x="15.90" y="655.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (2 samples, 0.05%)</title><rect x="952.6" y="757" width="0.6" height="15.0" fill="rgb(213,210,54)" rx="2" ry="2" />
<text  x="955.61" y="767.5" ></text>
</g>
<g >
<title>__queue_work (2 samples, 0.05%)</title><rect x="1117.5" y="613" width="0.6" height="15.0" fill="rgb(244,208,32)" rx="2" ry="2" />
<text  x="1120.54" y="623.5" ></text>
</g>
<g >
<title>cpumask_next_and (2 samples, 0.05%)</title><rect x="1155.5" y="517" width="0.6" height="15.0" fill="rgb(217,224,16)" rx="2" ry="2" />
<text  x="1158.51" y="527.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (32 samples, 0.79%)</title><rect x="1141.3" y="661" width="9.3" height="15.0" fill="rgb(244,86,49)" rx="2" ry="2" />
<text  x="1144.30" y="671.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (12 samples, 0.29%)</title><rect x="949.1" y="757" width="3.5" height="15.0" fill="rgb(244,217,3)" rx="2" ry="2" />
<text  x="952.13" y="767.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3 samples, 0.07%)</title><rect x="410.6" y="645" width="0.8" height="15.0" fill="rgb(224,149,48)" rx="2" ry="2" />
<text  x="413.58" y="655.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="1045.7" y="565" width="0.2" height="15.0" fill="rgb(218,9,34)" rx="2" ry="2" />
<text  x="1048.65" y="575.5" ></text>
</g>
<g >
<title>tick_sched_handle (19 samples, 0.47%)</title><rect x="1142.8" y="581" width="5.5" height="15.0" fill="rgb(230,67,46)" rx="2" ry="2" />
<text  x="1145.75" y="591.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.93%)</title><rect x="645.7" y="709" width="11.0" height="15.0" fill="rgb(236,9,39)" rx="2" ry="2" />
<text  x="648.65" y="719.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (42 samples, 1.03%)</title><rect x="633.5" y="693" width="12.2" height="15.0" fill="rgb(240,138,38)" rx="2" ry="2" />
<text  x="636.48" y="703.5" ></text>
</g>
<g >
<title>dispatcher (1,353 samples, 33.24%)</title><rect x="163.3" y="773" width="392.2" height="15.0" fill="rgb(205,188,23)" rx="2" ry="2" />
<text  x="166.33" y="783.5" >dispatcher</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (23 samples, 0.56%)</title><rect x="404.8" y="661" width="6.6" height="15.0" fill="rgb(226,166,28)" rx="2" ry="2" />
<text  x="407.78" y="671.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="150.0" y="453" width="0.3" height="15.0" fill="rgb(206,167,13)" rx="2" ry="2" />
<text  x="153.00" y="463.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.02%)</title><rect x="1045.7" y="741" width="0.2" height="15.0" fill="rgb(227,86,45)" rx="2" ry="2" />
<text  x="1048.65" y="751.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1103.0" y="565" width="0.3" height="15.0" fill="rgb(221,75,51)" rx="2" ry="2" />
<text  x="1106.04" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.66%)</title><rect x="801.3" y="677" width="7.8" height="15.0" fill="rgb(218,73,14)" rx="2" ry="2" />
<text  x="804.30" y="687.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="1113.5" y="757" width="0.3" height="15.0" fill="rgb(219,0,4)" rx="2" ry="2" />
<text  x="1116.48" y="767.5" ></text>
</g>
<g >
<title>bprm_execve (1 samples, 0.02%)</title><rect x="11.2" y="725" width="0.2" height="15.0" fill="rgb(211,11,31)" rx="2" ry="2" />
<text  x="14.16" y="735.5" ></text>
</g>
<g >
<title>NaClSysWrite (1,320 samples, 32.42%)</title><rect x="572.6" y="837" width="382.6" height="15.0" fill="rgb(213,96,48)" rx="2" ry="2" />
<text  x="575.61" y="847.5" >NaClSysWrite</text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="149.7" y="613" width="0.3" height="15.0" fill="rgb(233,77,2)" rx="2" ry="2" />
<text  x="152.71" y="623.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="1085.7" y="837" width="0.2" height="15.0" fill="rgb(248,160,47)" rx="2" ry="2" />
<text  x="1088.65" y="847.5" ></text>
</g>
<g >
<title>event_function_call (76 samples, 1.87%)</title><rect x="12.0" y="661" width="22.1" height="15.0" fill="rgb(235,90,3)" rx="2" ry="2" />
<text  x="15.03" y="671.5" >e..</text>
</g>
<g >
<title>__x64_sys_write (11 samples, 0.27%)</title><rect x="34.6" y="693" width="3.2" height="15.0" fill="rgb(250,7,50)" rx="2" ry="2" />
<text  x="37.64" y="703.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (9 samples, 0.22%)</title><rect x="1080.4" y="869" width="2.6" height="15.0" fill="rgb(223,34,9)" rx="2" ry="2" />
<text  x="1083.43" y="879.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (2 samples, 0.05%)</title><rect x="822.5" y="645" width="0.5" height="15.0" fill="rgb(216,11,17)" rx="2" ry="2" />
<text  x="825.46" y="655.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (19 samples, 0.47%)</title><rect x="81.9" y="853" width="5.5" height="15.0" fill="rgb(212,61,19)" rx="2" ry="2" />
<text  x="84.88" y="863.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="1100.7" y="613" width="0.3" height="15.0" fill="rgb(246,33,16)" rx="2" ry="2" />
<text  x="1103.72" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="11.2" y="757" width="0.2" height="15.0" fill="rgb(206,34,10)" rx="2" ry="2" />
<text  x="14.16" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_poll (2 samples, 0.05%)</title><rect x="38.4" y="853" width="0.6" height="15.0" fill="rgb(227,216,20)" rx="2" ry="2" />
<text  x="41.41" y="863.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (57 samples, 1.40%)</title><rect x="1141.0" y="709" width="16.5" height="15.0" fill="rgb(226,97,37)" rx="2" ry="2" />
<text  x="1144.01" y="719.5" ></text>
</g>
<g >
<title>dispatcher (7 samples, 0.17%)</title><rect x="66.2" y="869" width="2.1" height="15.0" fill="rgb(246,59,23)" rx="2" ry="2" />
<text  x="69.23" y="879.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2,959 samples, 72.68%)</title><rect x="98.1" y="869" width="857.7" height="15.0" fill="rgb(239,16,48)" rx="2" ry="2" />
<text  x="101.12" y="879.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="161.9" y="165" width="0.3" height="15.0" fill="rgb(209,172,25)" rx="2" ry="2" />
<text  x="164.88" y="175.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="821.6" y="645" width="0.3" height="15.0" fill="rgb(243,178,19)" rx="2" ry="2" />
<text  x="824.59" y="655.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.02%)</title><rect x="1136.1" y="821" width="0.3" height="15.0" fill="rgb(239,121,54)" rx="2" ry="2" />
<text  x="1139.09" y="831.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.05%)</title><rect x="1008.8" y="789" width="0.6" height="15.0" fill="rgb(213,207,30)" rx="2" ry="2" />
<text  x="1011.84" y="799.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="1112.0" y="821" width="0.3" height="15.0" fill="rgb(243,134,3)" rx="2" ry="2" />
<text  x="1115.03" y="831.5" ></text>
</g>
<g >
<title>BaseExtentionFromVEX (1 samples, 0.02%)</title><rect x="158.4" y="757" width="0.3" height="15.0" fill="rgb(220,6,4)" rx="2" ry="2" />
<text  x="161.41" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="11.2" y="773" width="0.2" height="15.0" fill="rgb(241,135,13)" rx="2" ry="2" />
<text  x="14.16" y="783.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="858.1" y="629" width="0.6" height="15.0" fill="rgb(249,163,34)" rx="2" ry="2" />
<text  x="861.12" y="639.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.02%)</title><rect x="1045.7" y="757" width="0.2" height="15.0" fill="rgb(228,124,29)" rx="2" ry="2" />
<text  x="1048.65" y="767.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (55 samples, 1.35%)</title><rect x="121.3" y="853" width="15.9" height="15.0" fill="rgb(247,99,53)" rx="2" ry="2" />
<text  x="124.30" y="863.5" ></text>
</g>
<g >
<title>rmqueue (11 samples, 0.27%)</title><rect x="1025.1" y="709" width="3.2" height="15.0" fill="rgb(221,123,42)" rx="2" ry="2" />
<text  x="1028.07" y="719.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (11 samples, 0.27%)</title><rect x="188.3" y="709" width="3.1" height="15.0" fill="rgb(209,133,19)" rx="2" ry="2" />
<text  x="191.26" y="719.5" ></text>
</g>
<g >
<title>NaClLog (6 samples, 0.15%)</title><rect x="933.8" y="757" width="1.7" height="15.0" fill="rgb(223,171,10)" rx="2" ry="2" />
<text  x="936.77" y="767.5" ></text>
</g>
<g >
<title>remote_function (2 samples, 0.05%)</title><rect x="37.8" y="725" width="0.6" height="15.0" fill="rgb(249,151,9)" rx="2" ry="2" />
<text  x="40.83" y="735.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (2 samples, 0.05%)</title><rect x="37.2" y="469" width="0.6" height="15.0" fill="rgb(212,76,15)" rx="2" ry="2" />
<text  x="40.25" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (2 samples, 0.05%)</title><rect x="163.3" y="677" width="0.6" height="15.0" fill="rgb(245,163,44)" rx="2" ry="2" />
<text  x="166.33" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="34.1" y="789" width="0.2" height="15.0" fill="rgb(216,121,16)" rx="2" ry="2" />
<text  x="37.06" y="799.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (26 samples, 0.64%)</title><rect x="908.3" y="805" width="7.5" height="15.0" fill="rgb(212,191,40)" rx="2" ry="2" />
<text  x="911.26" y="815.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (32 samples, 0.79%)</title><rect x="856.4" y="725" width="9.3" height="15.0" fill="rgb(239,155,31)" rx="2" ry="2" />
<text  x="859.38" y="735.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (3 samples, 0.07%)</title><rect x="1046.8" y="837" width="0.9" height="15.0" fill="rgb(226,180,3)" rx="2" ry="2" />
<text  x="1049.81" y="847.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1117.0" y="725" width="0.5" height="15.0" fill="rgb(222,135,35)" rx="2" ry="2" />
<text  x="1119.96" y="735.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="821.9" y="645" width="0.3" height="15.0" fill="rgb(252,65,44)" rx="2" ry="2" />
<text  x="824.88" y="655.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (11 samples, 0.27%)</title><rect x="199.0" y="693" width="3.2" height="15.0" fill="rgb(210,73,14)" rx="2" ry="2" />
<text  x="201.99" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (35 samples, 0.86%)</title><rect x="1096.7" y="869" width="10.1" height="15.0" fill="rgb(249,152,33)" rx="2" ry="2" />
<text  x="1099.67" y="879.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1111.4" y="757" width="0.3" height="15.0" fill="rgb(219,33,25)" rx="2" ry="2" />
<text  x="1114.45" y="767.5" ></text>
</g>
<g >
<title>handle_mm_fault (109 samples, 2.68%)</title><rect x="1009.4" y="821" width="31.6" height="15.0" fill="rgb(230,173,50)" rx="2" ry="2" />
<text  x="1012.42" y="831.5" >ha..</text>
</g>
<g >
<title>shmem_getpage_gfp (2 samples, 0.05%)</title><rect x="1045.1" y="565" width="0.6" height="15.0" fill="rgb(212,120,52)" rx="2" ry="2" />
<text  x="1048.07" y="575.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.02%)</title><rect x="10.9" y="821" width="0.3" height="15.0" fill="rgb(213,147,50)" rx="2" ry="2" />
<text  x="13.87" y="831.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (35 samples, 0.86%)</title><rect x="1096.7" y="837" width="10.1" height="15.0" fill="rgb(218,117,35)" rx="2" ry="2" />
<text  x="1099.67" y="847.5" ></text>
</g>
<g >
<title>CachedMapWritableText (1 samples, 0.02%)</title><rect x="149.7" y="789" width="0.3" height="15.0" fill="rgb(213,5,3)" rx="2" ry="2" />
<text  x="152.71" y="799.5" ></text>
</g>
<g >
<title>sock_alloc (1 samples, 0.02%)</title><rect x="1087.7" y="645" width="0.3" height="15.0" fill="rgb(248,228,5)" rx="2" ry="2" />
<text  x="1090.68" y="655.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (3 samples, 0.07%)</title><rect x="160.7" y="501" width="0.9" height="15.0" fill="rgb(252,203,16)" rx="2" ry="2" />
<text  x="163.72" y="511.5" ></text>
</g>
<g >
<title>__GI___mprotect (1 samples, 0.02%)</title><rect x="160.4" y="677" width="0.3" height="15.0" fill="rgb(215,42,2)" rx="2" ry="2" />
<text  x="163.43" y="687.5" ></text>
</g>
<g >
<title>__update_blocked_fair (3 samples, 0.07%)</title><rect x="1156.4" y="581" width="0.8" height="15.0" fill="rgb(226,140,42)" rx="2" ry="2" />
<text  x="1159.38" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (33 samples, 0.81%)</title><rect x="791.7" y="645" width="9.6" height="15.0" fill="rgb(209,39,51)" rx="2" ry="2" />
<text  x="794.74" y="655.5" ></text>
</g>
<g >
<title>arch_do_signal (35 samples, 0.86%)</title><rect x="1096.7" y="805" width="10.1" height="15.0" fill="rgb(254,227,53)" rx="2" ry="2" />
<text  x="1099.67" y="815.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (15 samples, 0.37%)</title><rect x="629.1" y="677" width="4.4" height="15.0" fill="rgb(247,211,54)" rx="2" ry="2" />
<text  x="632.13" y="687.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (2 samples, 0.05%)</title><rect x="1086.8" y="869" width="0.6" height="15.0" fill="rgb(205,50,30)" rx="2" ry="2" />
<text  x="1089.81" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (15 samples, 0.37%)</title><rect x="629.1" y="725" width="4.4" height="15.0" fill="rgb(210,90,35)" rx="2" ry="2" />
<text  x="632.13" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.02%)</title><rect x="1045.7" y="805" width="0.2" height="15.0" fill="rgb(207,111,6)" rx="2" ry="2" />
<text  x="1048.65" y="815.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="865.4" y="581" width="0.3" height="15.0" fill="rgb(243,218,17)" rx="2" ry="2" />
<text  x="868.36" y="591.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.02%)</title><rect x="1045.4" y="453" width="0.3" height="15.0" fill="rgb(221,162,30)" rx="2" ry="2" />
<text  x="1048.36" y="463.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (337 samples, 8.28%)</title><rect x="442.5" y="645" width="97.6" height="15.0" fill="rgb(210,180,21)" rx="2" ry="2" />
<text  x="445.46" y="655.5" >core::intri..</text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.05%)</title><rect x="1183.0" y="693" width="0.6" height="15.0" fill="rgb(252,99,47)" rx="2" ry="2" />
<text  x="1186.04" y="703.5" ></text>
</g>
<g >
<title>prep_new_page (30 samples, 0.74%)</title><rect x="1016.4" y="709" width="8.7" height="15.0" fill="rgb(251,215,4)" rx="2" ry="2" />
<text  x="1019.38" y="719.5" ></text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.02%)</title><rect x="1045.4" y="533" width="0.3" height="15.0" fill="rgb(218,159,34)" rx="2" ry="2" />
<text  x="1048.36" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="149.7" y="741" width="0.3" height="15.0" fill="rgb(230,192,5)" rx="2" ry="2" />
<text  x="152.71" y="751.5" ></text>
</g>
<g >
<title>kthread (6 samples, 0.15%)</title><rect x="1112.3" y="869" width="1.8" height="15.0" fill="rgb(232,135,20)" rx="2" ry="2" />
<text  x="1115.32" y="879.5" ></text>
</g>
<g >
<title>core::cmp::min (26 samples, 0.64%)</title><rect x="191.4" y="709" width="7.6" height="15.0" fill="rgb(221,11,39)" rx="2" ry="2" />
<text  x="194.45" y="719.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (194 samples, 4.77%)</title><rect x="673.5" y="645" width="56.2" height="15.0" fill="rgb(228,208,28)" rx="2" ry="2" />
<text  x="676.48" y="655.5" >__pth..</text>
</g>
<g >
<title>pm_qos_read_value (1 samples, 0.02%)</title><rect x="1182.8" y="709" width="0.2" height="15.0" fill="rgb(222,153,21)" rx="2" ry="2" />
<text  x="1185.75" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.27%)</title><rect x="34.6" y="725" width="3.2" height="15.0" fill="rgb(252,201,50)" rx="2" ry="2" />
<text  x="37.64" y="735.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.02%)</title><rect x="93.2" y="853" width="0.3" height="15.0" fill="rgb(229,106,52)" rx="2" ry="2" />
<text  x="96.19" y="863.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="1045.4" y="517" width="0.3" height="15.0" fill="rgb(247,75,33)" rx="2" ry="2" />
<text  x="1048.36" y="527.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.02%)</title><rect x="39.9" y="869" width="0.2" height="15.0" fill="rgb(213,13,2)" rx="2" ry="2" />
<text  x="42.86" y="879.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.05%)</title><rect x="159.9" y="773" width="0.5" height="15.0" fill="rgb(250,54,29)" rx="2" ry="2" />
<text  x="162.86" y="783.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="821.9" y="565" width="0.3" height="15.0" fill="rgb(209,222,48)" rx="2" ry="2" />
<text  x="824.88" y="575.5" ></text>
</g>
<g >
<title>_IO_new_file_init_internal (1 samples, 0.02%)</title><rect x="10.0" y="837" width="0.3" height="15.0" fill="rgb(216,172,34)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="94.3" y="853" width="0.3" height="15.0" fill="rgb(210,31,20)" rx="2" ry="2" />
<text  x="97.35" y="863.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="38.7" y="725" width="0.3" height="15.0" fill="rgb(205,0,51)" rx="2" ry="2" />
<text  x="41.70" y="735.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.02%)</title><rect x="1086.5" y="837" width="0.3" height="15.0" fill="rgb(219,121,34)" rx="2" ry="2" />
<text  x="1089.52" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.07%)</title><rect x="404.8" y="629" width="0.9" height="15.0" fill="rgb(225,181,33)" rx="2" ry="2" />
<text  x="407.78" y="639.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="162.2" y="293" width="0.3" height="15.0" fill="rgb(239,12,22)" rx="2" ry="2" />
<text  x="165.17" y="303.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (118 samples, 2.90%)</title><rect x="1007.7" y="869" width="34.2" height="15.0" fill="rgb(240,201,27)" rx="2" ry="2" />
<text  x="1010.68" y="879.5" >as..</text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (21 samples, 0.52%)</title><rect x="650.6" y="645" width="6.1" height="15.0" fill="rgb(235,76,11)" rx="2" ry="2" />
<text  x="653.58" y="655.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (19 samples, 0.47%)</title><rect x="81.9" y="837" width="5.5" height="15.0" fill="rgb(205,45,34)" rx="2" ry="2" />
<text  x="84.88" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (2 samples, 0.05%)</title><rect x="163.3" y="757" width="0.6" height="15.0" fill="rgb(248,158,36)" rx="2" ry="2" />
<text  x="166.33" y="767.5" ></text>
</g>
<g >
<title>do_user_addr_fault (115 samples, 2.82%)</title><rect x="1008.0" y="837" width="33.3" height="15.0" fill="rgb(248,8,16)" rx="2" ry="2" />
<text  x="1010.97" y="847.5" >do..</text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.02%)</title><rect x="35.5" y="421" width="0.3" height="15.0" fill="rgb(217,186,18)" rx="2" ry="2" />
<text  x="38.51" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_poll (3 samples, 0.07%)</title><rect x="1111.2" y="853" width="0.8" height="15.0" fill="rgb(225,24,28)" rx="2" ry="2" />
<text  x="1114.16" y="863.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (1 samples, 0.02%)</title><rect x="148.0" y="853" width="0.3" height="15.0" fill="rgb(218,212,3)" rx="2" ry="2" />
<text  x="150.97" y="863.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.37%)</title><rect x="629.1" y="693" width="4.4" height="15.0" fill="rgb(241,229,51)" rx="2" ry="2" />
<text  x="632.13" y="703.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.07%)</title><rect x="68.3" y="869" width="0.8" height="15.0" fill="rgb(226,204,47)" rx="2" ry="2" />
<text  x="71.26" y="879.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="162.5" y="693" width="0.3" height="15.0" fill="rgb(205,17,32)" rx="2" ry="2" />
<text  x="165.46" y="703.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.10%)</title><rect x="861.3" y="597" width="1.2" height="15.0" fill="rgb(239,77,5)" rx="2" ry="2" />
<text  x="864.30" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (816 samples, 20.04%)</title><rect x="619.9" y="757" width="236.5" height="15.0" fill="rgb(231,4,53)" rx="2" ry="2" />
<text  x="622.86" y="767.5" >rustposix::safeposix::dispatche..</text>
</g>
<g >
<title>std::sync::poison::Flag::get (1 samples, 0.02%)</title><rect x="848.8" y="677" width="0.3" height="15.0" fill="rgb(233,55,34)" rx="2" ry="2" />
<text  x="851.84" y="687.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="150.0" y="693" width="0.3" height="15.0" fill="rgb(231,4,48)" rx="2" ry="2" />
<text  x="153.00" y="703.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (20 samples, 0.49%)</title><rect x="548.8" y="677" width="5.8" height="15.0" fill="rgb(224,176,30)" rx="2" ry="2" />
<text  x="551.84" y="687.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1189.1" y="741" width="0.3" height="15.0" fill="rgb(219,164,27)" rx="2" ry="2" />
<text  x="1192.13" y="751.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.02%)</title><rect x="1106.5" y="709" width="0.3" height="15.0" fill="rgb(246,165,45)" rx="2" ry="2" />
<text  x="1109.52" y="719.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (3 samples, 0.07%)</title><rect x="1115.8" y="709" width="0.9" height="15.0" fill="rgb(243,204,13)" rx="2" ry="2" />
<text  x="1118.80" y="719.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="919.6" y="773" width="0.3" height="15.0" fill="rgb(215,30,27)" rx="2" ry="2" />
<text  x="922.57" y="783.5" ></text>
</g>
<g >
<title>execute_command (2 samples, 0.05%)</title><rect x="10.3" y="821" width="0.6" height="15.0" fill="rgb(227,125,2)" rx="2" ry="2" />
<text  x="13.29" y="831.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (1 samples, 0.02%)</title><rect x="148.6" y="853" width="0.2" height="15.0" fill="rgb(221,55,43)" rx="2" ry="2" />
<text  x="151.55" y="863.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (1,009 samples, 24.79%)</title><rect x="588.3" y="805" width="292.4" height="15.0" fill="rgb(241,43,35)" rx="2" ry="2" />
<text  x="591.26" y="815.5" >NaClHostDescWrite</text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="1117.8" y="549" width="0.3" height="15.0" fill="rgb(232,197,28)" rx="2" ry="2" />
<text  x="1120.83" y="559.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (13 samples, 0.32%)</title><rect x="1083.0" y="869" width="3.8" height="15.0" fill="rgb(210,176,27)" rx="2" ry="2" />
<text  x="1086.04" y="879.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (1 samples, 0.02%)</title><rect x="1116.4" y="597" width="0.3" height="15.0" fill="rgb(242,22,9)" rx="2" ry="2" />
<text  x="1119.38" y="607.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (2 samples, 0.05%)</title><rect x="554.9" y="741" width="0.6" height="15.0" fill="rgb(241,3,19)" rx="2" ry="2" />
<text  x="557.93" y="751.5" ></text>
</g>
<g >
<title>NaClGetDesc (122 samples, 3.00%)</title><rect x="900.1" y="821" width="35.4" height="15.0" fill="rgb(206,124,43)" rx="2" ry="2" />
<text  x="903.14" y="831.5" >Na..</text>
</g>
<g >
<title>_int_realloc (1 samples, 0.02%)</title><rect x="161.9" y="53" width="0.3" height="15.0" fill="rgb(253,179,40)" rx="2" ry="2" />
<text  x="164.88" y="63.5" ></text>
</g>
<g >
<title>rest_init (182 samples, 4.47%)</title><rect x="1137.2" y="805" width="52.8" height="15.0" fill="rgb(239,2,30)" rx="2" ry="2" />
<text  x="1140.25" y="815.5" >rest_..</text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (3 samples, 0.07%)</title><rect x="926.5" y="741" width="0.9" height="15.0" fill="rgb(241,10,11)" rx="2" ry="2" />
<text  x="929.52" y="751.5" ></text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.02%)</title><rect x="150.0" y="549" width="0.3" height="15.0" fill="rgb(248,64,39)" rx="2" ry="2" />
<text  x="153.00" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="952.3" y="741" width="0.3" height="15.0" fill="rgb(227,111,43)" rx="2" ry="2" />
<text  x="955.32" y="751.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="161.9" y="229" width="0.3" height="15.0" fill="rgb(253,88,27)" rx="2" ry="2" />
<text  x="164.88" y="239.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.86%)</title><rect x="656.7" y="709" width="10.1" height="15.0" fill="rgb(219,56,27)" rx="2" ry="2" />
<text  x="659.67" y="719.5" ></text>
</g>
<g >
<title>__do_fault (2 samples, 0.05%)</title><rect x="1045.1" y="597" width="0.6" height="15.0" fill="rgb(210,170,16)" rx="2" ry="2" />
<text  x="1048.07" y="607.5" ></text>
</g>
<g >
<title>get_page_from_freelist (42 samples, 1.03%)</title><rect x="1016.1" y="725" width="12.2" height="15.0" fill="rgb(236,68,20)" rx="2" ry="2" />
<text  x="1019.09" y="735.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.02%)</title><rect x="162.5" y="789" width="0.3" height="15.0" fill="rgb(216,101,22)" rx="2" ry="2" />
<text  x="165.46" y="799.5" ></text>
</g>
<g >
<title>[unknown]  (308 samples, 7.57%)</title><rect x="955.8" y="885" width="89.3" height="15.0" fill="rgb(222,177,1)" rx="2" ry="2" />
<text  x="958.80" y="895.5" >[unknown] </text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1157.0" y="565" width="0.2" height="15.0" fill="rgb(220,145,30)" rx="2" ry="2" />
<text  x="1159.96" y="575.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="1150.0" y="613" width="0.3" height="15.0" fill="rgb(253,227,35)" rx="2" ry="2" />
<text  x="1153.00" y="623.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.12%)</title><rect x="200.7" y="645" width="1.5" height="15.0" fill="rgb(208,53,40)" rx="2" ry="2" />
<text  x="203.72" y="655.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (35 samples, 0.86%)</title><rect x="742.8" y="645" width="10.1" height="15.0" fill="rgb(239,121,40)" rx="2" ry="2" />
<text  x="745.75" y="655.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (31 samples, 0.76%)</title><rect x="1141.3" y="645" width="9.0" height="15.0" fill="rgb(235,139,47)" rx="2" ry="2" />
<text  x="1144.30" y="655.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="10.6" y="597" width="0.3" height="15.0" fill="rgb(242,213,53)" rx="2" ry="2" />
<text  x="13.58" y="607.5" ></text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.02%)</title><rect x="163.0" y="485" width="0.3" height="15.0" fill="rgb(241,205,29)" rx="2" ry="2" />
<text  x="166.04" y="495.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="162.5" y="485" width="0.3" height="15.0" fill="rgb(250,197,30)" rx="2" ry="2" />
<text  x="165.46" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (17 samples, 0.42%)</title><rect x="624.2" y="693" width="4.9" height="15.0" fill="rgb(250,99,1)" rx="2" ry="2" />
<text  x="627.20" y="703.5" ></text>
</g>
<g >
<title>[anon] (192 samples, 4.72%)</title><rect x="40.1" y="885" width="55.7" height="15.0" fill="rgb(241,190,31)" rx="2" ry="2" />
<text  x="43.14" y="895.5" >[anon]</text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="865.4" y="629" width="0.3" height="15.0" fill="rgb(242,165,13)" rx="2" ry="2" />
<text  x="868.36" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (1 samples, 0.02%)</title><rect x="163.9" y="645" width="0.3" height="15.0" fill="rgb(228,15,51)" rx="2" ry="2" />
<text  x="166.91" y="655.5" ></text>
</g>
<g >
<title>__cmd_record (91 samples, 2.24%)</title><rect x="11.4" y="853" width="26.4" height="15.0" fill="rgb(231,197,27)" rx="2" ry="2" />
<text  x="14.45" y="863.5" >_..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="952.3" y="725" width="0.3" height="15.0" fill="rgb(244,132,32)" rx="2" ry="2" />
<text  x="955.32" y="735.5" ></text>
</g>
<g >
<title>generic_write_end (5 samples, 0.12%)</title><rect x="36.4" y="501" width="1.4" height="15.0" fill="rgb(235,196,16)" rx="2" ry="2" />
<text  x="39.38" y="511.5" ></text>
</g>
<g >
<title>begin_new_exec (1 samples, 0.02%)</title><rect x="11.2" y="661" width="0.2" height="15.0" fill="rgb(211,6,38)" rx="2" ry="2" />
<text  x="14.16" y="671.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="1045.1" y="661" width="0.6" height="15.0" fill="rgb(247,141,11)" rx="2" ry="2" />
<text  x="1048.07" y="671.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.54%)</title><rect x="809.7" y="661" width="6.4" height="15.0" fill="rgb(235,220,12)" rx="2" ry="2" />
<text  x="812.71" y="671.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (3 samples, 0.07%)</title><rect x="160.7" y="725" width="0.9" height="15.0" fill="rgb(250,183,41)" rx="2" ry="2" />
<text  x="163.72" y="735.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (2 samples, 0.05%)</title><rect x="554.9" y="709" width="0.6" height="15.0" fill="rgb(230,79,24)" rx="2" ry="2" />
<text  x="557.93" y="719.5" ></text>
</g>
<g >
<title>new_inode_pseudo (1 samples, 0.02%)</title><rect x="1087.7" y="629" width="0.3" height="15.0" fill="rgb(254,158,12)" rx="2" ry="2" />
<text  x="1090.68" y="639.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="1054.3" y="837" width="0.3" height="15.0" fill="rgb(232,138,43)" rx="2" ry="2" />
<text  x="1057.35" y="847.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="1152.6" y="597" width="0.3" height="15.0" fill="rgb(250,211,15)" rx="2" ry="2" />
<text  x="1155.61" y="607.5" ></text>
</g>
<g >
<title>ctx_resched (2 samples, 0.05%)</title><rect x="37.8" y="677" width="0.6" height="15.0" fill="rgb(214,119,34)" rx="2" ry="2" />
<text  x="40.83" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (89 samples, 2.19%)</title><rect x="823.0" y="693" width="25.8" height="15.0" fill="rgb(221,128,11)" rx="2" ry="2" />
<text  x="826.04" y="703.5" >s..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.25%)</title><rect x="856.7" y="677" width="2.9" height="15.0" fill="rgb(206,183,21)" rx="2" ry="2" />
<text  x="859.67" y="687.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="1085.9" y="837" width="0.6" height="15.0" fill="rgb(253,115,45)" rx="2" ry="2" />
<text  x="1088.94" y="847.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (2 samples, 0.05%)</title><rect x="554.9" y="757" width="0.6" height="15.0" fill="rgb(226,65,48)" rx="2" ry="2" />
<text  x="557.93" y="767.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (610 samples, 14.98%)</title><rect x="377.8" y="693" width="176.8" height="15.0" fill="rgb(217,9,7)" rx="2" ry="2" />
<text  x="380.83" y="703.5" >ringbuf::consumer::Con..</text>
</g>
<g >
<title>cpuidle_select (16 samples, 0.39%)</title><rect x="1181.3" y="741" width="4.6" height="15.0" fill="rgb(226,220,18)" rx="2" ry="2" />
<text  x="1184.30" y="751.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1 samples, 0.02%)</title><rect x="97.8" y="869" width="0.3" height="15.0" fill="rgb(228,205,1)" rx="2" ry="2" />
<text  x="100.83" y="879.5" ></text>
</g>
<g >
<title>alx_poll (3 samples, 0.07%)</title><rect x="1115.8" y="645" width="0.9" height="15.0" fill="rgb(252,144,41)" rx="2" ry="2" />
<text  x="1118.80" y="655.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.02%)</title><rect x="1106.5" y="725" width="0.3" height="15.0" fill="rgb(234,41,32)" rx="2" ry="2" />
<text  x="1109.52" y="735.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (2 samples, 0.05%)</title><rect x="955.2" y="837" width="0.6" height="15.0" fill="rgb(231,175,38)" rx="2" ry="2" />
<text  x="958.22" y="847.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1117.0" y="629" width="0.2" height="15.0" fill="rgb(251,135,11)" rx="2" ry="2" />
<text  x="1119.96" y="639.5" ></text>
</g>
<g >
<title>record__write (11 samples, 0.27%)</title><rect x="34.6" y="773" width="3.2" height="15.0" fill="rgb(252,153,25)" rx="2" ry="2" />
<text  x="37.64" y="783.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1185.1" y="645" width="0.3" height="15.0" fill="rgb(254,183,47)" rx="2" ry="2" />
<text  x="1188.07" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (33 samples, 0.81%)</title><rect x="657.2" y="661" width="9.6" height="15.0" fill="rgb(213,193,50)" rx="2" ry="2" />
<text  x="660.25" y="671.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (57 samples, 1.40%)</title><rect x="1118.4" y="773" width="16.5" height="15.0" fill="rgb(234,4,48)" rx="2" ry="2" />
<text  x="1121.41" y="783.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.05%)</title><rect x="1113.2" y="805" width="0.6" height="15.0" fill="rgb(246,5,44)" rx="2" ry="2" />
<text  x="1116.19" y="815.5" ></text>
</g>
<g >
<title>cmd_record (91 samples, 2.24%)</title><rect x="11.4" y="869" width="26.4" height="15.0" fill="rgb(254,182,17)" rx="2" ry="2" />
<text  x="14.45" y="879.5" >c..</text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="39.6" y="869" width="0.3" height="15.0" fill="rgb(241,119,13)" rx="2" ry="2" />
<text  x="42.57" y="879.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (35 samples, 0.86%)</title><rect x="1096.7" y="821" width="10.1" height="15.0" fill="rgb(205,78,43)" rx="2" ry="2" />
<text  x="1099.67" y="831.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (808 samples, 19.85%)</title><rect x="622.2" y="741" width="234.2" height="15.0" fill="rgb(253,8,48)" rx="2" ry="2" />
<text  x="625.17" y="751.5" >rustposix::safeposix::syscalls:..</text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="161.0" y="405" width="0.3" height="15.0" fill="rgb(246,51,41)" rx="2" ry="2" />
<text  x="164.01" y="415.5" ></text>
</g>
<g >
<title>pipe_write (1 samples, 0.02%)</title><rect x="1112.0" y="789" width="0.3" height="15.0" fill="rgb(227,62,16)" rx="2" ry="2" />
<text  x="1115.03" y="799.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.05%)</title><rect x="37.8" y="629" width="0.6" height="15.0" fill="rgb(253,97,40)" rx="2" ry="2" />
<text  x="40.83" y="639.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="94.3" y="837" width="0.3" height="15.0" fill="rgb(226,149,35)" rx="2" ry="2" />
<text  x="97.35" y="847.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.02%)</title><rect x="163.0" y="613" width="0.3" height="15.0" fill="rgb(228,151,45)" rx="2" ry="2" />
<text  x="166.04" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.42%)</title><rect x="624.2" y="725" width="4.9" height="15.0" fill="rgb(233,130,5)" rx="2" ry="2" />
<text  x="627.20" y="735.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (6 samples, 0.15%)</title><rect x="370.6" y="677" width="1.7" height="15.0" fill="rgb(252,212,5)" rx="2" ry="2" />
<text  x="373.58" y="687.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="161.9" y="101" width="0.3" height="15.0" fill="rgb(238,126,53)" rx="2" ry="2" />
<text  x="164.88" y="111.5" ></text>
</g>
<g >
<title>NaClTextMapClearCacheIfNeeded (1 samples, 0.02%)</title><rect x="149.7" y="805" width="0.3" height="15.0" fill="rgb(243,31,17)" rx="2" ry="2" />
<text  x="152.71" y="815.5" ></text>
</g>
<g >
<title>_perf_event_enable (76 samples, 1.87%)</title><rect x="12.0" y="677" width="22.1" height="15.0" fill="rgb(228,102,5)" rx="2" ry="2" />
<text  x="15.03" y="687.5" >_..</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.07%)</title><rect x="161.6" y="501" width="0.9" height="15.0" fill="rgb(213,122,12)" rx="2" ry="2" />
<text  x="164.59" y="511.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.02%)</title><rect x="94.1" y="821" width="0.2" height="15.0" fill="rgb(248,36,33)" rx="2" ry="2" />
<text  x="97.06" y="831.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (23 samples, 0.56%)</title><rect x="892.6" y="789" width="6.7" height="15.0" fill="rgb(242,155,16)" rx="2" ry="2" />
<text  x="895.61" y="799.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.05%)</title><rect x="35.8" y="453" width="0.6" height="15.0" fill="rgb(219,202,5)" rx="2" ry="2" />
<text  x="38.80" y="463.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (79 samples, 1.94%)</title><rect x="1054.6" y="869" width="22.9" height="15.0" fill="rgb(230,122,8)" rx="2" ry="2" />
<text  x="1057.64" y="879.5" >r..</text>
</g>
<g >
<title>ret_from_fork (6 samples, 0.15%)</title><rect x="1112.3" y="885" width="1.8" height="15.0" fill="rgb(238,216,21)" rx="2" ry="2" />
<text  x="1115.32" y="895.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="1110.6" y="741" width="0.3" height="15.0" fill="rgb(246,144,31)" rx="2" ry="2" />
<text  x="1113.58" y="751.5" ></text>
</g>
<g >
<title>main (2 samples, 0.05%)</title><rect x="10.3" y="853" width="0.6" height="15.0" fill="rgb(247,53,34)" rx="2" ry="2" />
<text  x="13.29" y="863.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="35.8" y="405" width="0.3" height="15.0" fill="rgb(227,65,19)" rx="2" ry="2" />
<text  x="38.80" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="821.9" y="597" width="0.3" height="15.0" fill="rgb(232,101,7)" rx="2" ry="2" />
<text  x="824.88" y="607.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1,379 samples, 33.87%)</title><rect x="556.1" y="853" width="399.7" height="15.0" fill="rgb(229,207,15)" rx="2" ry="2" />
<text  x="559.09" y="863.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (19 samples, 0.47%)</title><rect x="604.8" y="741" width="5.5" height="15.0" fill="rgb(233,78,34)" rx="2" ry="2" />
<text  x="607.78" y="751.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="163.3" y="741" width="0.6" height="15.0" fill="rgb(251,226,39)" rx="2" ry="2" />
<text  x="166.33" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="161.9" y="197" width="0.3" height="15.0" fill="rgb(229,66,22)" rx="2" ry="2" />
<text  x="164.88" y="207.5" ></text>
</g>
<g >
<title>handle_pte_fault (100 samples, 2.46%)</title><rect x="1011.7" y="789" width="29.0" height="15.0" fill="rgb(215,131,0)" rx="2" ry="2" />
<text  x="1014.74" y="799.5" >ha..</text>
</g>
<g >
<title>mmput (33 samples, 0.81%)</title><rect x="1096.7" y="725" width="9.5" height="15.0" fill="rgb(211,158,42)" rx="2" ry="2" />
<text  x="1099.67" y="735.5" ></text>
</g>
<g >
<title>exc_page_fault (2 samples, 0.05%)</title><rect x="159.9" y="789" width="0.5" height="15.0" fill="rgb(236,37,30)" rx="2" ry="2" />
<text  x="162.86" y="799.5" ></text>
</g>
<g >
<title>menu_select (2 samples, 0.05%)</title><rect x="1134.9" y="789" width="0.6" height="15.0" fill="rgb(220,129,17)" rx="2" ry="2" />
<text  x="1137.93" y="799.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 1.57%)</title><rect x="15.5" y="517" width="18.6" height="15.0" fill="rgb(253,75,30)" rx="2" ry="2" />
<text  x="18.51" y="527.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="864.2" y="661" width="0.3" height="15.0" fill="rgb(247,205,34)" rx="2" ry="2" />
<text  x="867.20" y="671.5" ></text>
</g>
<g >
<title>mprotect_fixup (1 samples, 0.02%)</title><rect x="160.4" y="597" width="0.3" height="15.0" fill="rgb(217,172,34)" rx="2" ry="2" />
<text  x="163.43" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.86%)</title><rect x="1096.7" y="885" width="10.1" height="15.0" fill="rgb(235,122,13)" rx="2" ry="2" />
<text  x="1099.67" y="895.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (3 samples, 0.07%)</title><rect x="160.7" y="709" width="0.9" height="15.0" fill="rgb(238,125,40)" rx="2" ry="2" />
<text  x="163.72" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1 samples, 0.02%)</title><rect x="822.2" y="661" width="0.3" height="15.0" fill="rgb(232,198,34)" rx="2" ry="2" />
<text  x="825.17" y="671.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.02%)</title><rect x="1039.0" y="725" width="0.3" height="15.0" fill="rgb(253,166,11)" rx="2" ry="2" />
<text  x="1041.99" y="735.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.02%)</title><rect x="34.1" y="821" width="0.2" height="15.0" fill="rgb(250,57,19)" rx="2" ry="2" />
<text  x="37.06" y="831.5" ></text>
</g>
<g >
<title>Rel32Operand (1 samples, 0.02%)</title><rect x="159.6" y="757" width="0.3" height="15.0" fill="rgb(247,209,43)" rx="2" ry="2" />
<text  x="162.57" y="767.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="821.9" y="581" width="0.3" height="15.0" fill="rgb(211,80,29)" rx="2" ry="2" />
<text  x="824.88" y="591.5" ></text>
</g>
<g >
<title>process_vm_writev (2 samples, 0.05%)</title><rect x="1045.1" y="837" width="0.6" height="15.0" fill="rgb(226,172,0)" rx="2" ry="2" />
<text  x="1048.07" y="847.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (26 samples, 0.64%)</title><rect x="848.8" y="725" width="7.6" height="15.0" fill="rgb(249,117,15)" rx="2" ry="2" />
<text  x="851.84" y="735.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="345.1" y="661" width="0.3" height="15.0" fill="rgb(239,104,5)" rx="2" ry="2" />
<text  x="348.07" y="671.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect x="161.9" y="357" width="0.3" height="15.0" fill="rgb(230,122,2)" rx="2" ry="2" />
<text  x="164.88" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (105 samples, 2.58%)</title><rect x="1010.6" y="805" width="30.4" height="15.0" fill="rgb(231,107,25)" rx="2" ry="2" />
<text  x="1013.58" y="815.5" >__..</text>
</g>
<g >
<title>perf_evsel__run_ioctl (78 samples, 1.92%)</title><rect x="11.4" y="805" width="22.7" height="15.0" fill="rgb(206,103,14)" rx="2" ry="2" />
<text  x="14.45" y="815.5" >p..</text>
</g>
<g >
<title>zap_pte_range (33 samples, 0.81%)</title><rect x="1096.7" y="645" width="9.5" height="15.0" fill="rgb(243,140,44)" rx="2" ry="2" />
<text  x="1099.67" y="655.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="10.0" y="773" width="0.3" height="15.0" fill="rgb(234,166,20)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (3 samples, 0.07%)</title><rect x="161.6" y="517" width="0.9" height="15.0" fill="rgb(234,31,2)" rx="2" ry="2" />
<text  x="164.59" y="527.5" ></text>
</g>
<g >
<title>shmem_fault (2 samples, 0.05%)</title><rect x="1045.1" y="581" width="0.6" height="15.0" fill="rgb(213,40,5)" rx="2" ry="2" />
<text  x="1048.07" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (2 samples, 0.05%)</title><rect x="1085.9" y="853" width="0.6" height="15.0" fill="rgb(236,158,42)" rx="2" ry="2" />
<text  x="1088.94" y="863.5" ></text>
</g>
<g >
<title>pagecache_get_page (4 samples, 0.10%)</title><rect x="35.2" y="485" width="1.2" height="15.0" fill="rgb(238,225,18)" rx="2" ry="2" />
<text  x="38.22" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.22%)</title><rect x="818.4" y="613" width="2.6" height="15.0" fill="rgb(237,223,39)" rx="2" ry="2" />
<text  x="821.41" y="623.5" ></text>
</g>
<g >
<title>Process0Operands (1 samples, 0.02%)</title><rect x="159.0" y="757" width="0.3" height="15.0" fill="rgb(247,156,51)" rx="2" ry="2" />
<text  x="161.99" y="767.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1111.4" y="773" width="0.3" height="15.0" fill="rgb(221,2,50)" rx="2" ry="2" />
<text  x="1114.45" y="783.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.02%)</title><rect x="163.0" y="501" width="0.3" height="15.0" fill="rgb(239,14,9)" rx="2" ry="2" />
<text  x="166.04" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="162.2" y="245" width="0.3" height="15.0" fill="rgb(246,61,44)" rx="2" ry="2" />
<text  x="165.17" y="255.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (5 samples, 0.12%)</title><rect x="1146.5" y="517" width="1.5" height="15.0" fill="rgb(233,173,37)" rx="2" ry="2" />
<text  x="1149.52" y="527.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (1,019 samples, 25.03%)</title><rect x="585.4" y="821" width="295.3" height="15.0" fill="rgb(223,140,45)" rx="2" ry="2" />
<text  x="588.36" y="831.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.17%)</title><rect x="1110.3" y="885" width="2.0" height="15.0" fill="rgb(215,46,13)" rx="2" ry="2" />
<text  x="1113.29" y="895.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (20 samples, 0.49%)</title><rect x="87.4" y="869" width="5.8" height="15.0" fill="rgb(221,38,35)" rx="2" ry="2" />
<text  x="90.39" y="879.5" ></text>
</g>
<g >
<title>CopyBundleTails (3 samples, 0.07%)</title><rect x="148.8" y="789" width="0.9" height="15.0" fill="rgb(228,144,17)" rx="2" ry="2" />
<text  x="151.84" y="799.5" ></text>
</g>
<g >
<title>start_kernel (182 samples, 4.47%)</title><rect x="1137.2" y="837" width="52.8" height="15.0" fill="rgb(245,17,4)" rx="2" ry="2" />
<text  x="1140.25" y="847.5" >start..</text>
</g>
<g >
<title>shmem_fault (1 samples, 0.02%)</title><rect x="150.0" y="581" width="0.3" height="15.0" fill="rgb(252,145,39)" rx="2" ry="2" />
<text  x="153.00" y="591.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="345.1" y="501" width="0.3" height="15.0" fill="rgb(207,182,9)" rx="2" ry="2" />
<text  x="348.07" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="11.2" y="885" width="0.2" height="15.0" fill="rgb(221,208,19)" rx="2" ry="2" />
<text  x="14.16" y="895.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.10%)</title><rect x="1112.6" y="821" width="1.2" height="15.0" fill="rgb(236,175,46)" rx="2" ry="2" />
<text  x="1115.61" y="831.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (13 samples, 0.32%)</title><rect x="1030.6" y="757" width="3.7" height="15.0" fill="rgb(218,46,1)" rx="2" ry="2" />
<text  x="1033.58" y="767.5" ></text>
</g>
<g >
<title>irq_enter_rcu (6 samples, 0.15%)</title><rect x="1150.6" y="677" width="1.7" height="15.0" fill="rgb(241,103,17)" rx="2" ry="2" />
<text  x="1153.58" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (2 samples, 0.05%)</title><rect x="37.8" y="853" width="0.6" height="15.0" fill="rgb(247,61,20)" rx="2" ry="2" />
<text  x="40.83" y="863.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (3 samples, 0.07%)</title><rect x="161.6" y="581" width="0.9" height="15.0" fill="rgb(228,123,26)" rx="2" ry="2" />
<text  x="164.59" y="591.5" ></text>
</g>
<g >
<title>alloc_buffer_head (1 samples, 0.02%)</title><rect x="34.9" y="453" width="0.3" height="15.0" fill="rgb(253,49,6)" rx="2" ry="2" />
<text  x="37.93" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.37%)</title><rect x="646.2" y="661" width="4.4" height="15.0" fill="rgb(214,75,21)" rx="2" ry="2" />
<text  x="649.23" y="671.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (65 samples, 1.60%)</title><rect x="881.0" y="805" width="18.9" height="15.0" fill="rgb(223,170,40)" rx="2" ry="2" />
<text  x="884.01" y="815.5" ></text>
</g>
<g >
<title>cpu_startup_entry (182 samples, 4.47%)</title><rect x="1137.2" y="789" width="52.8" height="15.0" fill="rgb(213,78,4)" rx="2" ry="2" />
<text  x="1140.25" y="799.5" >cpu_s..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="1032.6" y="677" width="0.3" height="15.0" fill="rgb(239,90,46)" rx="2" ry="2" />
<text  x="1035.61" y="687.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (4 samples, 0.10%)</title><rect x="672.3" y="693" width="1.2" height="15.0" fill="rgb(235,199,54)" rx="2" ry="2" />
<text  x="675.32" y="703.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (87 samples, 2.14%)</title><rect x="729.7" y="693" width="25.2" height="15.0" fill="rgb(247,175,3)" rx="2" ry="2" />
<text  x="732.71" y="703.5" >r..</text>
</g>
<g >
<title>newidle_balance (3 samples, 0.07%)</title><rect x="1187.7" y="709" width="0.9" height="15.0" fill="rgb(234,149,27)" rx="2" ry="2" />
<text  x="1190.68" y="719.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (3 samples, 0.07%)</title><rect x="848.8" y="709" width="0.9" height="15.0" fill="rgb(207,52,21)" rx="2" ry="2" />
<text  x="851.84" y="719.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.25%)</title><rect x="856.7" y="693" width="2.9" height="15.0" fill="rgb(210,156,36)" rx="2" ry="2" />
<text  x="859.67" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="163.0" y="693" width="0.3" height="15.0" fill="rgb(232,214,17)" rx="2" ry="2" />
<text  x="166.04" y="703.5" ></text>
</g>
<g >
<title>NaClLogUnlock (2 samples, 0.05%)</title><rect x="953.8" y="821" width="0.5" height="15.0" fill="rgb(250,100,25)" rx="2" ry="2" />
<text  x="956.77" y="831.5" ></text>
</g>
<g >
<title>ndisc_rcv (1 samples, 0.02%)</title><rect x="1116.4" y="437" width="0.3" height="15.0" fill="rgb(238,81,46)" rx="2" ry="2" />
<text  x="1119.38" y="447.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.05%)</title><rect x="1117.5" y="725" width="0.6" height="15.0" fill="rgb(248,51,34)" rx="2" ry="2" />
<text  x="1120.54" y="735.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.05%)</title><rect x="1117.0" y="693" width="0.5" height="15.0" fill="rgb(242,173,54)" rx="2" ry="2" />
<text  x="1119.96" y="703.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (1 samples, 0.02%)</title><rect x="42.2" y="869" width="0.3" height="15.0" fill="rgb(253,18,52)" rx="2" ry="2" />
<text  x="45.17" y="879.5" ></text>
</g>
<g >
<title>do_shared_fault (1 samples, 0.02%)</title><rect x="150.0" y="613" width="0.3" height="15.0" fill="rgb(207,44,37)" rx="2" ry="2" />
<text  x="153.00" y="623.5" ></text>
</g>
<g >
<title>[[heap]] (1 samples, 0.02%)</title><rect x="39.6" y="885" width="0.3" height="15.0" fill="rgb(234,171,36)" rx="2" ry="2" />
<text  x="42.57" y="895.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.10%)</title><rect x="856.7" y="645" width="1.1" height="15.0" fill="rgb(208,151,18)" rx="2" ry="2" />
<text  x="859.67" y="655.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (35 samples, 0.86%)</title><rect x="1096.7" y="853" width="10.1" height="15.0" fill="rgb(221,144,38)" rx="2" ry="2" />
<text  x="1099.67" y="863.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (29 samples, 0.71%)</title><rect x="1088.3" y="885" width="8.4" height="15.0" fill="rgb(243,78,19)" rx="2" ry="2" />
<text  x="1091.26" y="895.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="150.0" y="485" width="0.3" height="15.0" fill="rgb(224,7,43)" rx="2" ry="2" />
<text  x="153.00" y="495.5" ></text>
</g>
<g >
<title>dispatcher (6 samples, 0.15%)</title><rect x="1052.0" y="869" width="1.8" height="15.0" fill="rgb(229,25,3)" rx="2" ry="2" />
<text  x="1055.03" y="879.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (629 samples, 15.45%)</title><rect x="372.3" y="709" width="182.3" height="15.0" fill="rgb(221,59,53)" rx="2" ry="2" />
<text  x="375.32" y="719.5" >ringbuf::consumer::Cons..</text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="159.3" y="709" width="0.3" height="15.0" fill="rgb(250,191,21)" rx="2" ry="2" />
<text  x="162.28" y="719.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (12 samples, 0.29%)</title><rect x="817.5" y="629" width="3.5" height="15.0" fill="rgb(244,96,2)" rx="2" ry="2" />
<text  x="820.54" y="639.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="345.1" y="629" width="0.3" height="15.0" fill="rgb(252,194,7)" rx="2" ry="2" />
<text  x="348.07" y="639.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (47 samples, 1.15%)</title><rect x="558.1" y="837" width="13.6" height="15.0" fill="rgb(254,205,13)" rx="2" ry="2" />
<text  x="561.12" y="847.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="1137.0" y="757" width="0.2" height="15.0" fill="rgb(245,49,9)" rx="2" ry="2" />
<text  x="1139.96" y="767.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (2 samples, 0.05%)</title><rect x="1117.5" y="629" width="0.6" height="15.0" fill="rgb(224,171,30)" rx="2" ry="2" />
<text  x="1120.54" y="639.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.02%)</title><rect x="1113.5" y="725" width="0.3" height="15.0" fill="rgb(248,198,8)" rx="2" ry="2" />
<text  x="1116.48" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="34.1" y="805" width="0.2" height="15.0" fill="rgb(220,143,4)" rx="2" ry="2" />
<text  x="37.06" y="815.5" ></text>
</g>
<g >
<title>vfs_write (11 samples, 0.27%)</title><rect x="34.6" y="661" width="3.2" height="15.0" fill="rgb(214,19,32)" rx="2" ry="2" />
<text  x="37.64" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (2 samples, 0.05%)</title><rect x="864.8" y="629" width="0.6" height="15.0" fill="rgb(226,181,5)" rx="2" ry="2" />
<text  x="867.78" y="639.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.05%)</title><rect x="864.8" y="613" width="0.6" height="15.0" fill="rgb(243,14,0)" rx="2" ry="2" />
<text  x="867.78" y="623.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (3 samples, 0.07%)</title><rect x="1046.8" y="821" width="0.9" height="15.0" fill="rgb(221,215,12)" rx="2" ry="2" />
<text  x="1049.81" y="831.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (1 samples, 0.02%)</title><rect x="570.0" y="773" width="0.3" height="15.0" fill="rgb(250,131,26)" rx="2" ry="2" />
<text  x="573.00" y="783.5" ></text>
</g>
<g >
<title>sync_regs (10 samples, 0.25%)</title><rect x="1042.2" y="869" width="2.9" height="15.0" fill="rgb(238,58,12)" rx="2" ry="2" />
<text  x="1045.17" y="879.5" ></text>
</g>
<g >
<title>page_remove_rmap (4 samples, 0.10%)</title><rect x="1100.1" y="629" width="1.2" height="15.0" fill="rgb(227,23,7)" rx="2" ry="2" />
<text  x="1103.14" y="639.5" ></text>
</g>
<g >
<title>try_charge (5 samples, 0.12%)</title><rect x="1038.1" y="741" width="1.5" height="15.0" fill="rgb(213,215,17)" rx="2" ry="2" />
<text  x="1041.12" y="751.5" ></text>
</g>
<g >
<title>ext4_da_write_end (5 samples, 0.12%)</title><rect x="36.4" y="517" width="1.4" height="15.0" fill="rgb(254,185,26)" rx="2" ry="2" />
<text  x="39.38" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.15%)</title><rect x="857.8" y="645" width="1.8" height="15.0" fill="rgb(215,127,36)" rx="2" ry="2" />
<text  x="860.83" y="655.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="38.7" y="805" width="0.3" height="15.0" fill="rgb(238,164,1)" rx="2" ry="2" />
<text  x="41.70" y="815.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.02%)</title><rect x="1106.5" y="565" width="0.3" height="15.0" fill="rgb(253,132,34)" rx="2" ry="2" />
<text  x="1109.52" y="575.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (4 samples, 0.10%)</title><rect x="1039.6" y="757" width="1.1" height="15.0" fill="rgb(250,216,5)" rx="2" ry="2" />
<text  x="1042.57" y="767.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (4 samples, 0.10%)</title><rect x="1150.6" y="661" width="1.1" height="15.0" fill="rgb(218,227,39)" rx="2" ry="2" />
<text  x="1153.58" y="671.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="149.7" y="629" width="0.3" height="15.0" fill="rgb(209,140,28)" rx="2" ry="2" />
<text  x="152.71" y="639.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1180.4" y="709" width="0.3" height="15.0" fill="rgb(228,62,22)" rx="2" ry="2" />
<text  x="1183.43" y="719.5" ></text>
</g>
<g >
<title>NaClLogLock (26 samples, 0.64%)</title><rect x="939.6" y="805" width="7.5" height="15.0" fill="rgb(242,210,10)" rx="2" ry="2" />
<text  x="942.57" y="815.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (11 samples, 0.27%)</title><rect x="34.6" y="549" width="3.2" height="15.0" fill="rgb(242,121,5)" rx="2" ry="2" />
<text  x="37.64" y="559.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (3 samples, 0.07%)</title><rect x="161.6" y="693" width="0.9" height="15.0" fill="rgb(234,77,43)" rx="2" ry="2" />
<text  x="164.59" y="703.5" ></text>
</g>
<g >
<title>NaClSimpleServiceCtor (1 samples, 0.02%)</title><rect x="1087.7" y="789" width="0.3" height="15.0" fill="rgb(219,76,24)" rx="2" ry="2" />
<text  x="1090.68" y="799.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.02%)</title><rect x="162.5" y="245" width="0.3" height="15.0" fill="rgb(241,28,50)" rx="2" ry="2" />
<text  x="165.46" y="255.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="1106.5" y="693" width="0.3" height="15.0" fill="rgb(206,34,23)" rx="2" ry="2" />
<text  x="1109.52" y="703.5" ></text>
</g>
<g >
<title>create_empty_buffers (1 samples, 0.02%)</title><rect x="34.9" y="485" width="0.3" height="15.0" fill="rgb(234,111,17)" rx="2" ry="2" />
<text  x="37.93" y="495.5" ></text>
</g>
<g >
<title>perf (95 samples, 2.33%)</title><rect x="11.4" y="901" width="27.6" height="15.0" fill="rgb(251,16,22)" rx="2" ry="2" />
<text  x="14.45" y="911.5" >p..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (3 samples, 0.07%)</title><rect x="161.6" y="421" width="0.9" height="15.0" fill="rgb(231,46,40)" rx="2" ry="2" />
<text  x="164.59" y="431.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (18 samples, 0.44%)</title><rect x="1152.3" y="645" width="5.2" height="15.0" fill="rgb(243,49,36)" rx="2" ry="2" />
<text  x="1155.32" y="655.5" ></text>
</g>
<g >
<title>cpuidle_select (2 samples, 0.05%)</title><rect x="1134.9" y="805" width="0.6" height="15.0" fill="rgb(222,154,15)" rx="2" ry="2" />
<text  x="1137.93" y="815.5" ></text>
</g>
<g >
<title>NaClValidateCode (3 samples, 0.07%)</title><rect x="1046.8" y="789" width="0.9" height="15.0" fill="rgb(237,201,4)" rx="2" ry="2" />
<text  x="1049.81" y="799.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (20 samples, 0.49%)</title><rect x="874.3" y="693" width="5.8" height="15.0" fill="rgb(250,147,33)" rx="2" ry="2" />
<text  x="877.35" y="703.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.07%)</title><rect x="1115.8" y="693" width="0.9" height="15.0" fill="rgb(209,122,30)" rx="2" ry="2" />
<text  x="1118.80" y="703.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.12%)</title><rect x="812.3" y="597" width="1.5" height="15.0" fill="rgb(216,118,41)" rx="2" ry="2" />
<text  x="815.32" y="607.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (1 samples, 0.02%)</title><rect x="1054.1" y="821" width="0.2" height="15.0" fill="rgb(217,71,10)" rx="2" ry="2" />
<text  x="1057.06" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.17%)</title><rect x="1110.3" y="869" width="2.0" height="15.0" fill="rgb(252,225,35)" rx="2" ry="2" />
<text  x="1113.29" y="879.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.02%)</title><rect x="163.9" y="677" width="0.3" height="15.0" fill="rgb(240,23,16)" rx="2" ry="2" />
<text  x="166.91" y="687.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1187.1" y="725" width="0.3" height="15.0" fill="rgb(222,176,13)" rx="2" ry="2" />
<text  x="1190.10" y="735.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (6 samples, 0.15%)</title><rect x="1028.8" y="757" width="1.8" height="15.0" fill="rgb(216,180,17)" rx="2" ry="2" />
<text  x="1031.84" y="767.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="162.5" y="229" width="0.3" height="15.0" fill="rgb(249,103,9)" rx="2" ry="2" />
<text  x="165.46" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="1045.7" y="629" width="0.2" height="15.0" fill="rgb(234,117,42)" rx="2" ry="2" />
<text  x="1048.65" y="639.5" ></text>
</g>
<g >
<title>_rl_init_terminal_io (2 samples, 0.05%)</title><rect x="10.3" y="741" width="0.6" height="15.0" fill="rgb(240,216,17)" rx="2" ry="2" />
<text  x="13.29" y="751.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (2 samples, 0.05%)</title><rect x="1103.3" y="581" width="0.6" height="15.0" fill="rgb(249,195,3)" rx="2" ry="2" />
<text  x="1106.33" y="591.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="1008.8" y="693" width="0.3" height="15.0" fill="rgb(241,9,34)" rx="2" ry="2" />
<text  x="1011.84" y="703.5" ></text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.05%)</title><rect x="849.1" y="677" width="0.6" height="15.0" fill="rgb(237,65,21)" rx="2" ry="2" />
<text  x="852.13" y="687.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (11 samples, 0.27%)</title><rect x="34.6" y="565" width="3.2" height="15.0" fill="rgb(212,133,1)" rx="2" ry="2" />
<text  x="37.64" y="575.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.02%)</title><rect x="35.2" y="453" width="0.3" height="15.0" fill="rgb(241,191,16)" rx="2" ry="2" />
<text  x="38.22" y="463.5" ></text>
</g>
<g >
<title>[perf-34208.map] (4 samples, 0.10%)</title><rect x="95.8" y="885" width="1.2" height="15.0" fill="rgb(209,217,49)" rx="2" ry="2" />
<text  x="98.80" y="895.5" ></text>
</g>
<g >
<title>alloc_pages_vma (49 samples, 1.20%)</title><rect x="1014.6" y="757" width="14.2" height="15.0" fill="rgb(231,39,54)" rx="2" ry="2" />
<text  x="1017.64" y="767.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (78 samples, 1.92%)</title><rect x="11.4" y="821" width="22.7" height="15.0" fill="rgb(226,43,30)" rx="2" ry="2" />
<text  x="14.45" y="831.5" >p..</text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (1 samples, 0.02%)</title><rect x="150.0" y="773" width="0.3" height="15.0" fill="rgb(233,185,43)" rx="2" ry="2" />
<text  x="153.00" y="783.5" ></text>
</g>
<g >
<title>exit_mmap (33 samples, 0.81%)</title><rect x="1096.7" y="709" width="9.5" height="15.0" fill="rgb(233,77,4)" rx="2" ry="2" />
<text  x="1099.67" y="719.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (17 samples, 0.42%)</title><rect x="1101.3" y="629" width="4.9" height="15.0" fill="rgb(207,28,6)" rx="2" ry="2" />
<text  x="1104.30" y="639.5" ></text>
</g>
<g >
<title>ipv6_list_rcv (1 samples, 0.02%)</title><rect x="1116.4" y="565" width="0.3" height="15.0" fill="rgb(212,143,13)" rx="2" ry="2" />
<text  x="1119.38" y="575.5" ></text>
</g>
<g >
<title>__xa_set_mark (1 samples, 0.02%)</title><rect x="36.7" y="437" width="0.3" height="15.0" fill="rgb(252,190,10)" rx="2" ry="2" />
<text  x="39.67" y="447.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="68.0" y="853" width="0.3" height="15.0" fill="rgb(229,84,29)" rx="2" ry="2" />
<text  x="70.97" y="863.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.20%)</title><rect x="863.3" y="709" width="2.4" height="15.0" fill="rgb(252,99,6)" rx="2" ry="2" />
<text  x="866.33" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1045.7" y="837" width="0.2" height="15.0" fill="rgb(232,93,14)" rx="2" ry="2" />
<text  x="1048.65" y="847.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="810.6" y="597" width="0.8" height="15.0" fill="rgb(223,16,49)" rx="2" ry="2" />
<text  x="813.58" y="607.5" ></text>
</g>
<g >
<title>ksys_write (3 samples, 0.07%)</title><rect x="160.7" y="597" width="0.9" height="15.0" fill="rgb(225,18,51)" rx="2" ry="2" />
<text  x="163.72" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.02%)</title><rect x="162.5" y="661" width="0.3" height="15.0" fill="rgb(212,112,2)" rx="2" ry="2" />
<text  x="165.46" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="908.8" y="789" width="0.3" height="15.0" fill="rgb(207,211,29)" rx="2" ry="2" />
<text  x="911.84" y="799.5" ></text>
</g>
<g >
<title>event_function (2 samples, 0.05%)</title><rect x="37.8" y="709" width="0.6" height="15.0" fill="rgb(248,33,43)" rx="2" ry="2" />
<text  x="40.83" y="719.5" ></text>
</g>
<g >
<title>vfs_iter_write (11 samples, 0.27%)</title><rect x="34.6" y="613" width="3.2" height="15.0" fill="rgb(205,119,11)" rx="2" ry="2" />
<text  x="37.64" y="623.5" ></text>
</g>
<g >
<title>asm_common_interrupt (7 samples, 0.17%)</title><rect x="1114.6" y="773" width="2.1" height="15.0" fill="rgb(243,29,15)" rx="2" ry="2" />
<text  x="1117.64" y="783.5" ></text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.02%)</title><rect x="1101.0" y="613" width="0.3" height="15.0" fill="rgb(231,47,21)" rx="2" ry="2" />
<text  x="1104.01" y="623.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (24 samples, 0.59%)</title><rect x="856.4" y="709" width="6.9" height="15.0" fill="rgb(246,0,53)" rx="2" ry="2" />
<text  x="859.38" y="719.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.02%)</title><rect x="1146.2" y="533" width="0.3" height="15.0" fill="rgb(220,179,30)" rx="2" ry="2" />
<text  x="1149.23" y="543.5" ></text>
</g>
<g >
<title>[sel_ldr] (2,963 samples, 72.78%)</title><rect x="97.0" y="885" width="858.8" height="15.0" fill="rgb(239,195,40)" rx="2" ry="2" />
<text  x="99.96" y="895.5" >[sel_ldr]</text>
</g>
<g >
<title>worker_thread (6 samples, 0.15%)</title><rect x="1112.3" y="853" width="1.8" height="15.0" fill="rgb(211,202,52)" rx="2" ry="2" />
<text  x="1115.32" y="863.5" ></text>
</g>
<g >
<title>kthread_data (1 samples, 0.02%)</title><rect x="1113.8" y="821" width="0.3" height="15.0" fill="rgb(214,7,6)" rx="2" ry="2" />
<text  x="1116.77" y="831.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.02%)</title><rect x="10.6" y="693" width="0.3" height="15.0" fill="rgb(241,171,10)" rx="2" ry="2" />
<text  x="13.58" y="703.5" ></text>
</g>
<g >
<title>unmap_single_vma (33 samples, 0.81%)</title><rect x="1096.7" y="677" width="9.5" height="15.0" fill="rgb(253,133,12)" rx="2" ry="2" />
<text  x="1099.67" y="687.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.07%)</title><rect x="816.7" y="629" width="0.8" height="15.0" fill="rgb(225,108,16)" rx="2" ry="2" />
<text  x="819.67" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (8 samples, 0.20%)</title><rect x="202.2" y="693" width="2.3" height="15.0" fill="rgb(248,185,35)" rx="2" ry="2" />
<text  x="205.17" y="703.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (2 samples, 0.05%)</title><rect x="1045.1" y="725" width="0.6" height="15.0" fill="rgb(246,215,10)" rx="2" ry="2" />
<text  x="1048.07" y="735.5" ></text>
</g>
<g >
<title>find_busiest_group (7 samples, 0.17%)</title><rect x="1154.1" y="565" width="2.0" height="15.0" fill="rgb(233,2,6)" rx="2" ry="2" />
<text  x="1157.06" y="575.5" ></text>
</g>
<g >
<title>generic_write_end (1 samples, 0.02%)</title><rect x="161.3" y="421" width="0.3" height="15.0" fill="rgb(252,15,44)" rx="2" ry="2" />
<text  x="164.30" y="431.5" ></text>
</g>
<g >
<title>rcu_pending (2 samples, 0.05%)</title><rect x="1145.1" y="533" width="0.6" height="15.0" fill="rgb(250,3,10)" rx="2" ry="2" />
<text  x="1148.07" y="543.5" ></text>
</g>
<g >
<title>generic_perform_write (3 samples, 0.07%)</title><rect x="160.7" y="453" width="0.9" height="15.0" fill="rgb(233,202,51)" rx="2" ry="2" />
<text  x="163.72" y="463.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (1 samples, 0.02%)</title><rect x="1137.0" y="773" width="0.2" height="15.0" fill="rgb(249,216,48)" rx="2" ry="2" />
<text  x="1139.96" y="783.5" ></text>
</g>
<g >
<title>__GI___mmap64 (1 samples, 0.02%)</title><rect x="163.0" y="725" width="0.3" height="15.0" fill="rgb(231,53,51)" rx="2" ry="2" />
<text  x="166.04" y="735.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (8 samples, 0.20%)</title><rect x="90.9" y="805" width="2.3" height="15.0" fill="rgb(212,48,12)" rx="2" ry="2" />
<text  x="93.87" y="815.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 1.03%)</title><rect x="633.5" y="709" width="12.2" height="15.0" fill="rgb(246,214,15)" rx="2" ry="2" />
<text  x="636.48" y="719.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (1 samples, 0.02%)</title><rect x="1106.2" y="709" width="0.3" height="15.0" fill="rgb(208,166,51)" rx="2" ry="2" />
<text  x="1109.23" y="719.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.02%)</title><rect x="149.7" y="597" width="0.3" height="15.0" fill="rgb(250,100,15)" rx="2" ry="2" />
<text  x="152.71" y="607.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="864.8" y="597" width="0.6" height="15.0" fill="rgb(227,215,48)" rx="2" ry="2" />
<text  x="867.78" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.37%)</title><rect x="629.1" y="709" width="4.4" height="15.0" fill="rgb(211,184,36)" rx="2" ry="2" />
<text  x="632.13" y="719.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="161.9" y="37" width="0.3" height="15.0" fill="rgb(214,203,34)" rx="2" ry="2" />
<text  x="164.88" y="47.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="159.3" y="741" width="0.3" height="15.0" fill="rgb(218,128,18)" rx="2" ry="2" />
<text  x="162.28" y="751.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="37.2" y="453" width="0.3" height="15.0" fill="rgb(214,165,15)" rx="2" ry="2" />
<text  x="40.25" y="463.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (3 samples, 0.07%)</title><rect x="1179.6" y="709" width="0.8" height="15.0" fill="rgb(207,184,25)" rx="2" ry="2" />
<text  x="1182.57" y="719.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 0.02%)</title><rect x="1099.9" y="629" width="0.2" height="15.0" fill="rgb(206,121,14)" rx="2" ry="2" />
<text  x="1102.86" y="639.5" ></text>
</g>
<g >
<title>pick_next_task_fair (4 samples, 0.10%)</title><rect x="1187.4" y="725" width="1.2" height="15.0" fill="rgb(250,113,30)" rx="2" ry="2" />
<text  x="1190.39" y="735.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="1032.6" y="693" width="0.3" height="15.0" fill="rgb(207,138,50)" rx="2" ry="2" />
<text  x="1035.61" y="703.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (2 samples, 0.05%)</title><rect x="1183.6" y="677" width="0.6" height="15.0" fill="rgb(246,222,1)" rx="2" ry="2" />
<text  x="1186.62" y="687.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.02%)</title><rect x="1086.5" y="853" width="0.3" height="15.0" fill="rgb(232,142,47)" rx="2" ry="2" />
<text  x="1089.52" y="863.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="162.5" y="389" width="0.3" height="15.0" fill="rgb(221,174,15)" rx="2" ry="2" />
<text  x="165.46" y="399.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (11 samples, 0.27%)</title><rect x="1025.1" y="693" width="3.2" height="15.0" fill="rgb(254,1,14)" rx="2" ry="2" />
<text  x="1028.07" y="703.5" ></text>
</g>
<g >
<title>NaClXMutexLock (25 samples, 0.61%)</title><rect x="138.1" y="837" width="7.3" height="15.0" fill="rgb(241,52,28)" rx="2" ry="2" />
<text  x="141.12" y="847.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (18 samples, 0.44%)</title><rect x="902.8" y="789" width="5.2" height="15.0" fill="rgb(249,101,37)" rx="2" ry="2" />
<text  x="905.75" y="799.5" ></text>
</g>
<g >
<title>[libncursesw.so.6.2] (1 samples, 0.02%)</title><rect x="10.3" y="693" width="0.3" height="15.0" fill="rgb(212,218,41)" rx="2" ry="2" />
<text  x="13.29" y="703.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (20 samples, 0.49%)</title><rect x="947.4" y="789" width="5.8" height="15.0" fill="rgb(238,71,54)" rx="2" ry="2" />
<text  x="950.39" y="799.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1047.7" y="869" width="0.3" height="15.0" fill="rgb(242,35,28)" rx="2" ry="2" />
<text  x="1050.68" y="879.5" ></text>
</g>
<g >
<title>__msecs_to_jiffies (1 samples, 0.02%)</title><rect x="1187.4" y="709" width="0.3" height="15.0" fill="rgb(221,57,25)" rx="2" ry="2" />
<text  x="1190.39" y="719.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (36 samples, 0.88%)</title><rect x="882.2" y="789" width="10.4" height="15.0" fill="rgb(207,199,36)" rx="2" ry="2" />
<text  x="885.17" y="799.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1008.8" y="773" width="0.6" height="15.0" fill="rgb(240,206,2)" rx="2" ry="2" />
<text  x="1011.84" y="783.5" ></text>
</g>
<g >
<title>__run_hrtimer (23 samples, 0.56%)</title><rect x="1141.9" y="613" width="6.7" height="15.0" fill="rgb(237,61,48)" rx="2" ry="2" />
<text  x="1144.88" y="623.5" ></text>
</g>
<g >
<title>DynArrayGet (5 samples, 0.12%)</title><rect x="917.2" y="789" width="1.5" height="15.0" fill="rgb(220,190,28)" rx="2" ry="2" />
<text  x="920.25" y="799.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="10.6" y="613" width="0.3" height="15.0" fill="rgb(246,131,47)" rx="2" ry="2" />
<text  x="13.58" y="623.5" ></text>
</g>
<g >
<title>NaClAppThreadSpawn (1 samples, 0.02%)</title><rect x="162.8" y="805" width="0.2" height="15.0" fill="rgb(253,46,26)" rx="2" ry="2" />
<text  x="165.75" y="815.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="37.2" y="357" width="0.3" height="15.0" fill="rgb(215,67,49)" rx="2" ry="2" />
<text  x="40.25" y="367.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.02%)</title><rect x="11.2" y="677" width="0.2" height="15.0" fill="rgb(209,135,38)" rx="2" ry="2" />
<text  x="14.16" y="687.5" ></text>
</g>
<g >
<title>NaClTextMapWrapper (1 samples, 0.02%)</title><rect x="150.0" y="805" width="0.3" height="15.0" fill="rgb(249,228,22)" rx="2" ry="2" />
<text  x="153.00" y="815.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (579 samples, 14.22%)</title><rect x="204.5" y="709" width="167.8" height="15.0" fill="rgb(232,183,17)" rx="2" ry="2" />
<text  x="207.49" y="719.5" >ringbuf::consumer::Co..</text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.02%)</title><rect x="149.7" y="693" width="0.3" height="15.0" fill="rgb(232,218,1)" rx="2" ry="2" />
<text  x="152.71" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="160.4" y="645" width="0.3" height="15.0" fill="rgb(213,165,29)" rx="2" ry="2" />
<text  x="163.43" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (33 samples, 0.81%)</title><rect x="657.2" y="645" width="9.6" height="15.0" fill="rgb(238,152,16)" rx="2" ry="2" />
<text  x="660.25" y="655.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.05%)</title><rect x="1110.3" y="789" width="0.6" height="15.0" fill="rgb(233,2,41)" rx="2" ry="2" />
<text  x="1113.29" y="799.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (3 samples, 0.07%)</title><rect x="161.6" y="453" width="0.9" height="15.0" fill="rgb(229,19,0)" rx="2" ry="2" />
<text  x="164.59" y="463.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (11 samples, 0.27%)</title><rect x="199.0" y="709" width="3.2" height="15.0" fill="rgb(236,17,15)" rx="2" ry="2" />
<text  x="201.99" y="719.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="1045.4" y="501" width="0.3" height="15.0" fill="rgb(244,43,38)" rx="2" ry="2" />
<text  x="1048.36" y="511.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (1 samples, 0.02%)</title><rect x="162.5" y="629" width="0.3" height="15.0" fill="rgb(251,124,22)" rx="2" ry="2" />
<text  x="165.46" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1087.7" y="725" width="0.3" height="15.0" fill="rgb(206,201,51)" rx="2" ry="2" />
<text  x="1090.68" y="735.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.07%)</title><rect x="161.6" y="645" width="0.9" height="15.0" fill="rgb(227,85,51)" rx="2" ry="2" />
<text  x="164.59" y="655.5" ></text>
</g>
<g >
<title>do_anonymous_page (92 samples, 2.26%)</title><rect x="1014.1" y="773" width="26.6" height="15.0" fill="rgb(208,18,5)" rx="2" ry="2" />
<text  x="1017.06" y="783.5" >d..</text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.05%)</title><rect x="37.8" y="741" width="0.6" height="15.0" fill="rgb(220,80,43)" rx="2" ry="2" />
<text  x="40.83" y="751.5" ></text>
</g>
<g >
<title>NaClAddrSpSquattingThreadIfStartThread (1 samples, 0.02%)</title><rect x="160.4" y="757" width="0.3" height="15.0" fill="rgb(235,161,6)" rx="2" ry="2" />
<text  x="163.43" y="767.5" ></text>
</g>
<g >
<title>NaClLogTagNext_mu (1 samples, 0.02%)</title><rect x="43.6" y="869" width="0.3" height="15.0" fill="rgb(253,129,21)" rx="2" ry="2" />
<text  x="46.62" y="879.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (1 samples, 0.02%)</title><rect x="1181.9" y="709" width="0.3" height="15.0" fill="rgb(209,169,21)" rx="2" ry="2" />
<text  x="1184.88" y="719.5" ></text>
</g>
<g >
<title>ip6_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="1116.4" y="469" width="0.3" height="15.0" fill="rgb(210,53,51)" rx="2" ry="2" />
<text  x="1119.38" y="479.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (26 samples, 0.64%)</title><rect x="191.4" y="677" width="7.6" height="15.0" fill="rgb(254,138,2)" rx="2" ry="2" />
<text  x="194.45" y="687.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (1 samples, 0.02%)</title><rect x="557.8" y="837" width="0.3" height="15.0" fill="rgb(215,70,47)" rx="2" ry="2" />
<text  x="560.83" y="847.5" ></text>
</g>
<g >
<title>__rb_erase_color (1 samples, 0.02%)</title><rect x="10.9" y="693" width="0.3" height="15.0" fill="rgb(247,201,46)" rx="2" ry="2" />
<text  x="13.87" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (1 samples, 0.02%)</title><rect x="162.5" y="597" width="0.3" height="15.0" fill="rgb(221,176,12)" rx="2" ry="2" />
<text  x="165.46" y="607.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.02%)</title><rect x="1087.7" y="565" width="0.3" height="15.0" fill="rgb(246,137,32)" rx="2" ry="2" />
<text  x="1090.68" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.25%)</title><rect x="856.7" y="661" width="2.9" height="15.0" fill="rgb(220,157,43)" rx="2" ry="2" />
<text  x="859.67" y="671.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (21 samples, 0.52%)</title><rect x="892.9" y="773" width="6.1" height="15.0" fill="rgb(251,14,51)" rx="2" ry="2" />
<text  x="895.90" y="783.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.02%)</title><rect x="11.2" y="901" width="0.2" height="15.0" fill="rgb(244,214,23)" rx="2" ry="2" />
<text  x="14.16" y="911.5" ></text>
</g>
<g >
<title>lind_read (1,353 samples, 33.24%)</title><rect x="163.3" y="789" width="392.2" height="15.0" fill="rgb(215,109,44)" rx="2" ry="2" />
<text  x="166.33" y="799.5" >lind_read</text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (25 samples, 0.61%)</title><rect x="867.1" y="709" width="7.2" height="15.0" fill="rgb(250,101,9)" rx="2" ry="2" />
<text  x="870.10" y="719.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (2 samples, 0.05%)</title><rect x="1155.5" y="501" width="0.6" height="15.0" fill="rgb(251,134,53)" rx="2" ry="2" />
<text  x="1158.51" y="511.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (3 samples, 0.07%)</title><rect x="1013.2" y="773" width="0.9" height="15.0" fill="rgb(239,104,20)" rx="2" ry="2" />
<text  x="1016.19" y="783.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.02%)</title><rect x="1041.3" y="837" width="0.3" height="15.0" fill="rgb(206,225,9)" rx="2" ry="2" />
<text  x="1044.30" y="847.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.05%)</title><rect x="10.3" y="869" width="0.6" height="15.0" fill="rgb(219,91,46)" rx="2" ry="2" />
<text  x="13.29" y="879.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (17 samples, 0.42%)</title><rect x="405.7" y="629" width="4.9" height="15.0" fill="rgb(209,59,23)" rx="2" ry="2" />
<text  x="408.65" y="639.5" ></text>
</g>
<g >
<title>shmem_add_to_page_cache (1 samples, 0.02%)</title><rect x="1045.1" y="549" width="0.3" height="15.0" fill="rgb(246,207,7)" rx="2" ry="2" />
<text  x="1048.07" y="559.5" ></text>
</g>
<g >
<title>free_pgtables (1 samples, 0.02%)</title><rect x="10.9" y="757" width="0.3" height="15.0" fill="rgb(242,56,11)" rx="2" ry="2" />
<text  x="13.87" y="767.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.42%)</title><rect x="624.2" y="709" width="4.9" height="15.0" fill="rgb(218,224,47)" rx="2" ry="2" />
<text  x="627.20" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (1 samples, 0.02%)</title><rect x="162.5" y="581" width="0.3" height="15.0" fill="rgb(213,192,14)" rx="2" ry="2" />
<text  x="165.46" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="821.9" y="629" width="0.3" height="15.0" fill="rgb(251,143,28)" rx="2" ry="2" />
<text  x="824.88" y="639.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="1117.8" y="517" width="0.3" height="15.0" fill="rgb(250,50,6)" rx="2" ry="2" />
<text  x="1120.83" y="527.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (3 samples, 0.07%)</title><rect x="1115.8" y="725" width="0.9" height="15.0" fill="rgb(239,1,48)" rx="2" ry="2" />
<text  x="1118.80" y="735.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="1087.7" y="581" width="0.3" height="15.0" fill="rgb(226,222,30)" rx="2" ry="2" />
<text  x="1090.68" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.02%)</title><rect x="1106.8" y="869" width="0.3" height="15.0" fill="rgb(213,95,48)" rx="2" ry="2" />
<text  x="1109.81" y="879.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="161.9" y="261" width="0.3" height="15.0" fill="rgb(218,114,0)" rx="2" ry="2" />
<text  x="164.88" y="271.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="35.2" y="437" width="0.3" height="15.0" fill="rgb(230,172,27)" rx="2" ry="2" />
<text  x="38.22" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (3 samples, 0.07%)</title><rect x="161.6" y="661" width="0.9" height="15.0" fill="rgb(207,43,39)" rx="2" ry="2" />
<text  x="164.59" y="671.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.02%)</title><rect x="160.1" y="645" width="0.3" height="15.0" fill="rgb(226,172,48)" rx="2" ry="2" />
<text  x="163.14" y="655.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.02%)</title><rect x="1181.0" y="741" width="0.3" height="15.0" fill="rgb(241,200,29)" rx="2" ry="2" />
<text  x="1184.01" y="751.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="345.1" y="581" width="0.3" height="15.0" fill="rgb(241,101,28)" rx="2" ry="2" />
<text  x="348.07" y="591.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (45 samples, 1.11%)</title><rect x="1015.2" y="741" width="13.1" height="15.0" fill="rgb(206,118,29)" rx="2" ry="2" />
<text  x="1018.22" y="751.5" ></text>
</g>
<g >
<title>process_vm_rw (2 samples, 0.05%)</title><rect x="1045.1" y="773" width="0.6" height="15.0" fill="rgb(207,82,21)" rx="2" ry="2" />
<text  x="1048.07" y="783.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.02%)</title><rect x="1045.7" y="725" width="0.2" height="15.0" fill="rgb(239,142,44)" rx="2" ry="2" />
<text  x="1048.65" y="735.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1008.8" y="709" width="0.3" height="15.0" fill="rgb(228,130,40)" rx="2" ry="2" />
<text  x="1011.84" y="719.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (19 samples, 0.47%)</title><rect x="604.8" y="725" width="5.5" height="15.0" fill="rgb(222,75,20)" rx="2" ry="2" />
<text  x="607.78" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (1 samples, 0.02%)</title><rect x="741.3" y="661" width="0.3" height="15.0" fill="rgb(232,199,50)" rx="2" ry="2" />
<text  x="744.30" y="671.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="40.1" y="869" width="0.6" height="15.0" fill="rgb(207,155,47)" rx="2" ry="2" />
<text  x="43.14" y="879.5" ></text>
</g>
<g >
<title>page_counter_uncharge (1 samples, 0.02%)</title><rect x="1187.1" y="661" width="0.3" height="15.0" fill="rgb(252,6,34)" rx="2" ry="2" />
<text  x="1190.10" y="671.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.02%)</title><rect x="160.4" y="821" width="0.3" height="15.0" fill="rgb(212,106,34)" rx="2" ry="2" />
<text  x="163.43" y="831.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (17 samples, 0.42%)</title><rect x="1101.3" y="613" width="4.9" height="15.0" fill="rgb(211,85,21)" rx="2" ry="2" />
<text  x="1104.30" y="623.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (2 samples, 0.05%)</title><rect x="849.1" y="645" width="0.6" height="15.0" fill="rgb(233,156,48)" rx="2" ry="2" />
<text  x="852.13" y="655.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (32 samples, 0.79%)</title><rect x="856.4" y="757" width="9.3" height="15.0" fill="rgb(220,159,20)" rx="2" ry="2" />
<text  x="859.38" y="767.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (3 samples, 0.07%)</title><rect x="160.7" y="469" width="0.9" height="15.0" fill="rgb(208,101,45)" rx="2" ry="2" />
<text  x="163.72" y="479.5" ></text>
</g>
<g >
<title>cr4_update_irqsoff (1 samples, 0.02%)</title><rect x="1118.1" y="757" width="0.3" height="15.0" fill="rgb(237,133,52)" rx="2" ry="2" />
<text  x="1121.12" y="767.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.02%)</title><rect x="10.9" y="837" width="0.3" height="15.0" fill="rgb(239,60,46)" rx="2" ry="2" />
<text  x="13.87" y="847.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="1037.2" y="725" width="0.3" height="15.0" fill="rgb(207,18,21)" rx="2" ry="2" />
<text  x="1040.25" y="735.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (3 samples, 0.07%)</title><rect x="1136.4" y="821" width="0.8" height="15.0" fill="rgb(208,62,46)" rx="2" ry="2" />
<text  x="1139.38" y="831.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (11 samples, 0.27%)</title><rect x="1031.2" y="725" width="3.1" height="15.0" fill="rgb(248,89,44)" rx="2" ry="2" />
<text  x="1034.16" y="735.5" ></text>
</g>
<g >
<title>rcu_qs (1 samples, 0.02%)</title><rect x="1188.6" y="725" width="0.2" height="15.0" fill="rgb(214,29,14)" rx="2" ry="2" />
<text  x="1191.55" y="735.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (2 samples, 0.05%)</title><rect x="41.6" y="869" width="0.6" height="15.0" fill="rgb(211,60,15)" rx="2" ry="2" />
<text  x="44.59" y="879.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1087.7" y="709" width="0.3" height="15.0" fill="rgb(213,30,3)" rx="2" ry="2" />
<text  x="1090.68" y="719.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (2 samples, 0.05%)</title><rect x="1045.1" y="741" width="0.6" height="15.0" fill="rgb(226,173,39)" rx="2" ry="2" />
<text  x="1048.07" y="751.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (18 samples, 0.44%)</title><rect x="948.0" y="773" width="5.2" height="15.0" fill="rgb(234,196,23)" rx="2" ry="2" />
<text  x="950.97" y="783.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="93.2" y="837" width="0.3" height="15.0" fill="rgb(220,207,51)" rx="2" ry="2" />
<text  x="96.19" y="847.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (2 samples, 0.05%)</title><rect x="67.4" y="805" width="0.6" height="15.0" fill="rgb(218,112,50)" rx="2" ry="2" />
<text  x="70.39" y="815.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="820.4" y="565" width="0.6" height="15.0" fill="rgb(222,109,16)" rx="2" ry="2" />
<text  x="823.43" y="575.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (1,353 samples, 33.24%)</title><rect x="163.3" y="821" width="392.2" height="15.0" fill="rgb(230,211,15)" rx="2" ry="2" />
<text  x="166.33" y="831.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>__cmd_record (1 samples, 0.02%)</title><rect x="11.2" y="853" width="0.2" height="15.0" fill="rgb(216,131,26)" rx="2" ry="2" />
<text  x="14.16" y="863.5" ></text>
</g>
<g >
<title>sel_ldr (3,685 samples, 90.52%)</title><rect x="39.0" y="901" width="1068.1" height="15.0" fill="rgb(212,87,40)" rx="2" ry="2" />
<text  x="41.99" y="911.5" >sel_ldr</text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.05%)</title><rect x="849.1" y="661" width="0.6" height="15.0" fill="rgb(218,75,48)" rx="2" ry="2" />
<text  x="852.13" y="671.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.05%)</title><rect x="1112.6" y="789" width="0.6" height="15.0" fill="rgb(215,138,23)" rx="2" ry="2" />
<text  x="1115.61" y="799.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="163.0" y="549" width="0.3" height="15.0" fill="rgb(217,95,50)" rx="2" ry="2" />
<text  x="166.04" y="559.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="345.1" y="645" width="0.3" height="15.0" fill="rgb(229,208,13)" rx="2" ry="2" />
<text  x="348.07" y="655.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.12%)</title><rect x="861.0" y="613" width="1.5" height="15.0" fill="rgb(235,9,15)" rx="2" ry="2" />
<text  x="864.01" y="623.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (4 samples, 0.10%)</title><rect x="1039.6" y="725" width="1.1" height="15.0" fill="rgb(206,13,42)" rx="2" ry="2" />
<text  x="1042.57" y="735.5" ></text>
</g>
<g >
<title>__memcg_kmem_uncharge_page (1 samples, 0.02%)</title><rect x="1187.1" y="693" width="0.3" height="15.0" fill="rgb(237,155,4)" rx="2" ry="2" />
<text  x="1190.10" y="703.5" ></text>
</g>
<g >
<title>NaClSocketPair (1 samples, 0.02%)</title><rect x="1087.7" y="757" width="0.3" height="15.0" fill="rgb(213,41,19)" rx="2" ry="2" />
<text  x="1090.68" y="767.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (1 samples, 0.02%)</title><rect x="10.6" y="565" width="0.3" height="15.0" fill="rgb(219,68,34)" rx="2" ry="2" />
<text  x="13.58" y="575.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sys_common::mutex::MovableMutex&gt; (1 samples, 0.02%)</title><rect x="1051.7" y="837" width="0.3" height="15.0" fill="rgb(206,163,39)" rx="2" ry="2" />
<text  x="1054.74" y="847.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.05%)</title><rect x="37.8" y="757" width="0.6" height="15.0" fill="rgb(211,169,7)" rx="2" ry="2" />
<text  x="40.83" y="767.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (1 samples, 0.02%)</title><rect x="43.0" y="869" width="0.3" height="15.0" fill="rgb(239,44,13)" rx="2" ry="2" />
<text  x="46.04" y="879.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (29 samples, 0.71%)</title><rect x="744.5" y="629" width="8.4" height="15.0" fill="rgb(247,138,6)" rx="2" ry="2" />
<text  x="747.49" y="639.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.02%)</title><rect x="554.6" y="709" width="0.3" height="15.0" fill="rgb(226,56,11)" rx="2" ry="2" />
<text  x="557.64" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (3 samples, 0.07%)</title><rect x="94.9" y="821" width="0.9" height="15.0" fill="rgb(215,103,47)" rx="2" ry="2" />
<text  x="97.93" y="831.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1008.8" y="805" width="0.6" height="15.0" fill="rgb(217,211,31)" rx="2" ry="2" />
<text  x="1011.84" y="815.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (8 samples, 0.20%)</title><rect x="93.5" y="869" width="2.3" height="15.0" fill="rgb(214,121,36)" rx="2" ry="2" />
<text  x="96.48" y="879.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.02%)</title><rect x="161.3" y="437" width="0.3" height="15.0" fill="rgb(240,171,2)" rx="2" ry="2" />
<text  x="164.30" y="447.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="1106.5" y="645" width="0.3" height="15.0" fill="rgb(249,55,26)" rx="2" ry="2" />
<text  x="1109.52" y="655.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (91 samples, 2.24%)</title><rect x="822.5" y="725" width="26.3" height="15.0" fill="rgb(216,229,20)" rx="2" ry="2" />
<text  x="825.46" y="735.5" >s..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="162.5" y="533" width="0.3" height="15.0" fill="rgb(232,206,28)" rx="2" ry="2" />
<text  x="165.46" y="543.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5 samples, 0.12%)</title><rect x="1116.7" y="757" width="1.4" height="15.0" fill="rgb(209,139,35)" rx="2" ry="2" />
<text  x="1119.67" y="767.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="38.7" y="741" width="0.3" height="15.0" fill="rgb(224,107,47)" rx="2" ry="2" />
<text  x="41.70" y="751.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (27 samples, 0.66%)</title><rect x="841.0" y="661" width="7.8" height="15.0" fill="rgb(236,28,23)" rx="2" ry="2" />
<text  x="844.01" y="671.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="161.9" y="309" width="0.3" height="15.0" fill="rgb(231,204,27)" rx="2" ry="2" />
<text  x="164.88" y="319.5" ></text>
</g>
<g >
<title>hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1144.5" y="549" width="0.3" height="15.0" fill="rgb(238,227,10)" rx="2" ry="2" />
<text  x="1147.49" y="559.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.05%)</title><rect x="1117.5" y="741" width="0.6" height="15.0" fill="rgb(218,95,33)" rx="2" ry="2" />
<text  x="1120.54" y="751.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="160.1" y="677" width="0.3" height="15.0" fill="rgb(248,19,23)" rx="2" ry="2" />
<text  x="163.14" y="687.5" ></text>
</g>
<g >
<title>leave_mm (1 samples, 0.02%)</title><rect x="1118.1" y="773" width="0.3" height="15.0" fill="rgb(220,45,30)" rx="2" ry="2" />
<text  x="1121.12" y="783.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="1117.0" y="645" width="0.2" height="15.0" fill="rgb(243,26,2)" rx="2" ry="2" />
<text  x="1119.96" y="655.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="1111.4" y="741" width="0.3" height="15.0" fill="rgb(246,125,31)" rx="2" ry="2" />
<text  x="1114.45" y="751.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="1106.5" y="661" width="0.3" height="15.0" fill="rgb(253,39,41)" rx="2" ry="2" />
<text  x="1109.52" y="671.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.02%)</title><rect x="1186.8" y="725" width="0.3" height="15.0" fill="rgb(235,221,31)" rx="2" ry="2" />
<text  x="1189.81" y="735.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (10 samples, 0.25%)</title><rect x="1077.5" y="869" width="2.9" height="15.0" fill="rgb(220,200,23)" rx="2" ry="2" />
<text  x="1080.54" y="879.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.05%)</title><rect x="161.9" y="389" width="0.6" height="15.0" fill="rgb(249,197,25)" rx="2" ry="2" />
<text  x="164.88" y="399.5" ></text>
</g>
<g >
<title>__GI_munmap (1 samples, 0.02%)</title><rect x="149.7" y="757" width="0.3" height="15.0" fill="rgb(252,218,0)" rx="2" ry="2" />
<text  x="152.71" y="767.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="162.5" y="325" width="0.3" height="15.0" fill="rgb(246,129,21)" rx="2" ry="2" />
<text  x="165.46" y="335.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="162.5" y="293" width="0.3" height="15.0" fill="rgb(226,126,33)" rx="2" ry="2" />
<text  x="165.46" y="303.5" ></text>
</g>
<g >
<title>timerqueue_del (2 samples, 0.05%)</title><rect x="1148.6" y="613" width="0.5" height="15.0" fill="rgb(214,123,44)" rx="2" ry="2" />
<text  x="1151.55" y="623.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (3 samples, 0.07%)</title><rect x="1046.8" y="773" width="0.9" height="15.0" fill="rgb(237,116,37)" rx="2" ry="2" />
<text  x="1049.81" y="783.5" ></text>
</g>
<g >
<title>__libc_write (3 samples, 0.07%)</title><rect x="160.7" y="661" width="0.9" height="15.0" fill="rgb(217,145,16)" rx="2" ry="2" />
<text  x="163.72" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (78 samples, 1.92%)</title><rect x="11.4" y="741" width="22.7" height="15.0" fill="rgb(221,222,54)" rx="2" ry="2" />
<text  x="14.45" y="751.5" >_..</text>
</g>
<g >
<title>__do_fault (1 samples, 0.02%)</title><rect x="150.0" y="597" width="0.3" height="15.0" fill="rgb(248,8,17)" rx="2" ry="2" />
<text  x="153.00" y="607.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (194 samples, 4.77%)</title><rect x="673.5" y="677" width="56.2" height="15.0" fill="rgb(224,72,6)" rx="2" ry="2" />
<text  x="676.48" y="687.5" >std::..</text>
</g>
<g >
<title>put_task_stack (1 samples, 0.02%)</title><rect x="1187.1" y="709" width="0.3" height="15.0" fill="rgb(254,25,36)" rx="2" ry="2" />
<text  x="1190.10" y="719.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (1 samples, 0.02%)</title><rect x="1136.1" y="789" width="0.3" height="15.0" fill="rgb(210,106,46)" rx="2" ry="2" />
<text  x="1139.09" y="799.5" ></text>
</g>
<g >
<title>kvm_check_and_clear_guest_paused (1 samples, 0.02%)</title><rect x="1117.2" y="661" width="0.3" height="15.0" fill="rgb(207,65,54)" rx="2" ry="2" />
<text  x="1120.25" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="821.9" y="613" width="0.3" height="15.0" fill="rgb(248,71,46)" rx="2" ry="2" />
<text  x="824.88" y="623.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.05%)</title><rect x="1045.1" y="645" width="0.6" height="15.0" fill="rgb(222,178,8)" rx="2" ry="2" />
<text  x="1048.07" y="655.5" ></text>
</g>
<g >
<title>NaClLogUnlock (21 samples, 0.52%)</title><rect x="947.1" y="805" width="6.1" height="15.0" fill="rgb(231,26,37)" rx="2" ry="2" />
<text  x="950.10" y="815.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.02%)</title><rect x="1085.7" y="853" width="0.2" height="15.0" fill="rgb(221,75,3)" rx="2" ry="2" />
<text  x="1088.65" y="863.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="1045.1" y="805" width="0.6" height="15.0" fill="rgb(231,63,6)" rx="2" ry="2" />
<text  x="1048.07" y="815.5" ></text>
</g>
<g >
<title>ctx_resched (65 samples, 1.60%)</title><rect x="15.2" y="565" width="18.9" height="15.0" fill="rgb(234,77,48)" rx="2" ry="2" />
<text  x="18.22" y="575.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (4 samples, 0.10%)</title><rect x="116.1" y="837" width="1.1" height="15.0" fill="rgb(219,147,49)" rx="2" ry="2" />
<text  x="119.09" y="847.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (3 samples, 0.07%)</title><rect x="1046.8" y="869" width="0.9" height="15.0" fill="rgb(205,1,47)" rx="2" ry="2" />
<text  x="1049.81" y="879.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="149.7" y="645" width="0.3" height="15.0" fill="rgb(217,207,21)" rx="2" ry="2" />
<text  x="152.71" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.05%)</title><rect x="1085.9" y="805" width="0.6" height="15.0" fill="rgb(205,128,41)" rx="2" ry="2" />
<text  x="1088.94" y="815.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22 samples, 0.54%)</title><rect x="809.7" y="629" width="6.4" height="15.0" fill="rgb(252,128,2)" rx="2" ry="2" />
<text  x="812.71" y="639.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.02%)</title><rect x="93.2" y="869" width="0.3" height="15.0" fill="rgb(253,168,43)" rx="2" ry="2" />
<text  x="96.19" y="879.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="1152.0" y="645" width="0.3" height="15.0" fill="rgb(222,81,37)" rx="2" ry="2" />
<text  x="1155.03" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (87 samples, 2.14%)</title><rect x="345.4" y="677" width="25.2" height="15.0" fill="rgb(240,6,39)" rx="2" ry="2" />
<text  x="348.36" y="687.5" >c..</text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.05%)</title><rect x="822.5" y="661" width="0.5" height="15.0" fill="rgb(254,69,53)" rx="2" ry="2" />
<text  x="825.46" y="671.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="1045.7" y="645" width="0.2" height="15.0" fill="rgb(231,85,40)" rx="2" ry="2" />
<text  x="1048.65" y="655.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (57 samples, 1.40%)</title><rect x="1141.0" y="693" width="16.5" height="15.0" fill="rgb(212,29,25)" rx="2" ry="2" />
<text  x="1144.01" y="703.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="864.5" y="629" width="0.3" height="15.0" fill="rgb(234,207,24)" rx="2" ry="2" />
<text  x="867.49" y="639.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="97.5" y="869" width="0.3" height="15.0" fill="rgb(212,22,46)" rx="2" ry="2" />
<text  x="100.54" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (35 samples, 0.86%)</title><rect x="656.7" y="725" width="10.1" height="15.0" fill="rgb(245,40,21)" rx="2" ry="2" />
<text  x="659.67" y="735.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="37.5" y="453" width="0.3" height="15.0" fill="rgb(242,66,28)" rx="2" ry="2" />
<text  x="40.54" y="463.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="1106.5" y="613" width="0.3" height="15.0" fill="rgb(241,130,35)" rx="2" ry="2" />
<text  x="1109.52" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (27 samples, 0.66%)</title><rect x="637.8" y="661" width="7.9" height="15.0" fill="rgb(213,25,25)" rx="2" ry="2" />
<text  x="640.83" y="671.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.02%)</title><rect x="94.6" y="821" width="0.3" height="15.0" fill="rgb(207,134,5)" rx="2" ry="2" />
<text  x="97.64" y="831.5" ></text>
</g>
<g >
<title>__perf_event_enable (2 samples, 0.05%)</title><rect x="37.8" y="693" width="0.6" height="15.0" fill="rgb(237,145,34)" rx="2" ry="2" />
<text  x="40.83" y="703.5" ></text>
</g>
<g >
<title>__vma_adjust (1 samples, 0.02%)</title><rect x="160.4" y="549" width="0.3" height="15.0" fill="rgb(220,35,12)" rx="2" ry="2" />
<text  x="163.43" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="94.1" y="789" width="0.2" height="15.0" fill="rgb(238,114,45)" rx="2" ry="2" />
<text  x="97.06" y="799.5" ></text>
</g>
<g >
<title>cpuidle_enter (147 samples, 3.61%)</title><rect x="1138.4" y="741" width="42.6" height="15.0" fill="rgb(205,11,52)" rx="2" ry="2" />
<text  x="1141.41" y="751.5" >cpui..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="161.9" y="373" width="0.3" height="15.0" fill="rgb(212,118,31)" rx="2" ry="2" />
<text  x="164.88" y="383.5" ></text>
</g>
<g >
<title>reader_loop (2 samples, 0.05%)</title><rect x="10.3" y="837" width="0.6" height="15.0" fill="rgb(205,15,21)" rx="2" ry="2" />
<text  x="13.29" y="847.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.02%)</title><rect x="1088.0" y="821" width="0.3" height="15.0" fill="rgb(205,175,40)" rx="2" ry="2" />
<text  x="1090.97" y="831.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (2 samples, 0.05%)</title><rect x="38.4" y="821" width="0.6" height="15.0" fill="rgb(217,131,39)" rx="2" ry="2" />
<text  x="41.41" y="831.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="150.0" y="709" width="0.3" height="15.0" fill="rgb(212,91,33)" rx="2" ry="2" />
<text  x="153.00" y="719.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="1117.0" y="613" width="0.2" height="15.0" fill="rgb(219,78,38)" rx="2" ry="2" />
<text  x="1119.96" y="623.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="161.9" y="277" width="0.3" height="15.0" fill="rgb(222,103,37)" rx="2" ry="2" />
<text  x="164.88" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.27%)</title><rect x="34.6" y="709" width="3.2" height="15.0" fill="rgb(219,162,25)" rx="2" ry="2" />
<text  x="37.64" y="719.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (47 samples, 1.15%)</title><rect x="866.5" y="741" width="13.6" height="15.0" fill="rgb(228,70,34)" rx="2" ry="2" />
<text  x="869.52" y="751.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (33 samples, 0.81%)</title><rect x="150.3" y="789" width="9.6" height="15.0" fill="rgb(236,37,41)" rx="2" ry="2" />
<text  x="153.29" y="799.5" ></text>
</g>
<g >
<title>NaClThreadCreate (1 samples, 0.02%)</title><rect x="160.4" y="709" width="0.3" height="15.0" fill="rgb(233,185,10)" rx="2" ry="2" />
<text  x="163.43" y="719.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="1137.0" y="789" width="0.2" height="15.0" fill="rgb(242,219,5)" rx="2" ry="2" />
<text  x="1139.96" y="799.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="1045.7" y="661" width="0.2" height="15.0" fill="rgb(221,216,12)" rx="2" ry="2" />
<text  x="1048.65" y="671.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1045.7" y="677" width="0.2" height="15.0" fill="rgb(224,194,34)" rx="2" ry="2" />
<text  x="1048.65" y="687.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.02%)</title><rect x="161.0" y="389" width="0.3" height="15.0" fill="rgb(220,100,32)" rx="2" ry="2" />
<text  x="164.01" y="399.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (1 samples, 0.02%)</title><rect x="1116.4" y="613" width="0.3" height="15.0" fill="rgb(213,20,49)" rx="2" ry="2" />
<text  x="1119.38" y="623.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="150.0" y="629" width="0.3" height="15.0" fill="rgb(232,207,19)" rx="2" ry="2" />
<text  x="153.00" y="639.5" ></text>
</g>
<g >
<title>do_idle (79 samples, 1.94%)</title><rect x="1114.3" y="837" width="22.9" height="15.0" fill="rgb(215,52,52)" rx="2" ry="2" />
<text  x="1117.35" y="847.5" >d..</text>
</g>
<g >
<title>do_iter_write (1 samples, 0.02%)</title><rect x="162.5" y="421" width="0.3" height="15.0" fill="rgb(244,184,49)" rx="2" ry="2" />
<text  x="165.46" y="431.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.07%)</title><rect x="161.6" y="405" width="0.9" height="15.0" fill="rgb(245,9,53)" rx="2" ry="2" />
<text  x="164.59" y="415.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="1041.9" y="869" width="0.3" height="15.0" fill="rgb(221,141,0)" rx="2" ry="2" />
<text  x="1044.88" y="879.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.02%)</title><rect x="163.9" y="693" width="0.3" height="15.0" fill="rgb(226,22,51)" rx="2" ry="2" />
<text  x="166.91" y="703.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1137.0" y="725" width="0.2" height="15.0" fill="rgb(228,10,19)" rx="2" ry="2" />
<text  x="1139.96" y="735.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.02%)</title><rect x="1185.1" y="677" width="0.3" height="15.0" fill="rgb(234,96,10)" rx="2" ry="2" />
<text  x="1188.07" y="687.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="1116.4" y="629" width="0.3" height="15.0" fill="rgb(227,149,52)" rx="2" ry="2" />
<text  x="1119.38" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (2 samples, 0.05%)</title><rect x="163.3" y="709" width="0.6" height="15.0" fill="rgb(205,53,21)" rx="2" ry="2" />
<text  x="166.33" y="719.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="163.0" y="533" width="0.3" height="15.0" fill="rgb(205,199,2)" rx="2" ry="2" />
<text  x="166.04" y="543.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (23 samples, 0.56%)</title><rect x="909.1" y="789" width="6.7" height="15.0" fill="rgb(237,80,39)" rx="2" ry="2" />
<text  x="912.13" y="799.5" ></text>
</g>
<g >
<title>exit_mm (33 samples, 0.81%)</title><rect x="1096.7" y="741" width="9.5" height="15.0" fill="rgb(222,169,22)" rx="2" ry="2" />
<text  x="1099.67" y="751.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="821.0" y="645" width="0.6" height="15.0" fill="rgb(233,88,15)" rx="2" ry="2" />
<text  x="824.01" y="655.5" ></text>
</g>
<g >
<title>free_unref_page_list (7 samples, 0.17%)</title><rect x="1103.9" y="581" width="2.0" height="15.0" fill="rgb(210,36,15)" rx="2" ry="2" />
<text  x="1106.91" y="591.5" ></text>
</g>
<g >
<title>_perf_ioctl (78 samples, 1.92%)</title><rect x="11.4" y="709" width="22.7" height="15.0" fill="rgb(234,19,12)" rx="2" ry="2" />
<text  x="14.45" y="719.5" >_..</text>
</g>
<g >
<title>irq_work_needs_cpu (1 samples, 0.02%)</title><rect x="1135.2" y="757" width="0.3" height="15.0" fill="rgb(248,191,31)" rx="2" ry="2" />
<text  x="1138.22" y="767.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (31 samples, 0.76%)</title><rect x="883.0" y="773" width="9.0" height="15.0" fill="rgb(242,163,7)" rx="2" ry="2" />
<text  x="886.04" y="783.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.02%)</title><rect x="36.7" y="421" width="0.3" height="15.0" fill="rgb(221,17,32)" rx="2" ry="2" />
<text  x="39.67" y="431.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.32%)</title><rect x="859.6" y="661" width="3.7" height="15.0" fill="rgb(233,88,2)" rx="2" ry="2" />
<text  x="862.57" y="671.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (2 samples, 0.05%)</title><rect x="1185.4" y="725" width="0.5" height="15.0" fill="rgb(219,197,21)" rx="2" ry="2" />
<text  x="1188.36" y="735.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (2 samples, 0.05%)</title><rect x="163.3" y="725" width="0.6" height="15.0" fill="rgb(237,186,4)" rx="2" ry="2" />
<text  x="166.33" y="735.5" ></text>
</g>
<g >
<title>NaClValidateCode (33 samples, 0.81%)</title><rect x="150.3" y="805" width="9.6" height="15.0" fill="rgb(250,127,22)" rx="2" ry="2" />
<text  x="153.29" y="815.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.02%)</title><rect x="94.1" y="805" width="0.2" height="15.0" fill="rgb(253,42,18)" rx="2" ry="2" />
<text  x="97.06" y="815.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (1 samples, 0.02%)</title><rect x="1106.2" y="725" width="0.3" height="15.0" fill="rgb(245,2,5)" rx="2" ry="2" />
<text  x="1109.23" y="735.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.02%)</title><rect x="10.9" y="773" width="0.3" height="15.0" fill="rgb(242,199,29)" rx="2" ry="2" />
<text  x="13.87" y="783.5" ></text>
</g>
<g >
<title>NaClSysMunmap (1 samples, 0.02%)</title><rect x="163.0" y="837" width="0.3" height="15.0" fill="rgb(216,219,30)" rx="2" ry="2" />
<text  x="166.04" y="847.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (13 samples, 0.32%)</title><rect x="859.6" y="677" width="3.7" height="15.0" fill="rgb(241,93,24)" rx="2" ry="2" />
<text  x="862.57" y="687.5" ></text>
</g>
<g >
<title>ip6_sublist_rcv (1 samples, 0.02%)</title><rect x="1116.4" y="549" width="0.3" height="15.0" fill="rgb(214,65,53)" rx="2" ry="2" />
<text  x="1119.38" y="559.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="411.2" y="581" width="0.2" height="15.0" fill="rgb(247,67,19)" rx="2" ry="2" />
<text  x="414.16" y="591.5" ></text>
</g>
<g >
<title>NaClGetDescMu (1 samples, 0.02%)</title><rect x="42.8" y="869" width="0.2" height="15.0" fill="rgb(248,70,18)" rx="2" ry="2" />
<text  x="45.75" y="879.5" ></text>
</g>
<g >
<title>lind (4 samples, 0.10%)</title><rect x="10.0" y="901" width="1.2" height="15.0" fill="rgb(230,44,0)" rx="2" ry="2" />
<text  x="13.00" y="911.5" ></text>
</g>
<g >
<title>_nc_find_type_entry (1 samples, 0.02%)</title><rect x="10.3" y="709" width="0.3" height="15.0" fill="rgb(240,196,54)" rx="2" ry="2" />
<text  x="13.29" y="719.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="150.0" y="677" width="0.3" height="15.0" fill="rgb(224,64,53)" rx="2" ry="2" />
<text  x="153.00" y="687.5" ></text>
</g>
<g >
<title>__socketpair (1 samples, 0.02%)</title><rect x="1087.7" y="741" width="0.3" height="15.0" fill="rgb(220,157,14)" rx="2" ry="2" />
<text  x="1090.68" y="751.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="1088.0" y="853" width="0.3" height="15.0" fill="rgb(220,173,15)" rx="2" ry="2" />
<text  x="1090.97" y="863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="163.0" y="709" width="0.3" height="15.0" fill="rgb(225,166,29)" rx="2" ry="2" />
<text  x="166.04" y="719.5" ></text>
</g>
<g >
<title>refill_stock (1 samples, 0.02%)</title><rect x="1039.3" y="725" width="0.3" height="15.0" fill="rgb(250,82,33)" rx="2" ry="2" />
<text  x="1042.28" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (2 samples, 0.05%)</title><rect x="163.3" y="693" width="0.6" height="15.0" fill="rgb(219,107,27)" rx="2" ry="2" />
<text  x="166.33" y="703.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (2 samples, 0.05%)</title><rect x="1037.5" y="741" width="0.6" height="15.0" fill="rgb(232,37,20)" rx="2" ry="2" />
<text  x="1040.54" y="751.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.05%)</title><rect x="1117.5" y="565" width="0.6" height="15.0" fill="rgb(238,222,26)" rx="2" ry="2" />
<text  x="1120.54" y="575.5" ></text>
</g>
<g >
<title>ovl_write_iter (11 samples, 0.27%)</title><rect x="34.6" y="629" width="3.2" height="15.0" fill="rgb(207,109,41)" rx="2" ry="2" />
<text  x="37.64" y="639.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.05%)</title><rect x="159.9" y="709" width="0.5" height="15.0" fill="rgb(248,110,0)" rx="2" ry="2" />
<text  x="162.86" y="719.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="862.5" y="613" width="0.3" height="15.0" fill="rgb(244,226,34)" rx="2" ry="2" />
<text  x="865.46" y="623.5" ></text>
</g>
<g >
<title>free_unref_page_commit (5 samples, 0.12%)</title><rect x="1104.5" y="565" width="1.4" height="15.0" fill="rgb(207,110,13)" rx="2" ry="2" />
<text  x="1107.49" y="575.5" ></text>
</g>
<g >
<title>ip6_sublist_rcv_finish (1 samples, 0.02%)</title><rect x="1116.4" y="517" width="0.3" height="15.0" fill="rgb(227,178,0)" rx="2" ry="2" />
<text  x="1119.38" y="527.5" ></text>
</g>
<g >
<title>icmpv6_rcv (1 samples, 0.02%)</title><rect x="1116.4" y="453" width="0.3" height="15.0" fill="rgb(215,53,8)" rx="2" ry="2" />
<text  x="1119.38" y="463.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.02%)</title><rect x="1110.6" y="725" width="0.3" height="15.0" fill="rgb(235,132,4)" rx="2" ry="2" />
<text  x="1113.58" y="735.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="1111.4" y="725" width="0.3" height="15.0" fill="rgb(242,185,47)" rx="2" ry="2" />
<text  x="1114.45" y="735.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1150.0" y="597" width="0.3" height="15.0" fill="rgb(209,46,46)" rx="2" ry="2" />
<text  x="1153.00" y="607.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="159.9" y="629" width="0.2" height="15.0" fill="rgb(207,164,21)" rx="2" ry="2" />
<text  x="162.86" y="639.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="1150.0" y="629" width="0.3" height="15.0" fill="rgb(211,173,15)" rx="2" ry="2" />
<text  x="1153.00" y="639.5" ></text>
</g>
<g >
<title>strscpy (1 samples, 0.02%)</title><rect x="1112.3" y="821" width="0.3" height="15.0" fill="rgb(242,142,35)" rx="2" ry="2" />
<text  x="1115.32" y="831.5" ></text>
</g>
<g >
<title>mem_cgroup_track_foreign_dirty_slowpath (1 samples, 0.02%)</title><rect x="37.0" y="421" width="0.2" height="15.0" fill="rgb(226,228,50)" rx="2" ry="2" />
<text  x="39.96" y="431.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.02%)</title><rect x="1105.9" y="581" width="0.3" height="15.0" fill="rgb(240,185,32)" rx="2" ry="2" />
<text  x="1108.94" y="591.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="163.9" y="709" width="0.3" height="15.0" fill="rgb(216,145,17)" rx="2" ry="2" />
<text  x="166.91" y="719.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (1 samples, 0.02%)</title><rect x="162.2" y="325" width="0.3" height="15.0" fill="rgb(226,176,12)" rx="2" ry="2" />
<text  x="165.17" y="335.5" ></text>
</g>
<g >
<title>unmap_vmas (33 samples, 0.81%)</title><rect x="1096.7" y="693" width="9.5" height="15.0" fill="rgb(229,59,40)" rx="2" ry="2" />
<text  x="1099.67" y="703.5" ></text>
</g>
<g >
<title>__pthread_create_2_1 (1 samples, 0.02%)</title><rect x="160.4" y="693" width="0.3" height="15.0" fill="rgb(246,68,31)" rx="2" ry="2" />
<text  x="163.43" y="703.5" ></text>
</g>
<g >
<title>account_page_dirtied (1 samples, 0.02%)</title><rect x="37.0" y="437" width="0.2" height="15.0" fill="rgb(210,127,8)" rx="2" ry="2" />
<text  x="39.96" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="34.3" y="805" width="0.3" height="15.0" fill="rgb(225,123,21)" rx="2" ry="2" />
<text  x="37.35" y="815.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3 samples, 0.07%)</title><rect x="1115.8" y="741" width="0.9" height="15.0" fill="rgb(249,181,28)" rx="2" ry="2" />
<text  x="1118.80" y="751.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (3 samples, 0.07%)</title><rect x="865.7" y="741" width="0.8" height="15.0" fill="rgb(234,218,44)" rx="2" ry="2" />
<text  x="868.65" y="751.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1008.8" y="821" width="0.6" height="15.0" fill="rgb(252,20,27)" rx="2" ry="2" />
<text  x="1011.84" y="831.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.02%)</title><rect x="150.0" y="565" width="0.3" height="15.0" fill="rgb(214,138,33)" rx="2" ry="2" />
<text  x="153.00" y="575.5" ></text>
</g>
<g >
<title>handle_edge_irq (4 samples, 0.10%)</title><rect x="1114.6" y="725" width="1.2" height="15.0" fill="rgb(225,108,30)" rx="2" ry="2" />
<text  x="1117.64" y="735.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (1 samples, 0.02%)</title><rect x="1145.9" y="533" width="0.3" height="15.0" fill="rgb(215,189,44)" rx="2" ry="2" />
<text  x="1148.94" y="543.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.07%)</title><rect x="410.6" y="629" width="0.8" height="15.0" fill="rgb(205,203,11)" rx="2" ry="2" />
<text  x="413.58" y="639.5" ></text>
</g>
<g >
<title>pipe_poll (1 samples, 0.02%)</title><rect x="1111.7" y="821" width="0.3" height="15.0" fill="rgb(241,206,25)" rx="2" ry="2" />
<text  x="1114.74" y="831.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (2 samples, 0.05%)</title><rect x="1045.1" y="853" width="0.6" height="15.0" fill="rgb(251,186,43)" rx="2" ry="2" />
<text  x="1048.07" y="863.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (590 samples, 14.49%)</title><rect x="377.8" y="677" width="171.0" height="15.0" fill="rgb(243,9,32)" rx="2" ry="2" />
<text  x="380.83" y="687.5" >ringbuf::consumer::Con..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (19 samples, 0.47%)</title><rect x="81.9" y="821" width="5.5" height="15.0" fill="rgb(236,45,3)" rx="2" ry="2" />
<text  x="84.88" y="831.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.05%)</title><rect x="1112.6" y="773" width="0.6" height="15.0" fill="rgb(248,138,41)" rx="2" ry="2" />
<text  x="1115.61" y="783.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (1 samples, 0.02%)</title><rect x="11.2" y="837" width="0.2" height="15.0" fill="rgb(251,152,10)" rx="2" ry="2" />
<text  x="14.16" y="847.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="159.3" y="725" width="0.3" height="15.0" fill="rgb(222,185,35)" rx="2" ry="2" />
<text  x="162.28" y="735.5" ></text>
</g>
<g >
<title>ksys_write (11 samples, 0.27%)</title><rect x="34.6" y="677" width="3.2" height="15.0" fill="rgb(220,64,3)" rx="2" ry="2" />
<text  x="37.64" y="687.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.02%)</title><rect x="162.5" y="453" width="0.3" height="15.0" fill="rgb(207,55,26)" rx="2" ry="2" />
<text  x="165.46" y="463.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.02%)</title><rect x="162.5" y="773" width="0.3" height="15.0" fill="rgb(219,32,2)" rx="2" ry="2" />
<text  x="165.46" y="783.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.02%)</title><rect x="36.1" y="405" width="0.3" height="15.0" fill="rgb(206,54,31)" rx="2" ry="2" />
<text  x="39.09" y="415.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.02%)</title><rect x="1112.9" y="741" width="0.3" height="15.0" fill="rgb(236,45,8)" rx="2" ry="2" />
<text  x="1115.90" y="751.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1008.8" y="741" width="0.3" height="15.0" fill="rgb(216,154,31)" rx="2" ry="2" />
<text  x="1011.84" y="751.5" ></text>
</g>
<g >
<title>alx_clean_tx_irq (1 samples, 0.02%)</title><rect x="1116.1" y="629" width="0.3" height="15.0" fill="rgb(245,67,51)" rx="2" ry="2" />
<text  x="1119.09" y="639.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="1113.5" y="741" width="0.3" height="15.0" fill="rgb(236,85,38)" rx="2" ry="2" />
<text  x="1116.48" y="751.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="163.0" y="565" width="0.3" height="15.0" fill="rgb(207,180,45)" rx="2" ry="2" />
<text  x="166.04" y="575.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.02%)</title><rect x="161.3" y="389" width="0.3" height="15.0" fill="rgb(221,134,9)" rx="2" ry="2" />
<text  x="164.30" y="399.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.07%)</title><rect x="161.6" y="629" width="0.9" height="15.0" fill="rgb(246,130,33)" rx="2" ry="2" />
<text  x="164.59" y="639.5" ></text>
</g>
<g >
<title>swapper (286 samples, 7.03%)</title><rect x="1107.1" y="901" width="82.9" height="15.0" fill="rgb(232,9,32)" rx="2" ry="2" />
<text  x="1110.10" y="911.5" >swapper</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (87 samples, 2.14%)</title><rect x="729.7" y="709" width="25.2" height="15.0" fill="rgb(214,20,6)" rx="2" ry="2" />
<text  x="732.71" y="719.5" >r..</text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="1032.9" y="693" width="0.3" height="15.0" fill="rgb(247,2,0)" rx="2" ry="2" />
<text  x="1035.90" y="703.5" ></text>
</g>
<g >
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="37.2" y="373" width="0.3" height="15.0" fill="rgb(214,223,12)" rx="2" ry="2" />
<text  x="40.25" y="383.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (4 samples, 0.10%)</title><rect x="35.2" y="501" width="1.2" height="15.0" fill="rgb(221,110,36)" rx="2" ry="2" />
<text  x="38.22" y="511.5" ></text>
</g>
<g >
<title>load_balance (11 samples, 0.27%)</title><rect x="1153.2" y="581" width="3.2" height="15.0" fill="rgb(210,229,31)" rx="2" ry="2" />
<text  x="1156.19" y="591.5" ></text>
</g>
<g >
<title>NaClSysExit (6 samples, 0.15%)</title><rect x="160.7" y="837" width="1.8" height="15.0" fill="rgb(208,34,38)" rx="2" ry="2" />
<text  x="163.72" y="847.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.02%)</title><rect x="1117.8" y="501" width="0.3" height="15.0" fill="rgb(226,200,32)" rx="2" ry="2" />
<text  x="1120.83" y="511.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (9 samples, 0.22%)</title><rect x="589.4" y="789" width="2.6" height="15.0" fill="rgb(250,94,1)" rx="2" ry="2" />
<text  x="592.42" y="799.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (7 samples, 0.17%)</title><rect x="1154.1" y="549" width="2.0" height="15.0" fill="rgb(244,201,1)" rx="2" ry="2" />
<text  x="1157.06" y="559.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="162.2" y="373" width="0.3" height="15.0" fill="rgb(233,61,52)" rx="2" ry="2" />
<text  x="165.17" y="383.5" ></text>
</g>
<g >
<title>__execvpe_common (1 samples, 0.02%)</title><rect x="11.2" y="821" width="0.2" height="15.0" fill="rgb(240,17,34)" rx="2" ry="2" />
<text  x="14.16" y="831.5" ></text>
</g>
<g >
<title>generic_perform_write (11 samples, 0.27%)</title><rect x="34.6" y="533" width="3.2" height="15.0" fill="rgb(242,162,54)" rx="2" ry="2" />
<text  x="37.64" y="543.5" ></text>
</g>
<g >
<title>pmd_val (1 samples, 0.02%)</title><rect x="1040.7" y="789" width="0.3" height="15.0" fill="rgb(213,137,31)" rx="2" ry="2" />
<text  x="1043.72" y="799.5" ></text>
</g>
<g >
<title>all (4,071 samples, 100%)</title><rect x="10.0" y="917" width="1180.0" height="15.0" fill="rgb(251,159,43)" rx="2" ry="2" />
<text  x="13.00" y="927.5" ></text>
</g>
<g >
<title>NaClGetDescMu (1 samples, 0.02%)</title><rect x="935.5" y="821" width="0.3" height="15.0" fill="rgb(205,40,18)" rx="2" ry="2" />
<text  x="938.51" y="831.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (4 samples, 0.10%)</title><rect x="1039.6" y="741" width="1.1" height="15.0" fill="rgb(254,9,26)" rx="2" ry="2" />
<text  x="1042.57" y="751.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="159.9" y="677" width="0.2" height="15.0" fill="rgb(214,107,21)" rx="2" ry="2" />
<text  x="162.86" y="687.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (491 samples, 12.06%)</title><rect x="666.8" y="725" width="142.3" height="15.0" fill="rgb(229,38,26)" rx="2" ry="2" />
<text  x="669.81" y="735.5" >rustposix::interfa..</text>
</g>
<g >
<title>__handle_irq_event_percpu (4 samples, 0.10%)</title><rect x="1114.6" y="693" width="1.2" height="15.0" fill="rgb(246,71,18)" rx="2" ry="2" />
<text  x="1117.64" y="703.5" ></text>
</g>
<g >
<title>NaClCommonDescMakeBoundSock (1 samples, 0.02%)</title><rect x="1087.7" y="773" width="0.3" height="15.0" fill="rgb(227,51,50)" rx="2" ry="2" />
<text  x="1090.68" y="783.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="345.1" y="549" width="0.3" height="15.0" fill="rgb(242,143,23)" rx="2" ry="2" />
<text  x="348.07" y="559.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (27 samples, 0.66%)</title><rect x="137.5" y="853" width="7.9" height="15.0" fill="rgb(240,75,15)" rx="2" ry="2" />
<text  x="140.54" y="863.5" ></text>
</g>
<g >
<title>BitmapSetBit (1 samples, 0.02%)</title><rect x="158.7" y="741" width="0.3" height="15.0" fill="rgb(219,52,32)" rx="2" ry="2" />
<text  x="161.70" y="751.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="345.1" y="517" width="0.3" height="15.0" fill="rgb(212,75,51)" rx="2" ry="2" />
<text  x="348.07" y="527.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.02%)</title><rect x="554.6" y="693" width="0.3" height="15.0" fill="rgb(237,143,33)" rx="2" ry="2" />
<text  x="557.64" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="150.0" y="661" width="0.3" height="15.0" fill="rgb(224,2,14)" rx="2" ry="2" />
<text  x="153.00" y="671.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.02%)</title><rect x="848.8" y="661" width="0.3" height="15.0" fill="rgb(222,90,47)" rx="2" ry="2" />
<text  x="851.84" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="162.5" y="549" width="0.3" height="15.0" fill="rgb(234,159,20)" rx="2" ry="2" />
<text  x="165.46" y="559.5" ></text>
</g>
<g >
<title>__set_page_dirty (2 samples, 0.05%)</title><rect x="36.7" y="453" width="0.5" height="15.0" fill="rgb(207,24,40)" rx="2" ry="2" />
<text  x="39.67" y="463.5" ></text>
</g>
<g >
<title>__GI_execve (1 samples, 0.02%)</title><rect x="11.2" y="805" width="0.2" height="15.0" fill="rgb(225,80,44)" rx="2" ry="2" />
<text  x="14.16" y="815.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (3 samples, 0.07%)</title><rect x="160.7" y="677" width="0.9" height="15.0" fill="rgb(229,85,31)" rx="2" ry="2" />
<text  x="163.72" y="687.5" ></text>
</g>
<g >
<title>update_process_times (17 samples, 0.42%)</title><rect x="1143.3" y="565" width="5.0" height="15.0" fill="rgb(219,212,5)" rx="2" ry="2" />
<text  x="1146.33" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="149.7" y="709" width="0.3" height="15.0" fill="rgb(237,219,25)" rx="2" ry="2" />
<text  x="152.71" y="719.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.07%)</title><rect x="816.7" y="645" width="0.8" height="15.0" fill="rgb(249,36,17)" rx="2" ry="2" />
<text  x="819.67" y="655.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.02%)</title><rect x="162.5" y="805" width="0.3" height="15.0" fill="rgb(242,173,34)" rx="2" ry="2" />
<text  x="165.46" y="815.5" ></text>
</g>
<g >
<title>NaClGetDesc (1 samples, 0.02%)</title><rect x="572.0" y="837" width="0.3" height="15.0" fill="rgb(217,19,3)" rx="2" ry="2" />
<text  x="575.03" y="847.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.02%)</title><rect x="1112.6" y="757" width="0.3" height="15.0" fill="rgb(245,174,18)" rx="2" ry="2" />
<text  x="1115.61" y="767.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1110.6" y="709" width="0.3" height="15.0" fill="rgb(239,117,27)" rx="2" ry="2" />
<text  x="1113.58" y="719.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="1156.1" y="565" width="0.3" height="15.0" fill="rgb(239,228,53)" rx="2" ry="2" />
<text  x="1159.09" y="575.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (89 samples, 2.19%)</title><rect x="823.0" y="709" width="25.8" height="15.0" fill="rgb(242,130,7)" rx="2" ry="2" />
<text  x="826.04" y="719.5" >s..</text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="1106.5" y="597" width="0.3" height="15.0" fill="rgb(244,203,11)" rx="2" ry="2" />
<text  x="1109.52" y="607.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="865.4" y="597" width="0.3" height="15.0" fill="rgb(205,99,30)" rx="2" ry="2" />
<text  x="868.36" y="607.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (7 samples, 0.17%)</title><rect x="117.2" y="837" width="2.1" height="15.0" fill="rgb(212,154,19)" rx="2" ry="2" />
<text  x="120.25" y="847.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="159.9" y="693" width="0.2" height="15.0" fill="rgb(253,141,22)" rx="2" ry="2" />
<text  x="162.86" y="703.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (2 samples, 0.05%)</title><rect x="37.8" y="805" width="0.6" height="15.0" fill="rgb(232,123,45)" rx="2" ry="2" />
<text  x="40.83" y="815.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="38.7" y="773" width="0.3" height="15.0" fill="rgb(228,61,12)" rx="2" ry="2" />
<text  x="41.70" y="783.5" ></text>
</g>
<g >
<title>do_sys_poll (3 samples, 0.07%)</title><rect x="1111.2" y="837" width="0.8" height="15.0" fill="rgb(243,89,36)" rx="2" ry="2" />
<text  x="1114.16" y="847.5" ></text>
</g>
<g >
<title>__schedule (8 samples, 0.20%)</title><rect x="1186.5" y="741" width="2.3" height="15.0" fill="rgb(252,74,38)" rx="2" ry="2" />
<text  x="1189.52" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.0" y="885" width="0.3" height="15.0" fill="rgb(216,193,41)" rx="2" ry="2" />
<text  x="13.00" y="895.5" ></text>
</g>
<g >
<title>MarkValidJumpTarget (1 samples, 0.02%)</title><rect x="158.7" y="757" width="0.3" height="15.0" fill="rgb(252,111,17)" rx="2" ry="2" />
<text  x="161.70" y="767.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (1,353 samples, 33.24%)</title><rect x="163.3" y="853" width="392.2" height="15.0" fill="rgb(218,70,45)" rx="2" ry="2" />
<text  x="166.33" y="863.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.05%)</title><rect x="1045.1" y="677" width="0.6" height="15.0" fill="rgb(206,48,43)" rx="2" ry="2" />
<text  x="1048.07" y="687.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="1031.4" y="709" width="0.3" height="15.0" fill="rgb(247,108,0)" rx="2" ry="2" />
<text  x="1034.45" y="719.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.05%)</title><rect x="1117.0" y="709" width="0.5" height="15.0" fill="rgb(229,186,15)" rx="2" ry="2" />
<text  x="1119.96" y="719.5" ></text>
</g>
<g >
<title>NaClDescUnmapUnsafe (1 samples, 0.02%)</title><rect x="149.7" y="773" width="0.3" height="15.0" fill="rgb(243,6,50)" rx="2" ry="2" />
<text  x="152.71" y="783.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (4 samples, 0.10%)</title><rect x="1114.6" y="677" width="1.2" height="15.0" fill="rgb(231,211,20)" rx="2" ry="2" />
<text  x="1117.64" y="687.5" ></text>
</g>
<g >
<title>do_execveat_common (1 samples, 0.02%)</title><rect x="11.2" y="741" width="0.2" height="15.0" fill="rgb(244,106,28)" rx="2" ry="2" />
<text  x="14.16" y="751.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (1 samples, 0.02%)</title><rect x="933.5" y="741" width="0.3" height="15.0" fill="rgb(247,91,30)" rx="2" ry="2" />
<text  x="936.48" y="751.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="1117.8" y="533" width="0.3" height="15.0" fill="rgb(246,123,38)" rx="2" ry="2" />
<text  x="1120.83" y="543.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="161.6" y="549" width="0.9" height="15.0" fill="rgb(250,215,16)" rx="2" ry="2" />
<text  x="164.59" y="559.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.02%)</title><rect x="34.9" y="421" width="0.3" height="15.0" fill="rgb(240,37,38)" rx="2" ry="2" />
<text  x="37.93" y="431.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.05%)</title><rect x="1045.1" y="629" width="0.6" height="15.0" fill="rgb(250,66,13)" rx="2" ry="2" />
<text  x="1048.07" y="639.5" ></text>
</g>
<g >
<title>vfs_iter_write (3 samples, 0.07%)</title><rect x="160.7" y="533" width="0.9" height="15.0" fill="rgb(247,159,7)" rx="2" ry="2" />
<text  x="163.72" y="543.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (3 samples, 0.07%)</title><rect x="161.6" y="709" width="0.9" height="15.0" fill="rgb(206,85,3)" rx="2" ry="2" />
<text  x="164.59" y="719.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (19 samples, 0.47%)</title><rect x="81.9" y="805" width="5.5" height="15.0" fill="rgb(232,155,15)" rx="2" ry="2" />
<text  x="84.88" y="815.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1 samples, 0.02%)</title><rect x="137.2" y="853" width="0.3" height="15.0" fill="rgb(249,103,26)" rx="2" ry="2" />
<text  x="140.25" y="863.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (12 samples, 0.29%)</title><rect x="616.4" y="693" width="3.5" height="15.0" fill="rgb(248,222,21)" rx="2" ry="2" />
<text  x="619.38" y="703.5" ></text>
</g>
<g >
<title>scheduler_tick (9 samples, 0.22%)</title><rect x="1145.7" y="549" width="2.6" height="15.0" fill="rgb(221,24,5)" rx="2" ry="2" />
<text  x="1148.65" y="559.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (11 samples, 0.27%)</title><rect x="34.6" y="581" width="3.2" height="15.0" fill="rgb(225,126,10)" rx="2" ry="2" />
<text  x="37.64" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (36 samples, 0.88%)</title><rect x="646.2" y="677" width="10.5" height="15.0" fill="rgb(253,77,33)" rx="2" ry="2" />
<text  x="649.23" y="687.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (27 samples, 0.66%)</title><rect x="637.8" y="645" width="7.9" height="15.0" fill="rgb(228,48,9)" rx="2" ry="2" />
<text  x="640.83" y="655.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (21 samples, 0.52%)</title><rect x="927.4" y="741" width="6.1" height="15.0" fill="rgb(221,138,20)" rx="2" ry="2" />
<text  x="930.39" y="751.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.02%)</title><rect x="554.6" y="677" width="0.3" height="15.0" fill="rgb(248,172,23)" rx="2" ry="2" />
<text  x="557.64" y="687.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.02%)</title><rect x="160.7" y="421" width="0.3" height="15.0" fill="rgb(253,134,18)" rx="2" ry="2" />
<text  x="163.72" y="431.5" ></text>
</g>
<g >
<title>hrtimer_forward (1 samples, 0.02%)</title><rect x="1136.7" y="789" width="0.3" height="15.0" fill="rgb(212,24,46)" rx="2" ry="2" />
<text  x="1139.67" y="799.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.02%)</title><rect x="864.5" y="661" width="0.3" height="15.0" fill="rgb(206,149,11)" rx="2" ry="2" />
<text  x="867.49" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::mmap_syscall (1 samples, 0.02%)</title><rect x="163.0" y="757" width="0.3" height="15.0" fill="rgb(218,22,33)" rx="2" ry="2" />
<text  x="166.04" y="767.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (1 samples, 0.02%)</title><rect x="36.1" y="389" width="0.3" height="15.0" fill="rgb(247,228,15)" rx="2" ry="2" />
<text  x="39.09" y="399.5" ></text>
</g>
<g >
<title>NaClThreadInterfaceConstructAndStartThread (1 samples, 0.02%)</title><rect x="160.4" y="773" width="0.3" height="15.0" fill="rgb(221,228,51)" rx="2" ry="2" />
<text  x="163.43" y="783.5" ></text>
</g>
<g >
<title>ProcessInvalidJumpTargets (1 samples, 0.02%)</title><rect x="159.3" y="757" width="0.3" height="15.0" fill="rgb(225,10,31)" rx="2" ry="2" />
<text  x="162.28" y="767.5" ></text>
</g>
<g >
<title>__run_hrtimer (2 samples, 0.05%)</title><rect x="1117.0" y="677" width="0.5" height="15.0" fill="rgb(234,32,52)" rx="2" ry="2" />
<text  x="1119.96" y="687.5" ></text>
</g>
<g >
<title>clear_page_erms (29 samples, 0.71%)</title><rect x="1016.7" y="693" width="8.4" height="15.0" fill="rgb(211,31,27)" rx="2" ry="2" />
<text  x="1019.67" y="703.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="38.7" y="789" width="0.3" height="15.0" fill="rgb(247,26,26)" rx="2" ry="2" />
<text  x="41.70" y="799.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.07%)</title><rect x="161.6" y="677" width="0.9" height="15.0" fill="rgb(228,132,48)" rx="2" ry="2" />
<text  x="164.59" y="687.5" ></text>
</g>
<g >
<title>__sock_create (1 samples, 0.02%)</title><rect x="1087.7" y="661" width="0.3" height="15.0" fill="rgb(248,171,29)" rx="2" ry="2" />
<text  x="1090.68" y="671.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="161.9" y="181" width="0.3" height="15.0" fill="rgb(209,81,43)" rx="2" ry="2" />
<text  x="164.88" y="191.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1 samples, 0.02%)</title><rect x="1114.1" y="837" width="0.2" height="15.0" fill="rgb(240,52,4)" rx="2" ry="2" />
<text  x="1117.06" y="847.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (56 samples, 1.38%)</title><rect x="824.8" y="677" width="16.2" height="15.0" fill="rgb(219,197,42)" rx="2" ry="2" />
<text  x="827.78" y="687.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="1141.6" y="613" width="0.3" height="15.0" fill="rgb(221,194,4)" rx="2" ry="2" />
<text  x="1144.59" y="623.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="1112.9" y="757" width="0.3" height="15.0" fill="rgb(215,122,2)" rx="2" ry="2" />
<text  x="1115.90" y="767.5" ></text>
</g>
<g >
<title>menu_select (14 samples, 0.34%)</title><rect x="1181.3" y="725" width="4.1" height="15.0" fill="rgb(247,156,41)" rx="2" ry="2" />
<text  x="1184.30" y="735.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (12 samples, 0.29%)</title><rect x="817.5" y="661" width="3.5" height="15.0" fill="rgb(227,43,32)" rx="2" ry="2" />
<text  x="820.54" y="671.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="161.9" y="85" width="0.3" height="15.0" fill="rgb(221,204,52)" rx="2" ry="2" />
<text  x="164.88" y="95.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (4 samples, 0.10%)</title><rect x="1104.8" y="549" width="1.1" height="15.0" fill="rgb(227,141,50)" rx="2" ry="2" />
<text  x="1107.78" y="559.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.02%)</title><rect x="1112.0" y="805" width="0.3" height="15.0" fill="rgb(246,41,49)" rx="2" ry="2" />
<text  x="1115.03" y="815.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (1 samples, 0.02%)</title><rect x="41.3" y="869" width="0.3" height="15.0" fill="rgb(228,110,14)" rx="2" ry="2" />
<text  x="44.30" y="879.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.02%)</title><rect x="1088.0" y="837" width="0.3" height="15.0" fill="rgb(213,112,41)" rx="2" ry="2" />
<text  x="1090.97" y="847.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (35 samples, 0.86%)</title><rect x="656.7" y="677" width="10.1" height="15.0" fill="rgb(216,27,21)" rx="2" ry="2" />
<text  x="659.67" y="687.5" ></text>
</g>
<g >
<title>NaClValidateImage (3 samples, 0.07%)</title><rect x="1046.8" y="805" width="0.9" height="15.0" fill="rgb(232,208,0)" rx="2" ry="2" />
<text  x="1049.81" y="815.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1009.1" y="741" width="0.3" height="15.0" fill="rgb(211,201,18)" rx="2" ry="2" />
<text  x="1012.13" y="751.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="38.7" y="709" width="0.3" height="15.0" fill="rgb(222,166,16)" rx="2" ry="2" />
<text  x="41.70" y="719.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.07%)</title><rect x="816.7" y="613" width="0.8" height="15.0" fill="rgb(232,196,2)" rx="2" ry="2" />
<text  x="819.67" y="623.5" ></text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (1 samples, 0.02%)</title><rect x="150.0" y="757" width="0.3" height="15.0" fill="rgb(216,187,33)" rx="2" ry="2" />
<text  x="153.00" y="767.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.02%)</title><rect x="1106.5" y="549" width="0.3" height="15.0" fill="rgb(237,191,6)" rx="2" ry="2" />
<text  x="1109.52" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (2 samples, 0.05%)</title><rect x="1135.5" y="805" width="0.6" height="15.0" fill="rgb(245,202,25)" rx="2" ry="2" />
<text  x="1138.51" y="815.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (3 samples, 0.07%)</title><rect x="1045.1" y="869" width="0.8" height="15.0" fill="rgb(251,186,9)" rx="2" ry="2" />
<text  x="1048.07" y="879.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="1100.7" y="597" width="0.3" height="15.0" fill="rgb(232,126,46)" rx="2" ry="2" />
<text  x="1103.72" y="607.5" ></text>
</g>
<g >
<title>NaClThreadInterfaceStartThread (1 samples, 0.02%)</title><rect x="160.4" y="741" width="0.3" height="15.0" fill="rgb(234,12,24)" rx="2" ry="2" />
<text  x="163.43" y="751.5" ></text>
</g>
<g >
<title>__free_one_page (3 samples, 0.07%)</title><rect x="1105.1" y="533" width="0.8" height="15.0" fill="rgb(212,194,43)" rx="2" ry="2" />
<text  x="1108.07" y="543.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (1 samples, 0.02%)</title><rect x="621.9" y="741" width="0.3" height="15.0" fill="rgb(235,180,12)" rx="2" ry="2" />
<text  x="624.88" y="751.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="94.3" y="821" width="0.3" height="15.0" fill="rgb(246,202,41)" rx="2" ry="2" />
<text  x="97.35" y="831.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1045.1" y="821" width="0.6" height="15.0" fill="rgb(254,154,27)" rx="2" ry="2" />
<text  x="1048.07" y="831.5" ></text>
</g>
<g >
<title>NaClKernelServiceCtor (1 samples, 0.02%)</title><rect x="1087.7" y="805" width="0.3" height="15.0" fill="rgb(230,214,54)" rx="2" ry="2" />
<text  x="1090.68" y="815.5" ></text>
</g>
<g >
<title>perf_ioctl (2 samples, 0.05%)</title><rect x="37.8" y="837" width="0.6" height="15.0" fill="rgb(236,33,50)" rx="2" ry="2" />
<text  x="40.83" y="847.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.02%)</title><rect x="1087.4" y="869" width="0.3" height="15.0" fill="rgb(249,117,28)" rx="2" ry="2" />
<text  x="1090.39" y="879.5" ></text>
</g>
<g >
<title>dispatcher (972 samples, 23.88%)</title><rect x="598.4" y="773" width="281.7" height="15.0" fill="rgb(214,222,26)" rx="2" ry="2" />
<text  x="601.41" y="783.5" >dispatcher</text>
</g>
<g >
<title>hashbrown::map::make_hash (41 samples, 1.01%)</title><rect x="809.1" y="677" width="11.9" height="15.0" fill="rgb(245,174,12)" rx="2" ry="2" />
<text  x="812.13" y="687.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1033.8" y="709" width="0.3" height="15.0" fill="rgb(242,145,6)" rx="2" ry="2" />
<text  x="1036.77" y="719.5" ></text>
</g>
<g >
<title>NaClMutexLock (21 samples, 0.52%)</title><rect x="941.0" y="773" width="6.1" height="15.0" fill="rgb(247,94,43)" rx="2" ry="2" />
<text  x="944.01" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="10.9" y="885" width="0.3" height="15.0" fill="rgb(232,192,14)" rx="2" ry="2" />
<text  x="13.87" y="895.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="161.3" y="357" width="0.3" height="15.0" fill="rgb(233,35,19)" rx="2" ry="2" />
<text  x="164.30" y="367.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (3 samples, 0.07%)</title><rect x="954.3" y="821" width="0.9" height="15.0" fill="rgb(211,86,50)" rx="2" ry="2" />
<text  x="957.35" y="831.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (9 samples, 0.22%)</title><rect x="1025.7" y="677" width="2.6" height="15.0" fill="rgb(231,214,14)" rx="2" ry="2" />
<text  x="1028.65" y="687.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (38 samples, 0.93%)</title><rect x="645.7" y="725" width="11.0" height="15.0" fill="rgb(251,163,36)" rx="2" ry="2" />
<text  x="648.65" y="735.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.02%)</title><rect x="899.9" y="821" width="0.2" height="15.0" fill="rgb(250,43,31)" rx="2" ry="2" />
<text  x="902.86" y="831.5" ></text>
</g>
<g >
<title>NaClSysWrite (2 samples, 0.05%)</title><rect x="555.5" y="853" width="0.6" height="15.0" fill="rgb(218,188,15)" rx="2" ry="2" />
<text  x="558.51" y="863.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="865.4" y="613" width="0.3" height="15.0" fill="rgb(234,176,24)" rx="2" ry="2" />
<text  x="868.36" y="623.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (165 samples, 4.05%)</title><rect x="1138.1" y="757" width="47.8" height="15.0" fill="rgb(235,107,47)" rx="2" ry="2" />
<text  x="1141.12" y="767.5" >cpui..</text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="10.0" y="805" width="0.3" height="15.0" fill="rgb(231,158,41)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.02%)</title><rect x="1181.0" y="725" width="0.3" height="15.0" fill="rgb(224,99,48)" rx="2" ry="2" />
<text  x="1184.01" y="735.5" ></text>
</g>
<g >
<title>NaClLogGetVerbosity (50 samples, 1.23%)</title><rect x="939.3" y="821" width="14.5" height="15.0" fill="rgb(219,67,1)" rx="2" ry="2" />
<text  x="942.28" y="831.5" ></text>
</g>
<g >
<title>lru_cache_add (12 samples, 0.29%)</title><rect x="1030.9" y="741" width="3.4" height="15.0" fill="rgb(214,219,0)" rx="2" ry="2" />
<text  x="1033.87" y="751.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="1008.8" y="725" width="0.3" height="15.0" fill="rgb(246,109,51)" rx="2" ry="2" />
<text  x="1011.84" y="735.5" ></text>
</g>
<g >
<title>NaClLogGetVerbosity (1 samples, 0.02%)</title><rect x="572.3" y="837" width="0.3" height="15.0" fill="rgb(223,69,50)" rx="2" ry="2" />
<text  x="575.32" y="847.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (2 samples, 0.05%)</title><rect x="67.4" y="821" width="0.6" height="15.0" fill="rgb(229,95,32)" rx="2" ry="2" />
<text  x="70.39" y="831.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (70 samples, 1.72%)</title><rect x="1114.6" y="789" width="20.3" height="15.0" fill="rgb(236,114,29)" rx="2" ry="2" />
<text  x="1117.64" y="799.5" ></text>
</g>
<g >
<title>irq_exit_rcu (18 samples, 0.44%)</title><rect x="1152.3" y="677" width="5.2" height="15.0" fill="rgb(233,195,9)" rx="2" ry="2" />
<text  x="1155.32" y="687.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.02%)</title><rect x="162.5" y="821" width="0.3" height="15.0" fill="rgb(239,51,54)" rx="2" ry="2" />
<text  x="165.46" y="831.5" ></text>
</g>
<g >
<title>rb_erase (2 samples, 0.05%)</title><rect x="1141.9" y="597" width="0.6" height="15.0" fill="rgb(223,53,54)" rx="2" ry="2" />
<text  x="1144.88" y="607.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="345.1" y="597" width="0.3" height="15.0" fill="rgb(225,89,8)" rx="2" ry="2" />
<text  x="348.07" y="607.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (4 samples, 0.10%)</title><rect x="1114.6" y="741" width="1.2" height="15.0" fill="rgb(229,105,47)" rx="2" ry="2" />
<text  x="1117.64" y="751.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (25 samples, 0.61%)</title><rect x="1141.9" y="629" width="7.2" height="15.0" fill="rgb(251,131,2)" rx="2" ry="2" />
<text  x="1144.88" y="639.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (7 samples, 0.17%)</title><rect x="670.3" y="709" width="2.0" height="15.0" fill="rgb(240,192,36)" rx="2" ry="2" />
<text  x="673.29" y="719.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (3 samples, 0.07%)</title><rect x="570.3" y="821" width="0.9" height="15.0" fill="rgb(208,171,18)" rx="2" ry="2" />
<text  x="573.29" y="831.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (31 samples, 0.76%)</title><rect x="411.4" y="661" width="9.0" height="15.0" fill="rgb(218,152,53)" rx="2" ry="2" />
<text  x="414.45" y="671.5" ></text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.05%)</title><rect x="822.5" y="677" width="0.5" height="15.0" fill="rgb(230,61,3)" rx="2" ry="2" />
<text  x="825.46" y="687.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="1041.6" y="837" width="0.3" height="15.0" fill="rgb(227,66,3)" rx="2" ry="2" />
<text  x="1044.59" y="847.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="163.0" y="645" width="0.3" height="15.0" fill="rgb(217,3,42)" rx="2" ry="2" />
<text  x="166.04" y="655.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="345.1" y="613" width="0.3" height="15.0" fill="rgb(240,14,52)" rx="2" ry="2" />
<text  x="348.07" y="623.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (18 samples, 0.44%)</title><rect x="1152.3" y="661" width="5.2" height="15.0" fill="rgb(231,179,18)" rx="2" ry="2" />
<text  x="1155.32" y="671.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.02%)</title><rect x="163.0" y="661" width="0.3" height="15.0" fill="rgb(249,89,8)" rx="2" ry="2" />
<text  x="166.04" y="671.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (1 samples, 0.02%)</title><rect x="1116.4" y="581" width="0.3" height="15.0" fill="rgb(206,81,9)" rx="2" ry="2" />
<text  x="1119.38" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.20%)</title><rect x="863.3" y="693" width="2.4" height="15.0" fill="rgb(250,106,0)" rx="2" ry="2" />
<text  x="866.33" y="703.5" ></text>
</g>
<g >
<title>ext4_inode_csum (1 samples, 0.02%)</title><rect x="37.2" y="389" width="0.3" height="15.0" fill="rgb(235,174,43)" rx="2" ry="2" />
<text  x="40.25" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (58 samples, 1.42%)</title><rect x="49.4" y="869" width="16.8" height="15.0" fill="rgb(224,31,7)" rx="2" ry="2" />
<text  x="52.42" y="879.5" ></text>
</g>
<g >
<title>split_vma (1 samples, 0.02%)</title><rect x="160.4" y="581" width="0.3" height="15.0" fill="rgb(214,187,42)" rx="2" ry="2" />
<text  x="163.43" y="591.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.02%)</title><rect x="1188.3" y="693" width="0.3" height="15.0" fill="rgb(229,179,36)" rx="2" ry="2" />
<text  x="1191.26" y="703.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.02%)</title><rect x="1045.7" y="773" width="0.2" height="15.0" fill="rgb(214,17,49)" rx="2" ry="2" />
<text  x="1048.65" y="783.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="1054.3" y="853" width="0.3" height="15.0" fill="rgb(239,51,39)" rx="2" ry="2" />
<text  x="1057.35" y="863.5" ></text>
</g>
<g >
<title>do_sys_poll (2 samples, 0.05%)</title><rect x="38.4" y="837" width="0.6" height="15.0" fill="rgb(245,36,48)" rx="2" ry="2" />
<text  x="41.41" y="847.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="811.4" y="597" width="0.3" height="15.0" fill="rgb(233,214,1)" rx="2" ry="2" />
<text  x="814.45" y="607.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.22%)</title><rect x="818.4" y="597" width="2.6" height="15.0" fill="rgb(211,25,32)" rx="2" ry="2" />
<text  x="821.41" y="607.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.02%)</title><rect x="159.9" y="645" width="0.2" height="15.0" fill="rgb(218,135,5)" rx="2" ry="2" />
<text  x="162.86" y="655.5" ></text>
</g>
<g >
<title>ip6_list_rcv_finish.constprop.0 (1 samples, 0.02%)</title><rect x="1116.4" y="533" width="0.3" height="15.0" fill="rgb(210,106,16)" rx="2" ry="2" />
<text  x="1119.38" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.02%)</title><rect x="10.9" y="853" width="0.3" height="15.0" fill="rgb(212,179,53)" rx="2" ry="2" />
<text  x="13.87" y="863.5" ></text>
</g>
<g >
<title>dequeue_task (2 samples, 0.05%)</title><rect x="1112.6" y="805" width="0.6" height="15.0" fill="rgb(208,49,31)" rx="2" ry="2" />
<text  x="1115.61" y="815.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (38 samples, 0.93%)</title><rect x="559.3" y="821" width="11.0" height="15.0" fill="rgb(216,221,41)" rx="2" ry="2" />
<text  x="562.28" y="831.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.02%)</title><rect x="1045.7" y="581" width="0.2" height="15.0" fill="rgb(249,199,2)" rx="2" ry="2" />
<text  x="1048.65" y="591.5" ></text>
</g>
<g >
<title>do_group_exit (35 samples, 0.86%)</title><rect x="1096.7" y="773" width="10.1" height="15.0" fill="rgb(240,47,5)" rx="2" ry="2" />
<text  x="1099.67" y="783.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (17 samples, 0.42%)</title><rect x="941.6" y="757" width="4.9" height="15.0" fill="rgb(240,147,39)" rx="2" ry="2" />
<text  x="944.59" y="767.5" ></text>
</g>
<g >
<title>unlink_file_vma (1 samples, 0.02%)</title><rect x="10.9" y="741" width="0.3" height="15.0" fill="rgb(207,59,9)" rx="2" ry="2" />
<text  x="13.87" y="751.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.02%)</title><rect x="1189.1" y="757" width="0.3" height="15.0" fill="rgb(253,8,45)" rx="2" ry="2" />
<text  x="1192.13" y="767.5" ></text>
</g>
<g >
<title>NaClMutexLock (1 samples, 0.02%)</title><rect x="1046.5" y="869" width="0.3" height="15.0" fill="rgb(226,196,47)" rx="2" ry="2" />
<text  x="1049.52" y="879.5" ></text>
</g>
<g >
<title>event_function (66 samples, 1.62%)</title><rect x="14.9" y="597" width="19.2" height="15.0" fill="rgb(212,110,10)" rx="2" ry="2" />
<text  x="17.93" y="607.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.02%)</title><rect x="162.5" y="357" width="0.3" height="15.0" fill="rgb(214,93,17)" rx="2" ry="2" />
<text  x="165.46" y="367.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (2 samples, 0.05%)</title><rect x="1117.5" y="661" width="0.6" height="15.0" fill="rgb(208,213,4)" rx="2" ry="2" />
<text  x="1120.54" y="671.5" ></text>
</g>
<g >
<title>tick_nohz_restart (2 samples, 0.05%)</title><rect x="1136.7" y="805" width="0.5" height="15.0" fill="rgb(210,119,29)" rx="2" ry="2" />
<text  x="1139.67" y="815.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (35 samples, 0.86%)</title><rect x="656.7" y="693" width="10.1" height="15.0" fill="rgb(251,87,8)" rx="2" ry="2" />
<text  x="659.67" y="703.5" ></text>
</g>
<g >
<title>__perf_event_enable (65 samples, 1.60%)</title><rect x="15.2" y="581" width="18.9" height="15.0" fill="rgb(213,115,38)" rx="2" ry="2" />
<text  x="18.22" y="591.5" ></text>
</g>
<g >
<title>get_typical_interval (2 samples, 0.05%)</title><rect x="1182.2" y="709" width="0.6" height="15.0" fill="rgb(246,167,27)" rx="2" ry="2" />
<text  x="1185.17" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="1110.3" y="853" width="0.9" height="15.0" fill="rgb(223,180,52)" rx="2" ry="2" />
<text  x="1113.29" y="863.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (87 samples, 2.14%)</title><rect x="345.4" y="661" width="25.2" height="15.0" fill="rgb(241,89,3)" rx="2" ry="2" />
<text  x="348.36" y="671.5" >c..</text>
</g>
<g >
<title>__remove_shared_vm_struct (1 samples, 0.02%)</title><rect x="10.9" y="725" width="0.3" height="15.0" fill="rgb(212,63,49)" rx="2" ry="2" />
<text  x="13.87" y="735.5" ></text>
</g>
<g >
<title>do_iter_write (3 samples, 0.07%)</title><rect x="160.7" y="517" width="0.9" height="15.0" fill="rgb(240,212,32)" rx="2" ry="2" />
<text  x="163.72" y="527.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.02%)</title><rect x="1086.5" y="821" width="0.3" height="15.0" fill="rgb(250,15,21)" rx="2" ry="2" />
<text  x="1089.52" y="831.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.02%)</title><rect x="37.2" y="421" width="0.3" height="15.0" fill="rgb(215,223,13)" rx="2" ry="2" />
<text  x="40.25" y="431.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="37.2" y="437" width="0.3" height="15.0" fill="rgb(232,73,39)" rx="2" ry="2" />
<text  x="40.25" y="447.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (2 samples, 0.05%)</title><rect x="1111.2" y="821" width="0.5" height="15.0" fill="rgb(250,196,26)" rx="2" ry="2" />
<text  x="1114.16" y="831.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1142.5" y="597" width="0.3" height="15.0" fill="rgb(233,206,48)" rx="2" ry="2" />
<text  x="1145.46" y="607.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.07%)</title><rect x="1036.7" y="741" width="0.8" height="15.0" fill="rgb(231,11,5)" rx="2" ry="2" />
<text  x="1039.67" y="751.5" ></text>
</g>
<g >
<title>call_timer_fn (2 samples, 0.05%)</title><rect x="1117.5" y="645" width="0.6" height="15.0" fill="rgb(218,163,40)" rx="2" ry="2" />
<text  x="1120.54" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.02%)</title><rect x="1048.0" y="869" width="0.3" height="15.0" fill="rgb(209,104,24)" rx="2" ry="2" />
<text  x="1050.97" y="879.5" ></text>
</g>
<g >
<title>_perf_ioctl (2 samples, 0.05%)</title><rect x="37.8" y="821" width="0.6" height="15.0" fill="rgb(218,22,44)" rx="2" ry="2" />
<text  x="40.83" y="831.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.02%)</title><rect x="35.8" y="421" width="0.3" height="15.0" fill="rgb(225,133,49)" rx="2" ry="2" />
<text  x="38.80" y="431.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="68.0" y="821" width="0.3" height="15.0" fill="rgb(222,125,40)" rx="2" ry="2" />
<text  x="70.97" y="831.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 1.57%)</title><rect x="15.5" y="549" width="18.6" height="15.0" fill="rgb(213,90,48)" rx="2" ry="2" />
<text  x="18.51" y="559.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="162.2" y="213" width="0.3" height="15.0" fill="rgb(228,112,30)" rx="2" ry="2" />
<text  x="165.17" y="223.5" ></text>
</g>
<g >
<title>NaClDescRef (58 samples, 1.42%)</title><rect x="918.7" y="789" width="16.8" height="15.0" fill="rgb(206,4,21)" rx="2" ry="2" />
<text  x="921.70" y="799.5" ></text>
</g>
<g >
<title>NaClAppLaunchServiceThreads (1 samples, 0.02%)</title><rect x="1087.7" y="821" width="0.3" height="15.0" fill="rgb(226,47,41)" rx="2" ry="2" />
<text  x="1090.68" y="831.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.02%)</title><rect x="150.0" y="741" width="0.3" height="15.0" fill="rgb(224,72,24)" rx="2" ry="2" />
<text  x="153.00" y="751.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.02%)</title><rect x="411.2" y="613" width="0.2" height="15.0" fill="rgb(218,40,1)" rx="2" ry="2" />
<text  x="414.16" y="623.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.07%)</title><rect x="161.6" y="485" width="0.9" height="15.0" fill="rgb(253,229,43)" rx="2" ry="2" />
<text  x="164.59" y="495.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.02%)</title><rect x="1157.2" y="597" width="0.3" height="15.0" fill="rgb(249,18,21)" rx="2" ry="2" />
<text  x="1160.25" y="607.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="162.2" y="229" width="0.3" height="15.0" fill="rgb(215,122,13)" rx="2" ry="2" />
<text  x="165.17" y="239.5" ></text>
</g>
<g >
<title>tgetstr_sp (1 samples, 0.02%)</title><rect x="10.3" y="725" width="0.3" height="15.0" fill="rgb(246,188,23)" rx="2" ry="2" />
<text  x="13.29" y="735.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.02%)</title><rect x="162.5" y="469" width="0.3" height="15.0" fill="rgb(235,37,17)" rx="2" ry="2" />
<text  x="165.46" y="479.5" ></text>
</g>
<g >
<title>NaClDescIoDescDtor (1 samples, 0.02%)</title><rect x="162.5" y="757" width="0.3" height="15.0" fill="rgb(229,132,31)" rx="2" ry="2" />
<text  x="165.46" y="767.5" ></text>
</g>
<g >
<title>NaClHostDescClose (1 samples, 0.02%)</title><rect x="162.5" y="741" width="0.3" height="15.0" fill="rgb(229,185,18)" rx="2" ry="2" />
<text  x="165.46" y="751.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="864.2" y="677" width="0.6" height="15.0" fill="rgb(217,144,20)" rx="2" ry="2" />
<text  x="867.20" y="687.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (33 samples, 0.81%)</title><rect x="610.3" y="757" width="9.6" height="15.0" fill="rgb(209,115,19)" rx="2" ry="2" />
<text  x="613.29" y="767.5" ></text>
</g>
<g >
<title>perf_ioctl (78 samples, 1.92%)</title><rect x="11.4" y="725" width="22.7" height="15.0" fill="rgb(243,160,24)" rx="2" ry="2" />
<text  x="14.45" y="735.5" >p..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (1,349 samples, 33.14%)</title><rect x="163.9" y="741" width="391.0" height="15.0" fill="rgb(245,134,43)" rx="2" ry="2" />
<text  x="166.91" y="751.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustp..</text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.02%)</title><rect x="1045.4" y="549" width="0.3" height="15.0" fill="rgb(231,221,21)" rx="2" ry="2" />
<text  x="1048.36" y="559.5" ></text>
</g>
<g >
<title>cpu_startup_entry (80 samples, 1.97%)</title><rect x="1114.1" y="853" width="23.1" height="15.0" fill="rgb(222,130,50)" rx="2" ry="2" />
<text  x="1117.06" y="863.5" >c..</text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (8 samples, 0.20%)</title><rect x="202.2" y="709" width="2.3" height="15.0" fill="rgb(237,165,18)" rx="2" ry="2" />
<text  x="205.17" y="719.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.37%)</title><rect x="633.5" y="661" width="4.3" height="15.0" fill="rgb(215,189,16)" rx="2" ry="2" />
<text  x="636.48" y="671.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (2 samples, 0.05%)</title><rect x="1185.9" y="741" width="0.6" height="15.0" fill="rgb(231,171,38)" rx="2" ry="2" />
<text  x="1188.94" y="751.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (18 samples, 0.44%)</title><rect x="1034.3" y="757" width="5.3" height="15.0" fill="rgb(225,198,37)" rx="2" ry="2" />
<text  x="1037.35" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="1112.0" y="853" width="0.3" height="15.0" fill="rgb(234,124,35)" rx="2" ry="2" />
<text  x="1115.03" y="863.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="1149.1" y="629" width="0.3" height="15.0" fill="rgb(228,181,31)" rx="2" ry="2" />
<text  x="1152.13" y="639.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="10.6" y="661" width="0.3" height="15.0" fill="rgb(251,76,52)" rx="2" ry="2" />
<text  x="13.58" y="671.5" ></text>
</g>
<g >
<title>tick_sched_timer (19 samples, 0.47%)</title><rect x="1142.8" y="597" width="5.5" height="15.0" fill="rgb(207,146,22)" rx="2" ry="2" />
<text  x="1145.75" y="607.5" ></text>
</g>
<g >
<title>lind_exit (6 samples, 0.15%)</title><rect x="160.7" y="821" width="1.8" height="15.0" fill="rgb(240,219,54)" rx="2" ry="2" />
<text  x="163.72" y="831.5" ></text>
</g>
<g >
<title>x86_pmu_enable (2 samples, 0.05%)</title><rect x="37.8" y="661" width="0.6" height="15.0" fill="rgb(241,79,50)" rx="2" ry="2" />
<text  x="40.83" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (290 samples, 7.12%)</title><rect x="456.1" y="629" width="84.0" height="15.0" fill="rgb(244,29,8)" rx="2" ry="2" />
<text  x="459.09" y="639.5" >__memmove..</text>
</g>
<g >
<title>__x64_sys_process_vm_writev (2 samples, 0.05%)</title><rect x="1045.1" y="789" width="0.6" height="15.0" fill="rgb(224,141,30)" rx="2" ry="2" />
<text  x="1048.07" y="799.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (6 samples, 0.15%)</title><rect x="1154.3" y="533" width="1.8" height="15.0" fill="rgb(215,107,19)" rx="2" ry="2" />
<text  x="1157.35" y="543.5" ></text>
</g>
<g >
<title>CachedMapWritableText (1 samples, 0.02%)</title><rect x="150.0" y="789" width="0.3" height="15.0" fill="rgb(248,82,20)" rx="2" ry="2" />
<text  x="153.00" y="799.5" ></text>
</g>
<g >
<title>common_interrupt (7 samples, 0.17%)</title><rect x="1114.6" y="757" width="2.1" height="15.0" fill="rgb(231,52,33)" rx="2" ry="2" />
<text  x="1117.64" y="767.5" ></text>
</g>
<g >
<title>ip6_mc_input (1 samples, 0.02%)</title><rect x="1116.4" y="501" width="0.3" height="15.0" fill="rgb(223,96,7)" rx="2" ry="2" />
<text  x="1119.38" y="511.5" ></text>
</g>
<g >
<title>NaClDescUnref (66 samples, 1.62%)</title><rect x="880.7" y="821" width="19.2" height="15.0" fill="rgb(236,21,28)" rx="2" ry="2" />
<text  x="883.72" y="831.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1117.5" y="549" width="0.3" height="15.0" fill="rgb(224,168,50)" rx="2" ry="2" />
<text  x="1120.54" y="559.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="162.5" y="501" width="0.3" height="15.0" fill="rgb(244,177,27)" rx="2" ry="2" />
<text  x="165.46" y="511.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (33 samples, 0.81%)</title><rect x="150.3" y="773" width="9.6" height="15.0" fill="rgb(238,221,36)" rx="2" ry="2" />
<text  x="153.29" y="783.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1148.0" y="517" width="0.3" height="15.0" fill="rgb(251,20,36)" rx="2" ry="2" />
<text  x="1150.97" y="527.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.02%)</title><rect x="1034.1" y="709" width="0.2" height="15.0" fill="rgb(229,56,47)" rx="2" ry="2" />
<text  x="1037.06" y="719.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.02%)</title><rect x="1033.2" y="693" width="0.3" height="15.0" fill="rgb(229,193,28)" rx="2" ry="2" />
<text  x="1036.19" y="703.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.02%)</title><rect x="1010.3" y="805" width="0.3" height="15.0" fill="rgb(238,186,50)" rx="2" ry="2" />
<text  x="1013.29" y="815.5" ></text>
</g>
<g >
<title>exit_notify (1 samples, 0.02%)</title><rect x="1106.2" y="741" width="0.3" height="15.0" fill="rgb(216,177,5)" rx="2" ry="2" />
<text  x="1109.23" y="751.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="345.1" y="565" width="0.3" height="15.0" fill="rgb(212,227,18)" rx="2" ry="2" />
<text  x="348.07" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (46 samples, 1.13%)</title><rect x="809.1" y="693" width="13.4" height="15.0" fill="rgb(215,224,22)" rx="2" ry="2" />
<text  x="812.13" y="703.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.02%)</title><rect x="554.6" y="725" width="0.3" height="15.0" fill="rgb(214,211,7)" rx="2" ry="2" />
<text  x="557.64" y="735.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="1103.0" y="581" width="0.3" height="15.0" fill="rgb(216,146,25)" rx="2" ry="2" />
<text  x="1106.04" y="591.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (3 samples, 0.07%)</title><rect x="1144.8" y="549" width="0.9" height="15.0" fill="rgb(217,192,30)" rx="2" ry="2" />
<text  x="1147.78" y="559.5" ></text>
</g>
<g >
<title>rcu_segcblist_ready_cbs (1 samples, 0.02%)</title><rect x="1145.4" y="517" width="0.3" height="15.0" fill="rgb(224,71,33)" rx="2" ry="2" />
<text  x="1148.36" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_get_next_event (2 samples, 0.05%)</title><rect x="1141.3" y="629" width="0.6" height="15.0" fill="rgb(240,128,48)" rx="2" ry="2" />
<text  x="1144.30" y="639.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="1045.4" y="469" width="0.3" height="15.0" fill="rgb(224,195,39)" rx="2" ry="2" />
<text  x="1048.36" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="161.9" y="245" width="0.3" height="15.0" fill="rgb(228,17,20)" rx="2" ry="2" />
<text  x="164.88" y="255.5" ></text>
</g>
<g >
<title>lind_mmap (1 samples, 0.02%)</title><rect x="163.0" y="805" width="0.3" height="15.0" fill="rgb(216,28,27)" rx="2" ry="2" />
<text  x="166.04" y="815.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="10.0" y="789" width="0.3" height="15.0" fill="rgb(245,212,43)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.02%)</title><rect x="571.7" y="837" width="0.3" height="15.0" fill="rgb(243,143,38)" rx="2" ry="2" />
<text  x="574.74" y="847.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.02%)</title><rect x="149.7" y="661" width="0.3" height="15.0" fill="rgb(228,191,53)" rx="2" ry="2" />
<text  x="152.71" y="671.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.07%)</title><rect x="161.6" y="613" width="0.9" height="15.0" fill="rgb(239,72,30)" rx="2" ry="2" />
<text  x="164.59" y="623.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2 samples, 0.05%)</title><rect x="159.9" y="805" width="0.5" height="15.0" fill="rgb(233,31,26)" rx="2" ry="2" />
<text  x="162.86" y="815.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="159.3" y="693" width="0.3" height="15.0" fill="rgb(214,101,3)" rx="2" ry="2" />
<text  x="162.28" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="160.4" y="661" width="0.3" height="15.0" fill="rgb(212,219,6)" rx="2" ry="2" />
<text  x="163.43" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="161.9" y="213" width="0.3" height="15.0" fill="rgb(231,111,36)" rx="2" ry="2" />
<text  x="164.88" y="223.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (8 samples, 0.20%)</title><rect x="90.9" y="837" width="2.3" height="15.0" fill="rgb(208,192,16)" rx="2" ry="2" />
<text  x="93.87" y="847.5" ></text>
</g>
<g >
<title>pipe_poll (1 samples, 0.02%)</title><rect x="1111.2" y="805" width="0.2" height="15.0" fill="rgb(211,184,44)" rx="2" ry="2" />
<text  x="1114.16" y="815.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="150.0" y="725" width="0.3" height="15.0" fill="rgb(207,70,52)" rx="2" ry="2" />
<text  x="153.00" y="735.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (8 samples, 0.20%)</title><rect x="1183.0" y="709" width="2.4" height="15.0" fill="rgb(230,108,36)" rx="2" ry="2" />
<text  x="1186.04" y="719.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="43.3" y="869" width="0.3" height="15.0" fill="rgb(244,26,45)" rx="2" ry="2" />
<text  x="46.33" y="879.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (3 samples, 0.07%)</title><rect x="148.8" y="805" width="0.9" height="15.0" fill="rgb(241,144,34)" rx="2" ry="2" />
<text  x="151.84" y="815.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="822.5" y="709" width="0.5" height="15.0" fill="rgb(230,197,38)" rx="2" ry="2" />
<text  x="825.46" y="719.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (12 samples, 0.29%)</title><rect x="616.4" y="677" width="3.5" height="15.0" fill="rgb(250,195,16)" rx="2" ry="2" />
<text  x="619.38" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.02%)</title><rect x="163.0" y="677" width="0.3" height="15.0" fill="rgb(245,82,36)" rx="2" ry="2" />
<text  x="166.04" y="687.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.02%)</title><rect x="1185.1" y="661" width="0.3" height="15.0" fill="rgb(245,195,27)" rx="2" ry="2" />
<text  x="1188.07" y="671.5" ></text>
</g>
<g >
<title>_start (2 samples, 0.05%)</title><rect x="10.3" y="885" width="0.6" height="15.0" fill="rgb(228,197,30)" rx="2" ry="2" />
<text  x="13.29" y="895.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="161.0" y="421" width="0.3" height="15.0" fill="rgb(211,101,19)" rx="2" ry="2" />
<text  x="164.01" y="431.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (2 samples, 0.05%)</title><rect x="946.5" y="757" width="0.6" height="15.0" fill="rgb(254,80,45)" rx="2" ry="2" />
<text  x="949.52" y="767.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.20%)</title><rect x="813.8" y="597" width="2.3" height="15.0" fill="rgb(238,154,47)" rx="2" ry="2" />
<text  x="816.77" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="162.5" y="517" width="0.3" height="15.0" fill="rgb(224,214,36)" rx="2" ry="2" />
<text  x="165.46" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1148.0" y="501" width="0.3" height="15.0" fill="rgb(212,159,51)" rx="2" ry="2" />
<text  x="1150.97" y="511.5" ></text>
</g>
<g >
<title>ovl_write_iter (3 samples, 0.07%)</title><rect x="160.7" y="549" width="0.9" height="15.0" fill="rgb(240,215,33)" rx="2" ry="2" />
<text  x="163.72" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="161.9" y="149" width="0.3" height="15.0" fill="rgb(224,11,29)" rx="2" ry="2" />
<text  x="164.88" y="159.5" ></text>
</g>
<g >
<title>cmd_record (1 samples, 0.02%)</title><rect x="11.2" y="869" width="0.2" height="15.0" fill="rgb(251,113,45)" rx="2" ry="2" />
<text  x="14.16" y="879.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="857.5" y="629" width="0.3" height="15.0" fill="rgb(227,227,17)" rx="2" ry="2" />
<text  x="860.54" y="639.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.12%)</title><rect x="821.0" y="677" width="1.5" height="15.0" fill="rgb(209,88,9)" rx="2" ry="2" />
<text  x="824.01" y="687.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="10.6" y="677" width="0.3" height="15.0" fill="rgb(206,89,31)" rx="2" ry="2" />
<text  x="13.58" y="687.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="10.3" y="677" width="0.3" height="15.0" fill="rgb(248,5,3)" rx="2" ry="2" />
<text  x="13.29" y="687.5" ></text>
</g>
<g >
<title>arch_cpu_idle_exit (1 samples, 0.02%)</title><rect x="1137.2" y="773" width="0.3" height="15.0" fill="rgb(222,171,12)" rx="2" ry="2" />
<text  x="1140.25" y="783.5" ></text>
</g>
<g >
<title>release_pages (14 samples, 0.34%)</title><rect x="1102.2" y="597" width="4.0" height="15.0" fill="rgb(229,192,15)" rx="2" ry="2" />
<text  x="1105.17" y="607.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (3 samples, 0.07%)</title><rect x="48.6" y="869" width="0.8" height="15.0" fill="rgb(210,56,42)" rx="2" ry="2" />
<text  x="51.55" y="879.5" ></text>
</g>
<g >
<title>should_fail_alloc_page (1 samples, 0.02%)</title><rect x="1028.6" y="741" width="0.2" height="15.0" fill="rgb(225,155,54)" rx="2" ry="2" />
<text  x="1031.55" y="751.5" ></text>
</g>
<g >
<title>wait_for (2 samples, 0.05%)</title><rect x="10.3" y="789" width="0.6" height="15.0" fill="rgb(232,174,54)" rx="2" ry="2" />
<text  x="13.29" y="799.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.05%)</title><rect x="10.3" y="805" width="0.6" height="15.0" fill="rgb(206,76,47)" rx="2" ry="2" />
<text  x="13.29" y="815.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (5 samples, 0.12%)</title><rect x="200.7" y="677" width="1.5" height="15.0" fill="rgb(246,52,53)" rx="2" ry="2" />
<text  x="203.72" y="687.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (23 samples, 0.56%)</title><rect x="849.7" y="709" width="6.7" height="15.0" fill="rgb(215,12,1)" rx="2" ry="2" />
<text  x="852.71" y="719.5" ></text>
</g>
<g >
<title>exec_binprm (1 samples, 0.02%)</title><rect x="11.2" y="709" width="0.2" height="15.0" fill="rgb(207,130,5)" rx="2" ry="2" />
<text  x="14.16" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_socketpair (1 samples, 0.02%)</title><rect x="1087.7" y="693" width="0.3" height="15.0" fill="rgb(211,130,11)" rx="2" ry="2" />
<text  x="1090.68" y="703.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.02%)</title><rect x="1045.7" y="709" width="0.2" height="15.0" fill="rgb(248,94,15)" rx="2" ry="2" />
<text  x="1048.65" y="719.5" ></text>
</g>
<g >
<title>NaClForkThreadContextSetup (1 samples, 0.02%)</title><rect x="162.8" y="789" width="0.2" height="15.0" fill="rgb(253,159,54)" rx="2" ry="2" />
<text  x="165.75" y="799.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.02%)</title><rect x="34.9" y="501" width="0.3" height="15.0" fill="rgb(207,81,14)" rx="2" ry="2" />
<text  x="37.93" y="511.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (3 samples, 0.07%)</title><rect x="161.6" y="533" width="0.9" height="15.0" fill="rgb(214,58,2)" rx="2" ry="2" />
<text  x="164.59" y="543.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (2 samples, 0.05%)</title><rect x="44.8" y="869" width="0.6" height="15.0" fill="rgb(239,144,15)" rx="2" ry="2" />
<text  x="47.78" y="879.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5 samples, 0.12%)</title><rect x="1116.7" y="773" width="1.4" height="15.0" fill="rgb(207,2,29)" rx="2" ry="2" />
<text  x="1119.67" y="783.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="94.1" y="837" width="0.2" height="15.0" fill="rgb(253,123,47)" rx="2" ry="2" />
<text  x="97.06" y="847.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (3 samples, 0.07%)</title><rect x="36.4" y="485" width="0.8" height="15.0" fill="rgb(223,174,54)" rx="2" ry="2" />
<text  x="39.38" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (23 samples, 0.56%)</title><rect x="849.7" y="677" width="6.7" height="15.0" fill="rgb(220,100,26)" rx="2" ry="2" />
<text  x="852.71" y="687.5" ></text>
</g>
<g >
<title>do_exit (35 samples, 0.86%)</title><rect x="1096.7" y="757" width="10.1" height="15.0" fill="rgb(221,49,43)" rx="2" ry="2" />
<text  x="1099.67" y="767.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (2 samples, 0.05%)</title><rect x="1048.3" y="869" width="0.5" height="15.0" fill="rgb(237,150,47)" rx="2" ry="2" />
<text  x="1051.26" y="879.5" ></text>
</g>
<g >
<title>vma_interval_tree_remove (1 samples, 0.02%)</title><rect x="10.9" y="709" width="0.3" height="15.0" fill="rgb(253,71,38)" rx="2" ry="2" />
<text  x="13.87" y="719.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (2 samples, 0.05%)</title><rect x="160.7" y="437" width="0.6" height="15.0" fill="rgb(205,75,13)" rx="2" ry="2" />
<text  x="163.72" y="447.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="10.6" y="629" width="0.3" height="15.0" fill="rgb(228,18,28)" rx="2" ry="2" />
<text  x="13.58" y="639.5" ></text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.02%)</title><rect x="150.0" y="533" width="0.3" height="15.0" fill="rgb(238,11,22)" rx="2" ry="2" />
<text  x="153.00" y="543.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.02%)</title><rect x="1110.9" y="821" width="0.3" height="15.0" fill="rgb(233,162,4)" rx="2" ry="2" />
<text  x="1113.87" y="831.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="161.3" y="373" width="0.3" height="15.0" fill="rgb(240,201,6)" rx="2" ry="2" />
<text  x="164.30" y="383.5" ></text>
</g>
<g >
<title>NaClThreadCtor (1 samples, 0.02%)</title><rect x="160.4" y="725" width="0.3" height="15.0" fill="rgb(243,126,47)" rx="2" ry="2" />
<text  x="163.43" y="735.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (3 samples, 0.07%)</title><rect x="160.7" y="485" width="0.9" height="15.0" fill="rgb(247,190,17)" rx="2" ry="2" />
<text  x="163.72" y="495.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::libc_mmap (1 samples, 0.02%)</title><rect x="163.0" y="741" width="0.3" height="15.0" fill="rgb(225,11,18)" rx="2" ry="2" />
<text  x="166.04" y="751.5" ></text>
</g>
<g >
<title>alloc_pages_current (2 samples, 0.05%)</title><rect x="35.8" y="469" width="0.6" height="15.0" fill="rgb(209,111,9)" rx="2" ry="2" />
<text  x="38.80" y="479.5" ></text>
</g>
<g >
<title>std::thread::panicking (3 samples, 0.07%)</title><rect x="865.7" y="709" width="0.8" height="15.0" fill="rgb(243,14,25)" rx="2" ry="2" />
<text  x="868.65" y="719.5" ></text>
</g>
<g >
<title>do_futex (3 samples, 0.07%)</title><rect x="1110.3" y="837" width="0.9" height="15.0" fill="rgb(229,57,12)" rx="2" ry="2" />
<text  x="1113.29" y="847.5" ></text>
</g>
<g >
<title>NaClLog (2 samples, 0.05%)</title><rect x="1045.9" y="869" width="0.6" height="15.0" fill="rgb(220,9,19)" rx="2" ry="2" />
<text  x="1048.94" y="879.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="1045.4" y="485" width="0.3" height="15.0" fill="rgb(235,211,46)" rx="2" ry="2" />
<text  x="1048.36" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (5 samples, 0.12%)</title><rect x="45.4" y="869" width="1.4" height="15.0" fill="rgb(242,183,33)" rx="2" ry="2" />
<text  x="48.36" y="879.5" ></text>
</g>
<g >
<title>NaClVmmapChangeProt (1 samples, 0.02%)</title><rect x="162.8" y="757" width="0.2" height="15.0" fill="rgb(220,75,23)" rx="2" ry="2" />
<text  x="165.75" y="767.5" ></text>
</g>
<g >
<title>perf_event_task_tick (5 samples, 0.12%)</title><rect x="1146.5" y="533" width="1.5" height="15.0" fill="rgb(253,2,12)" rx="2" ry="2" />
<text  x="1149.52" y="543.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (1 samples, 0.02%)</title><rect x="161.9" y="293" width="0.3" height="15.0" fill="rgb(239,178,46)" rx="2" ry="2" />
<text  x="164.88" y="303.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.37%)</title><rect x="811.7" y="613" width="4.4" height="15.0" fill="rgb(236,153,44)" rx="2" ry="2" />
<text  x="814.74" y="623.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 0.02%)</title><rect x="160.4" y="613" width="0.3" height="15.0" fill="rgb(206,160,10)" rx="2" ry="2" />
<text  x="163.43" y="623.5" ></text>
</g>
<g >
<title>__sys_socketpair (1 samples, 0.02%)</title><rect x="1087.7" y="677" width="0.3" height="15.0" fill="rgb(222,127,0)" rx="2" ry="2" />
<text  x="1090.68" y="687.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1045.1" y="533" width="0.3" height="15.0" fill="rgb(219,35,37)" rx="2" ry="2" />
<text  x="1048.07" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.07%)</title><rect x="864.8" y="677" width="0.9" height="15.0" fill="rgb(242,139,42)" rx="2" ry="2" />
<text  x="867.78" y="687.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.02%)</title><rect x="163.0" y="629" width="0.3" height="15.0" fill="rgb(229,156,45)" rx="2" ry="2" />
<text  x="166.04" y="639.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 1.57%)</title><rect x="15.5" y="533" width="18.6" height="15.0" fill="rgb(205,63,53)" rx="2" ry="2" />
<text  x="18.51" y="543.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="411.2" y="597" width="0.2" height="15.0" fill="rgb(232,225,20)" rx="2" ry="2" />
<text  x="414.16" y="607.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.07%)</title><rect x="1115.8" y="677" width="0.9" height="15.0" fill="rgb(226,161,47)" rx="2" ry="2" />
<text  x="1118.80" y="687.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.02%)</title><rect x="1045.7" y="853" width="0.2" height="15.0" fill="rgb(218,131,40)" rx="2" ry="2" />
<text  x="1048.65" y="863.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1045.7" y="693" width="0.2" height="15.0" fill="rgb(224,197,54)" rx="2" ry="2" />
<text  x="1048.65" y="703.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (32 samples, 0.79%)</title><rect x="856.4" y="741" width="9.3" height="15.0" fill="rgb(243,96,12)" rx="2" ry="2" />
<text  x="859.38" y="751.5" ></text>
</g>
<g >
<title>get_new_window_size (2 samples, 0.05%)</title><rect x="10.3" y="773" width="0.6" height="15.0" fill="rgb(250,225,21)" rx="2" ry="2" />
<text  x="13.29" y="783.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (27 samples, 0.66%)</title><rect x="841.0" y="677" width="7.8" height="15.0" fill="rgb(254,28,22)" rx="2" ry="2" />
<text  x="844.01" y="687.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (11 samples, 0.27%)</title><rect x="738.1" y="661" width="3.2" height="15.0" fill="rgb(222,198,20)" rx="2" ry="2" />
<text  x="741.12" y="671.5" ></text>
</g>
<g >
<title>ndisc_recv_na (1 samples, 0.02%)</title><rect x="1116.4" y="421" width="0.3" height="15.0" fill="rgb(232,28,4)" rx="2" ry="2" />
<text  x="1119.38" y="431.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (2 samples, 0.05%)</title><rect x="752.9" y="661" width="0.6" height="15.0" fill="rgb(245,167,38)" rx="2" ry="2" />
<text  x="755.90" y="671.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="1112.0" y="773" width="0.3" height="15.0" fill="rgb(227,180,20)" rx="2" ry="2" />
<text  x="1115.03" y="783.5" ></text>
</g>
<g >
<title>dispatcher (6 samples, 0.15%)</title><rect x="160.7" y="805" width="1.8" height="15.0" fill="rgb(242,165,36)" rx="2" ry="2" />
<text  x="163.72" y="815.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="1030.3" y="741" width="0.3" height="15.0" fill="rgb(207,114,2)" rx="2" ry="2" />
<text  x="1033.29" y="751.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.02%)</title><rect x="1087.7" y="869" width="0.3" height="15.0" fill="rgb(227,209,7)" rx="2" ry="2" />
<text  x="1090.68" y="879.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="1106.5" y="741" width="0.3" height="15.0" fill="rgb(250,123,15)" rx="2" ry="2" />
<text  x="1109.52" y="751.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (194 samples, 4.77%)</title><rect x="673.5" y="693" width="56.2" height="15.0" fill="rgb(210,187,35)" rx="2" ry="2" />
<text  x="676.48" y="703.5" >&lt;std:..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.22%)</title><rect x="818.4" y="581" width="2.6" height="15.0" fill="rgb(210,164,5)" rx="2" ry="2" />
<text  x="821.41" y="591.5" ></text>
</g>
<g >
<title>schedule_idle (8 samples, 0.20%)</title><rect x="1186.5" y="757" width="2.3" height="15.0" fill="rgb(232,4,21)" rx="2" ry="2" />
<text  x="1189.52" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="94.1" y="853" width="0.2" height="15.0" fill="rgb(249,63,36)" rx="2" ry="2" />
<text  x="97.06" y="863.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (1 samples, 0.02%)</title><rect x="37.2" y="405" width="0.3" height="15.0" fill="rgb(223,178,20)" rx="2" ry="2" />
<text  x="40.25" y="415.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="149.7" y="677" width="0.3" height="15.0" fill="rgb(223,78,2)" rx="2" ry="2" />
<text  x="152.71" y="687.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.02%)</title><rect x="162.5" y="613" width="0.3" height="15.0" fill="rgb(226,83,7)" rx="2" ry="2" />
<text  x="165.46" y="623.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="1188.3" y="677" width="0.3" height="15.0" fill="rgb(242,206,49)" rx="2" ry="2" />
<text  x="1191.26" y="687.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (1 samples, 0.02%)</title><rect x="160.4" y="853" width="0.3" height="15.0" fill="rgb(227,96,26)" rx="2" ry="2" />
<text  x="163.43" y="863.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (2 samples, 0.05%)</title><rect x="892.0" y="773" width="0.6" height="15.0" fill="rgb(221,85,14)" rx="2" ry="2" />
<text  x="895.03" y="783.5" ></text>
</g>
<g >
<title>ip6_input (1 samples, 0.02%)</title><rect x="1116.4" y="485" width="0.3" height="15.0" fill="rgb(252,27,20)" rx="2" ry="2" />
<text  x="1119.38" y="495.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="1113.5" y="773" width="0.3" height="15.0" fill="rgb(211,35,23)" rx="2" ry="2" />
<text  x="1116.48" y="783.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="161.9" y="69" width="0.3" height="15.0" fill="rgb(214,12,3)" rx="2" ry="2" />
<text  x="164.88" y="79.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.02%)</title><rect x="35.5" y="389" width="0.3" height="15.0" fill="rgb(212,41,23)" rx="2" ry="2" />
<text  x="38.51" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.10%)</title><rect x="821.0" y="661" width="1.2" height="15.0" fill="rgb(207,81,14)" rx="2" ry="2" />
<text  x="824.01" y="671.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.05%)</title><rect x="1008.8" y="757" width="0.6" height="15.0" fill="rgb(254,161,15)" rx="2" ry="2" />
<text  x="1011.84" y="767.5" ></text>
</g>
<g >
<title>evlist__start_workload (1 samples, 0.02%)</title><rect x="34.1" y="837" width="0.2" height="15.0" fill="rgb(242,108,40)" rx="2" ry="2" />
<text  x="37.06" y="847.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="1148.0" y="533" width="0.3" height="15.0" fill="rgb(221,182,12)" rx="2" ry="2" />
<text  x="1150.97" y="543.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.02%)</title><rect x="880.7" y="805" width="0.3" height="15.0" fill="rgb(246,149,45)" rx="2" ry="2" />
<text  x="883.72" y="815.5" ></text>
</g>
<g >
<title>CompareAndSwap (2 samples, 0.05%)</title><rect x="40.7" y="869" width="0.6" height="15.0" fill="rgb(220,18,45)" rx="2" ry="2" />
<text  x="43.72" y="879.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.02%)</title><rect x="1041.0" y="821" width="0.3" height="15.0" fill="rgb(243,17,32)" rx="2" ry="2" />
<text  x="1044.01" y="831.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.02%)</title><rect x="150.0" y="469" width="0.3" height="15.0" fill="rgb(215,226,34)" rx="2" ry="2" />
<text  x="153.00" y="479.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.02%)</title><rect x="161.3" y="405" width="0.3" height="15.0" fill="rgb(206,143,25)" rx="2" ry="2" />
<text  x="164.30" y="415.5" ></text>
</g>
<g >
<title>NaClSysWrite (2 samples, 0.05%)</title><rect x="43.9" y="869" width="0.6" height="15.0" fill="rgb(231,55,1)" rx="2" ry="2" />
<text  x="46.91" y="879.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (2 samples, 0.05%)</title><rect x="1142.8" y="565" width="0.5" height="15.0" fill="rgb(212,124,5)" rx="2" ry="2" />
<text  x="1145.75" y="575.5" ></text>
</g>
<g >
<title>do_shared_fault (2 samples, 0.05%)</title><rect x="1045.1" y="613" width="0.6" height="15.0" fill="rgb(254,8,10)" rx="2" ry="2" />
<text  x="1048.07" y="623.5" ></text>
</g>
<g >
<title>restore_regs_and_return_to_kernel (1 samples, 0.02%)</title><rect x="1180.7" y="725" width="0.3" height="15.0" fill="rgb(231,50,7)" rx="2" ry="2" />
<text  x="1183.72" y="735.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="1137.0" y="741" width="0.2" height="15.0" fill="rgb(228,45,44)" rx="2" ry="2" />
<text  x="1139.96" y="751.5" ></text>
</g>
<g >
<title>tick_irq_enter (2 samples, 0.05%)</title><rect x="1151.7" y="661" width="0.6" height="15.0" fill="rgb(242,87,54)" rx="2" ry="2" />
<text  x="1154.74" y="671.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (76 samples, 1.87%)</title><rect x="420.4" y="645" width="22.1" height="15.0" fill="rgb(239,119,3)" rx="2" ry="2" />
<text  x="423.43" y="655.5" >c..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="162.2" y="277" width="0.3" height="15.0" fill="rgb(241,113,53)" rx="2" ry="2" />
<text  x="165.17" y="287.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.05%)</title><rect x="159.9" y="725" width="0.5" height="15.0" fill="rgb(220,86,53)" rx="2" ry="2" />
<text  x="162.86" y="735.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="150.0" y="645" width="0.3" height="15.0" fill="rgb(205,228,38)" rx="2" ry="2" />
<text  x="153.00" y="655.5" ></text>
</g>
<g >
<title>calc_load_nohz_stop (1 samples, 0.02%)</title><rect x="1136.4" y="805" width="0.3" height="15.0" fill="rgb(234,181,1)" rx="2" ry="2" />
<text  x="1139.38" y="815.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (47 samples, 1.15%)</title><rect x="866.5" y="725" width="13.6" height="15.0" fill="rgb(248,154,1)" rx="2" ry="2" />
<text  x="869.52" y="735.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (2 samples, 0.05%)</title><rect x="162.5" y="853" width="0.5" height="15.0" fill="rgb(248,104,46)" rx="2" ry="2" />
<text  x="165.46" y="863.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (63 samples, 1.55%)</title><rect x="69.1" y="869" width="18.3" height="15.0" fill="rgb(215,23,14)" rx="2" ry="2" />
<text  x="72.13" y="879.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="345.1" y="533" width="0.3" height="15.0" fill="rgb(248,148,35)" rx="2" ry="2" />
<text  x="348.07" y="543.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (3 samples, 0.07%)</title><rect x="865.7" y="725" width="0.8" height="15.0" fill="rgb(241,42,46)" rx="2" ry="2" />
<text  x="868.65" y="735.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="35.5" y="453" width="0.3" height="15.0" fill="rgb(232,183,44)" rx="2" ry="2" />
<text  x="38.51" y="463.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (3 samples, 0.07%)</title><rect x="848.8" y="693" width="0.9" height="15.0" fill="rgb(229,24,20)" rx="2" ry="2" />
<text  x="851.84" y="703.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.02%)</title><rect x="163.0" y="581" width="0.3" height="15.0" fill="rgb(221,139,43)" rx="2" ry="2" />
<text  x="166.04" y="591.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (1 samples, 0.02%)</title><rect x="899.0" y="773" width="0.3" height="15.0" fill="rgb(226,39,53)" rx="2" ry="2" />
<text  x="901.99" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (33 samples, 0.81%)</title><rect x="610.3" y="709" width="9.6" height="15.0" fill="rgb(246,163,0)" rx="2" ry="2" />
<text  x="613.29" y="719.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (32 samples, 0.79%)</title><rect x="561.0" y="805" width="9.3" height="15.0" fill="rgb(210,181,22)" rx="2" ry="2" />
<text  x="564.01" y="815.5" ></text>
</g>
<g >
<title>__memcg_kmem_uncharge (1 samples, 0.02%)</title><rect x="1187.1" y="677" width="0.3" height="15.0" fill="rgb(228,117,34)" rx="2" ry="2" />
<text  x="1190.10" y="687.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="908.0" y="789" width="0.3" height="15.0" fill="rgb(205,0,1)" rx="2" ry="2" />
<text  x="910.97" y="799.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (6 samples, 0.15%)</title><rect x="160.7" y="757" width="1.8" height="15.0" fill="rgb(208,20,40)" rx="2" ry="2" />
<text  x="163.72" y="767.5" ></text>
</g>
<g >
<title>fdarray__poll (1 samples, 0.02%)</title><rect x="34.3" y="837" width="0.3" height="15.0" fill="rgb(248,207,28)" rx="2" ry="2" />
<text  x="37.35" y="847.5" ></text>
</g>
<g >
<title>insert_work (2 samples, 0.05%)</title><rect x="1117.5" y="597" width="0.6" height="15.0" fill="rgb(217,2,24)" rx="2" ry="2" />
<text  x="1120.54" y="607.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.05%)</title><rect x="1110.3" y="773" width="0.6" height="15.0" fill="rgb(249,158,50)" rx="2" ry="2" />
<text  x="1113.29" y="783.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.02%)</title><rect x="94.6" y="837" width="0.3" height="15.0" fill="rgb(234,54,44)" rx="2" ry="2" />
<text  x="97.64" y="847.5" ></text>
</g>
<g >
<title>NaClDescRef (1 samples, 0.02%)</title><rect x="901.9" y="805" width="0.3" height="15.0" fill="rgb(243,203,5)" rx="2" ry="2" />
<text  x="904.88" y="815.5" ></text>
</g>
<g >
<title>NaClLog (2 samples, 0.05%)</title><rect x="899.3" y="789" width="0.6" height="15.0" fill="rgb(218,152,24)" rx="2" ry="2" />
<text  x="902.28" y="799.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (74 samples, 1.82%)</title><rect x="1114.6" y="821" width="21.5" height="15.0" fill="rgb(208,61,9)" rx="2" ry="2" />
<text  x="1117.64" y="831.5" >c..</text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (2 samples, 0.05%)</title><rect x="822.5" y="693" width="0.5" height="15.0" fill="rgb(250,212,50)" rx="2" ry="2" />
<text  x="825.46" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (3 samples, 0.07%)</title><rect x="160.7" y="693" width="0.9" height="15.0" fill="rgb(239,31,42)" rx="2" ry="2" />
<text  x="163.72" y="703.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (6 samples, 0.15%)</title><rect x="160.7" y="789" width="1.8" height="15.0" fill="rgb(228,162,50)" rx="2" ry="2" />
<text  x="163.72" y="799.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (3 samples, 0.07%)</title><rect x="161.6" y="597" width="0.9" height="15.0" fill="rgb(242,190,7)" rx="2" ry="2" />
<text  x="164.59" y="607.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="162.5" y="405" width="0.3" height="15.0" fill="rgb(208,122,40)" rx="2" ry="2" />
<text  x="165.46" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="163.9" y="661" width="0.3" height="15.0" fill="rgb(227,43,50)" rx="2" ry="2" />
<text  x="166.91" y="671.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (46 samples, 1.13%)</title><rect x="809.1" y="725" width="13.4" height="15.0" fill="rgb(237,113,48)" rx="2" ry="2" />
<text  x="812.13" y="735.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="162.5" y="277" width="0.3" height="15.0" fill="rgb(205,17,15)" rx="2" ry="2" />
<text  x="165.46" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="848.8" y="645" width="0.3" height="15.0" fill="rgb(221,188,29)" rx="2" ry="2" />
<text  x="851.84" y="655.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="1112.0" y="837" width="0.3" height="15.0" fill="rgb(221,187,27)" rx="2" ry="2" />
<text  x="1115.03" y="847.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (39 samples, 0.96%)</title><rect x="741.6" y="661" width="11.3" height="15.0" fill="rgb(253,100,24)" rx="2" ry="2" />
<text  x="744.59" y="671.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.02%)</title><rect x="1045.7" y="789" width="0.2" height="15.0" fill="rgb(239,213,45)" rx="2" ry="2" />
<text  x="1048.65" y="799.5" ></text>
</g>
<g >
<title>ion (11 samples, 0.27%)</title><rect x="34.6" y="757" width="3.2" height="15.0" fill="rgb(232,29,35)" rx="2" ry="2" />
<text  x="37.64" y="767.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (156 samples, 3.83%)</title><rect x="756.1" y="677" width="45.2" height="15.0" fill="rgb(223,98,6)" rx="2" ry="2" />
<text  x="759.09" y="687.5" >ring..</text>
</g>
<g >
<title>mark_buffer_dirty (2 samples, 0.05%)</title><rect x="36.7" y="469" width="0.5" height="15.0" fill="rgb(215,4,20)" rx="2" ry="2" />
<text  x="39.67" y="479.5" ></text>
</g>
<g >
<title>NaClCreateThread (1 samples, 0.02%)</title><rect x="162.8" y="821" width="0.2" height="15.0" fill="rgb(220,67,5)" rx="2" ry="2" />
<text  x="165.75" y="831.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.02%)</title><rect x="10.9" y="805" width="0.3" height="15.0" fill="rgb(240,108,8)" rx="2" ry="2" />
<text  x="13.87" y="815.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (2 samples, 0.05%)</title><rect x="35.2" y="469" width="0.6" height="15.0" fill="rgb(247,172,44)" rx="2" ry="2" />
<text  x="38.22" y="479.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (262 samples, 6.44%)</title><rect x="1114.1" y="885" width="75.9" height="15.0" fill="rgb(216,101,22)" rx="2" ry="2" />
<text  x="1117.06" y="895.5" >secondar..</text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (3 samples, 0.07%)</title><rect x="865.7" y="677" width="0.8" height="15.0" fill="rgb(241,144,39)" rx="2" ry="2" />
<text  x="868.65" y="687.5" ></text>
</g>
<g >
<title>handle_irq_event (4 samples, 0.10%)</title><rect x="1114.6" y="709" width="1.2" height="15.0" fill="rgb(210,51,48)" rx="2" ry="2" />
<text  x="1117.64" y="719.5" ></text>
</g>
<g >
<title>__split_vma (1 samples, 0.02%)</title><rect x="160.4" y="565" width="0.3" height="15.0" fill="rgb(245,58,28)" rx="2" ry="2" />
<text  x="163.43" y="575.5" ></text>
</g>
<g >
<title>alloc_page_buffers (1 samples, 0.02%)</title><rect x="34.9" y="469" width="0.3" height="15.0" fill="rgb(210,80,41)" rx="2" ry="2" />
<text  x="37.93" y="479.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (33 samples, 0.81%)</title><rect x="610.3" y="725" width="9.6" height="15.0" fill="rgb(218,85,0)" rx="2" ry="2" />
<text  x="613.29" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (11 samples, 0.27%)</title><rect x="738.1" y="645" width="3.2" height="15.0" fill="rgb(208,140,15)" rx="2" ry="2" />
<text  x="741.12" y="655.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="1110.6" y="693" width="0.3" height="15.0" fill="rgb(250,18,54)" rx="2" ry="2" />
<text  x="1113.58" y="703.5" ></text>
</g>
<g >
<title>mnt_may_suid (1 samples, 0.02%)</title><rect x="11.2" y="645" width="0.2" height="15.0" fill="rgb(245,222,15)" rx="2" ry="2" />
<text  x="14.16" y="655.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.32%)</title><rect x="859.6" y="629" width="3.7" height="15.0" fill="rgb(249,15,26)" rx="2" ry="2" />
<text  x="862.57" y="639.5" ></text>
</g>
<g >
<title>HandleStackContext (44 samples, 1.08%)</title><rect x="106.5" y="853" width="12.8" height="15.0" fill="rgb(234,84,15)" rx="2" ry="2" />
<text  x="109.52" y="863.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (1 samples, 0.02%)</title><rect x="162.2" y="357" width="0.3" height="15.0" fill="rgb(228,87,0)" rx="2" ry="2" />
<text  x="165.17" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (5 samples, 0.12%)</title><rect x="736.7" y="661" width="1.4" height="15.0" fill="rgb(253,43,5)" rx="2" ry="2" />
<text  x="739.67" y="671.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (1 samples, 0.02%)</title><rect x="1188.8" y="757" width="0.3" height="15.0" fill="rgb(221,191,24)" rx="2" ry="2" />
<text  x="1191.84" y="767.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (141 samples, 3.46%)</title><rect x="1139.9" y="725" width="40.8" height="15.0" fill="rgb(223,109,32)" rx="2" ry="2" />
<text  x="1142.86" y="735.5" >cpu..</text>
</g>
<g >
<title>xmalloc (1 samples, 0.02%)</title><rect x="10.6" y="725" width="0.3" height="15.0" fill="rgb(249,61,50)" rx="2" ry="2" />
<text  x="13.58" y="735.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (18 samples, 0.44%)</title><rect x="921.0" y="757" width="5.2" height="15.0" fill="rgb(248,193,4)" rx="2" ry="2" />
<text  x="924.01" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (194 samples, 4.77%)</title><rect x="673.5" y="709" width="56.2" height="15.0" fill="rgb(216,228,7)" rx="2" ry="2" />
<text  x="676.48" y="719.5" >core:..</text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (1 samples, 0.02%)</title><rect x="148.3" y="853" width="0.3" height="15.0" fill="rgb(227,35,17)" rx="2" ry="2" />
<text  x="151.26" y="863.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.02%)</title><rect x="162.5" y="341" width="0.3" height="15.0" fill="rgb(249,12,34)" rx="2" ry="2" />
<text  x="165.46" y="351.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (3 samples, 0.07%)</title><rect x="161.6" y="725" width="0.9" height="15.0" fill="rgb(246,47,52)" rx="2" ry="2" />
<text  x="164.59" y="735.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="161.9" y="133" width="0.3" height="15.0" fill="rgb(239,77,41)" rx="2" ry="2" />
<text  x="164.88" y="143.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="1106.5" y="581" width="0.3" height="15.0" fill="rgb(246,150,18)" rx="2" ry="2" />
<text  x="1109.52" y="591.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.81%)</title><rect x="610.3" y="741" width="9.6" height="15.0" fill="rgb(238,194,28)" rx="2" ry="2" />
<text  x="613.29" y="751.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="163.0" y="597" width="0.3" height="15.0" fill="rgb(211,228,36)" rx="2" ry="2" />
<text  x="166.04" y="607.5" ></text>
</g>
<g >
<title>NaClSysExecve (1 samples, 0.02%)</title><rect x="160.4" y="837" width="0.3" height="15.0" fill="rgb(219,27,9)" rx="2" ry="2" />
<text  x="163.43" y="847.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.02%)</title><rect x="1145.9" y="517" width="0.3" height="15.0" fill="rgb(220,43,16)" rx="2" ry="2" />
<text  x="1148.94" y="527.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (1 samples, 0.02%)</title><rect x="162.8" y="773" width="0.2" height="15.0" fill="rgb(237,1,33)" rx="2" ry="2" />
<text  x="165.75" y="783.5" ></text>
</g>
<g >
<title>lind_write (996 samples, 24.47%)</title><rect x="592.0" y="789" width="288.7" height="15.0" fill="rgb(231,41,22)" rx="2" ry="2" />
<text  x="595.03" y="799.5" >lind_write</text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.02%)</title><rect x="1040.4" y="709" width="0.3" height="15.0" fill="rgb(252,130,14)" rx="2" ry="2" />
<text  x="1043.43" y="719.5" ></text>
</g>
<g >
<title>event_function_call (2 samples, 0.05%)</title><rect x="37.8" y="773" width="0.6" height="15.0" fill="rgb(254,215,19)" rx="2" ry="2" />
<text  x="40.83" y="783.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (82 samples, 2.01%)</title><rect x="729.7" y="677" width="23.8" height="15.0" fill="rgb(231,81,44)" rx="2" ry="2" />
<text  x="732.71" y="687.5" >r..</text>
</g>
<g >
<title>arch_call_rest_init (182 samples, 4.47%)</title><rect x="1137.2" y="821" width="52.8" height="15.0" fill="rgb(227,69,53)" rx="2" ry="2" />
<text  x="1140.25" y="831.5" >arch_..</text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="160.7" y="629" width="0.9" height="15.0" fill="rgb(222,227,44)" rx="2" ry="2" />
<text  x="163.72" y="639.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1136.1" y="805" width="0.3" height="15.0" fill="rgb(215,178,42)" rx="2" ry="2" />
<text  x="1139.09" y="815.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.12%)</title><rect x="816.1" y="661" width="1.4" height="15.0" fill="rgb(225,206,51)" rx="2" ry="2" />
<text  x="819.09" y="671.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1,347 samples, 33.09%)</title><rect x="164.2" y="725" width="390.4" height="15.0" fill="rgb(206,151,37)" rx="2" ry="2" />
<text  x="167.20" y="735.5" >rustposix::interface::pipe::EmulatedPipe::read_from_p..</text>
</g>
<g >
<title>x86_64_start_reservations (182 samples, 4.47%)</title><rect x="1137.2" y="853" width="52.8" height="15.0" fill="rgb(231,0,37)" rx="2" ry="2" />
<text  x="1140.25" y="863.5" >x86_6..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5 samples, 0.12%)</title><rect x="1138.4" y="725" width="1.5" height="15.0" fill="rgb(248,19,39)" rx="2" ry="2" />
<text  x="1141.41" y="735.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (12 samples, 0.29%)</title><rect x="817.5" y="645" width="3.5" height="15.0" fill="rgb(215,226,25)" rx="2" ry="2" />
<text  x="820.54" y="655.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (1 samples, 0.02%)</title><rect x="162.2" y="341" width="0.3" height="15.0" fill="rgb(214,82,12)" rx="2" ry="2" />
<text  x="165.17" y="351.5" ></text>
</g>
<g >
<title>futex_wait (2 samples, 0.05%)</title><rect x="1110.3" y="821" width="0.6" height="15.0" fill="rgb(237,146,53)" rx="2" ry="2" />
<text  x="1113.29" y="831.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="856.7" y="629" width="0.3" height="15.0" fill="rgb(215,206,4)" rx="2" ry="2" />
<text  x="859.67" y="639.5" ></text>
</g>
<g >
<title>get_signal (35 samples, 0.86%)</title><rect x="1096.7" y="789" width="10.1" height="15.0" fill="rgb(242,142,13)" rx="2" ry="2" />
<text  x="1099.67" y="799.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="10.6" y="645" width="0.3" height="15.0" fill="rgb(213,6,50)" rx="2" ry="2" />
<text  x="13.58" y="655.5" ></text>
</g>
<g >
<title>NaClLog (9 samples, 0.22%)</title><rect x="145.4" y="853" width="2.6" height="15.0" fill="rgb(248,5,33)" rx="2" ry="2" />
<text  x="148.36" y="863.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (5 samples, 0.12%)</title><rect x="736.7" y="645" width="1.4" height="15.0" fill="rgb(240,12,53)" rx="2" ry="2" />
<text  x="739.67" y="655.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (50 samples, 1.23%)</title><rect x="865.7" y="757" width="14.4" height="15.0" fill="rgb(240,26,46)" rx="2" ry="2" />
<text  x="868.65" y="767.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.05%)</title><rect x="159.9" y="757" width="0.5" height="15.0" fill="rgb(244,99,4)" rx="2" ry="2" />
<text  x="162.86" y="767.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (21 samples, 0.52%)</title><rect x="610.3" y="677" width="6.1" height="15.0" fill="rgb(247,61,13)" rx="2" ry="2" />
<text  x="613.29" y="687.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (1 samples, 0.02%)</title><rect x="162.5" y="677" width="0.3" height="15.0" fill="rgb(214,226,1)" rx="2" ry="2" />
<text  x="165.46" y="687.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (3 samples, 0.07%)</title><rect x="94.9" y="853" width="0.9" height="15.0" fill="rgb(227,53,21)" rx="2" ry="2" />
<text  x="97.93" y="863.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="160.4" y="629" width="0.3" height="15.0" fill="rgb(239,210,54)" rx="2" ry="2" />
<text  x="163.43" y="639.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (30 samples, 0.74%)</title><rect x="540.1" y="661" width="8.7" height="15.0" fill="rgb(241,137,14)" rx="2" ry="2" />
<text  x="543.14" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="159.9" y="821" width="0.5" height="15.0" fill="rgb(213,20,40)" rx="2" ry="2" />
<text  x="162.86" y="831.5" ></text>
</g>
<g >
<title>CompareAndSwap (44 samples, 1.08%)</title><rect x="124.5" y="837" width="12.7" height="15.0" fill="rgb(220,98,22)" rx="2" ry="2" />
<text  x="127.49" y="847.5" ></text>
</g>
<g >
<title>do_iter_write (11 samples, 0.27%)</title><rect x="34.6" y="597" width="3.2" height="15.0" fill="rgb(210,42,43)" rx="2" ry="2" />
<text  x="37.64" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="161.9" y="117" width="0.3" height="15.0" fill="rgb(217,224,15)" rx="2" ry="2" />
<text  x="164.88" y="127.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.02%)</title><rect x="864.5" y="645" width="0.3" height="15.0" fill="rgb(234,132,7)" rx="2" ry="2" />
<text  x="867.49" y="655.5" ></text>
</g>
<g >
<title>alx_mask_msix (4 samples, 0.10%)</title><rect x="1114.6" y="661" width="1.2" height="15.0" fill="rgb(241,220,24)" rx="2" ry="2" />
<text  x="1117.64" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1,349 samples, 33.14%)</title><rect x="163.9" y="757" width="391.0" height="15.0" fill="rgb(211,59,43)" rx="2" ry="2" />
<text  x="166.91" y="767.5" >rustposix::safeposix::dispatcher::dispatcher::{{closu..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.12%)</title><rect x="736.7" y="629" width="1.4" height="15.0" fill="rgb(220,220,11)" rx="2" ry="2" />
<text  x="739.67" y="639.5" ></text>
</g>
<g >
<title>generic_exec_single (72 samples, 1.77%)</title><rect x="13.2" y="629" width="20.9" height="15.0" fill="rgb(246,136,46)" rx="2" ry="2" />
<text  x="16.19" y="639.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.02%)</title><rect x="1037.8" y="725" width="0.3" height="15.0" fill="rgb(218,92,14)" rx="2" ry="2" />
<text  x="1040.83" y="735.5" ></text>
</g>
<g >
<title>_perf_event_enable (2 samples, 0.05%)</title><rect x="37.8" y="789" width="0.6" height="15.0" fill="rgb(245,178,33)" rx="2" ry="2" />
<text  x="40.83" y="799.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (1 samples, 0.02%)</title><rect x="1135.2" y="773" width="0.3" height="15.0" fill="rgb(251,139,43)" rx="2" ry="2" />
<text  x="1138.22" y="783.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="571.2" y="821" width="0.5" height="15.0" fill="rgb(213,184,22)" rx="2" ry="2" />
<text  x="574.16" y="831.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.12%)</title><rect x="1112.6" y="837" width="1.5" height="15.0" fill="rgb(229,149,38)" rx="2" ry="2" />
<text  x="1115.61" y="847.5" ></text>
</g>
<g >
<title>NaClRefCountRef (54 samples, 1.33%)</title><rect x="919.9" y="773" width="15.6" height="15.0" fill="rgb(238,110,8)" rx="2" ry="2" />
<text  x="922.86" y="783.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (27 samples, 0.66%)</title><rect x="562.2" y="773" width="7.8" height="15.0" fill="rgb(252,128,50)" rx="2" ry="2" />
<text  x="565.17" y="783.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="162.5" y="261" width="0.3" height="15.0" fill="rgb(234,227,13)" rx="2" ry="2" />
<text  x="165.46" y="271.5" ></text>
</g>
<g >
<title>lind_close (1 samples, 0.02%)</title><rect x="162.5" y="725" width="0.3" height="15.0" fill="rgb(230,195,23)" rx="2" ry="2" />
<text  x="165.46" y="735.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="1045.7" y="597" width="0.2" height="15.0" fill="rgb(233,49,11)" rx="2" ry="2" />
<text  x="1048.65" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.02%)</title><rect x="162.5" y="645" width="0.3" height="15.0" fill="rgb(212,107,45)" rx="2" ry="2" />
<text  x="165.46" y="655.5" ></text>
</g>
<g >
<title>NaClHostDescRead (1,353 samples, 33.24%)</title><rect x="163.3" y="805" width="392.2" height="15.0" fill="rgb(219,185,22)" rx="2" ry="2" />
<text  x="166.33" y="815.5" >NaClHostDescRead</text>
</g>
<g >
<title>NaClSysExitDecoder (6 samples, 0.15%)</title><rect x="160.7" y="853" width="1.8" height="15.0" fill="rgb(220,33,21)" rx="2" ry="2" />
<text  x="163.72" y="863.5" ></text>
</g>
<g >
<title>NaClSimpleServiceStartServiceThread (1 samples, 0.02%)</title><rect x="160.4" y="789" width="0.3" height="15.0" fill="rgb(248,221,23)" rx="2" ry="2" />
<text  x="163.43" y="799.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="162.2" y="309" width="0.3" height="15.0" fill="rgb(213,156,8)" rx="2" ry="2" />
<text  x="165.17" y="319.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="163.0" y="773" width="0.3" height="15.0" fill="rgb(233,48,23)" rx="2" ry="2" />
<text  x="166.04" y="783.5" ></text>
</g>
<g >
<title>rebalance_domains (12 samples, 0.29%)</title><rect x="1152.9" y="597" width="3.5" height="15.0" fill="rgb(249,198,21)" rx="2" ry="2" />
<text  x="1155.90" y="607.5" ></text>
</g>
<g >
<title>run_rebalance_domains (18 samples, 0.44%)</title><rect x="1152.3" y="613" width="5.2" height="15.0" fill="rgb(243,60,14)" rx="2" ry="2" />
<text  x="1155.32" y="623.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="925.9" y="741" width="0.3" height="15.0" fill="rgb(217,126,14)" rx="2" ry="2" />
<text  x="928.94" y="751.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.10%)</title><rect x="810.6" y="613" width="1.1" height="15.0" fill="rgb(213,174,22)" rx="2" ry="2" />
<text  x="813.58" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (1 samples, 0.02%)</title><rect x="741.3" y="645" width="0.3" height="15.0" fill="rgb(248,73,47)" rx="2" ry="2" />
<text  x="744.30" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="37.8" y="885" width="1.2" height="15.0" fill="rgb(243,33,1)" rx="2" ry="2" />
<text  x="40.83" y="895.5" ></text>
</g>
<g >
<title>main (1 samples, 0.02%)</title><rect x="1087.7" y="853" width="0.3" height="15.0" fill="rgb(251,179,38)" rx="2" ry="2" />
<text  x="1090.68" y="863.5" ></text>
</g>
<g >
<title>NaClSysMunmapDecoder (1 samples, 0.02%)</title><rect x="163.0" y="853" width="0.3" height="15.0" fill="rgb(205,76,27)" rx="2" ry="2" />
<text  x="166.04" y="863.5" ></text>
</g>
<g >
<title>[libncursesw.so.6.2] (1 samples, 0.02%)</title><rect x="10.0" y="869" width="0.3" height="15.0" fill="rgb(215,166,32)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (76 samples, 1.87%)</title><rect x="1157.5" y="709" width="22.1" height="15.0" fill="rgb(221,134,53)" rx="2" ry="2" />
<text  x="1160.54" y="719.5" >m..</text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1113.5" y="709" width="0.3" height="15.0" fill="rgb(215,162,47)" rx="2" ry="2" />
<text  x="1116.48" y="719.5" ></text>
</g>
<g >
<title>record__mmap_read_all (11 samples, 0.27%)</title><rect x="34.6" y="837" width="3.2" height="15.0" fill="rgb(234,221,43)" rx="2" ry="2" />
<text  x="37.64" y="847.5" ></text>
</g>
<g >
<title>NaClDescRef (1 samples, 0.02%)</title><rect x="42.5" y="869" width="0.3" height="15.0" fill="rgb(224,48,44)" rx="2" ry="2" />
<text  x="45.46" y="879.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.05%)</title><rect x="35.8" y="437" width="0.6" height="15.0" fill="rgb(209,128,31)" rx="2" ry="2" />
<text  x="38.80" y="447.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="67.4" y="837" width="0.6" height="15.0" fill="rgb(221,179,40)" rx="2" ry="2" />
<text  x="70.39" y="847.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.02%)</title><rect x="163.0" y="517" width="0.3" height="15.0" fill="rgb(219,211,5)" rx="2" ry="2" />
<text  x="166.04" y="527.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (7 samples, 0.17%)</title><rect x="1031.7" y="709" width="2.1" height="15.0" fill="rgb(206,99,3)" rx="2" ry="2" />
<text  x="1034.74" y="719.5" ></text>
</g>
<g >
<title>remote_function (67 samples, 1.65%)</title><rect x="14.6" y="613" width="19.5" height="15.0" fill="rgb(243,82,9)" rx="2" ry="2" />
<text  x="17.64" y="623.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (7 samples, 0.17%)</title><rect x="119.3" y="853" width="2.0" height="15.0" fill="rgb(220,204,37)" rx="2" ry="2" />
<text  x="122.28" y="863.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.49%)</title><rect x="874.3" y="709" width="5.8" height="15.0" fill="rgb(233,185,40)" rx="2" ry="2" />
<text  x="877.35" y="719.5" ></text>
</g>
<g >
<title>__libc_write (11 samples, 0.27%)</title><rect x="34.6" y="741" width="3.2" height="15.0" fill="rgb(254,78,44)" rx="2" ry="2" />
<text  x="37.64" y="751.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (40 samples, 0.98%)</title><rect x="148.8" y="853" width="11.6" height="15.0" fill="rgb(206,123,43)" rx="2" ry="2" />
<text  x="151.84" y="863.5" ></text>
</g>
<g >
<title>timerqueue_del (1 samples, 0.02%)</title><rect x="1148.3" y="597" width="0.3" height="15.0" fill="rgb(215,45,16)" rx="2" ry="2" />
<text  x="1151.26" y="607.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.05%)</title><rect x="1117.5" y="709" width="0.6" height="15.0" fill="rgb(235,80,25)" rx="2" ry="2" />
<text  x="1120.54" y="719.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="858.7" y="629" width="0.9" height="15.0" fill="rgb(228,61,40)" rx="2" ry="2" />
<text  x="861.70" y="639.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="820.7" y="549" width="0.3" height="15.0" fill="rgb(238,53,42)" rx="2" ry="2" />
<text  x="823.72" y="559.5" ></text>
</g>
<g >
<title>NaClMutexLock (21 samples, 0.52%)</title><rect x="139.3" y="821" width="6.1" height="15.0" fill="rgb(242,69,17)" rx="2" ry="2" />
<text  x="142.28" y="831.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (2 samples, 0.05%)</title><rect x="1183.6" y="693" width="0.6" height="15.0" fill="rgb(242,206,53)" rx="2" ry="2" />
<text  x="1186.62" y="703.5" ></text>
</g>
<g >
<title>cpuidle_enter (70 samples, 1.72%)</title><rect x="1114.6" y="805" width="20.3" height="15.0" fill="rgb(213,67,28)" rx="2" ry="2" />
<text  x="1117.64" y="815.5" ></text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.05%)</title><rect x="1117.5" y="677" width="0.6" height="15.0" fill="rgb(224,87,18)" rx="2" ry="2" />
<text  x="1120.54" y="687.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="10.6" y="549" width="0.3" height="15.0" fill="rgb(213,207,2)" rx="2" ry="2" />
<text  x="13.58" y="559.5" ></text>
</g>
<g >
<title>policy_nodemask (1 samples, 0.02%)</title><rect x="1028.3" y="741" width="0.3" height="15.0" fill="rgb(220,16,40)" rx="2" ry="2" />
<text  x="1031.26" y="751.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (8 samples, 0.20%)</title><rect x="90.9" y="821" width="2.3" height="15.0" fill="rgb(248,66,48)" rx="2" ry="2" />
<text  x="93.87" y="831.5" ></text>
</g>
<g >
<title>__get_user_pages (2 samples, 0.05%)</title><rect x="1045.1" y="693" width="0.6" height="15.0" fill="rgb(216,64,25)" rx="2" ry="2" />
<text  x="1048.07" y="703.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (6 samples, 0.15%)</title><rect x="34.6" y="517" width="1.8" height="15.0" fill="rgb(228,24,24)" rx="2" ry="2" />
<text  x="37.64" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="857.0" y="629" width="0.5" height="15.0" fill="rgb(223,124,0)" rx="2" ry="2" />
<text  x="859.96" y="639.5" ></text>
</g>
<g >
<title>do_idle (180 samples, 4.42%)</title><rect x="1137.5" y="773" width="52.2" height="15.0" fill="rgb(240,215,5)" rx="2" ry="2" />
<text  x="1140.54" y="783.5" >do_idle</text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="160.1" y="661" width="0.3" height="15.0" fill="rgb(236,98,15)" rx="2" ry="2" />
<text  x="163.14" y="671.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (40 samples, 0.98%)</title><rect x="148.8" y="837" width="11.6" height="15.0" fill="rgb(227,12,51)" rx="2" ry="2" />
<text  x="151.84" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (20 samples, 0.49%)</title><rect x="404.8" y="645" width="5.8" height="15.0" fill="rgb(206,24,5)" rx="2" ry="2" />
<text  x="407.78" y="655.5" ></text>
</g>
<g >
<title>NaClSysFork (2 samples, 0.05%)</title><rect x="162.5" y="837" width="0.5" height="15.0" fill="rgb(233,171,33)" rx="2" ry="2" />
<text  x="165.46" y="847.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.07%)</title><rect x="161.6" y="565" width="0.9" height="15.0" fill="rgb(252,63,30)" rx="2" ry="2" />
<text  x="164.59" y="575.5" ></text>
</g>
<g >
<title>__fopen_internal (1 samples, 0.02%)</title><rect x="10.0" y="853" width="0.3" height="15.0" fill="rgb(241,176,5)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.02%)</title><rect x="1189.7" y="773" width="0.3" height="15.0" fill="rgb(210,17,23)" rx="2" ry="2" />
<text  x="1192.71" y="783.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.02%)</title><rect x="1100.7" y="581" width="0.3" height="15.0" fill="rgb(214,3,40)" rx="2" ry="2" />
<text  x="1103.72" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::PIPE_TABLE (1 samples, 0.02%)</title><rect x="1106.8" y="885" width="0.3" height="15.0" fill="rgb(228,155,15)" rx="2" ry="2" />
<text  x="1109.81" y="895.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (5 samples, 0.12%)</title><rect x="753.5" y="677" width="1.4" height="15.0" fill="rgb(243,142,21)" rx="2" ry="2" />
<text  x="756.48" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_write (3 samples, 0.07%)</title><rect x="160.7" y="613" width="0.9" height="15.0" fill="rgb(229,109,30)" rx="2" ry="2" />
<text  x="163.72" y="623.5" ></text>
</g>
<g >
<title>[sel_ldr] (78 samples, 1.92%)</title><rect x="985.1" y="869" width="22.6" height="15.0" fill="rgb(232,121,10)" rx="2" ry="2" />
<text  x="988.07" y="879.5" >[..</text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.02%)</title><rect x="1189.4" y="757" width="0.3" height="15.0" fill="rgb(227,175,34)" rx="2" ry="2" />
<text  x="1192.42" y="767.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="150.0" y="517" width="0.3" height="15.0" fill="rgb(224,223,45)" rx="2" ry="2" />
<text  x="153.00" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="160.7" y="645" width="0.9" height="15.0" fill="rgb(244,21,13)" rx="2" ry="2" />
<text  x="163.72" y="655.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (182 samples, 4.47%)</title><rect x="1137.2" y="869" width="52.8" height="15.0" fill="rgb(213,103,13)" rx="2" ry="2" />
<text  x="1140.25" y="879.5" >x86_6..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (2 samples, 0.05%)</title><rect x="554.9" y="725" width="0.6" height="15.0" fill="rgb(246,124,16)" rx="2" ry="2" />
<text  x="557.93" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (33 samples, 0.81%)</title><rect x="791.7" y="661" width="9.6" height="15.0" fill="rgb(227,92,3)" rx="2" ry="2" />
<text  x="794.74" y="671.5" ></text>
</g>
<g >
<title>__ioctl (78 samples, 1.92%)</title><rect x="11.4" y="789" width="22.7" height="15.0" fill="rgb(232,74,49)" rx="2" ry="2" />
<text  x="14.45" y="799.5" >_..</text>
</g>
<g >
<title>NaClSelLdrMain (1 samples, 0.02%)</title><rect x="1087.7" y="837" width="0.3" height="15.0" fill="rgb(251,22,10)" rx="2" ry="2" />
<text  x="1090.68" y="847.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (18 samples, 0.44%)</title><rect x="1152.3" y="629" width="5.2" height="15.0" fill="rgb(219,29,2)" rx="2" ry="2" />
<text  x="1155.32" y="639.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.02%)</title><rect x="44.5" y="869" width="0.3" height="15.0" fill="rgb(208,106,50)" rx="2" ry="2" />
<text  x="47.49" y="879.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="149.7" y="725" width="0.3" height="15.0" fill="rgb(239,124,4)" rx="2" ry="2" />
<text  x="152.71" y="735.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="162.2" y="261" width="0.3" height="15.0" fill="rgb(216,162,39)" rx="2" ry="2" />
<text  x="165.17" y="271.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="1110.6" y="757" width="0.3" height="15.0" fill="rgb(208,146,17)" rx="2" ry="2" />
<text  x="1113.58" y="767.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (3 samples, 0.07%)</title><rect x="1184.5" y="693" width="0.9" height="15.0" fill="rgb(210,127,25)" rx="2" ry="2" />
<text  x="1187.49" y="703.5" ></text>
</g>
<g >
<title>unmap_page_range (33 samples, 0.81%)</title><rect x="1096.7" y="661" width="9.5" height="15.0" fill="rgb(227,131,40)" rx="2" ry="2" />
<text  x="1099.67" y="671.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="1117.0" y="597" width="0.2" height="15.0" fill="rgb(242,5,39)" rx="2" ry="2" />
<text  x="1119.96" y="607.5" ></text>
</g>
<g >
<title>dispatcher@plt (2 samples, 0.05%)</title><rect x="880.1" y="773" width="0.6" height="15.0" fill="rgb(235,52,0)" rx="2" ry="2" />
<text  x="883.14" y="783.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (160 samples, 3.93%)</title><rect x="754.9" y="693" width="46.4" height="15.0" fill="rgb(239,192,41)" rx="2" ry="2" />
<text  x="757.93" y="703.5" >ring..</text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (15 samples, 0.37%)</title><rect x="633.5" y="645" width="4.3" height="15.0" fill="rgb(214,6,38)" rx="2" ry="2" />
<text  x="636.48" y="655.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.12%)</title><rect x="200.7" y="661" width="1.5" height="15.0" fill="rgb(240,110,2)" rx="2" ry="2" />
<text  x="203.72" y="671.5" ></text>
</g>
<g >
<title>NaClXMutexLock (21 samples, 0.52%)</title><rect x="941.0" y="789" width="6.1" height="15.0" fill="rgb(244,138,37)" rx="2" ry="2" />
<text  x="944.01" y="799.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (2 samples, 0.05%)</title><rect x="1147.4" y="485" width="0.6" height="15.0" fill="rgb(211,167,23)" rx="2" ry="2" />
<text  x="1150.39" y="495.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (1 samples, 0.02%)</title><rect x="935.8" y="821" width="0.3" height="15.0" fill="rgb(223,155,34)" rx="2" ry="2" />
<text  x="938.80" y="831.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.25%)</title><rect x="1048.8" y="869" width="2.9" height="15.0" fill="rgb(253,228,14)" rx="2" ry="2" />
<text  x="1051.84" y="879.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (2 samples, 0.05%)</title><rect x="37.2" y="485" width="0.6" height="15.0" fill="rgb(247,45,31)" rx="2" ry="2" />
<text  x="40.25" y="495.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="161.9" y="325" width="0.3" height="15.0" fill="rgb(253,167,9)" rx="2" ry="2" />
<text  x="164.88" y="335.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="821.0" y="629" width="0.6" height="15.0" fill="rgb(229,44,15)" rx="2" ry="2" />
<text  x="824.01" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (194 samples, 4.77%)</title><rect x="673.5" y="661" width="56.2" height="15.0" fill="rgb(246,85,23)" rx="2" ry="2" />
<text  x="676.48" y="671.5" >std::..</text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="948.6" y="757" width="0.5" height="15.0" fill="rgb(252,120,9)" rx="2" ry="2" />
<text  x="951.55" y="767.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="820.4" y="549" width="0.3" height="15.0" fill="rgb(221,61,11)" rx="2" ry="2" />
<text  x="823.43" y="559.5" ></text>
</g>
<g >
<title>newidle_balance (2 samples, 0.05%)</title><rect x="1113.2" y="789" width="0.6" height="15.0" fill="rgb(207,176,48)" rx="2" ry="2" />
<text  x="1116.19" y="799.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (6 samples, 0.15%)</title><rect x="160.7" y="773" width="1.8" height="15.0" fill="rgb(232,57,15)" rx="2" ry="2" />
<text  x="163.72" y="783.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="1111.4" y="805" width="0.3" height="15.0" fill="rgb(224,72,25)" rx="2" ry="2" />
<text  x="1114.45" y="815.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="821.9" y="549" width="0.3" height="15.0" fill="rgb(247,107,49)" rx="2" ry="2" />
<text  x="824.88" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (21 samples, 0.52%)</title><rect x="650.6" y="661" width="6.1" height="15.0" fill="rgb(242,3,26)" rx="2" ry="2" />
<text  x="653.58" y="671.5" ></text>
</g>
<g >
<title>_start (2 samples, 0.05%)</title><rect x="1087.7" y="885" width="0.6" height="15.0" fill="rgb(211,172,9)" rx="2" ry="2" />
<text  x="1090.68" y="895.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (22 samples, 0.54%)</title><rect x="809.7" y="645" width="6.4" height="15.0" fill="rgb(228,187,17)" rx="2" ry="2" />
<text  x="812.71" y="655.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="36.1" y="421" width="0.3" height="15.0" fill="rgb(240,175,34)" rx="2" ry="2" />
<text  x="39.09" y="431.5" ></text>
</g>
<g >
<title>wake_up_process (2 samples, 0.05%)</title><rect x="1117.5" y="581" width="0.6" height="15.0" fill="rgb(230,2,6)" rx="2" ry="2" />
<text  x="1120.54" y="591.5" ></text>
</g>
<g >
<title>NaClLog (11 samples, 0.27%)</title><rect x="936.1" y="821" width="3.2" height="15.0" fill="rgb(253,150,49)" rx="2" ry="2" />
<text  x="939.09" y="831.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (76 samples, 1.87%)</title><rect x="420.4" y="661" width="22.1" height="15.0" fill="rgb(212,84,39)" rx="2" ry="2" />
<text  x="423.43" y="671.5" >c..</text>
</g>
<g >
<title>uncharge_page (1 samples, 0.02%)</title><rect x="1105.9" y="565" width="0.3" height="15.0" fill="rgb(241,140,34)" rx="2" ry="2" />
<text  x="1108.94" y="575.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (29 samples, 0.71%)</title><rect x="561.9" y="789" width="8.4" height="15.0" fill="rgb(218,69,37)" rx="2" ry="2" />
<text  x="564.88" y="799.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="163.0" y="789" width="0.3" height="15.0" fill="rgb(218,143,19)" rx="2" ry="2" />
<text  x="166.04" y="799.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (4 samples, 0.10%)</title><rect x="672.3" y="677" width="1.2" height="15.0" fill="rgb(207,18,35)" rx="2" ry="2" />
<text  x="675.32" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="11.2" y="789" width="0.2" height="15.0" fill="rgb(246,131,2)" rx="2" ry="2" />
<text  x="14.16" y="799.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="1150.3" y="645" width="0.3" height="15.0" fill="rgb(230,74,11)" rx="2" ry="2" />
<text  x="1153.29" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="10.9" y="869" width="0.3" height="15.0" fill="rgb(245,5,9)" rx="2" ry="2" />
<text  x="13.87" y="879.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="1117.5" y="693" width="0.6" height="15.0" fill="rgb(222,36,31)" rx="2" ry="2" />
<text  x="1120.54" y="703.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.02%)</title><rect x="162.5" y="437" width="0.3" height="15.0" fill="rgb(252,73,53)" rx="2" ry="2" />
<text  x="165.46" y="447.5" ></text>
</g>
<g >
<title>start_secondary (80 samples, 1.97%)</title><rect x="1114.1" y="869" width="23.1" height="15.0" fill="rgb(241,36,18)" rx="2" ry="2" />
<text  x="1117.06" y="879.5" >s..</text>
</g>
<g >
<title>ktime_get_update_offsets_now (2 samples, 0.05%)</title><rect x="1149.4" y="629" width="0.6" height="15.0" fill="rgb(230,109,39)" rx="2" ry="2" />
<text  x="1152.42" y="639.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.32%)</title><rect x="859.6" y="645" width="3.7" height="15.0" fill="rgb(247,18,50)" rx="2" ry="2" />
<text  x="862.57" y="655.5" ></text>
</g>
<g >
<title>NaClGetDescMu (68 samples, 1.67%)</title><rect x="915.8" y="805" width="19.7" height="15.0" fill="rgb(253,185,38)" rx="2" ry="2" />
<text  x="918.80" y="815.5" ></text>
</g>
<g >
<title>exc_page_fault (117 samples, 2.87%)</title><rect x="1008.0" y="853" width="33.9" height="15.0" fill="rgb(213,192,37)" rx="2" ry="2" />
<text  x="1010.97" y="863.5" >ex..</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="159.9" y="661" width="0.2" height="15.0" fill="rgb(208,25,23)" rx="2" ry="2" />
<text  x="162.86" y="671.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (3 samples, 0.07%)</title><rect x="1046.8" y="757" width="0.9" height="15.0" fill="rgb(237,157,8)" rx="2" ry="2" />
<text  x="1049.81" y="767.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.02%)</title><rect x="1112.3" y="837" width="0.3" height="15.0" fill="rgb(219,189,19)" rx="2" ry="2" />
<text  x="1115.32" y="847.5" ></text>
</g>
<g >
<title>quiet_vmstat (2 samples, 0.05%)</title><rect x="1135.5" y="789" width="0.6" height="15.0" fill="rgb(229,63,19)" rx="2" ry="2" />
<text  x="1138.51" y="799.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (21 samples, 0.52%)</title><rect x="902.2" y="805" width="6.1" height="15.0" fill="rgb(241,0,37)" rx="2" ry="2" />
<text  x="905.17" y="815.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (1 samples, 0.02%)</title><rect x="1054.1" y="853" width="0.2" height="15.0" fill="rgb(209,162,49)" rx="2" ry="2" />
<text  x="1057.06" y="863.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (2 samples, 0.05%)</title><rect x="1045.1" y="709" width="0.6" height="15.0" fill="rgb(248,67,52)" rx="2" ry="2" />
<text  x="1048.07" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (6 samples, 0.15%)</title><rect x="160.7" y="741" width="1.8" height="15.0" fill="rgb(207,106,13)" rx="2" ry="2" />
<text  x="163.72" y="751.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.02%)</title><rect x="10.9" y="789" width="0.3" height="15.0" fill="rgb(216,109,51)" rx="2" ry="2" />
<text  x="13.87" y="799.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="150.0" y="501" width="0.3" height="15.0" fill="rgb(246,204,4)" rx="2" ry="2" />
<text  x="153.00" y="511.5" ></text>
</g>
<g >
<title>__evlist__enable (78 samples, 1.92%)</title><rect x="11.4" y="837" width="22.7" height="15.0" fill="rgb(231,158,24)" rx="2" ry="2" />
<text  x="14.45" y="847.5" >_..</text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="35.5" y="405" width="0.3" height="15.0" fill="rgb(207,64,22)" rx="2" ry="2" />
<text  x="38.51" y="415.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (11 samples, 0.27%)</title><rect x="34.6" y="821" width="3.2" height="15.0" fill="rgb(236,66,33)" rx="2" ry="2" />
<text  x="37.64" y="831.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.07%)</title><rect x="864.8" y="645" width="0.9" height="15.0" fill="rgb(254,137,32)" rx="2" ry="2" />
<text  x="867.78" y="655.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.05%)</title><rect x="1085.9" y="821" width="0.6" height="15.0" fill="rgb(224,47,33)" rx="2" ry="2" />
<text  x="1088.94" y="831.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.02%)</title><rect x="1110.3" y="757" width="0.3" height="15.0" fill="rgb(220,226,16)" rx="2" ry="2" />
<text  x="1113.29" y="767.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.02%)</title><rect x="162.5" y="565" width="0.3" height="15.0" fill="rgb(254,164,46)" rx="2" ry="2" />
<text  x="165.46" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (23 samples, 0.56%)</title><rect x="849.7" y="693" width="6.7" height="15.0" fill="rgb(225,202,35)" rx="2" ry="2" />
<text  x="852.71" y="703.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="1113.5" y="693" width="0.3" height="15.0" fill="rgb(229,208,50)" rx="2" ry="2" />
<text  x="1116.48" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="37.8" y="869" width="1.2" height="15.0" fill="rgb(221,226,20)" rx="2" ry="2" />
<text  x="40.83" y="879.5" ></text>
</g>
<g >
<title>x86_pmu_enable (2 samples, 0.05%)</title><rect x="1147.4" y="501" width="0.6" height="15.0" fill="rgb(214,83,11)" rx="2" ry="2" />
<text  x="1150.39" y="511.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (337 samples, 8.28%)</title><rect x="442.5" y="661" width="97.6" height="15.0" fill="rgb(235,40,33)" rx="2" ry="2" />
<text  x="445.46" y="671.5" >ringbuf::co..</text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="162.5" y="709" width="0.3" height="15.0" fill="rgb(246,147,21)" rx="2" ry="2" />
<text  x="165.46" y="719.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.02%)</title><rect x="1088.0" y="869" width="0.3" height="15.0" fill="rgb(222,125,16)" rx="2" ry="2" />
<text  x="1090.97" y="879.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="159.9" y="741" width="0.5" height="15.0" fill="rgb(246,154,41)" rx="2" ry="2" />
<text  x="162.86" y="751.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 0.47%)</title><rect x="604.8" y="757" width="5.5" height="15.0" fill="rgb(246,43,37)" rx="2" ry="2" />
<text  x="607.78" y="767.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.02%)</title><rect x="1117.0" y="661" width="0.2" height="15.0" fill="rgb(254,27,8)" rx="2" ry="2" />
<text  x="1119.96" y="671.5" ></text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.07%)</title><rect x="1156.4" y="597" width="0.8" height="15.0" fill="rgb(226,109,41)" rx="2" ry="2" />
<text  x="1159.38" y="607.5" ></text>
</g>
<g >
<title>std::panicking::panicking (3 samples, 0.07%)</title><rect x="865.7" y="693" width="0.8" height="15.0" fill="rgb(221,20,47)" rx="2" ry="2" />
<text  x="868.65" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (42 samples, 1.03%)</title><rect x="633.5" y="677" width="12.2" height="15.0" fill="rgb(245,146,23)" rx="2" ry="2" />
<text  x="636.48" y="687.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (26 samples, 0.64%)</title><rect x="191.4" y="693" width="7.6" height="15.0" fill="rgb(225,176,30)" rx="2" ry="2" />
<text  x="194.45" y="703.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (16 samples, 0.39%)</title><rect x="921.3" y="741" width="4.6" height="15.0" fill="rgb(246,81,43)" rx="2" ry="2" />
<text  x="924.30" y="751.5" ></text>
</g>
<g >
<title>rcu_needs_cpu (1 samples, 0.02%)</title><rect x="1184.2" y="693" width="0.3" height="15.0" fill="rgb(254,21,49)" rx="2" ry="2" />
<text  x="1187.20" y="703.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (2 samples, 0.05%)</title><rect x="37.8" y="645" width="0.6" height="15.0" fill="rgb(223,163,12)" rx="2" ry="2" />
<text  x="40.83" y="655.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 2.24%)</title><rect x="11.4" y="885" width="26.4" height="15.0" fill="rgb(249,142,32)" rx="2" ry="2" />
<text  x="14.45" y="895.5" >[..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (42 samples, 1.03%)</title><rect x="633.5" y="725" width="12.2" height="15.0" fill="rgb(221,68,22)" rx="2" ry="2" />
<text  x="636.48" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (21 samples, 0.52%)</title><rect x="610.3" y="693" width="6.1" height="15.0" fill="rgb(228,62,5)" rx="2" ry="2" />
<text  x="613.29" y="703.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="163.9" y="725" width="0.3" height="15.0" fill="rgb(209,182,38)" rx="2" ry="2" />
<text  x="166.91" y="735.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="162.5" y="309" width="0.3" height="15.0" fill="rgb(220,156,16)" rx="2" ry="2" />
<text  x="165.46" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="68.0" y="837" width="0.3" height="15.0" fill="rgb(252,105,47)" rx="2" ry="2" />
<text  x="70.97" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (78 samples, 1.92%)</title><rect x="11.4" y="773" width="22.7" height="15.0" fill="rgb(231,158,33)" rx="2" ry="2" />
<text  x="14.45" y="783.5" >e..</text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="10.6" y="581" width="0.3" height="15.0" fill="rgb(208,212,6)" rx="2" ry="2" />
<text  x="13.58" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.07%)</title><rect x="864.8" y="661" width="0.9" height="15.0" fill="rgb(247,214,34)" rx="2" ry="2" />
<text  x="867.78" y="671.5" ></text>
</g>
<g >
<title>_rl_set_screen_size (2 samples, 0.05%)</title><rect x="10.3" y="757" width="0.6" height="15.0" fill="rgb(230,180,4)" rx="2" ry="2" />
<text  x="13.29" y="767.5" ></text>
</g>
<g >
<title>napi_poll (3 samples, 0.07%)</title><rect x="1115.8" y="661" width="0.9" height="15.0" fill="rgb(231,59,18)" rx="2" ry="2" />
<text  x="1118.80" y="671.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (3 samples, 0.07%)</title><rect x="161.6" y="437" width="0.9" height="15.0" fill="rgb(243,155,34)" rx="2" ry="2" />
<text  x="164.59" y="447.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.02%)</title><rect x="11.2" y="693" width="0.2" height="15.0" fill="rgb(215,49,25)" rx="2" ry="2" />
<text  x="14.16" y="703.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.02%)</title><rect x="1033.5" y="693" width="0.3" height="15.0" fill="rgb(252,11,21)" rx="2" ry="2" />
<text  x="1036.48" y="703.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (36 samples, 0.88%)</title><rect x="646.2" y="693" width="10.5" height="15.0" fill="rgb(221,190,17)" rx="2" ry="2" />
<text  x="649.23" y="703.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="1111.4" y="789" width="0.3" height="15.0" fill="rgb(247,46,35)" rx="2" ry="2" />
<text  x="1114.45" y="799.5" ></text>
</g>
<g >
<title>NaClXMutexLock (2 samples, 0.05%)</title><rect x="953.2" y="805" width="0.6" height="15.0" fill="rgb(223,23,24)" rx="2" ry="2" />
<text  x="956.19" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (78 samples, 1.92%)</title><rect x="11.4" y="757" width="22.7" height="15.0" fill="rgb(250,132,21)" rx="2" ry="2" />
<text  x="14.45" y="767.5" >d..</text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.02%)</title><rect x="162.5" y="373" width="0.3" height="15.0" fill="rgb(224,133,1)" rx="2" ry="2" />
<text  x="165.46" y="383.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (3 samples, 0.07%)</title><rect x="1116.7" y="741" width="0.8" height="15.0" fill="rgb(232,69,37)" rx="2" ry="2" />
<text  x="1119.67" y="751.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="161.9" y="341" width="0.3" height="15.0" fill="rgb(245,148,18)" rx="2" ry="2" />
<text  x="164.88" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1045.7" y="821" width="0.2" height="15.0" fill="rgb(216,143,5)" rx="2" ry="2" />
<text  x="1048.65" y="831.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (27 samples, 0.66%)</title><rect x="801.3" y="661" width="7.8" height="15.0" fill="rgb(205,22,48)" rx="2" ry="2" />
<text  x="804.30" y="671.5" ></text>
</g>
<g >
<title>perf_mmap__push (11 samples, 0.27%)</title><rect x="34.6" y="805" width="3.2" height="15.0" fill="rgb(223,33,7)" rx="2" ry="2" />
<text  x="37.64" y="815.5" ></text>
</g>
<g >
<title>neigh_lookup (1 samples, 0.02%)</title><rect x="1116.4" y="405" width="0.3" height="15.0" fill="rgb(210,204,54)" rx="2" ry="2" />
<text  x="1119.38" y="415.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (13 samples, 0.32%)</title><rect x="859.6" y="693" width="3.7" height="15.0" fill="rgb(238,184,52)" rx="2" ry="2" />
<text  x="862.57" y="703.5" ></text>
</g>
<g >
<title>[unknown] (147 samples, 3.61%)</title><rect x="1045.1" y="885" width="42.6" height="15.0" fill="rgb(250,48,22)" rx="2" ry="2" />
<text  x="1048.07" y="895.5" >[unk..</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="1045.7" y="613" width="0.2" height="15.0" fill="rgb(233,43,42)" rx="2" ry="2" />
<text  x="1048.65" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;std::fs::File&gt;&gt; (1 samples, 0.02%)</title><rect x="1051.7" y="853" width="0.3" height="15.0" fill="rgb(243,16,17)" rx="2" ry="2" />
<text  x="1054.74" y="863.5" ></text>
</g>
<g >
<title>MunmapInternal (1 samples, 0.02%)</title><rect x="163.0" y="821" width="0.3" height="15.0" fill="rgb(215,96,48)" rx="2" ry="2" />
<text  x="166.04" y="831.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.07%)</title><rect x="161.6" y="469" width="0.9" height="15.0" fill="rgb(208,132,41)" rx="2" ry="2" />
<text  x="164.59" y="479.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (3 samples, 0.07%)</title><rect x="94.9" y="837" width="0.9" height="15.0" fill="rgb(214,69,6)" rx="2" ry="2" />
<text  x="97.93" y="847.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="34.9" y="437" width="0.3" height="15.0" fill="rgb(214,79,23)" rx="2" ry="2" />
<text  x="37.93" y="447.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="35.5" y="437" width="0.3" height="15.0" fill="rgb(248,49,51)" rx="2" ry="2" />
<text  x="38.51" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (15 samples, 0.37%)</title><rect x="646.2" y="645" width="4.4" height="15.0" fill="rgb(230,143,25)" rx="2" ry="2" />
<text  x="649.23" y="655.5" ></text>
</g>
<g >
<title>alloc_inode (1 samples, 0.02%)</title><rect x="1087.7" y="613" width="0.3" height="15.0" fill="rgb(210,222,13)" rx="2" ry="2" />
<text  x="1090.68" y="623.5" ></text>
</g>
<g >
<title>record__pushfn (11 samples, 0.27%)</title><rect x="34.6" y="789" width="3.2" height="15.0" fill="rgb(234,0,23)" rx="2" ry="2" />
<text  x="37.64" y="799.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.02%)</title><rect x="94.6" y="853" width="0.3" height="15.0" fill="rgb(208,60,28)" rx="2" ry="2" />
<text  x="97.64" y="863.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.02%)</title><rect x="1106.5" y="677" width="0.3" height="15.0" fill="rgb(223,37,15)" rx="2" ry="2" />
<text  x="1109.52" y="687.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (160 samples, 3.93%)</title><rect x="754.9" y="709" width="46.4" height="15.0" fill="rgb(211,3,48)" rx="2" ry="2" />
<text  x="757.93" y="719.5" >ring..</text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (1 samples, 0.02%)</title><rect x="1045.4" y="437" width="0.3" height="15.0" fill="rgb(237,54,35)" rx="2" ry="2" />
<text  x="1048.36" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (46 samples, 1.13%)</title><rect x="809.1" y="709" width="13.4" height="15.0" fill="rgb(219,114,15)" rx="2" ry="2" />
<text  x="812.13" y="719.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.02%)</title><rect x="1010.3" y="789" width="0.3" height="15.0" fill="rgb(213,43,20)" rx="2" ry="2" />
<text  x="1013.29" y="799.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="1143.9" y="549" width="0.6" height="15.0" fill="rgb(229,164,33)" rx="2" ry="2" />
<text  x="1146.91" y="559.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1117.8" y="485" width="0.3" height="15.0" fill="rgb(206,108,42)" rx="2" ry="2" />
<text  x="1120.83" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="345.1" y="677" width="0.3" height="15.0" fill="rgb(216,167,41)" rx="2" ry="2" />
<text  x="348.07" y="687.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (2 samples, 0.05%)</title><rect x="1110.3" y="805" width="0.6" height="15.0" fill="rgb(207,95,33)" rx="2" ry="2" />
<text  x="1113.29" y="815.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="38.7" y="757" width="0.3" height="15.0" fill="rgb(235,125,38)" rx="2" ry="2" />
<text  x="41.70" y="767.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="819.9" y="565" width="0.5" height="15.0" fill="rgb(208,222,36)" rx="2" ry="2" />
<text  x="822.86" y="575.5" ></text>
</g>
<g >
<title>core::cmp::min (4 samples, 0.10%)</title><rect x="672.3" y="709" width="1.2" height="15.0" fill="rgb(235,141,23)" rx="2" ry="2" />
<text  x="675.32" y="719.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.02%)</title><rect x="160.1" y="693" width="0.3" height="15.0" fill="rgb(235,169,7)" rx="2" ry="2" />
<text  x="163.14" y="703.5" ></text>
</g>
<g >
<title>sock_alloc_inode (1 samples, 0.02%)</title><rect x="1087.7" y="597" width="0.3" height="15.0" fill="rgb(254,142,30)" rx="2" ry="2" />
<text  x="1090.68" y="607.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (579 samples, 14.22%)</title><rect x="204.5" y="693" width="167.8" height="15.0" fill="rgb(253,118,9)" rx="2" ry="2" />
<text  x="207.49" y="703.5" >ringbuf::ring_buffer:..</text>
</g>
<g >
<title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="862.8" y="613" width="0.5" height="15.0" fill="rgb(251,174,53)" rx="2" ry="2" />
<text  x="865.75" y="623.5" ></text>
</g>
<g >
<title>[[stack]] (1 samples, 0.02%)</title><rect x="39.9" y="885" width="0.2" height="15.0" fill="rgb(239,33,1)" rx="2" ry="2" />
<text  x="42.86" y="895.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (3 samples, 0.07%)</title><rect x="1046.8" y="853" width="0.9" height="15.0" fill="rgb(213,104,50)" rx="2" ry="2" />
<text  x="1049.81" y="863.5" ></text>
</g>
<g >
<title>get_typical_interval (1 samples, 0.02%)</title><rect x="1134.9" y="773" width="0.3" height="15.0" fill="rgb(207,162,28)" rx="2" ry="2" />
<text  x="1137.93" y="783.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="10.6" y="709" width="0.3" height="15.0" fill="rgb(249,157,54)" rx="2" ry="2" />
<text  x="13.58" y="719.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.07%)</title><rect x="1012.3" y="773" width="0.9" height="15.0" fill="rgb(230,157,12)" rx="2" ry="2" />
<text  x="1015.32" y="783.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.66%)</title><rect x="801.3" y="709" width="7.8" height="15.0" fill="rgb(227,20,52)" rx="2" ry="2" />
<text  x="804.30" y="719.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.05%)</title><rect x="1185.9" y="757" width="0.6" height="15.0" fill="rgb(230,193,33)" rx="2" ry="2" />
<text  x="1188.94" y="767.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (14 samples, 0.34%)</title><rect x="141.3" y="805" width="4.1" height="15.0" fill="rgb(237,122,12)" rx="2" ry="2" />
<text  x="144.30" y="815.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (33 samples, 0.81%)</title><rect x="1141.0" y="677" width="9.6" height="15.0" fill="rgb(228,143,38)" rx="2" ry="2" />
<text  x="1144.01" y="687.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (2 samples, 0.05%)</title><rect x="1045.1" y="757" width="0.6" height="15.0" fill="rgb(241,151,30)" rx="2" ry="2" />
<text  x="1048.07" y="767.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (8 samples, 0.20%)</title><rect x="90.9" y="853" width="2.3" height="15.0" fill="rgb(221,83,42)" rx="2" ry="2" />
<text  x="93.87" y="863.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (1 samples, 0.02%)</title><rect x="1054.1" y="837" width="0.2" height="15.0" fill="rgb(235,16,37)" rx="2" ry="2" />
<text  x="1057.06" y="847.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (26 samples, 0.64%)</title><rect x="926.2" y="757" width="7.6" height="15.0" fill="rgb(231,225,48)" rx="2" ry="2" />
<text  x="929.23" y="767.5" ></text>
</g>
<g >
<title>new_sync_write (3 samples, 0.07%)</title><rect x="160.7" y="565" width="0.9" height="15.0" fill="rgb(208,127,1)" rx="2" ry="2" />
<text  x="163.72" y="575.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.05%)</title><rect x="1147.4" y="469" width="0.6" height="15.0" fill="rgb(215,175,29)" rx="2" ry="2" />
<text  x="1150.39" y="479.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.02%)</title><rect x="161.0" y="373" width="0.3" height="15.0" fill="rgb(206,67,22)" rx="2" ry="2" />
<text  x="164.01" y="383.5" ></text>
</g>
<g >
<title>new_sync_write (11 samples, 0.27%)</title><rect x="34.6" y="645" width="3.2" height="15.0" fill="rgb(250,137,35)" rx="2" ry="2" />
<text  x="37.64" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (2 samples, 0.05%)</title><rect x="67.4" y="789" width="0.6" height="15.0" fill="rgb(233,124,36)" rx="2" ry="2" />
<text  x="70.39" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (2 samples, 0.05%)</title><rect x="67.4" y="853" width="0.6" height="15.0" fill="rgb(224,45,5)" rx="2" ry="2" />
<text  x="70.39" y="863.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.02%)</title><rect x="34.3" y="821" width="0.3" height="15.0" fill="rgb(218,191,15)" rx="2" ry="2" />
<text  x="37.35" y="831.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="1106.5" y="629" width="0.3" height="15.0" fill="rgb(242,13,22)" rx="2" ry="2" />
<text  x="1109.52" y="639.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (38 samples, 0.93%)</title><rect x="148.8" y="821" width="11.1" height="15.0" fill="rgb(229,201,2)" rx="2" ry="2" />
<text  x="151.84" y="831.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.07%)</title><rect x="1053.8" y="869" width="0.8" height="15.0" fill="rgb(226,104,43)" rx="2" ry="2" />
<text  x="1056.77" y="879.5" ></text>
</g>
<g >
<title>NaClAppLaunchServiceThreads (1 samples, 0.02%)</title><rect x="160.4" y="805" width="0.3" height="15.0" fill="rgb(222,218,11)" rx="2" ry="2" />
<text  x="163.43" y="815.5" ></text>
</g>
<g >
<title>vfs_write (3 samples, 0.07%)</title><rect x="160.7" y="581" width="0.9" height="15.0" fill="rgb(216,40,25)" rx="2" ry="2" />
<text  x="163.72" y="591.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (78 samples, 1.92%)</title><rect x="11.4" y="693" width="22.7" height="15.0" fill="rgb(225,75,29)" rx="2" ry="2" />
<text  x="14.45" y="703.5" >p..</text>
</g>
<g >
<title>__GI__IO_link_in (1 samples, 0.02%)</title><rect x="10.0" y="821" width="0.3" height="15.0" fill="rgb(229,155,51)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>NaClSysRead (1,353 samples, 33.24%)</title><rect x="163.3" y="837" width="392.2" height="15.0" fill="rgb(235,108,37)" rx="2" ry="2" />
<text  x="166.33" y="847.5" >NaClSysRead</text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.02%)</title><rect x="1051.7" y="869" width="0.3" height="15.0" fill="rgb(250,75,27)" rx="2" ry="2" />
<text  x="1054.74" y="879.5" ></text>
</g>
<g >
<title>check_cpu_stall (1 samples, 0.02%)</title><rect x="1144.8" y="533" width="0.3" height="15.0" fill="rgb(219,144,52)" rx="2" ry="2" />
<text  x="1147.78" y="543.5" ></text>
</g>
</g>
</svg>
