<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="934.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="917" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="917" > </text>
<g id="frames">
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.03%)</title><rect x="1087.0" y="325" width="0.3" height="15.0" fill="rgb(236,168,34)" rx="2" ry="2" />
<text  x="1089.96" y="335.5" ></text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.08%)</title><rect x="35.4" y="629" width="0.9" height="15.0" fill="rgb(221,41,50)" rx="2" ry="2" />
<text  x="38.39" y="639.5" ></text>
</g>
<g >
<title>NaClCondVarBroadcast (1 samples, 0.03%)</title><rect x="563.7" y="773" width="0.3" height="15.0" fill="rgb(220,38,51)" rx="2" ry="2" />
<text  x="566.71" y="783.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (1 samples, 0.03%)</title><rect x="1086.7" y="213" width="0.3" height="15.0" fill="rgb(218,31,16)" rx="2" ry="2" />
<text  x="1089.66" y="223.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (19 samples, 0.48%)</title><rect x="662.0" y="629" width="5.6" height="15.0" fill="rgb(234,95,52)" rx="2" ry="2" />
<text  x="664.97" y="639.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.13%)</title><rect x="408.4" y="597" width="1.5" height="15.0" fill="rgb(216,78,11)" rx="2" ry="2" />
<text  x="411.41" y="607.5" ></text>
</g>
<g >
<title>shmem_alloc_and_acct_page (2 samples, 0.05%)</title><rect x="1046.9" y="517" width="0.6" height="15.0" fill="rgb(222,157,46)" rx="2" ry="2" />
<text  x="1049.94" y="527.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.03%)</title><rect x="174.0" y="277" width="0.3" height="15.0" fill="rgb(237,54,40)" rx="2" ry="2" />
<text  x="176.96" y="287.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.03%)</title><rect x="1178.4" y="661" width="0.3" height="15.0" fill="rgb(207,107,14)" rx="2" ry="2" />
<text  x="1181.35" y="671.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (3 samples, 0.08%)</title><rect x="49.4" y="837" width="0.9" height="15.0" fill="rgb(240,170,30)" rx="2" ry="2" />
<text  x="52.42" y="847.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (2 samples, 0.05%)</title><rect x="172.8" y="453" width="0.6" height="15.0" fill="rgb(222,90,12)" rx="2" ry="2" />
<text  x="175.77" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.13%)</title><rect x="35.1" y="757" width="1.5" height="15.0" fill="rgb(245,101,39)" rx="2" ry="2" />
<text  x="38.09" y="767.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.03%)</title><rect x="1047.5" y="741" width="0.3" height="15.0" fill="rgb(225,182,27)" rx="2" ry="2" />
<text  x="1050.54" y="751.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.20%)</title><rect x="840.6" y="549" width="2.4" height="15.0" fill="rgb(216,124,3)" rx="2" ry="2" />
<text  x="843.57" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="36.6" y="597" width="0.3" height="15.0" fill="rgb(239,98,40)" rx="2" ry="2" />
<text  x="39.58" y="607.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (19 samples, 0.48%)</title><rect x="944.8" y="709" width="5.7" height="15.0" fill="rgb(234,96,12)" rx="2" ry="2" />
<text  x="947.80" y="719.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.40%)</title><rect x="619.0" y="661" width="4.7" height="15.0" fill="rgb(212,137,38)" rx="2" ry="2" />
<text  x="621.96" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.03%)</title><rect x="172.5" y="629" width="0.3" height="15.0" fill="rgb(235,39,41)" rx="2" ry="2" />
<text  x="175.47" y="639.5" ></text>
</g>
<g >
<title>__do_fault (2 samples, 0.05%)</title><rect x="1046.9" y="565" width="0.6" height="15.0" fill="rgb(236,146,47)" rx="2" ry="2" />
<text  x="1049.94" y="575.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (2 samples, 0.05%)</title><rect x="1048.4" y="789" width="0.6" height="15.0" fill="rgb(245,211,29)" rx="2" ry="2" />
<text  x="1051.44" y="799.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (49 samples, 1.24%)</title><rect x="57.8" y="837" width="14.6" height="15.0" fill="rgb(252,191,51)" rx="2" ry="2" />
<text  x="60.79" y="847.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.03%)</title><rect x="1086.7" y="757" width="0.3" height="15.0" fill="rgb(219,57,47)" rx="2" ry="2" />
<text  x="1089.66" y="767.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.03%)</title><rect x="564.0" y="661" width="0.3" height="15.0" fill="rgb(220,72,16)" rx="2" ry="2" />
<text  x="567.01" y="671.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (1 samples, 0.03%)</title><rect x="47.0" y="629" width="0.3" height="15.0" fill="rgb(228,199,9)" rx="2" ry="2" />
<text  x="50.03" y="639.5" ></text>
</g>
<g >
<title>__handle_mm_fault (82 samples, 2.08%)</title><rect x="1017.1" y="773" width="24.5" height="15.0" fill="rgb(217,8,14)" rx="2" ry="2" />
<text  x="1020.08" y="783.5" >_..</text>
</g>
<g >
<title>_dl_start (1 samples, 0.03%)</title><rect x="1087.3" y="837" width="0.3" height="15.0" fill="rgb(241,206,14)" rx="2" ry="2" />
<text  x="1090.26" y="847.5" ></text>
</g>
<g >
<title>do_exit (39 samples, 0.99%)</title><rect x="1099.2" y="725" width="11.7" height="15.0" fill="rgb(221,86,8)" rx="2" ry="2" />
<text  x="1102.21" y="735.5" ></text>
</g>
<g >
<title>rest_init (165 samples, 4.18%)</title><rect x="1140.7" y="773" width="49.3" height="15.0" fill="rgb(221,109,29)" rx="2" ry="2" />
<text  x="1143.72" y="783.5" >rest..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="174.0" y="37" width="0.3" height="15.0" fill="rgb(243,13,28)" rx="2" ry="2" />
<text  x="176.96" y="47.5" ></text>
</g>
<g >
<title>wake_affine_weight (1 samples, 0.03%)</title><rect x="1115.6" y="709" width="0.3" height="15.0" fill="rgb(216,191,20)" rx="2" ry="2" />
<text  x="1118.63" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="174.6" y="533" width="0.3" height="15.0" fill="rgb(217,203,1)" rx="2" ry="2" />
<text  x="177.56" y="543.5" ></text>
</g>
<g >
<title>arch_call_rest_init (165 samples, 4.18%)</title><rect x="1140.7" y="789" width="49.3" height="15.0" fill="rgb(206,88,20)" rx="2" ry="2" />
<text  x="1143.72" y="799.5" >arch..</text>
</g>
<g >
<title>ovl_create_object (1 samples, 0.03%)</title><rect x="159.9" y="341" width="0.3" height="15.0" fill="rgb(249,100,19)" rx="2" ry="2" />
<text  x="162.93" y="351.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.03%)</title><rect x="1086.7" y="453" width="0.3" height="15.0" fill="rgb(244,142,35)" rx="2" ry="2" />
<text  x="1089.66" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.15%)</title><rect x="878.5" y="581" width="1.8" height="15.0" fill="rgb(250,113,26)" rx="2" ry="2" />
<text  x="881.50" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.9" y="853" width="0.3" height="15.0" fill="rgb(228,52,18)" rx="2" ry="2" />
<text  x="13.90" y="863.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.03%)</title><rect x="1086.7" y="469" width="0.3" height="15.0" fill="rgb(254,212,7)" rx="2" ry="2" />
<text  x="1089.66" y="479.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1,298 samples, 32.85%)</title><rect x="175.2" y="693" width="387.6" height="15.0" fill="rgb(207,146,50)" rx="2" ry="2" />
<text  x="178.16" y="703.5" >rustposix::interface::pipe::EmulatedPipe::read_from_..</text>
</g>
<g >
<title>NaClGetThreadCtxSp (3 samples, 0.08%)</title><rect x="123.8" y="805" width="0.9" height="15.0" fill="rgb(250,95,52)" rx="2" ry="2" />
<text  x="126.79" y="815.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="36.3" y="725" width="0.3" height="15.0" fill="rgb(242,224,10)" rx="2" ry="2" />
<text  x="39.28" y="735.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (1 samples, 0.03%)</title><rect x="1087.0" y="661" width="0.3" height="15.0" fill="rgb(218,146,1)" rx="2" ry="2" />
<text  x="1089.96" y="671.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.03%)</title><rect x="1086.4" y="837" width="0.3" height="15.0" fill="rgb(213,82,32)" rx="2" ry="2" />
<text  x="1089.37" y="847.5" ></text>
</g>
<g >
<title>NaClCreateThread (1 samples, 0.03%)</title><rect x="174.9" y="789" width="0.3" height="15.0" fill="rgb(222,187,26)" rx="2" ry="2" />
<text  x="177.86" y="799.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.03%)</title><rect x="1183.1" y="645" width="0.3" height="15.0" fill="rgb(224,21,21)" rx="2" ry="2" />
<text  x="1186.13" y="655.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (3 samples, 0.08%)</title><rect x="104.7" y="837" width="0.9" height="15.0" fill="rgb(214,227,18)" rx="2" ry="2" />
<text  x="107.67" y="847.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (1,299 samples, 32.88%)</title><rect x="175.2" y="709" width="387.9" height="15.0" fill="rgb(217,194,29)" rx="2" ry="2" />
<text  x="178.16" y="719.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rust..</text>
</g>
<g >
<title>serde_json::ser::to_writer (2 samples, 0.05%)</title><rect x="174.0" y="661" width="0.6" height="15.0" fill="rgb(233,49,52)" rx="2" ry="2" />
<text  x="176.96" y="671.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (1 samples, 0.03%)</title><rect x="172.5" y="565" width="0.3" height="15.0" fill="rgb(222,199,17)" rx="2" ry="2" />
<text  x="175.47" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.28%)</title><rect x="615.7" y="725" width="3.3" height="15.0" fill="rgb(234,4,5)" rx="2" ry="2" />
<text  x="618.68" y="735.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (4 samples, 0.10%)</title><rect x="1050.5" y="837" width="1.2" height="15.0" fill="rgb(206,69,34)" rx="2" ry="2" />
<text  x="1053.53" y="847.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="174.6" y="325" width="0.3" height="15.0" fill="rgb(252,140,38)" rx="2" ry="2" />
<text  x="177.56" y="335.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (4 samples, 0.10%)</title><rect x="1118.6" y="693" width="1.2" height="15.0" fill="rgb(208,155,26)" rx="2" ry="2" />
<text  x="1121.62" y="703.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (1 samples, 0.03%)</title><rect x="47.0" y="613" width="0.3" height="15.0" fill="rgb(213,134,20)" rx="2" ry="2" />
<text  x="50.03" y="623.5" ></text>
</g>
<g >
<title>__vunmap (2 samples, 0.05%)</title><rect x="1116.8" y="773" width="0.6" height="15.0" fill="rgb(225,32,49)" rx="2" ry="2" />
<text  x="1119.83" y="783.5" ></text>
</g>
<g >
<title>__inc_numa_state (1 samples, 0.03%)</title><rect x="1029.9" y="661" width="0.3" height="15.0" fill="rgb(239,176,53)" rx="2" ry="2" />
<text  x="1032.92" y="671.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.03%)</title><rect x="174.6" y="741" width="0.3" height="15.0" fill="rgb(216,142,28)" rx="2" ry="2" />
<text  x="177.56" y="751.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (1 samples, 0.03%)</title><rect x="174.6" y="565" width="0.3" height="15.0" fill="rgb(235,103,39)" rx="2" ry="2" />
<text  x="177.56" y="575.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (36 samples, 0.91%)</title><rect x="760.5" y="613" width="10.8" height="15.0" fill="rgb(254,33,54)" rx="2" ry="2" />
<text  x="763.53" y="623.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.05%)</title><rect x="409.3" y="581" width="0.6" height="15.0" fill="rgb(253,78,39)" rx="2" ry="2" />
<text  x="412.31" y="591.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.03%)</title><rect x="1086.7" y="293" width="0.3" height="15.0" fill="rgb(244,222,46)" rx="2" ry="2" />
<text  x="1089.66" y="303.5" ></text>
</g>
<g >
<title>read_hpet.part.0 (1 samples, 0.03%)</title><rect x="1157.1" y="501" width="0.3" height="15.0" fill="rgb(206,140,51)" rx="2" ry="2" />
<text  x="1160.15" y="511.5" ></text>
</g>
<g >
<title>unmap_vmas (37 samples, 0.94%)</title><rect x="1099.2" y="661" width="11.1" height="15.0" fill="rgb(218,184,12)" rx="2" ry="2" />
<text  x="1102.21" y="671.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1117.4" y="757" width="0.3" height="15.0" fill="rgb(239,112,4)" rx="2" ry="2" />
<text  x="1120.43" y="767.5" ></text>
</g>
<g >
<title>__GI___clone (1 samples, 0.03%)</title><rect x="1086.4" y="853" width="0.3" height="15.0" fill="rgb(250,85,47)" rx="2" ry="2" />
<text  x="1089.37" y="863.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (2 samples, 0.05%)</title><rect x="174.0" y="405" width="0.6" height="15.0" fill="rgb(226,49,39)" rx="2" ry="2" />
<text  x="176.96" y="415.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.03%)</title><rect x="174.0" y="85" width="0.3" height="15.0" fill="rgb(206,173,19)" rx="2" ry="2" />
<text  x="176.96" y="95.5" ></text>
</g>
<g >
<title>vfs_iter_write (2 samples, 0.05%)</title><rect x="172.8" y="501" width="0.6" height="15.0" fill="rgb(244,48,12)" rx="2" ry="2" />
<text  x="175.77" y="511.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="1118.3" y="709" width="0.3" height="15.0" fill="rgb(209,104,14)" rx="2" ry="2" />
<text  x="1121.32" y="719.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.03%)</title><rect x="562.8" y="677" width="0.3" height="15.0" fill="rgb(226,66,22)" rx="2" ry="2" />
<text  x="565.82" y="687.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (11 samples, 0.28%)</title><rect x="581.6" y="789" width="3.3" height="15.0" fill="rgb(224,158,13)" rx="2" ry="2" />
<text  x="584.63" y="799.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.03%)</title><rect x="943.0" y="741" width="0.3" height="15.0" fill="rgb(252,158,6)" rx="2" ry="2" />
<text  x="946.01" y="751.5" ></text>
</g>
<g >
<title>clocksource_watchdog (1 samples, 0.03%)</title><rect x="1157.1" y="533" width="0.3" height="15.0" fill="rgb(224,158,0)" rx="2" ry="2" />
<text  x="1160.15" y="543.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (7 samples, 0.18%)</title><rect x="838.2" y="629" width="2.1" height="15.0" fill="rgb(253,98,0)" rx="2" ry="2" />
<text  x="841.18" y="639.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.03%)</title><rect x="1087.3" y="821" width="0.3" height="15.0" fill="rgb(229,160,48)" rx="2" ry="2" />
<text  x="1090.26" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="1085.2" y="821" width="0.3" height="15.0" fill="rgb(209,22,13)" rx="2" ry="2" />
<text  x="1088.17" y="831.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.03%)</title><rect x="1021.0" y="693" width="0.3" height="15.0" fill="rgb(214,74,45)" rx="2" ry="2" />
<text  x="1023.96" y="703.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (4 samples, 0.10%)</title><rect x="962.7" y="789" width="1.2" height="15.0" fill="rgb(247,167,50)" rx="2" ry="2" />
<text  x="965.72" y="799.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.10%)</title><rect x="845.9" y="565" width="1.2" height="15.0" fill="rgb(228,94,4)" rx="2" ry="2" />
<text  x="848.95" y="575.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (2 samples, 0.05%)</title><rect x="174.0" y="501" width="0.6" height="15.0" fill="rgb(237,107,53)" rx="2" ry="2" />
<text  x="176.96" y="511.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (1 samples, 0.03%)</title><rect x="173.1" y="373" width="0.3" height="15.0" fill="rgb(236,74,49)" rx="2" ry="2" />
<text  x="176.07" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (17 samples, 0.43%)</title><rect x="843.0" y="645" width="5.0" height="15.0" fill="rgb(231,133,40)" rx="2" ry="2" />
<text  x="845.96" y="655.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (12 samples, 0.30%)</title><rect x="878.2" y="645" width="3.6" height="15.0" fill="rgb(206,116,54)" rx="2" ry="2" />
<text  x="881.20" y="655.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (490 samples, 12.40%)</title><rect x="217.0" y="677" width="146.3" height="15.0" fill="rgb(210,127,51)" rx="2" ry="2" />
<text  x="219.97" y="687.5" >ringbuf::consumer:..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (23 samples, 0.58%)</title><rect x="816.1" y="629" width="6.8" height="15.0" fill="rgb(236,74,41)" rx="2" ry="2" />
<text  x="819.08" y="639.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.03%)</title><rect x="1150.0" y="581" width="0.3" height="15.0" fill="rgb(210,209,29)" rx="2" ry="2" />
<text  x="1152.98" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1 samples, 0.03%)</title><rect x="1086.7" y="341" width="0.3" height="15.0" fill="rgb(238,207,43)" rx="2" ry="2" />
<text  x="1089.66" y="351.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (2 samples, 0.05%)</title><rect x="897.3" y="773" width="0.6" height="15.0" fill="rgb(228,10,14)" rx="2" ry="2" />
<text  x="900.31" y="783.5" ></text>
</g>
<g >
<title>NaClSysCloseDecoder (1 samples, 0.03%)</title><rect x="159.9" y="821" width="0.3" height="15.0" fill="rgb(208,78,38)" rx="2" ry="2" />
<text  x="162.93" y="831.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="931.7" y="757" width="0.3" height="15.0" fill="rgb(215,102,37)" rx="2" ry="2" />
<text  x="934.66" y="767.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.03%)</title><rect x="172.5" y="773" width="0.3" height="15.0" fill="rgb(248,85,36)" rx="2" ry="2" />
<text  x="175.47" y="783.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (68 samples, 1.72%)</title><rect x="1119.8" y="741" width="20.3" height="15.0" fill="rgb(253,123,10)" rx="2" ry="2" />
<text  x="1122.82" y="751.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (16 samples, 0.40%)</title><rect x="638.1" y="645" width="4.8" height="15.0" fill="rgb(221,93,4)" rx="2" ry="2" />
<text  x="641.08" y="655.5" ></text>
</g>
<g >
<title>event_function_call (65 samples, 1.65%)</title><rect x="15.4" y="629" width="19.4" height="15.0" fill="rgb(237,25,45)" rx="2" ry="2" />
<text  x="18.38" y="639.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (66 samples, 1.67%)</title><rect x="848.0" y="693" width="19.7" height="15.0" fill="rgb(219,203,49)" rx="2" ry="2" />
<text  x="851.04" y="703.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (1 samples, 0.03%)</title><rect x="174.0" y="117" width="0.3" height="15.0" fill="rgb(225,16,40)" rx="2" ry="2" />
<text  x="176.96" y="127.5" ></text>
</g>
<g >
<title>rcu_nmi_enter (1 samples, 0.03%)</title><rect x="1157.7" y="613" width="0.3" height="15.0" fill="rgb(253,124,47)" rx="2" ry="2" />
<text  x="1160.74" y="623.5" ></text>
</g>
<g >
<title>get_signal (39 samples, 0.99%)</title><rect x="1099.2" y="757" width="11.7" height="15.0" fill="rgb(228,23,4)" rx="2" ry="2" />
<text  x="1102.21" y="767.5" ></text>
</g>
<g >
<title>schedule_idle (7 samples, 0.18%)</title><rect x="1185.8" y="725" width="2.1" height="15.0" fill="rgb(206,123,36)" rx="2" ry="2" />
<text  x="1188.82" y="735.5" ></text>
</g>
<g >
<title>intel_idle (1 samples, 0.03%)</title><rect x="1158.0" y="677" width="0.3" height="15.0" fill="rgb(241,160,24)" rx="2" ry="2" />
<text  x="1161.04" y="687.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.03%)</title><rect x="1086.7" y="405" width="0.3" height="15.0" fill="rgb(226,6,9)" rx="2" ry="2" />
<text  x="1089.66" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (1 samples, 0.03%)</title><rect x="1086.7" y="309" width="0.3" height="15.0" fill="rgb(212,221,12)" rx="2" ry="2" />
<text  x="1089.66" y="319.5" ></text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.05%)</title><rect x="1119.2" y="645" width="0.6" height="15.0" fill="rgb(250,138,14)" rx="2" ry="2" />
<text  x="1122.22" y="655.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.20%)</title><rect x="875.5" y="661" width="2.4" height="15.0" fill="rgb(226,40,47)" rx="2" ry="2" />
<text  x="878.51" y="671.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.03%)</title><rect x="1047.5" y="757" width="0.3" height="15.0" fill="rgb(215,6,15)" rx="2" ry="2" />
<text  x="1050.54" y="767.5" ></text>
</g>
<g >
<title>__libc_write (2 samples, 0.05%)</title><rect x="172.8" y="629" width="0.6" height="15.0" fill="rgb(251,192,43)" rx="2" ry="2" />
<text  x="175.77" y="639.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 0.05%)</title><rect x="1048.4" y="725" width="0.6" height="15.0" fill="rgb(228,167,32)" rx="2" ry="2" />
<text  x="1051.44" y="735.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (243 samples, 6.15%)</title><rect x="1117.4" y="853" width="72.6" height="15.0" fill="rgb(206,193,38)" rx="2" ry="2" />
<text  x="1120.43" y="863.5" >secondar..</text>
</g>
<g >
<title>[sel_ldr] (65 samples, 1.65%)</title><rect x="993.8" y="837" width="19.4" height="15.0" fill="rgb(240,52,23)" rx="2" ry="2" />
<text  x="996.78" y="847.5" ></text>
</g>
<g >
<title>ovl_cleanup_and_whiteout (1 samples, 0.03%)</title><rect x="173.7" y="501" width="0.3" height="15.0" fill="rgb(208,49,27)" rx="2" ry="2" />
<text  x="176.66" y="511.5" ></text>
</g>
<g >
<title>__perf_event_header__init_id (1 samples, 0.03%)</title><rect x="1110.3" y="645" width="0.3" height="15.0" fill="rgb(246,161,49)" rx="2" ry="2" />
<text  x="1113.26" y="655.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (5 samples, 0.13%)</title><rect x="408.4" y="613" width="1.5" height="15.0" fill="rgb(231,15,25)" rx="2" ry="2" />
<text  x="411.41" y="623.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.03%)</title><rect x="1115.0" y="645" width="0.3" height="15.0" fill="rgb(207,204,6)" rx="2" ry="2" />
<text  x="1118.04" y="655.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (3 samples, 0.08%)</title><rect x="102.9" y="789" width="0.9" height="15.0" fill="rgb(240,185,2)" rx="2" ry="2" />
<text  x="105.88" y="799.5" ></text>
</g>
<g >
<title>NaClRefCountRef (2 samples, 0.05%)</title><rect x="957.0" y="757" width="0.6" height="15.0" fill="rgb(249,136,44)" rx="2" ry="2" />
<text  x="960.05" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (37 samples, 0.94%)</title><rect x="670.9" y="629" width="11.1" height="15.0" fill="rgb(235,72,5)" rx="2" ry="2" />
<text  x="673.93" y="639.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.03%)</title><rect x="1118.9" y="597" width="0.3" height="15.0" fill="rgb(242,201,14)" rx="2" ry="2" />
<text  x="1121.92" y="607.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.03%)</title><rect x="174.6" y="469" width="0.3" height="15.0" fill="rgb(212,197,6)" rx="2" ry="2" />
<text  x="177.56" y="479.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.03%)</title><rect x="1086.7" y="373" width="0.3" height="15.0" fill="rgb(210,77,49)" rx="2" ry="2" />
<text  x="1089.66" y="383.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.03%)</title><rect x="161.4" y="629" width="0.3" height="15.0" fill="rgb(210,22,41)" rx="2" ry="2" />
<text  x="164.42" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (3 samples, 0.08%)</title><rect x="847.1" y="629" width="0.9" height="15.0" fill="rgb(219,112,2)" rx="2" ry="2" />
<text  x="850.14" y="639.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (7 samples, 0.18%)</title><rect x="43.4" y="453" width="2.1" height="15.0" fill="rgb(211,127,20)" rx="2" ry="2" />
<text  x="46.45" y="463.5" ></text>
</g>
<g >
<title>rustposix::interface::file::openfile (1 samples, 0.03%)</title><rect x="159.9" y="629" width="0.3" height="15.0" fill="rgb(226,101,10)" rx="2" ry="2" />
<text  x="162.93" y="639.5" ></text>
</g>
<g >
<title>[unknown] (119 samples, 3.01%)</title><rect x="11.2" y="853" width="35.5" height="15.0" fill="rgb(230,190,20)" rx="2" ry="2" />
<text  x="14.19" y="863.5" >[un..</text>
</g>
<g >
<title>exit_mm (37 samples, 0.94%)</title><rect x="1099.2" y="709" width="11.1" height="15.0" fill="rgb(229,137,6)" rx="2" ry="2" />
<text  x="1102.21" y="719.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (1 samples, 0.03%)</title><rect x="1182.8" y="661" width="0.3" height="15.0" fill="rgb(238,143,44)" rx="2" ry="2" />
<text  x="1185.83" y="671.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.03%)</title><rect x="1087.0" y="613" width="0.3" height="15.0" fill="rgb(253,20,40)" rx="2" ry="2" />
<text  x="1089.96" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_write (33 samples, 0.84%)</title><rect x="36.9" y="661" width="9.8" height="15.0" fill="rgb(244,15,53)" rx="2" ry="2" />
<text  x="39.88" y="671.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.03%)</title><rect x="1119.2" y="597" width="0.3" height="15.0" fill="rgb(254,187,46)" rx="2" ry="2" />
<text  x="1122.22" y="607.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (341 samples, 8.63%)</title><rect x="446.3" y="629" width="101.9" height="15.0" fill="rgb(212,37,43)" rx="2" ry="2" />
<text  x="449.34" y="639.5" >ringbuf::con..</text>
</g>
<g >
<title>dispatcher (963 samples, 24.37%)</title><rect x="609.7" y="741" width="287.6" height="15.0" fill="rgb(226,103,28)" rx="2" ry="2" />
<text  x="612.71" y="751.5" >dispatcher</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize (1 samples, 0.03%)</title><rect x="1087.0" y="501" width="0.3" height="15.0" fill="rgb(232,51,8)" rx="2" ry="2" />
<text  x="1089.96" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (30 samples, 0.76%)</title><rect x="623.7" y="661" width="9.0" height="15.0" fill="rgb(252,172,40)" rx="2" ry="2" />
<text  x="626.74" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (1 samples, 0.03%)</title><rect x="159.9" y="677" width="0.3" height="15.0" fill="rgb(221,193,19)" rx="2" ry="2" />
<text  x="162.93" y="687.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.03%)</title><rect x="174.6" y="597" width="0.3" height="15.0" fill="rgb(225,193,2)" rx="2" ry="2" />
<text  x="177.56" y="607.5" ></text>
</g>
<g >
<title>vfs_iter_write (2 samples, 0.05%)</title><rect x="46.7" y="741" width="0.6" height="15.0" fill="rgb(254,205,48)" rx="2" ry="2" />
<text  x="49.74" y="751.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (3 samples, 0.08%)</title><rect x="1183.7" y="709" width="0.9" height="15.0" fill="rgb(226,106,22)" rx="2" ry="2" />
<text  x="1186.73" y="719.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.08%)</title><rect x="832.8" y="565" width="0.9" height="15.0" fill="rgb(225,129,13)" rx="2" ry="2" />
<text  x="835.80" y="575.5" ></text>
</g>
<g >
<title>pagecache_get_page (6 samples, 0.15%)</title><rect x="40.2" y="453" width="1.8" height="15.0" fill="rgb(235,210,11)" rx="2" ry="2" />
<text  x="43.16" y="463.5" ></text>
</g>
<g >
<title>__GI___poll (5 samples, 0.13%)</title><rect x="35.1" y="789" width="1.5" height="15.0" fill="rgb(228,112,24)" rx="2" ry="2" />
<text  x="38.09" y="799.5" ></text>
</g>
<g >
<title>capable_wrt_inode_uidgid (1 samples, 0.03%)</title><rect x="173.4" y="453" width="0.3" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="176.37" y="463.5" ></text>
</g>
<g >
<title>perf_swevent_stop (1 samples, 0.03%)</title><rect x="1118.3" y="549" width="0.3" height="15.0" fill="rgb(254,113,11)" rx="2" ry="2" />
<text  x="1121.32" y="559.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (39 samples, 0.99%)</title><rect x="1099.2" y="789" width="11.7" height="15.0" fill="rgb(253,73,44)" rx="2" ry="2" />
<text  x="1102.21" y="799.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (3 samples, 0.08%)</title><rect x="44.6" y="389" width="0.9" height="15.0" fill="rgb(248,58,51)" rx="2" ry="2" />
<text  x="47.64" y="399.5" ></text>
</g>
<g >
<title>test_clear_page_writeback (1 samples, 0.03%)</title><rect x="1116.5" y="709" width="0.3" height="15.0" fill="rgb(225,106,34)" rx="2" ry="2" />
<text  x="1119.53" y="719.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.03%)</title><rect x="1086.7" y="533" width="0.3" height="15.0" fill="rgb(236,94,47)" rx="2" ry="2" />
<text  x="1089.66" y="543.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (1 samples, 0.03%)</title><rect x="1086.7" y="581" width="0.3" height="15.0" fill="rgb(229,58,40)" rx="2" ry="2" />
<text  x="1089.66" y="591.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (2 samples, 0.05%)</title><rect x="174.6" y="821" width="0.6" height="15.0" fill="rgb(215,49,54)" rx="2" ry="2" />
<text  x="177.56" y="831.5" ></text>
</g>
<g >
<title>ovl_permission (1 samples, 0.03%)</title><rect x="173.4" y="517" width="0.3" height="15.0" fill="rgb(251,194,28)" rx="2" ry="2" />
<text  x="176.37" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="832.5" y="565" width="0.3" height="15.0" fill="rgb(250,148,4)" rx="2" ry="2" />
<text  x="835.51" y="575.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (80 samples, 2.02%)</title><rect x="750.1" y="661" width="23.9" height="15.0" fill="rgb(226,184,30)" rx="2" ry="2" />
<text  x="753.08" y="671.5" >r..</text>
</g>
<g >
<title>NaClXMutexUnlock (35 samples, 0.89%)</title><rect x="571.2" y="773" width="10.4" height="15.0" fill="rgb(253,52,9)" rx="2" ry="2" />
<text  x="574.18" y="783.5" ></text>
</g>
<g >
<title>page_remove_rmap (8 samples, 0.20%)</title><rect x="1101.3" y="597" width="2.4" height="15.0" fill="rgb(218,7,30)" rx="2" ry="2" />
<text  x="1104.30" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (6 samples, 0.15%)</title><rect x="172.8" y="741" width="1.8" height="15.0" fill="rgb(206,67,15)" rx="2" ry="2" />
<text  x="175.77" y="751.5" ></text>
</g>
<g >
<title>exit_mmap (37 samples, 0.94%)</title><rect x="1099.2" y="677" width="11.1" height="15.0" fill="rgb(227,1,15)" rx="2" ry="2" />
<text  x="1102.21" y="687.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.40%)</title><rect x="638.1" y="677" width="4.8" height="15.0" fill="rgb(241,86,46)" rx="2" ry="2" />
<text  x="641.08" y="687.5" ></text>
</g>
<g >
<title>NaClDescImcShmMap (1 samples, 0.03%)</title><rect x="161.4" y="741" width="0.3" height="15.0" fill="rgb(244,121,9)" rx="2" ry="2" />
<text  x="164.42" y="751.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (2 samples, 0.05%)</title><rect x="1147.0" y="517" width="0.6" height="15.0" fill="rgb(236,170,30)" rx="2" ry="2" />
<text  x="1149.99" y="527.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.03%)</title><rect x="1115.0" y="789" width="0.3" height="15.0" fill="rgb(216,71,21)" rx="2" ry="2" />
<text  x="1118.04" y="799.5" ></text>
</g>
<g >
<title>cpuidle_enter (127 samples, 3.21%)</title><rect x="1141.3" y="709" width="37.9" height="15.0" fill="rgb(241,116,14)" rx="2" ry="2" />
<text  x="1144.32" y="719.5" >cpu..</text>
</g>
<g >
<title>ext4_finish_bio (1 samples, 0.03%)</title><rect x="1116.5" y="741" width="0.3" height="15.0" fill="rgb(226,129,18)" rx="2" ry="2" />
<text  x="1119.53" y="751.5" ></text>
</g>
<g >
<title>sync_regs (12 samples, 0.30%)</title><rect x="1043.4" y="837" width="3.5" height="15.0" fill="rgb(229,82,31)" rx="2" ry="2" />
<text  x="1046.36" y="847.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.03%)</title><rect x="1179.2" y="709" width="0.3" height="15.0" fill="rgb(238,114,4)" rx="2" ry="2" />
<text  x="1182.25" y="719.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (27 samples, 0.68%)</title><rect x="923.6" y="773" width="8.1" height="15.0" fill="rgb(205,47,39)" rx="2" ry="2" />
<text  x="926.60" y="783.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (2 samples, 0.05%)</title><rect x="174.0" y="565" width="0.6" height="15.0" fill="rgb(232,197,30)" rx="2" ry="2" />
<text  x="176.96" y="575.5" ></text>
</g>
<g >
<title>kthread (3 samples, 0.08%)</title><rect x="1116.5" y="837" width="0.9" height="15.0" fill="rgb(211,27,49)" rx="2" ry="2" />
<text  x="1119.53" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="159.9" y="469" width="0.3" height="15.0" fill="rgb(232,102,20)" rx="2" ry="2" />
<text  x="162.93" y="479.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (1 samples, 0.03%)</title><rect x="1087.0" y="453" width="0.3" height="15.0" fill="rgb(207,69,39)" rx="2" ry="2" />
<text  x="1089.96" y="463.5" ></text>
</g>
<g >
<title>taskstats_tgid_alloc (1 samples, 0.03%)</title><rect x="1086.4" y="741" width="0.3" height="15.0" fill="rgb(211,195,43)" rx="2" ry="2" />
<text  x="1089.37" y="751.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.28%)</title><rect x="878.5" y="629" width="3.3" height="15.0" fill="rgb(225,30,23)" rx="2" ry="2" />
<text  x="881.50" y="639.5" ></text>
</g>
<g >
<title>scheduler_tick (3 samples, 0.08%)</title><rect x="1147.6" y="517" width="0.9" height="15.0" fill="rgb(213,97,6)" rx="2" ry="2" />
<text  x="1150.59" y="527.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (4 samples, 0.10%)</title><rect x="35.1" y="693" width="1.2" height="15.0" fill="rgb(248,127,26)" rx="2" ry="2" />
<text  x="38.09" y="703.5" ></text>
</g>
<g >
<title>read_hpet.part.0 (1 samples, 0.03%)</title><rect x="1119.5" y="565" width="0.3" height="15.0" fill="rgb(208,158,28)" rx="2" ry="2" />
<text  x="1122.52" y="575.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (46 samples, 1.16%)</title><rect x="619.0" y="725" width="13.7" height="15.0" fill="rgb(205,164,32)" rx="2" ry="2" />
<text  x="621.96" y="735.5" ></text>
</g>
<g >
<title>follow_pud_mask.isra.0 (1 samples, 0.03%)</title><rect x="1047.5" y="645" width="0.3" height="15.0" fill="rgb(234,37,19)" rx="2" ry="2" />
<text  x="1050.54" y="655.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (2 samples, 0.05%)</title><rect x="938.8" y="757" width="0.6" height="15.0" fill="rgb(223,194,14)" rx="2" ry="2" />
<text  x="941.83" y="767.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.03%)</title><rect x="1157.4" y="485" width="0.3" height="15.0" fill="rgb(239,75,53)" rx="2" ry="2" />
<text  x="1160.45" y="495.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.03%)</title><rect x="1115.0" y="693" width="0.3" height="15.0" fill="rgb(227,44,3)" rx="2" ry="2" />
<text  x="1118.04" y="703.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="1186.7" y="597" width="0.3" height="15.0" fill="rgb(208,73,22)" rx="2" ry="2" />
<text  x="1189.71" y="607.5" ></text>
</g>
<g >
<title>NaClHostDescPRead (1 samples, 0.03%)</title><rect x="174.6" y="693" width="0.3" height="15.0" fill="rgb(224,211,11)" rx="2" ry="2" />
<text  x="177.56" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (2 samples, 0.05%)</title><rect x="172.8" y="661" width="0.6" height="15.0" fill="rgb(208,88,39)" rx="2" ry="2" />
<text  x="175.77" y="671.5" ></text>
</g>
<g >
<title>ext4_check_bdev_write_error (1 samples, 0.03%)</title><rect x="44.3" y="373" width="0.3" height="15.0" fill="rgb(230,65,7)" rx="2" ry="2" />
<text  x="47.35" y="383.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.03%)</title><rect x="1110.6" y="645" width="0.3" height="15.0" fill="rgb(212,170,21)" rx="2" ry="2" />
<text  x="1113.56" y="655.5" ></text>
</g>
<g >
<title>ovl_read_iter (1 samples, 0.03%)</title><rect x="174.6" y="437" width="0.3" height="15.0" fill="rgb(233,176,25)" rx="2" ry="2" />
<text  x="177.56" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="72.7" y="821" width="0.3" height="15.0" fill="rgb(248,142,43)" rx="2" ry="2" />
<text  x="75.72" y="831.5" ></text>
</g>
<g >
<title>tick_sched_handle (10 samples, 0.25%)</title><rect x="1145.5" y="549" width="3.0" height="15.0" fill="rgb(252,78,14)" rx="2" ry="2" />
<text  x="1148.50" y="559.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.03%)</title><rect x="38.7" y="437" width="0.3" height="15.0" fill="rgb(206,150,19)" rx="2" ry="2" />
<text  x="41.67" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (6 samples, 0.15%)</title><rect x="172.8" y="725" width="1.8" height="15.0" fill="rgb(218,204,14)" rx="2" ry="2" />
<text  x="175.77" y="735.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.03%)</title><rect x="41.1" y="373" width="0.3" height="15.0" fill="rgb(253,61,51)" rx="2" ry="2" />
<text  x="44.06" y="383.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.03%)</title><rect x="174.6" y="757" width="0.3" height="15.0" fill="rgb(216,133,47)" rx="2" ry="2" />
<text  x="177.56" y="767.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.05%)</title><rect x="172.8" y="549" width="0.6" height="15.0" fill="rgb(215,123,31)" rx="2" ry="2" />
<text  x="175.77" y="559.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.05%)</title><rect x="172.8" y="533" width="0.6" height="15.0" fill="rgb(248,59,7)" rx="2" ry="2" />
<text  x="175.77" y="543.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.03%)</title><rect x="1098.9" y="805" width="0.3" height="15.0" fill="rgb(211,224,0)" rx="2" ry="2" />
<text  x="1101.91" y="815.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (26 samples, 0.66%)</title><rect x="207.7" y="661" width="7.8" height="15.0" fill="rgb(212,85,37)" rx="2" ry="2" />
<text  x="210.71" y="671.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.03%)</title><rect x="1157.4" y="421" width="0.3" height="15.0" fill="rgb(228,23,22)" rx="2" ry="2" />
<text  x="1160.45" y="431.5" ></text>
</g>
<g >
<title>unlock_page_memcg (1 samples, 0.03%)</title><rect x="1109.7" y="597" width="0.3" height="15.0" fill="rgb(219,125,36)" rx="2" ry="2" />
<text  x="1112.66" y="607.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (657 samples, 16.63%)</title><rect x="366.6" y="661" width="196.2" height="15.0" fill="rgb(249,188,37)" rx="2" ry="2" />
<text  x="369.60" y="671.5" >ringbuf::consumer::Consum..</text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.05%)</title><rect x="1101.9" y="581" width="0.6" height="15.0" fill="rgb(215,138,36)" rx="2" ry="2" />
<text  x="1104.90" y="591.5" ></text>
</g>
<g >
<title>record__pushfn (33 samples, 0.84%)</title><rect x="36.9" y="757" width="9.8" height="15.0" fill="rgb(234,61,36)" rx="2" ry="2" />
<text  x="39.88" y="767.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.03%)</title><rect x="562.8" y="645" width="0.3" height="15.0" fill="rgb(254,88,36)" rx="2" ry="2" />
<text  x="565.82" y="655.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (2 samples, 0.05%)</title><rect x="868.3" y="613" width="0.6" height="15.0" fill="rgb(244,138,37)" rx="2" ry="2" />
<text  x="871.34" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="174.0" y="69" width="0.3" height="15.0" fill="rgb(237,211,33)" rx="2" ry="2" />
<text  x="176.96" y="79.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (14 samples, 0.35%)</title><rect x="98.4" y="821" width="4.2" height="15.0" fill="rgb(252,133,48)" rx="2" ry="2" />
<text  x="101.40" y="831.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (211 samples, 5.34%)</title><rect x="686.8" y="661" width="63.0" height="15.0" fill="rgb(239,175,26)" rx="2" ry="2" />
<text  x="689.76" y="671.5" >&lt;std::..</text>
</g>
<g >
<title>NaClGetDescMu (2 samples, 0.05%)</title><rect x="957.6" y="789" width="0.6" height="15.0" fill="rgb(246,75,13)" rx="2" ry="2" />
<text  x="960.64" y="799.5" ></text>
</g>
<g >
<title>stop_this_handle (1 samples, 0.03%)</title><rect x="47.0" y="597" width="0.3" height="15.0" fill="rgb(214,165,43)" rx="2" ry="2" />
<text  x="50.03" y="607.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.08%)</title><rect x="756.6" y="597" width="0.9" height="15.0" fill="rgb(213,18,16)" rx="2" ry="2" />
<text  x="759.65" y="607.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="845.6" y="549" width="0.3" height="15.0" fill="rgb(208,98,33)" rx="2" ry="2" />
<text  x="848.65" y="559.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (33 samples, 0.84%)</title><rect x="36.9" y="517" width="9.8" height="15.0" fill="rgb(238,158,0)" rx="2" ry="2" />
<text  x="39.88" y="527.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.03%)</title><rect x="40.5" y="421" width="0.3" height="15.0" fill="rgb(229,157,31)" rx="2" ry="2" />
<text  x="43.46" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (31 samples, 0.78%)</title><rect x="762.0" y="597" width="9.3" height="15.0" fill="rgb(241,150,12)" rx="2" ry="2" />
<text  x="765.02" y="607.5" ></text>
</g>
<g >
<title>find_get_entry (1 samples, 0.03%)</title><rect x="41.7" y="437" width="0.3" height="15.0" fill="rgb(246,28,17)" rx="2" ry="2" />
<text  x="44.66" y="447.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.05%)</title><rect x="174.0" y="581" width="0.6" height="15.0" fill="rgb(222,0,51)" rx="2" ry="2" />
<text  x="176.96" y="591.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.03%)</title><rect x="103.8" y="805" width="0.3" height="15.0" fill="rgb(230,100,18)" rx="2" ry="2" />
<text  x="106.78" y="815.5" ></text>
</g>
<g >
<title>vfs_iter_write (33 samples, 0.84%)</title><rect x="36.9" y="581" width="9.8" height="15.0" fill="rgb(220,9,32)" rx="2" ry="2" />
<text  x="39.88" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1086.4" y="805" width="0.3" height="15.0" fill="rgb(236,105,36)" rx="2" ry="2" />
<text  x="1089.37" y="815.5" ></text>
</g>
<g >
<title>do_anonymous_page (75 samples, 1.90%)</title><rect x="1018.9" y="741" width="22.4" height="15.0" fill="rgb(221,14,39)" rx="2" ry="2" />
<text  x="1021.87" y="751.5" >d..</text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (6 samples, 0.15%)</title><rect x="172.8" y="757" width="1.8" height="15.0" fill="rgb(221,56,46)" rx="2" ry="2" />
<text  x="175.77" y="767.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.03%)</title><rect x="1047.2" y="485" width="0.3" height="15.0" fill="rgb(240,13,53)" rx="2" ry="2" />
<text  x="1050.24" y="495.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (1 samples, 0.03%)</title><rect x="564.0" y="757" width="0.3" height="15.0" fill="rgb(216,133,49)" rx="2" ry="2" />
<text  x="567.01" y="767.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (3 samples, 0.08%)</title><rect x="39.3" y="421" width="0.9" height="15.0" fill="rgb(228,189,0)" rx="2" ry="2" />
<text  x="42.27" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2 (1 samples, 0.03%)</title><rect x="845.3" y="565" width="0.3" height="15.0" fill="rgb(217,186,22)" rx="2" ry="2" />
<text  x="848.35" y="575.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="342.1" y="645" width="0.3" height="15.0" fill="rgb(208,65,53)" rx="2" ry="2" />
<text  x="345.11" y="655.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.05%)</title><rect x="1046.9" y="645" width="0.6" height="15.0" fill="rgb(226,214,51)" rx="2" ry="2" />
<text  x="1049.94" y="655.5" ></text>
</g>
<g >
<title>NaClGetDesc (1 samples, 0.03%)</title><rect x="563.4" y="789" width="0.3" height="15.0" fill="rgb(212,19,33)" rx="2" ry="2" />
<text  x="566.41" y="799.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (2 samples, 0.05%)</title><rect x="867.7" y="629" width="0.6" height="15.0" fill="rgb(224,216,8)" rx="2" ry="2" />
<text  x="870.75" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (10 samples, 0.25%)</title><rect x="634.8" y="661" width="3.0" height="15.0" fill="rgb(206,83,16)" rx="2" ry="2" />
<text  x="637.79" y="671.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="845.6" y="533" width="0.3" height="15.0" fill="rgb(234,129,34)" rx="2" ry="2" />
<text  x="848.65" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (17 samples, 0.43%)</title><rect x="152.8" y="773" width="5.0" height="15.0" fill="rgb(217,85,19)" rx="2" ry="2" />
<text  x="155.76" y="783.5" ></text>
</g>
<g >
<title>__update_idle_core (2 samples, 0.05%)</title><rect x="1187.3" y="677" width="0.6" height="15.0" fill="rgb(241,215,21)" rx="2" ry="2" />
<text  x="1190.31" y="687.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.03%)</title><rect x="564.0" y="517" width="0.3" height="15.0" fill="rgb(232,186,28)" rx="2" ry="2" />
<text  x="567.01" y="527.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (6 samples, 0.15%)</title><rect x="43.7" y="421" width="1.8" height="15.0" fill="rgb(251,63,12)" rx="2" ry="2" />
<text  x="46.75" y="431.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.03%)</title><rect x="41.4" y="421" width="0.3" height="15.0" fill="rgb(219,196,53)" rx="2" ry="2" />
<text  x="44.36" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (46 samples, 1.16%)</title><rect x="619.0" y="677" width="13.7" height="15.0" fill="rgb(242,117,49)" rx="2" ry="2" />
<text  x="621.96" y="687.5" ></text>
</g>
<g >
<title>load_balance (9 samples, 0.23%)</title><rect x="1152.7" y="549" width="2.7" height="15.0" fill="rgb(213,26,36)" rx="2" ry="2" />
<text  x="1155.67" y="559.5" ></text>
</g>
<g >
<title>irq_work_tick (1 samples, 0.03%)</title><rect x="1145.5" y="533" width="0.3" height="15.0" fill="rgb(215,152,38)" rx="2" ry="2" />
<text  x="1148.50" y="543.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (2 samples, 0.05%)</title><rect x="1154.2" y="501" width="0.6" height="15.0" fill="rgb(223,203,0)" rx="2" ry="2" />
<text  x="1157.16" y="511.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="172.8" y="325" width="0.3" height="15.0" fill="rgb(235,96,54)" rx="2" ry="2" />
<text  x="175.77" y="335.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.03%)</title><rect x="161.4" y="581" width="0.3" height="15.0" fill="rgb(226,104,30)" rx="2" ry="2" />
<text  x="164.42" y="591.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (17 samples, 0.43%)</title><rect x="89.1" y="773" width="5.1" height="15.0" fill="rgb(240,199,25)" rx="2" ry="2" />
<text  x="92.14" y="783.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="174.9" y="725" width="0.3" height="15.0" fill="rgb(238,125,14)" rx="2" ry="2" />
<text  x="177.86" y="735.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.03%)</title><rect x="10.9" y="869" width="0.3" height="15.0" fill="rgb(236,6,18)" rx="2" ry="2" />
<text  x="13.90" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.13%)</title><rect x="1115.0" y="853" width="1.5" height="15.0" fill="rgb(240,38,19)" rx="2" ry="2" />
<text  x="1118.04" y="863.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="161.1" y="661" width="0.3" height="15.0" fill="rgb(253,135,13)" rx="2" ry="2" />
<text  x="164.12" y="671.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (2 samples, 0.05%)</title><rect x="46.7" y="693" width="0.6" height="15.0" fill="rgb(223,90,53)" rx="2" ry="2" />
<text  x="49.74" y="703.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.03%)</title><rect x="10.6" y="837" width="0.3" height="15.0" fill="rgb(230,204,22)" rx="2" ry="2" />
<text  x="13.60" y="847.5" ></text>
</g>
<g >
<title>NaClSysWrite (1 samples, 0.03%)</title><rect x="52.4" y="837" width="0.3" height="15.0" fill="rgb(226,160,45)" rx="2" ry="2" />
<text  x="55.41" y="847.5" ></text>
</g>
<g >
<title>do_futex (3 samples, 0.08%)</title><rect x="1115.0" y="805" width="0.9" height="15.0" fill="rgb(221,39,18)" rx="2" ry="2" />
<text  x="1118.04" y="815.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.05%)</title><rect x="1118.6" y="645" width="0.6" height="15.0" fill="rgb(253,137,12)" rx="2" ry="2" />
<text  x="1121.62" y="655.5" ></text>
</g>
<g >
<title>run_rebalance_domains (16 samples, 0.40%)</title><rect x="1152.4" y="581" width="4.7" height="15.0" fill="rgb(208,72,36)" rx="2" ry="2" />
<text  x="1155.37" y="591.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.10%)</title><rect x="35.1" y="661" width="1.2" height="15.0" fill="rgb(237,146,11)" rx="2" ry="2" />
<text  x="38.09" y="671.5" ></text>
</g>
<g >
<title>BitmapSetBit (3 samples, 0.08%)</title><rect x="169.8" y="709" width="0.9" height="15.0" fill="rgb(243,72,34)" rx="2" ry="2" />
<text  x="172.78" y="719.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (121 samples, 3.06%)</title><rect x="1142.5" y="693" width="36.2" height="15.0" fill="rgb(230,107,31)" rx="2" ry="2" />
<text  x="1145.51" y="703.5" >cpu..</text>
</g>
<g >
<title>taskstats_exit (1 samples, 0.03%)</title><rect x="1086.4" y="757" width="0.3" height="15.0" fill="rgb(226,60,19)" rx="2" ry="2" />
<text  x="1089.37" y="767.5" ></text>
</g>
<g >
<title>pick_next_task_idle (2 samples, 0.05%)</title><rect x="1187.3" y="693" width="0.6" height="15.0" fill="rgb(233,161,8)" rx="2" ry="2" />
<text  x="1190.31" y="703.5" ></text>
</g>
<g >
<title>nohz_csd_func (1 samples, 0.03%)</title><rect x="1187.0" y="613" width="0.3" height="15.0" fill="rgb(223,222,24)" rx="2" ry="2" />
<text  x="1190.01" y="623.5" ></text>
</g>
<g >
<title>release_pages (18 samples, 0.46%)</title><rect x="1104.3" y="565" width="5.4" height="15.0" fill="rgb(241,215,19)" rx="2" ry="2" />
<text  x="1107.28" y="575.5" ></text>
</g>
<g >
<title>create_empty_buffers (1 samples, 0.03%)</title><rect x="38.7" y="453" width="0.3" height="15.0" fill="rgb(250,36,52)" rx="2" ry="2" />
<text  x="41.67" y="463.5" ></text>
</g>
<g >
<title>new_sync_write (33 samples, 0.84%)</title><rect x="36.9" y="613" width="9.8" height="15.0" fill="rgb(232,47,6)" rx="2" ry="2" />
<text  x="39.88" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (29 samples, 0.73%)</title><rect x="399.7" y="613" width="8.7" height="15.0" fill="rgb(227,228,26)" rx="2" ry="2" />
<text  x="402.75" y="623.5" ></text>
</g>
<g >
<title>NaClDescIoDescPRead (1 samples, 0.03%)</title><rect x="174.6" y="709" width="0.3" height="15.0" fill="rgb(218,114,48)" rx="2" ry="2" />
<text  x="177.56" y="719.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.03%)</title><rect x="564.0" y="565" width="0.3" height="15.0" fill="rgb(241,53,29)" rx="2" ry="2" />
<text  x="567.01" y="575.5" ></text>
</g>
<g >
<title>NaClSysExecve (1 samples, 0.03%)</title><rect x="172.5" y="805" width="0.3" height="15.0" fill="rgb(224,24,38)" rx="2" ry="2" />
<text  x="175.47" y="815.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (20 samples, 0.51%)</title><rect x="868.9" y="661" width="6.0" height="15.0" fill="rgb(226,204,35)" rx="2" ry="2" />
<text  x="871.94" y="671.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (2 samples, 0.05%)</title><rect x="46.7" y="677" width="0.6" height="15.0" fill="rgb(224,38,13)" rx="2" ry="2" />
<text  x="49.74" y="687.5" ></text>
</g>
<g >
<title>NaClRefCountRef (46 samples, 1.16%)</title><rect x="943.3" y="741" width="13.7" height="15.0" fill="rgb(254,213,53)" rx="2" ry="2" />
<text  x="946.31" y="751.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.03%)</title><rect x="1085.2" y="789" width="0.3" height="15.0" fill="rgb(210,137,22)" rx="2" ry="2" />
<text  x="1088.17" y="799.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.03%)</title><rect x="10.3" y="741" width="0.3" height="15.0" fill="rgb(247,51,30)" rx="2" ry="2" />
<text  x="13.30" y="751.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.05%)</title><rect x="409.3" y="565" width="0.6" height="15.0" fill="rgb(244,148,53)" rx="2" ry="2" />
<text  x="412.31" y="575.5" ></text>
</g>
<g >
<title>NaClLog (3 samples, 0.08%)</title><rect x="50.6" y="837" width="0.9" height="15.0" fill="rgb(228,109,41)" rx="2" ry="2" />
<text  x="53.62" y="847.5" ></text>
</g>
<g >
<title>try_charge (8 samples, 0.20%)</title><rect x="1038.0" y="709" width="2.4" height="15.0" fill="rgb(220,41,19)" rx="2" ry="2" />
<text  x="1040.98" y="719.5" ></text>
</g>
<g >
<title>generic_write_end (1 samples, 0.03%)</title><rect x="173.1" y="389" width="0.3" height="15.0" fill="rgb(220,176,4)" rx="2" ry="2" />
<text  x="176.07" y="399.5" ></text>
</g>
<g >
<title>unmap_kernel_range_noflush (1 samples, 0.03%)</title><rect x="1117.1" y="757" width="0.3" height="15.0" fill="rgb(239,130,19)" rx="2" ry="2" />
<text  x="1120.13" y="767.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="1046.9" y="629" width="0.6" height="15.0" fill="rgb(220,139,46)" rx="2" ry="2" />
<text  x="1049.94" y="639.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3 samples, 0.08%)</title><rect x="756.6" y="613" width="0.9" height="15.0" fill="rgb(236,108,7)" rx="2" ry="2" />
<text  x="759.65" y="623.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (1 samples, 0.03%)</title><rect x="1087.0" y="549" width="0.3" height="15.0" fill="rgb(248,228,17)" rx="2" ry="2" />
<text  x="1089.96" y="559.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (100 samples, 2.53%)</title><rect x="1013.2" y="837" width="29.9" height="15.0" fill="rgb(253,196,18)" rx="2" ry="2" />
<text  x="1016.19" y="847.5" >as..</text>
</g>
<g >
<title>process_vm_writev (2 samples, 0.05%)</title><rect x="1046.9" y="805" width="0.6" height="15.0" fill="rgb(234,55,12)" rx="2" ry="2" />
<text  x="1049.94" y="815.5" ></text>
</g>
<g >
<title>alloc_pages_current (3 samples, 0.08%)</title><rect x="40.8" y="437" width="0.9" height="15.0" fill="rgb(218,70,53)" rx="2" ry="2" />
<text  x="43.76" y="447.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.03%)</title><rect x="10.0" y="789" width="0.3" height="15.0" fill="rgb(226,82,46)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.03%)</title><rect x="36.3" y="709" width="0.3" height="15.0" fill="rgb(236,91,37)" rx="2" ry="2" />
<text  x="39.28" y="719.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.03%)</title><rect x="47.9" y="837" width="0.3" height="15.0" fill="rgb(252,16,42)" rx="2" ry="2" />
<text  x="50.93" y="847.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (30 samples, 0.76%)</title><rect x="911.4" y="741" width="8.9" height="15.0" fill="rgb(254,51,22)" rx="2" ry="2" />
<text  x="914.35" y="751.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.03%)</title><rect x="174.0" y="357" width="0.3" height="15.0" fill="rgb(206,110,2)" rx="2" ry="2" />
<text  x="176.96" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (40 samples, 1.01%)</title><rect x="1098.9" y="837" width="12.0" height="15.0" fill="rgb(214,11,13)" rx="2" ry="2" />
<text  x="1101.91" y="847.5" ></text>
</g>
<g >
<title>generic_write_check_limits (1 samples, 0.03%)</title><rect x="46.7" y="645" width="0.3" height="15.0" fill="rgb(232,125,34)" rx="2" ry="2" />
<text  x="49.74" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="1046.9" y="773" width="0.6" height="15.0" fill="rgb(239,198,42)" rx="2" ry="2" />
<text  x="1049.94" y="783.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (2 samples, 0.05%)</title><rect x="1046.9" y="709" width="0.6" height="15.0" fill="rgb(254,66,32)" rx="2" ry="2" />
<text  x="1049.94" y="719.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (4 samples, 0.10%)</title><rect x="1118.6" y="677" width="1.2" height="15.0" fill="rgb(214,107,19)" rx="2" ry="2" />
<text  x="1121.62" y="687.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.03%)</title><rect x="942.7" y="741" width="0.3" height="15.0" fill="rgb(246,65,10)" rx="2" ry="2" />
<text  x="945.71" y="751.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.03%)</title><rect x="174.6" y="453" width="0.3" height="15.0" fill="rgb(232,206,44)" rx="2" ry="2" />
<text  x="177.56" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_write (2 samples, 0.05%)</title><rect x="46.7" y="821" width="0.6" height="15.0" fill="rgb(254,132,42)" rx="2" ry="2" />
<text  x="49.74" y="831.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="1087.0" y="213" width="0.3" height="15.0" fill="rgb(222,154,30)" rx="2" ry="2" />
<text  x="1089.96" y="223.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (39 samples, 0.99%)</title><rect x="1099.2" y="805" width="11.7" height="15.0" fill="rgb(208,153,40)" rx="2" ry="2" />
<text  x="1102.21" y="815.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.15%)</title><rect x="585.2" y="789" width="1.8" height="15.0" fill="rgb(236,39,36)" rx="2" ry="2" />
<text  x="588.22" y="799.5" ></text>
</g>
<g >
<title>NaClLog (2 samples, 0.05%)</title><rect x="956.4" y="725" width="0.6" height="15.0" fill="rgb(246,19,13)" rx="2" ry="2" />
<text  x="959.45" y="735.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.03%)</title><rect x="36.0" y="581" width="0.3" height="15.0" fill="rgb(239,61,40)" rx="2" ry="2" />
<text  x="38.98" y="591.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="1116.2" y="805" width="0.3" height="15.0" fill="rgb(210,53,22)" rx="2" ry="2" />
<text  x="1119.23" y="815.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (2 samples, 0.05%)</title><rect x="1182.8" y="677" width="0.6" height="15.0" fill="rgb(242,160,1)" rx="2" ry="2" />
<text  x="1185.83" y="687.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="1047.2" y="453" width="0.3" height="15.0" fill="rgb(227,192,36)" rx="2" ry="2" />
<text  x="1050.24" y="463.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.03%)</title><rect x="1110.6" y="533" width="0.3" height="15.0" fill="rgb(216,45,29)" rx="2" ry="2" />
<text  x="1113.56" y="543.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.03%)</title><rect x="102.6" y="837" width="0.3" height="15.0" fill="rgb(215,174,28)" rx="2" ry="2" />
<text  x="105.58" y="847.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="1118.3" y="661" width="0.3" height="15.0" fill="rgb(235,152,46)" rx="2" ry="2" />
<text  x="1121.32" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.35%)</title><rect x="843.0" y="629" width="4.1" height="15.0" fill="rgb(205,68,2)" rx="2" ry="2" />
<text  x="845.96" y="639.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 1.21%)</title><rect x="667.6" y="677" width="14.4" height="15.0" fill="rgb(245,68,8)" rx="2" ry="2" />
<text  x="670.65" y="687.5" ></text>
</g>
<g >
<title>clockevents_program_event (2 samples, 0.05%)</title><rect x="1149.4" y="581" width="0.6" height="15.0" fill="rgb(231,202,30)" rx="2" ry="2" />
<text  x="1152.38" y="591.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="879.7" y="565" width="0.6" height="15.0" fill="rgb(213,145,32)" rx="2" ry="2" />
<text  x="882.69" y="575.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.03%)</title><rect x="1087.0" y="341" width="0.3" height="15.0" fill="rgb(248,28,29)" rx="2" ry="2" />
<text  x="1089.96" y="351.5" ></text>
</g>
<g >
<title>unmap_page_range (37 samples, 0.94%)</title><rect x="1099.2" y="629" width="11.1" height="15.0" fill="rgb(228,187,46)" rx="2" ry="2" />
<text  x="1102.21" y="639.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="1108.8" y="501" width="0.3" height="15.0" fill="rgb(220,58,48)" rx="2" ry="2" />
<text  x="1111.76" y="511.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.03%)</title><rect x="44.3" y="389" width="0.3" height="15.0" fill="rgb(242,199,22)" rx="2" ry="2" />
<text  x="47.35" y="399.5" ></text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (1 samples, 0.03%)</title><rect x="161.1" y="741" width="0.3" height="15.0" fill="rgb(242,177,45)" rx="2" ry="2" />
<text  x="164.12" y="751.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.05%)</title><rect x="1033.8" y="645" width="0.6" height="15.0" fill="rgb(235,213,2)" rx="2" ry="2" />
<text  x="1036.80" y="655.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (11 samples, 0.28%)</title><rect x="1105.8" y="517" width="3.3" height="15.0" fill="rgb(247,197,17)" rx="2" ry="2" />
<text  x="1108.78" y="527.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (2 samples, 0.05%)</title><rect x="962.1" y="789" width="0.6" height="15.0" fill="rgb(219,52,45)" rx="2" ry="2" />
<text  x="965.12" y="799.5" ></text>
</g>
<g >
<title>std::fs::remove_file (2 samples, 0.05%)</title><rect x="173.4" y="677" width="0.6" height="15.0" fill="rgb(236,10,6)" rx="2" ry="2" />
<text  x="176.37" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.03%)</title><rect x="103.8" y="789" width="0.3" height="15.0" fill="rgb(226,175,24)" rx="2" ry="2" />
<text  x="106.78" y="799.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.03%)</title><rect x="342.1" y="517" width="0.3" height="15.0" fill="rgb(226,59,8)" rx="2" ry="2" />
<text  x="345.11" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="342.1" y="581" width="0.3" height="15.0" fill="rgb(247,172,36)" rx="2" ry="2" />
<text  x="345.11" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (11 samples, 0.28%)</title><rect x="615.7" y="693" width="3.3" height="15.0" fill="rgb(252,41,7)" rx="2" ry="2" />
<text  x="618.68" y="703.5" ></text>
</g>
<g >
<title>dispatcher (1,299 samples, 32.88%)</title><rect x="175.2" y="741" width="387.9" height="15.0" fill="rgb(252,108,24)" rx="2" ry="2" />
<text  x="178.16" y="751.5" >dispatcher</text>
</g>
<g >
<title>parse_string_to_word_list (1 samples, 0.03%)</title><rect x="10.0" y="693" width="0.3" height="15.0" fill="rgb(234,118,9)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>check_cpu_stall (1 samples, 0.03%)</title><rect x="1147.0" y="501" width="0.3" height="15.0" fill="rgb(225,103,42)" rx="2" ry="2" />
<text  x="1149.99" y="511.5" ></text>
</g>
<g >
<title>ovl_remove_and_whiteout (1 samples, 0.03%)</title><rect x="173.7" y="517" width="0.3" height="15.0" fill="rgb(252,167,6)" rx="2" ry="2" />
<text  x="176.66" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::load_fs (1 samples, 0.03%)</title><rect x="1087.0" y="773" width="0.3" height="15.0" fill="rgb(254,4,48)" rx="2" ry="2" />
<text  x="1089.96" y="783.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.03%)</title><rect x="174.0" y="149" width="0.3" height="15.0" fill="rgb(243,109,53)" rx="2" ry="2" />
<text  x="176.96" y="159.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (4 samples, 0.10%)</title><rect x="35.1" y="709" width="1.2" height="15.0" fill="rgb(252,126,24)" rx="2" ry="2" />
<text  x="38.09" y="719.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.03%)</title><rect x="1047.8" y="837" width="0.3" height="15.0" fill="rgb(238,192,38)" rx="2" ry="2" />
<text  x="1050.84" y="847.5" ></text>
</g>
<g >
<title>ovl_inode_real (1 samples, 0.03%)</title><rect x="159.9" y="245" width="0.3" height="15.0" fill="rgb(245,81,28)" rx="2" ry="2" />
<text  x="162.93" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="36.6" y="725" width="0.3" height="15.0" fill="rgb(207,223,4)" rx="2" ry="2" />
<text  x="39.58" y="735.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 0.18%)</title><rect x="881.8" y="677" width="2.1" height="15.0" fill="rgb(215,147,24)" rx="2" ry="2" />
<text  x="884.78" y="687.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.03%)</title><rect x="910.2" y="741" width="0.3" height="15.0" fill="rgb(206,74,24)" rx="2" ry="2" />
<text  x="913.16" y="751.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="42.6" y="405" width="0.3" height="15.0" fill="rgb(235,2,35)" rx="2" ry="2" />
<text  x="45.55" y="415.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.03%)</title><rect x="1110.6" y="549" width="0.3" height="15.0" fill="rgb(213,36,3)" rx="2" ry="2" />
<text  x="1113.56" y="559.5" ></text>
</g>
<g >
<title>__libc_close (1 samples, 0.03%)</title><rect x="36.6" y="757" width="0.3" height="15.0" fill="rgb(211,44,5)" rx="2" ry="2" />
<text  x="39.58" y="767.5" ></text>
</g>
<g >
<title>irq_exit_rcu (4 samples, 0.10%)</title><rect x="1118.6" y="709" width="1.2" height="15.0" fill="rgb(247,210,11)" rx="2" ry="2" />
<text  x="1121.62" y="719.5" ></text>
</g>
<g >
<title>NaClGetDescMu (61 samples, 1.54%)</title><rect x="939.4" y="773" width="18.2" height="15.0" fill="rgb(253,70,9)" rx="2" ry="2" />
<text  x="942.43" y="783.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (2 samples, 0.05%)</title><rect x="848.0" y="629" width="0.6" height="15.0" fill="rgb(221,229,47)" rx="2" ry="2" />
<text  x="851.04" y="639.5" ></text>
</g>
<g >
<title>ovl_do_remove (1 samples, 0.03%)</title><rect x="173.7" y="533" width="0.3" height="15.0" fill="rgb(248,135,28)" rx="2" ry="2" />
<text  x="176.66" y="543.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.03%)</title><rect x="172.8" y="405" width="0.3" height="15.0" fill="rgb(241,209,31)" rx="2" ry="2" />
<text  x="175.77" y="415.5" ></text>
</g>
<g >
<title>all (3,951 samples, 100%)</title><rect x="10.0" y="885" width="1180.0" height="15.0" fill="rgb(230,216,24)" rx="2" ry="2" />
<text  x="13.00" y="895.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (81 samples, 2.05%)</title><rect x="749.8" y="677" width="24.2" height="15.0" fill="rgb(224,86,0)" rx="2" ry="2" />
<text  x="752.78" y="687.5" >r..</text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (5 samples, 0.13%)</title><rect x="129.5" y="821" width="1.5" height="15.0" fill="rgb(233,87,17)" rx="2" ry="2" />
<text  x="132.46" y="831.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (36 samples, 0.91%)</title><rect x="656.9" y="661" width="10.7" height="15.0" fill="rgb(217,224,43)" rx="2" ry="2" />
<text  x="659.89" y="671.5" ></text>
</g>
<g >
<title>__run_hrtimer (16 samples, 0.40%)</title><rect x="1144.0" y="581" width="4.8" height="15.0" fill="rgb(233,121,5)" rx="2" ry="2" />
<text  x="1147.01" y="591.5" ></text>
</g>
<g >
<title>ovl_create (1 samples, 0.03%)</title><rect x="159.9" y="357" width="0.3" height="15.0" fill="rgb(232,5,6)" rx="2" ry="2" />
<text  x="162.93" y="367.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (14 samples, 0.35%)</title><rect x="203.5" y="645" width="4.2" height="15.0" fill="rgb(217,182,47)" rx="2" ry="2" />
<text  x="206.53" y="655.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.03%)</title><rect x="10.0" y="645" width="0.3" height="15.0" fill="rgb(234,81,52)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.03%)</title><rect x="1087.0" y="677" width="0.3" height="15.0" fill="rgb(243,211,38)" rx="2" ry="2" />
<text  x="1089.96" y="687.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.03%)</title><rect x="1184.3" y="613" width="0.3" height="15.0" fill="rgb(214,52,39)" rx="2" ry="2" />
<text  x="1187.33" y="623.5" ></text>
</g>
<g >
<title>page_remove_file_rmap (1 samples, 0.03%)</title><rect x="1103.4" y="581" width="0.3" height="15.0" fill="rgb(214,105,12)" rx="2" ry="2" />
<text  x="1106.39" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3 samples, 0.08%)</title><rect x="1115.0" y="821" width="0.9" height="15.0" fill="rgb(244,173,18)" rx="2" ry="2" />
<text  x="1118.04" y="831.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.03%)</title><rect x="1184.3" y="661" width="0.3" height="15.0" fill="rgb(241,67,50)" rx="2" ry="2" />
<text  x="1187.33" y="671.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.03%)</title><rect x="1179.8" y="677" width="0.3" height="15.0" fill="rgb(252,64,30)" rx="2" ry="2" />
<text  x="1182.85" y="687.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.05%)</title><rect x="1042.5" y="789" width="0.6" height="15.0" fill="rgb(247,92,53)" rx="2" ry="2" />
<text  x="1045.46" y="799.5" ></text>
</g>
<g >
<title>dispatcher (6 samples, 0.15%)</title><rect x="172.8" y="773" width="1.8" height="15.0" fill="rgb(240,181,6)" rx="2" ry="2" />
<text  x="175.77" y="783.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (69 samples, 1.75%)</title><rect x="566.4" y="805" width="20.6" height="15.0" fill="rgb(232,180,42)" rx="2" ry="2" />
<text  x="569.40" y="815.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (1 samples, 0.03%)</title><rect x="172.5" y="597" width="0.3" height="15.0" fill="rgb(244,202,19)" rx="2" ry="2" />
<text  x="175.47" y="607.5" ></text>
</g>
<g >
<title>lind_pread (1 samples, 0.03%)</title><rect x="174.6" y="677" width="0.3" height="15.0" fill="rgb(216,84,11)" rx="2" ry="2" />
<text  x="177.56" y="687.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 1.62%)</title><rect x="15.7" y="549" width="19.1" height="15.0" fill="rgb(232,214,4)" rx="2" ry="2" />
<text  x="18.67" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="161.4" y="693" width="0.3" height="15.0" fill="rgb(225,85,33)" rx="2" ry="2" />
<text  x="164.42" y="703.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (2 samples, 0.05%)</title><rect x="1046.9" y="821" width="0.6" height="15.0" fill="rgb(230,2,9)" rx="2" ry="2" />
<text  x="1049.94" y="831.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.03%)</title><rect x="1186.7" y="629" width="0.3" height="15.0" fill="rgb(221,104,40)" rx="2" ry="2" />
<text  x="1189.71" y="639.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.03%)</title><rect x="1087.0" y="165" width="0.3" height="15.0" fill="rgb(237,82,24)" rx="2" ry="2" />
<text  x="1089.96" y="175.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.03%)</title><rect x="103.8" y="821" width="0.3" height="15.0" fill="rgb(211,173,4)" rx="2" ry="2" />
<text  x="106.78" y="831.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="102.9" y="805" width="0.9" height="15.0" fill="rgb(223,33,52)" rx="2" ry="2" />
<text  x="105.88" y="815.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c (1 samples, 0.03%)</title><rect x="159.9" y="549" width="0.3" height="15.0" fill="rgb(235,67,19)" rx="2" ry="2" />
<text  x="162.93" y="559.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.23%)</title><rect x="834.6" y="565" width="2.7" height="15.0" fill="rgb(209,114,43)" rx="2" ry="2" />
<text  x="837.60" y="575.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (20 samples, 0.51%)</title><rect x="402.4" y="597" width="6.0" height="15.0" fill="rgb(209,176,36)" rx="2" ry="2" />
<text  x="405.44" y="607.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.05%)</title><rect x="1036.8" y="709" width="0.6" height="15.0" fill="rgb(225,142,53)" rx="2" ry="2" />
<text  x="1039.79" y="719.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.03%)</title><rect x="173.4" y="485" width="0.3" height="15.0" fill="rgb(232,156,29)" rx="2" ry="2" />
<text  x="176.37" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (25 samples, 0.63%)</title><rect x="884.2" y="677" width="7.4" height="15.0" fill="rgb(232,176,44)" rx="2" ry="2" />
<text  x="887.17" y="687.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.03%)</title><rect x="1087.0" y="421" width="0.3" height="15.0" fill="rgb(217,81,30)" rx="2" ry="2" />
<text  x="1089.96" y="431.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (1 samples, 0.03%)</title><rect x="1184.0" y="677" width="0.3" height="15.0" fill="rgb(225,218,37)" rx="2" ry="2" />
<text  x="1187.03" y="687.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (2 samples, 0.05%)</title><rect x="174.0" y="485" width="0.6" height="15.0" fill="rgb(208,188,27)" rx="2" ry="2" />
<text  x="176.96" y="495.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.03%)</title><rect x="174.6" y="661" width="0.3" height="15.0" fill="rgb(241,23,51)" rx="2" ry="2" />
<text  x="177.56" y="671.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.03%)</title><rect x="1087.0" y="309" width="0.3" height="15.0" fill="rgb(244,190,16)" rx="2" ry="2" />
<text  x="1089.96" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.03%)</title><rect x="342.1" y="533" width="0.3" height="15.0" fill="rgb(216,55,26)" rx="2" ry="2" />
<text  x="345.11" y="543.5" ></text>
</g>
<g >
<title>&lt;std::lazy::SyncLazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="637.8" y="693" width="0.3" height="15.0" fill="rgb(225,112,53)" rx="2" ry="2" />
<text  x="640.78" y="703.5" ></text>
</g>
<g >
<title>NaClXCondVarTimedWaitRelative (1 samples, 0.03%)</title><rect x="564.0" y="789" width="0.3" height="15.0" fill="rgb(250,22,4)" rx="2" ry="2" />
<text  x="567.01" y="799.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (70 samples, 1.77%)</title><rect x="73.3" y="837" width="20.9" height="15.0" fill="rgb(209,32,31)" rx="2" ry="2" />
<text  x="76.32" y="847.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (296 samples, 7.49%)</title><rect x="459.5" y="597" width="88.4" height="15.0" fill="rgb(226,68,42)" rx="2" ry="2" />
<text  x="462.48" y="607.5" >__memmove_..</text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.03%)</title><rect x="1178.1" y="661" width="0.3" height="15.0" fill="rgb(230,11,50)" rx="2" ry="2" />
<text  x="1181.05" y="671.5" ></text>
</g>
<g >
<title>NaClGetDesc (117 samples, 2.96%)</title><rect x="922.7" y="789" width="34.9" height="15.0" fill="rgb(240,135,38)" rx="2" ry="2" />
<text  x="925.70" y="799.5" >Na..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.05%)</title><rect x="686.2" y="645" width="0.6" height="15.0" fill="rgb(231,147,46)" rx="2" ry="2" />
<text  x="689.16" y="655.5" ></text>
</g>
<g >
<title>NaClLog (12 samples, 0.30%)</title><rect x="958.5" y="789" width="3.6" height="15.0" fill="rgb(251,117,20)" rx="2" ry="2" />
<text  x="961.54" y="799.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.05%)</title><rect x="409.3" y="549" width="0.6" height="15.0" fill="rgb(226,110,47)" rx="2" ry="2" />
<text  x="412.31" y="559.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (1 samples, 0.03%)</title><rect x="1055.6" y="821" width="0.3" height="15.0" fill="rgb(205,82,7)" rx="2" ry="2" />
<text  x="1058.60" y="831.5" ></text>
</g>
<g >
<title>do_iter_write (2 samples, 0.05%)</title><rect x="172.8" y="485" width="0.6" height="15.0" fill="rgb(216,150,1)" rx="2" ry="2" />
<text  x="175.77" y="495.5" ></text>
</g>
<g >
<title>NaClXCondVarBroadcast (1 samples, 0.03%)</title><rect x="563.7" y="789" width="0.3" height="15.0" fill="rgb(221,101,32)" rx="2" ry="2" />
<text  x="566.71" y="799.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (2 samples, 0.05%)</title><rect x="848.0" y="661" width="0.6" height="15.0" fill="rgb(241,119,8)" rx="2" ry="2" />
<text  x="851.04" y="671.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="174.0" y="517" width="0.6" height="15.0" fill="rgb(215,155,53)" rx="2" ry="2" />
<text  x="176.96" y="527.5" ></text>
</g>
<g >
<title>vm_normal_page (1 samples, 0.03%)</title><rect x="1110.0" y="597" width="0.3" height="15.0" fill="rgb(215,205,23)" rx="2" ry="2" />
<text  x="1112.96" y="607.5" ></text>
</g>
<g >
<title>ovl_write_iter (2 samples, 0.05%)</title><rect x="46.7" y="757" width="0.6" height="15.0" fill="rgb(220,48,16)" rx="2" ry="2" />
<text  x="49.74" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (36 samples, 0.91%)</title><rect x="656.9" y="645" width="10.7" height="15.0" fill="rgb(244,104,51)" rx="2" ry="2" />
<text  x="659.89" y="655.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30 samples, 0.76%)</title><rect x="874.9" y="693" width="9.0" height="15.0" fill="rgb(232,205,49)" rx="2" ry="2" />
<text  x="877.92" y="703.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.08%)</title><rect x="843.6" y="597" width="0.9" height="15.0" fill="rgb(216,183,45)" rx="2" ry="2" />
<text  x="846.56" y="607.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (20 samples, 0.51%)</title><rect x="868.9" y="677" width="6.0" height="15.0" fill="rgb(250,150,10)" rx="2" ry="2" />
<text  x="871.94" y="687.5" ></text>
</g>
<g >
<title>call_timer_fn (2 samples, 0.05%)</title><rect x="1157.1" y="549" width="0.6" height="15.0" fill="rgb(250,114,39)" rx="2" ry="2" />
<text  x="1160.15" y="559.5" ></text>
</g>
<g >
<title>dispatcher (3 samples, 0.08%)</title><rect x="72.4" y="837" width="0.9" height="15.0" fill="rgb(218,79,39)" rx="2" ry="2" />
<text  x="75.42" y="847.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (1,301 samples, 32.93%)</title><rect x="175.2" y="821" width="388.5" height="15.0" fill="rgb(222,208,49)" rx="2" ry="2" />
<text  x="178.16" y="831.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.03%)</title><rect x="1118.3" y="565" width="0.3" height="15.0" fill="rgb(208,114,13)" rx="2" ry="2" />
<text  x="1121.32" y="575.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.03%)</title><rect x="36.6" y="677" width="0.3" height="15.0" fill="rgb(233,187,45)" rx="2" ry="2" />
<text  x="39.58" y="687.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (5 samples, 0.13%)</title><rect x="772.5" y="645" width="1.5" height="15.0" fill="rgb(206,177,15)" rx="2" ry="2" />
<text  x="775.48" y="655.5" ></text>
</g>
<g >
<title>serde_json::de::from_str (1 samples, 0.03%)</title><rect x="1087.0" y="741" width="0.3" height="15.0" fill="rgb(215,104,38)" rx="2" ry="2" />
<text  x="1089.96" y="751.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.03%)</title><rect x="174.0" y="165" width="0.3" height="15.0" fill="rgb(241,132,32)" rx="2" ry="2" />
<text  x="176.96" y="175.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (19 samples, 0.48%)</title><rect x="1152.1" y="597" width="5.6" height="15.0" fill="rgb(250,194,0)" rx="2" ry="2" />
<text  x="1155.07" y="607.5" ></text>
</g>
<g >
<title>NaClXMutexLock (22 samples, 0.56%)</title><rect x="151.3" y="805" width="6.5" height="15.0" fill="rgb(252,90,49)" rx="2" ry="2" />
<text  x="154.27" y="815.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.05%)</title><rect x="1115.3" y="757" width="0.6" height="15.0" fill="rgb(232,97,31)" rx="2" ry="2" />
<text  x="1118.34" y="767.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.03%)</title><rect x="1140.1" y="741" width="0.3" height="15.0" fill="rgb(230,105,0)" rx="2" ry="2" />
<text  x="1143.12" y="751.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.03%)</title><rect x="1086.7" y="485" width="0.3" height="15.0" fill="rgb(223,223,12)" rx="2" ry="2" />
<text  x="1089.66" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.10%)</title><rect x="876.7" y="613" width="1.2" height="15.0" fill="rgb(221,2,43)" rx="2" ry="2" />
<text  x="879.71" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (3 samples, 0.08%)</title><rect x="102.9" y="757" width="0.9" height="15.0" fill="rgb(215,134,28)" rx="2" ry="2" />
<text  x="105.88" y="767.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (12 samples, 0.30%)</title><rect x="878.2" y="661" width="3.6" height="15.0" fill="rgb(238,40,42)" rx="2" ry="2" />
<text  x="881.20" y="671.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.03%)</title><rect x="1086.7" y="389" width="0.3" height="15.0" fill="rgb(222,144,37)" rx="2" ry="2" />
<text  x="1089.66" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (37 samples, 0.94%)</title><rect x="670.9" y="613" width="11.1" height="15.0" fill="rgb(206,4,34)" rx="2" ry="2" />
<text  x="673.93" y="623.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (2 samples, 0.05%)</title><rect x="686.2" y="661" width="0.6" height="15.0" fill="rgb(211,19,13)" rx="2" ry="2" />
<text  x="689.16" y="671.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.03%)</title><rect x="1188.8" y="645" width="0.3" height="15.0" fill="rgb(249,82,9)" rx="2" ry="2" />
<text  x="1191.81" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (1 samples, 0.03%)</title><rect x="174.0" y="389" width="0.3" height="15.0" fill="rgb(210,142,41)" rx="2" ry="2" />
<text  x="176.96" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="1118.3" y="677" width="0.3" height="15.0" fill="rgb(241,50,28)" rx="2" ry="2" />
<text  x="1121.32" y="687.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.03%)</title><rect x="1118.3" y="597" width="0.3" height="15.0" fill="rgb(216,99,48)" rx="2" ry="2" />
<text  x="1121.32" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (45 samples, 1.14%)</title><rect x="883.9" y="693" width="13.4" height="15.0" fill="rgb(229,76,4)" rx="2" ry="2" />
<text  x="886.87" y="703.5" ></text>
</g>
<g >
<title>do_iter_write (33 samples, 0.84%)</title><rect x="36.9" y="565" width="9.8" height="15.0" fill="rgb(224,87,52)" rx="2" ry="2" />
<text  x="39.88" y="575.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.03%)</title><rect x="174.0" y="101" width="0.3" height="15.0" fill="rgb(250,33,7)" rx="2" ry="2" />
<text  x="176.96" y="111.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (16 samples, 0.40%)</title><rect x="638.1" y="693" width="4.8" height="15.0" fill="rgb(244,0,51)" rx="2" ry="2" />
<text  x="641.08" y="703.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (33 samples, 0.84%)</title><rect x="36.9" y="533" width="9.8" height="15.0" fill="rgb(205,107,12)" rx="2" ry="2" />
<text  x="39.88" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="159.9" y="485" width="0.3" height="15.0" fill="rgb(235,110,54)" rx="2" ry="2" />
<text  x="162.93" y="495.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (2 samples, 0.05%)</title><rect x="1048.4" y="837" width="0.6" height="15.0" fill="rgb(231,229,17)" rx="2" ry="2" />
<text  x="1051.44" y="847.5" ></text>
</g>
<g >
<title>update_process_times (8 samples, 0.20%)</title><rect x="1146.1" y="533" width="2.4" height="15.0" fill="rgb(230,108,19)" rx="2" ry="2" />
<text  x="1149.10" y="543.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.03%)</title><rect x="1086.7" y="325" width="0.3" height="15.0" fill="rgb(223,177,38)" rx="2" ry="2" />
<text  x="1089.66" y="335.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="1085.2" y="805" width="0.3" height="15.0" fill="rgb(218,17,16)" rx="2" ry="2" />
<text  x="1088.17" y="815.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (64 samples, 1.62%)</title><rect x="848.6" y="677" width="19.1" height="15.0" fill="rgb(249,139,19)" rx="2" ry="2" />
<text  x="851.63" y="687.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (2 samples, 0.05%)</title><rect x="1048.4" y="805" width="0.6" height="15.0" fill="rgb(253,202,7)" rx="2" ry="2" />
<text  x="1051.44" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1047.5" y="789" width="0.3" height="15.0" fill="rgb(222,62,32)" rx="2" ry="2" />
<text  x="1050.54" y="799.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="171.9" y="789" width="0.6" height="15.0" fill="rgb(242,169,42)" rx="2" ry="2" />
<text  x="174.87" y="799.5" ></text>
</g>
<g >
<title>NaClValidateImage (2 samples, 0.05%)</title><rect x="1048.4" y="773" width="0.6" height="15.0" fill="rgb(239,50,36)" rx="2" ry="2" />
<text  x="1051.44" y="783.5" ></text>
</g>
<g >
<title>ksys_write (2 samples, 0.05%)</title><rect x="172.8" y="565" width="0.6" height="15.0" fill="rgb(228,185,39)" rx="2" ry="2" />
<text  x="175.77" y="575.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (1 samples, 0.03%)</title><rect x="174.3" y="293" width="0.3" height="15.0" fill="rgb(232,45,36)" rx="2" ry="2" />
<text  x="177.26" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_exit (1 samples, 0.03%)</title><rect x="1086.4" y="789" width="0.3" height="15.0" fill="rgb(244,204,29)" rx="2" ry="2" />
<text  x="1089.37" y="799.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (23 samples, 0.58%)</title><rect x="874.9" y="677" width="6.9" height="15.0" fill="rgb(222,2,49)" rx="2" ry="2" />
<text  x="877.92" y="687.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (26 samples, 0.66%)</title><rect x="902.7" y="757" width="7.8" height="15.0" fill="rgb(240,74,51)" rx="2" ry="2" />
<text  x="905.69" y="767.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (38 samples, 0.96%)</title><rect x="759.9" y="629" width="11.4" height="15.0" fill="rgb(217,205,30)" rx="2" ry="2" />
<text  x="762.93" y="639.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.03%)</title><rect x="174.0" y="373" width="0.3" height="15.0" fill="rgb(237,43,38)" rx="2" ry="2" />
<text  x="176.96" y="383.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.03%)</title><rect x="1115.6" y="741" width="0.3" height="15.0" fill="rgb(252,180,5)" rx="2" ry="2" />
<text  x="1118.63" y="751.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.03%)</title><rect x="1047.2" y="421" width="0.3" height="15.0" fill="rgb(219,136,15)" rx="2" ry="2" />
<text  x="1050.24" y="431.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.03%)</title><rect x="1086.4" y="773" width="0.3" height="15.0" fill="rgb(237,190,35)" rx="2" ry="2" />
<text  x="1089.37" y="783.5" ></text>
</g>
<g >
<title>posix_acl_create (1 samples, 0.03%)</title><rect x="159.9" y="293" width="0.3" height="15.0" fill="rgb(226,19,38)" rx="2" ry="2" />
<text  x="162.93" y="303.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (2 samples, 0.05%)</title><rect x="46.7" y="709" width="0.6" height="15.0" fill="rgb(244,121,5)" rx="2" ry="2" />
<text  x="49.74" y="719.5" ></text>
</g>
<g >
<title>lru_add_drain (1 samples, 0.03%)</title><rect x="161.4" y="549" width="0.3" height="15.0" fill="rgb(210,155,41)" rx="2" ry="2" />
<text  x="164.42" y="559.5" ></text>
</g>
<g >
<title>ext4_find_entry (1 samples, 0.03%)</title><rect x="173.7" y="437" width="0.3" height="15.0" fill="rgb(225,224,49)" rx="2" ry="2" />
<text  x="176.66" y="447.5" ></text>
</g>
<g >
<title>ext4_release_io_end (1 samples, 0.03%)</title><rect x="1116.5" y="757" width="0.3" height="15.0" fill="rgb(252,208,40)" rx="2" ry="2" />
<text  x="1119.53" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="46.7" y="837" width="0.6" height="15.0" fill="rgb(220,72,44)" rx="2" ry="2" />
<text  x="49.74" y="847.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (1 samples, 0.03%)</title><rect x="174.6" y="309" width="0.3" height="15.0" fill="rgb(217,129,41)" rx="2" ry="2" />
<text  x="177.56" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="174.0" y="53" width="0.3" height="15.0" fill="rgb(232,15,38)" rx="2" ry="2" />
<text  x="176.96" y="63.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::deserialize (1 samples, 0.03%)</title><rect x="1087.0" y="405" width="0.3" height="15.0" fill="rgb(232,133,38)" rx="2" ry="2" />
<text  x="1089.96" y="415.5" ></text>
</g>
<g >
<title>vfs_rename (1 samples, 0.03%)</title><rect x="173.7" y="485" width="0.3" height="15.0" fill="rgb(212,98,27)" rx="2" ry="2" />
<text  x="176.66" y="495.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.03%)</title><rect x="1154.5" y="485" width="0.3" height="15.0" fill="rgb(236,159,15)" rx="2" ry="2" />
<text  x="1157.46" y="495.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.03%)</title><rect x="10.0" y="677" width="0.3" height="15.0" fill="rgb(247,148,37)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.03%)</title><rect x="1186.7" y="581" width="0.3" height="15.0" fill="rgb(208,92,27)" rx="2" ry="2" />
<text  x="1189.71" y="591.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (41 samples, 1.04%)</title><rect x="160.2" y="805" width="12.3" height="15.0" fill="rgb(231,157,10)" rx="2" ry="2" />
<text  x="163.23" y="815.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (9 samples, 0.23%)</title><rect x="844.5" y="613" width="2.6" height="15.0" fill="rgb(246,119,3)" rx="2" ry="2" />
<text  x="847.45" y="623.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.08%)</title><rect x="841.8" y="517" width="0.9" height="15.0" fill="rgb(249,165,52)" rx="2" ry="2" />
<text  x="844.76" y="527.5" ></text>
</g>
<g >
<title>find_busiest_group (6 samples, 0.15%)</title><rect x="1153.0" y="533" width="1.8" height="15.0" fill="rgb(239,45,25)" rx="2" ry="2" />
<text  x="1155.97" y="543.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.03%)</title><rect x="161.1" y="597" width="0.3" height="15.0" fill="rgb(245,132,17)" rx="2" ry="2" />
<text  x="164.12" y="607.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="161.1" y="693" width="0.3" height="15.0" fill="rgb(215,134,46)" rx="2" ry="2" />
<text  x="164.12" y="703.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (635 samples, 16.07%)</title><rect x="366.6" y="645" width="189.6" height="15.0" fill="rgb(237,8,14)" rx="2" ry="2" />
<text  x="369.60" y="655.5" >ringbuf::consumer::Consu..</text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="1034.4" y="645" width="0.3" height="15.0" fill="rgb(222,225,15)" rx="2" ry="2" />
<text  x="1037.40" y="655.5" ></text>
</g>
<g >
<title>NaClMap (1 samples, 0.03%)</title><rect x="161.4" y="725" width="0.3" height="15.0" fill="rgb(225,215,50)" rx="2" ry="2" />
<text  x="164.42" y="735.5" ></text>
</g>
<g >
<title>NaClDescIoDescDtor (1 samples, 0.03%)</title><rect x="159.9" y="757" width="0.3" height="15.0" fill="rgb(233,156,1)" rx="2" ry="2" />
<text  x="162.93" y="767.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.03%)</title><rect x="1188.8" y="629" width="0.3" height="15.0" fill="rgb(224,67,7)" rx="2" ry="2" />
<text  x="1191.81" y="639.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (3 samples, 0.08%)</title><rect x="1188.8" y="677" width="0.9" height="15.0" fill="rgb(207,10,30)" rx="2" ry="2" />
<text  x="1191.81" y="687.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.03%)</title><rect x="1110.6" y="709" width="0.3" height="15.0" fill="rgb(230,139,39)" rx="2" ry="2" />
<text  x="1113.56" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="564.0" y="693" width="0.3" height="15.0" fill="rgb(224,167,46)" rx="2" ry="2" />
<text  x="567.01" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="172.8" y="597" width="0.6" height="15.0" fill="rgb(249,168,15)" rx="2" ry="2" />
<text  x="175.77" y="607.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (11 samples, 0.28%)</title><rect x="1079.8" y="837" width="3.3" height="15.0" fill="rgb(215,121,13)" rx="2" ry="2" />
<text  x="1082.79" y="847.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="48.2" y="837" width="1.2" height="15.0" fill="rgb(253,146,42)" rx="2" ry="2" />
<text  x="51.23" y="847.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (1 samples, 0.03%)</title><rect x="171.3" y="725" width="0.3" height="15.0" fill="rgb(216,78,22)" rx="2" ry="2" />
<text  x="174.28" y="735.5" ></text>
</g>
<g >
<title>lindrustinit (1 samples, 0.03%)</title><rect x="1087.0" y="789" width="0.3" height="15.0" fill="rgb(252,213,38)" rx="2" ry="2" />
<text  x="1089.96" y="799.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="174.6" y="373" width="0.3" height="15.0" fill="rgb(232,13,6)" rx="2" ry="2" />
<text  x="177.56" y="383.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.05%)</title><rect x="174.0" y="613" width="0.6" height="15.0" fill="rgb(206,191,28)" rx="2" ry="2" />
<text  x="176.96" y="623.5" ></text>
</g>
<g >
<title>newidle_balance (3 samples, 0.08%)</title><rect x="1186.4" y="677" width="0.9" height="15.0" fill="rgb(225,65,13)" rx="2" ry="2" />
<text  x="1189.42" y="687.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="1087.0" y="149" width="0.3" height="15.0" fill="rgb(231,166,2)" rx="2" ry="2" />
<text  x="1089.96" y="159.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (207 samples, 5.24%)</title><rect x="688.0" y="613" width="61.8" height="15.0" fill="rgb(233,198,3)" rx="2" ry="2" />
<text  x="690.95" y="623.5" >__pthr..</text>
</g>
<g >
<title>_start (3 samples, 0.08%)</title><rect x="10.0" y="853" width="0.9" height="15.0" fill="rgb(219,80,20)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>handle_mm_fault (85 samples, 2.15%)</title><rect x="1016.2" y="789" width="25.4" height="15.0" fill="rgb(219,1,4)" rx="2" ry="2" />
<text  x="1019.18" y="799.5" >h..</text>
</g>
<g >
<title>dispatcher (1 samples, 0.03%)</title><rect x="172.5" y="677" width="0.3" height="15.0" fill="rgb(228,20,12)" rx="2" ry="2" />
<text  x="175.47" y="687.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.03%)</title><rect x="172.5" y="309" width="0.3" height="15.0" fill="rgb(241,86,18)" rx="2" ry="2" />
<text  x="175.47" y="319.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.03%)</title><rect x="174.6" y="485" width="0.3" height="15.0" fill="rgb(240,90,33)" rx="2" ry="2" />
<text  x="177.56" y="495.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.03%)</title><rect x="10.0" y="773" width="0.3" height="15.0" fill="rgb(241,78,9)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (25 samples, 0.63%)</title><rect x="573.6" y="741" width="7.4" height="15.0" fill="rgb(215,188,40)" rx="2" ry="2" />
<text  x="576.57" y="751.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (811 samples, 20.53%)</title><rect x="632.7" y="725" width="242.2" height="15.0" fill="rgb(252,83,31)" rx="2" ry="2" />
<text  x="635.70" y="735.5" >rustposix::safeposix::dispatcher..</text>
</g>
<g >
<title>ext4_generic_write_checks (1 samples, 0.03%)</title><rect x="46.7" y="661" width="0.3" height="15.0" fill="rgb(231,40,29)" rx="2" ry="2" />
<text  x="49.74" y="671.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.03%)</title><rect x="36.6" y="773" width="0.3" height="15.0" fill="rgb(227,69,27)" rx="2" ry="2" />
<text  x="39.58" y="783.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (1 samples, 0.03%)</title><rect x="174.9" y="741" width="0.3" height="15.0" fill="rgb(213,144,38)" rx="2" ry="2" />
<text  x="177.86" y="751.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.03%)</title><rect x="41.7" y="421" width="0.3" height="15.0" fill="rgb(215,8,41)" rx="2" ry="2" />
<text  x="44.66" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (2 samples, 0.05%)</title><rect x="172.8" y="645" width="0.6" height="15.0" fill="rgb(223,90,35)" rx="2" ry="2" />
<text  x="175.77" y="655.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 1.62%)</title><rect x="15.7" y="581" width="19.1" height="15.0" fill="rgb(239,189,34)" rx="2" ry="2" />
<text  x="18.67" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (61 samples, 1.54%)</title><rect x="829.8" y="661" width="18.2" height="15.0" fill="rgb(219,26,36)" rx="2" ry="2" />
<text  x="832.82" y="671.5" ></text>
</g>
<g >
<title>ext4_do_flush_completed_IO.isra.0 (1 samples, 0.03%)</title><rect x="1116.5" y="773" width="0.3" height="15.0" fill="rgb(228,202,1)" rx="2" ry="2" />
<text  x="1119.53" y="783.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="879.1" y="565" width="0.6" height="15.0" fill="rgb(244,224,17)" rx="2" ry="2" />
<text  x="882.10" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1086.4" y="821" width="0.3" height="15.0" fill="rgb(242,143,40)" rx="2" ry="2" />
<text  x="1089.37" y="831.5" ></text>
</g>
<g >
<title>builtin_address_internal (1 samples, 0.03%)</title><rect x="10.3" y="725" width="0.3" height="15.0" fill="rgb(232,187,3)" rx="2" ry="2" />
<text  x="13.30" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (98 samples, 2.48%)</title><rect x="417.1" y="613" width="29.2" height="15.0" fill="rgb(227,59,2)" rx="2" ry="2" />
<text  x="420.07" y="623.5" >co..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.03%)</title><rect x="72.7" y="773" width="0.3" height="15.0" fill="rgb(241,38,5)" rx="2" ry="2" />
<text  x="75.72" y="783.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (1 samples, 0.03%)</title><rect x="1055.6" y="805" width="0.3" height="15.0" fill="rgb(211,125,28)" rx="2" ry="2" />
<text  x="1058.60" y="815.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1,299 samples, 32.88%)</title><rect x="175.2" y="725" width="387.9" height="15.0" fill="rgb(237,202,42)" rx="2" ry="2" />
<text  x="178.16" y="735.5" >rustposix::safeposix::dispatcher::dispatcher::{{clos..</text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="882.1" y="645" width="1.2" height="15.0" fill="rgb(240,125,14)" rx="2" ry="2" />
<text  x="885.08" y="655.5" ></text>
</g>
<g >
<title>_perf_ioctl (74 samples, 1.87%)</title><rect x="12.7" y="677" width="22.1" height="15.0" fill="rgb(217,36,45)" rx="2" ry="2" />
<text  x="15.69" y="687.5" >_..</text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.03%)</title><rect x="161.4" y="645" width="0.3" height="15.0" fill="rgb(245,221,6)" rx="2" ry="2" />
<text  x="164.42" y="655.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (2 samples, 0.05%)</title><rect x="1046.9" y="677" width="0.6" height="15.0" fill="rgb(228,196,33)" rx="2" ry="2" />
<text  x="1049.94" y="687.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="848.0" y="677" width="0.6" height="15.0" fill="rgb(241,129,2)" rx="2" ry="2" />
<text  x="851.04" y="687.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.03%)</title><rect x="1087.0" y="245" width="0.3" height="15.0" fill="rgb(215,21,11)" rx="2" ry="2" />
<text  x="1089.96" y="255.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (27 samples, 0.68%)</title><rect x="548.2" y="629" width="8.0" height="15.0" fill="rgb(236,10,49)" rx="2" ry="2" />
<text  x="551.18" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (1 samples, 0.03%)</title><rect x="1086.7" y="597" width="0.3" height="15.0" fill="rgb(233,92,23)" rx="2" ry="2" />
<text  x="1089.66" y="607.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.03%)</title><rect x="1145.2" y="549" width="0.3" height="15.0" fill="rgb(208,138,19)" rx="2" ry="2" />
<text  x="1148.20" y="559.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (33 samples, 0.84%)</title><rect x="36.9" y="549" width="9.8" height="15.0" fill="rgb(223,100,50)" rx="2" ry="2" />
<text  x="39.88" y="559.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.05%)</title><rect x="1046.9" y="597" width="0.6" height="15.0" fill="rgb(230,214,17)" rx="2" ry="2" />
<text  x="1049.94" y="607.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (82 samples, 2.08%)</title><rect x="898.2" y="773" width="24.5" height="15.0" fill="rgb(209,201,27)" rx="2" ry="2" />
<text  x="901.21" y="783.5" >N..</text>
</g>
<g >
<title>__update_blocked_fair (2 samples, 0.05%)</title><rect x="1118.6" y="613" width="0.6" height="15.0" fill="rgb(242,16,24)" rx="2" ry="2" />
<text  x="1121.62" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (4 samples, 0.10%)</title><rect x="686.8" y="565" width="1.2" height="15.0" fill="rgb(248,115,13)" rx="2" ry="2" />
<text  x="689.76" y="575.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (20 samples, 0.51%)</title><rect x="950.5" y="725" width="5.9" height="15.0" fill="rgb(231,160,37)" rx="2" ry="2" />
<text  x="953.48" y="735.5" ></text>
</g>
<g >
<title>lru_cache_add (14 samples, 0.35%)</title><rect x="1031.7" y="709" width="4.2" height="15.0" fill="rgb(225,102,17)" rx="2" ry="2" />
<text  x="1034.71" y="719.5" ></text>
</g>
<g >
<title>perf_ioctl (79 samples, 2.00%)</title><rect x="11.2" y="693" width="23.6" height="15.0" fill="rgb(226,63,12)" rx="2" ry="2" />
<text  x="14.19" y="703.5" >p..</text>
</g>
<g >
<title>__ext4_find_entry (1 samples, 0.03%)</title><rect x="173.7" y="421" width="0.3" height="15.0" fill="rgb(237,30,52)" rx="2" ry="2" />
<text  x="176.66" y="431.5" ></text>
</g>
<g >
<title>timerqueue_del (1 samples, 0.03%)</title><rect x="1148.5" y="565" width="0.3" height="15.0" fill="rgb(230,48,54)" rx="2" ry="2" />
<text  x="1151.49" y="575.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.03%)</title><rect x="174.6" y="789" width="0.3" height="15.0" fill="rgb(220,147,29)" rx="2" ry="2" />
<text  x="177.56" y="799.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (20 samples, 0.51%)</title><rect x="1103.7" y="597" width="6.0" height="15.0" fill="rgb(241,75,50)" rx="2" ry="2" />
<text  x="1106.69" y="607.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (2 samples, 0.05%)</title><rect x="174.0" y="693" width="0.6" height="15.0" fill="rgb(206,147,14)" rx="2" ry="2" />
<text  x="176.96" y="703.5" ></text>
</g>
<g >
<title>pmd_val (1 samples, 0.03%)</title><rect x="1041.3" y="757" width="0.3" height="15.0" fill="rgb(209,102,17)" rx="2" ry="2" />
<text  x="1044.27" y="767.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (70 samples, 1.77%)</title><rect x="342.4" y="629" width="20.9" height="15.0" fill="rgb(237,133,29)" rx="2" ry="2" />
<text  x="345.41" y="639.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (6 samples, 0.15%)</title><rect x="40.2" y="469" width="1.8" height="15.0" fill="rgb(233,63,22)" rx="2" ry="2" />
<text  x="43.16" y="479.5" ></text>
</g>
<g >
<title>perf_event_task_output (1 samples, 0.03%)</title><rect x="1110.3" y="661" width="0.3" height="15.0" fill="rgb(250,34,53)" rx="2" ry="2" />
<text  x="1113.26" y="671.5" ></text>
</g>
<g >
<title>follow_pmd_mask.isra.0 (1 samples, 0.03%)</title><rect x="1047.5" y="629" width="0.3" height="15.0" fill="rgb(239,158,36)" rx="2" ry="2" />
<text  x="1050.54" y="639.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.03%)</title><rect x="172.8" y="309" width="0.3" height="15.0" fill="rgb(249,57,54)" rx="2" ry="2" />
<text  x="175.77" y="319.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.03%)</title><rect x="36.9" y="501" width="0.3" height="15.0" fill="rgb(235,77,13)" rx="2" ry="2" />
<text  x="39.88" y="511.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="36.3" y="741" width="0.3" height="15.0" fill="rgb(239,148,54)" rx="2" ry="2" />
<text  x="39.28" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.13%)</title><rect x="35.1" y="773" width="1.5" height="15.0" fill="rgb(244,49,3)" rx="2" ry="2" />
<text  x="38.09" y="783.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (145 samples, 3.67%)</title><rect x="1141.3" y="725" width="43.3" height="15.0" fill="rgb(251,76,16)" rx="2" ry="2" />
<text  x="1144.32" y="735.5" >cpui..</text>
</g>
<g >
<title>irqentry_enter (1 samples, 0.03%)</title><rect x="1157.7" y="645" width="0.3" height="15.0" fill="rgb(223,145,50)" rx="2" ry="2" />
<text  x="1160.74" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.03%)</title><rect x="1086.7" y="629" width="0.3" height="15.0" fill="rgb(209,191,10)" rx="2" ry="2" />
<text  x="1089.66" y="639.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="161.1" y="725" width="0.3" height="15.0" fill="rgb(249,139,15)" rx="2" ry="2" />
<text  x="164.12" y="735.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.10%)</title><rect x="1118.6" y="661" width="1.2" height="15.0" fill="rgb(214,168,52)" rx="2" ry="2" />
<text  x="1121.62" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="102.9" y="821" width="0.9" height="15.0" fill="rgb(242,189,20)" rx="2" ry="2" />
<text  x="105.88" y="831.5" ></text>
</g>
<g >
<title>__secure_computing (1 samples, 0.03%)</title><rect x="1115.9" y="789" width="0.3" height="15.0" fill="rgb(228,175,17)" rx="2" ry="2" />
<text  x="1118.93" y="799.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (2 samples, 0.05%)</title><rect x="1157.1" y="565" width="0.6" height="15.0" fill="rgb(238,114,12)" rx="2" ry="2" />
<text  x="1160.15" y="575.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (1 samples, 0.03%)</title><rect x="1086.7" y="165" width="0.3" height="15.0" fill="rgb(227,216,16)" rx="2" ry="2" />
<text  x="1089.66" y="175.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.03%)</title><rect x="1084.9" y="805" width="0.3" height="15.0" fill="rgb(226,96,54)" rx="2" ry="2" />
<text  x="1087.87" y="815.5" ></text>
</g>
<g >
<title>exc_page_fault (98 samples, 2.48%)</title><rect x="1013.8" y="821" width="29.3" height="15.0" fill="rgb(245,80,31)" rx="2" ry="2" />
<text  x="1016.79" y="831.5" >ex..</text>
</g>
<g >
<title>uncharge_page (1 samples, 0.03%)</title><rect x="1109.4" y="549" width="0.3" height="15.0" fill="rgb(234,187,4)" rx="2" ry="2" />
<text  x="1112.36" y="559.5" ></text>
</g>
<g >
<title>NaClDescRef (1 samples, 0.03%)</title><rect x="50.3" y="837" width="0.3" height="15.0" fill="rgb(236,201,4)" rx="2" ry="2" />
<text  x="53.32" y="847.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="1087.0" y="117" width="0.3" height="15.0" fill="rgb(252,228,45)" rx="2" ry="2" />
<text  x="1089.96" y="127.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (1 samples, 0.03%)</title><rect x="633.0" y="709" width="0.3" height="15.0" fill="rgb(211,23,40)" rx="2" ry="2" />
<text  x="636.00" y="719.5" ></text>
</g>
<g >
<title>generic_write_end (9 samples, 0.23%)</title><rect x="42.9" y="469" width="2.6" height="15.0" fill="rgb(225,206,39)" rx="2" ry="2" />
<text  x="45.85" y="479.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (2 samples, 0.05%)</title><rect x="867.7" y="645" width="0.6" height="15.0" fill="rgb(247,190,17)" rx="2" ry="2" />
<text  x="870.75" y="655.5" ></text>
</g>
<g >
<title>generic_exec_single (65 samples, 1.65%)</title><rect x="15.4" y="597" width="19.4" height="15.0" fill="rgb(253,23,14)" rx="2" ry="2" />
<text  x="18.38" y="607.5" ></text>
</g>
<g >
<title>find_next_and_bit (1 samples, 0.03%)</title><rect x="1154.8" y="533" width="0.3" height="15.0" fill="rgb(222,77,11)" rx="2" ry="2" />
<text  x="1157.76" y="543.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (4 samples, 0.10%)</title><rect x="35.1" y="677" width="1.2" height="15.0" fill="rgb(222,182,47)" rx="2" ry="2" />
<text  x="38.09" y="687.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="1115.0" y="773" width="0.3" height="15.0" fill="rgb(227,177,40)" rx="2" ry="2" />
<text  x="1118.04" y="783.5" ></text>
</g>
<g >
<title>[unknown]  (275 samples, 6.96%)</title><rect x="964.8" y="853" width="82.1" height="15.0" fill="rgb(221,190,25)" rx="2" ry="2" />
<text  x="967.81" y="863.5" >[unknown] </text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.03%)</title><rect x="562.8" y="661" width="0.3" height="15.0" fill="rgb(247,76,25)" rx="2" ry="2" />
<text  x="565.82" y="671.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (1 samples, 0.03%)</title><rect x="1049.0" y="837" width="0.3" height="15.0" fill="rgb(206,193,46)" rx="2" ry="2" />
<text  x="1052.03" y="847.5" ></text>
</g>
<g >
<title>lind_close (1 samples, 0.03%)</title><rect x="1086.7" y="709" width="0.3" height="15.0" fill="rgb(223,8,17)" rx="2" ry="2" />
<text  x="1089.66" y="719.5" ></text>
</g>
<g >
<title>NaClDescIoDescDtor (1 samples, 0.03%)</title><rect x="1086.7" y="741" width="0.3" height="15.0" fill="rgb(234,67,21)" rx="2" ry="2" />
<text  x="1089.66" y="751.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.03%)</title><rect x="1087.3" y="805" width="0.3" height="15.0" fill="rgb(253,193,35)" rx="2" ry="2" />
<text  x="1090.26" y="815.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 1.62%)</title><rect x="15.7" y="501" width="19.1" height="15.0" fill="rgb(251,164,12)" rx="2" ry="2" />
<text  x="18.67" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.23%)</title><rect x="1051.7" y="837" width="2.7" height="15.0" fill="rgb(242,89,28)" rx="2" ry="2" />
<text  x="1054.72" y="847.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.03%)</title><rect x="36.6" y="805" width="0.3" height="15.0" fill="rgb(241,71,45)" rx="2" ry="2" />
<text  x="39.58" y="815.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (2 samples, 0.05%)</title><rect x="1048.4" y="741" width="0.6" height="15.0" fill="rgb(214,187,10)" rx="2" ry="2" />
<text  x="1051.44" y="751.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.10%)</title><rect x="845.9" y="549" width="1.2" height="15.0" fill="rgb(211,74,14)" rx="2" ry="2" />
<text  x="848.95" y="559.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (1 samples, 0.03%)</title><rect x="1087.0" y="565" width="0.3" height="15.0" fill="rgb(253,158,9)" rx="2" ry="2" />
<text  x="1089.96" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.03%)</title><rect x="73.0" y="821" width="0.3" height="15.0" fill="rgb(231,49,10)" rx="2" ry="2" />
<text  x="76.02" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.13%)</title><rect x="1115.0" y="837" width="1.5" height="15.0" fill="rgb(242,167,51)" rx="2" ry="2" />
<text  x="1118.04" y="847.5" ></text>
</g>
<g >
<title>std::lazy::SyncLazy&lt;T,F&gt;::force (1 samples, 0.03%)</title><rect x="637.8" y="677" width="0.3" height="15.0" fill="rgb(217,7,0)" rx="2" ry="2" />
<text  x="640.78" y="687.5" ></text>
</g>
<g >
<title>expand_compound_array_assignment (1 samples, 0.03%)</title><rect x="10.0" y="709" width="0.3" height="15.0" fill="rgb(246,8,38)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.03%)</title><rect x="1110.6" y="565" width="0.3" height="15.0" fill="rgb(207,182,4)" rx="2" ry="2" />
<text  x="1113.56" y="575.5" ></text>
</g>
<g >
<title>cpu_startup_entry (78 samples, 1.97%)</title><rect x="1117.4" y="821" width="23.3" height="15.0" fill="rgb(246,134,21)" rx="2" ry="2" />
<text  x="1120.43" y="831.5" >c..</text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (30 samples, 0.76%)</title><rect x="623.7" y="645" width="9.0" height="15.0" fill="rgb(212,195,34)" rx="2" ry="2" />
<text  x="626.74" y="655.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (45 samples, 1.14%)</title><rect x="883.9" y="709" width="13.4" height="15.0" fill="rgb(235,25,9)" rx="2" ry="2" />
<text  x="886.87" y="719.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (3 samples, 0.08%)</title><rect x="756.6" y="629" width="0.9" height="15.0" fill="rgb(233,43,20)" rx="2" ry="2" />
<text  x="759.65" y="639.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.03%)</title><rect x="1087.0" y="197" width="0.3" height="15.0" fill="rgb(213,193,41)" rx="2" ry="2" />
<text  x="1089.96" y="207.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (30 samples, 0.76%)</title><rect x="874.9" y="709" width="9.0" height="15.0" fill="rgb(208,74,28)" rx="2" ry="2" />
<text  x="877.92" y="719.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (1 samples, 0.03%)</title><rect x="547.9" y="613" width="0.3" height="15.0" fill="rgb(239,219,39)" rx="2" ry="2" />
<text  x="550.88" y="623.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.03%)</title><rect x="174.0" y="229" width="0.3" height="15.0" fill="rgb(239,126,13)" rx="2" ry="2" />
<text  x="176.96" y="239.5" ></text>
</g>
<g >
<title>__unlink (2 samples, 0.05%)</title><rect x="173.4" y="645" width="0.6" height="15.0" fill="rgb(254,175,14)" rx="2" ry="2" />
<text  x="176.37" y="655.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.03%)</title><rect x="1118.3" y="629" width="0.3" height="15.0" fill="rgb(229,10,53)" rx="2" ry="2" />
<text  x="1121.32" y="639.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (3 samples, 0.08%)</title><rect x="1184.9" y="725" width="0.9" height="15.0" fill="rgb(237,117,44)" rx="2" ry="2" />
<text  x="1187.92" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.03%)</title><rect x="159.9" y="517" width="0.3" height="15.0" fill="rgb(211,76,26)" rx="2" ry="2" />
<text  x="162.93" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="173.4" y="613" width="0.6" height="15.0" fill="rgb(215,79,18)" rx="2" ry="2" />
<text  x="176.37" y="623.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="877.3" y="597" width="0.3" height="15.0" fill="rgb(216,25,52)" rx="2" ry="2" />
<text  x="880.30" y="607.5" ></text>
</g>
<g >
<title>ovl_create_or_link (1 samples, 0.03%)</title><rect x="159.9" y="325" width="0.3" height="15.0" fill="rgb(214,28,47)" rx="2" ry="2" />
<text  x="162.93" y="335.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.03%)</title><rect x="1184.6" y="725" width="0.3" height="15.0" fill="rgb(220,64,25)" rx="2" ry="2" />
<text  x="1187.62" y="735.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (1 samples, 0.03%)</title><rect x="172.5" y="277" width="0.3" height="15.0" fill="rgb(236,185,2)" rx="2" ry="2" />
<text  x="175.47" y="287.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1,335 samples, 33.79%)</title><rect x="565.2" y="821" width="398.7" height="15.0" fill="rgb(226,90,11)" rx="2" ry="2" />
<text  x="568.21" y="831.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>__hrtimer_run_queues (16 samples, 0.40%)</title><rect x="1144.0" y="597" width="4.8" height="15.0" fill="rgb(250,22,42)" rx="2" ry="2" />
<text  x="1147.01" y="607.5" ></text>
</g>
<g >
<title>CheckValidityOfRegularInstruction (1 samples, 0.03%)</title><rect x="171.3" y="709" width="0.3" height="15.0" fill="rgb(248,186,52)" rx="2" ry="2" />
<text  x="174.28" y="719.5" ></text>
</g>
<g >
<title>NaClMutexLock (18 samples, 0.46%)</title><rect x="152.5" y="789" width="5.3" height="15.0" fill="rgb(218,166,12)" rx="2" ry="2" />
<text  x="155.46" y="799.5" ></text>
</g>
<g >
<title>NaClSysExit (6 samples, 0.15%)</title><rect x="172.8" y="805" width="1.8" height="15.0" fill="rgb(233,55,17)" rx="2" ry="2" />
<text  x="175.77" y="815.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.03%)</title><rect x="1187.0" y="629" width="0.3" height="15.0" fill="rgb(216,56,37)" rx="2" ry="2" />
<text  x="1190.01" y="639.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (9 samples, 0.23%)</title><rect x="840.3" y="613" width="2.7" height="15.0" fill="rgb(206,124,5)" rx="2" ry="2" />
<text  x="843.27" y="623.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (2 samples, 0.05%)</title><rect x="1048.4" y="821" width="0.6" height="15.0" fill="rgb(243,219,47)" rx="2" ry="2" />
<text  x="1051.44" y="831.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::open (1 samples, 0.03%)</title><rect x="159.9" y="597" width="0.3" height="15.0" fill="rgb(214,111,26)" rx="2" ry="2" />
<text  x="162.93" y="607.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.03%)</title><rect x="172.5" y="293" width="0.3" height="15.0" fill="rgb(230,56,6)" rx="2" ry="2" />
<text  x="175.47" y="303.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.03%)</title><rect x="564.0" y="613" width="0.3" height="15.0" fill="rgb(242,223,21)" rx="2" ry="2" />
<text  x="567.01" y="623.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.03%)</title><rect x="1086.7" y="277" width="0.3" height="15.0" fill="rgb(210,224,25)" rx="2" ry="2" />
<text  x="1089.66" y="287.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (16 samples, 0.40%)</title><rect x="951.7" y="709" width="4.7" height="15.0" fill="rgb(234,25,54)" rx="2" ry="2" />
<text  x="954.67" y="719.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (14 samples, 0.35%)</title><rect x="98.4" y="789" width="4.2" height="15.0" fill="rgb(246,54,20)" rx="2" ry="2" />
<text  x="101.40" y="799.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (207 samples, 5.24%)</title><rect x="688.0" y="645" width="61.8" height="15.0" fill="rgb(247,202,17)" rx="2" ry="2" />
<text  x="690.95" y="655.5" >std::s..</text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (16 samples, 0.40%)</title><rect x="619.0" y="645" width="4.7" height="15.0" fill="rgb(217,54,13)" rx="2" ry="2" />
<text  x="621.96" y="655.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (3 samples, 0.08%)</title><rect x="1046.9" y="837" width="0.9" height="15.0" fill="rgb(210,218,40)" rx="2" ry="2" />
<text  x="1049.94" y="847.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.03%)</title><rect x="172.5" y="469" width="0.3" height="15.0" fill="rgb(217,160,37)" rx="2" ry="2" />
<text  x="175.47" y="479.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.03%)</title><rect x="40.2" y="437" width="0.3" height="15.0" fill="rgb(247,45,28)" rx="2" ry="2" />
<text  x="43.16" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (34 samples, 0.86%)</title><rect x="399.7" y="629" width="10.2" height="15.0" fill="rgb(219,129,35)" rx="2" ry="2" />
<text  x="402.75" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (19 samples, 0.48%)</title><rect x="891.6" y="661" width="5.7" height="15.0" fill="rgb(218,135,31)" rx="2" ry="2" />
<text  x="894.64" y="671.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.03%)</title><rect x="1110.6" y="677" width="0.3" height="15.0" fill="rgb(240,162,26)" rx="2" ry="2" />
<text  x="1113.56" y="687.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.05%)</title><rect x="1101.9" y="565" width="0.6" height="15.0" fill="rgb(216,196,45)" rx="2" ry="2" />
<text  x="1104.90" y="575.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.03%)</title><rect x="563.1" y="789" width="0.3" height="15.0" fill="rgb(219,32,54)" rx="2" ry="2" />
<text  x="566.12" y="799.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.03%)</title><rect x="41.1" y="389" width="0.3" height="15.0" fill="rgb(208,181,37)" rx="2" ry="2" />
<text  x="44.06" y="399.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.03%)</title><rect x="1086.7" y="693" width="0.3" height="15.0" fill="rgb(236,226,44)" rx="2" ry="2" />
<text  x="1089.66" y="703.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.03%)</title><rect x="563.1" y="773" width="0.3" height="15.0" fill="rgb(221,65,18)" rx="2" ry="2" />
<text  x="566.12" y="783.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (2 samples, 0.05%)</title><rect x="172.8" y="437" width="0.6" height="15.0" fill="rgb(230,133,30)" rx="2" ry="2" />
<text  x="175.77" y="447.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5 samples, 0.13%)</title><rect x="1118.3" y="741" width="1.5" height="15.0" fill="rgb(253,191,6)" rx="2" ry="2" />
<text  x="1121.32" y="751.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.03%)</title><rect x="1047.5" y="709" width="0.3" height="15.0" fill="rgb(254,196,41)" rx="2" ry="2" />
<text  x="1050.54" y="719.5" ></text>
</g>
<g >
<title>__free_one_page (9 samples, 0.23%)</title><rect x="1106.1" y="501" width="2.7" height="15.0" fill="rgb(243,61,49)" rx="2" ry="2" />
<text  x="1109.08" y="511.5" ></text>
</g>
<g >
<title>_start (3 samples, 0.08%)</title><rect x="1086.7" y="853" width="0.9" height="15.0" fill="rgb(230,225,16)" rx="2" ry="2" />
<text  x="1089.66" y="863.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.10%)</title><rect x="35.1" y="645" width="1.2" height="15.0" fill="rgb(209,66,13)" rx="2" ry="2" />
<text  x="38.09" y="655.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (23 samples, 0.58%)</title><rect x="822.9" y="661" width="6.9" height="15.0" fill="rgb(225,32,35)" rx="2" ry="2" />
<text  x="825.95" y="671.5" ></text>
</g>
<g >
<title>perf_mmap__push (33 samples, 0.84%)</title><rect x="36.9" y="773" width="9.8" height="15.0" fill="rgb(251,225,39)" rx="2" ry="2" />
<text  x="39.88" y="783.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.03%)</title><rect x="1148.2" y="485" width="0.3" height="15.0" fill="rgb(206,169,22)" rx="2" ry="2" />
<text  x="1151.19" y="495.5" ></text>
</g>
<g >
<title>__getblk_gfp (1 samples, 0.03%)</title><rect x="45.2" y="357" width="0.3" height="15.0" fill="rgb(236,114,48)" rx="2" ry="2" />
<text  x="48.24" y="367.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (63 samples, 1.59%)</title><rect x="1055.9" y="837" width="18.8" height="15.0" fill="rgb(225,159,16)" rx="2" ry="2" />
<text  x="1058.90" y="847.5" ></text>
</g>
<g >
<title>__GI___mmap64 (1 samples, 0.03%)</title><rect x="161.4" y="709" width="0.3" height="15.0" fill="rgb(225,53,36)" rx="2" ry="2" />
<text  x="164.42" y="719.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (2 samples, 0.05%)</title><rect x="1030.2" y="645" width="0.6" height="15.0" fill="rgb(238,173,26)" rx="2" ry="2" />
<text  x="1033.22" y="655.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::new (1 samples, 0.03%)</title><rect x="159.9" y="613" width="0.3" height="15.0" fill="rgb(208,4,7)" rx="2" ry="2" />
<text  x="162.93" y="623.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.03%)</title><rect x="174.3" y="373" width="0.3" height="15.0" fill="rgb(240,51,50)" rx="2" ry="2" />
<text  x="177.26" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (9 samples, 0.23%)</title><rect x="844.5" y="581" width="2.6" height="15.0" fill="rgb(242,119,36)" rx="2" ry="2" />
<text  x="847.45" y="591.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (994 samples, 25.16%)</title><rect x="600.4" y="789" width="296.9" height="15.0" fill="rgb(218,88,24)" rx="2" ry="2" />
<text  x="603.45" y="799.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>NaClAppThreadSpawn (1 samples, 0.03%)</title><rect x="174.9" y="773" width="0.3" height="15.0" fill="rgb(211,196,40)" rx="2" ry="2" />
<text  x="177.86" y="783.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="36.6" y="709" width="0.3" height="15.0" fill="rgb(205,0,5)" rx="2" ry="2" />
<text  x="39.58" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (2 samples, 0.05%)</title><rect x="174.0" y="421" width="0.6" height="15.0" fill="rgb(250,75,46)" rx="2" ry="2" />
<text  x="176.96" y="431.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 2.02%)</title><rect x="11.2" y="789" width="23.9" height="15.0" fill="rgb(241,30,29)" rx="2" ry="2" />
<text  x="14.19" y="799.5" >p..</text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.08%)</title><rect x="1033.8" y="661" width="0.9" height="15.0" fill="rgb(239,87,21)" rx="2" ry="2" />
<text  x="1036.80" y="671.5" ></text>
</g>
<g >
<title>alloc_page_buffers (1 samples, 0.03%)</title><rect x="172.8" y="357" width="0.3" height="15.0" fill="rgb(223,153,25)" rx="2" ry="2" />
<text  x="175.77" y="367.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.03%)</title><rect x="10.6" y="821" width="0.3" height="15.0" fill="rgb(210,190,19)" rx="2" ry="2" />
<text  x="13.60" y="831.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (1 samples, 0.03%)</title><rect x="172.5" y="645" width="0.3" height="15.0" fill="rgb(254,7,26)" rx="2" ry="2" />
<text  x="175.47" y="655.5" ></text>
</g>
<g >
<title>ovl_create_over_whiteout (1 samples, 0.03%)</title><rect x="159.9" y="309" width="0.3" height="15.0" fill="rgb(210,72,43)" rx="2" ry="2" />
<text  x="162.93" y="319.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.56%)</title><rect x="831.6" y="629" width="6.6" height="15.0" fill="rgb(252,49,20)" rx="2" ry="2" />
<text  x="834.61" y="639.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.03%)</title><rect x="564.0" y="629" width="0.3" height="15.0" fill="rgb(227,96,50)" rx="2" ry="2" />
<text  x="567.01" y="639.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.91%)</title><rect x="656.9" y="677" width="10.7" height="15.0" fill="rgb(234,192,8)" rx="2" ry="2" />
<text  x="659.89" y="687.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.03%)</title><rect x="1041.0" y="709" width="0.3" height="15.0" fill="rgb(217,105,36)" rx="2" ry="2" />
<text  x="1043.97" y="719.5" ></text>
</g>
<g >
<title>perf (121 samples, 3.06%)</title><rect x="11.2" y="869" width="36.1" height="15.0" fill="rgb(240,66,9)" rx="2" ry="2" />
<text  x="14.19" y="879.5" >perf</text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.03%)</title><rect x="1140.4" y="741" width="0.3" height="15.0" fill="rgb(221,137,7)" rx="2" ry="2" />
<text  x="1143.42" y="751.5" ></text>
</g>
<g >
<title>NaClSysWrite (1,259 samples, 31.87%)</title><rect x="587.9" y="805" width="376.0" height="15.0" fill="rgb(226,91,17)" rx="2" ry="2" />
<text  x="590.90" y="815.5" >NaClSysWrite</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="1087.0" y="133" width="0.3" height="15.0" fill="rgb(248,121,36)" rx="2" ry="2" />
<text  x="1089.96" y="143.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (19 samples, 0.48%)</title><rect x="1152.1" y="629" width="5.6" height="15.0" fill="rgb(215,104,7)" rx="2" ry="2" />
<text  x="1155.07" y="639.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.03%)</title><rect x="1144.9" y="549" width="0.3" height="15.0" fill="rgb(241,118,5)" rx="2" ry="2" />
<text  x="1147.90" y="559.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (668 samples, 16.91%)</title><rect x="363.3" y="677" width="199.5" height="15.0" fill="rgb(234,125,26)" rx="2" ry="2" />
<text  x="366.31" y="687.5" >ringbuf::consumer::Consume..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="883.3" y="645" width="0.6" height="15.0" fill="rgb(235,68,31)" rx="2" ry="2" />
<text  x="886.28" y="655.5" ></text>
</g>
<g >
<title>ext4_rename (1 samples, 0.03%)</title><rect x="173.7" y="453" width="0.3" height="15.0" fill="rgb(242,179,50)" rx="2" ry="2" />
<text  x="176.66" y="463.5" ></text>
</g>
<g >
<title>start_secondary (78 samples, 1.97%)</title><rect x="1117.4" y="837" width="23.3" height="15.0" fill="rgb(251,105,49)" rx="2" ry="2" />
<text  x="1120.43" y="847.5" >s..</text>
</g>
<g >
<title>hrtimer_interrupt (21 samples, 0.53%)</title><rect x="1144.0" y="613" width="6.3" height="15.0" fill="rgb(239,220,2)" rx="2" ry="2" />
<text  x="1147.01" y="623.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.03%)</title><rect x="1110.6" y="693" width="0.3" height="15.0" fill="rgb(247,228,34)" rx="2" ry="2" />
<text  x="1113.56" y="703.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (3 samples, 0.08%)</title><rect x="160.2" y="773" width="0.9" height="15.0" fill="rgb(209,50,17)" rx="2" ry="2" />
<text  x="163.23" y="783.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.03%)</title><rect x="43.2" y="421" width="0.2" height="15.0" fill="rgb(247,153,2)" rx="2" ry="2" />
<text  x="46.15" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.05%)</title><rect x="883.3" y="613" width="0.6" height="15.0" fill="rgb(230,3,26)" rx="2" ry="2" />
<text  x="886.28" y="623.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (3 samples, 0.08%)</title><rect x="42.0" y="469" width="0.9" height="15.0" fill="rgb(247,208,12)" rx="2" ry="2" />
<text  x="44.96" y="479.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.03%)</title><rect x="172.5" y="357" width="0.3" height="15.0" fill="rgb(209,138,48)" rx="2" ry="2" />
<text  x="175.47" y="367.5" ></text>
</g>
<g >
<title>perf_event_task_tick (3 samples, 0.08%)</title><rect x="1147.6" y="501" width="0.9" height="15.0" fill="rgb(247,29,45)" rx="2" ry="2" />
<text  x="1150.59" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (6 samples, 0.15%)</title><rect x="53.3" y="837" width="1.8" height="15.0" fill="rgb(216,181,33)" rx="2" ry="2" />
<text  x="56.31" y="847.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.03%)</title><rect x="47.0" y="661" width="0.3" height="15.0" fill="rgb(219,87,23)" rx="2" ry="2" />
<text  x="50.03" y="671.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.03%)</title><rect x="172.8" y="389" width="0.3" height="15.0" fill="rgb(247,104,17)" rx="2" ry="2" />
<text  x="175.77" y="399.5" ></text>
</g>
<g >
<title>tick_irq_enter (2 samples, 0.05%)</title><rect x="1150.9" y="629" width="0.6" height="15.0" fill="rgb(215,191,25)" rx="2" ry="2" />
<text  x="1153.88" y="639.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (14 samples, 0.35%)</title><rect x="1031.7" y="725" width="4.2" height="15.0" fill="rgb(218,190,34)" rx="2" ry="2" />
<text  x="1034.71" y="735.5" ></text>
</g>
<g >
<title>__seccomp_filter (1 samples, 0.03%)</title><rect x="1115.9" y="773" width="0.3" height="15.0" fill="rgb(253,53,26)" rx="2" ry="2" />
<text  x="1118.93" y="783.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (33 samples, 0.84%)</title><rect x="910.5" y="757" width="9.8" height="15.0" fill="rgb(205,192,4)" rx="2" ry="2" />
<text  x="913.46" y="767.5" ></text>
</g>
<g >
<title>read_hpet (1 samples, 0.03%)</title><rect x="1157.1" y="517" width="0.3" height="15.0" fill="rgb(220,141,23)" rx="2" ry="2" />
<text  x="1160.15" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.03%)</title><rect x="1183.1" y="661" width="0.3" height="15.0" fill="rgb(238,54,17)" rx="2" ry="2" />
<text  x="1186.13" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (25 samples, 0.63%)</title><rect x="902.7" y="741" width="7.5" height="15.0" fill="rgb(233,50,47)" rx="2" ry="2" />
<text  x="905.69" y="751.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::restore_metadata (1 samples, 0.03%)</title><rect x="1087.0" y="757" width="0.3" height="15.0" fill="rgb(242,171,47)" rx="2" ry="2" />
<text  x="1089.96" y="767.5" ></text>
</g>
<g >
<title>get_page_from_freelist (32 samples, 0.81%)</title><rect x="1021.3" y="693" width="9.5" height="15.0" fill="rgb(217,89,25)" rx="2" ry="2" />
<text  x="1024.26" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="172.5" y="517" width="0.3" height="15.0" fill="rgb(211,179,43)" rx="2" ry="2" />
<text  x="175.47" y="527.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (165 samples, 4.18%)</title><rect x="1140.7" y="821" width="49.3" height="15.0" fill="rgb(216,53,11)" rx="2" ry="2" />
<text  x="1143.72" y="831.5" >x86_..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (9 samples, 0.23%)</title><rect x="840.3" y="629" width="2.7" height="15.0" fill="rgb(232,221,6)" rx="2" ry="2" />
<text  x="843.27" y="639.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (340 samples, 8.61%)</title><rect x="446.3" y="613" width="101.6" height="15.0" fill="rgb(252,118,23)" rx="2" ry="2" />
<text  x="449.34" y="623.5" >core::intrin..</text>
</g>
<g >
<title>__pud_alloc (1 samples, 0.03%)</title><rect x="161.1" y="645" width="0.3" height="15.0" fill="rgb(217,133,24)" rx="2" ry="2" />
<text  x="164.12" y="655.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.03%)</title><rect x="1118.3" y="613" width="0.3" height="15.0" fill="rgb(238,160,42)" rx="2" ry="2" />
<text  x="1121.32" y="623.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.03%)</title><rect x="172.5" y="341" width="0.3" height="15.0" fill="rgb(217,201,36)" rx="2" ry="2" />
<text  x="175.47" y="351.5" ></text>
</g>
<g >
<title>IndexExtentionFromREX (1 samples, 0.03%)</title><rect x="169.5" y="725" width="0.3" height="15.0" fill="rgb(206,38,44)" rx="2" ry="2" />
<text  x="172.48" y="735.5" ></text>
</g>
<g >
<title>worker_thread (3 samples, 0.08%)</title><rect x="1116.5" y="821" width="0.9" height="15.0" fill="rgb(254,120,26)" rx="2" ry="2" />
<text  x="1119.53" y="831.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="1116.5" y="693" width="0.3" height="15.0" fill="rgb(233,210,14)" rx="2" ry="2" />
<text  x="1119.53" y="703.5" ></text>
</g>
<g >
<title>cpuidle_select (14 samples, 0.35%)</title><rect x="1179.5" y="709" width="4.2" height="15.0" fill="rgb(248,133,43)" rx="2" ry="2" />
<text  x="1182.55" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (40 samples, 1.01%)</title><rect x="1098.9" y="853" width="12.0" height="15.0" fill="rgb(205,163,24)" rx="2" ry="2" />
<text  x="1101.91" y="863.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (44 samples, 1.11%)</title><rect x="829.8" y="645" width="13.2" height="15.0" fill="rgb(246,172,40)" rx="2" ry="2" />
<text  x="832.82" y="655.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_init (1 samples, 0.03%)</title><rect x="637.8" y="661" width="0.3" height="15.0" fill="rgb(254,50,22)" rx="2" ry="2" />
<text  x="640.78" y="671.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.03%)</title><rect x="159.9" y="773" width="0.3" height="15.0" fill="rgb(227,90,44)" rx="2" ry="2" />
<text  x="162.93" y="783.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.03%)</title><rect x="1086.7" y="357" width="0.3" height="15.0" fill="rgb(252,194,50)" rx="2" ry="2" />
<text  x="1089.66" y="367.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.08%)</title><rect x="837.3" y="565" width="0.9" height="15.0" fill="rgb(222,139,31)" rx="2" ry="2" />
<text  x="840.28" y="575.5" ></text>
</g>
<g >
<title>do_idle (164 samples, 4.15%)</title><rect x="1140.7" y="741" width="49.0" height="15.0" fill="rgb(239,128,26)" rx="2" ry="2" />
<text  x="1143.72" y="751.5" >do_i..</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.10%)</title><rect x="845.9" y="533" width="1.2" height="15.0" fill="rgb(243,14,39)" rx="2" ry="2" />
<text  x="848.95" y="543.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (19 samples, 0.48%)</title><rect x="1152.1" y="613" width="5.6" height="15.0" fill="rgb(218,216,9)" rx="2" ry="2" />
<text  x="1155.07" y="623.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.03%)</title><rect x="10.0" y="741" width="0.3" height="15.0" fill="rgb(221,142,15)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>__switch_to_asm (1 samples, 0.03%)</title><rect x="1114.7" y="853" width="0.3" height="15.0" fill="rgb(212,81,35)" rx="2" ry="2" />
<text  x="1117.74" y="863.5" ></text>
</g>
<g >
<title>irq_enter_rcu (4 samples, 0.10%)</title><rect x="1150.3" y="645" width="1.2" height="15.0" fill="rgb(223,219,25)" rx="2" ry="2" />
<text  x="1153.28" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open (1 samples, 0.03%)</title><rect x="159.9" y="565" width="0.3" height="15.0" fill="rgb(226,188,31)" rx="2" ry="2" />
<text  x="162.93" y="575.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="877.6" y="597" width="0.3" height="15.0" fill="rgb(242,142,10)" rx="2" ry="2" />
<text  x="880.60" y="607.5" ></text>
</g>
<g >
<title>[unknown] (132 samples, 3.34%)</title><rect x="1046.9" y="853" width="39.5" height="15.0" fill="rgb(235,5,14)" rx="2" ry="2" />
<text  x="1049.94" y="863.5" >[un..</text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.05%)</title><rect x="1157.1" y="581" width="0.6" height="15.0" fill="rgb(222,121,32)" rx="2" ry="2" />
<text  x="1160.15" y="591.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.03%)</title><rect x="1110.6" y="597" width="0.3" height="15.0" fill="rgb(236,50,18)" rx="2" ry="2" />
<text  x="1113.56" y="607.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (2 samples, 0.05%)</title><rect x="1030.2" y="661" width="0.6" height="15.0" fill="rgb(238,59,40)" rx="2" ry="2" />
<text  x="1033.22" y="671.5" ></text>
</g>
<g >
<title>NaClDescUnref (85 samples, 2.15%)</title><rect x="897.3" y="789" width="25.4" height="15.0" fill="rgb(250,82,35)" rx="2" ry="2" />
<text  x="900.31" y="799.5" >N..</text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.03%)</title><rect x="159.9" y="437" width="0.3" height="15.0" fill="rgb(228,196,43)" rx="2" ry="2" />
<text  x="162.93" y="447.5" ></text>
</g>
<g >
<title>NaClHostDescClose (1 samples, 0.03%)</title><rect x="1086.7" y="725" width="0.3" height="15.0" fill="rgb(244,199,42)" rx="2" ry="2" />
<text  x="1089.66" y="735.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (2 samples, 0.05%)</title><rect x="173.4" y="693" width="0.6" height="15.0" fill="rgb(240,152,40)" rx="2" ry="2" />
<text  x="176.37" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="564.0" y="725" width="0.3" height="15.0" fill="rgb(249,196,16)" rx="2" ry="2" />
<text  x="567.01" y="735.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (15 samples, 0.38%)</title><rect x="870.4" y="645" width="4.5" height="15.0" fill="rgb(251,197,45)" rx="2" ry="2" />
<text  x="873.44" y="655.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="161.1" y="677" width="0.3" height="15.0" fill="rgb(218,95,2)" rx="2" ry="2" />
<text  x="164.12" y="687.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="1102.5" y="581" width="0.3" height="15.0" fill="rgb(252,191,16)" rx="2" ry="2" />
<text  x="1105.49" y="591.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (3 samples, 0.08%)</title><rect x="159.0" y="821" width="0.9" height="15.0" fill="rgb(239,5,11)" rx="2" ry="2" />
<text  x="162.03" y="831.5" ></text>
</g>
<g >
<title>dispatcher (3 samples, 0.08%)</title><rect x="1054.4" y="837" width="0.9" height="15.0" fill="rgb(211,201,36)" rx="2" ry="2" />
<text  x="1057.41" y="847.5" ></text>
</g>
<g >
<title>do_group_exit (39 samples, 0.99%)</title><rect x="1099.2" y="741" width="11.7" height="15.0" fill="rgb(231,107,21)" rx="2" ry="2" />
<text  x="1102.21" y="751.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.05%)</title><rect x="14.2" y="661" width="0.6" height="15.0" fill="rgb(233,170,43)" rx="2" ry="2" />
<text  x="17.18" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="172.5" y="501" width="0.3" height="15.0" fill="rgb(215,97,36)" rx="2" ry="2" />
<text  x="175.47" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (22 samples, 0.56%)</title><rect x="831.6" y="613" width="6.6" height="15.0" fill="rgb(227,118,25)" rx="2" ry="2" />
<text  x="834.61" y="623.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.15%)</title><rect x="832.2" y="581" width="1.8" height="15.0" fill="rgb(225,218,43)" rx="2" ry="2" />
<text  x="835.21" y="591.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (1 samples, 0.03%)</title><rect x="1145.8" y="533" width="0.3" height="15.0" fill="rgb(243,182,2)" rx="2" ry="2" />
<text  x="1148.80" y="543.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.03%)</title><rect x="174.0" y="325" width="0.3" height="15.0" fill="rgb(239,213,40)" rx="2" ry="2" />
<text  x="176.96" y="335.5" ></text>
</g>
<g >
<title>open_last_lookups (1 samples, 0.03%)</title><rect x="159.9" y="389" width="0.3" height="15.0" fill="rgb(215,120,12)" rx="2" ry="2" />
<text  x="162.93" y="399.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (2 samples, 0.05%)</title><rect x="581.0" y="741" width="0.6" height="15.0" fill="rgb(220,202,13)" rx="2" ry="2" />
<text  x="584.04" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 2.02%)</title><rect x="11.2" y="725" width="23.9" height="15.0" fill="rgb(229,47,35)" rx="2" ry="2" />
<text  x="14.19" y="735.5" >d..</text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.03%)</title><rect x="1087.0" y="373" width="0.3" height="15.0" fill="rgb(211,188,28)" rx="2" ry="2" />
<text  x="1089.96" y="383.5" ></text>
</g>
<g >
<title>ovl_unlink (1 samples, 0.03%)</title><rect x="173.7" y="549" width="0.3" height="15.0" fill="rgb(241,128,17)" rx="2" ry="2" />
<text  x="176.66" y="559.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="876.4" y="597" width="0.3" height="15.0" fill="rgb(243,39,38)" rx="2" ry="2" />
<text  x="879.41" y="607.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (490 samples, 12.40%)</title><rect x="217.0" y="661" width="146.3" height="15.0" fill="rgb(251,35,47)" rx="2" ry="2" />
<text  x="219.97" y="671.5" >ringbuf::ring_buff..</text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.03%)</title><rect x="1184.3" y="597" width="0.3" height="15.0" fill="rgb(249,100,45)" rx="2" ry="2" />
<text  x="1187.33" y="607.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 1.16%)</title><rect x="619.0" y="709" width="13.7" height="15.0" fill="rgb(223,223,7)" rx="2" ry="2" />
<text  x="621.96" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize (1 samples, 0.03%)</title><rect x="1087.0" y="709" width="0.3" height="15.0" fill="rgb(226,212,47)" rx="2" ry="2" />
<text  x="1089.96" y="719.5" ></text>
</g>
<g >
<title>main (2 samples, 0.05%)</title><rect x="10.0" y="821" width="0.6" height="15.0" fill="rgb(240,175,4)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>do_sys_poll (4 samples, 0.10%)</title><rect x="35.1" y="725" width="1.2" height="15.0" fill="rgb(253,65,35)" rx="2" ry="2" />
<text  x="38.09" y="735.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (4 samples, 0.10%)</title><rect x="39.0" y="437" width="1.2" height="15.0" fill="rgb(206,155,31)" rx="2" ry="2" />
<text  x="41.97" y="447.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.05%)</title><rect x="40.8" y="421" width="0.6" height="15.0" fill="rgb(213,168,24)" rx="2" ry="2" />
<text  x="43.76" y="431.5" ></text>
</g>
<g >
<title>UnmarkValidJumpTarget (1 samples, 0.03%)</title><rect x="171.6" y="725" width="0.3" height="15.0" fill="rgb(238,120,2)" rx="2" ry="2" />
<text  x="174.57" y="735.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.03%)</title><rect x="587.6" y="805" width="0.3" height="15.0" fill="rgb(243,173,1)" rx="2" ry="2" />
<text  x="590.61" y="815.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.03%)</title><rect x="1085.2" y="773" width="0.3" height="15.0" fill="rgb(241,98,15)" rx="2" ry="2" />
<text  x="1088.17" y="783.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="72.7" y="805" width="0.3" height="15.0" fill="rgb(213,189,50)" rx="2" ry="2" />
<text  x="75.72" y="815.5" ></text>
</g>
<g >
<title>cpu_startup_entry (164 samples, 4.15%)</title><rect x="1140.7" y="757" width="49.0" height="15.0" fill="rgb(224,195,8)" rx="2" ry="2" />
<text  x="1143.72" y="767.5" >cpu_..</text>
</g>
<g >
<title>ksys_write (2 samples, 0.05%)</title><rect x="46.7" y="805" width="0.6" height="15.0" fill="rgb(252,76,41)" rx="2" ry="2" />
<text  x="49.74" y="815.5" ></text>
</g>
<g >
<title>free_work (2 samples, 0.05%)</title><rect x="1116.8" y="789" width="0.6" height="15.0" fill="rgb(211,73,28)" rx="2" ry="2" />
<text  x="1119.83" y="799.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.03%)</title><rect x="172.5" y="581" width="0.3" height="15.0" fill="rgb(217,18,24)" rx="2" ry="2" />
<text  x="175.47" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (1 samples, 0.03%)</title><rect x="1086.7" y="549" width="0.3" height="15.0" fill="rgb(247,160,2)" rx="2" ry="2" />
<text  x="1089.66" y="559.5" ></text>
</g>
<g >
<title>NaClXMutexLock (1 samples, 0.03%)</title><rect x="53.0" y="837" width="0.3" height="15.0" fill="rgb(254,75,35)" rx="2" ry="2" />
<text  x="56.01" y="847.5" ></text>
</g>
<g >
<title>lind_write (988 samples, 25.01%)</title><rect x="602.2" y="757" width="295.1" height="15.0" fill="rgb(221,55,11)" rx="2" ry="2" />
<text  x="605.24" y="767.5" >lind_write</text>
</g>
<g >
<title>lind_close (1 samples, 0.03%)</title><rect x="172.5" y="693" width="0.3" height="15.0" fill="rgb(218,92,37)" rx="2" ry="2" />
<text  x="175.47" y="703.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (3 samples, 0.08%)</title><rect x="51.5" y="837" width="0.9" height="15.0" fill="rgb(231,152,30)" rx="2" ry="2" />
<text  x="54.51" y="847.5" ></text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.08%)</title><rect x="1186.4" y="693" width="0.9" height="15.0" fill="rgb(210,91,54)" rx="2" ry="2" />
<text  x="1189.42" y="703.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="174.0" y="261" width="0.3" height="15.0" fill="rgb(242,152,28)" rx="2" ry="2" />
<text  x="176.96" y="271.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.03%)</title><rect x="1189.4" y="645" width="0.3" height="15.0" fill="rgb(217,54,24)" rx="2" ry="2" />
<text  x="1192.40" y="655.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (1 samples, 0.03%)</title><rect x="1086.7" y="197" width="0.3" height="15.0" fill="rgb(242,95,52)" rx="2" ry="2" />
<text  x="1089.66" y="207.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.03%)</title><rect x="174.6" y="389" width="0.3" height="15.0" fill="rgb(242,119,48)" rx="2" ry="2" />
<text  x="177.56" y="399.5" ></text>
</g>
<g >
<title>NaClElfImageLoad (1 samples, 0.03%)</title><rect x="174.6" y="725" width="0.3" height="15.0" fill="rgb(235,218,12)" rx="2" ry="2" />
<text  x="177.56" y="735.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.03%)</title><rect x="1087.0" y="293" width="0.3" height="15.0" fill="rgb(206,167,42)" rx="2" ry="2" />
<text  x="1089.96" y="303.5" ></text>
</g>
<g >
<title>ksys_write (33 samples, 0.84%)</title><rect x="36.9" y="645" width="9.8" height="15.0" fill="rgb(234,69,15)" rx="2" ry="2" />
<text  x="39.88" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (23 samples, 0.58%)</title><rect x="816.1" y="613" width="6.8" height="15.0" fill="rgb(236,184,37)" rx="2" ry="2" />
<text  x="819.08" y="623.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (1 samples, 0.03%)</title><rect x="1141.0" y="725" width="0.3" height="15.0" fill="rgb(216,222,34)" rx="2" ry="2" />
<text  x="1144.02" y="735.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="1087.0" y="101" width="0.3" height="15.0" fill="rgb(221,196,16)" rx="2" ry="2" />
<text  x="1089.96" y="111.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (47 samples, 1.19%)</title><rect x="642.9" y="661" width="14.0" height="15.0" fill="rgb(252,227,54)" rx="2" ry="2" />
<text  x="645.86" y="671.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (4 samples, 0.10%)</title><rect x="867.7" y="661" width="1.2" height="15.0" fill="rgb(249,35,27)" rx="2" ry="2" />
<text  x="870.75" y="671.5" ></text>
</g>
<g >
<title>cpuidle_enter (76 samples, 1.92%)</title><rect x="1117.4" y="773" width="22.7" height="15.0" fill="rgb(238,110,22)" rx="2" ry="2" />
<text  x="1120.43" y="783.5" >c..</text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 1.62%)</title><rect x="15.7" y="517" width="19.1" height="15.0" fill="rgb(219,38,5)" rx="2" ry="2" />
<text  x="18.67" y="527.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.03%)</title><rect x="1084.9" y="821" width="0.3" height="15.0" fill="rgb(216,190,52)" rx="2" ry="2" />
<text  x="1087.87" y="831.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (17 samples, 0.43%)</title><rect x="656.9" y="613" width="5.1" height="15.0" fill="rgb(250,72,51)" rx="2" ry="2" />
<text  x="659.89" y="623.5" ></text>
</g>
<g >
<title>vfs_unlink (2 samples, 0.05%)</title><rect x="173.4" y="565" width="0.6" height="15.0" fill="rgb(212,225,38)" rx="2" ry="2" />
<text  x="176.37" y="575.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.03%)</title><rect x="40.5" y="437" width="0.3" height="15.0" fill="rgb(211,205,30)" rx="2" ry="2" />
<text  x="43.46" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (19 samples, 0.48%)</title><rect x="662.0" y="613" width="5.6" height="15.0" fill="rgb(246,26,18)" rx="2" ry="2" />
<text  x="664.97" y="623.5" ></text>
</g>
<g >
<title>NaClMutexLock (1 samples, 0.03%)</title><rect x="1048.1" y="837" width="0.3" height="15.0" fill="rgb(249,209,11)" rx="2" ry="2" />
<text  x="1051.14" y="847.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 1.62%)</title><rect x="15.7" y="533" width="19.1" height="15.0" fill="rgb(214,30,51)" rx="2" ry="2" />
<text  x="18.67" y="543.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (1 samples, 0.03%)</title><rect x="1116.5" y="789" width="0.3" height="15.0" fill="rgb(221,1,25)" rx="2" ry="2" />
<text  x="1119.53" y="799.5" ></text>
</g>
<g >
<title>find_vma (3 samples, 0.08%)</title><rect x="1015.3" y="789" width="0.9" height="15.0" fill="rgb(253,75,6)" rx="2" ry="2" />
<text  x="1018.28" y="799.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (1 samples, 0.03%)</title><rect x="1140.4" y="773" width="0.3" height="15.0" fill="rgb(226,57,26)" rx="2" ry="2" />
<text  x="1143.42" y="783.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (23 samples, 0.58%)</title><rect x="1143.4" y="645" width="6.9" height="15.0" fill="rgb(254,53,50)" rx="2" ry="2" />
<text  x="1146.41" y="655.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.03%)</title><rect x="1118.3" y="581" width="0.3" height="15.0" fill="rgb(242,57,33)" rx="2" ry="2" />
<text  x="1121.32" y="591.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (24 samples, 0.61%)</title><rect x="867.7" y="693" width="7.2" height="15.0" fill="rgb(238,99,52)" rx="2" ry="2" />
<text  x="870.75" y="703.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (26 samples, 0.66%)</title><rect x="931.7" y="773" width="7.7" height="15.0" fill="rgb(250,181,20)" rx="2" ry="2" />
<text  x="934.66" y="783.5" ></text>
</g>
<g >
<title>lookup_bh_lru (1 samples, 0.03%)</title><rect x="45.2" y="325" width="0.3" height="15.0" fill="rgb(209,58,52)" rx="2" ry="2" />
<text  x="48.24" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.25%)</title><rect x="634.8" y="677" width="3.0" height="15.0" fill="rgb(251,178,43)" rx="2" ry="2" />
<text  x="637.79" y="687.5" ></text>
</g>
<g >
<title>ion (33 samples, 0.84%)</title><rect x="36.9" y="725" width="9.8" height="15.0" fill="rgb(228,38,11)" rx="2" ry="2" />
<text  x="39.88" y="735.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.03%)</title><rect x="942.4" y="741" width="0.3" height="15.0" fill="rgb(234,16,5)" rx="2" ry="2" />
<text  x="945.41" y="751.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="1115.0" y="725" width="0.3" height="15.0" fill="rgb(248,144,4)" rx="2" ry="2" />
<text  x="1118.04" y="735.5" ></text>
</g>
<g >
<title>generic_perform_write (2 samples, 0.05%)</title><rect x="172.8" y="421" width="0.6" height="15.0" fill="rgb(220,40,20)" rx="2" ry="2" />
<text  x="175.77" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (23 samples, 0.58%)</title><rect x="822.9" y="629" width="6.9" height="15.0" fill="rgb(239,174,53)" rx="2" ry="2" />
<text  x="825.95" y="639.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (2 samples, 0.05%)</title><rect x="172.8" y="469" width="0.6" height="15.0" fill="rgb(205,6,14)" rx="2" ry="2" />
<text  x="175.77" y="479.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (164 samples, 4.15%)</title><rect x="774.0" y="677" width="48.9" height="15.0" fill="rgb(208,120,40)" rx="2" ry="2" />
<text  x="776.97" y="687.5" >ring..</text>
</g>
<g >
<title>mmput (37 samples, 0.94%)</title><rect x="1099.2" y="693" width="11.1" height="15.0" fill="rgb(206,170,46)" rx="2" ry="2" />
<text  x="1102.21" y="703.5" ></text>
</g>
<g >
<title>NaClLog (7 samples, 0.18%)</title><rect x="920.6" y="757" width="2.1" height="15.0" fill="rgb(234,218,53)" rx="2" ry="2" />
<text  x="923.61" y="767.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (32 samples, 0.81%)</title><rect x="572.1" y="757" width="9.5" height="15.0" fill="rgb(211,225,50)" rx="2" ry="2" />
<text  x="575.08" y="767.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.03%)</title><rect x="174.6" y="773" width="0.3" height="15.0" fill="rgb(229,94,41)" rx="2" ry="2" />
<text  x="177.56" y="783.5" ></text>
</g>
<g >
<title>__libc_open64 (1 samples, 0.03%)</title><rect x="159.9" y="501" width="0.3" height="15.0" fill="rgb(211,123,14)" rx="2" ry="2" />
<text  x="162.93" y="511.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (17 samples, 0.43%)</title><rect x="89.1" y="821" width="5.1" height="15.0" fill="rgb(227,48,35)" rx="2" ry="2" />
<text  x="92.14" y="831.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.05%)</title><rect x="10.0" y="837" width="0.6" height="15.0" fill="rgb(206,178,17)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>NaClTextMapWrapper (2 samples, 0.05%)</title><rect x="161.1" y="773" width="0.6" height="15.0" fill="rgb(225,94,35)" rx="2" ry="2" />
<text  x="164.12" y="783.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.03%)</title><rect x="920.3" y="741" width="0.3" height="15.0" fill="rgb(231,69,2)" rx="2" ry="2" />
<text  x="923.31" y="751.5" ></text>
</g>
<g >
<title>may_delete (1 samples, 0.03%)</title><rect x="173.4" y="549" width="0.3" height="15.0" fill="rgb(226,167,6)" rx="2" ry="2" />
<text  x="176.37" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (64 samples, 1.62%)</title><rect x="848.6" y="661" width="19.1" height="15.0" fill="rgb(250,137,25)" rx="2" ry="2" />
<text  x="851.63" y="671.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.03%)</title><rect x="564.0" y="677" width="0.3" height="15.0" fill="rgb(245,116,27)" rx="2" ry="2" />
<text  x="567.01" y="687.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (1 samples, 0.03%)</title><rect x="10.9" y="805" width="0.3" height="15.0" fill="rgb(231,153,34)" rx="2" ry="2" />
<text  x="13.90" y="815.5" ></text>
</g>
<g >
<title>prep_new_page (25 samples, 0.63%)</title><rect x="1022.2" y="677" width="7.4" height="15.0" fill="rgb(245,157,3)" rx="2" ry="2" />
<text  x="1025.15" y="687.5" ></text>
</g>
<g >
<title>free_unref_page_list (12 samples, 0.30%)</title><rect x="1105.5" y="549" width="3.6" height="15.0" fill="rgb(231,147,51)" rx="2" ry="2" />
<text  x="1108.48" y="559.5" ></text>
</g>
<g >
<title>node_dirty_ok (1 samples, 0.03%)</title><rect x="40.8" y="389" width="0.3" height="15.0" fill="rgb(236,188,53)" rx="2" ry="2" />
<text  x="43.76" y="399.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (1 samples, 0.03%)</title><rect x="1086.7" y="613" width="0.3" height="15.0" fill="rgb(254,114,47)" rx="2" ry="2" />
<text  x="1089.66" y="623.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (3 samples, 0.08%)</title><rect x="880.3" y="581" width="0.9" height="15.0" fill="rgb(210,43,54)" rx="2" ry="2" />
<text  x="883.29" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.03%)</title><rect x="1086.7" y="645" width="0.3" height="15.0" fill="rgb(236,13,46)" rx="2" ry="2" />
<text  x="1089.66" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (5 samples, 0.13%)</title><rect x="56.0" y="837" width="1.5" height="15.0" fill="rgb(213,97,53)" rx="2" ry="2" />
<text  x="58.99" y="847.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (6 samples, 0.15%)</title><rect x="1187.9" y="725" width="1.8" height="15.0" fill="rgb(248,204,4)" rx="2" ry="2" />
<text  x="1190.91" y="735.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (24 samples, 0.61%)</title><rect x="150.7" y="821" width="7.1" height="15.0" fill="rgb(245,85,42)" rx="2" ry="2" />
<text  x="153.67" y="831.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.03%)</title><rect x="1186.7" y="661" width="0.3" height="15.0" fill="rgb(224,192,43)" rx="2" ry="2" />
<text  x="1189.71" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="951.4" y="709" width="0.3" height="15.0" fill="rgb(250,0,12)" rx="2" ry="2" />
<text  x="954.37" y="719.5" ></text>
</g>
<g >
<title>BitmapClearBit (1 samples, 0.03%)</title><rect x="171.6" y="709" width="0.3" height="15.0" fill="rgb(206,52,41)" rx="2" ry="2" />
<text  x="174.57" y="719.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1 samples, 0.03%)</title><rect x="174.0" y="181" width="0.3" height="15.0" fill="rgb(214,155,49)" rx="2" ry="2" />
<text  x="176.96" y="191.5" ></text>
</g>
<g >
<title>NaClHostDescRead (1,299 samples, 32.88%)</title><rect x="175.2" y="773" width="387.9" height="15.0" fill="rgb(254,35,51)" rx="2" ry="2" />
<text  x="178.16" y="783.5" >NaClHostDescRead</text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (46 samples, 1.16%)</title><rect x="619.0" y="693" width="13.7" height="15.0" fill="rgb(206,50,45)" rx="2" ry="2" />
<text  x="621.96" y="703.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (37 samples, 0.94%)</title><rect x="848.9" y="645" width="11.1" height="15.0" fill="rgb(221,171,15)" rx="2" ry="2" />
<text  x="851.93" y="655.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (1 samples, 0.03%)</title><rect x="172.5" y="821" width="0.3" height="15.0" fill="rgb(236,65,27)" rx="2" ry="2" />
<text  x="175.47" y="831.5" ></text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.03%)</title><rect x="1037.7" y="709" width="0.3" height="15.0" fill="rgb(234,47,14)" rx="2" ry="2" />
<text  x="1040.68" y="719.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.03%)</title><rect x="1087.0" y="85" width="0.3" height="15.0" fill="rgb(233,184,31)" rx="2" ry="2" />
<text  x="1089.96" y="95.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.03%)</title><rect x="1180.1" y="677" width="0.3" height="15.0" fill="rgb(228,121,18)" rx="2" ry="2" />
<text  x="1183.14" y="687.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.03%)</title><rect x="1098.9" y="789" width="0.3" height="15.0" fill="rgb(254,193,43)" rx="2" ry="2" />
<text  x="1101.91" y="799.5" ></text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.05%)</title><rect x="868.3" y="645" width="0.6" height="15.0" fill="rgb(208,19,8)" rx="2" ry="2" />
<text  x="871.34" y="655.5" ></text>
</g>
<g >
<title>CopyBundleTails (3 samples, 0.08%)</title><rect x="160.2" y="757" width="0.9" height="15.0" fill="rgb(218,144,0)" rx="2" ry="2" />
<text  x="163.23" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="564.0" y="709" width="0.3" height="15.0" fill="rgb(230,121,49)" rx="2" ry="2" />
<text  x="567.01" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (207 samples, 5.24%)</title><rect x="688.0" y="629" width="61.8" height="15.0" fill="rgb(207,181,47)" rx="2" ry="2" />
<text  x="690.95" y="639.5" >std::s..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.03%)</title><rect x="1086.7" y="261" width="0.3" height="15.0" fill="rgb(231,153,41)" rx="2" ry="2" />
<text  x="1089.66" y="271.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.03%)</title><rect x="1047.5" y="677" width="0.3" height="15.0" fill="rgb(227,152,14)" rx="2" ry="2" />
<text  x="1050.54" y="687.5" ></text>
</g>
<g >
<title>NaClHostDescClose (1 samples, 0.03%)</title><rect x="172.5" y="709" width="0.3" height="15.0" fill="rgb(247,203,29)" rx="2" ry="2" />
<text  x="175.47" y="719.5" ></text>
</g>
<g >
<title>parse_command (1 samples, 0.03%)</title><rect x="10.3" y="773" width="0.3" height="15.0" fill="rgb(214,195,10)" rx="2" ry="2" />
<text  x="13.30" y="783.5" ></text>
</g>
<g >
<title>vmacache_find (2 samples, 0.05%)</title><rect x="1015.6" y="773" width="0.6" height="15.0" fill="rgb(209,79,44)" rx="2" ry="2" />
<text  x="1018.58" y="783.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize::MapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.03%)</title><rect x="1087.0" y="277" width="0.3" height="15.0" fill="rgb(208,65,6)" rx="2" ry="2" />
<text  x="1089.96" y="287.5" ></text>
</g>
<g >
<title>NaClDescRef (51 samples, 1.29%)</title><rect x="941.8" y="757" width="15.2" height="15.0" fill="rgb(232,164,28)" rx="2" ry="2" />
<text  x="944.81" y="767.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (33 samples, 0.84%)</title><rect x="647.0" y="613" width="9.9" height="15.0" fill="rgb(236,95,25)" rx="2" ry="2" />
<text  x="650.04" y="623.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (1 samples, 0.03%)</title><rect x="44.0" y="373" width="0.3" height="15.0" fill="rgb(251,180,0)" rx="2" ry="2" />
<text  x="47.05" y="383.5" ></text>
</g>
<g >
<title>__futex_abstimed_wait_common64 (1 samples, 0.03%)</title><rect x="564.0" y="741" width="0.3" height="15.0" fill="rgb(247,75,49)" rx="2" ry="2" />
<text  x="567.01" y="751.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.28%)</title><rect x="878.5" y="597" width="3.3" height="15.0" fill="rgb(208,65,7)" rx="2" ry="2" />
<text  x="881.50" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.84%)</title><rect x="36.9" y="693" width="9.8" height="15.0" fill="rgb(235,24,42)" rx="2" ry="2" />
<text  x="39.88" y="703.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.03%)</title><rect x="174.3" y="341" width="0.3" height="15.0" fill="rgb(231,208,7)" rx="2" ry="2" />
<text  x="177.26" y="351.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (67 samples, 1.70%)</title><rect x="14.8" y="661" width="20.0" height="15.0" fill="rgb(207,214,50)" rx="2" ry="2" />
<text  x="17.78" y="671.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.03%)</title><rect x="1035.3" y="661" width="0.3" height="15.0" fill="rgb(250,170,45)" rx="2" ry="2" />
<text  x="1038.29" y="671.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (1 samples, 0.03%)</title><rect x="174.6" y="581" width="0.3" height="15.0" fill="rgb(241,49,16)" rx="2" ry="2" />
<text  x="177.56" y="591.5" ></text>
</g>
<g >
<title>lock_page_memcg (2 samples, 0.05%)</title><rect x="1102.8" y="581" width="0.6" height="15.0" fill="rgb(240,70,3)" rx="2" ry="2" />
<text  x="1105.79" y="591.5" ></text>
</g>
<g >
<title>NaClLog (3 samples, 0.08%)</title><rect x="157.8" y="821" width="0.9" height="15.0" fill="rgb(228,220,1)" rx="2" ry="2" />
<text  x="160.84" y="831.5" ></text>
</g>
<g >
<title>NaClDescIoDescDtor (1 samples, 0.03%)</title><rect x="172.5" y="725" width="0.3" height="15.0" fill="rgb(239,160,5)" rx="2" ry="2" />
<text  x="175.47" y="735.5" ></text>
</g>
<g >
<title>NaClSysClose (1 samples, 0.03%)</title><rect x="159.9" y="805" width="0.3" height="15.0" fill="rgb(219,47,37)" rx="2" ry="2" />
<text  x="162.93" y="815.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (11 samples, 0.28%)</title><rect x="1032.3" y="677" width="3.3" height="15.0" fill="rgb(238,121,15)" rx="2" ry="2" />
<text  x="1035.31" y="687.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="1103.4" y="549" width="0.3" height="15.0" fill="rgb(226,194,23)" rx="2" ry="2" />
<text  x="1106.39" y="559.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.03%)</title><rect x="173.4" y="533" width="0.3" height="15.0" fill="rgb(225,179,23)" rx="2" ry="2" />
<text  x="176.37" y="543.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.03%)</title><rect x="1087.0" y="533" width="0.3" height="15.0" fill="rgb(239,27,43)" rx="2" ry="2" />
<text  x="1089.96" y="543.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (21 samples, 0.53%)</title><rect x="1144.0" y="629" width="6.3" height="15.0" fill="rgb(247,48,24)" rx="2" ry="2" />
<text  x="1147.01" y="639.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (4 samples, 0.10%)</title><rect x="845.9" y="517" width="1.2" height="15.0" fill="rgb(240,81,19)" rx="2" ry="2" />
<text  x="848.95" y="527.5" ></text>
</g>
<g >
<title>NaClSysWaitpidDecoder (2 samples, 0.05%)</title><rect x="563.7" y="821" width="0.6" height="15.0" fill="rgb(209,149,48)" rx="2" ry="2" />
<text  x="566.71" y="831.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.05%)</title><rect x="174.0" y="645" width="0.6" height="15.0" fill="rgb(244,17,1)" rx="2" ry="2" />
<text  x="176.96" y="655.5" ></text>
</g>
<g >
<title>NaClHostDescClose (1 samples, 0.03%)</title><rect x="159.9" y="741" width="0.3" height="15.0" fill="rgb(223,61,53)" rx="2" ry="2" />
<text  x="162.93" y="751.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="342.1" y="597" width="0.3" height="15.0" fill="rgb(253,1,8)" rx="2" ry="2" />
<text  x="345.11" y="607.5" ></text>
</g>
<g >
<title>perf_event__prepare_comm (1 samples, 0.03%)</title><rect x="36.6" y="789" width="0.3" height="15.0" fill="rgb(221,28,18)" rx="2" ry="2" />
<text  x="39.58" y="799.5" ></text>
</g>
<g >
<title>free_unref_page_commit (12 samples, 0.30%)</title><rect x="1105.5" y="533" width="3.6" height="15.0" fill="rgb(239,151,35)" rx="2" ry="2" />
<text  x="1108.48" y="543.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.03%)</title><rect x="10.0" y="661" width="0.3" height="15.0" fill="rgb(254,132,42)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="564.0" y="533" width="0.3" height="15.0" fill="rgb(251,34,9)" rx="2" ry="2" />
<text  x="567.01" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (8 samples, 0.20%)</title><rect x="757.5" y="629" width="2.4" height="15.0" fill="rgb(209,117,26)" rx="2" ry="2" />
<text  x="760.54" y="639.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.03%)</title><rect x="159.9" y="405" width="0.3" height="15.0" fill="rgb(235,203,52)" rx="2" ry="2" />
<text  x="162.93" y="415.5" ></text>
</g>
<g >
<title>arch_do_signal (39 samples, 0.99%)</title><rect x="1099.2" y="773" width="11.7" height="15.0" fill="rgb(228,169,46)" rx="2" ry="2" />
<text  x="1102.21" y="783.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (3 samples, 0.08%)</title><rect x="44.6" y="373" width="0.9" height="15.0" fill="rgb(225,93,47)" rx="2" ry="2" />
<text  x="47.64" y="383.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.03%)</title><rect x="172.5" y="533" width="0.3" height="15.0" fill="rgb(218,51,52)" rx="2" ry="2" />
<text  x="175.47" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (19 samples, 0.48%)</title><rect x="891.6" y="677" width="5.7" height="15.0" fill="rgb(233,138,30)" rx="2" ry="2" />
<text  x="894.64" y="687.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.03%)</title><rect x="1184.3" y="677" width="0.3" height="15.0" fill="rgb(215,51,44)" rx="2" ry="2" />
<text  x="1187.33" y="687.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.03%)</title><rect x="1109.1" y="549" width="0.3" height="15.0" fill="rgb(230,53,48)" rx="2" ry="2" />
<text  x="1112.06" y="559.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.03%)</title><rect x="44.0" y="389" width="0.3" height="15.0" fill="rgb(212,90,12)" rx="2" ry="2" />
<text  x="47.05" y="399.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.03%)</title><rect x="172.5" y="661" width="0.3" height="15.0" fill="rgb(208,78,13)" rx="2" ry="2" />
<text  x="175.47" y="671.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (20 samples, 0.51%)</title><rect x="944.5" y="725" width="6.0" height="15.0" fill="rgb(241,123,54)" rx="2" ry="2" />
<text  x="947.50" y="735.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (14 samples, 0.35%)</title><rect x="203.5" y="661" width="4.2" height="15.0" fill="rgb(238,150,46)" rx="2" ry="2" />
<text  x="206.53" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="172.5" y="485" width="0.3" height="15.0" fill="rgb(226,144,9)" rx="2" ry="2" />
<text  x="175.47" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (15 samples, 0.38%)</title><rect x="1035.9" y="725" width="4.5" height="15.0" fill="rgb(240,179,35)" rx="2" ry="2" />
<text  x="1038.89" y="735.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.03%)</title><rect x="172.5" y="789" width="0.3" height="15.0" fill="rgb(215,69,35)" rx="2" ry="2" />
<text  x="175.47" y="799.5" ></text>
</g>
<g >
<title>tick_sched_timer (12 samples, 0.30%)</title><rect x="1144.9" y="565" width="3.6" height="15.0" fill="rgb(243,89,4)" rx="2" ry="2" />
<text  x="1147.90" y="575.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (994 samples, 25.16%)</title><rect x="600.4" y="773" width="296.9" height="15.0" fill="rgb(205,190,4)" rx="2" ry="2" />
<text  x="603.45" y="783.5" >NaClHostDescWrite</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (75 samples, 1.90%)</title><rect x="750.1" y="645" width="22.4" height="15.0" fill="rgb(217,180,27)" rx="2" ry="2" />
<text  x="753.08" y="655.5" >r..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.03%)</title><rect x="172.5" y="613" width="0.3" height="15.0" fill="rgb(254,86,5)" rx="2" ry="2" />
<text  x="175.47" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (23 samples, 0.58%)</title><rect x="822.9" y="645" width="6.9" height="15.0" fill="rgb(210,41,1)" rx="2" ry="2" />
<text  x="825.95" y="655.5" ></text>
</g>
<g >
<title>perf_event_exit_task (1 samples, 0.03%)</title><rect x="1110.3" y="709" width="0.3" height="15.0" fill="rgb(247,128,37)" rx="2" ry="2" />
<text  x="1113.26" y="719.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.03%)</title><rect x="1157.4" y="453" width="0.3" height="15.0" fill="rgb(243,161,10)" rx="2" ry="2" />
<text  x="1160.45" y="463.5" ></text>
</g>
<g >
<title>[anon] (187 samples, 4.73%)</title><rect x="48.2" y="853" width="55.9" height="15.0" fill="rgb(235,81,8)" rx="2" ry="2" />
<text  x="51.23" y="863.5" >[anon]</text>
</g>
<g >
<title>dl_main (1 samples, 0.03%)</title><rect x="10.6" y="805" width="0.3" height="15.0" fill="rgb(231,185,51)" rx="2" ry="2" />
<text  x="13.60" y="815.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.03%)</title><rect x="174.0" y="197" width="0.3" height="15.0" fill="rgb(228,136,16)" rx="2" ry="2" />
<text  x="176.96" y="207.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22 samples, 0.56%)</title><rect x="831.6" y="597" width="6.6" height="15.0" fill="rgb(248,64,54)" rx="2" ry="2" />
<text  x="834.61" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1046.9" y="789" width="0.6" height="15.0" fill="rgb(241,12,32)" rx="2" ry="2" />
<text  x="1049.94" y="799.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="881.2" y="581" width="0.6" height="15.0" fill="rgb(225,159,42)" rx="2" ry="2" />
<text  x="884.19" y="591.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="36.0" y="565" width="0.3" height="15.0" fill="rgb(216,78,25)" rx="2" ry="2" />
<text  x="38.98" y="575.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.03%)</title><rect x="1037.4" y="693" width="0.3" height="15.0" fill="rgb(247,6,8)" rx="2" ry="2" />
<text  x="1040.39" y="703.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1118.3" y="693" width="0.3" height="15.0" fill="rgb(205,101,52)" rx="2" ry="2" />
<text  x="1121.32" y="703.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (39 samples, 0.99%)</title><rect x="1099.2" y="821" width="11.7" height="15.0" fill="rgb(239,93,5)" rx="2" ry="2" />
<text  x="1102.21" y="831.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (36 samples, 0.91%)</title><rect x="1020.1" y="709" width="10.7" height="15.0" fill="rgb(235,169,15)" rx="2" ry="2" />
<text  x="1023.06" y="719.5" ></text>
</g>
<g >
<title>menu_select (13 samples, 0.33%)</title><rect x="1179.5" y="693" width="3.9" height="15.0" fill="rgb(230,170,53)" rx="2" ry="2" />
<text  x="1182.55" y="703.5" ></text>
</g>
<g >
<title>arch_do_signal (1 samples, 0.03%)</title><rect x="36.3" y="693" width="0.3" height="15.0" fill="rgb(208,72,20)" rx="2" ry="2" />
<text  x="39.28" y="703.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (17 samples, 0.43%)</title><rect x="89.1" y="805" width="5.1" height="15.0" fill="rgb(251,21,51)" rx="2" ry="2" />
<text  x="92.14" y="815.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.03%)</title><rect x="1086.7" y="517" width="0.3" height="15.0" fill="rgb(206,149,14)" rx="2" ry="2" />
<text  x="1089.66" y="527.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.03%)</title><rect x="1140.1" y="757" width="0.3" height="15.0" fill="rgb(235,65,50)" rx="2" ry="2" />
<text  x="1143.12" y="767.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.03%)</title><rect x="1115.0" y="709" width="0.3" height="15.0" fill="rgb(211,181,8)" rx="2" ry="2" />
<text  x="1118.04" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (2 samples, 0.05%)</title><rect x="1046.9" y="757" width="0.6" height="15.0" fill="rgb(252,1,40)" rx="2" ry="2" />
<text  x="1049.94" y="767.5" ></text>
</g>
<g >
<title>zap_pte_range (37 samples, 0.94%)</title><rect x="1099.2" y="613" width="11.1" height="15.0" fill="rgb(211,33,39)" rx="2" ry="2" />
<text  x="1102.21" y="623.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (1 samples, 0.03%)</title><rect x="174.6" y="341" width="0.3" height="15.0" fill="rgb(239,179,3)" rx="2" ry="2" />
<text  x="177.56" y="351.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (38 samples, 0.96%)</title><rect x="1087.6" y="853" width="11.3" height="15.0" fill="rgb(231,157,6)" rx="2" ry="2" />
<text  x="1090.56" y="863.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (2 samples, 0.05%)</title><rect x="174.0" y="677" width="0.6" height="15.0" fill="rgb(225,188,19)" rx="2" ry="2" />
<text  x="176.96" y="687.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.03%)</title><rect x="174.0" y="293" width="0.3" height="15.0" fill="rgb(211,228,21)" rx="2" ry="2" />
<text  x="176.96" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_single (65 samples, 1.65%)</title><rect x="15.4" y="613" width="19.4" height="15.0" fill="rgb(246,166,5)" rx="2" ry="2" />
<text  x="18.38" y="623.5" ></text>
</g>
<g >
<title>ovl_write_iter (33 samples, 0.84%)</title><rect x="36.9" y="597" width="9.8" height="15.0" fill="rgb(217,60,3)" rx="2" ry="2" />
<text  x="39.88" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="174.3" y="213" width="0.3" height="15.0" fill="rgb(246,7,53)" rx="2" ry="2" />
<text  x="177.26" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_write (2 samples, 0.05%)</title><rect x="172.8" y="581" width="0.6" height="15.0" fill="rgb(206,184,9)" rx="2" ry="2" />
<text  x="175.77" y="591.5" ></text>
</g>
<g >
<title>swapper (265 samples, 6.71%)</title><rect x="1110.9" y="869" width="79.1" height="15.0" fill="rgb(220,184,46)" rx="2" ry="2" />
<text  x="1113.86" y="879.5" >swapper</text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.08%)</title><rect x="839.4" y="597" width="0.9" height="15.0" fill="rgb(249,46,9)" rx="2" ry="2" />
<text  x="842.37" y="607.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (165 samples, 4.18%)</title><rect x="1140.7" y="837" width="49.3" height="15.0" fill="rgb(220,120,11)" rx="2" ry="2" />
<text  x="1143.72" y="847.5" >x86_..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (1 samples, 0.03%)</title><rect x="1086.7" y="245" width="0.3" height="15.0" fill="rgb(210,2,44)" rx="2" ry="2" />
<text  x="1089.66" y="255.5" ></text>
</g>
<g >
<title>wake_up_q (2 samples, 0.05%)</title><rect x="1115.3" y="773" width="0.6" height="15.0" fill="rgb(240,70,3)" rx="2" ry="2" />
<text  x="1118.34" y="783.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (6 samples, 0.15%)</title><rect x="38.4" y="469" width="1.8" height="15.0" fill="rgb(209,118,28)" rx="2" ry="2" />
<text  x="41.37" y="479.5" ></text>
</g>
<g >
<title>ext4_da_write_end (12 samples, 0.30%)</title><rect x="42.0" y="485" width="3.5" height="15.0" fill="rgb(250,1,5)" rx="2" ry="2" />
<text  x="44.96" y="495.5" ></text>
</g>
<g >
<title>perf_event_task (1 samples, 0.03%)</title><rect x="1110.3" y="693" width="0.3" height="15.0" fill="rgb(220,138,20)" rx="2" ry="2" />
<text  x="1113.26" y="703.5" ></text>
</g>
<g >
<title>mm_update_next_owner (1 samples, 0.03%)</title><rect x="1098.9" y="757" width="0.3" height="15.0" fill="rgb(213,100,51)" rx="2" ry="2" />
<text  x="1101.91" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (47 samples, 1.19%)</title><rect x="642.9" y="693" width="14.0" height="15.0" fill="rgb(205,141,7)" rx="2" ry="2" />
<text  x="645.86" y="703.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="844.2" y="581" width="0.3" height="15.0" fill="rgb(215,80,28)" rx="2" ry="2" />
<text  x="847.15" y="591.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (5 samples, 0.13%)</title><rect x="684.7" y="677" width="1.5" height="15.0" fill="rgb(217,153,11)" rx="2" ry="2" />
<text  x="687.67" y="687.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.03%)</title><rect x="1047.5" y="821" width="0.3" height="15.0" fill="rgb(221,82,16)" rx="2" ry="2" />
<text  x="1050.54" y="831.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (1 samples, 0.03%)</title><rect x="158.7" y="821" width="0.3" height="15.0" fill="rgb(251,34,44)" rx="2" ry="2" />
<text  x="161.73" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (2 samples, 0.05%)</title><rect x="173.4" y="597" width="0.6" height="15.0" fill="rgb(210,58,32)" rx="2" ry="2" />
<text  x="176.37" y="607.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.03%)</title><rect x="1043.1" y="837" width="0.3" height="15.0" fill="rgb(252,55,1)" rx="2" ry="2" />
<text  x="1046.06" y="847.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.03%)</title><rect x="1152.1" y="581" width="0.3" height="15.0" fill="rgb(242,36,28)" rx="2" ry="2" />
<text  x="1155.07" y="591.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.03%)</title><rect x="342.1" y="485" width="0.3" height="15.0" fill="rgb(222,6,29)" rx="2" ry="2" />
<text  x="345.11" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (211 samples, 5.34%)</title><rect x="686.8" y="677" width="63.0" height="15.0" fill="rgb(243,62,54)" rx="2" ry="2" />
<text  x="689.76" y="687.5" >core::..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (1 samples, 0.03%)</title><rect x="174.6" y="613" width="0.3" height="15.0" fill="rgb(222,181,20)" rx="2" ry="2" />
<text  x="177.56" y="623.5" ></text>
</g>
<g >
<title>MarkValidJumpTarget (3 samples, 0.08%)</title><rect x="169.8" y="725" width="0.9" height="15.0" fill="rgb(207,112,3)" rx="2" ry="2" />
<text  x="172.78" y="735.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (12 samples, 0.30%)</title><rect x="1032.3" y="693" width="3.6" height="15.0" fill="rgb(241,112,54)" rx="2" ry="2" />
<text  x="1035.31" y="703.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (1 samples, 0.03%)</title><rect x="1157.4" y="533" width="0.3" height="15.0" fill="rgb(207,24,37)" rx="2" ry="2" />
<text  x="1160.45" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.03%)</title><rect x="159.9" y="693" width="0.3" height="15.0" fill="rgb(222,207,6)" rx="2" ry="2" />
<text  x="162.93" y="703.5" ></text>
</g>
<g >
<title>std::panicking::panicking (4 samples, 0.10%)</title><rect x="686.8" y="613" width="1.2" height="15.0" fill="rgb(237,109,33)" rx="2" ry="2" />
<text  x="689.76" y="623.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (4 samples, 0.10%)</title><rect x="45.5" y="485" width="1.2" height="15.0" fill="rgb(251,124,45)" rx="2" ry="2" />
<text  x="48.54" y="495.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.58%)</title><rect x="822.9" y="677" width="6.9" height="15.0" fill="rgb(248,197,48)" rx="2" ry="2" />
<text  x="825.95" y="687.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.03%)</title><rect x="1151.2" y="613" width="0.3" height="15.0" fill="rgb(239,47,33)" rx="2" ry="2" />
<text  x="1154.17" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (26 samples, 0.66%)</title><rect x="860.0" y="645" width="7.7" height="15.0" fill="rgb(206,163,31)" rx="2" ry="2" />
<text  x="862.98" y="655.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.03%)</title><rect x="10.6" y="789" width="0.3" height="15.0" fill="rgb(208,181,21)" rx="2" ry="2" />
<text  x="13.60" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.03%)</title><rect x="1098.9" y="821" width="0.3" height="15.0" fill="rgb(221,137,17)" rx="2" ry="2" />
<text  x="1101.91" y="831.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.03%)</title><rect x="1156.6" y="533" width="0.2" height="15.0" fill="rgb(218,33,50)" rx="2" ry="2" />
<text  x="1159.55" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1 samples, 0.03%)</title><rect x="562.8" y="629" width="0.3" height="15.0" fill="rgb(206,165,11)" rx="2" ry="2" />
<text  x="565.82" y="639.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (14 samples, 0.35%)</title><rect x="98.4" y="773" width="4.2" height="15.0" fill="rgb(233,69,20)" rx="2" ry="2" />
<text  x="101.40" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (47 samples, 1.19%)</title><rect x="642.9" y="645" width="14.0" height="15.0" fill="rgb(244,101,46)" rx="2" ry="2" />
<text  x="645.86" y="655.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (40 samples, 1.01%)</title><rect x="569.7" y="789" width="11.9" height="15.0" fill="rgb(215,22,11)" rx="2" ry="2" />
<text  x="572.69" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="174.3" y="245" width="0.3" height="15.0" fill="rgb(216,196,44)" rx="2" ry="2" />
<text  x="177.26" y="255.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.03%)</title><rect x="174.0" y="245" width="0.3" height="15.0" fill="rgb(213,134,46)" rx="2" ry="2" />
<text  x="176.96" y="255.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.03%)</title><rect x="173.1" y="405" width="0.3" height="15.0" fill="rgb(252,209,48)" rx="2" ry="2" />
<text  x="176.07" y="415.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.03%)</title><rect x="1148.8" y="597" width="0.3" height="15.0" fill="rgb(246,182,37)" rx="2" ry="2" />
<text  x="1151.79" y="607.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (1 samples, 0.03%)</title><rect x="566.1" y="805" width="0.3" height="15.0" fill="rgb(252,229,8)" rx="2" ry="2" />
<text  x="569.10" y="815.5" ></text>
</g>
<g >
<title>yyparse (1 samples, 0.03%)</title><rect x="10.3" y="757" width="0.3" height="15.0" fill="rgb(253,171,23)" rx="2" ry="2" />
<text  x="13.30" y="767.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="39.6" y="389" width="0.3" height="15.0" fill="rgb(251,0,48)" rx="2" ry="2" />
<text  x="42.57" y="399.5" ></text>
</g>
<g >
<title>expand_words (1 samples, 0.03%)</title><rect x="10.0" y="757" width="0.3" height="15.0" fill="rgb(227,65,39)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (2 samples, 0.05%)</title><rect x="43.7" y="405" width="0.6" height="15.0" fill="rgb(232,141,34)" rx="2" ry="2" />
<text  x="46.75" y="415.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.03%)</title><rect x="1182.5" y="677" width="0.3" height="15.0" fill="rgb(219,172,21)" rx="2" ry="2" />
<text  x="1185.53" y="687.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="842.7" y="517" width="0.3" height="15.0" fill="rgb(239,1,51)" rx="2" ry="2" />
<text  x="845.66" y="527.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (2 samples, 0.05%)</title><rect x="1046.9" y="725" width="0.6" height="15.0" fill="rgb(250,139,6)" rx="2" ry="2" />
<text  x="1049.94" y="735.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.03%)</title><rect x="47.0" y="645" width="0.3" height="15.0" fill="rgb(233,97,10)" rx="2" ry="2" />
<text  x="50.03" y="655.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.03%)</title><rect x="174.3" y="261" width="0.3" height="15.0" fill="rgb(225,98,48)" rx="2" ry="2" />
<text  x="177.26" y="271.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.08%)</title><rect x="843.6" y="613" width="0.9" height="15.0" fill="rgb(220,28,39)" rx="2" ry="2" />
<text  x="846.56" y="623.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="174.3" y="181" width="0.3" height="15.0" fill="rgb(219,180,45)" rx="2" ry="2" />
<text  x="177.26" y="191.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (4 samples, 0.10%)</title><rect x="686.8" y="645" width="1.2" height="15.0" fill="rgb(243,121,36)" rx="2" ry="2" />
<text  x="689.76" y="655.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (2 samples, 0.05%)</title><rect x="1046.9" y="533" width="0.6" height="15.0" fill="rgb(231,135,34)" rx="2" ry="2" />
<text  x="1049.94" y="543.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (4 samples, 0.10%)</title><rect x="867.7" y="677" width="1.2" height="15.0" fill="rgb(244,115,29)" rx="2" ry="2" />
<text  x="870.75" y="687.5" ></text>
</g>
<g >
<title>do_iter_write (2 samples, 0.05%)</title><rect x="46.7" y="725" width="0.6" height="15.0" fill="rgb(234,217,30)" rx="2" ry="2" />
<text  x="49.74" y="735.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.03%)</title><rect x="1189.7" y="757" width="0.3" height="15.0" fill="rgb(228,48,50)" rx="2" ry="2" />
<text  x="1192.70" y="767.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="1086.4" y="725" width="0.3" height="15.0" fill="rgb(235,163,53)" rx="2" ry="2" />
<text  x="1089.37" y="735.5" ></text>
</g>
<g >
<title>NaClValidateCode (2 samples, 0.05%)</title><rect x="1048.4" y="757" width="0.6" height="15.0" fill="rgb(215,31,52)" rx="2" ry="2" />
<text  x="1051.44" y="767.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.03%)</title><rect x="1047.5" y="693" width="0.3" height="15.0" fill="rgb(223,29,8)" rx="2" ry="2" />
<text  x="1050.54" y="703.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (2 samples, 0.05%)</title><rect x="1147.6" y="485" width="0.6" height="15.0" fill="rgb(242,122,24)" rx="2" ry="2" />
<text  x="1150.59" y="495.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.03%)</title><rect x="42.6" y="421" width="0.3" height="15.0" fill="rgb(211,154,5)" rx="2" ry="2" />
<text  x="45.55" y="431.5" ></text>
</g>
<g >
<title>__update_blocked_fair (5 samples, 0.13%)</title><rect x="1155.4" y="549" width="1.4" height="15.0" fill="rgb(210,130,45)" rx="2" ry="2" />
<text  x="1158.36" y="559.5" ></text>
</g>
<g >
<title>hrtimer_run_queues (1 samples, 0.03%)</title><rect x="1146.1" y="517" width="0.3" height="15.0" fill="rgb(248,213,4)" rx="2" ry="2" />
<text  x="1149.10" y="527.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (3 samples, 0.08%)</title><rect x="37.5" y="485" width="0.9" height="15.0" fill="rgb(226,160,16)" rx="2" ry="2" />
<text  x="40.48" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (14 samples, 0.35%)</title><rect x="642.9" y="613" width="4.1" height="15.0" fill="rgb(235,15,12)" rx="2" ry="2" />
<text  x="645.86" y="623.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (1 samples, 0.03%)</title><rect x="174.3" y="325" width="0.3" height="15.0" fill="rgb(246,27,30)" rx="2" ry="2" />
<text  x="177.26" y="335.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.03%)</title><rect x="1157.4" y="405" width="0.3" height="15.0" fill="rgb(220,177,44)" rx="2" ry="2" />
<text  x="1160.45" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt_r (1 samples, 0.03%)</title><rect x="159.9" y="533" width="0.3" height="15.0" fill="rgb(222,135,37)" rx="2" ry="2" />
<text  x="162.93" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.18%)</title><rect x="881.8" y="661" width="2.1" height="15.0" fill="rgb(221,124,21)" rx="2" ry="2" />
<text  x="884.78" y="671.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.03%)</title><rect x="174.3" y="277" width="0.3" height="15.0" fill="rgb(235,142,3)" rx="2" ry="2" />
<text  x="177.26" y="287.5" ></text>
</g>
<g >
<title>NaClXMutexLock (3 samples, 0.08%)</title><rect x="963.9" y="821" width="0.9" height="15.0" fill="rgb(244,28,45)" rx="2" ry="2" />
<text  x="966.92" y="831.5" ></text>
</g>
<g >
<title>get_acl.part.0 (1 samples, 0.03%)</title><rect x="159.9" y="261" width="0.3" height="15.0" fill="rgb(215,182,6)" rx="2" ry="2" />
<text  x="162.93" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (80 samples, 2.02%)</title><rect x="11.2" y="709" width="23.9" height="15.0" fill="rgb(206,52,43)" rx="2" ry="2" />
<text  x="14.19" y="719.5" >_..</text>
</g>
<g >
<title>__next_timer_interrupt (1 samples, 0.03%)</title><rect x="1119.2" y="613" width="0.3" height="15.0" fill="rgb(241,114,27)" rx="2" ry="2" />
<text  x="1122.22" y="623.5" ></text>
</g>
<g >
<title>update_cpu_capacity (1 samples, 0.03%)</title><rect x="1153.9" y="485" width="0.3" height="15.0" fill="rgb(249,79,54)" rx="2" ry="2" />
<text  x="1156.86" y="495.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (14 samples, 0.35%)</title><rect x="98.4" y="805" width="4.2" height="15.0" fill="rgb(213,33,22)" rx="2" ry="2" />
<text  x="101.40" y="815.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.03%)</title><rect x="36.0" y="549" width="0.3" height="15.0" fill="rgb(219,155,8)" rx="2" ry="2" />
<text  x="38.98" y="559.5" ></text>
</g>
<g >
<title>hrtimer_cancel (3 samples, 0.08%)</title><rect x="1188.8" y="693" width="0.9" height="15.0" fill="rgb(254,164,40)" rx="2" ry="2" />
<text  x="1191.81" y="703.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (2 samples, 0.05%)</title><rect x="848.0" y="645" width="0.6" height="15.0" fill="rgb(251,80,43)" rx="2" ry="2" />
<text  x="851.04" y="655.5" ></text>
</g>
<g >
<title>rcu_irq_enter (1 samples, 0.03%)</title><rect x="1157.7" y="629" width="0.3" height="15.0" fill="rgb(243,174,43)" rx="2" ry="2" />
<text  x="1160.74" y="639.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5 samples, 0.13%)</title><rect x="1118.3" y="725" width="1.5" height="15.0" fill="rgb(232,129,13)" rx="2" ry="2" />
<text  x="1121.32" y="735.5" ></text>
</g>
<g >
<title>__get_vma_policy (1 samples, 0.03%)</title><rect x="1019.2" y="725" width="0.3" height="15.0" fill="rgb(237,26,23)" rx="2" ry="2" />
<text  x="1022.17" y="735.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.03%)</title><rect x="1189.1" y="645" width="0.3" height="15.0" fill="rgb(227,109,43)" rx="2" ry="2" />
<text  x="1192.10" y="655.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.03%)</title><rect x="883.0" y="597" width="0.3" height="15.0" fill="rgb(232,205,12)" rx="2" ry="2" />
<text  x="885.98" y="607.5" ></text>
</g>
<g >
<title>reader_loop (2 samples, 0.05%)</title><rect x="10.0" y="805" width="0.6" height="15.0" fill="rgb(233,13,42)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.43%)</title><rect x="656.9" y="629" width="5.1" height="15.0" fill="rgb(214,24,49)" rx="2" ry="2" />
<text  x="659.89" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="161.4" y="677" width="0.3" height="15.0" fill="rgb(238,201,4)" rx="2" ry="2" />
<text  x="164.42" y="687.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (3 samples, 0.08%)</title><rect x="55.1" y="837" width="0.9" height="15.0" fill="rgb(253,134,14)" rx="2" ry="2" />
<text  x="58.10" y="847.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="833.7" y="565" width="0.3" height="15.0" fill="rgb(236,59,31)" rx="2" ry="2" />
<text  x="836.70" y="575.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.03%)</title><rect x="1086.7" y="773" width="0.3" height="15.0" fill="rgb(244,5,18)" rx="2" ry="2" />
<text  x="1089.66" y="783.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (1 samples, 0.03%)</title><rect x="1037.4" y="709" width="0.3" height="15.0" fill="rgb(246,95,20)" rx="2" ry="2" />
<text  x="1040.39" y="719.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (1 samples, 0.03%)</title><rect x="1150.6" y="629" width="0.3" height="15.0" fill="rgb(222,161,12)" rx="2" ry="2" />
<text  x="1153.58" y="639.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.03%)</title><rect x="1110.6" y="613" width="0.3" height="15.0" fill="rgb(216,145,31)" rx="2" ry="2" />
<text  x="1113.56" y="623.5" ></text>
</g>
<g >
<title>NaClCondVarTimedWaitRelative (1 samples, 0.03%)</title><rect x="564.0" y="773" width="0.3" height="15.0" fill="rgb(228,180,37)" rx="2" ry="2" />
<text  x="567.01" y="783.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.03%)</title><rect x="159.9" y="645" width="0.3" height="15.0" fill="rgb(229,218,19)" rx="2" ry="2" />
<text  x="162.93" y="655.5" ></text>
</g>
<g >
<title>serde_json::de::from_trait (1 samples, 0.03%)</title><rect x="1087.0" y="725" width="0.3" height="15.0" fill="rgb(249,136,54)" rx="2" ry="2" />
<text  x="1089.96" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1047.5" y="805" width="0.3" height="15.0" fill="rgb(221,181,2)" rx="2" ry="2" />
<text  x="1050.54" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (36 samples, 0.91%)</title><rect x="656.9" y="693" width="10.7" height="15.0" fill="rgb(210,220,53)" rx="2" ry="2" />
<text  x="659.89" y="703.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="1034.7" y="661" width="0.3" height="15.0" fill="rgb(239,20,15)" rx="2" ry="2" />
<text  x="1037.70" y="671.5" ></text>
</g>
<g >
<title>__libc_write (33 samples, 0.84%)</title><rect x="36.9" y="709" width="9.8" height="15.0" fill="rgb(228,17,40)" rx="2" ry="2" />
<text  x="39.88" y="719.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="1086.7" y="421" width="0.3" height="15.0" fill="rgb(251,143,33)" rx="2" ry="2" />
<text  x="1089.66" y="431.5" ></text>
</g>
<g >
<title>NaClSysWaitpid (2 samples, 0.05%)</title><rect x="563.7" y="805" width="0.6" height="15.0" fill="rgb(235,19,14)" rx="2" ry="2" />
<text  x="566.71" y="815.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (7 samples, 0.18%)</title><rect x="43.4" y="437" width="2.1" height="15.0" fill="rgb(246,144,46)" rx="2" ry="2" />
<text  x="46.45" y="447.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.03%)</title><rect x="161.4" y="565" width="0.3" height="15.0" fill="rgb(209,39,46)" rx="2" ry="2" />
<text  x="164.42" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.03%)</title><rect x="876.4" y="613" width="0.3" height="15.0" fill="rgb(222,206,32)" rx="2" ry="2" />
<text  x="879.41" y="623.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.03%)</title><rect x="172.5" y="373" width="0.3" height="15.0" fill="rgb(239,24,7)" rx="2" ry="2" />
<text  x="175.47" y="383.5" ></text>
</g>
<g >
<title>do_unlinkat (2 samples, 0.05%)</title><rect x="173.4" y="581" width="0.6" height="15.0" fill="rgb(230,160,25)" rx="2" ry="2" />
<text  x="176.37" y="591.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (17 samples, 0.43%)</title><rect x="89.1" y="789" width="5.1" height="15.0" fill="rgb(225,190,17)" rx="2" ry="2" />
<text  x="92.14" y="799.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.03%)</title><rect x="172.5" y="325" width="0.3" height="15.0" fill="rgb(254,94,6)" rx="2" ry="2" />
<text  x="175.47" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.03%)</title><rect x="159.9" y="661" width="0.3" height="15.0" fill="rgb(223,1,19)" rx="2" ry="2" />
<text  x="162.93" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="46.7" y="853" width="0.6" height="15.0" fill="rgb(246,144,43)" rx="2" ry="2" />
<text  x="49.74" y="863.5" ></text>
</g>
<g >
<title>next_zone (1 samples, 0.03%)</title><rect x="1140.4" y="725" width="0.3" height="15.0" fill="rgb(253,192,1)" rx="2" ry="2" />
<text  x="1143.42" y="735.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (2 samples, 0.05%)</title><rect x="172.8" y="677" width="0.6" height="15.0" fill="rgb(241,224,11)" rx="2" ry="2" />
<text  x="175.77" y="687.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (1 samples, 0.03%)</title><rect x="1055.6" y="789" width="0.3" height="15.0" fill="rgb(247,10,30)" rx="2" ry="2" />
<text  x="1058.60" y="799.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (1 samples, 0.03%)</title><rect x="1177.8" y="677" width="0.3" height="15.0" fill="rgb(223,141,5)" rx="2" ry="2" />
<text  x="1180.75" y="687.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.08%)</title><rect x="839.4" y="581" width="0.9" height="15.0" fill="rgb(206,54,40)" rx="2" ry="2" />
<text  x="842.37" y="591.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (4 samples, 0.10%)</title><rect x="686.8" y="597" width="1.2" height="15.0" fill="rgb(218,191,50)" rx="2" ry="2" />
<text  x="689.76" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (70 samples, 1.77%)</title><rect x="342.4" y="645" width="20.9" height="15.0" fill="rgb(242,149,33)" rx="2" ry="2" />
<text  x="345.41" y="655.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.03%)</title><rect x="174.3" y="309" width="0.3" height="15.0" fill="rgb(247,24,14)" rx="2" ry="2" />
<text  x="177.26" y="319.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.03%)</title><rect x="52.7" y="837" width="0.3" height="15.0" fill="rgb(217,28,45)" rx="2" ry="2" />
<text  x="55.71" y="847.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (6 samples, 0.15%)</title><rect x="172.8" y="821" width="1.8" height="15.0" fill="rgb(225,55,52)" rx="2" ry="2" />
<text  x="175.77" y="831.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (4 samples, 0.10%)</title><rect x="39.0" y="453" width="1.2" height="15.0" fill="rgb(228,197,49)" rx="2" ry="2" />
<text  x="41.97" y="463.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.03%)</title><rect x="564.0" y="549" width="0.3" height="15.0" fill="rgb(230,20,44)" rx="2" ry="2" />
<text  x="567.01" y="559.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.03%)</title><rect x="1185.2" y="709" width="0.3" height="15.0" fill="rgb(214,228,29)" rx="2" ry="2" />
<text  x="1188.22" y="719.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (28 samples, 0.71%)</title><rect x="94.2" y="837" width="8.4" height="15.0" fill="rgb(207,70,54)" rx="2" ry="2" />
<text  x="97.22" y="847.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1 samples, 0.03%)</title><rect x="1184.3" y="581" width="0.3" height="15.0" fill="rgb(214,83,31)" rx="2" ry="2" />
<text  x="1187.33" y="591.5" ></text>
</g>
<g >
<title>ret_from_fork (3 samples, 0.08%)</title><rect x="1116.5" y="853" width="0.9" height="15.0" fill="rgb(225,80,10)" rx="2" ry="2" />
<text  x="1119.53" y="863.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (1 samples, 0.03%)</title><rect x="43.2" y="437" width="0.2" height="15.0" fill="rgb(241,204,1)" rx="2" ry="2" />
<text  x="46.15" y="447.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.03%)</title><rect x="174.6" y="549" width="0.3" height="15.0" fill="rgb(233,70,28)" rx="2" ry="2" />
<text  x="177.56" y="559.5" ></text>
</g>
<g >
<title>record__mmap_read_all (33 samples, 0.84%)</title><rect x="36.9" y="805" width="9.8" height="15.0" fill="rgb(214,211,34)" rx="2" ry="2" />
<text  x="39.88" y="815.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (1 samples, 0.03%)</title><rect x="43.2" y="453" width="0.2" height="15.0" fill="rgb(245,220,38)" rx="2" ry="2" />
<text  x="46.15" y="463.5" ></text>
</g>
<g >
<title>Process0Operands (2 samples, 0.05%)</title><rect x="170.7" y="725" width="0.6" height="15.0" fill="rgb(209,0,31)" rx="2" ry="2" />
<text  x="173.68" y="735.5" ></text>
</g>
<g >
<title>update_blocked_averages (5 samples, 0.13%)</title><rect x="1155.4" y="565" width="1.4" height="15.0" fill="rgb(211,24,31)" rx="2" ry="2" />
<text  x="1158.36" y="575.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.03%)</title><rect x="1098.9" y="773" width="0.3" height="15.0" fill="rgb(229,6,16)" rx="2" ry="2" />
<text  x="1101.91" y="783.5" ></text>
</g>
<g >
<title>__get_user_pages (2 samples, 0.05%)</title><rect x="1046.9" y="661" width="0.6" height="15.0" fill="rgb(235,119,45)" rx="2" ry="2" />
<text  x="1049.94" y="671.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="564.0" y="645" width="0.3" height="15.0" fill="rgb(219,215,15)" rx="2" ry="2" />
<text  x="567.01" y="655.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.03%)</title><rect x="1152.7" y="533" width="0.3" height="15.0" fill="rgb(251,6,35)" rx="2" ry="2" />
<text  x="1155.67" y="543.5" ></text>
</g>
<g >
<title>irq_exit_rcu (21 samples, 0.53%)</title><rect x="1151.5" y="645" width="6.2" height="15.0" fill="rgb(249,158,14)" rx="2" ry="2" />
<text  x="1154.47" y="655.5" ></text>
</g>
<g >
<title>__find_get_block (1 samples, 0.03%)</title><rect x="45.2" y="341" width="0.3" height="15.0" fill="rgb(228,150,0)" rx="2" ry="2" />
<text  x="48.24" y="351.5" ></text>
</g>
<g >
<title>futex_wake (2 samples, 0.05%)</title><rect x="1115.3" y="789" width="0.6" height="15.0" fill="rgb(239,207,3)" rx="2" ry="2" />
<text  x="1118.34" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.03%)</title><rect x="174.6" y="501" width="0.3" height="15.0" fill="rgb(232,34,10)" rx="2" ry="2" />
<text  x="177.56" y="511.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (1 samples, 0.03%)</title><rect x="172.5" y="261" width="0.3" height="15.0" fill="rgb(211,207,4)" rx="2" ry="2" />
<text  x="175.47" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (4 samples, 0.10%)</title><rect x="686.8" y="581" width="1.2" height="15.0" fill="rgb(251,23,12)" rx="2" ry="2" />
<text  x="689.76" y="591.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 2.02%)</title><rect x="11.2" y="773" width="23.9" height="15.0" fill="rgb(230,221,18)" rx="2" ry="2" />
<text  x="14.19" y="783.5" >p..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="174.3" y="197" width="0.3" height="15.0" fill="rgb(208,96,16)" rx="2" ry="2" />
<text  x="177.26" y="207.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::is_initialized (1 samples, 0.03%)</title><rect x="637.8" y="613" width="0.3" height="15.0" fill="rgb(229,131,7)" rx="2" ry="2" />
<text  x="640.78" y="623.5" ></text>
</g>
<g >
<title>newidle_balance (3 samples, 0.08%)</title><rect x="35.4" y="613" width="0.9" height="15.0" fill="rgb(240,118,29)" rx="2" ry="2" />
<text  x="38.39" y="623.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (3 samples, 0.08%)</title><rect x="1030.8" y="725" width="0.9" height="15.0" fill="rgb(242,210,38)" rx="2" ry="2" />
<text  x="1033.81" y="735.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.05%)</title><rect x="46.7" y="789" width="0.6" height="15.0" fill="rgb(250,102,41)" rx="2" ry="2" />
<text  x="49.74" y="799.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.05%)</title><rect x="1188.2" y="709" width="0.6" height="15.0" fill="rgb(214,112,17)" rx="2" ry="2" />
<text  x="1191.21" y="719.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 1.62%)</title><rect x="15.7" y="485" width="19.1" height="15.0" fill="rgb(249,209,30)" rx="2" ry="2" />
<text  x="18.67" y="495.5" ></text>
</g>
<g >
<title>start_kernel (165 samples, 4.18%)</title><rect x="1140.7" y="805" width="49.3" height="15.0" fill="rgb(216,209,2)" rx="2" ry="2" />
<text  x="1143.72" y="815.5" >star..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4 samples, 0.10%)</title><rect x="1141.3" y="693" width="1.2" height="15.0" fill="rgb(224,70,33)" rx="2" ry="2" />
<text  x="1144.32" y="703.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (1 samples, 0.03%)</title><rect x="1087.0" y="357" width="0.3" height="15.0" fill="rgb(246,56,23)" rx="2" ry="2" />
<text  x="1089.96" y="367.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (23 samples, 0.58%)</title><rect x="932.0" y="757" width="6.8" height="15.0" fill="rgb(214,197,45)" rx="2" ry="2" />
<text  x="934.96" y="767.5" ></text>
</g>
<g >
<title>leave_mm (1 samples, 0.03%)</title><rect x="1178.7" y="693" width="0.2" height="15.0" fill="rgb(239,101,51)" rx="2" ry="2" />
<text  x="1181.65" y="703.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.03%)</title><rect x="564.0" y="581" width="0.3" height="15.0" fill="rgb(230,216,50)" rx="2" ry="2" />
<text  x="567.01" y="591.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.03%)</title><rect x="1047.2" y="437" width="0.3" height="15.0" fill="rgb(239,83,11)" rx="2" ry="2" />
<text  x="1050.24" y="447.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.03%)</title><rect x="174.0" y="133" width="0.3" height="15.0" fill="rgb(240,33,12)" rx="2" ry="2" />
<text  x="176.96" y="143.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.20%)</title><rect x="840.6" y="565" width="2.4" height="15.0" fill="rgb(225,223,29)" rx="2" ry="2" />
<text  x="843.57" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (2 samples, 0.05%)</title><rect x="1184.0" y="693" width="0.6" height="15.0" fill="rgb(234,20,35)" rx="2" ry="2" />
<text  x="1187.03" y="703.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.03%)</title><rect x="1186.7" y="613" width="0.3" height="15.0" fill="rgb(249,22,40)" rx="2" ry="2" />
<text  x="1189.71" y="623.5" ></text>
</g>
<g >
<title>irq_work_tick (2 samples, 0.05%)</title><rect x="1146.4" y="517" width="0.6" height="15.0" fill="rgb(251,1,16)" rx="2" ry="2" />
<text  x="1149.40" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.03%)</title><rect x="159.9" y="453" width="0.3" height="15.0" fill="rgb(211,87,3)" rx="2" ry="2" />
<text  x="162.93" y="463.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="1143.1" y="661" width="0.3" height="15.0" fill="rgb(213,30,9)" rx="2" ry="2" />
<text  x="1146.11" y="671.5" ></text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.03%)</title><rect x="1047.2" y="501" width="0.3" height="15.0" fill="rgb(246,112,7)" rx="2" ry="2" />
<text  x="1050.24" y="511.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (48 samples, 1.21%)</title><rect x="667.6" y="661" width="14.4" height="15.0" fill="rgb(252,131,45)" rx="2" ry="2" />
<text  x="670.65" y="671.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2,876 samples, 72.79%)</title><rect x="105.9" y="837" width="858.9" height="15.0" fill="rgb(235,125,1)" rx="2" ry="2" />
<text  x="108.87" y="847.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.03%)</title><rect x="1047.5" y="725" width="0.3" height="15.0" fill="rgb(214,120,25)" rx="2" ry="2" />
<text  x="1050.54" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (2 samples, 0.05%)</title><rect x="174.0" y="629" width="0.6" height="15.0" fill="rgb(205,6,6)" rx="2" ry="2" />
<text  x="176.96" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="1115.9" y="757" width="0.3" height="15.0" fill="rgb(221,56,42)" rx="2" ry="2" />
<text  x="1118.93" y="767.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (1 samples, 0.03%)</title><rect x="845.6" y="565" width="0.3" height="15.0" fill="rgb(249,0,36)" rx="2" ry="2" />
<text  x="848.65" y="575.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (41 samples, 1.04%)</title><rect x="160.2" y="821" width="12.3" height="15.0" fill="rgb(215,208,1)" rx="2" ry="2" />
<text  x="163.23" y="831.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (23 samples, 0.58%)</title><rect x="924.8" y="757" width="6.9" height="15.0" fill="rgb(229,61,9)" rx="2" ry="2" />
<text  x="927.79" y="767.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.03%)</title><rect x="1086.7" y="789" width="0.3" height="15.0" fill="rgb(225,129,29)" rx="2" ry="2" />
<text  x="1089.66" y="799.5" ></text>
</g>
<g >
<title>NaClSysRead (1,301 samples, 32.93%)</title><rect x="175.2" y="805" width="388.5" height="15.0" fill="rgb(238,83,33)" rx="2" ry="2" />
<text  x="178.16" y="815.5" >NaClSysRead</text>
</g>
<g >
<title>_cond_resched (1 samples, 0.03%)</title><rect x="1014.4" y="789" width="0.3" height="15.0" fill="rgb(232,158,0)" rx="2" ry="2" />
<text  x="1017.39" y="799.5" ></text>
</g>
<g >
<title>std::sync::once::Once::is_completed (1 samples, 0.03%)</title><rect x="637.8" y="597" width="0.3" height="15.0" fill="rgb(248,157,17)" rx="2" ry="2" />
<text  x="640.78" y="607.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.03%)</title><rect x="174.6" y="357" width="0.3" height="15.0" fill="rgb(234,121,45)" rx="2" ry="2" />
<text  x="177.56" y="367.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.03%)</title><rect x="1115.0" y="629" width="0.3" height="15.0" fill="rgb(246,148,10)" rx="2" ry="2" />
<text  x="1118.04" y="639.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="1103.4" y="565" width="0.3" height="15.0" fill="rgb(253,116,44)" rx="2" ry="2" />
<text  x="1106.39" y="575.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.03%)</title><rect x="174.6" y="293" width="0.3" height="15.0" fill="rgb(250,183,8)" rx="2" ry="2" />
<text  x="177.56" y="303.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.03%)</title><rect x="1110.6" y="581" width="0.3" height="15.0" fill="rgb(252,121,44)" rx="2" ry="2" />
<text  x="1113.56" y="591.5" ></text>
</g>
<g >
<title>generic_perform_write (32 samples, 0.81%)</title><rect x="37.2" y="501" width="9.5" height="15.0" fill="rgb(216,46,1)" rx="2" ry="2" />
<text  x="40.18" y="511.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.03%)</title><rect x="1115.0" y="741" width="0.3" height="15.0" fill="rgb(241,186,21)" rx="2" ry="2" />
<text  x="1118.04" y="751.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1 samples, 0.03%)</title><rect x="1149.4" y="565" width="0.3" height="15.0" fill="rgb(224,56,19)" rx="2" ry="2" />
<text  x="1152.38" y="575.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.05%)</title><rect x="46.7" y="773" width="0.6" height="15.0" fill="rgb(216,157,41)" rx="2" ry="2" />
<text  x="49.74" y="783.5" ></text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.05%)</title><rect x="868.3" y="629" width="0.6" height="15.0" fill="rgb(242,66,49)" rx="2" ry="2" />
<text  x="871.34" y="639.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.03%)</title><rect x="1187.0" y="661" width="0.3" height="15.0" fill="rgb(236,74,11)" rx="2" ry="2" />
<text  x="1190.01" y="671.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (1 samples, 0.03%)</title><rect x="39.6" y="405" width="0.3" height="15.0" fill="rgb(233,188,26)" rx="2" ry="2" />
<text  x="42.57" y="415.5" ></text>
</g>
<g >
<title>create_empty_buffers (1 samples, 0.03%)</title><rect x="172.8" y="373" width="0.3" height="15.0" fill="rgb(241,54,44)" rx="2" ry="2" />
<text  x="175.77" y="383.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.03%)</title><rect x="1156.8" y="565" width="0.3" height="15.0" fill="rgb(226,80,10)" rx="2" ry="2" />
<text  x="1159.85" y="575.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.03%)</title><rect x="172.5" y="757" width="0.3" height="15.0" fill="rgb(236,55,15)" rx="2" ry="2" />
<text  x="175.47" y="767.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (1 samples, 0.03%)</title><rect x="1086.7" y="661" width="0.3" height="15.0" fill="rgb(223,6,22)" rx="2" ry="2" />
<text  x="1089.66" y="671.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.03%)</title><rect x="342.1" y="501" width="0.3" height="15.0" fill="rgb(241,14,37)" rx="2" ry="2" />
<text  x="345.11" y="511.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.03%)</title><rect x="1035.0" y="661" width="0.3" height="15.0" fill="rgb(242,115,53)" rx="2" ry="2" />
<text  x="1038.00" y="671.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.03%)</title><rect x="1153.3" y="501" width="0.3" height="15.0" fill="rgb(222,47,14)" rx="2" ry="2" />
<text  x="1156.26" y="511.5" ></text>
</g>
<g >
<title>__mem_cgroup_threshold (1 samples, 0.03%)</title><rect x="1037.7" y="693" width="0.3" height="15.0" fill="rgb(247,134,53)" rx="2" ry="2" />
<text  x="1040.68" y="703.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.03%)</title><rect x="342.1" y="469" width="0.3" height="15.0" fill="rgb(251,78,54)" rx="2" ry="2" />
<text  x="345.11" y="479.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.03%)</title><rect x="1152.7" y="517" width="0.3" height="15.0" fill="rgb(229,14,43)" rx="2" ry="2" />
<text  x="1155.67" y="527.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.03%)</title><rect x="342.1" y="549" width="0.3" height="15.0" fill="rgb(225,77,18)" rx="2" ry="2" />
<text  x="345.11" y="559.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.03%)</title><rect x="562.8" y="693" width="0.3" height="15.0" fill="rgb(232,166,32)" rx="2" ry="2" />
<text  x="565.82" y="703.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.05%)</title><rect x="1055.3" y="837" width="0.6" height="15.0" fill="rgb(240,114,33)" rx="2" ry="2" />
<text  x="1058.30" y="847.5" ></text>
</g>
<g >
<title>do_iter_read (1 samples, 0.03%)</title><rect x="174.6" y="405" width="0.3" height="15.0" fill="rgb(252,208,44)" rx="2" ry="2" />
<text  x="177.56" y="415.5" ></text>
</g>
<g >
<title>read_command (1 samples, 0.03%)</title><rect x="10.3" y="789" width="0.3" height="15.0" fill="rgb(214,141,41)" rx="2" ry="2" />
<text  x="13.30" y="799.5" ></text>
</g>
<g >
<title>[perf-36112.map] (1 samples, 0.03%)</title><rect x="104.1" y="853" width="0.3" height="15.0" fill="rgb(243,59,29)" rx="2" ry="2" />
<text  x="107.08" y="863.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (809 samples, 20.48%)</title><rect x="633.3" y="709" width="241.6" height="15.0" fill="rgb(215,153,23)" rx="2" ry="2" />
<text  x="636.30" y="719.5" >rustposix::safeposix::syscalls::..</text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.03%)</title><rect x="1178.9" y="693" width="0.3" height="15.0" fill="rgb(223,36,4)" rx="2" ry="2" />
<text  x="1181.95" y="703.5" ></text>
</g>
<g >
<title>irqentry_exit (2 samples, 0.05%)</title><rect x="1042.5" y="805" width="0.6" height="15.0" fill="rgb(238,33,17)" rx="2" ry="2" />
<text  x="1045.46" y="815.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (26 samples, 0.66%)</title><rect x="207.7" y="677" width="7.8" height="15.0" fill="rgb(238,167,45)" rx="2" ry="2" />
<text  x="210.71" y="687.5" ></text>
</g>
<g >
<title>put_ctx (1 samples, 0.03%)</title><rect x="34.8" y="693" width="0.3" height="15.0" fill="rgb(249,210,2)" rx="2" ry="2" />
<text  x="37.79" y="703.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.05%)</title><rect x="1046.9" y="613" width="0.6" height="15.0" fill="rgb(245,161,15)" rx="2" ry="2" />
<text  x="1049.94" y="623.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (12 samples, 0.30%)</title><rect x="124.7" y="805" width="3.6" height="15.0" fill="rgb(214,121,11)" rx="2" ry="2" />
<text  x="127.68" y="815.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.03%)</title><rect x="1087.3" y="789" width="0.3" height="15.0" fill="rgb(237,170,37)" rx="2" ry="2" />
<text  x="1090.26" y="799.5" ></text>
</g>
<g >
<title>NaClForkThreadContextSetup (1 samples, 0.03%)</title><rect x="174.9" y="757" width="0.3" height="15.0" fill="rgb(208,199,34)" rx="2" ry="2" />
<text  x="177.86" y="767.5" ></text>
</g>
<g >
<title>sel_ldr (3,561 samples, 90.13%)</title><rect x="47.3" y="869" width="1063.6" height="15.0" fill="rgb(213,146,37)" rx="2" ry="2" />
<text  x="50.33" y="879.5" >sel_ldr</text>
</g>
<g >
<title>jbd2_journal_stop (3 samples, 0.08%)</title><rect x="42.0" y="453" width="0.9" height="15.0" fill="rgb(251,225,30)" rx="2" ry="2" />
<text  x="44.96" y="463.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.03%)</title><rect x="172.5" y="405" width="0.3" height="15.0" fill="rgb(236,207,2)" rx="2" ry="2" />
<text  x="175.47" y="415.5" ></text>
</g>
<g >
<title>nohz_csd_func (1 samples, 0.03%)</title><rect x="1185.5" y="709" width="0.3" height="15.0" fill="rgb(254,28,15)" rx="2" ry="2" />
<text  x="1188.52" y="719.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.03%)</title><rect x="1087.0" y="389" width="0.3" height="15.0" fill="rgb(219,92,50)" rx="2" ry="2" />
<text  x="1089.96" y="399.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (4 samples, 0.10%)</title><rect x="601.0" y="757" width="1.2" height="15.0" fill="rgb(212,94,33)" rx="2" ry="2" />
<text  x="604.05" y="767.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.03%)</title><rect x="159.9" y="789" width="0.3" height="15.0" fill="rgb(228,118,46)" rx="2" ry="2" />
<text  x="162.93" y="799.5" ></text>
</g>
<g >
<title>handle_pte_fault (77 samples, 1.95%)</title><rect x="1018.3" y="757" width="23.0" height="15.0" fill="rgb(213,75,12)" rx="2" ry="2" />
<text  x="1021.27" y="767.5" >h..</text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.10%)</title><rect x="839.1" y="613" width="1.2" height="15.0" fill="rgb(250,51,13)" rx="2" ry="2" />
<text  x="842.08" y="623.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="882.1" y="629" width="1.2" height="15.0" fill="rgb(222,205,1)" rx="2" ry="2" />
<text  x="885.08" y="639.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="564.0" y="597" width="0.3" height="15.0" fill="rgb(209,55,1)" rx="2" ry="2" />
<text  x="567.01" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="36.6" y="741" width="0.3" height="15.0" fill="rgb(229,184,11)" rx="2" ry="2" />
<text  x="39.58" y="751.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (12 samples, 0.30%)</title><rect x="199.9" y="677" width="3.6" height="15.0" fill="rgb(208,63,40)" rx="2" ry="2" />
<text  x="202.95" y="687.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.03%)</title><rect x="1140.1" y="773" width="0.3" height="15.0" fill="rgb(219,169,32)" rx="2" ry="2" />
<text  x="1143.12" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (33 samples, 0.84%)</title><rect x="647.0" y="629" width="9.9" height="15.0" fill="rgb(253,210,2)" rx="2" ry="2" />
<text  x="650.04" y="639.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (2 samples, 0.05%)</title><rect x="1018.3" y="741" width="0.6" height="15.0" fill="rgb(207,155,48)" rx="2" ry="2" />
<text  x="1021.27" y="751.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (9 samples, 0.23%)</title><rect x="844.5" y="597" width="2.6" height="15.0" fill="rgb(235,95,26)" rx="2" ry="2" />
<text  x="847.45" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (98 samples, 2.48%)</title><rect x="417.1" y="629" width="29.2" height="15.0" fill="rgb(236,170,9)" rx="2" ry="2" />
<text  x="420.07" y="639.5" >co..</text>
</g>
<g >
<title>read_tsc (1 samples, 0.03%)</title><rect x="1149.7" y="565" width="0.3" height="15.0" fill="rgb(249,58,23)" rx="2" ry="2" />
<text  x="1152.68" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (33 samples, 0.84%)</title><rect x="36.9" y="677" width="9.8" height="15.0" fill="rgb(246,39,14)" rx="2" ry="2" />
<text  x="39.88" y="687.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (2 samples, 0.05%)</title><rect x="1119.2" y="629" width="0.6" height="15.0" fill="rgb(212,112,37)" rx="2" ry="2" />
<text  x="1122.22" y="639.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (75 samples, 1.90%)</title><rect x="1117.7" y="757" width="22.4" height="15.0" fill="rgb(233,159,22)" rx="2" ry="2" />
<text  x="1120.72" y="767.5" >c..</text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (61 samples, 1.54%)</title><rect x="829.8" y="693" width="18.2" height="15.0" fill="rgb(232,74,24)" rx="2" ry="2" />
<text  x="832.82" y="703.5" ></text>
</g>
<g >
<title>CachedMapWritableText (2 samples, 0.05%)</title><rect x="161.1" y="757" width="0.6" height="15.0" fill="rgb(207,100,9)" rx="2" ry="2" />
<text  x="164.12" y="767.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (34 samples, 0.86%)</title><rect x="161.7" y="757" width="10.2" height="15.0" fill="rgb(216,104,53)" rx="2" ry="2" />
<text  x="164.72" y="767.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.05%)</title><rect x="1118.6" y="629" width="0.6" height="15.0" fill="rgb(213,84,5)" rx="2" ry="2" />
<text  x="1121.62" y="639.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.03%)</title><rect x="1087.0" y="645" width="0.3" height="15.0" fill="rgb(217,88,13)" rx="2" ry="2" />
<text  x="1089.96" y="655.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.03%)</title><rect x="1086.7" y="229" width="0.3" height="15.0" fill="rgb(240,139,44)" rx="2" ry="2" />
<text  x="1089.66" y="239.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (9 samples, 0.23%)</title><rect x="840.3" y="597" width="2.7" height="15.0" fill="rgb(254,54,26)" rx="2" ry="2" />
<text  x="843.27" y="607.5" ></text>
</g>
<g >
<title>rebalance_domains (10 samples, 0.25%)</title><rect x="1152.4" y="565" width="3.0" height="15.0" fill="rgb(222,132,28)" rx="2" ry="2" />
<text  x="1155.37" y="575.5" ></text>
</g>
<g >
<title>fdarray__poll (5 samples, 0.13%)</title><rect x="35.1" y="805" width="1.5" height="15.0" fill="rgb(247,5,52)" rx="2" ry="2" />
<text  x="38.09" y="815.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (26 samples, 0.66%)</title><rect x="860.0" y="629" width="7.7" height="15.0" fill="rgb(227,53,47)" rx="2" ry="2" />
<text  x="862.98" y="639.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (1 samples, 0.03%)</title><rect x="1110.3" y="629" width="0.3" height="15.0" fill="rgb(242,86,50)" rx="2" ry="2" />
<text  x="1113.26" y="639.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.03%)</title><rect x="897.9" y="773" width="0.3" height="15.0" fill="rgb(229,140,9)" rx="2" ry="2" />
<text  x="900.91" y="783.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (65 samples, 1.65%)</title><rect x="1158.3" y="677" width="19.5" height="15.0" fill="rgb(249,151,20)" rx="2" ry="2" />
<text  x="1161.34" y="687.5" ></text>
</g>
<g >
<title>lind (3 samples, 0.08%)</title><rect x="10.0" y="869" width="0.9" height="15.0" fill="rgb(247,206,22)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 1.19%)</title><rect x="642.9" y="677" width="14.0" height="15.0" fill="rgb(215,149,33)" rx="2" ry="2" />
<text  x="645.86" y="687.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.03%)</title><rect x="174.0" y="341" width="0.3" height="15.0" fill="rgb(236,44,36)" rx="2" ry="2" />
<text  x="176.96" y="351.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="1157.4" y="469" width="0.3" height="15.0" fill="rgb(221,22,40)" rx="2" ry="2" />
<text  x="1160.45" y="479.5" ></text>
</g>
<g >
<title>generic_permission (1 samples, 0.03%)</title><rect x="173.4" y="469" width="0.3" height="15.0" fill="rgb(250,75,47)" rx="2" ry="2" />
<text  x="176.37" y="479.5" ></text>
</g>
<g >
<title>[sel_ldr] (2,881 samples, 72.92%)</title><rect x="104.4" y="853" width="860.4" height="15.0" fill="rgb(251,228,7)" rx="2" ry="2" />
<text  x="107.38" y="863.5" >[sel_ldr]</text>
</g>
<g >
<title>do_iter_write (1 samples, 0.03%)</title><rect x="172.5" y="389" width="0.3" height="15.0" fill="rgb(253,117,33)" rx="2" ry="2" />
<text  x="175.47" y="399.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.03%)</title><rect x="1157.4" y="501" width="0.3" height="15.0" fill="rgb(222,129,45)" rx="2" ry="2" />
<text  x="1160.45" y="511.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.03%)</title><rect x="1087.0" y="629" width="0.3" height="15.0" fill="rgb(219,225,46)" rx="2" ry="2" />
<text  x="1089.96" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (4 samples, 0.10%)</title><rect x="102.9" y="837" width="1.2" height="15.0" fill="rgb(209,89,42)" rx="2" ry="2" />
<text  x="105.88" y="847.5" ></text>
</g>
<g >
<title>ovl_write_iter (2 samples, 0.05%)</title><rect x="172.8" y="517" width="0.6" height="15.0" fill="rgb(249,44,45)" rx="2" ry="2" />
<text  x="175.77" y="527.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4 samples, 0.10%)</title><rect x="45.5" y="469" width="1.2" height="15.0" fill="rgb(246,43,33)" rx="2" ry="2" />
<text  x="48.54" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::pread_syscall (1 samples, 0.03%)</title><rect x="174.6" y="629" width="0.3" height="15.0" fill="rgb(216,20,6)" rx="2" ry="2" />
<text  x="177.56" y="639.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="36.6" y="693" width="0.3" height="15.0" fill="rgb(232,89,0)" rx="2" ry="2" />
<text  x="39.58" y="703.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (2 samples, 0.05%)</title><rect x="1086.7" y="805" width="0.6" height="15.0" fill="rgb(231,192,16)" rx="2" ry="2" />
<text  x="1089.66" y="815.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.03%)</title><rect x="1087.0" y="261" width="0.3" height="15.0" fill="rgb(243,136,16)" rx="2" ry="2" />
<text  x="1089.96" y="271.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.03%)</title><rect x="1115.9" y="821" width="0.3" height="15.0" fill="rgb(225,129,6)" rx="2" ry="2" />
<text  x="1118.93" y="831.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (1 samples, 0.03%)</title><rect x="57.5" y="837" width="0.3" height="15.0" fill="rgb(239,88,0)" rx="2" ry="2" />
<text  x="60.49" y="847.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (5 samples, 0.13%)</title><rect x="215.5" y="661" width="1.5" height="15.0" fill="rgb(248,137,11)" rx="2" ry="2" />
<text  x="218.48" y="671.5" ></text>
</g>
<g >
<title>NaClValidateCode (34 samples, 0.86%)</title><rect x="161.7" y="773" width="10.2" height="15.0" fill="rgb(208,64,37)" rx="2" ry="2" />
<text  x="164.72" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (3 samples, 0.08%)</title><rect x="102.9" y="773" width="0.9" height="15.0" fill="rgb(253,203,38)" rx="2" ry="2" />
<text  x="105.88" y="783.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (22 samples, 0.56%)</title><rect x="556.2" y="645" width="6.6" height="15.0" fill="rgb(215,23,23)" rx="2" ry="2" />
<text  x="559.25" y="655.5" ></text>
</g>
<g >
<title>alloc_pages_vma (38 samples, 0.96%)</title><rect x="1019.5" y="725" width="11.3" height="15.0" fill="rgb(254,112,10)" rx="2" ry="2" />
<text  x="1022.47" y="735.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1 samples, 0.03%)</title><rect x="105.6" y="837" width="0.3" height="15.0" fill="rgb(211,31,34)" rx="2" ry="2" />
<text  x="108.57" y="847.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (2 samples, 0.05%)</title><rect x="1046.9" y="693" width="0.6" height="15.0" fill="rgb(237,75,38)" rx="2" ry="2" />
<text  x="1049.94" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.03%)</title><rect x="72.7" y="757" width="0.3" height="15.0" fill="rgb(254,38,26)" rx="2" ry="2" />
<text  x="75.72" y="767.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize::MapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.03%)</title><rect x="1087.0" y="581" width="0.3" height="15.0" fill="rgb(246,71,47)" rx="2" ry="2" />
<text  x="1089.96" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (2 samples, 0.05%)</title><rect x="173.4" y="661" width="0.6" height="15.0" fill="rgb(213,95,33)" rx="2" ry="2" />
<text  x="176.37" y="671.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="637.8" y="629" width="0.3" height="15.0" fill="rgb(225,153,53)" rx="2" ry="2" />
<text  x="640.78" y="639.5" ></text>
</g>
<g >
<title>NaClSysWrite (3 samples, 0.08%)</title><rect x="564.3" y="821" width="0.9" height="15.0" fill="rgb(210,191,25)" rx="2" ry="2" />
<text  x="567.31" y="831.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1 samples, 0.03%)</title><rect x="150.4" y="821" width="0.3" height="15.0" fill="rgb(218,180,17)" rx="2" ry="2" />
<text  x="153.37" y="831.5" ></text>
</g>
<g >
<title>shmem_fault (2 samples, 0.05%)</title><rect x="1046.9" y="549" width="0.6" height="15.0" fill="rgb(219,25,34)" rx="2" ry="2" />
<text  x="1049.94" y="559.5" ></text>
</g>
<g >
<title>__cmd_record (119 samples, 3.01%)</title><rect x="11.2" y="821" width="35.5" height="15.0" fill="rgb(229,51,42)" rx="2" ry="2" />
<text  x="14.19" y="831.5" >__c..</text>
</g>
<g >
<title>do_idle (78 samples, 1.97%)</title><rect x="1117.4" y="805" width="23.3" height="15.0" fill="rgb(225,166,43)" rx="2" ry="2" />
<text  x="1120.43" y="815.5" >d..</text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (30 samples, 0.76%)</title><rect x="874.9" y="725" width="9.0" height="15.0" fill="rgb(218,71,26)" rx="2" ry="2" />
<text  x="877.92" y="735.5" ></text>
</g>
<g >
<title>ext4_rename2 (1 samples, 0.03%)</title><rect x="173.7" y="469" width="0.3" height="15.0" fill="rgb(248,221,53)" rx="2" ry="2" />
<text  x="176.66" y="479.5" ></text>
</g>
<g >
<title>core::cmp::min (14 samples, 0.35%)</title><rect x="203.5" y="677" width="4.2" height="15.0" fill="rgb(222,144,13)" rx="2" ry="2" />
<text  x="206.53" y="687.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.05%)</title><rect x="40.8" y="405" width="0.6" height="15.0" fill="rgb(217,26,8)" rx="2" ry="2" />
<text  x="43.76" y="415.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.03%)</title><rect x="1184.3" y="629" width="0.3" height="15.0" fill="rgb(226,143,39)" rx="2" ry="2" />
<text  x="1187.33" y="639.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (1 samples, 0.03%)</title><rect x="1140.4" y="757" width="0.3" height="15.0" fill="rgb(245,145,35)" rx="2" ry="2" />
<text  x="1143.42" y="767.5" ></text>
</g>
<g >
<title>do_user_addr_fault (95 samples, 2.40%)</title><rect x="1014.1" y="805" width="28.4" height="15.0" fill="rgb(244,192,5)" rx="2" ry="2" />
<text  x="1017.09" y="815.5" >do..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.05%)</title><rect x="174.0" y="437" width="0.6" height="15.0" fill="rgb(241,180,9)" rx="2" ry="2" />
<text  x="176.96" y="447.5" ></text>
</g>
<g >
<title>read_hpet (1 samples, 0.03%)</title><rect x="1119.5" y="581" width="0.3" height="15.0" fill="rgb(237,82,11)" rx="2" ry="2" />
<text  x="1122.52" y="591.5" ></text>
</g>
<g >
<title>__schedule (7 samples, 0.18%)</title><rect x="1185.8" y="709" width="2.1" height="15.0" fill="rgb(218,105,25)" rx="2" ry="2" />
<text  x="1188.82" y="719.5" ></text>
</g>
<g >
<title>process_vm_rw (2 samples, 0.05%)</title><rect x="1046.9" y="741" width="0.6" height="15.0" fill="rgb(249,91,11)" rx="2" ry="2" />
<text  x="1049.94" y="751.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.03%)</title><rect x="1102.2" y="549" width="0.3" height="15.0" fill="rgb(232,206,25)" rx="2" ry="2" />
<text  x="1105.19" y="559.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (12 samples, 0.30%)</title><rect x="38.4" y="485" width="3.6" height="15.0" fill="rgb(240,196,53)" rx="2" ry="2" />
<text  x="41.37" y="495.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.03%)</title><rect x="172.5" y="741" width="0.3" height="15.0" fill="rgb(232,0,12)" rx="2" ry="2" />
<text  x="175.47" y="751.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (49 samples, 1.24%)</title><rect x="1143.4" y="661" width="14.6" height="15.0" fill="rgb(235,176,41)" rx="2" ry="2" />
<text  x="1146.41" y="671.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.03%)</title><rect x="172.5" y="421" width="0.3" height="15.0" fill="rgb(246,195,29)" rx="2" ry="2" />
<text  x="175.47" y="431.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.03%)</title><rect x="36.3" y="677" width="0.3" height="15.0" fill="rgb(235,186,29)" rx="2" ry="2" />
<text  x="39.28" y="687.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.05%)</title><rect x="174.0" y="469" width="0.6" height="15.0" fill="rgb(231,214,44)" rx="2" ry="2" />
<text  x="176.96" y="479.5" ></text>
</g>
<g >
<title>get_zeroed_page (1 samples, 0.03%)</title><rect x="161.1" y="629" width="0.3" height="15.0" fill="rgb(214,92,11)" rx="2" ry="2" />
<text  x="164.12" y="639.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.03%)</title><rect x="161.1" y="613" width="0.3" height="15.0" fill="rgb(226,129,9)" rx="2" ry="2" />
<text  x="164.12" y="623.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (33 samples, 0.84%)</title><rect x="36.9" y="789" width="9.8" height="15.0" fill="rgb(251,160,5)" rx="2" ry="2" />
<text  x="39.88" y="799.5" ></text>
</g>
<g >
<title>__cmd_record (1 samples, 0.03%)</title><rect x="10.9" y="821" width="0.3" height="15.0" fill="rgb(233,166,35)" rx="2" ry="2" />
<text  x="13.90" y="831.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.03%)</title><rect x="1087.0" y="229" width="0.3" height="15.0" fill="rgb(224,141,29)" rx="2" ry="2" />
<text  x="1089.96" y="239.5" ></text>
</g>
<g >
<title>tick_nohz_restart (3 samples, 0.08%)</title><rect x="1188.8" y="709" width="0.9" height="15.0" fill="rgb(249,26,2)" rx="2" ry="2" />
<text  x="1191.81" y="719.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="883.3" y="629" width="0.6" height="15.0" fill="rgb(254,192,1)" rx="2" ry="2" />
<text  x="886.28" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.40%)</title><rect x="638.1" y="661" width="4.8" height="15.0" fill="rgb(243,148,23)" rx="2" ry="2" />
<text  x="641.08" y="671.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.35%)</title><rect x="834.0" y="581" width="4.2" height="15.0" fill="rgb(215,69,25)" rx="2" ry="2" />
<text  x="837.00" y="591.5" ></text>
</g>
<g >
<title>CompareAndSwap (49 samples, 1.24%)</title><rect x="135.7" y="805" width="14.7" height="15.0" fill="rgb(242,88,46)" rx="2" ry="2" />
<text  x="138.74" y="815.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.03%)</title><rect x="342.1" y="565" width="0.3" height="15.0" fill="rgb(209,31,32)" rx="2" ry="2" />
<text  x="345.11" y="575.5" ></text>
</g>
<g >
<title>_perf_event_enable (65 samples, 1.65%)</title><rect x="15.4" y="645" width="19.4" height="15.0" fill="rgb(222,148,46)" rx="2" ry="2" />
<text  x="18.38" y="655.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="1115.0" y="661" width="0.3" height="15.0" fill="rgb(238,96,25)" rx="2" ry="2" />
<text  x="1118.04" y="671.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::_open (1 samples, 0.03%)</title><rect x="159.9" y="581" width="0.3" height="15.0" fill="rgb(213,209,51)" rx="2" ry="2" />
<text  x="162.93" y="591.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.03%)</title><rect x="1186.7" y="645" width="0.3" height="15.0" fill="rgb(220,189,33)" rx="2" ry="2" />
<text  x="1189.71" y="655.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (1 samples, 0.03%)</title><rect x="39.9" y="405" width="0.3" height="15.0" fill="rgb(228,112,11)" rx="2" ry="2" />
<text  x="42.87" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="174.3" y="229" width="0.3" height="15.0" fill="rgb(217,204,50)" rx="2" ry="2" />
<text  x="177.26" y="239.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.03%)</title><rect x="1115.0" y="757" width="0.3" height="15.0" fill="rgb(214,205,29)" rx="2" ry="2" />
<text  x="1118.04" y="767.5" ></text>
</g>
<g >
<title>clear_page_erms (25 samples, 0.63%)</title><rect x="1022.2" y="661" width="7.4" height="15.0" fill="rgb(213,105,17)" rx="2" ry="2" />
<text  x="1025.15" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (6 samples, 0.15%)</title><rect x="172.8" y="709" width="1.8" height="15.0" fill="rgb(232,38,3)" rx="2" ry="2" />
<text  x="175.77" y="719.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.25%)</title><rect x="212.5" y="629" width="3.0" height="15.0" fill="rgb(249,21,29)" rx="2" ry="2" />
<text  x="215.49" y="639.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (159 samples, 4.02%)</title><rect x="775.5" y="645" width="47.4" height="15.0" fill="rgb(248,228,2)" rx="2" ry="2" />
<text  x="778.46" y="655.5" >ring..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.03%)</title><rect x="174.0" y="213" width="0.3" height="15.0" fill="rgb(236,43,21)" rx="2" ry="2" />
<text  x="176.96" y="223.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.03%)</title><rect x="1110.6" y="661" width="0.3" height="15.0" fill="rgb(242,140,43)" rx="2" ry="2" />
<text  x="1113.56" y="671.5" ></text>
</g>
<g >
<title>update_group_capacity (2 samples, 0.05%)</title><rect x="1153.6" y="501" width="0.6" height="15.0" fill="rgb(249,49,33)" rx="2" ry="2" />
<text  x="1156.56" y="511.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.25%)</title><rect x="212.5" y="613" width="3.0" height="15.0" fill="rgb(215,8,14)" rx="2" ry="2" />
<text  x="215.49" y="623.5" ></text>
</g>
<g >
<title>switch_fpu_return (1 samples, 0.03%)</title><rect x="1116.2" y="789" width="0.3" height="15.0" fill="rgb(253,176,46)" rx="2" ry="2" />
<text  x="1119.23" y="799.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (1 samples, 0.03%)</title><rect x="172.5" y="549" width="0.3" height="15.0" fill="rgb(206,85,45)" rx="2" ry="2" />
<text  x="175.47" y="559.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="342.1" y="629" width="0.3" height="15.0" fill="rgb(214,217,4)" rx="2" ry="2" />
<text  x="345.11" y="639.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.03%)</title><rect x="1087.0" y="693" width="0.3" height="15.0" fill="rgb(235,80,32)" rx="2" ry="2" />
<text  x="1089.96" y="703.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (78 samples, 1.97%)</title><rect x="1117.4" y="789" width="23.3" height="15.0" fill="rgb(246,195,40)" rx="2" ry="2" />
<text  x="1120.43" y="799.5" >c..</text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.03%)</title><rect x="1047.5" y="773" width="0.3" height="15.0" fill="rgb(237,165,2)" rx="2" ry="2" />
<text  x="1050.54" y="783.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (6 samples, 0.15%)</title><rect x="1153.0" y="517" width="1.8" height="15.0" fill="rgb(214,60,21)" rx="2" ry="2" />
<text  x="1155.97" y="527.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="342.1" y="613" width="0.3" height="15.0" fill="rgb(237,106,25)" rx="2" ry="2" />
<text  x="345.11" y="623.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (4 samples, 0.10%)</title><rect x="44.3" y="405" width="1.2" height="15.0" fill="rgb(249,84,27)" rx="2" ry="2" />
<text  x="47.35" y="415.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.03%)</title><rect x="1087.0" y="597" width="0.3" height="15.0" fill="rgb(253,24,3)" rx="2" ry="2" />
<text  x="1089.96" y="607.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (1 samples, 0.03%)</title><rect x="1115.9" y="805" width="0.3" height="15.0" fill="rgb(208,48,53)" rx="2" ry="2" />
<text  x="1118.93" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (48 samples, 1.21%)</title><rect x="667.6" y="693" width="14.4" height="15.0" fill="rgb(224,227,5)" rx="2" ry="2" />
<text  x="670.65" y="703.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.03%)</title><rect x="174.0" y="309" width="0.3" height="15.0" fill="rgb(214,211,46)" rx="2" ry="2" />
<text  x="176.96" y="319.5" ></text>
</g>
<g >
<title>NaClGetDescMu (1 samples, 0.03%)</title><rect x="563.4" y="773" width="0.3" height="15.0" fill="rgb(248,62,39)" rx="2" ry="2" />
<text  x="566.41" y="783.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (1 samples, 0.03%)</title><rect x="920.3" y="757" width="0.3" height="15.0" fill="rgb(221,75,8)" rx="2" ry="2" />
<text  x="923.31" y="767.5" ></text>
</g>
<g >
<title>record__write (33 samples, 0.84%)</title><rect x="36.9" y="741" width="9.8" height="15.0" fill="rgb(246,143,0)" rx="2" ry="2" />
<text  x="39.88" y="751.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.03%)</title><rect x="587.0" y="805" width="0.3" height="15.0" fill="rgb(205,38,29)" rx="2" ry="2" />
<text  x="590.01" y="815.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="1116.2" y="821" width="0.3" height="15.0" fill="rgb(243,96,20)" rx="2" ry="2" />
<text  x="1119.23" y="831.5" ></text>
</g>
<g >
<title>ext4_bread_batch (1 samples, 0.03%)</title><rect x="173.7" y="405" width="0.3" height="15.0" fill="rgb(222,55,8)" rx="2" ry="2" />
<text  x="176.66" y="415.5" ></text>
</g>
<g >
<title>rmqueue (4 samples, 0.10%)</title><rect x="1029.6" y="677" width="1.2" height="15.0" fill="rgb(235,83,13)" rx="2" ry="2" />
<text  x="1032.62" y="687.5" ></text>
</g>
<g >
<title>wake_affine (1 samples, 0.03%)</title><rect x="1115.6" y="725" width="0.3" height="15.0" fill="rgb(214,181,43)" rx="2" ry="2" />
<text  x="1118.63" y="735.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (50 samples, 1.27%)</title><rect x="1143.1" y="677" width="14.9" height="15.0" fill="rgb(222,229,25)" rx="2" ry="2" />
<text  x="1146.11" y="687.5" ></text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.03%)</title><rect x="1183.7" y="693" width="0.3" height="15.0" fill="rgb(225,170,6)" rx="2" ry="2" />
<text  x="1186.73" y="703.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.03%)</title><rect x="1187.0" y="645" width="0.3" height="15.0" fill="rgb(240,148,27)" rx="2" ry="2" />
<text  x="1190.01" y="655.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.05%)</title><rect x="1086.7" y="837" width="0.6" height="15.0" fill="rgb(249,223,24)" rx="2" ry="2" />
<text  x="1089.66" y="847.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (45 samples, 1.14%)</title><rect x="883.9" y="725" width="13.4" height="15.0" fill="rgb(213,109,31)" rx="2" ry="2" />
<text  x="886.87" y="735.5" ></text>
</g>
<g >
<title>find_next_and_bit (1 samples, 0.03%)</title><rect x="1154.5" y="469" width="0.3" height="15.0" fill="rgb(213,24,13)" rx="2" ry="2" />
<text  x="1157.46" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.03%)</title><rect x="174.6" y="645" width="0.3" height="15.0" fill="rgb(239,177,51)" rx="2" ry="2" />
<text  x="177.56" y="655.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (4 samples, 0.10%)</title><rect x="771.3" y="629" width="1.2" height="15.0" fill="rgb(237,172,50)" rx="2" ry="2" />
<text  x="774.28" y="639.5" ></text>
</g>
<g >
<title>posix_acl_create.part.0 (1 samples, 0.03%)</title><rect x="159.9" y="277" width="0.3" height="15.0" fill="rgb(243,103,29)" rx="2" ry="2" />
<text  x="162.93" y="287.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.03%)</title><rect x="1035.6" y="677" width="0.3" height="15.0" fill="rgb(236,166,3)" rx="2" ry="2" />
<text  x="1038.59" y="687.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.28%)</title><rect x="878.5" y="613" width="3.3" height="15.0" fill="rgb(220,91,31)" rx="2" ry="2" />
<text  x="881.50" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.03%)</title><rect x="1086.7" y="677" width="0.3" height="15.0" fill="rgb(251,150,4)" rx="2" ry="2" />
<text  x="1089.66" y="687.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (5 samples, 0.13%)</title><rect x="215.5" y="677" width="1.5" height="15.0" fill="rgb(207,168,52)" rx="2" ry="2" />
<text  x="218.48" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 2.02%)</title><rect x="11.2" y="741" width="23.9" height="15.0" fill="rgb(246,29,10)" rx="2" ry="2" />
<text  x="14.19" y="751.5" >e..</text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.03%)</title><rect x="1118.3" y="645" width="0.3" height="15.0" fill="rgb(251,74,17)" rx="2" ry="2" />
<text  x="1121.32" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="173.4" y="629" width="0.6" height="15.0" fill="rgb(219,162,35)" rx="2" ry="2" />
<text  x="176.37" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (4 samples, 0.10%)</title><rect x="1049.3" y="837" width="1.2" height="15.0" fill="rgb(211,217,52)" rx="2" ry="2" />
<text  x="1052.33" y="847.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (6 samples, 0.15%)</title><rect x="841.2" y="533" width="1.8" height="15.0" fill="rgb(220,203,17)" rx="2" ry="2" />
<text  x="844.17" y="543.5" ></text>
</g>
<g >
<title>process_one_work (3 samples, 0.08%)</title><rect x="1116.5" y="805" width="0.9" height="15.0" fill="rgb(254,62,41)" rx="2" ry="2" />
<text  x="1119.53" y="815.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (1 samples, 0.03%)</title><rect x="1086.7" y="181" width="0.3" height="15.0" fill="rgb(237,89,18)" rx="2" ry="2" />
<text  x="1089.66" y="191.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (39 samples, 0.99%)</title><rect x="160.2" y="789" width="11.7" height="15.0" fill="rgb(229,88,51)" rx="2" ry="2" />
<text  x="163.23" y="799.5" ></text>
</g>
<g >
<title>core::cmp::min (2 samples, 0.05%)</title><rect x="686.2" y="677" width="0.6" height="15.0" fill="rgb(250,70,47)" rx="2" ry="2" />
<text  x="689.16" y="687.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.25%)</title><rect x="634.8" y="693" width="3.0" height="15.0" fill="rgb(243,136,2)" rx="2" ry="2" />
<text  x="637.79" y="703.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.03%)</title><rect x="43.4" y="421" width="0.3" height="15.0" fill="rgb(236,10,35)" rx="2" ry="2" />
<text  x="46.45" y="431.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (2 samples, 0.05%)</title><rect x="174.0" y="549" width="0.6" height="15.0" fill="rgb(244,218,1)" rx="2" ry="2" />
<text  x="176.96" y="559.5" ></text>
</g>
<g >
<title>__ioctl (80 samples, 2.02%)</title><rect x="11.2" y="757" width="23.9" height="15.0" fill="rgb(243,1,40)" rx="2" ry="2" />
<text  x="14.19" y="767.5" >_..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (9 samples, 0.23%)</title><rect x="399.7" y="597" width="2.7" height="15.0" fill="rgb(230,139,54)" rx="2" ry="2" />
<text  x="402.75" y="607.5" ></text>
</g>
<g >
<title>__evlist__enable (80 samples, 2.02%)</title><rect x="11.2" y="805" width="23.9" height="15.0" fill="rgb(244,13,17)" rx="2" ry="2" />
<text  x="14.19" y="815.5" >_..</text>
</g>
<g >
<title>task_work_run (1 samples, 0.03%)</title><rect x="36.6" y="661" width="0.3" height="15.0" fill="rgb(240,54,48)" rx="2" ry="2" />
<text  x="39.58" y="671.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (61 samples, 1.54%)</title><rect x="829.8" y="677" width="18.2" height="15.0" fill="rgb(223,108,40)" rx="2" ry="2" />
<text  x="832.82" y="687.5" ></text>
</g>
<g >
<title>_raw_write_lock (1 samples, 0.03%)</title><rect x="39.3" y="405" width="0.3" height="15.0" fill="rgb(238,59,13)" rx="2" ry="2" />
<text  x="42.27" y="415.5" ></text>
</g>
<g >
<title>[[heap]] (1 samples, 0.03%)</title><rect x="47.9" y="853" width="0.3" height="15.0" fill="rgb(209,224,51)" rx="2" ry="2" />
<text  x="50.93" y="863.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (3 samples, 0.08%)</title><rect x="1040.4" y="725" width="0.9" height="15.0" fill="rgb(216,21,30)" rx="2" ry="2" />
<text  x="1043.37" y="735.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.03%)</title><rect x="72.7" y="789" width="0.3" height="15.0" fill="rgb(240,206,25)" rx="2" ry="2" />
<text  x="75.72" y="799.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.03%)</title><rect x="1087.0" y="181" width="0.3" height="15.0" fill="rgb(226,175,53)" rx="2" ry="2" />
<text  x="1089.96" y="191.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (24 samples, 0.61%)</title><rect x="409.9" y="629" width="7.2" height="15.0" fill="rgb(250,188,15)" rx="2" ry="2" />
<text  x="412.90" y="639.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (8 samples, 0.20%)</title><rect x="1083.1" y="837" width="2.4" height="15.0" fill="rgb(226,161,8)" rx="2" ry="2" />
<text  x="1086.08" y="847.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.35%)</title><rect x="642.9" y="629" width="4.1" height="15.0" fill="rgb(215,141,54)" rx="2" ry="2" />
<text  x="645.86" y="639.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (65 samples, 1.65%)</title><rect x="131.0" y="821" width="19.4" height="15.0" fill="rgb(254,135,3)" rx="2" ry="2" />
<text  x="133.96" y="831.5" ></text>
</g>
<g >
<title>lind_read (1,299 samples, 32.88%)</title><rect x="175.2" y="757" width="387.9" height="15.0" fill="rgb(229,180,44)" rx="2" ry="2" />
<text  x="178.16" y="767.5" >lind_read</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.28%)</title><rect x="615.7" y="709" width="3.3" height="15.0" fill="rgb(241,8,54)" rx="2" ry="2" />
<text  x="618.68" y="719.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.03%)</title><rect x="1047.2" y="469" width="0.3" height="15.0" fill="rgb(249,71,5)" rx="2" ry="2" />
<text  x="1050.24" y="479.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::VariantAccess&lt;R&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (1 samples, 0.03%)</title><rect x="1087.0" y="437" width="0.3" height="15.0" fill="rgb(240,34,39)" rx="2" ry="2" />
<text  x="1089.96" y="447.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (1,299 samples, 32.88%)</title><rect x="175.2" y="789" width="387.9" height="15.0" fill="rgb(238,85,31)" rx="2" ry="2" />
<text  x="178.16" y="799.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>lind_exit (6 samples, 0.15%)</title><rect x="172.8" y="789" width="1.8" height="15.0" fill="rgb(230,77,6)" rx="2" ry="2" />
<text  x="175.77" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="172.8" y="613" width="0.6" height="15.0" fill="rgb(233,225,44)" rx="2" ry="2" />
<text  x="175.77" y="623.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.05%)</title><rect x="174.0" y="533" width="0.6" height="15.0" fill="rgb(210,157,47)" rx="2" ry="2" />
<text  x="176.96" y="543.5" ></text>
</g>
<g >
<title>vfs_iter_read (1 samples, 0.03%)</title><rect x="174.6" y="421" width="0.3" height="15.0" fill="rgb(242,68,52)" rx="2" ry="2" />
<text  x="177.56" y="431.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.03%)</title><rect x="1115.0" y="677" width="0.3" height="15.0" fill="rgb(225,8,47)" rx="2" ry="2" />
<text  x="1118.04" y="687.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (3 samples, 0.08%)</title><rect x="1085.5" y="837" width="0.9" height="15.0" fill="rgb(233,53,50)" rx="2" ry="2" />
<text  x="1088.47" y="847.5" ></text>
</g>
<g >
<title>tick_program_event (4 samples, 0.10%)</title><rect x="1149.1" y="597" width="1.2" height="15.0" fill="rgb(220,140,33)" rx="2" ry="2" />
<text  x="1152.08" y="607.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.03%)</title><rect x="161.4" y="597" width="0.3" height="15.0" fill="rgb(210,26,46)" rx="2" ry="2" />
<text  x="164.42" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.03%)</title><rect x="161.4" y="661" width="0.3" height="15.0" fill="rgb(231,55,3)" rx="2" ry="2" />
<text  x="164.42" y="671.5" ></text>
</g>
<g >
<title>stop_this_handle (2 samples, 0.05%)</title><rect x="42.3" y="437" width="0.6" height="15.0" fill="rgb(235,49,48)" rx="2" ry="2" />
<text  x="45.26" y="447.5" ></text>
</g>
<g >
<title>NaClSysFork (2 samples, 0.05%)</title><rect x="174.6" y="805" width="0.6" height="15.0" fill="rgb(247,194,12)" rx="2" ry="2" />
<text  x="177.56" y="815.5" ></text>
</g>
<g >
<title>assign_array_from_string (1 samples, 0.03%)</title><rect x="10.0" y="725" width="0.3" height="15.0" fill="rgb(249,192,48)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.03%)</title><rect x="637.8" y="645" width="0.3" height="15.0" fill="rgb(229,144,3)" rx="2" ry="2" />
<text  x="640.78" y="655.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (34 samples, 0.86%)</title><rect x="161.7" y="741" width="10.2" height="15.0" fill="rgb(244,55,52)" rx="2" ry="2" />
<text  x="164.72" y="751.5" ></text>
</g>
<g >
<title>HandleStackContext (60 samples, 1.52%)</title><rect x="111.5" y="821" width="18.0" height="15.0" fill="rgb(205,148,19)" rx="2" ry="2" />
<text  x="114.54" y="831.5" ></text>
</g>
<g >
<title>DynArrayGet (5 samples, 0.13%)</title><rect x="940.3" y="757" width="1.5" height="15.0" fill="rgb(206,127,14)" rx="2" ry="2" />
<text  x="943.32" y="767.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (1 samples, 0.03%)</title><rect x="1087.0" y="469" width="0.3" height="15.0" fill="rgb(229,171,38)" rx="2" ry="2" />
<text  x="1089.96" y="479.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.03%)</title><rect x="877.9" y="661" width="0.3" height="15.0" fill="rgb(218,64,20)" rx="2" ry="2" />
<text  x="880.90" y="671.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.03%)</title><rect x="1086.7" y="437" width="0.3" height="15.0" fill="rgb(205,110,2)" rx="2" ry="2" />
<text  x="1089.66" y="447.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (2 samples, 0.05%)</title><rect x="35.7" y="597" width="0.6" height="15.0" fill="rgb(223,88,53)" rx="2" ry="2" />
<text  x="38.68" y="607.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.05%)</title><rect x="174.0" y="597" width="0.6" height="15.0" fill="rgb(253,171,44)" rx="2" ry="2" />
<text  x="176.96" y="607.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.03%)</title><rect x="1184.3" y="645" width="0.3" height="15.0" fill="rgb(247,61,19)" rx="2" ry="2" />
<text  x="1187.33" y="655.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.03%)</title><rect x="1110.3" y="677" width="0.3" height="15.0" fill="rgb(219,36,7)" rx="2" ry="2" />
<text  x="1113.26" y="687.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.03%)</title><rect x="159.9" y="709" width="0.3" height="15.0" fill="rgb(238,161,0)" rx="2" ry="2" />
<text  x="162.93" y="719.5" ></text>
</g>
<g >
<title>unmap_single_vma (37 samples, 0.94%)</title><rect x="1099.2" y="645" width="11.1" height="15.0" fill="rgb(243,67,48)" rx="2" ry="2" />
<text  x="1102.21" y="655.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.03%)</title><rect x="172.5" y="453" width="0.3" height="15.0" fill="rgb(224,155,15)" rx="2" ry="2" />
<text  x="175.47" y="463.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.03%)</title><rect x="1178.1" y="677" width="0.3" height="15.0" fill="rgb(231,104,40)" rx="2" ry="2" />
<text  x="1181.05" y="687.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.03%)</title><rect x="1183.4" y="693" width="0.3" height="15.0" fill="rgb(253,75,44)" rx="2" ry="2" />
<text  x="1186.43" y="703.5" ></text>
</g>
<g >
<title>do_shared_fault (2 samples, 0.05%)</title><rect x="1046.9" y="581" width="0.6" height="15.0" fill="rgb(238,145,2)" rx="2" ry="2" />
<text  x="1049.94" y="591.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (1 samples, 0.03%)</title><rect x="958.2" y="789" width="0.3" height="15.0" fill="rgb(246,111,52)" rx="2" ry="2" />
<text  x="961.24" y="799.5" ></text>
</g>
<g >
<title>down_read_trylock (2 samples, 0.05%)</title><rect x="1014.7" y="789" width="0.6" height="15.0" fill="rgb(215,90,47)" rx="2" ry="2" />
<text  x="1017.69" y="799.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.20%)</title><rect x="840.6" y="581" width="2.4" height="15.0" fill="rgb(245,1,33)" rx="2" ry="2" />
<text  x="843.57" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (48 samples, 1.21%)</title><rect x="667.6" y="645" width="14.4" height="15.0" fill="rgb(221,204,18)" rx="2" ry="2" />
<text  x="670.65" y="655.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.03%)</title><rect x="1157.4" y="517" width="0.3" height="15.0" fill="rgb(226,27,34)" rx="2" ry="2" />
<text  x="1160.45" y="527.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.03%)</title><rect x="1086.7" y="501" width="0.3" height="15.0" fill="rgb(209,118,7)" rx="2" ry="2" />
<text  x="1089.66" y="511.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.05%)</title><rect x="174.0" y="453" width="0.6" height="15.0" fill="rgb(250,78,9)" rx="2" ry="2" />
<text  x="176.96" y="463.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.03%)</title><rect x="1110.6" y="629" width="0.3" height="15.0" fill="rgb(216,84,16)" rx="2" ry="2" />
<text  x="1113.56" y="639.5" ></text>
</g>
<g >
<title>vfs_write (33 samples, 0.84%)</title><rect x="36.9" y="629" width="9.8" height="15.0" fill="rgb(254,216,2)" rx="2" ry="2" />
<text  x="39.88" y="639.5" ></text>
</g>
<g >
<title>follow_page_mask (1 samples, 0.03%)</title><rect x="1047.5" y="661" width="0.3" height="15.0" fill="rgb(239,168,22)" rx="2" ry="2" />
<text  x="1050.54" y="671.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.03%)</title><rect x="1086.7" y="565" width="0.3" height="15.0" fill="rgb(223,116,52)" rx="2" ry="2" />
<text  x="1089.66" y="575.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.03%)</title><rect x="172.5" y="437" width="0.3" height="15.0" fill="rgb(222,78,54)" rx="2" ry="2" />
<text  x="175.47" y="447.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (495 samples, 12.53%)</title><rect x="682.0" y="693" width="147.8" height="15.0" fill="rgb(210,206,5)" rx="2" ry="2" />
<text  x="684.98" y="703.5" >rustposix::interfa..</text>
</g>
<g >
<title>event_function (64 samples, 1.62%)</title><rect x="15.7" y="565" width="19.1" height="15.0" fill="rgb(230,15,29)" rx="2" ry="2" />
<text  x="18.67" y="575.5" ></text>
</g>
<g >
<title>cmd_record (119 samples, 3.01%)</title><rect x="11.2" y="837" width="35.5" height="15.0" fill="rgb(223,67,49)" rx="2" ry="2" />
<text  x="14.19" y="847.5" >cmd..</text>
</g>
<g >
<title>idle_cpu (1 samples, 0.03%)</title><rect x="1155.1" y="533" width="0.3" height="15.0" fill="rgb(230,44,35)" rx="2" ry="2" />
<text  x="1158.06" y="543.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.03%)</title><rect x="174.3" y="357" width="0.3" height="15.0" fill="rgb(239,54,6)" rx="2" ry="2" />
<text  x="177.26" y="367.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.03%)</title><rect x="1141.0" y="709" width="0.3" height="15.0" fill="rgb(232,22,34)" rx="2" ry="2" />
<text  x="1144.02" y="719.5" ></text>
</g>
<g >
<title>lookup_open.isra.0 (1 samples, 0.03%)</title><rect x="159.9" y="373" width="0.3" height="15.0" fill="rgb(233,83,42)" rx="2" ry="2" />
<text  x="162.93" y="383.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (1 samples, 0.03%)</title><rect x="172.8" y="293" width="0.3" height="15.0" fill="rgb(236,123,20)" rx="2" ry="2" />
<text  x="175.77" y="303.5" ></text>
</g>
<g >
<title>__remove_hrtimer (3 samples, 0.08%)</title><rect x="1188.8" y="661" width="0.9" height="15.0" fill="rgb(245,191,53)" rx="2" ry="2" />
<text  x="1191.81" y="671.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="1119.5" y="613" width="0.3" height="15.0" fill="rgb(224,53,0)" rx="2" ry="2" />
<text  x="1122.52" y="623.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="1013.5" y="821" width="0.3" height="15.0" fill="rgb(225,210,39)" rx="2" ry="2" />
<text  x="1016.49" y="831.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.03%)</title><rect x="1140.1" y="725" width="0.3" height="15.0" fill="rgb(253,161,26)" rx="2" ry="2" />
<text  x="1143.12" y="735.5" ></text>
</g>
<g >
<title>collect_signal (1 samples, 0.03%)</title><rect x="36.3" y="661" width="0.3" height="15.0" fill="rgb(240,107,20)" rx="2" ry="2" />
<text  x="39.28" y="671.5" ></text>
</g>
<g >
<title>alloc_buffer_head (1 samples, 0.03%)</title><rect x="172.8" y="341" width="0.3" height="15.0" fill="rgb(248,147,34)" rx="2" ry="2" />
<text  x="175.77" y="351.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.03%)</title><rect x="1157.4" y="437" width="0.3" height="15.0" fill="rgb(236,147,40)" rx="2" ry="2" />
<text  x="1160.45" y="447.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (164 samples, 4.15%)</title><rect x="774.0" y="661" width="48.9" height="15.0" fill="rgb(232,55,49)" rx="2" ry="2" />
<text  x="776.97" y="671.5" >ring..</text>
</g>
<g >
<title>cmd_record (1 samples, 0.03%)</title><rect x="10.9" y="837" width="0.3" height="15.0" fill="rgb(250,36,6)" rx="2" ry="2" />
<text  x="13.90" y="847.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (1 samples, 0.03%)</title><rect x="174.3" y="389" width="0.3" height="15.0" fill="rgb(248,127,20)" rx="2" ry="2" />
<text  x="177.26" y="399.5" ></text>
</g>
<g >
<title>up_read (3 samples, 0.08%)</title><rect x="1041.6" y="789" width="0.9" height="15.0" fill="rgb(206,223,43)" rx="2" ry="2" />
<text  x="1044.57" y="799.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (8 samples, 0.20%)</title><rect x="757.5" y="613" width="2.4" height="15.0" fill="rgb(235,200,33)" rx="2" ry="2" />
<text  x="760.54" y="623.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.03%)</title><rect x="1087.0" y="517" width="0.3" height="15.0" fill="rgb(248,141,24)" rx="2" ry="2" />
<text  x="1089.96" y="527.5" ></text>
</g>
<g >
<title>rcu_pending (1 samples, 0.03%)</title><rect x="1147.3" y="501" width="0.3" height="15.0" fill="rgb(232,64,38)" rx="2" ry="2" />
<text  x="1150.29" y="511.5" ></text>
</g>
<g >
<title>inode_permission (1 samples, 0.03%)</title><rect x="173.4" y="501" width="0.3" height="15.0" fill="rgb(231,137,49)" rx="2" ry="2" />
<text  x="176.37" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.05%)</title><rect x="867.7" y="613" width="0.6" height="15.0" fill="rgb(240,82,40)" rx="2" ry="2" />
<text  x="870.75" y="623.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.03%)</title><rect x="1110.6" y="517" width="0.3" height="15.0" fill="rgb(216,88,0)" rx="2" ry="2" />
<text  x="1113.56" y="527.5" ></text>
</g>
<g >
<title>copy_kernel_to_fpregs (1 samples, 0.03%)</title><rect x="1116.2" y="773" width="0.3" height="15.0" fill="rgb(253,105,40)" rx="2" ry="2" />
<text  x="1119.23" y="783.5" ></text>
</g>
<g >
<title>find_get_entries (1 samples, 0.03%)</title><rect x="1110.6" y="501" width="0.3" height="15.0" fill="rgb(231,59,35)" rx="2" ry="2" />
<text  x="1113.56" y="511.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (10 samples, 0.25%)</title><rect x="212.5" y="645" width="3.0" height="15.0" fill="rgb(233,28,47)" rx="2" ry="2" />
<text  x="215.49" y="655.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (20 samples, 0.51%)</title><rect x="1103.7" y="581" width="6.0" height="15.0" fill="rgb(253,146,9)" rx="2" ry="2" />
<text  x="1106.69" y="591.5" ></text>
</g>
<g >
<title>single_release (1 samples, 0.03%)</title><rect x="36.6" y="613" width="0.3" height="15.0" fill="rgb(237,144,18)" rx="2" ry="2" />
<text  x="39.58" y="623.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.03%)</title><rect x="161.1" y="709" width="0.3" height="15.0" fill="rgb(206,215,40)" rx="2" ry="2" />
<text  x="164.12" y="719.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (4 samples, 0.10%)</title><rect x="128.3" y="805" width="1.2" height="15.0" fill="rgb(236,54,27)" rx="2" ry="2" />
<text  x="131.27" y="815.5" ></text>
</g>
<g >
<title>end_page_writeback (1 samples, 0.03%)</title><rect x="1116.5" y="725" width="0.3" height="15.0" fill="rgb(207,193,33)" rx="2" ry="2" />
<text  x="1119.53" y="735.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (2 samples, 0.05%)</title><rect x="172.8" y="693" width="0.6" height="15.0" fill="rgb(225,200,21)" rx="2" ry="2" />
<text  x="175.77" y="703.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="1040.7" y="709" width="0.3" height="15.0" fill="rgb(215,93,44)" rx="2" ry="2" />
<text  x="1043.67" y="719.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.20%)</title><rect x="875.5" y="645" width="2.4" height="15.0" fill="rgb(228,227,46)" rx="2" ry="2" />
<text  x="878.51" y="655.5" ></text>
</g>
<g >
<title>main (2 samples, 0.05%)</title><rect x="1086.7" y="821" width="0.6" height="15.0" fill="rgb(251,162,14)" rx="2" ry="2" />
<text  x="1089.66" y="831.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (17 samples, 0.43%)</title><rect x="1074.7" y="837" width="5.1" height="15.0" fill="rgb(247,163,20)" rx="2" ry="2" />
<text  x="1077.72" y="847.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.03%)</title><rect x="161.4" y="613" width="0.3" height="15.0" fill="rgb(224,136,51)" rx="2" ry="2" />
<text  x="164.42" y="623.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="1178.4" y="677" width="0.3" height="15.0" fill="rgb(219,132,46)" rx="2" ry="2" />
<text  x="1181.35" y="687.5" ></text>
</g>
<g >
<title>NaClGetDesc (1 samples, 0.03%)</title><rect x="587.3" y="805" width="0.3" height="15.0" fill="rgb(240,145,2)" rx="2" ry="2" />
<text  x="590.31" y="815.5" ></text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.03%)</title><rect x="39.0" y="421" width="0.3" height="15.0" fill="rgb(210,18,12)" rx="2" ry="2" />
<text  x="41.97" y="431.5" ></text>
</g>
<g >
<title>std::thread::panicking (4 samples, 0.10%)</title><rect x="686.8" y="629" width="1.2" height="15.0" fill="rgb(219,187,46)" rx="2" ry="2" />
<text  x="689.76" y="639.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.03%)</title><rect x="159.9" y="421" width="0.3" height="15.0" fill="rgb(235,159,34)" rx="2" ry="2" />
<text  x="162.93" y="431.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.03%)</title><rect x="36.6" y="645" width="0.3" height="15.0" fill="rgb(218,64,22)" rx="2" ry="2" />
<text  x="39.58" y="655.5" ></text>
</g>
<g >
<title>lind_close (1 samples, 0.03%)</title><rect x="159.9" y="725" width="0.3" height="15.0" fill="rgb(217,150,31)" rx="2" ry="2" />
<text  x="162.93" y="735.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.20%)</title><rect x="875.5" y="629" width="2.4" height="15.0" fill="rgb(229,155,17)" rx="2" ry="2" />
<text  x="878.51" y="639.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.03%)</title><rect x="35.1" y="629" width="0.3" height="15.0" fill="rgb(211,120,29)" rx="2" ry="2" />
<text  x="38.09" y="639.5" ></text>
</g>
<g >
<title>get_typical_interval (7 samples, 0.18%)</title><rect x="1180.4" y="677" width="2.1" height="15.0" fill="rgb(213,96,37)" rx="2" ry="2" />
<text  x="1183.44" y="687.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_enum (1 samples, 0.03%)</title><rect x="1087.0" y="485" width="0.3" height="15.0" fill="rgb(245,53,42)" rx="2" ry="2" />
<text  x="1089.96" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="43.7" y="389" width="0.3" height="15.0" fill="rgb(209,46,43)" rx="2" ry="2" />
<text  x="46.75" y="399.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="882.1" y="613" width="1.2" height="15.0" fill="rgb(242,135,36)" rx="2" ry="2" />
<text  x="885.08" y="623.5" ></text>
</g>
<g >
<title>clocksource_watchdog (1 samples, 0.03%)</title><rect x="1119.5" y="597" width="0.3" height="15.0" fill="rgb(233,227,17)" rx="2" ry="2" />
<text  x="1122.52" y="607.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (1 samples, 0.03%)</title><rect x="584.9" y="789" width="0.3" height="15.0" fill="rgb(226,93,18)" rx="2" ry="2" />
<text  x="587.92" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_poll (4 samples, 0.10%)</title><rect x="35.1" y="741" width="1.2" height="15.0" fill="rgb(252,155,44)" rx="2" ry="2" />
<text  x="38.09" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="174.6" y="517" width="0.3" height="15.0" fill="rgb(225,212,33)" rx="2" ry="2" />
<text  x="177.56" y="527.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.03%)</title><rect x="36.6" y="629" width="0.3" height="15.0" fill="rgb(229,147,39)" rx="2" ry="2" />
<text  x="39.58" y="639.5" ></text>
</g>
</g>
</svg>
