<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="758.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="741" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="741" > </text>
<g id="frames">
<g >
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="36.4" y="421" width="0.3" height="15.0" fill="rgb(226,25,41)" rx="2" ry="2" />
<text  x="39.41" y="431.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.03%)</title><rect x="1130.7" y="613" width="0.3" height="15.0" fill="rgb(235,78,32)" rx="2" ry="2" />
<text  x="1133.66" y="623.5" ></text>
</g>
<g >
<title>main (1 samples, 0.03%)</title><rect x="1097.1" y="645" width="0.3" height="15.0" fill="rgb(248,63,12)" rx="2" ry="2" />
<text  x="1100.10" y="655.5" ></text>
</g>
<g >
<title>core::cmp::min (15 samples, 0.39%)</title><rect x="189.3" y="501" width="4.6" height="15.0" fill="rgb(248,60,28)" rx="2" ry="2" />
<text  x="192.27" y="511.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (3 samples, 0.08%)</title><rect x="834.6" y="501" width="0.9" height="15.0" fill="rgb(214,190,30)" rx="2" ry="2" />
<text  x="837.57" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.05%)</title><rect x="655.9" y="405" width="0.6" height="15.0" fill="rgb(244,192,16)" rx="2" ry="2" />
<text  x="658.92" y="415.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.03%)</title><rect x="1097.1" y="437" width="0.3" height="15.0" fill="rgb(251,201,41)" rx="2" ry="2" />
<text  x="1100.10" y="447.5" ></text>
</g>
<g >
<title>exit_mm (37 samples, 0.97%)</title><rect x="1109.8" y="533" width="11.5" height="15.0" fill="rgb(227,166,26)" rx="2" ry="2" />
<text  x="1112.84" y="543.5" ></text>
</g>
<g >
<title>cpuidle_select (14 samples, 0.37%)</title><rect x="1182.5" y="533" width="4.4" height="15.0" fill="rgb(226,33,36)" rx="2" ry="2" />
<text  x="1185.54" y="543.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.03%)</title><rect x="10.0" y="581" width="0.3" height="15.0" fill="rgb(234,212,48)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.03%)</title><rect x="10.0" y="533" width="0.3" height="15.0" fill="rgb(226,42,12)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (1 samples, 0.03%)</title><rect x="1097.1" y="133" width="0.3" height="15.0" fill="rgb(223,198,17)" rx="2" ry="2" />
<text  x="1100.10" y="143.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (512 samples, 13.48%)</title><rect x="198.3" y="485" width="159.1" height="15.0" fill="rgb(247,98,12)" rx="2" ry="2" />
<text  x="201.28" y="495.5" >ringbuf::ring_buffer..</text>
</g>
<g >
<title>psi_group_change (1 samples, 0.03%)</title><rect x="1164.2" y="565" width="0.3" height="15.0" fill="rgb(241,48,50)" rx="2" ry="2" />
<text  x="1167.21" y="575.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="870.9" y="421" width="0.3" height="15.0" fill="rgb(253,195,15)" rx="2" ry="2" />
<text  x="873.92" y="431.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1,271 samples, 33.46%)</title><rect x="161.6" y="517" width="394.9" height="15.0" fill="rgb(250,138,0)" rx="2" ry="2" />
<text  x="164.62" y="527.5" >rustposix::interface::pipe::EmulatedPipe::read_from_p..</text>
</g>
<g >
<title>NaClDescIoDescWrite (994 samples, 26.17%)</title><rect x="583.2" y="613" width="308.8" height="15.0" fill="rgb(227,180,39)" rx="2" ry="2" />
<text  x="586.22" y="623.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="433.2" y="357" width="0.3" height="15.0" fill="rgb(244,109,23)" rx="2" ry="2" />
<text  x="436.16" y="367.5" ></text>
</g>
<g >
<title>NaClValidateCode (12 samples, 0.32%)</title><rect x="155.4" y="597" width="3.7" height="15.0" fill="rgb(228,156,42)" rx="2" ry="2" />
<text  x="158.40" y="607.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.03%)</title><rect x="1052.4" y="533" width="0.3" height="15.0" fill="rgb(254,45,48)" rx="2" ry="2" />
<text  x="1055.36" y="543.5" ></text>
</g>
<g >
<title>free_unref_page (1 samples, 0.03%)</title><rect x="158.8" y="373" width="0.3" height="15.0" fill="rgb(232,114,38)" rx="2" ry="2" />
<text  x="161.82" y="383.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.03%)</title><rect x="1121.3" y="517" width="0.3" height="15.0" fill="rgb(211,103,48)" rx="2" ry="2" />
<text  x="1124.34" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="39.8" y="677" width="0.3" height="15.0" fill="rgb(245,103,14)" rx="2" ry="2" />
<text  x="42.83" y="687.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.03%)</title><rect x="433.2" y="341" width="0.3" height="15.0" fill="rgb(235,40,51)" rx="2" ry="2" />
<text  x="436.16" y="351.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.95%)</title><rect x="644.7" y="501" width="11.2" height="15.0" fill="rgb(251,64,5)" rx="2" ry="2" />
<text  x="647.74" y="511.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.03%)</title><rect x="160.4" y="277" width="0.3" height="15.0" fill="rgb(247,45,51)" rx="2" ry="2" />
<text  x="163.37" y="287.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (35 samples, 0.92%)</title><rect x="645.1" y="469" width="10.8" height="15.0" fill="rgb(231,20,16)" rx="2" ry="2" />
<text  x="648.05" y="479.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (1 samples, 0.03%)</title><rect x="1172.9" y="373" width="0.3" height="15.0" fill="rgb(224,226,43)" rx="2" ry="2" />
<text  x="1175.91" y="383.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.03%)</title><rect x="160.4" y="341" width="0.3" height="15.0" fill="rgb(209,203,9)" rx="2" ry="2" />
<text  x="163.37" y="351.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="829.9" y="341" width="0.3" height="15.0" fill="rgb(238,114,2)" rx="2" ry="2" />
<text  x="832.91" y="351.5" ></text>
</g>
<g >
<title>hash_conntrack_raw (1 samples, 0.03%)</title><rect x="1134.1" y="245" width="0.3" height="15.0" fill="rgb(244,43,44)" rx="2" ry="2" />
<text  x="1137.08" y="255.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (27 samples, 0.71%)</title><rect x="906.7" y="581" width="8.3" height="15.0" fill="rgb(223,77,22)" rx="2" ry="2" />
<text  x="909.65" y="591.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.03%)</title><rect x="155.1" y="373" width="0.3" height="15.0" fill="rgb(214,173,15)" rx="2" ry="2" />
<text  x="158.09" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="541.0" y="373" width="0.3" height="15.0" fill="rgb(244,111,52)" rx="2" ry="2" />
<text  x="543.97" y="383.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (6 samples, 0.16%)</title><rect x="673.3" y="501" width="1.9" height="15.0" fill="rgb(232,69,1)" rx="2" ry="2" />
<text  x="676.32" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="944.9" y="533" width="0.3" height="15.0" fill="rgb(237,165,52)" rx="2" ry="2" />
<text  x="947.87" y="543.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (15 samples, 0.39%)</title><rect x="927.8" y="581" width="4.6" height="15.0" fill="rgb(250,71,14)" rx="2" ry="2" />
<text  x="930.78" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.03%)</title><rect x="1130.7" y="645" width="0.3" height="15.0" fill="rgb(213,66,40)" rx="2" ry="2" />
<text  x="1133.66" y="655.5" ></text>
</g>
<g >
<title>zap_pte_range (37 samples, 0.97%)</title><rect x="1109.8" y="437" width="11.5" height="15.0" fill="rgb(229,179,10)" rx="2" ry="2" />
<text  x="1112.84" y="447.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (3 samples, 0.08%)</title><rect x="1053.9" y="661" width="0.9" height="15.0" fill="rgb(216,70,54)" rx="2" ry="2" />
<text  x="1056.92" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_write (10 samples, 0.26%)</title><rect x="36.7" y="485" width="3.1" height="15.0" fill="rgb(237,58,39)" rx="2" ry="2" />
<text  x="39.72" y="495.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.03%)</title><rect x="1134.7" y="453" width="0.3" height="15.0" fill="rgb(248,22,47)" rx="2" ry="2" />
<text  x="1137.70" y="463.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (7 samples, 0.18%)</title><rect x="1036.2" y="517" width="2.2" height="15.0" fill="rgb(230,210,5)" rx="2" ry="2" />
<text  x="1039.21" y="527.5" ></text>
</g>
<g >
<title>need_update (1 samples, 0.03%)</title><rect x="1187.5" y="485" width="0.3" height="15.0" fill="rgb(214,93,19)" rx="2" ry="2" />
<text  x="1190.51" y="495.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.03%)</title><rect x="1132.2" y="629" width="0.3" height="15.0" fill="rgb(230,33,6)" rx="2" ry="2" />
<text  x="1135.21" y="639.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.03%)</title><rect x="1097.1" y="149" width="0.3" height="15.0" fill="rgb(207,157,28)" rx="2" ry="2" />
<text  x="1100.10" y="159.5" ></text>
</g>
<g >
<title>dispatcher (952 samples, 25.07%)</title><rect x="595.3" y="565" width="295.8" height="15.0" fill="rgb(244,13,21)" rx="2" ry="2" />
<text  x="598.34" y="575.5" >dispatcher</text>
</g>
<g >
<title>cpuidle_enter_state (95 samples, 2.50%)</title><rect x="1132.5" y="581" width="29.5" height="15.0" fill="rgb(246,180,9)" rx="2" ry="2" />
<text  x="1135.52" y="591.5" >cp..</text>
</g>
<g >
<title>do_iter_readv_writev (10 samples, 0.26%)</title><rect x="36.7" y="373" width="3.1" height="15.0" fill="rgb(235,170,1)" rx="2" ry="2" />
<text  x="39.72" y="383.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1,289 samples, 33.94%)</title><rect x="557.7" y="645" width="400.5" height="15.0" fill="rgb(240,29,7)" rx="2" ry="2" />
<text  x="560.75" y="655.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (28 samples, 0.74%)</title><rect x="878.4" y="501" width="8.7" height="15.0" fill="rgb(207,87,23)" rx="2" ry="2" />
<text  x="881.38" y="511.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (10 samples, 0.26%)</title><rect x="36.7" y="613" width="3.1" height="15.0" fill="rgb(251,128,8)" rx="2" ry="2" />
<text  x="39.72" y="623.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.08%)</title><rect x="872.2" y="485" width="0.9" height="15.0" fill="rgb(252,165,32)" rx="2" ry="2" />
<text  x="875.16" y="495.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (2 samples, 0.05%)</title><rect x="917.2" y="613" width="0.6" height="15.0" fill="rgb(254,64,37)" rx="2" ry="2" />
<text  x="920.21" y="623.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (56 samples, 1.47%)</title><rect x="817.2" y="501" width="17.4" height="15.0" fill="rgb(241,170,14)" rx="2" ry="2" />
<text  x="820.17" y="511.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.05%)</title><rect x="1166.7" y="389" width="0.6" height="15.0" fill="rgb(211,45,29)" rx="2" ry="2" />
<text  x="1169.70" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="1127.9" y="533" width="0.3" height="15.0" fill="rgb(235,152,45)" rx="2" ry="2" />
<text  x="1130.86" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.03%)</title><rect x="1163.6" y="565" width="0.3" height="15.0" fill="rgb(214,109,51)" rx="2" ry="2" />
<text  x="1166.59" y="575.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.03%)</title><rect x="623.3" y="357" width="0.3" height="15.0" fill="rgb(231,80,53)" rx="2" ry="2" />
<text  x="626.30" y="367.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.03%)</title><rect x="1047.1" y="597" width="0.3" height="15.0" fill="rgb(236,1,25)" rx="2" ry="2" />
<text  x="1050.08" y="607.5" ></text>
</g>
<g >
<title>cpuidle_enter (95 samples, 2.50%)</title><rect x="1132.5" y="597" width="29.5" height="15.0" fill="rgb(227,173,5)" rx="2" ry="2" />
<text  x="1135.52" y="607.5" >cp..</text>
</g>
<g >
<title>ValidateChunkAMD64 (12 samples, 0.32%)</title><rect x="155.4" y="565" width="3.7" height="15.0" fill="rgb(211,143,42)" rx="2" ry="2" />
<text  x="158.40" y="575.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (86 samples, 2.26%)</title><rect x="1135.3" y="565" width="26.7" height="15.0" fill="rgb(212,189,52)" rx="2" ry="2" />
<text  x="1138.32" y="575.5" >m..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.03%)</title><rect x="1097.1" y="421" width="0.3" height="15.0" fill="rgb(254,13,50)" rx="2" ry="2" />
<text  x="1100.10" y="431.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (1 samples, 0.03%)</title><rect x="1035.3" y="549" width="0.3" height="15.0" fill="rgb(236,116,1)" rx="2" ry="2" />
<text  x="1038.28" y="559.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (19 samples, 0.50%)</title><rect x="154.2" y="645" width="5.9" height="15.0" fill="rgb(224,141,23)" rx="2" ry="2" />
<text  x="157.16" y="655.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="1134.1" y="309" width="0.3" height="15.0" fill="rgb(206,208,47)" rx="2" ry="2" />
<text  x="1137.08" y="319.5" ></text>
</g>
<g >
<title>find_get_entry (1 samples, 0.03%)</title><rect x="155.1" y="325" width="0.3" height="15.0" fill="rgb(217,40,52)" rx="2" ry="2" />
<text  x="158.09" y="335.5" ></text>
</g>
<g >
<title>try_charge (5 samples, 0.13%)</title><rect x="1042.1" y="533" width="1.6" height="15.0" fill="rgb(222,163,4)" rx="2" ry="2" />
<text  x="1045.11" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (1 samples, 0.03%)</title><rect x="160.7" y="485" width="0.3" height="15.0" fill="rgb(250,74,16)" rx="2" ry="2" />
<text  x="163.68" y="495.5" ></text>
</g>
<g >
<title>unmap_single_vma (37 samples, 0.97%)</title><rect x="1109.8" y="469" width="11.5" height="15.0" fill="rgb(205,37,25)" rx="2" ry="2" />
<text  x="1112.84" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (19 samples, 0.50%)</title><rect x="861.9" y="469" width="5.9" height="15.0" fill="rgb(233,217,2)" rx="2" ry="2" />
<text  x="864.91" y="479.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.03%)</title><rect x="39.8" y="501" width="0.3" height="15.0" fill="rgb(226,188,25)" rx="2" ry="2" />
<text  x="42.83" y="511.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.03%)</title><rect x="1188.4" y="501" width="0.4" height="15.0" fill="rgb(246,65,22)" rx="2" ry="2" />
<text  x="1191.45" y="511.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (3 samples, 0.08%)</title><rect x="1061.1" y="613" width="0.9" height="15.0" fill="rgb(254,11,45)" rx="2" ry="2" />
<text  x="1064.06" y="623.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (2 samples, 0.05%)</title><rect x="1053.0" y="661" width="0.6" height="15.0" fill="rgb(216,89,20)" rx="2" ry="2" />
<text  x="1055.99" y="671.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (1 samples, 0.03%)</title><rect x="1163.9" y="597" width="0.3" height="15.0" fill="rgb(250,228,2)" rx="2" ry="2" />
<text  x="1166.90" y="607.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="1132.5" y="533" width="0.3" height="15.0" fill="rgb(229,77,4)" rx="2" ry="2" />
<text  x="1135.52" y="543.5" ></text>
</g>
<g >
<title>alx_poll (5 samples, 0.13%)</title><rect x="1132.8" y="437" width="1.6" height="15.0" fill="rgb(208,227,9)" rx="2" ry="2" />
<text  x="1135.83" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.26%)</title><rect x="36.7" y="501" width="3.1" height="15.0" fill="rgb(250,90,51)" rx="2" ry="2" />
<text  x="39.72" y="511.5" ></text>
</g>
<g >
<title>NaClHostDescRead (1,274 samples, 33.54%)</title><rect x="161.3" y="597" width="395.8" height="15.0" fill="rgb(230,96,11)" rx="2" ry="2" />
<text  x="164.31" y="607.5" >NaClHostDescRead</text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (32 samples, 0.84%)</title><rect x="867.8" y="549" width="10.0" height="15.0" fill="rgb(226,192,43)" rx="2" ry="2" />
<text  x="870.81" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.05%)</title><rect x="877.1" y="421" width="0.7" height="15.0" fill="rgb(214,87,4)" rx="2" ry="2" />
<text  x="880.14" y="431.5" ></text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.05%)</title><rect x="807.9" y="453" width="0.6" height="15.0" fill="rgb(225,191,50)" rx="2" ry="2" />
<text  x="810.85" y="463.5" ></text>
</g>
<g >
<title>free_pages (1 samples, 0.03%)</title><rect x="158.8" y="405" width="0.3" height="15.0" fill="rgb(232,131,50)" rx="2" ry="2" />
<text  x="161.82" y="415.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 2.11%)</title><rect x="11.2" y="597" width="24.9" height="15.0" fill="rgb(211,159,32)" rx="2" ry="2" />
<text  x="14.24" y="607.5" >p..</text>
</g>
<g >
<title>NaClXMutexLock (25 samples, 0.66%)</title><rect x="143.6" y="629" width="7.8" height="15.0" fill="rgb(213,201,32)" rx="2" ry="2" />
<text  x="146.60" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="161.0" y="485" width="0.3" height="15.0" fill="rgb(243,26,30)" rx="2" ry="2" />
<text  x="164.00" y="495.5" ></text>
</g>
<g >
<title>NaClGetDesc (1 samples, 0.03%)</title><rect x="557.1" y="613" width="0.3" height="15.0" fill="rgb(222,205,52)" rx="2" ry="2" />
<text  x="560.12" y="623.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="623.3" y="421" width="0.3" height="15.0" fill="rgb(252,19,23)" rx="2" ry="2" />
<text  x="626.30" y="431.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (1 samples, 0.03%)</title><rect x="39.8" y="613" width="0.3" height="15.0" fill="rgb(234,93,1)" rx="2" ry="2" />
<text  x="42.83" y="623.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.03%)</title><rect x="1129.4" y="469" width="0.3" height="15.0" fill="rgb(212,83,32)" rx="2" ry="2" />
<text  x="1132.42" y="479.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="1129.4" y="453" width="0.3" height="15.0" fill="rgb(239,5,49)" rx="2" ry="2" />
<text  x="1132.42" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (6 samples, 0.16%)</title><rect x="1055.8" y="661" width="1.8" height="15.0" fill="rgb(212,9,48)" rx="2" ry="2" />
<text  x="1058.78" y="671.5" ></text>
</g>
<g >
<title>NaClGetDescMu (1 samples, 0.03%)</title><rect x="41.7" y="661" width="0.3" height="15.0" fill="rgb(233,149,50)" rx="2" ry="2" />
<text  x="44.69" y="671.5" ></text>
</g>
<g >
<title>__GI___mmap64 (1 samples, 0.03%)</title><rect x="161.0" y="517" width="0.3" height="15.0" fill="rgb(246,136,20)" rx="2" ry="2" />
<text  x="164.00" y="527.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.03%)</title><rect x="1185.7" y="485" width="0.3" height="15.0" fill="rgb(225,55,8)" rx="2" ry="2" />
<text  x="1188.65" y="495.5" ></text>
</g>
<g >
<title>NaClRefCountRef (1 samples, 0.03%)</title><rect x="557.1" y="565" width="0.3" height="15.0" fill="rgb(221,187,2)" rx="2" ry="2" />
<text  x="560.12" y="575.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.03%)</title><rect x="155.1" y="421" width="0.3" height="15.0" fill="rgb(214,116,14)" rx="2" ry="2" />
<text  x="158.09" y="431.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.05%)</title><rect x="1166.7" y="357" width="0.6" height="15.0" fill="rgb(225,211,15)" rx="2" ry="2" />
<text  x="1169.70" y="367.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (81 samples, 2.13%)</title><rect x="1164.8" y="645" width="25.2" height="15.0" fill="rgb(207,47,35)" rx="2" ry="2" />
<text  x="1167.83" y="655.5" >x..</text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="875.6" y="453" width="0.6" height="15.0" fill="rgb(205,127,18)" rx="2" ry="2" />
<text  x="878.58" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="160.4" y="421" width="0.3" height="15.0" fill="rgb(225,139,39)" rx="2" ry="2" />
<text  x="163.37" y="431.5" ></text>
</g>
<g >
<title>__bitmap_and (1 samples, 0.03%)</title><rect x="1169.5" y="373" width="0.3" height="15.0" fill="rgb(246,171,12)" rx="2" ry="2" />
<text  x="1172.49" y="383.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="875.6" y="469" width="0.6" height="15.0" fill="rgb(242,101,5)" rx="2" ry="2" />
<text  x="878.58" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="1052.4" y="485" width="0.3" height="15.0" fill="rgb(254,76,50)" rx="2" ry="2" />
<text  x="1055.36" y="495.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (24 samples, 0.63%)</title><rect x="561.5" y="613" width="7.4" height="15.0" fill="rgb(212,224,34)" rx="2" ry="2" />
<text  x="564.47" y="623.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="39.8" y="469" width="0.3" height="15.0" fill="rgb(210,163,9)" rx="2" ry="2" />
<text  x="42.83" y="479.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.03%)</title><rect x="160.4" y="229" width="0.3" height="15.0" fill="rgb(242,150,9)" rx="2" ry="2" />
<text  x="163.37" y="239.5" ></text>
</g>
<g >
<title>[perf-35073.map] (7 samples, 0.18%)</title><rect x="89.2" y="677" width="2.2" height="15.0" fill="rgb(254,207,51)" rx="2" ry="2" />
<text  x="92.23" y="687.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.21%)</title><rect x="625.5" y="517" width="2.5" height="15.0" fill="rgb(215,44,39)" rx="2" ry="2" />
<text  x="628.48" y="527.5" ></text>
</g>
<g >
<title>generic_write_end (1 samples, 0.03%)</title><rect x="160.4" y="213" width="0.3" height="15.0" fill="rgb(220,165,41)" rx="2" ry="2" />
<text  x="163.37" y="223.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (76 samples, 2.00%)</title><rect x="12.2" y="485" width="23.6" height="15.0" fill="rgb(245,159,53)" rx="2" ry="2" />
<text  x="15.17" y="495.5" >p..</text>
</g>
<g >
<title>dispatcher (1,274 samples, 33.54%)</title><rect x="161.3" y="565" width="395.8" height="15.0" fill="rgb(239,8,18)" rx="2" ry="2" />
<text  x="164.31" y="575.5" >dispatcher</text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.34%)</title><rect x="1127.2" y="661" width="4.1" height="15.0" fill="rgb(251,15,0)" rx="2" ry="2" />
<text  x="1130.24" y="671.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.34%)</title><rect x="887.1" y="501" width="4.0" height="15.0" fill="rgb(233,139,13)" rx="2" ry="2" />
<text  x="890.08" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (1 samples, 0.03%)</title><rect x="160.4" y="469" width="0.3" height="15.0" fill="rgb(230,75,7)" rx="2" ry="2" />
<text  x="163.37" y="479.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.03%)</title><rect x="1131.0" y="565" width="0.3" height="15.0" fill="rgb(224,113,45)" rx="2" ry="2" />
<text  x="1133.97" y="575.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.03%)</title><rect x="943.9" y="533" width="0.3" height="15.0" fill="rgb(254,48,52)" rx="2" ry="2" />
<text  x="946.93" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="541.0" y="357" width="0.3" height="15.0" fill="rgb(206,78,15)" rx="2" ry="2" />
<text  x="543.97" y="367.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="1127.2" y="597" width="0.4" height="15.0" fill="rgb(248,134,45)" rx="2" ry="2" />
<text  x="1130.24" y="607.5" ></text>
</g>
<g >
<title>ovl_unlink (1 samples, 0.03%)</title><rect x="160.7" y="373" width="0.3" height="15.0" fill="rgb(225,64,2)" rx="2" ry="2" />
<text  x="163.68" y="383.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.03%)</title><rect x="1128.5" y="597" width="0.3" height="15.0" fill="rgb(217,93,44)" rx="2" ry="2" />
<text  x="1131.48" y="607.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.03%)</title><rect x="160.4" y="293" width="0.3" height="15.0" fill="rgb(210,40,0)" rx="2" ry="2" />
<text  x="163.37" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (1 samples, 0.03%)</title><rect x="876.8" y="421" width="0.3" height="15.0" fill="rgb(224,169,33)" rx="2" ry="2" />
<text  x="879.82" y="431.5" ></text>
</g>
<g >
<title>do_fault_around (1 samples, 0.03%)</title><rect x="1046.2" y="549" width="0.3" height="15.0" fill="rgb(250,119,18)" rx="2" ry="2" />
<text  x="1049.15" y="559.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (56 samples, 1.47%)</title><rect x="1164.8" y="517" width="17.4" height="15.0" fill="rgb(238,62,30)" rx="2" ry="2" />
<text  x="1167.83" y="527.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.03%)</title><rect x="161.0" y="421" width="0.3" height="15.0" fill="rgb(238,130,52)" rx="2" ry="2" />
<text  x="164.00" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (35 samples, 0.92%)</title><rect x="658.1" y="437" width="10.9" height="15.0" fill="rgb(207,202,46)" rx="2" ry="2" />
<text  x="661.10" y="447.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="36.7" y="293" width="0.3" height="15.0" fill="rgb(215,160,15)" rx="2" ry="2" />
<text  x="39.72" y="303.5" ></text>
</g>
<g >
<title>cpuidle_enter (57 samples, 1.50%)</title><rect x="1164.8" y="533" width="17.7" height="15.0" fill="rgb(254,94,27)" rx="2" ry="2" />
<text  x="1167.83" y="543.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (597 samples, 15.72%)</title><rect x="361.4" y="469" width="185.5" height="15.0" fill="rgb(251,185,18)" rx="2" ry="2" />
<text  x="364.39" y="479.5" >ringbuf::consumer::Consu..</text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.03%)</title><rect x="1121.3" y="437" width="0.3" height="15.0" fill="rgb(230,97,51)" rx="2" ry="2" />
<text  x="1124.34" y="447.5" ></text>
</g>
<g >
<title>main (2 samples, 0.05%)</title><rect x="10.0" y="645" width="0.6" height="15.0" fill="rgb(231,219,17)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.03%)</title><rect x="10.9" y="549" width="0.3" height="15.0" fill="rgb(219,10,14)" rx="2" ry="2" />
<text  x="13.93" y="559.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (25 samples, 0.66%)</title><rect x="745.4" y="421" width="7.8" height="15.0" fill="rgb(205,139,27)" rx="2" ry="2" />
<text  x="748.40" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (68 samples, 1.79%)</title><rect x="412.3" y="437" width="21.2" height="15.0" fill="rgb(205,94,2)" rx="2" ry="2" />
<text  x="415.34" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (24 samples, 0.63%)</title><rect x="919.7" y="581" width="7.5" height="15.0" fill="rgb(232,136,5)" rx="2" ry="2" />
<text  x="922.70" y="591.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (3 samples, 0.08%)</title><rect x="586.0" y="581" width="1.0" height="15.0" fill="rgb(213,213,5)" rx="2" ry="2" />
<text  x="589.02" y="591.5" ></text>
</g>
<g >
<title>NaClMutexLock (23 samples, 0.61%)</title><rect x="144.2" y="613" width="7.2" height="15.0" fill="rgb(242,10,38)" rx="2" ry="2" />
<text  x="147.22" y="623.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (29 samples, 0.76%)</title><rect x="897.6" y="581" width="9.1" height="15.0" fill="rgb(218,148,34)" rx="2" ry="2" />
<text  x="900.64" y="591.5" ></text>
</g>
<g >
<title>alx_clean_tx_irq (2 samples, 0.05%)</title><rect x="1133.1" y="421" width="0.7" height="15.0" fill="rgb(220,52,51)" rx="2" ry="2" />
<text  x="1136.14" y="431.5" ></text>
</g>
<g >
<title>cmd_record (92 samples, 2.42%)</title><rect x="11.2" y="661" width="28.6" height="15.0" fill="rgb(232,129,50)" rx="2" ry="2" />
<text  x="14.24" y="671.5" >cm..</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (157 samples, 4.13%)</title><rect x="759.1" y="469" width="48.8" height="15.0" fill="rgb(222,196,33)" rx="2" ry="2" />
<text  x="762.07" y="479.5" >ring..</text>
</g>
<g >
<title>NaClCopyDynamicRegion (2 samples, 0.05%)</title><rect x="1051.7" y="645" width="0.7" height="15.0" fill="rgb(249,143,27)" rx="2" ry="2" />
<text  x="1054.74" y="655.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (185 samples, 4.87%)</title><rect x="676.1" y="437" width="57.5" height="15.0" fill="rgb(246,12,21)" rx="2" ry="2" />
<text  x="679.12" y="447.5" >__pthr..</text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="1181.9" y="501" width="0.3" height="15.0" fill="rgb(240,70,42)" rx="2" ry="2" />
<text  x="1184.92" y="511.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (3 samples, 0.08%)</title><rect x="37.3" y="293" width="1.0" height="15.0" fill="rgb(245,221,43)" rx="2" ry="2" />
<text  x="40.34" y="303.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.03%)</title><rect x="833.9" y="357" width="0.4" height="15.0" fill="rgb(215,96,47)" rx="2" ry="2" />
<text  x="836.95" y="367.5" ></text>
</g>
<g >
<title>vfs_write (10 samples, 0.26%)</title><rect x="36.7" y="453" width="3.1" height="15.0" fill="rgb(219,9,31)" rx="2" ry="2" />
<text  x="39.72" y="463.5" ></text>
</g>
<g >
<title>should_fail_alloc_page (1 samples, 0.03%)</title><rect x="1035.0" y="533" width="0.3" height="15.0" fill="rgb(208,109,13)" rx="2" ry="2" />
<text  x="1037.97" y="543.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.03%)</title><rect x="1188.1" y="437" width="0.3" height="15.0" fill="rgb(235,178,44)" rx="2" ry="2" />
<text  x="1191.14" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.34%)</title><rect x="1127.2" y="677" width="4.1" height="15.0" fill="rgb(231,87,51)" rx="2" ry="2" />
<text  x="1130.24" y="687.5" ></text>
</g>
<g >
<title>__cmd_record (92 samples, 2.42%)</title><rect x="11.2" y="645" width="28.6" height="15.0" fill="rgb(231,20,12)" rx="2" ry="2" />
<text  x="14.24" y="655.5" >__..</text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (2 samples, 0.05%)</title><rect x="160.4" y="581" width="0.6" height="15.0" fill="rgb(252,182,21)" rx="2" ry="2" />
<text  x="163.37" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (477 samples, 12.56%)</title><rect x="669.0" y="517" width="148.2" height="15.0" fill="rgb(237,173,43)" rx="2" ry="2" />
<text  x="671.97" y="527.5" >rustposix::interfa..</text>
</g>
<g >
<title>generic_perform_write (10 samples, 0.26%)</title><rect x="36.7" y="325" width="3.1" height="15.0" fill="rgb(235,104,18)" rx="2" ry="2" />
<text  x="39.72" y="335.5" ></text>
</g>
<g >
<title>lind_read (1,274 samples, 33.54%)</title><rect x="161.3" y="581" width="395.8" height="15.0" fill="rgb(253,161,20)" rx="2" ry="2" />
<text  x="164.31" y="591.5" >lind_read</text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.03%)</title><rect x="1167.9" y="437" width="0.4" height="15.0" fill="rgb(234,201,12)" rx="2" ry="2" />
<text  x="1170.94" y="447.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (4 samples, 0.11%)</title><rect x="197.0" y="469" width="1.3" height="15.0" fill="rgb(205,10,3)" rx="2" ry="2" />
<text  x="200.04" y="479.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (2 samples, 0.05%)</title><rect x="1133.8" y="405" width="0.6" height="15.0" fill="rgb(205,54,35)" rx="2" ry="2" />
<text  x="1136.77" y="415.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.05%)</title><rect x="10.0" y="661" width="0.6" height="15.0" fill="rgb(224,91,41)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (5 samples, 0.13%)</title><rect x="753.2" y="453" width="1.5" height="15.0" fill="rgb(216,17,11)" rx="2" ry="2" />
<text  x="756.17" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (80 samples, 2.11%)</title><rect x="11.2" y="533" width="24.9" height="15.0" fill="rgb(211,37,17)" rx="2" ry="2" />
<text  x="14.24" y="543.5" >_..</text>
</g>
<g >
<title>core::cmp::Ord::min (15 samples, 0.39%)</title><rect x="189.3" y="485" width="4.6" height="15.0" fill="rgb(212,65,13)" rx="2" ry="2" />
<text  x="192.27" y="495.5" ></text>
</g>
<g >
<title>NaClSysWrite (1 samples, 0.03%)</title><rect x="557.4" y="645" width="0.3" height="15.0" fill="rgb(230,16,19)" rx="2" ry="2" />
<text  x="560.44" y="655.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.03%)</title><rect x="1129.1" y="581" width="0.3" height="15.0" fill="rgb(209,195,17)" rx="2" ry="2" />
<text  x="1132.10" y="591.5" ></text>
</g>
<g >
<title>NaClApplyPatchToMemory (1 samples, 0.03%)</title><rect x="160.1" y="501" width="0.3" height="15.0" fill="rgb(253,193,43)" rx="2" ry="2" />
<text  x="163.06" y="511.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (4 samples, 0.11%)</title><rect x="37.0" y="309" width="1.3" height="15.0" fill="rgb(224,198,50)" rx="2" ry="2" />
<text  x="40.03" y="319.5" ></text>
</g>
<g >
<title>skb_consume_udp (1 samples, 0.03%)</title><rect x="1130.7" y="533" width="0.3" height="15.0" fill="rgb(226,25,30)" rx="2" ry="2" />
<text  x="1133.66" y="543.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (1 samples, 0.03%)</title><rect x="1127.6" y="597" width="0.3" height="15.0" fill="rgb(221,46,15)" rx="2" ry="2" />
<text  x="1130.55" y="607.5" ></text>
</g>
<g >
<title>ip_list_rcv (2 samples, 0.05%)</title><rect x="1133.8" y="357" width="0.6" height="15.0" fill="rgb(210,68,11)" rx="2" ry="2" />
<text  x="1136.77" y="367.5" ></text>
</g>
<g >
<title>copy_page_from_iter (1 samples, 0.03%)</title><rect x="1051.7" y="517" width="0.4" height="15.0" fill="rgb(248,138,47)" rx="2" ry="2" />
<text  x="1054.74" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.16%)</title><rect x="824.0" y="389" width="1.9" height="15.0" fill="rgb(216,109,43)" rx="2" ry="2" />
<text  x="827.01" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (38 samples, 1.00%)</title><rect x="1109.8" y="677" width="11.8" height="15.0" fill="rgb(232,135,54)" rx="2" ry="2" />
<text  x="1112.84" y="687.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.03%)</title><rect x="36.4" y="629" width="0.3" height="15.0" fill="rgb(228,65,14)" rx="2" ry="2" />
<text  x="39.41" y="639.5" ></text>
</g>
<g >
<title>_perf_ioctl (79 samples, 2.08%)</title><rect x="11.2" y="501" width="24.6" height="15.0" fill="rgb(249,83,0)" rx="2" ry="2" />
<text  x="14.24" y="511.5" >_..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.42%)</title><rect x="628.0" y="485" width="4.9" height="15.0" fill="rgb(228,81,32)" rx="2" ry="2" />
<text  x="630.96" y="495.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.03%)</title><rect x="1052.4" y="421" width="0.3" height="15.0" fill="rgb(233,67,39)" rx="2" ry="2" />
<text  x="1055.36" y="431.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (185 samples, 4.87%)</title><rect x="1132.5" y="677" width="57.5" height="15.0" fill="rgb(250,142,51)" rx="2" ry="2" />
<text  x="1135.52" y="687.5" >second..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.08%)</title><rect x="741.1" y="421" width="0.9" height="15.0" fill="rgb(236,23,26)" rx="2" ry="2" />
<text  x="744.05" y="431.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (1 samples, 0.03%)</title><rect x="1134.1" y="293" width="0.3" height="15.0" fill="rgb(214,183,17)" rx="2" ry="2" />
<text  x="1137.08" y="303.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (2 samples, 0.05%)</title><rect x="915.0" y="581" width="0.7" height="15.0" fill="rgb(225,92,27)" rx="2" ry="2" />
<text  x="918.04" y="591.5" ></text>
</g>
<g >
<title>copy_page_from_iter_iovec (1 samples, 0.03%)</title><rect x="1051.7" y="501" width="0.4" height="15.0" fill="rgb(232,6,40)" rx="2" ry="2" />
<text  x="1054.74" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (35 samples, 0.92%)</title><rect x="850.4" y="469" width="10.9" height="15.0" fill="rgb(254,10,13)" rx="2" ry="2" />
<text  x="853.42" y="479.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 1.16%)</title><rect x="609.9" y="533" width="13.7" height="15.0" fill="rgb(234,111,6)" rx="2" ry="2" />
<text  x="612.94" y="543.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.03%)</title><rect x="1052.7" y="661" width="0.3" height="15.0" fill="rgb(241,133,52)" rx="2" ry="2" />
<text  x="1055.68" y="671.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8 samples, 0.21%)</title><rect x="1165.5" y="437" width="2.4" height="15.0" fill="rgb(213,113,32)" rx="2" ry="2" />
<text  x="1168.46" y="447.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (2 samples, 0.05%)</title><rect x="1062.0" y="629" width="0.6" height="15.0" fill="rgb(234,63,20)" rx="2" ry="2" />
<text  x="1065.00" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (10 samples, 0.26%)</title><rect x="394.0" y="421" width="3.1" height="15.0" fill="rgb(205,78,17)" rx="2" ry="2" />
<text  x="397.01" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (18 samples, 0.47%)</title><rect x="632.9" y="437" width="5.6" height="15.0" fill="rgb(213,114,17)" rx="2" ry="2" />
<text  x="635.93" y="447.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2 samples, 0.05%)</title><rect x="42.9" y="661" width="0.7" height="15.0" fill="rgb(236,208,5)" rx="2" ry="2" />
<text  x="45.93" y="671.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.03%)</title><rect x="39.8" y="485" width="0.3" height="15.0" fill="rgb(222,194,35)" rx="2" ry="2" />
<text  x="42.83" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.16%)</title><rect x="873.1" y="421" width="1.9" height="15.0" fill="rgb(231,109,53)" rx="2" ry="2" />
<text  x="876.10" y="431.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (3 samples, 0.08%)</title><rect x="1061.1" y="645" width="0.9" height="15.0" fill="rgb(215,101,9)" rx="2" ry="2" />
<text  x="1064.06" y="655.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (1 samples, 0.03%)</title><rect x="161.0" y="565" width="0.3" height="15.0" fill="rgb(206,117,53)" rx="2" ry="2" />
<text  x="164.00" y="575.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="873.7" y="389" width="0.3" height="15.0" fill="rgb(252,74,31)" rx="2" ry="2" />
<text  x="876.72" y="399.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (9 samples, 0.24%)</title><rect x="84.6" y="597" width="2.8" height="15.0" fill="rgb(230,61,11)" rx="2" ry="2" />
<text  x="87.57" y="607.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.03%)</title><rect x="623.3" y="293" width="0.3" height="15.0" fill="rgb(211,211,42)" rx="2" ry="2" />
<text  x="626.30" y="303.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.03%)</title><rect x="1052.4" y="645" width="0.3" height="15.0" fill="rgb(250,71,49)" rx="2" ry="2" />
<text  x="1055.36" y="655.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.05%)</title><rect x="1016.0" y="613" width="0.6" height="15.0" fill="rgb(243,178,32)" rx="2" ry="2" />
<text  x="1019.01" y="623.5" ></text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (1 samples, 0.03%)</title><rect x="155.1" y="549" width="0.3" height="15.0" fill="rgb(213,23,4)" rx="2" ry="2" />
<text  x="158.09" y="559.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (1 samples, 0.03%)</title><rect x="1097.1" y="277" width="0.3" height="15.0" fill="rgb(253,72,43)" rx="2" ry="2" />
<text  x="1100.10" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.03%)</title><rect x="158.8" y="549" width="0.3" height="15.0" fill="rgb(226,65,28)" rx="2" ry="2" />
<text  x="161.82" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="160.4" y="437" width="0.3" height="15.0" fill="rgb(236,192,54)" rx="2" ry="2" />
<text  x="163.37" y="447.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (6 samples, 0.16%)</title><rect x="873.1" y="469" width="1.9" height="15.0" fill="rgb(217,174,18)" rx="2" ry="2" />
<text  x="876.10" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (4 samples, 0.11%)</title><rect x="47.0" y="661" width="1.2" height="15.0" fill="rgb(252,119,29)" rx="2" ry="2" />
<text  x="49.97" y="671.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.03%)</title><rect x="1129.4" y="581" width="0.3" height="15.0" fill="rgb(205,91,50)" rx="2" ry="2" />
<text  x="1132.42" y="591.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (4 samples, 0.11%)</title><rect x="1171.0" y="325" width="1.3" height="15.0" fill="rgb(253,182,38)" rx="2" ry="2" />
<text  x="1174.05" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11 samples, 0.29%)</title><rect x="831.2" y="469" width="3.4" height="15.0" fill="rgb(216,99,16)" rx="2" ry="2" />
<text  x="834.15" y="479.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.03%)</title><rect x="37.3" y="261" width="0.4" height="15.0" fill="rgb(243,63,10)" rx="2" ry="2" />
<text  x="40.34" y="271.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.03%)</title><rect x="1188.1" y="469" width="0.3" height="15.0" fill="rgb(252,152,51)" rx="2" ry="2" />
<text  x="1191.14" y="479.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.03%)</title><rect x="1134.4" y="533" width="0.3" height="15.0" fill="rgb(206,57,42)" rx="2" ry="2" />
<text  x="1137.39" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="907.3" y="565" width="0.3" height="15.0" fill="rgb(250,149,5)" rx="2" ry="2" />
<text  x="910.27" y="575.5" ></text>
</g>
<g >
<title>make_child (1 samples, 0.03%)</title><rect x="10.0" y="565" width="0.3" height="15.0" fill="rgb(214,36,48)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.18%)</title><rect x="831.5" y="437" width="2.1" height="15.0" fill="rgb(225,195,2)" rx="2" ry="2" />
<text  x="834.46" y="447.5" ></text>
</g>
<g >
<title>unmap_page_range (37 samples, 0.97%)</title><rect x="1109.8" y="453" width="11.5" height="15.0" fill="rgb(224,53,19)" rx="2" ry="2" />
<text  x="1112.84" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (26 samples, 0.68%)</title><rect x="898.3" y="565" width="8.0" height="15.0" fill="rgb(223,119,54)" rx="2" ry="2" />
<text  x="901.26" y="575.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (7 samples, 0.18%)</title><rect x="1086.5" y="661" width="2.2" height="15.0" fill="rgb(206,60,14)" rx="2" ry="2" />
<text  x="1089.54" y="671.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.03%)</title><rect x="556.5" y="501" width="0.3" height="15.0" fill="rgb(241,163,48)" rx="2" ry="2" />
<text  x="559.50" y="511.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (2 samples, 0.05%)</title><rect x="1133.8" y="341" width="0.6" height="15.0" fill="rgb(238,196,43)" rx="2" ry="2" />
<text  x="1136.77" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.03%)</title><rect x="1095.9" y="613" width="0.3" height="15.0" fill="rgb(241,163,23)" rx="2" ry="2" />
<text  x="1098.86" y="623.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.03%)</title><rect x="160.4" y="261" width="0.3" height="15.0" fill="rgb(249,210,6)" rx="2" ry="2" />
<text  x="163.37" y="271.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (1 samples, 0.03%)</title><rect x="160.7" y="517" width="0.3" height="15.0" fill="rgb(239,202,33)" rx="2" ry="2" />
<text  x="163.68" y="527.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampoline (1 samples, 0.03%)</title><rect x="160.1" y="533" width="0.3" height="15.0" fill="rgb(242,67,37)" rx="2" ry="2" />
<text  x="163.06" y="543.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (2 samples, 0.05%)</title><rect x="655.9" y="437" width="0.6" height="15.0" fill="rgb(245,37,13)" rx="2" ry="2" />
<text  x="658.92" y="447.5" ></text>
</g>
<g >
<title>get_typical_interval (2 samples, 0.05%)</title><rect x="1162.7" y="565" width="0.6" height="15.0" fill="rgb(218,199,15)" rx="2" ry="2" />
<text  x="1165.66" y="575.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.03%)</title><rect x="1046.5" y="565" width="0.3" height="15.0" fill="rgb(219,154,10)" rx="2" ry="2" />
<text  x="1049.46" y="575.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (3 samples, 0.08%)</title><rect x="1115.1" y="373" width="1.0" height="15.0" fill="rgb(220,207,47)" rx="2" ry="2" />
<text  x="1118.12" y="383.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="875.6" y="437" width="0.6" height="15.0" fill="rgb(248,125,47)" rx="2" ry="2" />
<text  x="878.58" y="447.5" ></text>
</g>
<g >
<title>kfree_skb.part.0 (1 samples, 0.03%)</title><rect x="1133.8" y="261" width="0.3" height="15.0" fill="rgb(231,69,42)" rx="2" ry="2" />
<text  x="1136.77" y="271.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (18 samples, 0.47%)</title><rect x="81.8" y="661" width="5.6" height="15.0" fill="rgb(230,135,13)" rx="2" ry="2" />
<text  x="84.77" y="671.5" ></text>
</g>
<g >
<title>ext4_inode_csum (2 samples, 0.05%)</title><rect x="38.9" y="181" width="0.6" height="15.0" fill="rgb(252,76,39)" rx="2" ry="2" />
<text  x="41.89" y="191.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1 samples, 0.03%)</title><rect x="161.3" y="485" width="0.3" height="15.0" fill="rgb(238,38,4)" rx="2" ry="2" />
<text  x="164.31" y="495.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.03%)</title><rect x="675.5" y="469" width="0.3" height="15.0" fill="rgb(215,141,52)" rx="2" ry="2" />
<text  x="678.50" y="479.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="1134.7" y="405" width="0.3" height="15.0" fill="rgb(214,34,7)" rx="2" ry="2" />
<text  x="1137.70" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (4 samples, 0.11%)</title><rect x="44.2" y="661" width="1.2" height="15.0" fill="rgb(240,169,6)" rx="2" ry="2" />
<text  x="47.18" y="671.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.03%)</title><rect x="39.8" y="517" width="0.3" height="15.0" fill="rgb(215,161,33)" rx="2" ry="2" />
<text  x="42.83" y="527.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.03%)</title><rect x="1097.1" y="69" width="0.3" height="15.0" fill="rgb(216,203,20)" rx="2" ry="2" />
<text  x="1100.10" y="79.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (16 samples, 0.42%)</title><rect x="154.2" y="613" width="4.9" height="15.0" fill="rgb(243,93,19)" rx="2" ry="2" />
<text  x="157.16" y="623.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.08%)</title><rect x="872.2" y="437" width="0.9" height="15.0" fill="rgb(253,95,46)" rx="2" ry="2" />
<text  x="875.16" y="447.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.03%)</title><rect x="623.3" y="245" width="0.3" height="15.0" fill="rgb(244,192,36)" rx="2" ry="2" />
<text  x="626.30" y="255.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.03%)</title><rect x="1166.7" y="341" width="0.3" height="15.0" fill="rgb(225,124,46)" rx="2" ry="2" />
<text  x="1169.70" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (35 samples, 0.92%)</title><rect x="850.4" y="453" width="10.9" height="15.0" fill="rgb(223,81,39)" rx="2" ry="2" />
<text  x="853.42" y="463.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.03%)</title><rect x="433.2" y="293" width="0.3" height="15.0" fill="rgb(249,202,9)" rx="2" ry="2" />
<text  x="436.16" y="303.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.03%)</title><rect x="1129.1" y="549" width="0.3" height="15.0" fill="rgb(247,138,23)" rx="2" ry="2" />
<text  x="1132.10" y="559.5" ></text>
</g>
<g >
<title>dispatcher (2 samples, 0.05%)</title><rect x="1060.4" y="661" width="0.7" height="15.0" fill="rgb(208,4,8)" rx="2" ry="2" />
<text  x="1063.44" y="671.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.05%)</title><rect x="1134.7" y="533" width="0.6" height="15.0" fill="rgb(242,96,38)" rx="2" ry="2" />
<text  x="1137.70" y="543.5" ></text>
</g>
<g >
<title>lookup_one_len (1 samples, 0.03%)</title><rect x="160.7" y="293" width="0.3" height="15.0" fill="rgb(219,80,53)" rx="2" ry="2" />
<text  x="163.68" y="303.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.05%)</title><rect x="1188.1" y="517" width="0.7" height="15.0" fill="rgb(214,1,37)" rx="2" ry="2" />
<text  x="1191.14" y="527.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.05%)</title><rect x="1094.9" y="645" width="0.7" height="15.0" fill="rgb(224,228,38)" rx="2" ry="2" />
<text  x="1097.93" y="655.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2,784 samples, 73.30%)</title><rect x="93.3" y="661" width="864.9" height="15.0" fill="rgb(213,0,42)" rx="2" ry="2" />
<text  x="96.26" y="671.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>NaClPageAllocFlags (1 samples, 0.03%)</title><rect x="161.0" y="549" width="0.3" height="15.0" fill="rgb(211,225,11)" rx="2" ry="2" />
<text  x="164.00" y="559.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="88.3" y="629" width="0.3" height="15.0" fill="rgb(230,164,51)" rx="2" ry="2" />
<text  x="91.29" y="639.5" ></text>
</g>
<g >
<title>NaClSysFork (1 samples, 0.03%)</title><rect x="161.0" y="629" width="0.3" height="15.0" fill="rgb(249,166,12)" rx="2" ry="2" />
<text  x="164.00" y="639.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.03%)</title><rect x="1132.5" y="517" width="0.3" height="15.0" fill="rgb(223,163,34)" rx="2" ry="2" />
<text  x="1135.52" y="527.5" ></text>
</g>
<g >
<title>HandleStackContext (46 samples, 1.21%)</title><rect x="104.1" y="645" width="14.3" height="15.0" fill="rgb(220,120,29)" rx="2" ry="2" />
<text  x="107.14" y="655.5" ></text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.05%)</title><rect x="807.9" y="437" width="0.6" height="15.0" fill="rgb(222,118,21)" rx="2" ry="2" />
<text  x="810.85" y="447.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.03%)</title><rect x="1167.6" y="421" width="0.3" height="15.0" fill="rgb(205,29,36)" rx="2" ry="2" />
<text  x="1170.63" y="431.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="1052.4" y="469" width="0.3" height="15.0" fill="rgb(251,157,52)" rx="2" ry="2" />
<text  x="1055.36" y="479.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (19 samples, 0.50%)</title><rect x="154.2" y="629" width="5.9" height="15.0" fill="rgb(234,199,40)" rx="2" ry="2" />
<text  x="157.16" y="639.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (110 samples, 2.90%)</title><rect x="1014.1" y="661" width="34.2" height="15.0" fill="rgb(248,103,22)" rx="2" ry="2" />
<text  x="1017.15" y="671.5" >as..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="571.1" y="613" width="0.6" height="15.0" fill="rgb(245,190,10)" rx="2" ry="2" />
<text  x="574.11" y="623.5" ></text>
</g>
<g >
<title>napi_poll (5 samples, 0.13%)</title><rect x="1132.8" y="453" width="1.6" height="15.0" fill="rgb(216,156,53)" rx="2" ry="2" />
<text  x="1135.83" y="463.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.03%)</title><rect x="36.4" y="597" width="0.3" height="15.0" fill="rgb(221,36,30)" rx="2" ry="2" />
<text  x="39.41" y="607.5" ></text>
</g>
<g >
<title>NaClDescRef (1 samples, 0.03%)</title><rect x="557.1" y="581" width="0.3" height="15.0" fill="rgb(249,177,37)" rx="2" ry="2" />
<text  x="560.12" y="591.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (6 samples, 0.16%)</title><rect x="1118.5" y="341" width="1.9" height="15.0" fill="rgb(220,193,8)" rx="2" ry="2" />
<text  x="1121.54" y="351.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (102 samples, 2.69%)</title><rect x="1132.5" y="613" width="31.7" height="15.0" fill="rgb(235,226,35)" rx="2" ry="2" />
<text  x="1135.52" y="623.5" >cp..</text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="1132.2" y="597" width="0.3" height="15.0" fill="rgb(221,100,42)" rx="2" ry="2" />
<text  x="1135.21" y="607.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (9 samples, 0.24%)</title><rect x="1165.1" y="469" width="2.8" height="15.0" fill="rgb(209,107,49)" rx="2" ry="2" />
<text  x="1168.14" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.34%)</title><rect x="868.1" y="453" width="4.1" height="15.0" fill="rgb(211,218,9)" rx="2" ry="2" />
<text  x="871.13" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (8 samples, 0.21%)</title><rect x="625.5" y="501" width="2.5" height="15.0" fill="rgb(217,37,26)" rx="2" ry="2" />
<text  x="628.48" y="511.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.03%)</title><rect x="160.4" y="357" width="0.3" height="15.0" fill="rgb(217,220,15)" rx="2" ry="2" />
<text  x="163.37" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="1127.2" y="645" width="0.4" height="15.0" fill="rgb(213,184,54)" rx="2" ry="2" />
<text  x="1130.24" y="655.5" ></text>
</g>
<g >
<title>IndexExtentionFromVEX (1 samples, 0.03%)</title><rect x="157.9" y="549" width="0.3" height="15.0" fill="rgb(210,72,43)" rx="2" ry="2" />
<text  x="160.89" y="559.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="1045.5" y="517" width="0.3" height="15.0" fill="rgb(250,130,53)" rx="2" ry="2" />
<text  x="1048.53" y="527.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.03%)</title><rect x="541.0" y="309" width="0.3" height="15.0" fill="rgb(205,190,10)" rx="2" ry="2" />
<text  x="543.97" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.03%)</title><rect x="39.8" y="645" width="0.3" height="15.0" fill="rgb(232,61,2)" rx="2" ry="2" />
<text  x="42.83" y="655.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (1 samples, 0.03%)</title><rect x="1097.1" y="373" width="0.3" height="15.0" fill="rgb(219,197,40)" rx="2" ry="2" />
<text  x="1100.10" y="383.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (38 samples, 1.00%)</title><rect x="1109.8" y="645" width="11.8" height="15.0" fill="rgb(238,197,3)" rx="2" ry="2" />
<text  x="1112.84" y="655.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (2 samples, 0.05%)</title><rect x="1182.5" y="517" width="0.7" height="15.0" fill="rgb(210,5,10)" rx="2" ry="2" />
<text  x="1185.54" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.47%)</title><rect x="820.3" y="405" width="5.6" height="15.0" fill="rgb(224,34,12)" rx="2" ry="2" />
<text  x="823.28" y="415.5" ></text>
</g>
<g >
<title>inotify_find_inode (1 samples, 0.03%)</title><rect x="1127.6" y="629" width="0.3" height="15.0" fill="rgb(217,102,20)" rx="2" ry="2" />
<text  x="1130.55" y="639.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.03%)</title><rect x="10.3" y="549" width="0.3" height="15.0" fill="rgb(217,124,44)" rx="2" ry="2" />
<text  x="13.31" y="559.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.03%)</title><rect x="1132.2" y="485" width="0.3" height="15.0" fill="rgb(217,57,54)" rx="2" ry="2" />
<text  x="1135.21" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (28 samples, 0.74%)</title><rect x="1165.1" y="501" width="8.7" height="15.0" fill="rgb(249,42,1)" rx="2" ry="2" />
<text  x="1168.14" y="511.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="541.0" y="389" width="0.3" height="15.0" fill="rgb(241,4,26)" rx="2" ry="2" />
<text  x="543.97" y="399.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (17 samples, 0.45%)</title><rect x="1168.3" y="421" width="5.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1171.25" y="431.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.03%)</title><rect x="161.0" y="405" width="0.3" height="15.0" fill="rgb(234,149,8)" rx="2" ry="2" />
<text  x="164.00" y="415.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 1.11%)</title><rect x="655.9" y="501" width="13.1" height="15.0" fill="rgb(235,214,47)" rx="2" ry="2" />
<text  x="658.92" y="511.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="1132.2" y="501" width="0.3" height="15.0" fill="rgb(238,0,5)" rx="2" ry="2" />
<text  x="1135.21" y="511.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.03%)</title><rect x="161.0" y="309" width="0.3" height="15.0" fill="rgb(243,24,11)" rx="2" ry="2" />
<text  x="164.00" y="319.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (28 samples, 0.74%)</title><rect x="142.7" y="645" width="8.7" height="15.0" fill="rgb(251,28,3)" rx="2" ry="2" />
<text  x="145.66" y="655.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.03%)</title><rect x="155.1" y="533" width="0.3" height="15.0" fill="rgb(222,117,36)" rx="2" ry="2" />
<text  x="158.09" y="543.5" ></text>
</g>
<g >
<title>free_unref_page_list (8 samples, 0.21%)</title><rect x="1117.9" y="373" width="2.5" height="15.0" fill="rgb(219,61,54)" rx="2" ry="2" />
<text  x="1120.92" y="383.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.16%)</title><rect x="873.1" y="453" width="1.9" height="15.0" fill="rgb(228,175,46)" rx="2" ry="2" />
<text  x="876.10" y="463.5" ></text>
</g>
<g >
<title>process_vm_rw (2 samples, 0.05%)</title><rect x="1051.7" y="565" width="0.7" height="15.0" fill="rgb(248,210,13)" rx="2" ry="2" />
<text  x="1054.74" y="575.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="869.7" y="421" width="0.6" height="15.0" fill="rgb(231,106,4)" rx="2" ry="2" />
<text  x="872.68" y="431.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 2.11%)</title><rect x="11.2" y="613" width="24.9" height="15.0" fill="rgb(254,43,2)" rx="2" ry="2" />
<text  x="14.24" y="623.5" >p..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.34%)</title><rect x="868.1" y="469" width="4.1" height="15.0" fill="rgb(205,46,47)" rx="2" ry="2" />
<text  x="871.13" y="479.5" ></text>
</g>
<g >
<title>net_rx_action (5 samples, 0.13%)</title><rect x="1132.8" y="469" width="1.6" height="15.0" fill="rgb(253,67,18)" rx="2" ry="2" />
<text  x="1135.83" y="479.5" ></text>
</g>
<g >
<title>memchr_inv (1 samples, 0.03%)</title><rect x="1187.2" y="485" width="0.3" height="15.0" fill="rgb(243,166,28)" rx="2" ry="2" />
<text  x="1190.20" y="495.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (786 samples, 20.70%)</title><rect x="623.6" y="549" width="244.2" height="15.0" fill="rgb(231,126,49)" rx="2" ry="2" />
<text  x="626.61" y="559.5" >rustposix::safeposix::dispatcher..</text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (35 samples, 0.92%)</title><rect x="645.1" y="485" width="10.8" height="15.0" fill="rgb(206,93,26)" rx="2" ry="2" />
<text  x="648.05" y="495.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (74 samples, 1.95%)</title><rect x="1164.8" y="549" width="23.0" height="15.0" fill="rgb(239,54,42)" rx="2" ry="2" />
<text  x="1167.83" y="559.5" >c..</text>
</g>
<g >
<title>NaClTextMapWrapper (1 samples, 0.03%)</title><rect x="155.1" y="597" width="0.3" height="15.0" fill="rgb(230,7,16)" rx="2" ry="2" />
<text  x="158.09" y="607.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.03%)</title><rect x="1167.0" y="325" width="0.3" height="15.0" fill="rgb(246,212,43)" rx="2" ry="2" />
<text  x="1170.01" y="335.5" ></text>
</g>
<g >
<title>__free_one_page (4 samples, 0.11%)</title><rect x="1119.2" y="325" width="1.2" height="15.0" fill="rgb(245,66,37)" rx="2" ry="2" />
<text  x="1122.16" y="335.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.03%)</title><rect x="1052.4" y="565" width="0.3" height="15.0" fill="rgb(243,15,37)" rx="2" ry="2" />
<text  x="1055.36" y="575.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.03%)</title><rect x="556.8" y="501" width="0.3" height="15.0" fill="rgb(242,146,8)" rx="2" ry="2" />
<text  x="559.81" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.13%)</title><rect x="868.7" y="437" width="1.6" height="15.0" fill="rgb(212,192,24)" rx="2" ry="2" />
<text  x="871.75" y="447.5" ></text>
</g>
<g >
<title>vfs_unlink (1 samples, 0.03%)</title><rect x="160.7" y="389" width="0.3" height="15.0" fill="rgb(241,131,8)" rx="2" ry="2" />
<text  x="163.68" y="399.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (11 samples, 0.29%)</title><rect x="115.0" y="629" width="3.4" height="15.0" fill="rgb(226,160,14)" rx="2" ry="2" />
<text  x="118.01" y="639.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.16%)</title><rect x="873.1" y="437" width="1.9" height="15.0" fill="rgb(241,171,35)" rx="2" ry="2" />
<text  x="876.10" y="447.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (68 samples, 1.79%)</title><rect x="733.6" y="469" width="21.1" height="15.0" fill="rgb(235,203,41)" rx="2" ry="2" />
<text  x="736.60" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="541.0" y="405" width="0.3" height="15.0" fill="rgb(229,192,16)" rx="2" ry="2" />
<text  x="543.97" y="415.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (18 samples, 0.47%)</title><rect x="541.3" y="453" width="5.6" height="15.0" fill="rgb(226,55,30)" rx="2" ry="2" />
<text  x="544.28" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (27 samples, 0.71%)</title><rect x="394.0" y="437" width="8.4" height="15.0" fill="rgb(245,199,9)" rx="2" ry="2" />
<text  x="397.01" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (9 samples, 0.24%)</title><rect x="804.7" y="437" width="2.8" height="15.0" fill="rgb(219,55,28)" rx="2" ry="2" />
<text  x="807.74" y="447.5" ></text>
</g>
<g >
<title>find_get_entries (1 samples, 0.03%)</title><rect x="1121.3" y="325" width="0.3" height="15.0" fill="rgb(209,74,23)" rx="2" ry="2" />
<text  x="1124.34" y="335.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (81 samples, 2.13%)</title><rect x="1164.8" y="661" width="25.2" height="15.0" fill="rgb(225,165,35)" rx="2" ry="2" />
<text  x="1167.83" y="671.5" >x..</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.03%)</title><rect x="36.7" y="277" width="0.3" height="15.0" fill="rgb(252,128,27)" rx="2" ry="2" />
<text  x="39.72" y="287.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.03%)</title><rect x="1132.2" y="581" width="0.3" height="15.0" fill="rgb(208,217,28)" rx="2" ry="2" />
<text  x="1135.21" y="591.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (2 samples, 0.05%)</title><rect x="1053.0" y="645" width="0.6" height="15.0" fill="rgb(237,29,8)" rx="2" ry="2" />
<text  x="1055.99" y="655.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (5 samples, 0.13%)</title><rect x="1044.3" y="533" width="1.5" height="15.0" fill="rgb(238,144,54)" rx="2" ry="2" />
<text  x="1047.29" y="543.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 0.05%)</title><rect x="1053.0" y="549" width="0.6" height="15.0" fill="rgb(220,177,54)" rx="2" ry="2" />
<text  x="1055.99" y="559.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (1 samples, 0.03%)</title><rect x="36.1" y="533" width="0.3" height="15.0" fill="rgb(229,117,25)" rx="2" ry="2" />
<text  x="39.10" y="543.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::VariantAccess&lt;R&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (1 samples, 0.03%)</title><rect x="1097.1" y="261" width="0.3" height="15.0" fill="rgb(235,109,25)" rx="2" ry="2" />
<text  x="1100.10" y="271.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.03%)</title><rect x="623.3" y="373" width="0.3" height="15.0" fill="rgb(236,173,12)" rx="2" ry="2" />
<text  x="626.30" y="383.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="11.9" y="485" width="0.3" height="15.0" fill="rgb(223,79,21)" rx="2" ry="2" />
<text  x="14.86" y="495.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.03%)</title><rect x="10.6" y="645" width="0.3" height="15.0" fill="rgb(210,59,2)" rx="2" ry="2" />
<text  x="13.62" y="655.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.11%)</title><rect x="197.0" y="453" width="1.3" height="15.0" fill="rgb(223,22,8)" rx="2" ry="2" />
<text  x="200.04" y="463.5" ></text>
</g>
<g >
<title>__run_hrtimer (5 samples, 0.13%)</title><rect x="1165.8" y="405" width="1.5" height="15.0" fill="rgb(205,152,27)" rx="2" ry="2" />
<text  x="1168.77" y="415.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.08%)</title><rect x="872.2" y="453" width="0.9" height="15.0" fill="rgb(211,1,31)" rx="2" ry="2" />
<text  x="875.16" y="463.5" ></text>
</g>
<g >
<title>handle_pte_fault (93 samples, 2.45%)</title><rect x="1018.2" y="581" width="28.9" height="15.0" fill="rgb(214,186,43)" rx="2" ry="2" />
<text  x="1021.19" y="591.5" >ha..</text>
</g>
<g >
<title>destroy_conntrack (1 samples, 0.03%)</title><rect x="1133.8" y="213" width="0.3" height="15.0" fill="rgb(235,208,8)" rx="2" ry="2" />
<text  x="1136.77" y="223.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.03%)</title><rect x="906.3" y="565" width="0.4" height="15.0" fill="rgb(218,171,2)" rx="2" ry="2" />
<text  x="909.34" y="575.5" ></text>
</g>
<g >
<title>schedule_idle (3 samples, 0.08%)</title><rect x="1188.1" y="549" width="1.0" height="15.0" fill="rgb(246,23,18)" rx="2" ry="2" />
<text  x="1191.14" y="559.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (1 samples, 0.03%)</title><rect x="92.3" y="661" width="0.3" height="15.0" fill="rgb(251,190,13)" rx="2" ry="2" />
<text  x="95.33" y="671.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (2 samples, 0.05%)</title><rect x="1053.0" y="629" width="0.6" height="15.0" fill="rgb(232,175,51)" rx="2" ry="2" />
<text  x="1055.99" y="639.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.03%)</title><rect x="39.8" y="453" width="0.3" height="15.0" fill="rgb(239,65,50)" rx="2" ry="2" />
<text  x="42.83" y="463.5" ></text>
</g>
<g >
<title>exit_mmap (37 samples, 0.97%)</title><rect x="1109.8" y="501" width="11.5" height="15.0" fill="rgb(252,168,46)" rx="2" ry="2" />
<text  x="1112.84" y="511.5" ></text>
</g>
<g >
<title>_start (2 samples, 0.05%)</title><rect x="1097.1" y="677" width="0.6" height="15.0" fill="rgb(210,214,49)" rx="2" ry="2" />
<text  x="1100.10" y="687.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (5 samples, 0.13%)</title><rect x="87.7" y="661" width="1.5" height="15.0" fill="rgb(245,196,43)" rx="2" ry="2" />
<text  x="90.67" y="671.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 0.13%)</title><rect x="1132.8" y="485" width="1.6" height="15.0" fill="rgb(238,188,3)" rx="2" ry="2" />
<text  x="1135.83" y="495.5" ></text>
</g>
<g >
<title>HandleStackContext (2 samples, 0.05%)</title><rect x="91.7" y="661" width="0.6" height="15.0" fill="rgb(209,73,1)" rx="2" ry="2" />
<text  x="94.71" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize (1 samples, 0.03%)</title><rect x="1097.1" y="533" width="0.3" height="15.0" fill="rgb(247,216,25)" rx="2" ry="2" />
<text  x="1100.10" y="543.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.03%)</title><rect x="10.6" y="613" width="0.3" height="15.0" fill="rgb(210,120,40)" rx="2" ry="2" />
<text  x="13.62" y="623.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.03%)</title><rect x="1097.4" y="613" width="0.3" height="15.0" fill="rgb(220,172,5)" rx="2" ry="2" />
<text  x="1100.41" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (28 samples, 0.74%)</title><rect x="808.5" y="469" width="8.7" height="15.0" fill="rgb(207,139,21)" rx="2" ry="2" />
<text  x="811.47" y="479.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (75 samples, 1.97%)</title><rect x="893.9" y="597" width="23.3" height="15.0" fill="rgb(221,155,28)" rx="2" ry="2" />
<text  x="896.91" y="607.5" >N..</text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.03%)</title><rect x="1173.2" y="373" width="0.3" height="15.0" fill="rgb(217,146,51)" rx="2" ry="2" />
<text  x="1176.22" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="1052.1" y="469" width="0.3" height="15.0" fill="rgb(254,4,27)" rx="2" ry="2" />
<text  x="1055.05" y="479.5" ></text>
</g>
<g >
<title>first_packet_length (1 samples, 0.03%)</title><rect x="1127.9" y="549" width="0.3" height="15.0" fill="rgb(254,15,40)" rx="2" ry="2" />
<text  x="1130.86" y="559.5" ></text>
</g>
<g >
<title>perf_mmap__push (10 samples, 0.26%)</title><rect x="36.7" y="597" width="3.1" height="15.0" fill="rgb(241,77,40)" rx="2" ry="2" />
<text  x="39.72" y="607.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (1 samples, 0.03%)</title><rect x="1188.8" y="517" width="0.3" height="15.0" fill="rgb(222,15,16)" rx="2" ry="2" />
<text  x="1191.76" y="527.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.03%)</title><rect x="36.4" y="485" width="0.3" height="15.0" fill="rgb(254,75,47)" rx="2" ry="2" />
<text  x="39.41" y="495.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.03%)</title><rect x="1129.4" y="437" width="0.3" height="15.0" fill="rgb(253,200,52)" rx="2" ry="2" />
<text  x="1132.42" y="447.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.03%)</title><rect x="1164.2" y="597" width="0.3" height="15.0" fill="rgb(205,58,19)" rx="2" ry="2" />
<text  x="1167.21" y="607.5" ></text>
</g>
<g >
<title>ext4_da_write_end (5 samples, 0.13%)</title><rect x="38.3" y="309" width="1.5" height="15.0" fill="rgb(206,48,23)" rx="2" ry="2" />
<text  x="41.27" y="319.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.03%)</title><rect x="160.4" y="165" width="0.3" height="15.0" fill="rgb(229,31,14)" rx="2" ry="2" />
<text  x="163.37" y="175.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.03%)</title><rect x="934.9" y="565" width="0.3" height="15.0" fill="rgb(253,77,50)" rx="2" ry="2" />
<text  x="937.92" y="575.5" ></text>
</g>
<g >
<title>NaClGetDescMu (61 samples, 1.61%)</title><rect x="932.4" y="597" width="19.0" height="15.0" fill="rgb(232,120,38)" rx="2" ry="2" />
<text  x="935.44" y="607.5" ></text>
</g>
<g >
<title>unmap_vmas (37 samples, 0.97%)</title><rect x="1109.8" y="485" width="11.5" height="15.0" fill="rgb(209,35,38)" rx="2" ry="2" />
<text  x="1112.84" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="36.1" y="581" width="0.3" height="15.0" fill="rgb(230,115,45)" rx="2" ry="2" />
<text  x="39.10" y="591.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.24%)</title><rect x="821.2" y="389" width="2.8" height="15.0" fill="rgb(252,24,24)" rx="2" ry="2" />
<text  x="824.21" y="399.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (16 samples, 0.42%)</title><rect x="564.0" y="565" width="4.9" height="15.0" fill="rgb(209,61,23)" rx="2" ry="2" />
<text  x="566.96" y="575.5" ></text>
</g>
<g >
<title>DynArrayGet (1 samples, 0.03%)</title><rect x="1051.4" y="661" width="0.3" height="15.0" fill="rgb(222,7,1)" rx="2" ry="2" />
<text  x="1054.43" y="671.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (3 samples, 0.08%)</title><rect x="38.9" y="245" width="0.9" height="15.0" fill="rgb(234,115,33)" rx="2" ry="2" />
<text  x="41.89" y="255.5" ></text>
</g>
<g >
<title>NaClLoadTrampoline (1 samples, 0.03%)</title><rect x="160.1" y="549" width="0.3" height="15.0" fill="rgb(223,225,40)" rx="2" ry="2" />
<text  x="163.06" y="559.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.24%)</title><rect x="1057.6" y="661" width="2.8" height="15.0" fill="rgb(208,226,17)" rx="2" ry="2" />
<text  x="1060.65" y="671.5" ></text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (1 samples, 0.03%)</title><rect x="155.1" y="565" width="0.3" height="15.0" fill="rgb(214,158,18)" rx="2" ry="2" />
<text  x="158.09" y="575.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.03%)</title><rect x="10.9" y="597" width="0.3" height="15.0" fill="rgb(209,8,39)" rx="2" ry="2" />
<text  x="13.93" y="607.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (4 samples, 0.11%)</title><rect x="45.7" y="661" width="1.3" height="15.0" fill="rgb(222,121,38)" rx="2" ry="2" />
<text  x="48.73" y="671.5" ></text>
</g>
<g >
<title>alx_refill_rx_ring (1 samples, 0.03%)</title><rect x="1132.8" y="405" width="0.3" height="15.0" fill="rgb(223,160,24)" rx="2" ry="2" />
<text  x="1135.83" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="433.2" y="421" width="0.3" height="15.0" fill="rgb(231,63,26)" rx="2" ry="2" />
<text  x="436.16" y="431.5" ></text>
</g>
<g >
<title>__libc_close (1 samples, 0.03%)</title><rect x="36.4" y="581" width="0.3" height="15.0" fill="rgb(238,40,53)" rx="2" ry="2" />
<text  x="39.41" y="591.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (40 samples, 1.05%)</title><rect x="656.5" y="485" width="12.5" height="15.0" fill="rgb(217,190,31)" rx="2" ry="2" />
<text  x="659.55" y="495.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.03%)</title><rect x="556.5" y="517" width="0.3" height="15.0" fill="rgb(219,136,28)" rx="2" ry="2" />
<text  x="559.50" y="527.5" ></text>
</g>
<g >
<title>get_page_from_freelist (45 samples, 1.18%)</title><rect x="1021.0" y="517" width="14.0" height="15.0" fill="rgb(233,125,29)" rx="2" ry="2" />
<text  x="1023.98" y="527.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="161.0" y="357" width="0.3" height="15.0" fill="rgb(206,137,28)" rx="2" ry="2" />
<text  x="164.00" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1052.4" y="613" width="0.3" height="15.0" fill="rgb(252,52,38)" rx="2" ry="2" />
<text  x="1055.36" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (18 samples, 0.47%)</title><rect x="632.9" y="453" width="5.6" height="15.0" fill="rgb(219,15,44)" rx="2" ry="2" />
<text  x="635.93" y="463.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.03%)</title><rect x="160.4" y="149" width="0.3" height="15.0" fill="rgb(233,85,22)" rx="2" ry="2" />
<text  x="163.37" y="159.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="88.0" y="629" width="0.3" height="15.0" fill="rgb(241,74,32)" rx="2" ry="2" />
<text  x="90.98" y="639.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.39%)</title><rect x="826.5" y="389" width="4.7" height="15.0" fill="rgb(218,73,30)" rx="2" ry="2" />
<text  x="829.49" y="399.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3 samples, 0.08%)</title><rect x="1115.1" y="389" width="1.0" height="15.0" fill="rgb(228,188,21)" rx="2" ry="2" />
<text  x="1118.12" y="399.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.03%)</title><rect x="1127.2" y="629" width="0.4" height="15.0" fill="rgb(224,154,9)" rx="2" ry="2" />
<text  x="1130.24" y="639.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (3 samples, 0.08%)</title><rect x="1051.7" y="661" width="1.0" height="15.0" fill="rgb(227,118,29)" rx="2" ry="2" />
<text  x="1054.74" y="671.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.03%)</title><rect x="1129.4" y="501" width="0.3" height="15.0" fill="rgb(247,48,2)" rx="2" ry="2" />
<text  x="1132.42" y="511.5" ></text>
</g>
<g >
<title>_start (3 samples, 0.08%)</title><rect x="10.0" y="677" width="0.9" height="15.0" fill="rgb(231,166,44)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.03%)</title><rect x="1128.5" y="613" width="0.3" height="15.0" fill="rgb(217,228,34)" rx="2" ry="2" />
<text  x="1131.48" y="623.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.03%)</title><rect x="160.4" y="181" width="0.3" height="15.0" fill="rgb(227,121,29)" rx="2" ry="2" />
<text  x="163.37" y="191.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2 samples, 0.05%)</title><rect x="1094.9" y="629" width="0.7" height="15.0" fill="rgb(241,144,50)" rx="2" ry="2" />
<text  x="1097.93" y="639.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (347 samples, 9.14%)</title><rect x="433.5" y="453" width="107.8" height="15.0" fill="rgb(228,165,14)" rx="2" ry="2" />
<text  x="436.47" y="463.5" >ringbuf::cons..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="541.0" y="341" width="0.3" height="15.0" fill="rgb(240,129,51)" rx="2" ry="2" />
<text  x="543.97" y="351.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (20 samples, 0.53%)</title><rect x="562.7" y="581" width="6.2" height="15.0" fill="rgb(234,48,11)" rx="2" ry="2" />
<text  x="565.72" y="591.5" ></text>
</g>
<g >
<title>sock_poll (2 samples, 0.05%)</title><rect x="1129.7" y="597" width="0.6" height="15.0" fill="rgb(215,186,18)" rx="2" ry="2" />
<text  x="1132.73" y="607.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="1133.8" y="197" width="0.3" height="15.0" fill="rgb(229,203,7)" rx="2" ry="2" />
<text  x="1136.77" y="207.5" ></text>
</g>
<g >
<title>free_unref_page_commit (7 samples, 0.18%)</title><rect x="1118.2" y="357" width="2.2" height="15.0" fill="rgb(254,45,36)" rx="2" ry="2" />
<text  x="1121.23" y="367.5" ></text>
</g>
<g >
<title>lind_write (979 samples, 25.78%)</title><rect x="587.0" y="581" width="304.1" height="15.0" fill="rgb(248,139,7)" rx="2" ry="2" />
<text  x="589.95" y="591.5" >lind_write</text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="160.4" y="405" width="0.3" height="15.0" fill="rgb(250,47,33)" rx="2" ry="2" />
<text  x="163.37" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (16 samples, 0.42%)</title><rect x="628.0" y="517" width="4.9" height="15.0" fill="rgb(235,3,43)" rx="2" ry="2" />
<text  x="630.96" y="527.5" ></text>
</g>
<g >
<title>user_path_at_empty (1 samples, 0.03%)</title><rect x="1127.6" y="613" width="0.3" height="15.0" fill="rgb(210,4,33)" rx="2" ry="2" />
<text  x="1130.55" y="623.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.03%)</title><rect x="1132.8" y="373" width="0.3" height="15.0" fill="rgb(213,38,23)" rx="2" ry="2" />
<text  x="1135.83" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="155.1" y="485" width="0.3" height="15.0" fill="rgb(226,159,37)" rx="2" ry="2" />
<text  x="158.09" y="495.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (1 samples, 0.03%)</title><rect x="861.3" y="485" width="0.3" height="15.0" fill="rgb(216,180,45)" rx="2" ry="2" />
<text  x="864.29" y="495.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.03%)</title><rect x="623.3" y="229" width="0.3" height="15.0" fill="rgb(221,84,10)" rx="2" ry="2" />
<text  x="626.30" y="239.5" ></text>
</g>
<g >
<title>NaClLog (5 samples, 0.13%)</title><rect x="949.8" y="549" width="1.6" height="15.0" fill="rgb(240,182,35)" rx="2" ry="2" />
<text  x="952.84" y="559.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="39.8" y="533" width="0.3" height="15.0" fill="rgb(253,71,4)" rx="2" ry="2" />
<text  x="42.83" y="543.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.03%)</title><rect x="36.1" y="549" width="0.3" height="15.0" fill="rgb(207,199,41)" rx="2" ry="2" />
<text  x="39.10" y="559.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.03%)</title><rect x="1121.3" y="405" width="0.3" height="15.0" fill="rgb(223,87,5)" rx="2" ry="2" />
<text  x="1124.34" y="415.5" ></text>
</g>
<g >
<title>CompareAndSwap (1 samples, 0.03%)</title><rect x="1051.1" y="661" width="0.3" height="15.0" fill="rgb(237,108,38)" rx="2" ry="2" />
<text  x="1054.12" y="671.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.03%)</title><rect x="36.1" y="517" width="0.3" height="15.0" fill="rgb(235,135,36)" rx="2" ry="2" />
<text  x="39.10" y="527.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.03%)</title><rect x="826.2" y="421" width="0.3" height="15.0" fill="rgb(241,207,38)" rx="2" ry="2" />
<text  x="829.18" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (21 samples, 0.55%)</title><rect x="609.9" y="485" width="6.6" height="15.0" fill="rgb(244,180,35)" rx="2" ry="2" />
<text  x="612.94" y="495.5" ></text>
</g>
<g >
<title>lind_exit (2 samples, 0.05%)</title><rect x="160.4" y="613" width="0.6" height="15.0" fill="rgb(225,147,13)" rx="2" ry="2" />
<text  x="163.37" y="623.5" ></text>
</g>
<g >
<title>udp_poll (1 samples, 0.03%)</title><rect x="1129.7" y="581" width="0.3" height="15.0" fill="rgb(239,87,39)" rx="2" ry="2" />
<text  x="1132.73" y="591.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.03%)</title><rect x="861.3" y="453" width="0.3" height="15.0" fill="rgb(218,46,4)" rx="2" ry="2" />
<text  x="864.29" y="463.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (1 samples, 0.03%)</title><rect x="1128.2" y="629" width="0.3" height="15.0" fill="rgb(226,190,36)" rx="2" ry="2" />
<text  x="1131.17" y="639.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22 samples, 0.58%)</title><rect x="819.0" y="421" width="6.9" height="15.0" fill="rgb(225,20,35)" rx="2" ry="2" />
<text  x="822.04" y="431.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (29 samples, 0.76%)</title><rect x="403.3" y="453" width="9.0" height="15.0" fill="rgb(219,153,18)" rx="2" ry="2" />
<text  x="406.33" y="463.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.08%)</title><rect x="1041.2" y="533" width="0.9" height="15.0" fill="rgb(219,209,15)" rx="2" ry="2" />
<text  x="1044.18" y="543.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.03%)</title><rect x="161.0" y="437" width="0.3" height="15.0" fill="rgb(234,77,33)" rx="2" ry="2" />
<text  x="164.00" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="36.4" y="565" width="0.3" height="15.0" fill="rgb(215,99,21)" rx="2" ry="2" />
<text  x="39.41" y="575.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.03%)</title><rect x="1163.3" y="533" width="0.3" height="15.0" fill="rgb(220,218,32)" rx="2" ry="2" />
<text  x="1166.28" y="543.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.03%)</title><rect x="1131.0" y="613" width="0.3" height="15.0" fill="rgb(227,163,13)" rx="2" ry="2" />
<text  x="1133.97" y="623.5" ></text>
</g>
<g >
<title>__lookup_slow (1 samples, 0.03%)</title><rect x="160.7" y="277" width="0.3" height="15.0" fill="rgb(253,109,39)" rx="2" ry="2" />
<text  x="163.68" y="287.5" ></text>
</g>
<g >
<title>NaClLog (2 samples, 0.05%)</title><rect x="42.3" y="661" width="0.6" height="15.0" fill="rgb(250,84,30)" rx="2" ry="2" />
<text  x="45.31" y="671.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (38 samples, 1.00%)</title><rect x="1109.8" y="629" width="11.8" height="15.0" fill="rgb(213,148,25)" rx="2" ry="2" />
<text  x="1112.84" y="639.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (1 samples, 0.03%)</title><rect x="43.9" y="661" width="0.3" height="15.0" fill="rgb(236,110,35)" rx="2" ry="2" />
<text  x="46.87" y="671.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (10 samples, 0.26%)</title><rect x="36.7" y="357" width="3.1" height="15.0" fill="rgb(216,176,32)" rx="2" ry="2" />
<text  x="39.72" y="367.5" ></text>
</g>
<g >
<title>do_group_exit (38 samples, 1.00%)</title><rect x="1109.8" y="565" width="11.8" height="15.0" fill="rgb(208,12,49)" rx="2" ry="2" />
<text  x="1112.84" y="575.5" ></text>
</g>
<g >
<title>security_file_free (1 samples, 0.03%)</title><rect x="36.4" y="437" width="0.3" height="15.0" fill="rgb(243,37,19)" rx="2" ry="2" />
<text  x="39.41" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (44 samples, 1.16%)</title><rect x="609.9" y="501" width="13.7" height="15.0" fill="rgb(237,172,5)" rx="2" ry="2" />
<text  x="612.94" y="511.5" ></text>
</g>
<g >
<title>hrtimer_cancel (2 samples, 0.05%)</title><rect x="1189.1" y="517" width="0.6" height="15.0" fill="rgb(220,208,37)" rx="2" ry="2" />
<text  x="1192.07" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.03%)</title><rect x="1052.4" y="597" width="0.3" height="15.0" fill="rgb(249,190,39)" rx="2" ry="2" />
<text  x="1055.36" y="607.5" ></text>
</g>
<g >
<title>vmstat_shepherd (1 samples, 0.03%)</title><rect x="1131.9" y="613" width="0.3" height="15.0" fill="rgb(239,155,17)" rx="2" ry="2" />
<text  x="1134.90" y="623.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.03%)</title><rect x="623.3" y="277" width="0.3" height="15.0" fill="rgb(236,176,24)" rx="2" ry="2" />
<text  x="626.30" y="287.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.03%)</title><rect x="155.1" y="357" width="0.3" height="15.0" fill="rgb(224,23,52)" rx="2" ry="2" />
<text  x="158.09" y="367.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="1117.6" y="357" width="0.3" height="15.0" fill="rgb(222,3,2)" rx="2" ry="2" />
<text  x="1120.61" y="367.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (1 samples, 0.03%)</title><rect x="39.5" y="197" width="0.3" height="15.0" fill="rgb(252,19,18)" rx="2" ry="2" />
<text  x="42.52" y="207.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.05%)</title><rect x="915.0" y="565" width="0.7" height="15.0" fill="rgb(232,170,36)" rx="2" ry="2" />
<text  x="918.04" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (23 samples, 0.61%)</title><rect x="616.5" y="485" width="7.1" height="15.0" fill="rgb(218,157,4)" rx="2" ry="2" />
<text  x="619.47" y="495.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (12 samples, 0.32%)</title><rect x="78.0" y="645" width="3.8" height="15.0" fill="rgb(228,71,2)" rx="2" ry="2" />
<text  x="81.04" y="655.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.03%)</title><rect x="1129.4" y="549" width="0.3" height="15.0" fill="rgb(222,79,3)" rx="2" ry="2" />
<text  x="1132.42" y="559.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="820.0" y="389" width="0.3" height="15.0" fill="rgb(248,192,4)" rx="2" ry="2" />
<text  x="822.97" y="399.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="1173.2" y="357" width="0.3" height="15.0" fill="rgb(230,146,3)" rx="2" ry="2" />
<text  x="1176.22" y="367.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (1 samples, 0.03%)</title><rect x="1189.7" y="517" width="0.3" height="15.0" fill="rgb(206,223,14)" rx="2" ry="2" />
<text  x="1192.69" y="527.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (24 samples, 0.63%)</title><rect x="907.6" y="565" width="7.4" height="15.0" fill="rgb(216,108,41)" rx="2" ry="2" />
<text  x="910.58" y="575.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (2 samples, 0.05%)</title><rect x="1133.8" y="389" width="0.6" height="15.0" fill="rgb(238,110,34)" rx="2" ry="2" />
<text  x="1136.77" y="399.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::deserialize_number (1 samples, 0.03%)</title><rect x="1097.1" y="101" width="0.3" height="15.0" fill="rgb(230,9,46)" rx="2" ry="2" />
<text  x="1100.10" y="111.5" ></text>
</g>
<g >
<title>__consume_stateless_skb (1 samples, 0.03%)</title><rect x="1130.7" y="517" width="0.3" height="15.0" fill="rgb(227,64,11)" rx="2" ry="2" />
<text  x="1133.66" y="527.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.03%)</title><rect x="39.8" y="597" width="0.3" height="15.0" fill="rgb(249,89,13)" rx="2" ry="2" />
<text  x="42.83" y="607.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (1 samples, 0.03%)</title><rect x="834.6" y="469" width="0.3" height="15.0" fill="rgb(244,186,18)" rx="2" ry="2" />
<text  x="837.57" y="479.5" ></text>
</g>
<g >
<title>udp_ioctl (1 samples, 0.03%)</title><rect x="1127.9" y="565" width="0.3" height="15.0" fill="rgb(219,159,1)" rx="2" ry="2" />
<text  x="1130.86" y="575.5" ></text>
</g>
<g >
<title>_perf_event_enable (68 samples, 1.79%)</title><rect x="14.7" y="469" width="21.1" height="15.0" fill="rgb(214,70,6)" rx="2" ry="2" />
<text  x="17.66" y="479.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (9 samples, 0.24%)</title><rect x="1035.6" y="549" width="2.8" height="15.0" fill="rgb(240,10,41)" rx="2" ry="2" />
<text  x="1038.59" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="675.8" y="437" width="0.3" height="15.0" fill="rgb(221,66,6)" rx="2" ry="2" />
<text  x="678.81" y="447.5" ></text>
</g>
<g >
<title>pipe_write (1 samples, 0.03%)</title><rect x="1131.0" y="581" width="0.3" height="15.0" fill="rgb(247,105,45)" rx="2" ry="2" />
<text  x="1133.97" y="591.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (186 samples, 4.90%)</title><rect x="675.8" y="469" width="57.8" height="15.0" fill="rgb(235,150,15)" rx="2" ry="2" />
<text  x="678.81" y="479.5" >std::s..</text>
</g>
<g >
<title>alloc_pages_vma (51 samples, 1.34%)</title><rect x="1019.4" y="549" width="15.9" height="15.0" fill="rgb(250,9,14)" rx="2" ry="2" />
<text  x="1022.43" y="559.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (641 samples, 16.88%)</title><rect x="357.4" y="501" width="199.1" height="15.0" fill="rgb(210,1,54)" rx="2" ry="2" />
<text  x="360.35" y="511.5" >ringbuf::consumer::Consume..</text>
</g>
<g >
<title>find_busiest_group (7 samples, 0.18%)</title><rect x="1170.1" y="357" width="2.2" height="15.0" fill="rgb(248,188,33)" rx="2" ry="2" />
<text  x="1173.12" y="367.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.03%)</title><rect x="160.4" y="245" width="0.3" height="15.0" fill="rgb(229,66,23)" rx="2" ry="2" />
<text  x="163.37" y="255.5" ></text>
</g>
<g >
<title>read (1 samples, 0.03%)</title><rect x="10.9" y="613" width="0.3" height="15.0" fill="rgb(234,2,45)" rx="2" ry="2" />
<text  x="13.93" y="623.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.03%)</title><rect x="1097.1" y="37" width="0.3" height="15.0" fill="rgb(238,126,53)" rx="2" ry="2" />
<text  x="1100.10" y="47.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.03%)</title><rect x="1164.2" y="549" width="0.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1167.21" y="559.5" ></text>
</g>
<g >
<title>pm_qos_read_value (1 samples, 0.03%)</title><rect x="1185.3" y="501" width="0.4" height="15.0" fill="rgb(234,169,25)" rx="2" ry="2" />
<text  x="1188.34" y="511.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (1 samples, 0.03%)</title><rect x="570.8" y="613" width="0.3" height="15.0" fill="rgb(220,129,49)" rx="2" ry="2" />
<text  x="573.80" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (12 samples, 0.32%)</title><rect x="606.2" y="517" width="3.7" height="15.0" fill="rgb(232,163,9)" rx="2" ry="2" />
<text  x="609.21" y="527.5" ></text>
</g>
<g >
<title>vfs_open (1 samples, 0.03%)</title><rect x="1128.5" y="565" width="0.3" height="15.0" fill="rgb(209,141,15)" rx="2" ry="2" />
<text  x="1131.48" y="575.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.03%)</title><rect x="1128.2" y="581" width="0.3" height="15.0" fill="rgb(238,26,18)" rx="2" ry="2" />
<text  x="1131.17" y="591.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.03%)</title><rect x="1121.3" y="469" width="0.3" height="15.0" fill="rgb(223,215,51)" rx="2" ry="2" />
<text  x="1124.34" y="479.5" ></text>
</g>
<g >
<title>do_dentry_open (1 samples, 0.03%)</title><rect x="1128.5" y="549" width="0.3" height="15.0" fill="rgb(224,165,29)" rx="2" ry="2" />
<text  x="1131.48" y="559.5" ></text>
</g>
<g >
<title>NaClDescRef (1 samples, 0.03%)</title><rect x="41.1" y="661" width="0.3" height="15.0" fill="rgb(245,221,51)" rx="2" ry="2" />
<text  x="44.07" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.03%)</title><rect x="36.1" y="565" width="0.3" height="15.0" fill="rgb(233,178,16)" rx="2" ry="2" />
<text  x="39.10" y="575.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.05%)</title><rect x="877.1" y="389" width="0.7" height="15.0" fill="rgb(229,204,37)" rx="2" ry="2" />
<text  x="880.14" y="399.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="1135.0" y="469" width="0.3" height="15.0" fill="rgb(205,172,10)" rx="2" ry="2" />
<text  x="1138.01" y="479.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.03%)</title><rect x="1097.1" y="357" width="0.3" height="15.0" fill="rgb(240,111,18)" rx="2" ry="2" />
<text  x="1100.10" y="367.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="1133.8" y="245" width="0.3" height="15.0" fill="rgb(205,122,50)" rx="2" ry="2" />
<text  x="1136.77" y="255.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.03%)</title><rect x="1048.0" y="629" width="0.3" height="15.0" fill="rgb(229,55,25)" rx="2" ry="2" />
<text  x="1051.01" y="639.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="161.0" y="341" width="0.3" height="15.0" fill="rgb(220,90,33)" rx="2" ry="2" />
<text  x="164.00" y="351.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.03%)</title><rect x="541.0" y="245" width="0.3" height="15.0" fill="rgb(206,78,43)" rx="2" ry="2" />
<text  x="543.97" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (94 samples, 2.47%)</title><rect x="1017.9" y="597" width="29.2" height="15.0" fill="rgb(244,63,14)" rx="2" ry="2" />
<text  x="1020.88" y="607.5" >__..</text>
</g>
<g >
<title>event_function (65 samples, 1.71%)</title><rect x="15.6" y="389" width="20.2" height="15.0" fill="rgb(232,31,3)" rx="2" ry="2" />
<text  x="18.59" y="399.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (6 samples, 0.16%)</title><rect x="118.4" y="645" width="1.9" height="15.0" fill="rgb(242,49,6)" rx="2" ry="2" />
<text  x="121.43" y="655.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.08%)</title><rect x="830.2" y="341" width="1.0" height="15.0" fill="rgb(211,202,10)" rx="2" ry="2" />
<text  x="833.22" y="351.5" ></text>
</g>
<g >
<title>NaClSysWrite (1,240 samples, 32.65%)</title><rect x="572.7" y="629" width="385.2" height="15.0" fill="rgb(251,192,19)" rx="2" ry="2" />
<text  x="575.66" y="639.5" >NaClSysWrite</text>
</g>
<g >
<title>ovl_remove_and_whiteout (1 samples, 0.03%)</title><rect x="160.7" y="341" width="0.3" height="15.0" fill="rgb(226,218,39)" rx="2" ry="2" />
<text  x="163.68" y="351.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (2 samples, 0.05%)</title><rect x="160.4" y="645" width="0.6" height="15.0" fill="rgb(250,107,53)" rx="2" ry="2" />
<text  x="163.37" y="655.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.03%)</title><rect x="957.9" y="629" width="0.3" height="15.0" fill="rgb(243,159,16)" rx="2" ry="2" />
<text  x="960.91" y="639.5" ></text>
</g>
<g >
<title>kthread (3 samples, 0.08%)</title><rect x="1131.6" y="661" width="0.9" height="15.0" fill="rgb(228,158,4)" rx="2" ry="2" />
<text  x="1134.59" y="671.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.03%)</title><rect x="1166.1" y="325" width="0.3" height="15.0" fill="rgb(233,100,23)" rx="2" ry="2" />
<text  x="1169.08" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.03%)</title><rect x="1164.5" y="613" width="0.3" height="15.0" fill="rgb(253,62,31)" rx="2" ry="2" />
<text  x="1167.52" y="623.5" ></text>
</g>
<g >
<title>__find_get_block (1 samples, 0.03%)</title><rect x="39.5" y="165" width="0.3" height="15.0" fill="rgb(205,82,32)" rx="2" ry="2" />
<text  x="42.52" y="175.5" ></text>
</g>
<g >
<title>cpuidle_select (6 samples, 0.16%)</title><rect x="1162.0" y="597" width="1.9" height="15.0" fill="rgb(223,225,25)" rx="2" ry="2" />
<text  x="1165.04" y="607.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.03%)</title><rect x="1097.1" y="53" width="0.3" height="15.0" fill="rgb(253,166,39)" rx="2" ry="2" />
<text  x="1100.10" y="63.5" ></text>
</g>
<g >
<title>update_group_capacity (1 samples, 0.03%)</title><rect x="1170.1" y="341" width="0.3" height="15.0" fill="rgb(247,4,23)" rx="2" ry="2" />
<text  x="1173.12" y="351.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (1 samples, 0.03%)</title><rect x="952.0" y="613" width="0.3" height="15.0" fill="rgb(248,221,21)" rx="2" ry="2" />
<text  x="955.01" y="623.5" ></text>
</g>
<g >
<title>NaClDescUnref (81 samples, 2.13%)</title><rect x="892.0" y="613" width="25.2" height="15.0" fill="rgb(221,15,24)" rx="2" ry="2" />
<text  x="895.05" y="623.5" >N..</text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (2 samples, 0.05%)</title><rect x="1051.7" y="549" width="0.7" height="15.0" fill="rgb(247,73,15)" rx="2" ry="2" />
<text  x="1054.74" y="559.5" ></text>
</g>
<g >
<title>record__write (10 samples, 0.26%)</title><rect x="36.7" y="565" width="3.1" height="15.0" fill="rgb(245,6,49)" rx="2" ry="2" />
<text  x="39.72" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (783 samples, 20.62%)</title><rect x="624.5" y="533" width="243.3" height="15.0" fill="rgb(214,175,23)" rx="2" ry="2" />
<text  x="627.54" y="543.5" >rustposix::safeposix::syscalls::..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="623.3" y="389" width="0.3" height="15.0" fill="rgb(231,23,14)" rx="2" ry="2" />
<text  x="626.30" y="399.5" ></text>
</g>
<g >
<title>vfs_iter_write (10 samples, 0.26%)</title><rect x="36.7" y="405" width="3.1" height="15.0" fill="rgb(209,183,54)" rx="2" ry="2" />
<text  x="39.72" y="415.5" ></text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.05%)</title><rect x="834.9" y="453" width="0.6" height="15.0" fill="rgb(242,159,48)" rx="2" ry="2" />
<text  x="837.88" y="463.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.03%)</title><rect x="1132.2" y="533" width="0.3" height="15.0" fill="rgb(225,151,43)" rx="2" ry="2" />
<text  x="1135.21" y="543.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (2 samples, 0.05%)</title><rect x="927.2" y="581" width="0.6" height="15.0" fill="rgb(225,48,32)" rx="2" ry="2" />
<text  x="930.16" y="591.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.03%)</title><rect x="39.8" y="437" width="0.3" height="15.0" fill="rgb(239,227,9)" rx="2" ry="2" />
<text  x="42.83" y="447.5" ></text>
</g>
<g >
<title>exc_page_fault (110 samples, 2.90%)</title><rect x="1014.1" y="645" width="34.2" height="15.0" fill="rgb(246,221,14)" rx="2" ry="2" />
<text  x="1017.15" y="655.5" >ex..</text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="1131.0" y="645" width="0.3" height="15.0" fill="rgb(253,37,23)" rx="2" ry="2" />
<text  x="1133.97" y="655.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (3 samples, 0.08%)</title><rect x="741.1" y="453" width="0.9" height="15.0" fill="rgb(212,222,48)" rx="2" ry="2" />
<text  x="744.05" y="463.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (25 samples, 0.66%)</title><rect x="1173.8" y="501" width="7.8" height="15.0" fill="rgb(229,217,48)" rx="2" ry="2" />
<text  x="1176.84" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.03%)</title><rect x="88.0" y="581" width="0.3" height="15.0" fill="rgb(205,21,2)" rx="2" ry="2" />
<text  x="90.98" y="591.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (2 samples, 0.05%)</title><rect x="38.3" y="277" width="0.6" height="15.0" fill="rgb(230,224,36)" rx="2" ry="2" />
<text  x="41.27" y="287.5" ></text>
</g>
<g >
<title>NaClPageAllocInternalFlags (1 samples, 0.03%)</title><rect x="161.0" y="533" width="0.3" height="15.0" fill="rgb(234,60,43)" rx="2" ry="2" />
<text  x="164.00" y="543.5" ></text>
</g>
<g >
<title>apparmor_file_open (1 samples, 0.03%)</title><rect x="1128.5" y="533" width="0.3" height="15.0" fill="rgb(221,164,41)" rx="2" ry="2" />
<text  x="1131.48" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="869.4" y="421" width="0.3" height="15.0" fill="rgb(228,112,3)" rx="2" ry="2" />
<text  x="872.37" y="431.5" ></text>
</g>
<g >
<title>napi_complete_done (2 samples, 0.05%)</title><rect x="1133.8" y="421" width="0.6" height="15.0" fill="rgb(217,20,35)" rx="2" ry="2" />
<text  x="1136.77" y="431.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.03%)</title><rect x="10.6" y="629" width="0.3" height="15.0" fill="rgb(249,15,33)" rx="2" ry="2" />
<text  x="13.62" y="639.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (4 samples, 0.11%)</title><rect x="1129.1" y="613" width="1.2" height="15.0" fill="rgb(220,104,41)" rx="2" ry="2" />
<text  x="1132.10" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (186 samples, 4.90%)</title><rect x="675.8" y="453" width="57.8" height="15.0" fill="rgb(214,161,19)" rx="2" ry="2" />
<text  x="678.81" y="463.5" >std::s..</text>
</g>
<g >
<title>node_dirty_ok (1 samples, 0.03%)</title><rect x="37.7" y="213" width="0.3" height="15.0" fill="rgb(254,88,44)" rx="2" ry="2" />
<text  x="40.65" y="223.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.03%)</title><rect x="161.3" y="501" width="0.3" height="15.0" fill="rgb(233,19,25)" rx="2" ry="2" />
<text  x="164.31" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.03%)</title><rect x="833.6" y="437" width="0.3" height="15.0" fill="rgb(209,185,41)" rx="2" ry="2" />
<text  x="836.64" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.39%)</title><rect x="645.1" y="453" width="4.6" height="15.0" fill="rgb(225,119,37)" rx="2" ry="2" />
<text  x="648.05" y="463.5" ></text>
</g>
<g >
<title>CachedMapWritableText (1 samples, 0.03%)</title><rect x="155.1" y="581" width="0.3" height="15.0" fill="rgb(246,99,36)" rx="2" ry="2" />
<text  x="158.09" y="591.5" ></text>
</g>
<g >
<title>__cmd_record (1 samples, 0.03%)</title><rect x="10.9" y="645" width="0.3" height="15.0" fill="rgb(206,130,3)" rx="2" ry="2" />
<text  x="13.93" y="655.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (38 samples, 1.00%)</title><rect x="1109.8" y="613" width="11.8" height="15.0" fill="rgb(245,176,19)" rx="2" ry="2" />
<text  x="1112.84" y="623.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::GenericInode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.03%)</title><rect x="1097.1" y="197" width="0.3" height="15.0" fill="rgb(250,114,18)" rx="2" ry="2" />
<text  x="1100.10" y="207.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.03%)</title><rect x="37.3" y="245" width="0.4" height="15.0" fill="rgb(251,201,14)" rx="2" ry="2" />
<text  x="40.34" y="255.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (15 samples, 0.39%)</title><rect x="826.5" y="437" width="4.7" height="15.0" fill="rgb(243,122,50)" rx="2" ry="2" />
<text  x="829.49" y="447.5" ></text>
</g>
<g >
<title>expand_words (1 samples, 0.03%)</title><rect x="10.3" y="581" width="0.3" height="15.0" fill="rgb(242,174,31)" rx="2" ry="2" />
<text  x="13.31" y="591.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.03%)</title><rect x="1130.7" y="581" width="0.3" height="15.0" fill="rgb(234,15,38)" rx="2" ry="2" />
<text  x="1133.66" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.32%)</title><rect x="606.2" y="533" width="3.7" height="15.0" fill="rgb(246,213,29)" rx="2" ry="2" />
<text  x="609.21" y="543.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (17 samples, 0.45%)</title><rect x="1038.4" y="549" width="5.3" height="15.0" fill="rgb(206,18,5)" rx="2" ry="2" />
<text  x="1041.38" y="559.5" ></text>
</g>
<g >
<title>alx_mask_msix (1 samples, 0.03%)</title><rect x="1132.5" y="453" width="0.3" height="15.0" fill="rgb(231,101,23)" rx="2" ry="2" />
<text  x="1135.52" y="463.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (163 samples, 4.29%)</title><rect x="757.2" y="485" width="50.7" height="15.0" fill="rgb(219,96,8)" rx="2" ry="2" />
<text  x="760.21" y="495.5" >ringb..</text>
</g>
<g >
<title>tick_nohz_stop_tick (2 samples, 0.05%)</title><rect x="1187.2" y="517" width="0.6" height="15.0" fill="rgb(233,57,25)" rx="2" ry="2" />
<text  x="1190.20" y="527.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.08%)</title><rect x="872.2" y="469" width="0.9" height="15.0" fill="rgb(230,165,49)" rx="2" ry="2" />
<text  x="875.16" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (38 samples, 1.00%)</title><rect x="1109.8" y="661" width="11.8" height="15.0" fill="rgb(216,145,2)" rx="2" ry="2" />
<text  x="1112.84" y="671.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.03%)</title><rect x="556.8" y="485" width="0.3" height="15.0" fill="rgb(239,22,18)" rx="2" ry="2" />
<text  x="559.81" y="495.5" ></text>
</g>
<g >
<title>NaClCreateThread (1 samples, 0.03%)</title><rect x="161.0" y="613" width="0.3" height="15.0" fill="rgb(215,206,36)" rx="2" ry="2" />
<text  x="164.00" y="623.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.03%)</title><rect x="867.8" y="517" width="0.3" height="15.0" fill="rgb(241,16,12)" rx="2" ry="2" />
<text  x="870.81" y="527.5" ></text>
</g>
<g >
<title>__GI_munmap (1 samples, 0.03%)</title><rect x="158.8" y="533" width="0.3" height="15.0" fill="rgb(213,1,49)" rx="2" ry="2" />
<text  x="161.82" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.03%)</title><rect x="88.0" y="597" width="0.3" height="15.0" fill="rgb(210,89,14)" rx="2" ry="2" />
<text  x="90.98" y="607.5" ></text>
</g>
<g >
<title>run_rebalance_domains (17 samples, 0.45%)</title><rect x="1168.3" y="405" width="5.2" height="15.0" fill="rgb(206,112,40)" rx="2" ry="2" />
<text  x="1171.25" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="88.3" y="645" width="0.3" height="15.0" fill="rgb(221,99,32)" rx="2" ry="2" />
<text  x="91.29" y="655.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.79%)</title><rect x="807.9" y="501" width="9.3" height="15.0" fill="rgb(251,222,25)" rx="2" ry="2" />
<text  x="810.85" y="511.5" ></text>
</g>
<g >
<title>cmd_record (1 samples, 0.03%)</title><rect x="10.9" y="661" width="0.3" height="15.0" fill="rgb(224,207,5)" rx="2" ry="2" />
<text  x="13.93" y="671.5" ></text>
</g>
<g >
<title>find_lock_entry (1 samples, 0.03%)</title><rect x="155.1" y="341" width="0.3" height="15.0" fill="rgb(246,209,48)" rx="2" ry="2" />
<text  x="158.09" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="88.0" y="645" width="0.3" height="15.0" fill="rgb(237,209,18)" rx="2" ry="2" />
<text  x="90.98" y="655.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (15 samples, 0.39%)</title><rect x="945.2" y="533" width="4.6" height="15.0" fill="rgb(231,92,47)" rx="2" ry="2" />
<text  x="948.18" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.9" y="677" width="0.3" height="15.0" fill="rgb(228,128,3)" rx="2" ry="2" />
<text  x="13.93" y="687.5" ></text>
</g>
<g >
<title>swapper (220 samples, 5.79%)</title><rect x="1121.6" y="693" width="68.4" height="15.0" fill="rgb(253,207,6)" rx="2" ry="2" />
<text  x="1124.65" y="703.5" >swapper</text>
</g>
<g >
<title>__netif_receive_skb_list_core (2 samples, 0.05%)</title><rect x="1133.8" y="373" width="0.6" height="15.0" fill="rgb(212,78,37)" rx="2" ry="2" />
<text  x="1136.77" y="383.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (10 samples, 0.26%)</title><rect x="36.7" y="341" width="3.1" height="15.0" fill="rgb(237,41,48)" rx="2" ry="2" />
<text  x="39.72" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.39%)</title><rect x="826.5" y="373" width="4.7" height="15.0" fill="rgb(215,99,1)" rx="2" ry="2" />
<text  x="829.49" y="383.5" ></text>
</g>
<g >
<title>DynArrayGet (4 samples, 0.11%)</title><rect x="932.7" y="581" width="1.3" height="15.0" fill="rgb(227,143,2)" rx="2" ry="2" />
<text  x="935.75" y="591.5" ></text>
</g>
<g >
<title>start_secondary (104 samples, 2.74%)</title><rect x="1132.5" y="661" width="32.3" height="15.0" fill="rgb(252,227,0)" rx="2" ry="2" />
<text  x="1135.52" y="671.5" >st..</text>
</g>
<g >
<title>NaClLog (9 samples, 0.24%)</title><rect x="952.3" y="613" width="2.8" height="15.0" fill="rgb(227,208,38)" rx="2" ry="2" />
<text  x="955.32" y="623.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (17 samples, 0.45%)</title><rect x="397.1" y="421" width="5.3" height="15.0" fill="rgb(236,210,12)" rx="2" ry="2" />
<text  x="400.12" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (1 samples, 0.03%)</title><rect x="160.7" y="421" width="0.3" height="15.0" fill="rgb(243,74,21)" rx="2" ry="2" />
<text  x="163.68" y="431.5" ></text>
</g>
<g >
<title>core::cmp::min (2 samples, 0.05%)</title><rect x="675.2" y="501" width="0.6" height="15.0" fill="rgb(206,35,6)" rx="2" ry="2" />
<text  x="678.19" y="511.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (14 samples, 0.37%)</title><rect x="1091.8" y="661" width="4.4" height="15.0" fill="rgb(206,209,15)" rx="2" ry="2" />
<text  x="1094.82" y="671.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="1135.0" y="453" width="0.3" height="15.0" fill="rgb(210,6,28)" rx="2" ry="2" />
<text  x="1138.01" y="463.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.03%)</title><rect x="1131.0" y="597" width="0.3" height="15.0" fill="rgb(206,148,23)" rx="2" ry="2" />
<text  x="1133.97" y="607.5" ></text>
</g>
<g >
<title>__strchr_avx2 (1 samples, 0.03%)</title><rect x="10.3" y="501" width="0.3" height="15.0" fill="rgb(208,170,14)" rx="2" ry="2" />
<text  x="13.31" y="511.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.03%)</title><rect x="1052.4" y="389" width="0.3" height="15.0" fill="rgb(214,157,49)" rx="2" ry="2" />
<text  x="1055.36" y="399.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.03%)</title><rect x="1052.1" y="485" width="0.3" height="15.0" fill="rgb(234,61,50)" rx="2" ry="2" />
<text  x="1055.05" y="495.5" ></text>
</g>
<g >
<title>NaClGetDesc (1 samples, 0.03%)</title><rect x="572.3" y="629" width="0.4" height="15.0" fill="rgb(238,186,51)" rx="2" ry="2" />
<text  x="575.35" y="639.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (18 samples, 0.47%)</title><rect x="1168.3" y="437" width="5.5" height="15.0" fill="rgb(212,173,38)" rx="2" ry="2" />
<text  x="1171.25" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="160.7" y="437" width="0.3" height="15.0" fill="rgb(212,121,49)" rx="2" ry="2" />
<text  x="163.68" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.13%)</title><rect x="876.2" y="469" width="1.6" height="15.0" fill="rgb(247,13,45)" rx="2" ry="2" />
<text  x="879.20" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.03%)</title><rect x="833.9" y="389" width="0.4" height="15.0" fill="rgb(205,137,9)" rx="2" ry="2" />
<text  x="836.95" y="399.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (5 samples, 0.13%)</title><rect x="1036.5" y="501" width="1.6" height="15.0" fill="rgb(236,103,13)" rx="2" ry="2" />
<text  x="1039.52" y="511.5" ></text>
</g>
<g >
<title>page_mapping (3 samples, 0.08%)</title><rect x="1037.1" y="485" width="1.0" height="15.0" fill="rgb(223,98,20)" rx="2" ry="2" />
<text  x="1040.14" y="495.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.11%)</title><rect x="197.0" y="437" width="1.3" height="15.0" fill="rgb(218,18,54)" rx="2" ry="2" />
<text  x="200.04" y="447.5" ></text>
</g>
<g >
<title>lookup_bh_lru (1 samples, 0.03%)</title><rect x="39.5" y="149" width="0.3" height="15.0" fill="rgb(229,140,42)" rx="2" ry="2" />
<text  x="42.52" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="158.8" y="517" width="0.3" height="15.0" fill="rgb(251,84,32)" rx="2" ry="2" />
<text  x="161.82" y="527.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.03%)</title><rect x="1097.4" y="597" width="0.3" height="15.0" fill="rgb(208,185,14)" rx="2" ry="2" />
<text  x="1100.41" y="607.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (2 samples, 0.05%)</title><rect x="1187.2" y="533" width="0.6" height="15.0" fill="rgb(205,216,4)" rx="2" ry="2" />
<text  x="1190.20" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.05%)</title><rect x="807.9" y="389" width="0.6" height="15.0" fill="rgb(242,204,5)" rx="2" ry="2" />
<text  x="810.85" y="399.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.05%)</title><rect x="1134.7" y="501" width="0.6" height="15.0" fill="rgb(231,118,9)" rx="2" ry="2" />
<text  x="1137.70" y="511.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="623.3" y="437" width="0.3" height="15.0" fill="rgb(221,38,5)" rx="2" ry="2" />
<text  x="626.30" y="447.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.03%)</title><rect x="1097.4" y="661" width="0.3" height="15.0" fill="rgb(212,89,9)" rx="2" ry="2" />
<text  x="1100.41" y="671.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.05%)</title><rect x="88.6" y="629" width="0.6" height="15.0" fill="rgb(210,31,27)" rx="2" ry="2" />
<text  x="91.60" y="639.5" ></text>
</g>
<g >
<title>NaClLog (2 samples, 0.05%)</title><rect x="92.6" y="661" width="0.7" height="15.0" fill="rgb(244,6,13)" rx="2" ry="2" />
<text  x="95.64" y="671.5" ></text>
</g>
<g >
<title>ksys_write (10 samples, 0.26%)</title><rect x="36.7" y="469" width="3.1" height="15.0" fill="rgb(234,127,54)" rx="2" ry="2" />
<text  x="39.72" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="873.4" y="389" width="0.3" height="15.0" fill="rgb(249,1,42)" rx="2" ry="2" />
<text  x="876.41" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (7 samples, 0.18%)</title><rect x="742.0" y="437" width="2.2" height="15.0" fill="rgb(222,116,54)" rx="2" ry="2" />
<text  x="744.99" y="447.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="1173.5" y="421" width="0.3" height="15.0" fill="rgb(235,50,18)" rx="2" ry="2" />
<text  x="1176.53" y="431.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3 samples, 0.08%)</title><rect x="1134.4" y="549" width="0.9" height="15.0" fill="rgb(242,147,39)" rx="2" ry="2" />
<text  x="1137.39" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (42 samples, 1.11%)</title><rect x="655.9" y="517" width="13.1" height="15.0" fill="rgb(250,109,40)" rx="2" ry="2" />
<text  x="658.92" y="527.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (2 samples, 0.05%)</title><rect x="807.9" y="421" width="0.6" height="15.0" fill="rgb(225,98,45)" rx="2" ry="2" />
<text  x="810.85" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1 samples, 0.03%)</title><rect x="556.8" y="453" width="0.3" height="15.0" fill="rgb(254,39,46)" rx="2" ry="2" />
<text  x="559.81" y="463.5" ></text>
</g>
<g >
<title>nf_hook_slow_list (1 samples, 0.03%)</title><rect x="1134.1" y="325" width="0.3" height="15.0" fill="rgb(242,35,31)" rx="2" ry="2" />
<text  x="1137.08" y="335.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.03%)</title><rect x="160.4" y="389" width="0.3" height="15.0" fill="rgb(226,138,35)" rx="2" ry="2" />
<text  x="163.37" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (1 samples, 0.03%)</title><rect x="1131.3" y="677" width="0.3" height="15.0" fill="rgb(209,107,28)" rx="2" ry="2" />
<text  x="1134.28" y="687.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.03%)</title><rect x="1134.7" y="437" width="0.3" height="15.0" fill="rgb(207,112,28)" rx="2" ry="2" />
<text  x="1137.70" y="447.5" ></text>
</g>
<g >
<title>std::fs::remove_file (1 samples, 0.03%)</title><rect x="160.7" y="501" width="0.3" height="15.0" fill="rgb(247,132,26)" rx="2" ry="2" />
<text  x="163.68" y="511.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="874.6" y="405" width="0.4" height="15.0" fill="rgb(252,150,5)" rx="2" ry="2" />
<text  x="877.65" y="415.5" ></text>
</g>
<g >
<title>core::cmp::min_by (1 samples, 0.03%)</title><rect x="675.2" y="469" width="0.3" height="15.0" fill="rgb(209,123,46)" rx="2" ry="2" />
<text  x="678.19" y="479.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.05%)</title><rect x="1134.7" y="517" width="0.6" height="15.0" fill="rgb(217,175,49)" rx="2" ry="2" />
<text  x="1137.70" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2 samples, 0.05%)</title><rect x="807.9" y="405" width="0.6" height="15.0" fill="rgb(218,194,25)" rx="2" ry="2" />
<text  x="810.85" y="415.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (28 samples, 0.74%)</title><rect x="919.1" y="597" width="8.7" height="15.0" fill="rgb(228,158,23)" rx="2" ry="2" />
<text  x="922.08" y="607.5" ></text>
</g>
<g >
<title>quiet_vmstat (2 samples, 0.05%)</title><rect x="1187.2" y="501" width="0.6" height="15.0" fill="rgb(229,186,23)" rx="2" ry="2" />
<text  x="1190.20" y="511.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.03%)</title><rect x="1097.1" y="341" width="0.3" height="15.0" fill="rgb(227,172,24)" rx="2" ry="2" />
<text  x="1100.10" y="351.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.39%)</title><rect x="826.5" y="405" width="4.7" height="15.0" fill="rgb(226,146,45)" rx="2" ry="2" />
<text  x="829.49" y="415.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (2 samples, 0.05%)</title><rect x="38.9" y="229" width="0.6" height="15.0" fill="rgb(228,194,36)" rx="2" ry="2" />
<text  x="41.89" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.03%)</title><rect x="1166.4" y="389" width="0.3" height="15.0" fill="rgb(236,127,24)" rx="2" ry="2" />
<text  x="1169.39" y="399.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1 samples, 0.03%)</title><rect x="834.3" y="453" width="0.3" height="15.0" fill="rgb(210,88,2)" rx="2" ry="2" />
<text  x="837.26" y="463.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (12 samples, 0.32%)</title><rect x="155.4" y="581" width="3.7" height="15.0" fill="rgb(218,197,37)" rx="2" ry="2" />
<text  x="158.40" y="591.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.03%)</title><rect x="541.0" y="229" width="0.3" height="15.0" fill="rgb(211,37,43)" rx="2" ry="2" />
<text  x="543.97" y="239.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (9 samples, 0.24%)</title><rect x="84.6" y="629" width="2.8" height="15.0" fill="rgb(207,25,5)" rx="2" ry="2" />
<text  x="87.57" y="639.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3 samples, 0.08%)</title><rect x="402.4" y="437" width="0.9" height="15.0" fill="rgb(229,223,39)" rx="2" ry="2" />
<text  x="405.40" y="447.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (9 samples, 0.24%)</title><rect x="84.6" y="645" width="2.8" height="15.0" fill="rgb(246,219,8)" rx="2" ry="2" />
<text  x="87.57" y="655.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.03%)</title><rect x="1163.3" y="549" width="0.3" height="15.0" fill="rgb(225,92,46)" rx="2" ry="2" />
<text  x="1166.28" y="559.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (3 samples, 0.08%)</title><rect x="38.9" y="277" width="0.9" height="15.0" fill="rgb(223,130,11)" rx="2" ry="2" />
<text  x="41.89" y="287.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.03%)</title><rect x="1121.3" y="421" width="0.3" height="15.0" fill="rgb(207,179,49)" rx="2" ry="2" />
<text  x="1124.34" y="431.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.03%)</title><rect x="1131.6" y="613" width="0.3" height="15.0" fill="rgb(210,175,8)" rx="2" ry="2" />
<text  x="1134.59" y="623.5" ></text>
</g>
<g >
<title>do_unlinkat (1 samples, 0.03%)</title><rect x="160.7" y="405" width="0.3" height="15.0" fill="rgb(222,190,31)" rx="2" ry="2" />
<text  x="163.68" y="415.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.03%)</title><rect x="541.0" y="277" width="0.3" height="15.0" fill="rgb(245,108,37)" rx="2" ry="2" />
<text  x="543.97" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="161.0" y="501" width="0.3" height="15.0" fill="rgb(254,226,8)" rx="2" ry="2" />
<text  x="164.00" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (80 samples, 2.11%)</title><rect x="332.2" y="453" width="24.8" height="15.0" fill="rgb(234,177,0)" rx="2" ry="2" />
<text  x="335.19" y="463.5" >c..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (68 samples, 1.79%)</title><rect x="412.3" y="453" width="21.2" height="15.0" fill="rgb(234,153,18)" rx="2" ry="2" />
<text  x="415.34" y="463.5" ></text>
</g>
<g >
<title>udpv6_recvmsg (1 samples, 0.03%)</title><rect x="1130.7" y="549" width="0.3" height="15.0" fill="rgb(239,224,37)" rx="2" ry="2" />
<text  x="1133.66" y="559.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (1 samples, 0.03%)</title><rect x="833.9" y="341" width="0.4" height="15.0" fill="rgb(232,156,32)" rx="2" ry="2" />
<text  x="836.95" y="351.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.03%)</title><rect x="155.1" y="437" width="0.3" height="15.0" fill="rgb(236,159,47)" rx="2" ry="2" />
<text  x="158.09" y="447.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (2 samples, 0.05%)</title><rect x="40.4" y="661" width="0.7" height="15.0" fill="rgb(217,204,36)" rx="2" ry="2" />
<text  x="43.45" y="671.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="876.8" y="405" width="0.3" height="15.0" fill="rgb(222,152,14)" rx="2" ry="2" />
<text  x="879.82" y="415.5" ></text>
</g>
<g >
<title>do_sys_poll (5 samples, 0.13%)</title><rect x="1129.1" y="629" width="1.6" height="15.0" fill="rgb(243,147,40)" rx="2" ry="2" />
<text  x="1132.10" y="639.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="623.3" y="405" width="0.3" height="15.0" fill="rgb(226,28,2)" rx="2" ry="2" />
<text  x="626.30" y="415.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (163 samples, 4.29%)</title><rect x="757.2" y="501" width="50.7" height="15.0" fill="rgb(243,154,46)" rx="2" ry="2" />
<text  x="760.21" y="511.5" >ringb..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (1,274 samples, 33.54%)</title><rect x="161.3" y="533" width="395.8" height="15.0" fill="rgb(236,174,32)" rx="2" ry="2" />
<text  x="164.31" y="543.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustp..</text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.03%)</title><rect x="1163.9" y="581" width="0.3" height="15.0" fill="rgb(216,89,7)" rx="2" ry="2" />
<text  x="1166.90" y="591.5" ></text>
</g>
<g >
<title>pipe_poll (1 samples, 0.03%)</title><rect x="1129.1" y="597" width="0.3" height="15.0" fill="rgb(248,133,8)" rx="2" ry="2" />
<text  x="1132.10" y="607.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (43 samples, 1.13%)</title><rect x="837.1" y="469" width="13.3" height="15.0" fill="rgb(245,130,37)" rx="2" ry="2" />
<text  x="840.06" y="479.5" ></text>
</g>
<g >
<title>nf_conntrack_in (1 samples, 0.03%)</title><rect x="1134.1" y="277" width="0.3" height="15.0" fill="rgb(243,187,2)" rx="2" ry="2" />
<text  x="1137.08" y="287.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.03%)</title><rect x="160.1" y="581" width="0.3" height="15.0" fill="rgb(235,181,14)" rx="2" ry="2" />
<text  x="163.06" y="591.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.03%)</title><rect x="557.1" y="549" width="0.3" height="15.0" fill="rgb(210,33,34)" rx="2" ry="2" />
<text  x="560.12" y="559.5" ></text>
</g>
<g >
<title>ext4_inode_table (1 samples, 0.03%)</title><rect x="160.4" y="117" width="0.3" height="15.0" fill="rgb(233,59,40)" rx="2" ry="2" />
<text  x="163.37" y="127.5" ></text>
</g>
<g >
<title>sock_ioctl (1 samples, 0.03%)</title><rect x="1127.9" y="613" width="0.3" height="15.0" fill="rgb(242,19,51)" rx="2" ry="2" />
<text  x="1130.86" y="623.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (1 samples, 0.03%)</title><rect x="42.0" y="661" width="0.3" height="15.0" fill="rgb(224,70,8)" rx="2" ry="2" />
<text  x="45.00" y="671.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.03%)</title><rect x="623.3" y="341" width="0.3" height="15.0" fill="rgb(243,30,21)" rx="2" ry="2" />
<text  x="626.30" y="351.5" ></text>
</g>
<g >
<title>do_idle (81 samples, 2.13%)</title><rect x="1164.8" y="565" width="25.2" height="15.0" fill="rgb(220,21,4)" rx="2" ry="2" />
<text  x="1167.83" y="575.5" >d..</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (1 samples, 0.03%)</title><rect x="807.5" y="453" width="0.4" height="15.0" fill="rgb(233,83,12)" rx="2" ry="2" />
<text  x="810.54" y="463.5" ></text>
</g>
<g >
<title>common_interrupt (6 samples, 0.16%)</title><rect x="1132.5" y="549" width="1.9" height="15.0" fill="rgb(233,211,21)" rx="2" ry="2" />
<text  x="1135.52" y="559.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.03%)</title><rect x="158.8" y="437" width="0.3" height="15.0" fill="rgb(229,64,28)" rx="2" ry="2" />
<text  x="161.82" y="447.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.03%)</title><rect x="160.4" y="197" width="0.3" height="15.0" fill="rgb(218,169,31)" rx="2" ry="2" />
<text  x="163.37" y="207.5" ></text>
</g>
<g >
<title>get_signal (38 samples, 1.00%)</title><rect x="1109.8" y="581" width="11.8" height="15.0" fill="rgb(214,135,51)" rx="2" ry="2" />
<text  x="1112.84" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (20 samples, 0.53%)</title><rect x="861.6" y="485" width="6.2" height="15.0" fill="rgb(220,132,20)" rx="2" ry="2" />
<text  x="864.60" y="495.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize::MapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.03%)</title><rect x="1097.1" y="405" width="0.3" height="15.0" fill="rgb(218,184,43)" rx="2" ry="2" />
<text  x="1100.10" y="415.5" ></text>
</g>
<g >
<title>nf_conntrack_destroy (1 samples, 0.03%)</title><rect x="1133.8" y="229" width="0.3" height="15.0" fill="rgb(224,56,5)" rx="2" ry="2" />
<text  x="1136.77" y="239.5" ></text>
</g>
<g >
<title>[unknown] (147 samples, 3.87%)</title><rect x="1051.1" y="677" width="45.7" height="15.0" fill="rgb(250,109,54)" rx="2" ry="2" />
<text  x="1054.12" y="687.5" >[unk..</text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (43 samples, 1.13%)</title><rect x="877.8" y="549" width="13.3" height="15.0" fill="rgb(249,58,40)" rx="2" ry="2" />
<text  x="880.76" y="559.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (1 samples, 0.03%)</title><rect x="1053.6" y="661" width="0.3" height="15.0" fill="rgb(236,134,39)" rx="2" ry="2" />
<text  x="1056.61" y="671.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u64 (1 samples, 0.03%)</title><rect x="1097.1" y="117" width="0.3" height="15.0" fill="rgb(239,22,33)" rx="2" ry="2" />
<text  x="1100.10" y="127.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.03%)</title><rect x="1166.1" y="309" width="0.3" height="15.0" fill="rgb(219,13,45)" rx="2" ry="2" />
<text  x="1169.08" y="319.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.03%)</title><rect x="1095.6" y="597" width="0.3" height="15.0" fill="rgb(218,90,53)" rx="2" ry="2" />
<text  x="1098.55" y="607.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.03%)</title><rect x="1128.2" y="597" width="0.3" height="15.0" fill="rgb(227,190,32)" rx="2" ry="2" />
<text  x="1131.17" y="607.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (27 samples, 0.71%)</title><rect x="180.9" y="501" width="8.4" height="15.0" fill="rgb(237,24,9)" rx="2" ry="2" />
<text  x="183.88" y="511.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (1 samples, 0.03%)</title><rect x="357.0" y="469" width="0.4" height="15.0" fill="rgb(213,37,38)" rx="2" ry="2" />
<text  x="360.04" y="479.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.03%)</title><rect x="1095.6" y="613" width="0.3" height="15.0" fill="rgb(227,65,15)" rx="2" ry="2" />
<text  x="1098.55" y="623.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (1 samples, 0.03%)</title><rect x="160.4" y="133" width="0.3" height="15.0" fill="rgb(227,225,6)" rx="2" ry="2" />
<text  x="163.37" y="143.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.03%)</title><rect x="1164.2" y="517" width="0.3" height="15.0" fill="rgb(225,104,23)" rx="2" ry="2" />
<text  x="1167.21" y="527.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.03%)</title><rect x="36.1" y="613" width="0.3" height="15.0" fill="rgb(223,209,15)" rx="2" ry="2" />
<text  x="39.10" y="623.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (15 samples, 0.39%)</title><rect x="189.3" y="469" width="4.6" height="15.0" fill="rgb(209,167,14)" rx="2" ry="2" />
<text  x="192.27" y="479.5" ></text>
</g>
<g >
<title>rb_erase (2 samples, 0.05%)</title><rect x="1189.1" y="469" width="0.6" height="15.0" fill="rgb(231,44,15)" rx="2" ry="2" />
<text  x="1192.07" y="479.5" ></text>
</g>
<g >
<title>page_frag_free (1 samples, 0.03%)</title><rect x="1130.7" y="501" width="0.3" height="15.0" fill="rgb(208,93,46)" rx="2" ry="2" />
<text  x="1133.66" y="511.5" ></text>
</g>
<g >
<title>NaClLog (7 samples, 0.18%)</title><rect x="151.4" y="645" width="2.1" height="15.0" fill="rgb(250,89,38)" rx="2" ry="2" />
<text  x="154.36" y="655.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 2.42%)</title><rect x="11.2" y="677" width="28.6" height="15.0" fill="rgb(233,55,3)" rx="2" ry="2" />
<text  x="14.24" y="687.5" >[u..</text>
</g>
<g >
<title>tick_nohz_idle_exit (3 samples, 0.08%)</title><rect x="1189.1" y="549" width="0.9" height="15.0" fill="rgb(222,142,45)" rx="2" ry="2" />
<text  x="1192.07" y="559.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="807.9" y="485" width="0.6" height="15.0" fill="rgb(211,76,29)" rx="2" ry="2" />
<text  x="810.85" y="495.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.03%)</title><rect x="1188.1" y="485" width="0.3" height="15.0" fill="rgb(213,229,33)" rx="2" ry="2" />
<text  x="1191.14" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.03%)</title><rect x="1128.5" y="645" width="0.3" height="15.0" fill="rgb(227,26,32)" rx="2" ry="2" />
<text  x="1131.48" y="655.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (12 samples, 0.32%)</title><rect x="78.0" y="597" width="3.8" height="15.0" fill="rgb(243,66,38)" rx="2" ry="2" />
<text  x="81.04" y="607.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.03%)</title><rect x="38.0" y="197" width="0.3" height="15.0" fill="rgb(241,131,35)" rx="2" ry="2" />
<text  x="40.96" y="207.5" ></text>
</g>
<g >
<title>[unknown]  (299 samples, 7.87%)</title><rect x="958.2" y="677" width="92.9" height="15.0" fill="rgb(221,60,16)" rx="2" ry="2" />
<text  x="961.23" y="687.5" >[unknown] </text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.03%)</title><rect x="1131.6" y="645" width="0.3" height="15.0" fill="rgb(237,115,54)" rx="2" ry="2" />
<text  x="1134.59" y="655.5" ></text>
</g>
<g >
<title>put_ctx (1 samples, 0.03%)</title><rect x="35.8" y="517" width="0.3" height="15.0" fill="rgb(245,62,53)" rx="2" ry="2" />
<text  x="38.79" y="527.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.03%)</title><rect x="1166.1" y="341" width="0.3" height="15.0" fill="rgb(248,223,10)" rx="2" ry="2" />
<text  x="1169.08" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.03%)</title><rect x="1129.1" y="533" width="0.3" height="15.0" fill="rgb(225,119,18)" rx="2" ry="2" />
<text  x="1132.10" y="543.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="874.0" y="405" width="0.6" height="15.0" fill="rgb(253,190,11)" rx="2" ry="2" />
<text  x="877.03" y="415.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.03%)</title><rect x="10.3" y="565" width="0.3" height="15.0" fill="rgb(253,15,42)" rx="2" ry="2" />
<text  x="13.31" y="575.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.03%)</title><rect x="1052.4" y="453" width="0.3" height="15.0" fill="rgb(246,220,33)" rx="2" ry="2" />
<text  x="1055.36" y="463.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.58%)</title><rect x="819.0" y="453" width="6.9" height="15.0" fill="rgb(243,48,15)" rx="2" ry="2" />
<text  x="822.04" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.24%)</title><rect x="875.0" y="501" width="2.8" height="15.0" fill="rgb(213,215,35)" rx="2" ry="2" />
<text  x="877.96" y="511.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (1 samples, 0.03%)</title><rect x="153.5" y="645" width="0.3" height="15.0" fill="rgb(227,37,46)" rx="2" ry="2" />
<text  x="156.54" y="655.5" ></text>
</g>
<g >
<title>mem_cgroup_page_lruvec (1 samples, 0.03%)</title><rect x="1120.4" y="373" width="0.3" height="15.0" fill="rgb(224,155,51)" rx="2" ry="2" />
<text  x="1123.41" y="383.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.03%)</title><rect x="161.0" y="325" width="0.3" height="15.0" fill="rgb(246,167,16)" rx="2" ry="2" />
<text  x="164.00" y="335.5" ></text>
</g>
<g >
<title>rebalance_domains (13 samples, 0.34%)</title><rect x="1168.3" y="389" width="4.0" height="15.0" fill="rgb(213,26,43)" rx="2" ry="2" />
<text  x="1171.25" y="399.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.03%)</title><rect x="955.1" y="613" width="0.3" height="15.0" fill="rgb(236,128,13)" rx="2" ry="2" />
<text  x="958.12" y="623.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.05%)</title><rect x="1166.7" y="373" width="0.6" height="15.0" fill="rgb(215,124,0)" rx="2" ry="2" />
<text  x="1169.70" y="383.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.03%)</title><rect x="1048.0" y="597" width="0.3" height="15.0" fill="rgb(252,72,31)" rx="2" ry="2" />
<text  x="1051.01" y="607.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.03%)</title><rect x="160.4" y="453" width="0.3" height="15.0" fill="rgb(247,44,54)" rx="2" ry="2" />
<text  x="163.37" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (56 samples, 1.47%)</title><rect x="817.2" y="485" width="17.4" height="15.0" fill="rgb(219,153,39)" rx="2" ry="2" />
<text  x="820.17" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.24%)</title><rect x="875.0" y="485" width="2.8" height="15.0" fill="rgb(232,163,36)" rx="2" ry="2" />
<text  x="877.96" y="495.5" ></text>
</g>
<g >
<title>irq_exit_rcu (5 samples, 0.13%)</title><rect x="1132.8" y="533" width="1.6" height="15.0" fill="rgb(207,226,22)" rx="2" ry="2" />
<text  x="1135.83" y="543.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="36.4" y="533" width="0.3" height="15.0" fill="rgb(223,29,7)" rx="2" ry="2" />
<text  x="39.41" y="543.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.03%)</title><rect x="826.2" y="405" width="0.3" height="15.0" fill="rgb(230,197,51)" rx="2" ry="2" />
<text  x="829.18" y="415.5" ></text>
</g>
<g >
<title>CopyBundleTails (3 samples, 0.08%)</title><rect x="154.2" y="581" width="0.9" height="15.0" fill="rgb(223,156,25)" rx="2" ry="2" />
<text  x="157.16" y="591.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.03%)</title><rect x="1165.5" y="405" width="0.3" height="15.0" fill="rgb(235,171,24)" rx="2" ry="2" />
<text  x="1168.46" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (186 samples, 4.90%)</title><rect x="675.8" y="501" width="57.8" height="15.0" fill="rgb(251,60,41)" rx="2" ry="2" />
<text  x="678.81" y="511.5" >core::..</text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (2 samples, 0.05%)</title><rect x="1051.7" y="533" width="0.7" height="15.0" fill="rgb(216,197,26)" rx="2" ry="2" />
<text  x="1054.74" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1052.4" y="629" width="0.3" height="15.0" fill="rgb(232,43,50)" rx="2" ry="2" />
<text  x="1055.36" y="639.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (1 samples, 0.03%)</title><rect x="1181.6" y="501" width="0.3" height="15.0" fill="rgb(233,94,52)" rx="2" ry="2" />
<text  x="1184.61" y="511.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="861.3" y="501" width="0.3" height="15.0" fill="rgb(250,21,21)" rx="2" ry="2" />
<text  x="864.29" y="511.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.03%)</title><rect x="1052.4" y="405" width="0.3" height="15.0" fill="rgb(241,216,14)" rx="2" ry="2" />
<text  x="1055.36" y="415.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.05%)</title><rect x="88.6" y="645" width="0.6" height="15.0" fill="rgb(215,47,52)" rx="2" ry="2" />
<text  x="91.60" y="655.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="1052.1" y="453" width="0.3" height="15.0" fill="rgb(250,229,47)" rx="2" ry="2" />
<text  x="1055.05" y="463.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (2 samples, 0.05%)</title><rect x="807.9" y="469" width="0.6" height="15.0" fill="rgb(238,38,13)" rx="2" ry="2" />
<text  x="810.85" y="479.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (56 samples, 1.47%)</title><rect x="817.2" y="517" width="17.4" height="15.0" fill="rgb(234,44,33)" rx="2" ry="2" />
<text  x="820.17" y="527.5" ></text>
</g>
<g >
<title>sock_do_ioctl (1 samples, 0.03%)</title><rect x="1127.9" y="597" width="0.3" height="15.0" fill="rgb(254,138,3)" rx="2" ry="2" />
<text  x="1130.86" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize (1 samples, 0.03%)</title><rect x="1097.1" y="325" width="0.3" height="15.0" fill="rgb(230,198,29)" rx="2" ry="2" />
<text  x="1100.10" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.13%)</title><rect x="876.2" y="437" width="1.6" height="15.0" fill="rgb(211,180,39)" rx="2" ry="2" />
<text  x="879.20" y="447.5" ></text>
</g>
<g >
<title>record__pushfn (10 samples, 0.26%)</title><rect x="36.7" y="581" width="3.1" height="15.0" fill="rgb(214,13,30)" rx="2" ry="2" />
<text  x="39.72" y="591.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.03%)</title><rect x="861.3" y="437" width="0.3" height="15.0" fill="rgb(221,101,54)" rx="2" ry="2" />
<text  x="864.29" y="447.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.03%)</title><rect x="39.5" y="229" width="0.3" height="15.0" fill="rgb(211,37,10)" rx="2" ry="2" />
<text  x="42.52" y="239.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (1 samples, 0.03%)</title><rect x="39.5" y="213" width="0.3" height="15.0" fill="rgb(227,85,19)" rx="2" ry="2" />
<text  x="42.52" y="223.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (1 samples, 0.03%)</title><rect x="1048.0" y="613" width="0.3" height="15.0" fill="rgb(241,85,40)" rx="2" ry="2" />
<text  x="1051.01" y="623.5" ></text>
</g>
<g >
<title>rmqueue (15 samples, 0.39%)</title><rect x="1030.3" y="501" width="4.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1033.31" y="511.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.03%)</title><rect x="10.9" y="501" width="0.3" height="15.0" fill="rgb(247,71,40)" rx="2" ry="2" />
<text  x="13.93" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (6 samples, 0.16%)</title><rect x="1165.8" y="421" width="1.8" height="15.0" fill="rgb(239,86,8)" rx="2" ry="2" />
<text  x="1168.77" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.03%)</title><rect x="834.6" y="453" width="0.3" height="15.0" fill="rgb(235,2,34)" rx="2" ry="2" />
<text  x="837.57" y="463.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.03%)</title><rect x="38.0" y="213" width="0.3" height="15.0" fill="rgb(238,64,11)" rx="2" ry="2" />
<text  x="40.96" y="223.5" ></text>
</g>
<g >
<title>new_sync_write (10 samples, 0.26%)</title><rect x="36.7" y="437" width="3.1" height="15.0" fill="rgb(230,211,30)" rx="2" ry="2" />
<text  x="39.72" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (2 samples, 0.05%)</title><rect x="160.4" y="565" width="0.6" height="15.0" fill="rgb(236,98,40)" rx="2" ry="2" />
<text  x="163.37" y="575.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (43 samples, 1.13%)</title><rect x="877.8" y="533" width="13.3" height="15.0" fill="rgb(252,181,31)" rx="2" ry="2" />
<text  x="880.76" y="543.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (1 samples, 0.03%)</title><rect x="1097.1" y="181" width="0.3" height="15.0" fill="rgb(251,3,25)" rx="2" ry="2" />
<text  x="1100.10" y="191.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (512 samples, 13.48%)</title><rect x="198.3" y="501" width="159.1" height="15.0" fill="rgb(226,220,18)" rx="2" ry="2" />
<text  x="201.28" y="511.5" >ringbuf::consumer::C..</text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (2 samples, 0.05%)</title><rect x="877.1" y="373" width="0.7" height="15.0" fill="rgb(226,5,45)" rx="2" ry="2" />
<text  x="880.14" y="383.5" ></text>
</g>
<g >
<title>[anon] (157 samples, 4.13%)</title><rect x="40.4" y="677" width="48.8" height="15.0" fill="rgb(215,225,18)" rx="2" ry="2" />
<text  x="43.45" y="687.5" >[anon]</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.03%)</title><rect x="556.5" y="485" width="0.3" height="15.0" fill="rgb(229,183,14)" rx="2" ry="2" />
<text  x="559.50" y="495.5" ></text>
</g>
<g >
<title>dispatcher (2 samples, 0.05%)</title><rect x="61.3" y="661" width="0.6" height="15.0" fill="rgb(216,27,53)" rx="2" ry="2" />
<text  x="64.26" y="671.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.08%)</title><rect x="1134.4" y="565" width="0.9" height="15.0" fill="rgb(239,151,39)" rx="2" ry="2" />
<text  x="1137.39" y="575.5" ></text>
</g>
<g >
<title>NaClRefCountRef (52 samples, 1.37%)</title><rect x="935.2" y="565" width="16.2" height="15.0" fill="rgb(246,18,25)" rx="2" ry="2" />
<text  x="938.23" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::restore_metadata (1 samples, 0.03%)</title><rect x="1097.1" y="581" width="0.3" height="15.0" fill="rgb(237,68,24)" rx="2" ry="2" />
<text  x="1100.10" y="591.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.03%)</title><rect x="623.3" y="309" width="0.3" height="15.0" fill="rgb(253,97,30)" rx="2" ry="2" />
<text  x="626.30" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.03%)</title><rect x="433.2" y="325" width="0.3" height="15.0" fill="rgb(238,197,47)" rx="2" ry="2" />
<text  x="436.16" y="335.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.03%)</title><rect x="1121.3" y="485" width="0.3" height="15.0" fill="rgb(211,127,27)" rx="2" ry="2" />
<text  x="1124.34" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.34%)</title><rect x="868.1" y="485" width="4.1" height="15.0" fill="rgb(243,62,42)" rx="2" ry="2" />
<text  x="871.13" y="495.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::load_fs (1 samples, 0.03%)</title><rect x="1097.1" y="597" width="0.3" height="15.0" fill="rgb(247,6,13)" rx="2" ry="2" />
<text  x="1100.10" y="607.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (2 samples, 0.05%)</title><rect x="1053.0" y="613" width="0.6" height="15.0" fill="rgb(206,199,54)" rx="2" ry="2" />
<text  x="1055.99" y="623.5" ></text>
</g>
<g >
<title>pagecache_get_page (3 samples, 0.08%)</title><rect x="37.3" y="277" width="1.0" height="15.0" fill="rgb(227,163,5)" rx="2" ry="2" />
<text  x="40.34" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.26%)</title><rect x="831.2" y="453" width="3.1" height="15.0" fill="rgb(246,218,18)" rx="2" ry="2" />
<text  x="834.15" y="463.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (288 samples, 7.58%)</title><rect x="451.8" y="421" width="89.5" height="15.0" fill="rgb(240,60,35)" rx="2" ry="2" />
<text  x="454.80" y="431.5" >__memmove_..</text>
</g>
<g >
<title>do_iter_write (10 samples, 0.26%)</title><rect x="36.7" y="389" width="3.1" height="15.0" fill="rgb(219,160,50)" rx="2" ry="2" />
<text  x="39.72" y="399.5" ></text>
</g>
<g >
<title>NaClAppThreadSpawn (1 samples, 0.03%)</title><rect x="161.0" y="597" width="0.3" height="15.0" fill="rgb(205,5,2)" rx="2" ry="2" />
<text  x="164.00" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1,274 samples, 33.54%)</title><rect x="161.3" y="549" width="395.8" height="15.0" fill="rgb(242,192,41)" rx="2" ry="2" />
<text  x="164.31" y="559.5" >rustposix::safeposix::dispatcher::dispatcher::{{closu..</text>
</g>
<g >
<title>all (3,798 samples, 100%)</title><rect x="10.0" y="709" width="1180.0" height="15.0" fill="rgb(209,21,12)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>process_vm_writev (2 samples, 0.05%)</title><rect x="1051.7" y="629" width="0.7" height="15.0" fill="rgb(249,224,42)" rx="2" ry="2" />
<text  x="1054.74" y="639.5" ></text>
</g>
<g >
<title>__remove_hrtimer (2 samples, 0.05%)</title><rect x="1189.1" y="485" width="0.6" height="15.0" fill="rgb(206,204,50)" rx="2" ry="2" />
<text  x="1192.07" y="495.5" ></text>
</g>
<g >
<title>generic_write_end (5 samples, 0.13%)</title><rect x="38.3" y="293" width="1.5" height="15.0" fill="rgb(218,182,22)" rx="2" ry="2" />
<text  x="41.27" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (21 samples, 0.55%)</title><rect x="609.9" y="469" width="6.6" height="15.0" fill="rgb(205,178,34)" rx="2" ry="2" />
<text  x="612.94" y="479.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.03%)</title><rect x="10.6" y="597" width="0.3" height="15.0" fill="rgb(250,169,25)" rx="2" ry="2" />
<text  x="13.62" y="607.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.03%)</title><rect x="1052.1" y="501" width="0.3" height="15.0" fill="rgb(219,32,20)" rx="2" ry="2" />
<text  x="1055.05" y="511.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.03%)</title><rect x="556.8" y="517" width="0.3" height="15.0" fill="rgb(213,52,25)" rx="2" ry="2" />
<text  x="559.81" y="527.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (40 samples, 1.05%)</title><rect x="656.5" y="469" width="12.5" height="15.0" fill="rgb(231,5,2)" rx="2" ry="2" />
<text  x="659.55" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (7 samples, 0.18%)</title><rect x="742.0" y="453" width="2.2" height="15.0" fill="rgb(240,223,33)" rx="2" ry="2" />
<text  x="744.99" y="463.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.03%)</title><rect x="1172.6" y="373" width="0.3" height="15.0" fill="rgb(232,173,17)" rx="2" ry="2" />
<text  x="1175.60" y="383.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.03%)</title><rect x="38.6" y="245" width="0.3" height="15.0" fill="rgb(245,57,53)" rx="2" ry="2" />
<text  x="41.58" y="255.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.03%)</title><rect x="36.4" y="501" width="0.3" height="15.0" fill="rgb(233,155,26)" rx="2" ry="2" />
<text  x="39.41" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.03%)</title><rect x="820.0" y="405" width="0.3" height="15.0" fill="rgb(235,85,47)" rx="2" ry="2" />
<text  x="822.97" y="415.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="876.8" y="389" width="0.3" height="15.0" fill="rgb(220,75,49)" rx="2" ry="2" />
<text  x="879.82" y="399.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.03%)</title><rect x="1131.0" y="629" width="0.3" height="15.0" fill="rgb(240,114,44)" rx="2" ry="2" />
<text  x="1133.97" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 2.11%)</title><rect x="11.2" y="565" width="24.9" height="15.0" fill="rgb(236,115,19)" rx="2" ry="2" />
<text  x="14.24" y="575.5" >e..</text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.03%)</title><rect x="1132.2" y="549" width="0.3" height="15.0" fill="rgb(228,222,23)" rx="2" ry="2" />
<text  x="1135.21" y="559.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.03%)</title><rect x="160.1" y="565" width="0.3" height="15.0" fill="rgb(218,36,54)" rx="2" ry="2" />
<text  x="163.06" y="575.5" ></text>
</g>
<g >
<title>do_shared_fault (1 samples, 0.03%)</title><rect x="155.1" y="405" width="0.3" height="15.0" fill="rgb(236,180,25)" rx="2" ry="2" />
<text  x="158.09" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="433.2" y="373" width="0.3" height="15.0" fill="rgb(228,138,14)" rx="2" ry="2" />
<text  x="436.16" y="383.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (1 samples, 0.03%)</title><rect x="1127.9" y="629" width="0.3" height="15.0" fill="rgb(239,184,44)" rx="2" ry="2" />
<text  x="1130.86" y="639.5" ></text>
</g>
<g >
<title>cpu_startup_entry (104 samples, 2.74%)</title><rect x="1132.5" y="645" width="32.3" height="15.0" fill="rgb(213,92,18)" rx="2" ry="2" />
<text  x="1135.52" y="655.5" >cp..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (35 samples, 0.92%)</title><rect x="658.1" y="453" width="10.9" height="15.0" fill="rgb(213,155,46)" rx="2" ry="2" />
<text  x="661.10" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (99 samples, 2.61%)</title><rect x="1016.6" y="613" width="30.8" height="15.0" fill="rgb(246,87,51)" rx="2" ry="2" />
<text  x="1019.64" y="623.5" >ha..</text>
</g>
<g >
<title>__netdev_alloc_skb (1 samples, 0.03%)</title><rect x="1132.8" y="389" width="0.3" height="15.0" fill="rgb(244,19,25)" rx="2" ry="2" />
<text  x="1135.83" y="399.5" ></text>
</g>
<g >
<title>update_blocked_averages (4 samples, 0.11%)</title><rect x="1172.3" y="389" width="1.2" height="15.0" fill="rgb(254,101,35)" rx="2" ry="2" />
<text  x="1175.29" y="399.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.03%)</title><rect x="1097.4" y="629" width="0.3" height="15.0" fill="rgb(205,16,19)" rx="2" ry="2" />
<text  x="1100.41" y="639.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.03%)</title><rect x="833.9" y="405" width="0.4" height="15.0" fill="rgb(225,164,21)" rx="2" ry="2" />
<text  x="836.95" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (43 samples, 1.13%)</title><rect x="877.8" y="517" width="13.3" height="15.0" fill="rgb(242,76,21)" rx="2" ry="2" />
<text  x="880.76" y="527.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (21 samples, 0.55%)</title><rect x="861.3" y="517" width="6.5" height="15.0" fill="rgb(213,4,27)" rx="2" ry="2" />
<text  x="864.29" y="527.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="828.4" y="357" width="0.6" height="15.0" fill="rgb(226,155,39)" rx="2" ry="2" />
<text  x="831.36" y="367.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (15 samples, 0.39%)</title><rect x="826.5" y="453" width="4.7" height="15.0" fill="rgb(227,99,29)" rx="2" ry="2" />
<text  x="829.49" y="463.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.03%)</title><rect x="1131.6" y="581" width="0.3" height="15.0" fill="rgb(228,163,20)" rx="2" ry="2" />
<text  x="1134.59" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 2.11%)</title><rect x="11.2" y="549" width="24.9" height="15.0" fill="rgb(234,221,17)" rx="2" ry="2" />
<text  x="14.24" y="559.5" >d..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (31 samples, 0.82%)</title><rect x="868.1" y="517" width="9.7" height="15.0" fill="rgb(244,202,31)" rx="2" ry="2" />
<text  x="871.13" y="527.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.03%)</title><rect x="1120.7" y="357" width="0.3" height="15.0" fill="rgb(207,168,27)" rx="2" ry="2" />
<text  x="1123.72" y="367.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (72 samples, 1.90%)</title><rect x="120.3" y="645" width="22.4" height="15.0" fill="rgb(254,65,17)" rx="2" ry="2" />
<text  x="123.29" y="655.5" >N..</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (76 samples, 2.00%)</title><rect x="733.6" y="501" width="23.6" height="15.0" fill="rgb(226,72,35)" rx="2" ry="2" />
<text  x="736.60" y="511.5" >r..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.03%)</title><rect x="556.5" y="453" width="0.3" height="15.0" fill="rgb(212,196,21)" rx="2" ry="2" />
<text  x="559.50" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (1 samples, 0.03%)</title><rect x="1128.2" y="645" width="0.3" height="15.0" fill="rgb(216,12,54)" rx="2" ry="2" />
<text  x="1131.17" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (15 samples, 0.39%)</title><rect x="645.1" y="437" width="4.6" height="15.0" fill="rgb(252,10,39)" rx="2" ry="2" />
<text  x="648.05" y="447.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (2 samples, 0.05%)</title><rect x="675.2" y="485" width="0.6" height="15.0" fill="rgb(230,114,53)" rx="2" ry="2" />
<text  x="678.19" y="495.5" ></text>
</g>
<g >
<title>sync_regs (7 samples, 0.18%)</title><rect x="1048.9" y="661" width="2.2" height="15.0" fill="rgb(233,182,37)" rx="2" ry="2" />
<text  x="1051.95" y="671.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (22 samples, 0.58%)</title><rect x="868.1" y="501" width="6.9" height="15.0" fill="rgb(252,169,23)" rx="2" ry="2" />
<text  x="871.13" y="511.5" ></text>
</g>
<g >
<title>NaClSysExit (2 samples, 0.05%)</title><rect x="160.4" y="629" width="0.6" height="15.0" fill="rgb(236,18,1)" rx="2" ry="2" />
<text  x="163.37" y="639.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (17 samples, 0.45%)</title><rect x="1116.1" y="421" width="5.2" height="15.0" fill="rgb(247,96,54)" rx="2" ry="2" />
<text  x="1119.06" y="431.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.03%)</title><rect x="155.1" y="501" width="0.3" height="15.0" fill="rgb(224,195,15)" rx="2" ry="2" />
<text  x="158.09" y="511.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.03%)</title><rect x="1097.1" y="517" width="0.3" height="15.0" fill="rgb(221,15,41)" rx="2" ry="2" />
<text  x="1100.10" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (30 samples, 0.79%)</title><rect x="394.0" y="453" width="9.3" height="15.0" fill="rgb(238,25,16)" rx="2" ry="2" />
<text  x="397.01" y="463.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (1 samples, 0.03%)</title><rect x="1097.1" y="485" width="0.3" height="15.0" fill="rgb(231,44,30)" rx="2" ry="2" />
<text  x="1100.10" y="495.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.05%)</title><rect x="877.1" y="405" width="0.7" height="15.0" fill="rgb(220,76,38)" rx="2" ry="2" />
<text  x="880.14" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="160.7" y="453" width="0.3" height="15.0" fill="rgb(241,193,26)" rx="2" ry="2" />
<text  x="163.68" y="463.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.03%)</title><rect x="826.2" y="437" width="0.3" height="15.0" fill="rgb(207,115,35)" rx="2" ry="2" />
<text  x="829.18" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2 samples, 0.05%)</title><rect x="655.9" y="421" width="0.6" height="15.0" fill="rgb(251,14,32)" rx="2" ry="2" />
<text  x="658.92" y="431.5" ></text>
</g>
<g >
<title>do_anonymous_page (87 samples, 2.29%)</title><rect x="1019.1" y="565" width="27.1" height="15.0" fill="rgb(208,97,6)" rx="2" ry="2" />
<text  x="1022.12" y="575.5" >d..</text>
</g>
<g >
<title>NaClFastMutexUnlock (15 samples, 0.39%)</title><rect x="927.8" y="597" width="4.6" height="15.0" fill="rgb(205,217,43)" rx="2" ry="2" />
<text  x="930.78" y="607.5" ></text>
</g>
<g >
<title>__ioctl (80 samples, 2.11%)</title><rect x="11.2" y="581" width="24.9" height="15.0" fill="rgb(242,57,11)" rx="2" ry="2" />
<text  x="14.24" y="591.5" >_..</text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.05%)</title><rect x="834.9" y="469" width="0.6" height="15.0" fill="rgb(253,53,0)" rx="2" ry="2" />
<text  x="837.88" y="479.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="1095.6" y="629" width="0.3" height="15.0" fill="rgb(240,20,45)" rx="2" ry="2" />
<text  x="1098.55" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (3 samples, 0.08%)</title><rect x="1054.8" y="661" width="1.0" height="15.0" fill="rgb(241,108,29)" rx="2" ry="2" />
<text  x="1057.85" y="671.5" ></text>
</g>
<g >
<title>alloc_pages_current (2 samples, 0.05%)</title><rect x="37.7" y="261" width="0.6" height="15.0" fill="rgb(206,57,23)" rx="2" ry="2" />
<text  x="40.65" y="271.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (3 samples, 0.08%)</title><rect x="38.9" y="261" width="0.9" height="15.0" fill="rgb(220,217,2)" rx="2" ry="2" />
<text  x="41.89" y="271.5" ></text>
</g>
<g >
<title>NaClValidateCode (2 samples, 0.05%)</title><rect x="1053.0" y="581" width="0.6" height="15.0" fill="rgb(250,12,22)" rx="2" ry="2" />
<text  x="1055.99" y="591.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.18%)</title><rect x="831.5" y="421" width="2.1" height="15.0" fill="rgb(209,20,19)" rx="2" ry="2" />
<text  x="834.46" y="431.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.03%)</title><rect x="39.8" y="565" width="0.3" height="15.0" fill="rgb(223,167,7)" rx="2" ry="2" />
<text  x="42.83" y="575.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (12 samples, 0.32%)</title><rect x="78.0" y="613" width="3.8" height="15.0" fill="rgb(234,46,33)" rx="2" ry="2" />
<text  x="81.04" y="623.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.05%)</title><rect x="825.9" y="453" width="0.6" height="15.0" fill="rgb(246,202,14)" rx="2" ry="2" />
<text  x="828.87" y="463.5" ></text>
</g>
<g >
<title>page_remove_rmap (7 samples, 0.18%)</title><rect x="1113.9" y="421" width="2.2" height="15.0" fill="rgb(252,114,51)" rx="2" ry="2" />
<text  x="1116.88" y="431.5" ></text>
</g>
<g >
<title>sel_ldr (3,481 samples, 91.65%)</title><rect x="40.1" y="693" width="1081.5" height="15.0" fill="rgb(242,183,12)" rx="2" ry="2" />
<text  x="43.14" y="703.5" >sel_ldr</text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.05%)</title><rect x="655.9" y="469" width="0.6" height="15.0" fill="rgb(206,36,11)" rx="2" ry="2" />
<text  x="658.92" y="479.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="1164.2" y="533" width="0.3" height="15.0" fill="rgb(232,59,11)" rx="2" ry="2" />
<text  x="1167.21" y="543.5" ></text>
</g>
<g >
<title>NaClStoreMem (1 samples, 0.03%)</title><rect x="160.1" y="469" width="0.3" height="15.0" fill="rgb(221,156,22)" rx="2" ry="2" />
<text  x="163.06" y="479.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.03%)</title><rect x="1019.1" y="549" width="0.3" height="15.0" fill="rgb(246,111,28)" rx="2" ry="2" />
<text  x="1022.12" y="559.5" ></text>
</g>
<g >
<title>do_user_addr_fault (107 samples, 2.82%)</title><rect x="1014.5" y="629" width="33.2" height="15.0" fill="rgb(223,162,28)" rx="2" ry="2" />
<text  x="1017.46" y="639.5" >do..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock (20 samples, 0.53%)</title><rect x="145.2" y="597" width="6.2" height="15.0" fill="rgb(217,207,7)" rx="2" ry="2" />
<text  x="148.15" y="607.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.03%)</title><rect x="10.3" y="517" width="0.3" height="15.0" fill="rgb(226,187,31)" rx="2" ry="2" />
<text  x="13.31" y="527.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.03%)</title><rect x="1134.7" y="421" width="0.3" height="15.0" fill="rgb(246,4,11)" rx="2" ry="2" />
<text  x="1137.70" y="431.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (2 samples, 0.05%)</title><rect x="1096.2" y="661" width="0.6" height="15.0" fill="rgb(213,130,0)" rx="2" ry="2" />
<text  x="1099.17" y="671.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (1 samples, 0.03%)</title><rect x="1163.3" y="565" width="0.3" height="15.0" fill="rgb(236,96,9)" rx="2" ry="2" />
<text  x="1166.28" y="575.5" ></text>
</g>
<g >
<title>CompareAndSwap (55 samples, 1.45%)</title><rect x="125.6" y="629" width="17.1" height="15.0" fill="rgb(225,166,28)" rx="2" ry="2" />
<text  x="128.58" y="639.5" ></text>
</g>
<g >
<title>__libc_write (10 samples, 0.26%)</title><rect x="36.7" y="533" width="3.1" height="15.0" fill="rgb(246,223,11)" rx="2" ry="2" />
<text  x="39.72" y="543.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (38 samples, 1.00%)</title><rect x="632.9" y="485" width="11.8" height="15.0" fill="rgb(241,223,26)" rx="2" ry="2" />
<text  x="635.93" y="495.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (2 samples, 0.05%)</title><rect x="160.4" y="549" width="0.6" height="15.0" fill="rgb(245,38,33)" rx="2" ry="2" />
<text  x="163.37" y="559.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.08%)</title><rect x="1188.1" y="533" width="1.0" height="15.0" fill="rgb(224,10,38)" rx="2" ry="2" />
<text  x="1191.14" y="543.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.03%)</title><rect x="160.1" y="613" width="0.3" height="15.0" fill="rgb(245,120,4)" rx="2" ry="2" />
<text  x="163.06" y="623.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (24 samples, 0.63%)</title><rect x="936.8" y="549" width="7.4" height="15.0" fill="rgb(236,6,32)" rx="2" ry="2" />
<text  x="939.79" y="559.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.03%)</title><rect x="10.3" y="533" width="0.3" height="15.0" fill="rgb(215,21,15)" rx="2" ry="2" />
<text  x="13.31" y="543.5" ></text>
</g>
<g >
<title>__GI___fork (1 samples, 0.03%)</title><rect x="10.0" y="549" width="0.3" height="15.0" fill="rgb(208,74,37)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (1,274 samples, 33.54%)</title><rect x="161.3" y="613" width="395.8" height="15.0" fill="rgb(226,1,2)" rx="2" ry="2" />
<text  x="164.31" y="623.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.03%)</title><rect x="161.0" y="453" width="0.3" height="15.0" fill="rgb(224,165,22)" rx="2" ry="2" />
<text  x="164.00" y="463.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (18 samples, 0.47%)</title><rect x="1168.3" y="453" width="5.5" height="15.0" fill="rgb(218,111,29)" rx="2" ry="2" />
<text  x="1171.25" y="463.5" ></text>
</g>
<g >
<title>menu_select (11 samples, 0.29%)</title><rect x="1183.2" y="517" width="3.4" height="15.0" fill="rgb(209,43,38)" rx="2" ry="2" />
<text  x="1186.16" y="527.5" ></text>
</g>
<g >
<title>NaClSysExecve (1 samples, 0.03%)</title><rect x="160.1" y="629" width="0.3" height="15.0" fill="rgb(247,94,51)" rx="2" ry="2" />
<text  x="163.06" y="639.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.03%)</title><rect x="87.4" y="661" width="0.3" height="15.0" fill="rgb(232,0,14)" rx="2" ry="2" />
<text  x="90.36" y="671.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.03%)</title><rect x="1097.4" y="645" width="0.3" height="15.0" fill="rgb(231,148,16)" rx="2" ry="2" />
<text  x="1100.41" y="655.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (1 samples, 0.03%)</title><rect x="1186.0" y="485" width="0.3" height="15.0" fill="rgb(246,31,41)" rx="2" ry="2" />
<text  x="1188.96" y="495.5" ></text>
</g>
<g >
<title>cpu_startup_entry (81 samples, 2.13%)</title><rect x="1164.8" y="581" width="25.2" height="15.0" fill="rgb(239,185,2)" rx="2" ry="2" />
<text  x="1167.83" y="591.5" >c..</text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.03%)</title><rect x="1132.2" y="517" width="0.3" height="15.0" fill="rgb(232,16,2)" rx="2" ry="2" />
<text  x="1135.21" y="527.5" ></text>
</g>
<g >
<title>dispatcher (2 samples, 0.05%)</title><rect x="160.4" y="597" width="0.6" height="15.0" fill="rgb(211,104,26)" rx="2" ry="2" />
<text  x="163.37" y="607.5" ></text>
</g>
<g >
<title>alx_clean_rx_irq (1 samples, 0.03%)</title><rect x="1132.8" y="421" width="0.3" height="15.0" fill="rgb(253,184,34)" rx="2" ry="2" />
<text  x="1135.83" y="431.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.03%)</title><rect x="88.3" y="613" width="0.3" height="15.0" fill="rgb(233,17,27)" rx="2" ry="2" />
<text  x="91.29" y="623.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.03%)</title><rect x="572.0" y="629" width="0.3" height="15.0" fill="rgb(233,50,27)" rx="2" ry="2" />
<text  x="575.04" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="36.4" y="549" width="0.3" height="15.0" fill="rgb(249,222,19)" rx="2" ry="2" />
<text  x="39.41" y="559.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (1 samples, 0.03%)</title><rect x="153.8" y="645" width="0.4" height="15.0" fill="rgb(253,1,47)" rx="2" ry="2" />
<text  x="156.85" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="10.9" y="581" width="0.3" height="15.0" fill="rgb(222,179,43)" rx="2" ry="2" />
<text  x="13.93" y="591.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.03%)</title><rect x="1166.1" y="373" width="0.3" height="15.0" fill="rgb(213,15,48)" rx="2" ry="2" />
<text  x="1169.08" y="383.5" ></text>
</g>
<g >
<title>poll_freewait (1 samples, 0.03%)</title><rect x="1130.3" y="613" width="0.4" height="15.0" fill="rgb(208,183,45)" rx="2" ry="2" />
<text  x="1133.35" y="623.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampolineCall (1 samples, 0.03%)</title><rect x="160.1" y="517" width="0.3" height="15.0" fill="rgb(218,226,41)" rx="2" ry="2" />
<text  x="163.06" y="527.5" ></text>
</g>
<g >
<title>NaClForkThreadContextSetup (1 samples, 0.03%)</title><rect x="161.0" y="581" width="0.3" height="15.0" fill="rgb(250,19,40)" rx="2" ry="2" />
<text  x="164.00" y="591.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (12 samples, 0.32%)</title><rect x="1031.2" y="469" width="3.8" height="15.0" fill="rgb(235,26,26)" rx="2" ry="2" />
<text  x="1034.24" y="479.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.03%)</title><rect x="1121.3" y="357" width="0.3" height="15.0" fill="rgb(243,11,8)" rx="2" ry="2" />
<text  x="1124.34" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.05%)</title><rect x="88.6" y="613" width="0.6" height="15.0" fill="rgb(250,80,17)" rx="2" ry="2" />
<text  x="91.60" y="623.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.03%)</title><rect x="1121.3" y="389" width="0.3" height="15.0" fill="rgb(246,112,19)" rx="2" ry="2" />
<text  x="1124.34" y="399.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.03%)</title><rect x="1132.5" y="501" width="0.3" height="15.0" fill="rgb(250,189,52)" rx="2" ry="2" />
<text  x="1135.52" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.05%)</title><rect x="873.4" y="405" width="0.6" height="15.0" fill="rgb(229,142,27)" rx="2" ry="2" />
<text  x="876.41" y="415.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (1 samples, 0.03%)</title><rect x="1097.1" y="293" width="0.3" height="15.0" fill="rgb(250,38,53)" rx="2" ry="2" />
<text  x="1100.10" y="303.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.03%)</title><rect x="1129.4" y="565" width="0.3" height="15.0" fill="rgb(252,39,26)" rx="2" ry="2" />
<text  x="1132.42" y="575.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.03%)</title><rect x="1186.9" y="533" width="0.3" height="15.0" fill="rgb(213,194,36)" rx="2" ry="2" />
<text  x="1189.89" y="543.5" ></text>
</g>
<g >
<title>NaClGetDescMu (1 samples, 0.03%)</title><rect x="557.1" y="597" width="0.3" height="15.0" fill="rgb(214,200,39)" rx="2" ry="2" />
<text  x="560.12" y="607.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.03%)</title><rect x="10.0" y="517" width="0.3" height="15.0" fill="rgb(222,160,41)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>__build_skb_around (1 samples, 0.03%)</title><rect x="1132.8" y="357" width="0.3" height="15.0" fill="rgb(207,194,33)" rx="2" ry="2" />
<text  x="1135.83" y="367.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (7 samples, 0.18%)</title><rect x="1043.7" y="549" width="2.1" height="15.0" fill="rgb(231,137,20)" rx="2" ry="2" />
<text  x="1046.67" y="559.5" ></text>
</g>
<g >
<title>__evlist__enable (80 samples, 2.11%)</title><rect x="11.2" y="629" width="24.9" height="15.0" fill="rgb(246,200,35)" rx="2" ry="2" />
<text  x="14.24" y="639.5" >_..</text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.03%)</title><rect x="1097.1" y="165" width="0.3" height="15.0" fill="rgb(252,181,40)" rx="2" ry="2" />
<text  x="1100.10" y="175.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (2 samples, 0.05%)</title><rect x="1189.1" y="501" width="0.6" height="15.0" fill="rgb(218,124,34)" rx="2" ry="2" />
<text  x="1192.07" y="511.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (17 samples, 0.45%)</title><rect x="1116.1" y="405" width="5.2" height="15.0" fill="rgb(210,20,32)" rx="2" ry="2" />
<text  x="1119.06" y="415.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (1 samples, 0.03%)</title><rect x="36.7" y="309" width="0.3" height="15.0" fill="rgb(227,32,37)" rx="2" ry="2" />
<text  x="39.72" y="319.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.08%)</title><rect x="402.4" y="421" width="0.9" height="15.0" fill="rgb(234,219,54)" rx="2" ry="2" />
<text  x="405.40" y="431.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="36.4" y="517" width="0.3" height="15.0" fill="rgb(224,218,31)" rx="2" ry="2" />
<text  x="39.41" y="527.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (1 samples, 0.03%)</title><rect x="1097.1" y="629" width="0.3" height="15.0" fill="rgb(217,110,24)" rx="2" ry="2" />
<text  x="1100.10" y="639.5" ></text>
</g>
<g >
<title>ip_list_rcv_finish.constprop.0 (1 samples, 0.03%)</title><rect x="1133.8" y="325" width="0.3" height="15.0" fill="rgb(215,135,20)" rx="2" ry="2" />
<text  x="1136.77" y="335.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (1 samples, 0.03%)</title><rect x="161.0" y="645" width="0.3" height="15.0" fill="rgb(245,121,7)" rx="2" ry="2" />
<text  x="164.00" y="655.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.05%)</title><rect x="10.0" y="597" width="0.6" height="15.0" fill="rgb(217,222,38)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>mmput (37 samples, 0.97%)</title><rect x="1109.8" y="517" width="11.5" height="15.0" fill="rgb(231,2,12)" rx="2" ry="2" />
<text  x="1112.84" y="527.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="1127.9" y="517" width="0.3" height="15.0" fill="rgb(230,3,13)" rx="2" ry="2" />
<text  x="1130.86" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.03%)</title><rect x="833.9" y="421" width="0.4" height="15.0" fill="rgb(211,116,36)" rx="2" ry="2" />
<text  x="836.95" y="431.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (7 samples, 0.18%)</title><rect x="829.0" y="357" width="2.2" height="15.0" fill="rgb(206,42,11)" rx="2" ry="2" />
<text  x="831.98" y="367.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (20 samples, 0.53%)</title><rect x="861.6" y="501" width="6.2" height="15.0" fill="rgb(242,223,35)" rx="2" ry="2" />
<text  x="864.60" y="511.5" ></text>
</g>
<g >
<title>prep_new_page (26 samples, 0.68%)</title><rect x="1022.2" y="501" width="8.1" height="15.0" fill="rgb(250,225,25)" rx="2" ry="2" />
<text  x="1025.23" y="511.5" ></text>
</g>
<g >
<title>perf (93 samples, 2.45%)</title><rect x="11.2" y="693" width="28.9" height="15.0" fill="rgb(237,116,28)" rx="2" ry="2" />
<text  x="14.24" y="703.5" >perf</text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="1117.6" y="373" width="0.3" height="15.0" fill="rgb(219,179,43)" rx="2" ry="2" />
<text  x="1120.61" y="383.5" ></text>
</g>
<g >
<title>smp_call_function_single (66 samples, 1.74%)</title><rect x="15.3" y="437" width="20.5" height="15.0" fill="rgb(213,89,23)" rx="2" ry="2" />
<text  x="18.28" y="447.5" ></text>
</g>
<g >
<title>ip_forward (1 samples, 0.03%)</title><rect x="1133.8" y="293" width="0.3" height="15.0" fill="rgb(247,187,37)" rx="2" ry="2" />
<text  x="1136.77" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="155.1" y="453" width="0.3" height="15.0" fill="rgb(249,42,39)" rx="2" ry="2" />
<text  x="158.09" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="433.2" y="405" width="0.3" height="15.0" fill="rgb(214,171,39)" rx="2" ry="2" />
<text  x="436.16" y="415.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (15 samples, 0.39%)</title><rect x="826.5" y="421" width="4.7" height="15.0" fill="rgb(221,75,42)" rx="2" ry="2" />
<text  x="829.49" y="431.5" ></text>
</g>
<g >
<title>ion (10 samples, 0.26%)</title><rect x="36.7" y="549" width="3.1" height="15.0" fill="rgb(225,177,11)" rx="2" ry="2" />
<text  x="39.72" y="559.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.03%)</title><rect x="1052.4" y="517" width="0.3" height="15.0" fill="rgb(229,24,39)" rx="2" ry="2" />
<text  x="1055.36" y="527.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.03%)</title><rect x="623.3" y="325" width="0.3" height="15.0" fill="rgb(209,147,45)" rx="2" ry="2" />
<text  x="626.30" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (32 samples, 0.84%)</title><rect x="867.8" y="533" width="10.0" height="15.0" fill="rgb(244,76,40)" rx="2" ry="2" />
<text  x="870.81" y="543.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="1132.5" y="485" width="0.3" height="15.0" fill="rgb(215,127,39)" rx="2" ry="2" />
<text  x="1135.52" y="495.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (15 samples, 0.39%)</title><rect x="1030.3" y="485" width="4.7" height="15.0" fill="rgb(253,58,15)" rx="2" ry="2" />
<text  x="1033.31" y="495.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.03%)</title><rect x="1167.9" y="469" width="0.4" height="15.0" fill="rgb(214,138,5)" rx="2" ry="2" />
<text  x="1170.94" y="479.5" ></text>
</g>
<g >
<title>unix_poll (1 samples, 0.03%)</title><rect x="1130.0" y="581" width="0.3" height="15.0" fill="rgb(242,44,22)" rx="2" ry="2" />
<text  x="1133.04" y="591.5" ></text>
</g>
<g >
<title>__hrtimer_get_next_event (1 samples, 0.03%)</title><rect x="1165.5" y="421" width="0.3" height="15.0" fill="rgb(220,159,24)" rx="2" ry="2" />
<text  x="1168.46" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1051.7" y="613" width="0.7" height="15.0" fill="rgb(244,122,31)" rx="2" ry="2" />
<text  x="1054.74" y="623.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.03%)</title><rect x="1127.2" y="613" width="0.4" height="15.0" fill="rgb(220,198,1)" rx="2" ry="2" />
<text  x="1130.24" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (13 samples, 0.34%)</title><rect x="887.1" y="485" width="4.0" height="15.0" fill="rgb(208,148,29)" rx="2" ry="2" />
<text  x="890.08" y="495.5" ></text>
</g>
<g >
<title>NaClGetDescMu (2 samples, 0.05%)</title><rect x="951.4" y="613" width="0.6" height="15.0" fill="rgb(240,138,23)" rx="2" ry="2" />
<text  x="954.39" y="623.5" ></text>
</g>
<g >
<title>menu_select (6 samples, 0.16%)</title><rect x="1162.0" y="581" width="1.9" height="15.0" fill="rgb(245,56,6)" rx="2" ry="2" />
<text  x="1165.04" y="591.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 1.69%)</title><rect x="15.9" y="309" width="19.9" height="15.0" fill="rgb(234,190,34)" rx="2" ry="2" />
<text  x="18.90" y="319.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.03%)</title><rect x="1097.1" y="661" width="0.3" height="15.0" fill="rgb(232,0,32)" rx="2" ry="2" />
<text  x="1100.10" y="671.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.03%)</title><rect x="158.8" y="469" width="0.3" height="15.0" fill="rgb(228,21,1)" rx="2" ry="2" />
<text  x="161.82" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="1095.6" y="645" width="0.3" height="15.0" fill="rgb(234,27,39)" rx="2" ry="2" />
<text  x="1098.55" y="655.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.03%)</title><rect x="10.9" y="533" width="0.3" height="15.0" fill="rgb(229,126,16)" rx="2" ry="2" />
<text  x="13.93" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (2 samples, 0.05%)</title><rect x="875.6" y="421" width="0.6" height="15.0" fill="rgb(225,177,54)" rx="2" ry="2" />
<text  x="878.58" y="431.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 1.69%)</title><rect x="15.9" y="341" width="19.9" height="15.0" fill="rgb(245,181,15)" rx="2" ry="2" />
<text  x="18.90" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (8 samples, 0.21%)</title><rect x="625.5" y="485" width="2.5" height="15.0" fill="rgb(251,64,52)" rx="2" ry="2" />
<text  x="628.48" y="495.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.03%)</title><rect x="541.0" y="293" width="0.3" height="15.0" fill="rgb(212,105,28)" rx="2" ry="2" />
<text  x="543.97" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="433.2" y="389" width="0.3" height="15.0" fill="rgb(221,68,24)" rx="2" ry="2" />
<text  x="436.16" y="399.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.03%)</title><rect x="1052.1" y="437" width="0.3" height="15.0" fill="rgb(250,46,22)" rx="2" ry="2" />
<text  x="1055.05" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_inotify_add_watch (1 samples, 0.03%)</title><rect x="1127.6" y="645" width="0.3" height="15.0" fill="rgb(234,133,13)" rx="2" ry="2" />
<text  x="1130.55" y="655.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.03%)</title><rect x="39.8" y="549" width="0.3" height="15.0" fill="rgb(247,210,20)" rx="2" ry="2" />
<text  x="42.83" y="559.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (86 samples, 2.26%)</title><rect x="834.6" y="517" width="26.7" height="15.0" fill="rgb(249,189,28)" rx="2" ry="2" />
<text  x="837.57" y="527.5" >s..</text>
</g>
<g >
<title>record__mmap_read_all (10 samples, 0.26%)</title><rect x="36.7" y="629" width="3.1" height="15.0" fill="rgb(251,143,48)" rx="2" ry="2" />
<text  x="39.72" y="639.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.03%)</title><rect x="155.1" y="389" width="0.3" height="15.0" fill="rgb(243,198,37)" rx="2" ry="2" />
<text  x="158.09" y="399.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.03%)</title><rect x="1188.1" y="501" width="0.3" height="15.0" fill="rgb(227,117,44)" rx="2" ry="2" />
<text  x="1191.14" y="511.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 1.69%)</title><rect x="15.9" y="357" width="19.9" height="15.0" fill="rgb(228,98,20)" rx="2" ry="2" />
<text  x="18.90" y="367.5" ></text>
</g>
<g >
<title>lindrustinit (1 samples, 0.03%)</title><rect x="1097.1" y="613" width="0.3" height="15.0" fill="rgb(205,158,27)" rx="2" ry="2" />
<text  x="1100.10" y="623.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (62 samples, 1.63%)</title><rect x="62.5" y="661" width="19.3" height="15.0" fill="rgb(229,216,33)" rx="2" ry="2" />
<text  x="65.51" y="671.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (5 samples, 0.13%)</title><rect x="1132.8" y="501" width="1.6" height="15.0" fill="rgb(224,26,30)" rx="2" ry="2" />
<text  x="1135.83" y="511.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.03%)</title><rect x="623.3" y="261" width="0.3" height="15.0" fill="rgb(211,83,37)" rx="2" ry="2" />
<text  x="626.30" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.03%)</title><rect x="1167.0" y="341" width="0.3" height="15.0" fill="rgb(224,23,16)" rx="2" ry="2" />
<text  x="1170.01" y="351.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.03%)</title><rect x="1132.2" y="613" width="0.3" height="15.0" fill="rgb(238,143,4)" rx="2" ry="2" />
<text  x="1135.21" y="623.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (1 samples, 0.03%)</title><rect x="1134.4" y="517" width="0.3" height="15.0" fill="rgb(233,71,27)" rx="2" ry="2" />
<text  x="1137.39" y="527.5" ></text>
</g>
<g >
<title>perf_event__prepare_comm (1 samples, 0.03%)</title><rect x="36.4" y="613" width="0.3" height="15.0" fill="rgb(226,176,48)" rx="2" ry="2" />
<text  x="39.41" y="623.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.03%)</title><rect x="1097.1" y="453" width="0.3" height="15.0" fill="rgb(231,93,46)" rx="2" ry="2" />
<text  x="1100.10" y="463.5" ></text>
</g>
<g >
<title>arch_do_signal (38 samples, 1.00%)</title><rect x="1109.8" y="597" width="11.8" height="15.0" fill="rgb(254,194,39)" rx="2" ry="2" />
<text  x="1112.84" y="607.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="155.1" y="517" width="0.3" height="15.0" fill="rgb(241,129,37)" rx="2" ry="2" />
<text  x="158.09" y="527.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 1.69%)</title><rect x="15.9" y="325" width="19.9" height="15.0" fill="rgb(207,104,42)" rx="2" ry="2" />
<text  x="18.90" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="10.9" y="565" width="0.3" height="15.0" fill="rgb(230,34,24)" rx="2" ry="2" />
<text  x="13.93" y="575.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.03%)</title><rect x="88.0" y="613" width="0.3" height="15.0" fill="rgb(212,112,17)" rx="2" ry="2" />
<text  x="90.98" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (9 samples, 0.24%)</title><rect x="804.7" y="453" width="2.8" height="15.0" fill="rgb(254,79,22)" rx="2" ry="2" />
<text  x="807.74" y="463.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (3 samples, 0.08%)</title><rect x="934.0" y="565" width="0.9" height="15.0" fill="rgb(253,49,44)" rx="2" ry="2" />
<text  x="936.99" y="575.5" ></text>
</g>
<g >
<title>do_idle (104 samples, 2.74%)</title><rect x="1132.5" y="629" width="32.3" height="15.0" fill="rgb(218,97,32)" rx="2" ry="2" />
<text  x="1135.52" y="639.5" >do..</text>
</g>
<g >
<title>Process0Operands (1 samples, 0.03%)</title><rect x="158.2" y="549" width="0.3" height="15.0" fill="rgb(206,10,46)" rx="2" ry="2" />
<text  x="161.20" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (28 samples, 0.74%)</title><rect x="808.5" y="453" width="8.7" height="15.0" fill="rgb(212,0,1)" rx="2" ry="2" />
<text  x="811.47" y="463.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="1166.1" y="357" width="0.3" height="15.0" fill="rgb(216,145,14)" rx="2" ry="2" />
<text  x="1169.08" y="367.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.03%)</title><rect x="1038.1" y="501" width="0.3" height="15.0" fill="rgb(231,39,49)" rx="2" ry="2" />
<text  x="1041.07" y="511.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.03%)</title><rect x="1097.1" y="245" width="0.3" height="15.0" fill="rgb(223,19,31)" rx="2" ry="2" />
<text  x="1100.10" y="255.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.03%)</title><rect x="1187.8" y="549" width="0.3" height="15.0" fill="rgb(251,167,11)" rx="2" ry="2" />
<text  x="1190.83" y="559.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.03%)</title><rect x="1131.6" y="597" width="0.3" height="15.0" fill="rgb(213,139,10)" rx="2" ry="2" />
<text  x="1134.59" y="607.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.03%)</title><rect x="1131.6" y="629" width="0.3" height="15.0" fill="rgb(246,164,41)" rx="2" ry="2" />
<text  x="1134.59" y="639.5" ></text>
</g>
<g >
<title>lind_write (3 samples, 0.08%)</title><rect x="891.1" y="597" width="0.9" height="15.0" fill="rgb(216,134,51)" rx="2" ry="2" />
<text  x="894.12" y="607.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (2 samples, 0.05%)</title><rect x="38.9" y="197" width="0.6" height="15.0" fill="rgb(236,177,13)" rx="2" ry="2" />
<text  x="41.89" y="207.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.03%)</title><rect x="160.4" y="373" width="0.3" height="15.0" fill="rgb(215,173,43)" rx="2" ry="2" />
<text  x="163.37" y="383.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (186 samples, 4.90%)</title><rect x="675.8" y="485" width="57.8" height="15.0" fill="rgb(231,211,14)" rx="2" ry="2" />
<text  x="678.81" y="495.5" >&lt;std::..</text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.03%)</title><rect x="1184.1" y="501" width="0.3" height="15.0" fill="rgb(239,148,29)" rx="2" ry="2" />
<text  x="1187.10" y="511.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.03%)</title><rect x="41.4" y="661" width="0.3" height="15.0" fill="rgb(225,187,5)" rx="2" ry="2" />
<text  x="44.38" y="671.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (347 samples, 9.14%)</title><rect x="433.5" y="437" width="107.8" height="15.0" fill="rgb(221,88,41)" rx="2" ry="2" />
<text  x="436.47" y="447.5" >core::intrins..</text>
</g>
<g >
<title>____sys_recvmsg (1 samples, 0.03%)</title><rect x="1130.7" y="597" width="0.3" height="15.0" fill="rgb(218,165,17)" rx="2" ry="2" />
<text  x="1133.66" y="607.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (12 samples, 0.32%)</title><rect x="78.0" y="629" width="3.8" height="15.0" fill="rgb(247,2,32)" rx="2" ry="2" />
<text  x="81.04" y="639.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.03%)</title><rect x="861.3" y="469" width="0.3" height="15.0" fill="rgb(211,66,37)" rx="2" ry="2" />
<text  x="864.29" y="479.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (6 samples, 0.16%)</title><rect x="873.1" y="485" width="1.9" height="15.0" fill="rgb(220,167,52)" rx="2" ry="2" />
<text  x="876.10" y="495.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.03%)</title><rect x="1016.3" y="597" width="0.3" height="15.0" fill="rgb(218,50,7)" rx="2" ry="2" />
<text  x="1019.32" y="607.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (1 samples, 0.03%)</title><rect x="571.7" y="629" width="0.3" height="15.0" fill="rgb(246,197,30)" rx="2" ry="2" />
<text  x="574.73" y="639.5" ></text>
</g>
<g >
<title>create_empty_buffers (1 samples, 0.03%)</title><rect x="37.0" y="277" width="0.3" height="15.0" fill="rgb(230,214,51)" rx="2" ry="2" />
<text  x="40.03" y="287.5" ></text>
</g>
<g >
<title>psi_task_switch (1 samples, 0.03%)</title><rect x="1164.2" y="581" width="0.3" height="15.0" fill="rgb(233,12,18)" rx="2" ry="2" />
<text  x="1167.21" y="591.5" ></text>
</g>
<g >
<title>[sel_ldr] (2,790 samples, 73.46%)</title><rect x="91.4" y="677" width="866.8" height="15.0" fill="rgb(241,134,12)" rx="2" ry="2" />
<text  x="94.40" y="687.5" >[sel_ldr]</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (2 samples, 0.05%)</title><rect x="160.4" y="533" width="0.6" height="15.0" fill="rgb(213,75,2)" rx="2" ry="2" />
<text  x="163.37" y="543.5" ></text>
</g>
<g >
<title>__put_user_nocheck_2 (1 samples, 0.03%)</title><rect x="1128.8" y="629" width="0.3" height="15.0" fill="rgb(223,137,13)" rx="2" ry="2" />
<text  x="1131.79" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (19 samples, 0.50%)</title><rect x="938.0" y="533" width="5.9" height="15.0" fill="rgb(218,193,9)" rx="2" ry="2" />
<text  x="941.03" y="543.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (2 samples, 0.05%)</title><rect x="1044.9" y="501" width="0.6" height="15.0" fill="rgb(237,139,42)" rx="2" ry="2" />
<text  x="1047.91" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="36.1" y="597" width="0.3" height="15.0" fill="rgb(243,66,20)" rx="2" ry="2" />
<text  x="39.10" y="607.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.03%)</title><rect x="1166.1" y="389" width="0.3" height="15.0" fill="rgb(244,10,45)" rx="2" ry="2" />
<text  x="1169.08" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.05%)</title><rect x="37.7" y="245" width="0.6" height="15.0" fill="rgb(209,164,2)" rx="2" ry="2" />
<text  x="40.65" y="255.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.03%)</title><rect x="1186.3" y="485" width="0.3" height="15.0" fill="rgb(214,86,4)" rx="2" ry="2" />
<text  x="1189.27" y="495.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.03%)</title><rect x="1095.9" y="645" width="0.3" height="15.0" fill="rgb(232,195,52)" rx="2" ry="2" />
<text  x="1098.86" y="655.5" ></text>
</g>
<g >
<title>reader_loop (2 samples, 0.05%)</title><rect x="10.0" y="629" width="0.6" height="15.0" fill="rgb(205,150,18)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (16 samples, 0.42%)</title><rect x="628.0" y="469" width="4.9" height="15.0" fill="rgb(233,128,25)" rx="2" ry="2" />
<text  x="630.96" y="479.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (2 samples, 0.05%)</title><rect x="38.9" y="213" width="0.6" height="15.0" fill="rgb(213,90,36)" rx="2" ry="2" />
<text  x="41.89" y="223.5" ></text>
</g>
<g >
<title>NaClGetDesc (108 samples, 2.84%)</title><rect x="917.8" y="613" width="33.6" height="15.0" fill="rgb(212,147,51)" rx="2" ry="2" />
<text  x="920.84" y="623.5" >Na..</text>
</g>
<g >
<title>__fget_files (1 samples, 0.03%)</title><rect x="36.1" y="485" width="0.3" height="15.0" fill="rgb(214,218,3)" rx="2" ry="2" />
<text  x="39.10" y="495.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (6 samples, 0.16%)</title><rect x="568.9" y="613" width="1.9" height="15.0" fill="rgb(231,99,32)" rx="2" ry="2" />
<text  x="571.93" y="623.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.03%)</title><rect x="155.1" y="309" width="0.3" height="15.0" fill="rgb(239,35,16)" rx="2" ry="2" />
<text  x="158.09" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="158.8" y="501" width="0.3" height="15.0" fill="rgb(226,61,52)" rx="2" ry="2" />
<text  x="161.82" y="511.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.03%)</title><rect x="1129.4" y="597" width="0.3" height="15.0" fill="rgb(241,87,21)" rx="2" ry="2" />
<text  x="1132.42" y="607.5" ></text>
</g>
<g >
<title>get_typical_interval (2 samples, 0.05%)</title><rect x="1184.4" y="501" width="0.6" height="15.0" fill="rgb(209,105,1)" rx="2" ry="2" />
<text  x="1187.41" y="511.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.03%)</title><rect x="43.6" y="661" width="0.3" height="15.0" fill="rgb(236,22,27)" rx="2" ry="2" />
<text  x="46.55" y="671.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.03%)</title><rect x="161.0" y="373" width="0.3" height="15.0" fill="rgb(254,60,49)" rx="2" ry="2" />
<text  x="164.00" y="383.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.03%)</title><rect x="1173.2" y="341" width="0.3" height="15.0" fill="rgb(234,225,41)" rx="2" ry="2" />
<text  x="1176.22" y="351.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.03%)</title><rect x="1121.3" y="453" width="0.3" height="15.0" fill="rgb(227,40,30)" rx="2" ry="2" />
<text  x="1124.34" y="463.5" ></text>
</g>
<g >
<title>irq_exit_rcu (18 samples, 0.47%)</title><rect x="1168.3" y="469" width="5.5" height="15.0" fill="rgb(207,91,21)" rx="2" ry="2" />
<text  x="1171.25" y="479.5" ></text>
</g>
<g >
<title>[sel_ldr] (78 samples, 2.05%)</title><rect x="989.9" y="661" width="24.2" height="15.0" fill="rgb(254,80,2)" rx="2" ry="2" />
<text  x="992.92" y="671.5" >[..</text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.03%)</title><rect x="158.8" y="485" width="0.3" height="15.0" fill="rgb(235,186,54)" rx="2" ry="2" />
<text  x="161.82" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (42 samples, 1.11%)</title><rect x="48.2" y="661" width="13.1" height="15.0" fill="rgb(226,122,53)" rx="2" ry="2" />
<text  x="51.21" y="671.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.03%)</title><rect x="36.4" y="453" width="0.3" height="15.0" fill="rgb(234,96,6)" rx="2" ry="2" />
<text  x="39.41" y="463.5" ></text>
</g>
<g >
<title>tick_irq_enter (1 samples, 0.03%)</title><rect x="1167.9" y="453" width="0.4" height="15.0" fill="rgb(221,108,15)" rx="2" ry="2" />
<text  x="1170.94" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_restart (3 samples, 0.08%)</title><rect x="1189.1" y="533" width="0.9" height="15.0" fill="rgb(234,102,37)" rx="2" ry="2" />
<text  x="1192.07" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.03%)</title><rect x="556.5" y="469" width="0.3" height="15.0" fill="rgb(229,137,17)" rx="2" ry="2" />
<text  x="559.50" y="479.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (2 samples, 0.05%)</title><rect x="655.9" y="485" width="0.6" height="15.0" fill="rgb(212,123,5)" rx="2" ry="2" />
<text  x="658.92" y="495.5" ></text>
</g>
<g >
<title>kernel_init_free_pages (2 samples, 0.05%)</title><rect x="1021.6" y="501" width="0.6" height="15.0" fill="rgb(216,121,19)" rx="2" ry="2" />
<text  x="1024.61" y="511.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.03%)</title><rect x="160.4" y="501" width="0.3" height="15.0" fill="rgb(235,66,45)" rx="2" ry="2" />
<text  x="163.37" y="511.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (29 samples, 0.76%)</title><rect x="744.2" y="453" width="9.0" height="15.0" fill="rgb(224,200,28)" rx="2" ry="2" />
<text  x="747.16" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (20 samples, 0.53%)</title><rect x="638.5" y="453" width="6.2" height="15.0" fill="rgb(216,114,39)" rx="2" ry="2" />
<text  x="641.53" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.42%)</title><rect x="628.0" y="501" width="4.9" height="15.0" fill="rgb(226,27,50)" rx="2" ry="2" />
<text  x="630.96" y="511.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (14 samples, 0.37%)</title><rect x="193.9" y="501" width="4.4" height="15.0" fill="rgb(234,156,47)" rx="2" ry="2" />
<text  x="196.93" y="511.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="1129.1" y="517" width="0.3" height="15.0" fill="rgb(236,43,51)" rx="2" ry="2" />
<text  x="1132.10" y="527.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (8 samples, 0.21%)</title><rect x="955.4" y="613" width="2.5" height="15.0" fill="rgb(219,7,19)" rx="2" ry="2" />
<text  x="958.43" y="623.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.03%)</title><rect x="1167.0" y="309" width="0.3" height="15.0" fill="rgb(222,79,34)" rx="2" ry="2" />
<text  x="1170.01" y="319.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.03%)</title><rect x="1135.0" y="437" width="0.3" height="15.0" fill="rgb(232,158,33)" rx="2" ry="2" />
<text  x="1138.01" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (36 samples, 0.95%)</title><rect x="644.7" y="517" width="11.2" height="15.0" fill="rgb(250,136,28)" rx="2" ry="2" />
<text  x="647.74" y="527.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.03%)</title><rect x="1121.3" y="373" width="0.3" height="15.0" fill="rgb(221,51,42)" rx="2" ry="2" />
<text  x="1124.34" y="383.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (1 samples, 0.03%)</title><rect x="160.4" y="517" width="0.3" height="15.0" fill="rgb(238,167,20)" rx="2" ry="2" />
<text  x="163.37" y="527.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (1 samples, 0.03%)</title><rect x="1045.8" y="549" width="0.4" height="15.0" fill="rgb(240,111,48)" rx="2" ry="2" />
<text  x="1048.84" y="559.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (2 samples, 0.05%)</title><rect x="559.0" y="629" width="0.6" height="15.0" fill="rgb(232,0,44)" rx="2" ry="2" />
<text  x="561.99" y="639.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (9 samples, 0.24%)</title><rect x="84.6" y="613" width="2.8" height="15.0" fill="rgb(208,158,9)" rx="2" ry="2" />
<text  x="87.57" y="623.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.03%)</title><rect x="1128.5" y="629" width="0.3" height="15.0" fill="rgb(248,99,10)" rx="2" ry="2" />
<text  x="1131.48" y="639.5" ></text>
</g>
<g >
<title>kfree_skb (1 samples, 0.03%)</title><rect x="1133.8" y="277" width="0.3" height="15.0" fill="rgb(207,78,35)" rx="2" ry="2" />
<text  x="1136.77" y="287.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (1 samples, 0.03%)</title><rect x="160.1" y="645" width="0.3" height="15.0" fill="rgb(252,195,33)" rx="2" ry="2" />
<text  x="163.06" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (20 samples, 0.53%)</title><rect x="649.7" y="453" width="6.2" height="15.0" fill="rgb(209,227,10)" rx="2" ry="2" />
<text  x="652.71" y="463.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.03%)</title><rect x="1046.2" y="565" width="0.3" height="15.0" fill="rgb(232,220,7)" rx="2" ry="2" />
<text  x="1049.15" y="575.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (28 samples, 0.74%)</title><rect x="808.5" y="485" width="8.7" height="15.0" fill="rgb(227,153,54)" rx="2" ry="2" />
<text  x="811.47" y="495.5" ></text>
</g>
<g >
<title>memchr_inv (1 samples, 0.03%)</title><rect x="1131.9" y="597" width="0.3" height="15.0" fill="rgb(222,158,5)" rx="2" ry="2" />
<text  x="1134.90" y="607.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.03%)</title><rect x="1132.2" y="469" width="0.3" height="15.0" fill="rgb(210,95,53)" rx="2" ry="2" />
<text  x="1135.21" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.03%)</title><rect x="1185.7" y="469" width="0.3" height="15.0" fill="rgb(240,222,6)" rx="2" ry="2" />
<text  x="1188.65" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (1 samples, 0.03%)</title><rect x="160.4" y="485" width="0.3" height="15.0" fill="rgb(236,29,29)" rx="2" ry="2" />
<text  x="163.37" y="495.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.03%)</title><rect x="10.9" y="693" width="0.3" height="15.0" fill="rgb(210,161,36)" rx="2" ry="2" />
<text  x="13.93" y="703.5" ></text>
</g>
<g >
<title>perf_ioctl (79 samples, 2.08%)</title><rect x="11.2" y="517" width="24.6" height="15.0" fill="rgb(227,33,4)" rx="2" ry="2" />
<text  x="14.24" y="527.5" >p..</text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.03%)</title><rect x="893.3" y="597" width="0.3" height="15.0" fill="rgb(222,221,6)" rx="2" ry="2" />
<text  x="896.29" y="607.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.03%)</title><rect x="1132.2" y="565" width="0.3" height="15.0" fill="rgb(242,180,13)" rx="2" ry="2" />
<text  x="1135.21" y="575.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.03%)</title><rect x="1186.6" y="517" width="0.3" height="15.0" fill="rgb(220,70,34)" rx="2" ry="2" />
<text  x="1189.58" y="527.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (4 samples, 0.11%)</title><rect x="1044.3" y="517" width="1.2" height="15.0" fill="rgb(206,190,7)" rx="2" ry="2" />
<text  x="1047.29" y="527.5" ></text>
</g>
<g >
<title>arch_call_rest_init (81 samples, 2.13%)</title><rect x="1164.8" y="613" width="25.2" height="15.0" fill="rgb(253,207,13)" rx="2" ry="2" />
<text  x="1167.83" y="623.5" >a..</text>
</g>
<g >
<title>rest_init (81 samples, 2.13%)</title><rect x="1164.8" y="597" width="25.2" height="15.0" fill="rgb(217,52,6)" rx="2" ry="2" />
<text  x="1167.83" y="607.5" >r..</text>
</g>
<g >
<title>uncharge_page (1 samples, 0.03%)</title><rect x="1121.0" y="373" width="0.3" height="15.0" fill="rgb(246,214,20)" rx="2" ry="2" />
<text  x="1124.03" y="383.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (2 samples, 0.05%)</title><rect x="38.3" y="261" width="0.6" height="15.0" fill="rgb(220,221,20)" rx="2" ry="2" />
<text  x="41.27" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.13%)</title><rect x="876.2" y="453" width="1.6" height="15.0" fill="rgb(230,4,50)" rx="2" ry="2" />
<text  x="879.20" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (39 samples, 1.03%)</title><rect x="819.0" y="469" width="12.2" height="15.0" fill="rgb(246,129,19)" rx="2" ry="2" />
<text  x="822.04" y="479.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.03%)</title><rect x="433.2" y="261" width="0.3" height="15.0" fill="rgb(230,41,29)" rx="2" ry="2" />
<text  x="436.16" y="271.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 1.00%)</title><rect x="632.9" y="501" width="11.8" height="15.0" fill="rgb(235,147,39)" rx="2" ry="2" />
<text  x="635.93" y="511.5" ></text>
</g>
<g >
<title>do_nanosleep (1 samples, 0.03%)</title><rect x="1128.2" y="613" width="0.3" height="15.0" fill="rgb(228,85,8)" rx="2" ry="2" />
<text  x="1131.17" y="623.5" ></text>
</g>
<g >
<title>ovl_lookup_temp (1 samples, 0.03%)</title><rect x="160.7" y="309" width="0.3" height="15.0" fill="rgb(210,10,16)" rx="2" ry="2" />
<text  x="163.68" y="319.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (4 samples, 0.11%)</title><rect x="1114.8" y="405" width="1.3" height="15.0" fill="rgb(240,220,17)" rx="2" ry="2" />
<text  x="1117.81" y="415.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.03%)</title><rect x="1052.4" y="501" width="0.3" height="15.0" fill="rgb(213,202,16)" rx="2" ry="2" />
<text  x="1055.36" y="511.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.03%)</title><rect x="39.8" y="629" width="0.3" height="15.0" fill="rgb(214,130,45)" rx="2" ry="2" />
<text  x="42.83" y="639.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (10 samples, 0.26%)</title><rect x="1088.7" y="661" width="3.1" height="15.0" fill="rgb(213,68,10)" rx="2" ry="2" />
<text  x="1091.72" y="671.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.16%)</title><rect x="870.3" y="437" width="1.9" height="15.0" fill="rgb(233,4,23)" rx="2" ry="2" />
<text  x="873.30" y="447.5" ></text>
</g>
<g >
<title>error_entry (2 samples, 0.05%)</title><rect x="1048.3" y="661" width="0.6" height="15.0" fill="rgb(240,195,34)" rx="2" ry="2" />
<text  x="1051.33" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (20 samples, 0.53%)</title><rect x="649.7" y="437" width="6.2" height="15.0" fill="rgb(223,137,29)" rx="2" ry="2" />
<text  x="652.71" y="447.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (988 samples, 26.01%)</title><rect x="584.2" y="597" width="306.9" height="15.0" fill="rgb(228,150,41)" rx="2" ry="2" />
<text  x="587.15" y="607.5" >NaClHostDescWrite</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.08%)</title><rect x="871.2" y="421" width="1.0" height="15.0" fill="rgb(236,81,14)" rx="2" ry="2" />
<text  x="874.23" y="431.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.03%)</title><rect x="1097.1" y="469" width="0.3" height="15.0" fill="rgb(229,14,35)" rx="2" ry="2" />
<text  x="1100.10" y="479.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.03%)</title><rect x="1052.4" y="581" width="0.3" height="15.0" fill="rgb(233,42,32)" rx="2" ry="2" />
<text  x="1055.36" y="591.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="1134.7" y="485" width="0.6" height="15.0" fill="rgb(254,84,39)" rx="2" ry="2" />
<text  x="1137.70" y="495.5" ></text>
</g>
<g >
<title>NaClValidateImage (2 samples, 0.05%)</title><rect x="1053.0" y="597" width="0.6" height="15.0" fill="rgb(234,84,35)" rx="2" ry="2" />
<text  x="1055.99" y="607.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1109.5" y="677" width="0.3" height="15.0" fill="rgb(208,38,46)" rx="2" ry="2" />
<text  x="1112.53" y="687.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (3 samples, 0.08%)</title><rect x="1061.1" y="629" width="0.9" height="15.0" fill="rgb(237,107,8)" rx="2" ry="2" />
<text  x="1064.06" y="639.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (14 samples, 0.37%)</title><rect x="193.9" y="485" width="4.4" height="15.0" fill="rgb(213,75,7)" rx="2" ry="2" />
<text  x="196.93" y="495.5" ></text>
</g>
<g >
<title>resolve_normal_ct (1 samples, 0.03%)</title><rect x="1134.1" y="261" width="0.3" height="15.0" fill="rgb(226,1,45)" rx="2" ry="2" />
<text  x="1137.08" y="271.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.03%)</title><rect x="158.8" y="453" width="0.3" height="15.0" fill="rgb(242,87,4)" rx="2" ry="2" />
<text  x="161.82" y="463.5" ></text>
</g>
<g >
<title>do_exit (38 samples, 1.00%)</title><rect x="1109.8" y="549" width="11.8" height="15.0" fill="rgb(206,96,5)" rx="2" ry="2" />
<text  x="1112.84" y="559.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.03%)</title><rect x="1131.9" y="629" width="0.3" height="15.0" fill="rgb(246,36,52)" rx="2" ry="2" />
<text  x="1134.90" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (1 samples, 0.03%)</title><rect x="1127.9" y="645" width="0.3" height="15.0" fill="rgb(231,174,47)" rx="2" ry="2" />
<text  x="1130.86" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.03%)</title><rect x="88.3" y="597" width="0.3" height="15.0" fill="rgb(234,62,46)" rx="2" ry="2" />
<text  x="91.29" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (44 samples, 1.16%)</title><rect x="609.9" y="549" width="13.7" height="15.0" fill="rgb(228,119,39)" rx="2" ry="2" />
<text  x="612.94" y="559.5" ></text>
</g>
<g >
<title>__getblk_gfp (1 samples, 0.03%)</title><rect x="39.5" y="181" width="0.3" height="15.0" fill="rgb(241,219,41)" rx="2" ry="2" />
<text  x="42.52" y="191.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.03%)</title><rect x="1129.4" y="485" width="0.3" height="15.0" fill="rgb(241,70,24)" rx="2" ry="2" />
<text  x="1132.42" y="495.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.03%)</title><rect x="1097.1" y="501" width="0.3" height="15.0" fill="rgb(206,14,15)" rx="2" ry="2" />
<text  x="1100.10" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (48 samples, 1.26%)</title><rect x="1020.1" y="533" width="14.9" height="15.0" fill="rgb(244,150,37)" rx="2" ry="2" />
<text  x="1023.05" y="543.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (1 samples, 0.03%)</title><rect x="158.5" y="549" width="0.3" height="15.0" fill="rgb(218,31,45)" rx="2" ry="2" />
<text  x="161.51" y="559.5" ></text>
</g>
<g >
<title>serde_json::de::from_str (1 samples, 0.03%)</title><rect x="1097.1" y="565" width="0.3" height="15.0" fill="rgb(225,217,2)" rx="2" ry="2" />
<text  x="1100.10" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (38 samples, 1.00%)</title><rect x="632.9" y="469" width="11.8" height="15.0" fill="rgb(240,170,44)" rx="2" ry="2" />
<text  x="635.93" y="479.5" ></text>
</g>
<g >
<title>NaClSysRead (1,275 samples, 33.57%)</title><rect x="161.3" y="629" width="396.1" height="15.0" fill="rgb(207,148,29)" rx="2" ry="2" />
<text  x="164.31" y="639.5" >NaClSysRead</text>
</g>
<g >
<title>load_balance (8 samples, 0.21%)</title><rect x="1169.8" y="373" width="2.5" height="15.0" fill="rgb(207,228,3)" rx="2" ry="2" />
<text  x="1172.81" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (80 samples, 2.11%)</title><rect x="332.2" y="469" width="24.8" height="15.0" fill="rgb(237,98,45)" rx="2" ry="2" />
<text  x="335.19" y="479.5" >c..</text>
</g>
<g >
<title>account_idle_ticks (1 samples, 0.03%)</title><rect x="1164.5" y="597" width="0.3" height="15.0" fill="rgb(205,53,50)" rx="2" ry="2" />
<text  x="1167.52" y="607.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.03%)</title><rect x="158.8" y="357" width="0.3" height="15.0" fill="rgb(224,0,42)" rx="2" ry="2" />
<text  x="161.82" y="367.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (76 samples, 2.00%)</title><rect x="733.6" y="485" width="23.6" height="15.0" fill="rgb(252,63,18)" rx="2" ry="2" />
<text  x="736.60" y="495.5" >r..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (38 samples, 1.00%)</title><rect x="632.9" y="517" width="11.8" height="15.0" fill="rgb(223,206,19)" rx="2" ry="2" />
<text  x="635.93" y="527.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (77 samples, 2.03%)</title><rect x="1062.6" y="661" width="23.9" height="15.0" fill="rgb(249,127,9)" rx="2" ry="2" />
<text  x="1065.62" y="671.5" >r..</text>
</g>
<g >
<title>NaClXMutexUnlock (23 samples, 0.61%)</title><rect x="561.8" y="597" width="7.1" height="15.0" fill="rgb(241,21,28)" rx="2" ry="2" />
<text  x="564.79" y="607.5" ></text>
</g>
<g >
<title>clear_page_erms (25 samples, 0.66%)</title><rect x="1022.5" y="485" width="7.8" height="15.0" fill="rgb(239,38,22)" rx="2" ry="2" />
<text  x="1025.54" y="495.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.03%)</title><rect x="160.4" y="309" width="0.3" height="15.0" fill="rgb(253,116,54)" rx="2" ry="2" />
<text  x="163.37" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.03%)</title><rect x="1167.3" y="405" width="0.3" height="15.0" fill="rgb(221,163,35)" rx="2" ry="2" />
<text  x="1170.32" y="415.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.03%)</title><rect x="1121.3" y="341" width="0.3" height="15.0" fill="rgb(205,98,27)" rx="2" ry="2" />
<text  x="1124.34" y="351.5" ></text>
</g>
<g >
<title>event_function_call (68 samples, 1.79%)</title><rect x="14.7" y="453" width="21.1" height="15.0" fill="rgb(251,214,46)" rx="2" ry="2" />
<text  x="17.66" y="463.5" ></text>
</g>
<g >
<title>asm_common_interrupt (6 samples, 0.16%)</title><rect x="1132.5" y="565" width="1.9" height="15.0" fill="rgb(217,159,21)" rx="2" ry="2" />
<text  x="1135.52" y="575.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (83 samples, 2.19%)</title><rect x="835.5" y="501" width="25.8" height="15.0" fill="rgb(213,92,18)" rx="2" ry="2" />
<text  x="838.50" y="511.5" >s..</text>
</g>
<g >
<title>ip_sublist_rcv_finish (1 samples, 0.03%)</title><rect x="1133.8" y="309" width="0.3" height="15.0" fill="rgb(240,122,21)" rx="2" ry="2" />
<text  x="1136.77" y="319.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.03%)</title><rect x="1095.9" y="629" width="0.3" height="15.0" fill="rgb(252,71,7)" rx="2" ry="2" />
<text  x="1098.86" y="639.5" ></text>
</g>
<g >
<title>ret_from_fork (3 samples, 0.08%)</title><rect x="1131.6" y="677" width="0.9" height="15.0" fill="rgb(248,47,35)" rx="2" ry="2" />
<text  x="1134.59" y="687.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.03%)</title><rect x="1130.7" y="629" width="0.3" height="15.0" fill="rgb(245,72,47)" rx="2" ry="2" />
<text  x="1133.66" y="639.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.03%)</title><rect x="160.1" y="597" width="0.3" height="15.0" fill="rgb(222,150,32)" rx="2" ry="2" />
<text  x="163.06" y="607.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.03%)</title><rect x="1121.3" y="501" width="0.3" height="15.0" fill="rgb(226,51,43)" rx="2" ry="2" />
<text  x="1124.34" y="511.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (1 samples, 0.03%)</title><rect x="1097.1" y="389" width="0.3" height="15.0" fill="rgb(215,187,32)" rx="2" ry="2" />
<text  x="1100.10" y="399.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.03%)</title><rect x="1185.0" y="501" width="0.3" height="15.0" fill="rgb(234,208,42)" rx="2" ry="2" />
<text  x="1188.03" y="511.5" ></text>
</g>
<g >
<title>irqentry_enter (1 samples, 0.03%)</title><rect x="1047.7" y="629" width="0.3" height="15.0" fill="rgb(249,226,54)" rx="2" ry="2" />
<text  x="1050.70" y="639.5" ></text>
</g>
<g >
<title>release_pages (17 samples, 0.45%)</title><rect x="1116.1" y="389" width="5.2" height="15.0" fill="rgb(241,223,29)" rx="2" ry="2" />
<text  x="1119.06" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (2 samples, 0.05%)</title><rect x="623.9" y="533" width="0.6" height="15.0" fill="rgb(227,34,12)" rx="2" ry="2" />
<text  x="626.92" y="543.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="557.1" y="533" width="0.3" height="15.0" fill="rgb(237,220,26)" rx="2" ry="2" />
<text  x="560.12" y="543.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.03%)</title><rect x="1134.7" y="469" width="0.3" height="15.0" fill="rgb(205,74,17)" rx="2" ry="2" />
<text  x="1137.70" y="479.5" ></text>
</g>
<g >
<title>lru_cache_add (9 samples, 0.24%)</title><rect x="1035.6" y="533" width="2.8" height="15.0" fill="rgb(205,66,41)" rx="2" ry="2" />
<text  x="1038.59" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="623.3" y="453" width="0.3" height="15.0" fill="rgb(229,218,2)" rx="2" ry="2" />
<text  x="626.30" y="463.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.03%)</title><rect x="433.2" y="277" width="0.3" height="15.0" fill="rgb(221,38,10)" rx="2" ry="2" />
<text  x="436.16" y="287.5" ></text>
</g>
<g >
<title>__perf_event_enable (65 samples, 1.71%)</title><rect x="15.6" y="373" width="20.2" height="15.0" fill="rgb(218,56,46)" rx="2" ry="2" />
<text  x="18.59" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (8 samples, 0.21%)</title><rect x="1165.5" y="453" width="2.4" height="15.0" fill="rgb(225,202,45)" rx="2" ry="2" />
<text  x="1168.46" y="463.5" ></text>
</g>
<g >
<title>kernel_init_free_pages (1 samples, 0.03%)</title><rect x="1129.1" y="501" width="0.3" height="15.0" fill="rgb(234,130,53)" rx="2" ry="2" />
<text  x="1132.10" y="511.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (2 samples, 0.05%)</title><rect x="834.9" y="437" width="0.6" height="15.0" fill="rgb(240,174,29)" rx="2" ry="2" />
<text  x="837.88" y="447.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (1 samples, 0.03%)</title><rect x="1046.8" y="565" width="0.3" height="15.0" fill="rgb(245,217,31)" rx="2" ry="2" />
<text  x="1049.77" y="575.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.03%)</title><rect x="433.2" y="309" width="0.3" height="15.0" fill="rgb(215,28,14)" rx="2" ry="2" />
<text  x="436.16" y="319.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.03%)</title><rect x="1164.2" y="613" width="0.3" height="15.0" fill="rgb(243,8,7)" rx="2" ry="2" />
<text  x="1167.21" y="623.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (20 samples, 0.53%)</title><rect x="638.5" y="437" width="6.2" height="15.0" fill="rgb(248,201,0)" rx="2" ry="2" />
<text  x="641.53" y="447.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (1 samples, 0.03%)</title><rect x="1132.5" y="469" width="0.3" height="15.0" fill="rgb(249,40,9)" rx="2" ry="2" />
<text  x="1135.52" y="479.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.03%)</title><rect x="1182.2" y="517" width="0.3" height="15.0" fill="rgb(234,0,53)" rx="2" ry="2" />
<text  x="1185.23" y="527.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (6 samples, 0.16%)</title><rect x="1170.4" y="341" width="1.9" height="15.0" fill="rgb(223,169,6)" rx="2" ry="2" />
<text  x="1173.43" y="351.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.03%)</title><rect x="1097.1" y="85" width="0.3" height="15.0" fill="rgb(242,49,17)" rx="2" ry="2" />
<text  x="1100.10" y="95.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.03%)</title><rect x="1121.3" y="533" width="0.3" height="15.0" fill="rgb(223,170,37)" rx="2" ry="2" />
<text  x="1124.34" y="543.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="1129.4" y="533" width="0.3" height="15.0" fill="rgb(223,128,52)" rx="2" ry="2" />
<text  x="1132.42" y="543.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.03%)</title><rect x="36.1" y="501" width="0.3" height="15.0" fill="rgb(213,14,48)" rx="2" ry="2" />
<text  x="39.10" y="511.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.03%)</title><rect x="833.9" y="373" width="0.4" height="15.0" fill="rgb(207,102,42)" rx="2" ry="2" />
<text  x="836.95" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (3 samples, 0.08%)</title><rect x="1185.7" y="501" width="0.9" height="15.0" fill="rgb(254,170,30)" rx="2" ry="2" />
<text  x="1188.65" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="1051.7" y="597" width="0.7" height="15.0" fill="rgb(205,221,15)" rx="2" ry="2" />
<text  x="1054.74" y="607.5" ></text>
</g>
<g >
<title>generic_exec_single (65 samples, 1.71%)</title><rect x="15.6" y="421" width="20.2" height="15.0" fill="rgb(242,164,5)" rx="2" ry="2" />
<text  x="18.59" y="431.5" ></text>
</g>
<g >
<title>remote_function (65 samples, 1.71%)</title><rect x="15.6" y="405" width="20.2" height="15.0" fill="rgb(230,110,53)" rx="2" ry="2" />
<text  x="18.59" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="39.8" y="661" width="0.3" height="15.0" fill="rgb(232,77,23)" rx="2" ry="2" />
<text  x="42.83" y="671.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="155.1" y="469" width="0.3" height="15.0" fill="rgb(216,146,40)" rx="2" ry="2" />
<text  x="158.09" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (23 samples, 0.61%)</title><rect x="616.5" y="469" width="7.1" height="15.0" fill="rgb(224,207,36)" rx="2" ry="2" />
<text  x="619.47" y="479.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (1,275 samples, 33.57%)</title><rect x="161.3" y="645" width="396.1" height="15.0" fill="rgb(247,89,19)" rx="2" ry="2" />
<text  x="164.31" y="655.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>serde_json::de::from_trait (1 samples, 0.03%)</title><rect x="1097.1" y="549" width="0.3" height="15.0" fill="rgb(210,16,13)" rx="2" ry="2" />
<text  x="1100.10" y="559.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (3 samples, 0.08%)</title><rect x="154.2" y="597" width="0.9" height="15.0" fill="rgb(249,124,49)" rx="2" ry="2" />
<text  x="157.16" y="607.5" ></text>
</g>
<g >
<title>down_read_trylock (2 samples, 0.05%)</title><rect x="1015.4" y="613" width="0.6" height="15.0" fill="rgb(246,98,3)" rx="2" ry="2" />
<text  x="1018.39" y="623.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.03%)</title><rect x="1052.4" y="373" width="0.3" height="15.0" fill="rgb(206,121,31)" rx="2" ry="2" />
<text  x="1055.36" y="383.5" ></text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.05%)</title><rect x="655.9" y="453" width="0.6" height="15.0" fill="rgb(220,80,40)" rx="2" ry="2" />
<text  x="658.92" y="463.5" ></text>
</g>
<g >
<title>__get_free_pages (1 samples, 0.03%)</title><rect x="1129.1" y="565" width="0.3" height="15.0" fill="rgb(223,208,43)" rx="2" ry="2" />
<text  x="1132.10" y="575.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (5 samples, 0.13%)</title><rect x="1132.8" y="517" width="1.6" height="15.0" fill="rgb(227,113,47)" rx="2" ry="2" />
<text  x="1135.83" y="527.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.03%)</title><rect x="160.4" y="325" width="0.3" height="15.0" fill="rgb(215,84,54)" rx="2" ry="2" />
<text  x="163.37" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.08%)</title><rect x="159.1" y="613" width="1.0" height="15.0" fill="rgb(237,33,52)" rx="2" ry="2" />
<text  x="162.13" y="623.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.13%)</title><rect x="1061.1" y="661" width="1.5" height="15.0" fill="rgb(224,121,28)" rx="2" ry="2" />
<text  x="1064.06" y="671.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (1 samples, 0.03%)</title><rect x="114.7" y="629" width="0.3" height="15.0" fill="rgb(248,56,13)" rx="2" ry="2" />
<text  x="117.70" y="639.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (2 samples, 0.05%)</title><rect x="1018.5" y="565" width="0.6" height="15.0" fill="rgb(228,184,10)" rx="2" ry="2" />
<text  x="1021.50" y="575.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.03%)</title><rect x="1188.1" y="453" width="0.3" height="15.0" fill="rgb(242,138,9)" rx="2" ry="2" />
<text  x="1191.14" y="463.5" ></text>
</g>
<g >
<title>fdarray__poll (1 samples, 0.03%)</title><rect x="36.1" y="629" width="0.3" height="15.0" fill="rgb(205,94,43)" rx="2" ry="2" />
<text  x="39.10" y="639.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.05%)</title><rect x="1062.0" y="645" width="0.6" height="15.0" fill="rgb(211,136,14)" rx="2" ry="2" />
<text  x="1065.00" y="655.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.03%)</title><rect x="10.9" y="517" width="0.3" height="15.0" fill="rgb(218,224,46)" rx="2" ry="2" />
<text  x="13.93" y="527.5" ></text>
</g>
<g >
<title>ovl_cleanup_and_whiteout (1 samples, 0.03%)</title><rect x="160.7" y="325" width="0.3" height="15.0" fill="rgb(229,135,25)" rx="2" ry="2" />
<text  x="163.68" y="335.5" ></text>
</g>
<g >
<title>execute_command (2 samples, 0.05%)</title><rect x="10.0" y="613" width="0.6" height="15.0" fill="rgb(218,135,8)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_poll (6 samples, 0.16%)</title><rect x="1128.8" y="645" width="1.9" height="15.0" fill="rgb(216,186,28)" rx="2" ry="2" />
<text  x="1131.79" y="655.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (1 samples, 0.03%)</title><rect x="10.9" y="629" width="0.3" height="15.0" fill="rgb(235,196,40)" rx="2" ry="2" />
<text  x="13.93" y="639.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.03%)</title><rect x="1052.4" y="549" width="0.3" height="15.0" fill="rgb(226,92,42)" rx="2" ry="2" />
<text  x="1055.36" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.03%)</title><rect x="161.0" y="469" width="0.3" height="15.0" fill="rgb(207,179,25)" rx="2" ry="2" />
<text  x="164.00" y="479.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.03%)</title><rect x="39.8" y="581" width="0.3" height="15.0" fill="rgb(224,124,11)" rx="2" ry="2" />
<text  x="42.83" y="591.5" ></text>
</g>
<g >
<title>ovl_write_iter (10 samples, 0.26%)</title><rect x="36.7" y="421" width="3.1" height="15.0" fill="rgb(210,111,50)" rx="2" ry="2" />
<text  x="39.72" y="431.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::GenericInode&gt;::deserialize (1 samples, 0.03%)</title><rect x="1097.1" y="229" width="0.3" height="15.0" fill="rgb(238,52,52)" rx="2" ry="2" />
<text  x="1100.10" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (2 samples, 0.05%)</title><rect x="1051.7" y="581" width="0.7" height="15.0" fill="rgb(207,167,45)" rx="2" ry="2" />
<text  x="1054.74" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.05%)</title><rect x="61.9" y="661" width="0.6" height="15.0" fill="rgb(235,78,22)" rx="2" ry="2" />
<text  x="64.89" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.03%)</title><rect x="45.4" y="661" width="0.3" height="15.0" fill="rgb(229,223,51)" rx="2" ry="2" />
<text  x="48.42" y="671.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.03%)</title><rect x="10.6" y="661" width="0.3" height="15.0" fill="rgb(248,160,10)" rx="2" ry="2" />
<text  x="13.62" y="671.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (27 samples, 0.71%)</title><rect x="744.8" y="437" width="8.4" height="15.0" fill="rgb(242,100,10)" rx="2" ry="2" />
<text  x="747.78" y="447.5" ></text>
</g>
<g >
<title>NaClStore64 (1 samples, 0.03%)</title><rect x="160.1" y="485" width="0.3" height="15.0" fill="rgb(212,144,19)" rx="2" ry="2" />
<text  x="163.06" y="495.5" ></text>
</g>
<g >
<title>inet6_recvmsg (1 samples, 0.03%)</title><rect x="1130.7" y="565" width="0.3" height="15.0" fill="rgb(208,86,13)" rx="2" ry="2" />
<text  x="1133.66" y="575.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (18 samples, 0.47%)</title><rect x="944.2" y="549" width="5.6" height="15.0" fill="rgb(243,137,25)" rx="2" ry="2" />
<text  x="947.24" y="559.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.03%)</title><rect x="36.4" y="469" width="0.3" height="15.0" fill="rgb(215,181,11)" rx="2" ry="2" />
<text  x="39.41" y="479.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (31 samples, 0.82%)</title><rect x="546.9" y="469" width="9.6" height="15.0" fill="rgb(243,67,27)" rx="2" ry="2" />
<text  x="549.87" y="479.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (39 samples, 1.03%)</title><rect x="559.6" y="629" width="12.1" height="15.0" fill="rgb(251,189,24)" rx="2" ry="2" />
<text  x="562.61" y="639.5" ></text>
</g>
<g >
<title>__irqentry_text_end (1 samples, 0.03%)</title><rect x="1096.8" y="677" width="0.3" height="15.0" fill="rgb(226,91,51)" rx="2" ry="2" />
<text  x="1099.79" y="687.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.03%)</title><rect x="1052.1" y="517" width="0.3" height="15.0" fill="rgb(234,36,28)" rx="2" ry="2" />
<text  x="1055.05" y="527.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.03%)</title><rect x="541.0" y="261" width="0.3" height="15.0" fill="rgb(246,223,24)" rx="2" ry="2" />
<text  x="543.97" y="271.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (83 samples, 2.19%)</title><rect x="835.5" y="485" width="25.8" height="15.0" fill="rgb(252,130,23)" rx="2" ry="2" />
<text  x="838.50" y="495.5" >s..</text>
</g>
<g >
<title>inet6_ioctl (1 samples, 0.03%)</title><rect x="1127.9" y="581" width="0.3" height="15.0" fill="rgb(252,87,38)" rx="2" ry="2" />
<text  x="1130.86" y="591.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.03%)</title><rect x="158.8" y="389" width="0.3" height="15.0" fill="rgb(225,200,4)" rx="2" ry="2" />
<text  x="161.82" y="399.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (628 samples, 16.54%)</title><rect x="361.4" y="485" width="195.1" height="15.0" fill="rgb(216,222,2)" rx="2" ry="2" />
<text  x="364.39" y="495.5" >ringbuf::consumer::Consum..</text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (2 samples, 0.05%)</title><rect x="1053.0" y="565" width="0.6" height="15.0" fill="rgb(221,129,49)" rx="2" ry="2" />
<text  x="1055.99" y="575.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (3 samples, 0.08%)</title><rect x="834.6" y="485" width="0.9" height="15.0" fill="rgb(211,4,52)" rx="2" ry="2" />
<text  x="837.57" y="495.5" ></text>
</g>
<g >
<title>pipe_read (1 samples, 0.03%)</title><rect x="10.9" y="485" width="0.3" height="15.0" fill="rgb(241,52,35)" rx="2" ry="2" />
<text  x="13.93" y="495.5" ></text>
</g>
<g >
<title>NaClLog (5 samples, 0.13%)</title><rect x="915.7" y="581" width="1.5" height="15.0" fill="rgb(226,54,46)" rx="2" ry="2" />
<text  x="918.66" y="591.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="158.8" y="421" width="0.3" height="15.0" fill="rgb(237,178,48)" rx="2" ry="2" />
<text  x="161.82" y="431.5" ></text>
</g>
<g >
<title>start_kernel (81 samples, 2.13%)</title><rect x="1164.8" y="629" width="25.2" height="15.0" fill="rgb(241,23,29)" rx="2" ry="2" />
<text  x="1167.83" y="639.5" >s..</text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.03%)</title><rect x="1046.2" y="533" width="0.3" height="15.0" fill="rgb(232,167,10)" rx="2" ry="2" />
<text  x="1049.15" y="543.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.03%)</title><rect x="893.6" y="597" width="0.3" height="15.0" fill="rgb(209,117,40)" rx="2" ry="2" />
<text  x="896.60" y="607.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.03%)</title><rect x="37.0" y="293" width="0.3" height="15.0" fill="rgb(208,144,51)" rx="2" ry="2" />
<text  x="40.03" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.05%)</title><rect x="37.7" y="229" width="0.6" height="15.0" fill="rgb(209,55,22)" rx="2" ry="2" />
<text  x="40.65" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.03%)</title><rect x="1097.1" y="213" width="0.3" height="15.0" fill="rgb(253,212,10)" rx="2" ry="2" />
<text  x="1100.10" y="223.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (22 samples, 0.58%)</title><rect x="819.0" y="437" width="6.9" height="15.0" fill="rgb(226,226,24)" rx="2" ry="2" />
<text  x="822.04" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="161.3" y="517" width="0.3" height="15.0" fill="rgb(208,107,40)" rx="2" ry="2" />
<text  x="164.31" y="527.5" ></text>
</g>
<g >
<title>lind (3 samples, 0.08%)</title><rect x="10.0" y="693" width="0.9" height="15.0" fill="rgb(229,167,15)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>ovl_do_remove (1 samples, 0.03%)</title><rect x="160.7" y="357" width="0.3" height="15.0" fill="rgb(205,20,34)" rx="2" ry="2" />
<text  x="163.68" y="367.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_enum (1 samples, 0.03%)</title><rect x="1097.1" y="309" width="0.3" height="15.0" fill="rgb(211,146,18)" rx="2" ry="2" />
<text  x="1100.10" y="319.5" ></text>
</g>
<g >
<title>__unlink (1 samples, 0.03%)</title><rect x="160.7" y="469" width="0.3" height="15.0" fill="rgb(250,23,7)" rx="2" ry="2" />
<text  x="163.68" y="479.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.03%)</title><rect x="541.0" y="325" width="0.3" height="15.0" fill="rgb(251,62,26)" rx="2" ry="2" />
<text  x="543.97" y="335.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (8 samples, 0.21%)</title><rect x="754.7" y="469" width="2.5" height="15.0" fill="rgb(217,188,2)" rx="2" ry="2" />
<text  x="757.72" y="479.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.03%)</title><rect x="1129.4" y="517" width="0.3" height="15.0" fill="rgb(247,22,29)" rx="2" ry="2" />
<text  x="1132.42" y="527.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (28 samples, 0.74%)</title><rect x="1165.1" y="485" width="8.7" height="15.0" fill="rgb(206,78,15)" rx="2" ry="2" />
<text  x="1168.14" y="495.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.03%)</title><rect x="1047.4" y="613" width="0.3" height="15.0" fill="rgb(217,3,7)" rx="2" ry="2" />
<text  x="1050.39" y="623.5" ></text>
</g>
<g >
<title>do_open (1 samples, 0.03%)</title><rect x="1128.5" y="581" width="0.3" height="15.0" fill="rgb(226,136,12)" rx="2" ry="2" />
<text  x="1131.48" y="591.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.03%)</title><rect x="1052.4" y="437" width="0.3" height="15.0" fill="rgb(243,94,5)" rx="2" ry="2" />
<text  x="1055.36" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.32%)</title><rect x="606.2" y="549" width="3.7" height="15.0" fill="rgb(249,223,40)" rx="2" ry="2" />
<text  x="609.21" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.03%)</title><rect x="556.8" y="469" width="0.3" height="15.0" fill="rgb(247,42,51)" rx="2" ry="2" />
<text  x="559.81" y="479.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="1051.7" y="485" width="0.4" height="15.0" fill="rgb(216,10,3)" rx="2" ry="2" />
<text  x="1054.74" y="495.5" ></text>
</g>
<g >
<title>NaClDescRef (56 samples, 1.47%)</title><rect x="934.0" y="581" width="17.4" height="15.0" fill="rgb(240,58,17)" rx="2" ry="2" />
<text  x="936.99" y="591.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.03%)</title><rect x="161.0" y="389" width="0.3" height="15.0" fill="rgb(207,57,19)" rx="2" ry="2" />
<text  x="164.00" y="399.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3 samples, 0.08%)</title><rect x="741.1" y="437" width="0.9" height="15.0" fill="rgb(233,72,26)" rx="2" ry="2" />
<text  x="744.05" y="447.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (38 samples, 1.00%)</title><rect x="1097.7" y="677" width="11.8" height="15.0" fill="rgb(208,45,54)" rx="2" ry="2" />
<text  x="1100.73" y="687.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="1127.6" y="581" width="0.3" height="15.0" fill="rgb(249,130,43)" rx="2" ry="2" />
<text  x="1130.55" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.26%)</title><rect x="36.7" y="517" width="3.1" height="15.0" fill="rgb(206,83,48)" rx="2" ry="2" />
<text  x="39.72" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.05%)</title><rect x="876.2" y="421" width="0.6" height="15.0" fill="rgb(247,87,9)" rx="2" ry="2" />
<text  x="879.20" y="431.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.03%)</title><rect x="1120.7" y="373" width="0.3" height="15.0" fill="rgb(225,211,50)" rx="2" ry="2" />
<text  x="1123.72" y="383.5" ></text>
</g>
<g >
<title>worker_thread (2 samples, 0.05%)</title><rect x="1131.9" y="645" width="0.6" height="15.0" fill="rgb(254,101,10)" rx="2" ry="2" />
<text  x="1134.90" y="655.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.03%)</title><rect x="833.9" y="437" width="0.4" height="15.0" fill="rgb(238,189,21)" rx="2" ry="2" />
<text  x="836.95" y="447.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.03%)</title><rect x="433.2" y="245" width="0.3" height="15.0" fill="rgb(242,119,36)" rx="2" ry="2" />
<text  x="436.16" y="255.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (44 samples, 1.16%)</title><rect x="609.9" y="517" width="13.7" height="15.0" fill="rgb(212,43,4)" rx="2" ry="2" />
<text  x="612.94" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.03%)</title><rect x="61.6" y="645" width="0.3" height="15.0" fill="rgb(242,224,28)" rx="2" ry="2" />
<text  x="64.57" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.03%)</title><rect x="88.3" y="581" width="0.3" height="15.0" fill="rgb(229,40,30)" rx="2" ry="2" />
<text  x="91.29" y="591.5" ></text>
</g>
</g>
</svg>
