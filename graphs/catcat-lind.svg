<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1110.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1093" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1093" > </text>
<g id="frames">
<g >
<title>serde_json::ser::format_escaped_str_contents (9 samples, 0.19%)</title><rect x="100.3" y="997" width="2.2" height="15.0" fill="rgb(245,54,46)" rx="2" ry="2" />
<text  x="103.28" y="1007.5" ></text>
</g>
<g >
<title>memset_erms (2 samples, 0.04%)</title><rect x="674.5" y="485" width="0.5" height="15.0" fill="rgb(230,141,7)" rx="2" ry="2" />
<text  x="677.50" y="495.5" ></text>
</g>
<g >
<title>do_unlinkat (1 samples, 0.02%)</title><rect x="108.6" y="757" width="0.2" height="15.0" fill="rgb(222,78,50)" rx="2" ry="2" />
<text  x="111.60" y="767.5" ></text>
</g>
<g >
<title>ovl_inode_real (1 samples, 0.02%)</title><rect x="660.1" y="661" width="0.2" height="15.0" fill="rgb(223,30,7)" rx="2" ry="2" />
<text  x="663.06" y="671.5" ></text>
</g>
<g >
<title>__d_alloc (3 samples, 0.06%)</title><rect x="795.1" y="565" width="0.8" height="15.0" fill="rgb(213,116,47)" rx="2" ry="2" />
<text  x="798.12" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.04%)</title><rect x="37.6" y="981" width="0.5" height="15.0" fill="rgb(210,208,26)" rx="2" ry="2" />
<text  x="40.65" y="991.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (1 samples, 0.02%)</title><rect x="109.1" y="309" width="0.2" height="15.0" fill="rgb(210,124,51)" rx="2" ry="2" />
<text  x="112.09" y="319.5" ></text>
</g>
<g >
<title>__d_rehash (1 samples, 0.02%)</title><rect x="797.3" y="549" width="0.3" height="15.0" fill="rgb(208,108,20)" rx="2" ry="2" />
<text  x="800.32" y="559.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (2 samples, 0.04%)</title><rect x="1080.4" y="917" width="0.5" height="15.0" fill="rgb(208,178,26)" rx="2" ry="2" />
<text  x="1083.39" y="927.5" ></text>
</g>
<g >
<title>kmem_cache_free (16 samples, 0.33%)</title><rect x="123.0" y="357" width="3.9" height="15.0" fill="rgb(209,46,35)" rx="2" ry="2" />
<text  x="126.03" y="367.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.10%)</title><rect x="831.8" y="517" width="1.2" height="15.0" fill="rgb(247,119,3)" rx="2" ry="2" />
<text  x="834.82" y="527.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (9 samples, 0.19%)</title><rect x="100.3" y="885" width="2.2" height="15.0" fill="rgb(228,120,6)" rx="2" ry="2" />
<text  x="103.28" y="895.5" ></text>
</g>
<g >
<title>try_to_release_page (25 samples, 0.52%)</title><rect x="120.8" y="437" width="6.1" height="15.0" fill="rgb(246,164,43)" rx="2" ry="2" />
<text  x="123.83" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.06%)</title><rect x="1007.2" y="485" width="0.8" height="15.0" fill="rgb(243,127,32)" rx="2" ry="2" />
<text  x="1010.24" y="495.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (2 samples, 0.04%)</title><rect x="1043.2" y="1013" width="0.5" height="15.0" fill="rgb(206,215,27)" rx="2" ry="2" />
<text  x="1046.20" y="1023.5" ></text>
</g>
<g >
<title>__legitimize_mnt (1 samples, 0.02%)</title><rect x="766.0" y="613" width="0.2" height="15.0" fill="rgb(208,194,5)" rx="2" ry="2" />
<text  x="769.00" y="623.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (825 samples, 17.11%)</title><rect x="810.0" y="821" width="201.9" height="15.0" fill="rgb(211,99,24)" rx="2" ry="2" />
<text  x="813.04" y="831.5" >serde_json::ser::to_writer</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;rustposix::interface::file::EmulatedFile&gt; (12 samples, 0.25%)</title><rect x="654.2" y="853" width="2.9" height="15.0" fill="rgb(240,30,16)" rx="2" ry="2" />
<text  x="657.19" y="863.5" ></text>
</g>
<g >
<title>call_timer_fn (3 samples, 0.06%)</title><rect x="1115.4" y="789" width="0.7" height="15.0" fill="rgb(231,83,44)" rx="2" ry="2" />
<text  x="1118.38" y="799.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (80 samples, 1.66%)</title><rect x="981.5" y="389" width="19.6" height="15.0" fill="rgb(235,117,21)" rx="2" ry="2" />
<text  x="984.55" y="399.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.02%)</title><rect x="109.1" y="341" width="0.2" height="15.0" fill="rgb(235,221,8)" rx="2" ry="2" />
<text  x="112.09" y="351.5" ></text>
</g>
<g >
<title>ext4_bread_batch (1 samples, 0.02%)</title><rect x="748.4" y="421" width="0.2" height="15.0" fill="rgb(247,221,28)" rx="2" ry="2" />
<text  x="751.39" y="431.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect x="1080.4" y="997" width="0.5" height="15.0" fill="rgb(216,112,9)" rx="2" ry="2" />
<text  x="1083.39" y="1007.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="831.6" y="485" width="0.2" height="15.0" fill="rgb(208,73,48)" rx="2" ry="2" />
<text  x="834.57" y="495.5" ></text>
</g>
<g >
<title>cpuidle_select (5 samples, 0.10%)</title><rect x="1157.5" y="949" width="1.2" height="15.0" fill="rgb(231,172,27)" rx="2" ry="2" />
<text  x="1160.46" y="959.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (24 samples, 0.50%)</title><rect x="706.8" y="517" width="5.9" height="15.0" fill="rgb(248,156,35)" rx="2" ry="2" />
<text  x="709.79" y="527.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (2 samples, 0.04%)</title><rect x="804.4" y="533" width="0.5" height="15.0" fill="rgb(211,4,22)" rx="2" ry="2" />
<text  x="807.41" y="543.5" ></text>
</g>
<g >
<title>ext4_getblk (2 samples, 0.04%)</title><rect x="803.9" y="501" width="0.5" height="15.0" fill="rgb(219,220,53)" rx="2" ry="2" />
<text  x="806.92" y="511.5" ></text>
</g>
<g >
<title>ext4_fc_track_inode (1 samples, 0.02%)</title><rect x="719.5" y="469" width="0.3" height="15.0" fill="rgb(247,89,54)" rx="2" ry="2" />
<text  x="722.52" y="479.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (5 samples, 0.10%)</title><rect x="858.2" y="277" width="1.3" height="15.0" fill="rgb(207,226,14)" rx="2" ry="2" />
<text  x="861.24" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect x="809.6" y="725" width="0.4" height="15.0" fill="rgb(233,3,42)" rx="2" ry="2" />
<text  x="812.55" y="735.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="743.0" y="421" width="0.2" height="15.0" fill="rgb(249,151,6)" rx="2" ry="2" />
<text  x="746.00" y="431.5" ></text>
</g>
<g >
<title>errseq_check (1 samples, 0.02%)</title><rect x="242.9" y="469" width="0.3" height="15.0" fill="rgb(233,70,42)" rx="2" ry="2" />
<text  x="245.92" y="479.5" ></text>
</g>
<g >
<title>std::fs::remove_file (73 samples, 1.51%)</title><rect x="109.8" y="869" width="17.9" height="15.0" fill="rgb(208,125,7)" rx="2" ry="2" />
<text  x="112.82" y="879.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="235.1" y="485" width="0.2" height="15.0" fill="rgb(222,22,28)" rx="2" ry="2" />
<text  x="238.09" y="495.5" ></text>
</g>
<g >
<title>xa_get_order (1 samples, 0.02%)</title><rect x="693.8" y="501" width="0.3" height="15.0" fill="rgb(233,220,44)" rx="2" ry="2" />
<text  x="696.83" y="511.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.06%)</title><rect x="789.7" y="309" width="0.8" height="15.0" fill="rgb(214,179,2)" rx="2" ry="2" />
<text  x="792.73" y="319.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="1091.2" y="789" width="0.2" height="15.0" fill="rgb(230,88,43)" rx="2" ry="2" />
<text  x="1094.16" y="799.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="810.3" y="629" width="0.2" height="15.0" fill="rgb(207,22,2)" rx="2" ry="2" />
<text  x="813.29" y="639.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (42 samples, 0.87%)</title><rect x="712.7" y="533" width="10.2" height="15.0" fill="rgb(213,99,43)" rx="2" ry="2" />
<text  x="715.67" y="543.5" ></text>
</g>
<g >
<title>iput.part.0 (73 samples, 1.51%)</title><rect x="109.8" y="741" width="17.9" height="15.0" fill="rgb(243,138,2)" rx="2" ry="2" />
<text  x="112.82" y="751.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="711.4" y="453" width="0.3" height="15.0" fill="rgb(212,130,39)" rx="2" ry="2" />
<text  x="714.44" y="463.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="704.6" y="517" width="0.2" height="15.0" fill="rgb(205,181,36)" rx="2" ry="2" />
<text  x="707.59" y="527.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="1169.4" y="629" width="0.3" height="15.0" fill="rgb(219,162,4)" rx="2" ry="2" />
<text  x="1172.45" y="639.5" ></text>
</g>
<g >
<title>asm_common_interrupt (15 samples, 0.31%)</title><rect x="1110.2" y="917" width="3.7" height="15.0" fill="rgb(234,104,45)" rx="2" ry="2" />
<text  x="1113.24" y="927.5" ></text>
</g>
<g >
<title>arch_call_rest_init (116 samples, 2.41%)</title><rect x="1161.6" y="965" width="28.4" height="15.0" fill="rgb(254,139,38)" rx="2" ry="2" />
<text  x="1164.62" y="975.5" >ar..</text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="717.8" y="421" width="0.2" height="15.0" fill="rgb(234,59,40)" rx="2" ry="2" />
<text  x="720.80" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="762.6" y="565" width="0.2" height="15.0" fill="rgb(218,129,40)" rx="2" ry="2" />
<text  x="765.58" y="575.5" ></text>
</g>
<g >
<title>generic_permission (1 samples, 0.02%)</title><rect x="765.3" y="565" width="0.2" height="15.0" fill="rgb(226,102,14)" rx="2" ry="2" />
<text  x="768.27" y="575.5" ></text>
</g>
<g >
<title>_raw_write_lock (1 samples, 0.02%)</title><rect x="678.7" y="485" width="0.2" height="15.0" fill="rgb(222,167,15)" rx="2" ry="2" />
<text  x="681.66" y="495.5" ></text>
</g>
<g >
<title>add_module.constprop.0 (1 samples, 0.02%)</title><rect x="10.0" y="885" width="0.2" height="15.0" fill="rgb(218,112,52)" rx="2" ry="2" />
<text  x="13.00" y="895.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (4 samples, 0.08%)</title><rect x="679.9" y="485" width="1.0" height="15.0" fill="rgb(228,45,35)" rx="2" ry="2" />
<text  x="682.88" y="495.5" ></text>
</g>
<g >
<title>vfs_statx (8 samples, 0.17%)</title><rect x="732.2" y="677" width="2.0" height="15.0" fill="rgb(241,45,14)" rx="2" ry="2" />
<text  x="735.24" y="687.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (8 samples, 0.17%)</title><rect x="704.1" y="549" width="2.0" height="15.0" fill="rgb(237,192,6)" rx="2" ry="2" />
<text  x="707.10" y="559.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (1 samples, 0.02%)</title><rect x="130.9" y="837" width="0.2" height="15.0" fill="rgb(206,98,49)" rx="2" ry="2" />
<text  x="133.86" y="847.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="1105.1" y="869" width="0.2" height="15.0" fill="rgb(233,117,25)" rx="2" ry="2" />
<text  x="1108.10" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="30.1" y="949" width="0.2" height="15.0" fill="rgb(214,83,44)" rx="2" ry="2" />
<text  x="33.06" y="959.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (12 samples, 0.25%)</title><rect x="244.4" y="469" width="2.9" height="15.0" fill="rgb(236,39,41)" rx="2" ry="2" />
<text  x="247.39" y="479.5" ></text>
</g>
<g >
<title>ext4_dx_find_entry (7 samples, 0.15%)</title><rect x="803.7" y="565" width="1.7" height="15.0" fill="rgb(224,34,29)" rx="2" ry="2" />
<text  x="806.68" y="575.5" ></text>
</g>
<g >
<title>ext4_fc_track_inode (3 samples, 0.06%)</title><rect x="241.7" y="485" width="0.7" height="15.0" fill="rgb(254,47,26)" rx="2" ry="2" />
<text  x="244.69" y="495.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.06%)</title><rect x="108.8" y="821" width="0.8" height="15.0" fill="rgb(210,177,23)" rx="2" ry="2" />
<text  x="111.84" y="831.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.02%)</title><rect x="10.2" y="1045" width="0.3" height="15.0" fill="rgb(254,11,7)" rx="2" ry="2" />
<text  x="13.24" y="1055.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="169.3" y="661" width="0.2" height="15.0" fill="rgb(214,136,34)" rx="2" ry="2" />
<text  x="172.27" y="671.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="695.1" y="405" width="0.2" height="15.0" fill="rgb(228,9,10)" rx="2" ry="2" />
<text  x="698.05" y="415.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (3 samples, 0.06%)</title><rect x="243.2" y="469" width="0.7" height="15.0" fill="rgb(206,117,9)" rx="2" ry="2" />
<text  x="246.16" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (1 samples, 0.02%)</title><rect x="1091.9" y="997" width="0.2" height="15.0" fill="rgb(228,12,31)" rx="2" ry="2" />
<text  x="1094.89" y="1007.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.02%)</title><rect x="109.6" y="933" width="0.2" height="15.0" fill="rgb(214,222,37)" rx="2" ry="2" />
<text  x="112.58" y="943.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="1100.7" y="949" width="0.2" height="15.0" fill="rgb(217,48,29)" rx="2" ry="2" />
<text  x="1103.70" y="959.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (1 samples, 0.02%)</title><rect x="770.7" y="613" width="0.2" height="15.0" fill="rgb(205,208,20)" rx="2" ry="2" />
<text  x="773.65" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="1090.2" y="853" width="0.2" height="15.0" fill="rgb(245,91,38)" rx="2" ry="2" />
<text  x="1093.18" y="863.5" ></text>
</g>
<g >
<title>do_fault_around (1 samples, 0.02%)</title><rect x="10.2" y="821" width="0.3" height="15.0" fill="rgb(233,21,50)" rx="2" ry="2" />
<text  x="13.24" y="831.5" ></text>
</g>
<g >
<title>walk_component (2 samples, 0.04%)</title><rect x="766.2" y="629" width="0.5" height="15.0" fill="rgb(233,34,1)" rx="2" ry="2" />
<text  x="769.25" y="639.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="1090.4" y="645" width="0.3" height="15.0" fill="rgb(242,133,8)" rx="2" ry="2" />
<text  x="1093.42" y="655.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3 samples, 0.06%)</title><rect x="104.4" y="869" width="0.8" height="15.0" fill="rgb(235,167,0)" rx="2" ry="2" />
<text  x="107.44" y="879.5" ></text>
</g>
<g >
<title>iput.part.0 (91 samples, 1.89%)</title><rect x="771.1" y="549" width="22.3" height="15.0" fill="rgb(225,200,16)" rx="2" ry="2" />
<text  x="774.14" y="559.5" >i..</text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (2 samples, 0.04%)</title><rect x="716.3" y="453" width="0.5" height="15.0" fill="rgb(237,205,2)" rx="2" ry="2" />
<text  x="719.34" y="463.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="768.4" y="693" width="0.3" height="15.0" fill="rgb(244,137,8)" rx="2" ry="2" />
<text  x="771.45" y="703.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (4 samples, 0.08%)</title><rect x="671.8" y="453" width="1.0" height="15.0" fill="rgb(221,67,1)" rx="2" ry="2" />
<text  x="674.81" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23 samples, 0.48%)</title><rect x="1001.1" y="405" width="5.6" height="15.0" fill="rgb(223,94,33)" rx="2" ry="2" />
<text  x="1004.12" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (1 samples, 0.02%)</title><rect x="130.9" y="869" width="0.2" height="15.0" fill="rgb(231,77,19)" rx="2" ry="2" />
<text  x="133.86" y="879.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.02%)</title><rect x="203.3" y="485" width="0.2" height="15.0" fill="rgb(239,74,18)" rx="2" ry="2" />
<text  x="206.28" y="495.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (3 samples, 0.06%)</title><rect x="852.1" y="213" width="0.8" height="15.0" fill="rgb(250,40,29)" rx="2" ry="2" />
<text  x="855.12" y="223.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (825 samples, 17.11%)</title><rect x="810.0" y="757" width="201.9" height="15.0" fill="rgb(222,157,44)" rx="2" ry="2" />
<text  x="813.04" y="767.5" >serde::ser::SerializeMap::..</text>
</g>
<g >
<title>__inode_wait_for_writeback (1 samples, 0.02%)</title><rect x="793.4" y="645" width="0.2" height="15.0" fill="rgb(205,176,3)" rx="2" ry="2" />
<text  x="796.40" y="655.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.02%)</title><rect x="1109.0" y="981" width="0.3" height="15.0" fill="rgb(208,76,37)" rx="2" ry="2" />
<text  x="1112.02" y="991.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="1113.7" y="437" width="0.2" height="15.0" fill="rgb(240,104,7)" rx="2" ry="2" />
<text  x="1116.67" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.17%)</title><rect x="732.2" y="725" width="2.0" height="15.0" fill="rgb(210,188,10)" rx="2" ry="2" />
<text  x="735.24" y="735.5" ></text>
</g>
<g >
<title>ext4_orphan_add (1 samples, 0.02%)</title><rect x="805.6" y="597" width="0.3" height="15.0" fill="rgb(238,182,52)" rx="2" ry="2" />
<text  x="808.64" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="10.5" y="933" width="0.2" height="15.0" fill="rgb(218,217,13)" rx="2" ry="2" />
<text  x="13.49" y="943.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (82 samples, 1.70%)</title><rect x="1043.7" y="1013" width="20.1" height="15.0" fill="rgb(212,89,29)" rx="2" ry="2" />
<text  x="1046.69" y="1023.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (44 samples, 0.91%)</title><rect x="319.7" y="805" width="10.8" height="15.0" fill="rgb(210,98,1)" rx="2" ry="2" />
<text  x="322.74" y="815.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="686.5" y="469" width="0.2" height="15.0" fill="rgb(242,37,31)" rx="2" ry="2" />
<text  x="689.49" y="479.5" ></text>
</g>
<g >
<title>kvfree_call_rcu (1 samples, 0.02%)</title><rect x="103.7" y="613" width="0.2" height="15.0" fill="rgb(210,55,17)" rx="2" ry="2" />
<text  x="106.71" y="623.5" ></text>
</g>
<g >
<title>terminate_walk (1 samples, 0.02%)</title><rect x="766.7" y="645" width="0.3" height="15.0" fill="rgb(240,50,43)" rx="2" ry="2" />
<text  x="769.74" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.08%)</title><rect x="1008.5" y="533" width="0.9" height="15.0" fill="rgb(225,131,52)" rx="2" ry="2" />
<text  x="1011.46" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.17%)</title><rect x="1009.4" y="549" width="2.0" height="15.0" fill="rgb(234,86,27)" rx="2" ry="2" />
<text  x="1012.44" y="559.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (80 samples, 1.66%)</title><rect x="981.5" y="437" width="19.6" height="15.0" fill="rgb(237,25,27)" rx="2" ry="2" />
<text  x="984.55" y="447.5" ></text>
</g>
<g >
<title>__libc_close (12 samples, 0.25%)</title><rect x="654.2" y="661" width="2.9" height="15.0" fill="rgb(228,213,8)" rx="2" ry="2" />
<text  x="657.19" y="671.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (25 samples, 0.52%)</title><rect x="882.5" y="357" width="6.1" height="15.0" fill="rgb(221,170,3)" rx="2" ry="2" />
<text  x="885.46" y="367.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (576 samples, 11.94%)</title><rect x="292.3" y="853" width="141.0" height="15.0" fill="rgb(226,67,45)" rx="2" ry="2" />
<text  x="295.34" y="863.5" >ringbuf::producer..</text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.02%)</title><rect x="226.3" y="533" width="0.2" height="15.0" fill="rgb(205,92,34)" rx="2" ry="2" />
<text  x="229.28" y="543.5" ></text>
</g>
<g >
<title>find_busiest_group (7 samples, 0.15%)</title><rect x="1187.1" y="821" width="1.7" height="15.0" fill="rgb(252,174,22)" rx="2" ry="2" />
<text  x="1190.06" y="831.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="762.8" y="789" width="0.3" height="15.0" fill="rgb(236,188,34)" rx="2" ry="2" />
<text  x="765.82" y="799.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="764.0" y="693" width="0.3" height="15.0" fill="rgb(251,53,0)" rx="2" ry="2" />
<text  x="767.05" y="703.5" ></text>
</g>
<g >
<title>irqentry_enter (2 samples, 0.04%)</title><rect x="1163.6" y="837" width="0.5" height="15.0" fill="rgb(237,77,41)" rx="2" ry="2" />
<text  x="1166.58" y="847.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="108.1" y="549" width="0.3" height="15.0" fill="rgb(245,5,35)" rx="2" ry="2" />
<text  x="111.11" y="559.5" ></text>
</g>
<g >
<title>override_creds (1 samples, 0.02%)</title><rect x="769.4" y="629" width="0.3" height="15.0" fill="rgb(236,216,29)" rx="2" ry="2" />
<text  x="772.43" y="639.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.02%)</title><rect x="808.1" y="613" width="0.2" height="15.0" fill="rgb(221,146,25)" rx="2" ry="2" />
<text  x="811.08" y="623.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (8 samples, 0.17%)</title><rect x="290.4" y="805" width="1.9" height="15.0" fill="rgb(225,71,7)" rx="2" ry="2" />
<text  x="293.38" y="815.5" ></text>
</g>
<g >
<title>ext4_bread_batch (1 samples, 0.02%)</title><rect x="796.6" y="549" width="0.2" height="15.0" fill="rgb(216,194,21)" rx="2" ry="2" />
<text  x="799.59" y="559.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.02%)</title><rect x="810.3" y="597" width="0.2" height="15.0" fill="rgb(253,128,47)" rx="2" ry="2" />
<text  x="813.29" y="607.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="1092.9" y="757" width="0.2" height="15.0" fill="rgb(233,227,10)" rx="2" ry="2" />
<text  x="1095.87" y="767.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.02%)</title><rect x="30.1" y="901" width="0.2" height="15.0" fill="rgb(213,143,39)" rx="2" ry="2" />
<text  x="33.06" y="911.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="810.0" y="693" width="0.3" height="15.0" fill="rgb(251,41,51)" rx="2" ry="2" />
<text  x="813.04" y="703.5" ></text>
</g>
<g >
<title>crc_42 (1 samples, 0.02%)</title><rect x="743.5" y="421" width="0.2" height="15.0" fill="rgb(239,121,17)" rx="2" ry="2" />
<text  x="746.49" y="431.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (7 samples, 0.15%)</title><rect x="50.9" y="981" width="1.7" height="15.0" fill="rgb(217,226,13)" rx="2" ry="2" />
<text  x="53.86" y="991.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (2 samples, 0.04%)</title><rect x="112.8" y="453" width="0.4" height="15.0" fill="rgb(230,64,2)" rx="2" ry="2" />
<text  x="115.76" y="463.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (2 samples, 0.04%)</title><rect x="656.6" y="629" width="0.5" height="15.0" fill="rgb(250,91,51)" rx="2" ry="2" />
<text  x="659.64" y="639.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1 samples, 0.02%)</title><rect x="108.4" y="821" width="0.2" height="15.0" fill="rgb(243,124,14)" rx="2" ry="2" />
<text  x="111.35" y="831.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.02%)</title><rect x="888.3" y="133" width="0.3" height="15.0" fill="rgb(242,29,43)" rx="2" ry="2" />
<text  x="891.33" y="143.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.02%)</title><rect x="810.0" y="597" width="0.3" height="15.0" fill="rgb(253,108,53)" rx="2" ry="2" />
<text  x="813.04" y="607.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="231.4" y="485" width="0.3" height="15.0" fill="rgb(237,141,40)" rx="2" ry="2" />
<text  x="234.42" y="495.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (847 samples, 17.56%)</title><rect x="446.7" y="821" width="207.2" height="15.0" fill="rgb(225,137,9)" rx="2" ry="2" />
<text  x="449.72" y="831.5" >ringbuf::ring_buffer::RingB..</text>
</g>
<g >
<title>account_page_cleaned (4 samples, 0.08%)</title><rect x="786.1" y="325" width="0.9" height="15.0" fill="rgb(221,151,30)" rx="2" ry="2" />
<text  x="789.06" y="335.5" ></text>
</g>
<g >
<title>handle_irq_event (5 samples, 0.10%)</title><rect x="1110.2" y="853" width="1.3" height="15.0" fill="rgb(231,145,51)" rx="2" ry="2" />
<text  x="1113.24" y="863.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="35.7" y="741" width="0.2" height="15.0" fill="rgb(254,74,54)" rx="2" ry="2" />
<text  x="38.69" y="751.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.04%)</title><rect x="156.8" y="805" width="0.5" height="15.0" fill="rgb(222,226,45)" rx="2" ry="2" />
<text  x="159.80" y="815.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.02%)</title><rect x="1091.4" y="965" width="0.2" height="15.0" fill="rgb(211,201,44)" rx="2" ry="2" />
<text  x="1094.40" y="975.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="108.6" y="645" width="0.2" height="15.0" fill="rgb(223,4,18)" rx="2" ry="2" />
<text  x="111.60" y="655.5" ></text>
</g>
<g >
<title>find_get_entry (5 samples, 0.10%)</title><rect x="218.9" y="533" width="1.3" height="15.0" fill="rgb(233,136,29)" rx="2" ry="2" />
<text  x="221.94" y="543.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (43 samples, 0.89%)</title><rect x="782.9" y="437" width="10.5" height="15.0" fill="rgb(251,169,10)" rx="2" ry="2" />
<text  x="785.88" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.02%)</title><rect x="171.0" y="869" width="0.2" height="15.0" fill="rgb(221,68,23)" rx="2" ry="2" />
<text  x="173.99" y="879.5" ></text>
</g>
<g >
<title>policy_node (1 samples, 0.02%)</title><rect x="701.4" y="501" width="0.3" height="15.0" fill="rgb(214,190,5)" rx="2" ry="2" />
<text  x="704.41" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="760.9" y="533" width="0.2" height="15.0" fill="rgb(210,182,42)" rx="2" ry="2" />
<text  x="763.86" y="543.5" ></text>
</g>
<g >
<title>lind_read (176 samples, 3.65%)</title><rect x="128.2" y="933" width="43.0" height="15.0" fill="rgb(230,123,27)" rx="2" ry="2" />
<text  x="131.17" y="943.5" >lind..</text>
</g>
<g >
<title>ext4_es_free_extent (2 samples, 0.04%)</title><rect x="774.3" y="421" width="0.5" height="15.0" fill="rgb(238,48,34)" rx="2" ry="2" />
<text  x="777.32" y="431.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="103.7" y="549" width="0.2" height="15.0" fill="rgb(215,189,12)" rx="2" ry="2" />
<text  x="106.71" y="559.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="781.4" y="421" width="0.3" height="15.0" fill="rgb(249,90,41)" rx="2" ry="2" />
<text  x="784.42" y="431.5" ></text>
</g>
<g >
<title>nf_ct_delete.part.0 (1 samples, 0.02%)</title><rect x="1109.0" y="933" width="0.3" height="15.0" fill="rgb(239,148,30)" rx="2" ry="2" />
<text  x="1112.02" y="943.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="865.3" y="437" width="0.3" height="15.0" fill="rgb(224,86,29)" rx="2" ry="2" />
<text  x="868.33" y="447.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.12%)</title><rect x="948.5" y="405" width="1.5" height="15.0" fill="rgb(229,50,9)" rx="2" ry="2" />
<text  x="951.52" y="415.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.02%)</title><rect x="108.4" y="837" width="0.2" height="15.0" fill="rgb(208,168,40)" rx="2" ry="2" />
<text  x="111.35" y="847.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.02%)</title><rect x="1092.1" y="853" width="0.3" height="15.0" fill="rgb(232,191,9)" rx="2" ry="2" />
<text  x="1095.14" y="863.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="657.9" y="741" width="0.2" height="15.0" fill="rgb(227,62,27)" rx="2" ry="2" />
<text  x="660.86" y="751.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="1091.9" y="757" width="0.2" height="15.0" fill="rgb(228,165,2)" rx="2" ry="2" />
<text  x="1094.89" y="767.5" ></text>
</g>
<g >
<title>std::fs::remove_file (1 samples, 0.02%)</title><rect x="108.6" y="853" width="0.2" height="15.0" fill="rgb(244,103,37)" rx="2" ry="2" />
<text  x="111.60" y="863.5" ></text>
</g>
<g >
<title>ext4_dx_find_entry (5 samples, 0.10%)</title><rect x="750.6" y="437" width="1.2" height="15.0" fill="rgb(215,161,48)" rx="2" ry="2" />
<text  x="753.59" y="447.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="813.7" y="517" width="0.3" height="15.0" fill="rgb(232,51,1)" rx="2" ry="2" />
<text  x="816.71" y="527.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (1 samples, 0.02%)</title><rect x="1164.8" y="709" width="0.2" height="15.0" fill="rgb(239,171,17)" rx="2" ry="2" />
<text  x="1167.80" y="719.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.02%)</title><rect x="744.0" y="437" width="0.2" height="15.0" fill="rgb(250,215,25)" rx="2" ry="2" />
<text  x="746.98" y="447.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (16 samples, 0.33%)</title><rect x="1011.9" y="853" width="3.9" height="15.0" fill="rgb(246,108,29)" rx="2" ry="2" />
<text  x="1014.89" y="863.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (9 samples, 0.19%)</title><rect x="938.7" y="389" width="2.2" height="15.0" fill="rgb(231,28,44)" rx="2" ry="2" />
<text  x="941.73" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="731.7" y="757" width="0.3" height="15.0" fill="rgb(243,123,28)" rx="2" ry="2" />
<text  x="734.75" y="767.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (1 samples, 0.02%)</title><rect x="1091.9" y="709" width="0.2" height="15.0" fill="rgb(209,11,25)" rx="2" ry="2" />
<text  x="1094.89" y="719.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="1091.9" y="805" width="0.2" height="15.0" fill="rgb(252,77,7)" rx="2" ry="2" />
<text  x="1094.89" y="815.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (200 samples, 4.15%)</title><rect x="1110.0" y="965" width="48.9" height="15.0" fill="rgb(238,192,31)" rx="2" ry="2" />
<text  x="1113.00" y="975.5" >cpui..</text>
</g>
<g >
<title>do_sys_poll (3 samples, 0.06%)</title><rect x="1101.2" y="981" width="0.7" height="15.0" fill="rgb(210,215,44)" rx="2" ry="2" />
<text  x="1104.19" y="991.5" ></text>
</g>
<g >
<title>__realpath (19 samples, 0.39%)</title><rect x="763.1" y="805" width="4.6" height="15.0" fill="rgb(205,42,20)" rx="2" ry="2" />
<text  x="766.07" y="815.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.08%)</title><rect x="837.2" y="341" width="1.0" height="15.0" fill="rgb(218,17,53)" rx="2" ry="2" />
<text  x="840.20" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="842.3" y="181" width="0.3" height="15.0" fill="rgb(250,74,34)" rx="2" ry="2" />
<text  x="845.34" y="191.5" ></text>
</g>
<g >
<title>vsnprintf (2 samples, 0.04%)</title><rect x="748.9" y="485" width="0.5" height="15.0" fill="rgb(237,155,41)" rx="2" ry="2" />
<text  x="751.88" y="495.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (2 samples, 0.04%)</title><rect x="864.8" y="453" width="0.5" height="15.0" fill="rgb(217,32,12)" rx="2" ry="2" />
<text  x="867.85" y="463.5" ></text>
</g>
<g >
<title>ext4_xattr_security_get (1 samples, 0.02%)</title><rect x="660.6" y="501" width="0.2" height="15.0" fill="rgb(238,10,4)" rx="2" ry="2" />
<text  x="663.55" y="511.5" ></text>
</g>
<g >
<title>ext4_handle_dirty_dirblock (3 samples, 0.06%)</title><rect x="806.1" y="565" width="0.8" height="15.0" fill="rgb(245,210,28)" rx="2" ry="2" />
<text  x="809.13" y="575.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (242 samples, 5.02%)</title><rect x="878.5" y="437" width="59.3" height="15.0" fill="rgb(206,159,25)" rx="2" ry="2" />
<text  x="881.55" y="447.5" >serde_..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map (4 samples, 0.08%)</title><rect x="866.3" y="517" width="1.0" height="15.0" fill="rgb(228,115,1)" rx="2" ry="2" />
<text  x="869.31" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::open_syscall (73 samples, 1.51%)</title><rect x="109.8" y="901" width="17.9" height="15.0" fill="rgb(250,134,48)" rx="2" ry="2" />
<text  x="112.82" y="911.5" ></text>
</g>
<g >
<title>__udp6_lib_mcast_deliver (1 samples, 0.02%)</title><rect x="1113.7" y="565" width="0.2" height="15.0" fill="rgb(216,34,21)" rx="2" ry="2" />
<text  x="1116.67" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (9 samples, 0.19%)</title><rect x="764.8" y="725" width="2.2" height="15.0" fill="rgb(230,103,12)" rx="2" ry="2" />
<text  x="767.78" y="735.5" ></text>
</g>
<g >
<title>[perf-571.map] (1 samples, 0.02%)</title><rect x="102.7" y="1029" width="0.3" height="15.0" fill="rgb(251,143,52)" rx="2" ry="2" />
<text  x="105.73" y="1039.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::wrapping_sub (13 samples, 0.27%)</title><rect x="922.8" y="261" width="3.2" height="15.0" fill="rgb(224,75,0)" rx="2" ry="2" />
<text  x="925.83" y="271.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="1188.3" y="741" width="0.2" height="15.0" fill="rgb(212,208,22)" rx="2" ry="2" />
<text  x="1191.29" y="751.5" ></text>
</g>
<g >
<title>record__pushfn (21 samples, 0.44%)</title><rect x="30.6" y="933" width="5.1" height="15.0" fill="rgb(207,158,12)" rx="2" ry="2" />
<text  x="33.55" y="943.5" ></text>
</g>
<g >
<title>security_d_instantiate (1 samples, 0.02%)</title><rect x="747.2" y="501" width="0.2" height="15.0" fill="rgb(222,196,25)" rx="2" ry="2" />
<text  x="750.16" y="511.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (3 samples, 0.06%)</title><rect x="864.1" y="469" width="0.7" height="15.0" fill="rgb(206,137,38)" rx="2" ry="2" />
<text  x="867.11" y="479.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="220.2" y="533" width="0.2" height="15.0" fill="rgb(227,105,5)" rx="2" ry="2" />
<text  x="223.16" y="543.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (14 samples, 0.29%)</title><rect x="916.2" y="405" width="3.4" height="15.0" fill="rgb(232,162,5)" rx="2" ry="2" />
<text  x="919.22" y="415.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_value (8 samples, 0.17%)</title><rect x="1009.4" y="597" width="2.0" height="15.0" fill="rgb(218,220,27)" rx="2" ry="2" />
<text  x="1012.44" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (1 samples, 0.02%)</title><rect x="768.0" y="773" width="0.2" height="15.0" fill="rgb(213,196,41)" rx="2" ry="2" />
<text  x="770.96" y="783.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.02%)</title><rect x="1114.4" y="741" width="0.2" height="15.0" fill="rgb(246,147,32)" rx="2" ry="2" />
<text  x="1117.40" y="751.5" ></text>
</g>
<g >
<title>rcu_gp_init (1 samples, 0.02%)</title><rect x="1105.8" y="981" width="0.3" height="15.0" fill="rgb(228,198,22)" rx="2" ry="2" />
<text  x="1108.84" y="991.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (29 samples, 0.60%)</title><rect x="813.7" y="581" width="7.1" height="15.0" fill="rgb(221,124,29)" rx="2" ry="2" />
<text  x="816.71" y="591.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.02%)</title><rect x="46.5" y="901" width="0.2" height="15.0" fill="rgb(250,26,41)" rx="2" ry="2" />
<text  x="49.45" y="911.5" ></text>
</g>
<g >
<title>__brelse (1 samples, 0.02%)</title><rect x="713.6" y="469" width="0.3" height="15.0" fill="rgb(212,44,53)" rx="2" ry="2" />
<text  x="716.65" y="479.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.08%)</title><rect x="863.1" y="325" width="1.0" height="15.0" fill="rgb(209,115,52)" rx="2" ry="2" />
<text  x="866.13" y="335.5" ></text>
</g>
<g >
<title>xas_load (3 samples, 0.06%)</title><rect x="702.1" y="501" width="0.8" height="15.0" fill="rgb(251,220,10)" rx="2" ry="2" />
<text  x="705.15" y="511.5" ></text>
</g>
<g >
<title>generic_permission (1 samples, 0.02%)</title><rect x="769.2" y="645" width="0.2" height="15.0" fill="rgb(230,114,17)" rx="2" ry="2" />
<text  x="772.18" y="655.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.06%)</title><rect x="1109.3" y="981" width="0.7" height="15.0" fill="rgb(206,8,0)" rx="2" ry="2" />
<text  x="1112.26" y="991.5" ></text>
</g>
<g >
<title>do_unlinkat (73 samples, 1.51%)</title><rect x="109.8" y="773" width="17.9" height="15.0" fill="rgb(224,67,37)" rx="2" ry="2" />
<text  x="112.82" y="783.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (2 samples, 0.04%)</title><rect x="1080.4" y="981" width="0.5" height="15.0" fill="rgb(217,199,16)" rx="2" ry="2" />
<text  x="1083.39" y="991.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.02%)</title><rect x="1090.2" y="821" width="0.2" height="15.0" fill="rgb(245,128,14)" rx="2" ry="2" />
<text  x="1093.18" y="831.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.02%)</title><rect x="104.4" y="709" width="0.3" height="15.0" fill="rgb(209,103,10)" rx="2" ry="2" />
<text  x="107.44" y="719.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="109.3" y="533" width="0.3" height="15.0" fill="rgb(215,199,23)" rx="2" ry="2" />
<text  x="112.33" y="543.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="865.1" y="421" width="0.2" height="15.0" fill="rgb(222,46,12)" rx="2" ry="2" />
<text  x="868.09" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.21%)</title><rect x="833.0" y="293" width="2.5" height="15.0" fill="rgb(219,197,54)" rx="2" ry="2" />
<text  x="836.04" y="303.5" ></text>
</g>
<g >
<title>getname (1 samples, 0.02%)</title><rect x="755.2" y="645" width="0.3" height="15.0" fill="rgb(232,34,27)" rx="2" ry="2" />
<text  x="758.24" y="655.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="836.0" y="357" width="0.2" height="15.0" fill="rgb(218,167,15)" rx="2" ry="2" />
<text  x="838.98" y="367.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.02%)</title><rect x="743.0" y="405" width="0.2" height="15.0" fill="rgb(253,194,32)" rx="2" ry="2" />
<text  x="746.00" y="415.5" ></text>
</g>
<g >
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="752.3" y="373" width="0.2" height="15.0" fill="rgb(211,102,50)" rx="2" ry="2" />
<text  x="755.30" y="383.5" ></text>
</g>
<g >
<title>__gconv_load_conf (1 samples, 0.02%)</title><rect x="10.0" y="917" width="0.2" height="15.0" fill="rgb(229,181,15)" rx="2" ry="2" />
<text  x="13.00" y="927.5" ></text>
</g>
<g >
<title>account_page_dirtied (4 samples, 0.08%)</title><rect x="230.7" y="501" width="1.0" height="15.0" fill="rgb(205,23,43)" rx="2" ry="2" />
<text  x="233.68" y="511.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (17 samples, 0.35%)</title><rect x="976.2" y="389" width="4.1" height="15.0" fill="rgb(236,180,37)" rx="2" ry="2" />
<text  x="979.17" y="399.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (14 samples, 0.29%)</title><rect x="916.2" y="373" width="3.4" height="15.0" fill="rgb(213,36,16)" rx="2" ry="2" />
<text  x="919.22" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.15%)</title><rect x="129.1" y="773" width="1.8" height="15.0" fill="rgb(217,16,24)" rx="2" ry="2" />
<text  x="132.15" y="783.5" ></text>
</g>
<g >
<title>get_acl (1 samples, 0.02%)</title><rect x="765.3" y="549" width="0.2" height="15.0" fill="rgb(216,90,49)" rx="2" ry="2" />
<text  x="768.27" y="559.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="731.7" y="661" width="0.3" height="15.0" fill="rgb(226,46,42)" rx="2" ry="2" />
<text  x="734.75" y="671.5" ></text>
</g>
<g >
<title>ip6_mc_input (1 samples, 0.02%)</title><rect x="1113.7" y="645" width="0.2" height="15.0" fill="rgb(216,134,3)" rx="2" ry="2" />
<text  x="1116.67" y="655.5" ></text>
</g>
<g >
<title>ext4_inode_bitmap_csum_set (2 samples, 0.04%)</title><rect x="743.2" y="453" width="0.5" height="15.0" fill="rgb(249,194,39)" rx="2" ry="2" />
<text  x="746.25" y="463.5" ></text>
</g>
<g >
<title>ext4_ext_tree_init (2 samples, 0.04%)</title><rect x="742.8" y="453" width="0.4" height="15.0" fill="rgb(207,5,45)" rx="2" ry="2" />
<text  x="745.76" y="463.5" ></text>
</g>
<g >
<title>ext4_fc_track_template (1 samples, 0.02%)</title><rect x="242.4" y="485" width="0.3" height="15.0" fill="rgb(213,194,34)" rx="2" ry="2" />
<text  x="245.43" y="495.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="1109.3" y="837" width="0.2" height="15.0" fill="rgb(234,66,18)" rx="2" ry="2" />
<text  x="1112.26" y="847.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt_r (87 samples, 1.80%)</title><rect x="734.2" y="757" width="21.3" height="15.0" fill="rgb(222,197,34)" rx="2" ry="2" />
<text  x="737.20" y="767.5" >s..</text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::remove (1 samples, 0.02%)</title><rect x="108.4" y="869" width="0.2" height="15.0" fill="rgb(240,6,34)" rx="2" ry="2" />
<text  x="111.35" y="879.5" ></text>
</g>
<g >
<title>do_idle (116 samples, 2.41%)</title><rect x="1161.6" y="917" width="28.4" height="15.0" fill="rgb(224,61,12)" rx="2" ry="2" />
<text  x="1164.62" y="927.5" >do..</text>
</g>
<g >
<title>__softirqentry_text_start (9 samples, 0.19%)</title><rect x="1167.7" y="773" width="2.2" height="15.0" fill="rgb(225,7,51)" rx="2" ry="2" />
<text  x="1170.74" y="783.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="865.1" y="437" width="0.2" height="15.0" fill="rgb(226,8,16)" rx="2" ry="2" />
<text  x="868.09" y="447.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (4 samples, 0.08%)</title><rect x="1092.1" y="981" width="1.0" height="15.0" fill="rgb(224,57,4)" rx="2" ry="2" />
<text  x="1095.14" y="991.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (59 samples, 1.22%)</title><rect x="666.7" y="549" width="14.4" height="15.0" fill="rgb(215,187,10)" rx="2" ry="2" />
<text  x="669.67" y="559.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.10%)</title><rect x="810.8" y="613" width="1.2" height="15.0" fill="rgb(205,13,43)" rx="2" ry="2" />
<text  x="813.78" y="623.5" ></text>
</g>
<g >
<title>xas_store (6 samples, 0.12%)</title><rect x="203.8" y="501" width="1.4" height="15.0" fill="rgb(229,155,36)" rx="2" ry="2" />
<text  x="206.77" y="511.5" ></text>
</g>
<g >
<title>__es_remove_extent (1 samples, 0.02%)</title><rect x="677.9" y="469" width="0.3" height="15.0" fill="rgb(239,4,15)" rx="2" ry="2" />
<text  x="680.92" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (1 samples, 0.02%)</title><rect x="130.9" y="789" width="0.2" height="15.0" fill="rgb(224,16,38)" rx="2" ry="2" />
<text  x="133.86" y="799.5" ></text>
</g>
<g >
<title>vfs_getattr (2 samples, 0.04%)</title><rect x="733.7" y="629" width="0.5" height="15.0" fill="rgb(246,117,30)" rx="2" ry="2" />
<text  x="736.71" y="639.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (10 samples, 0.21%)</title><rect x="779.2" y="453" width="2.5" height="15.0" fill="rgb(223,220,24)" rx="2" ry="2" />
<text  x="782.21" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.31%)</title><rect x="938.2" y="437" width="3.7" height="15.0" fill="rgb(253,11,1)" rx="2" ry="2" />
<text  x="941.24" y="447.5" ></text>
</g>
<g >
<title>jbd2__journal_start (1 samples, 0.02%)</title><rect x="749.6" y="453" width="0.3" height="15.0" fill="rgb(221,47,49)" rx="2" ry="2" />
<text  x="752.61" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.19%)</title><rect x="100.3" y="917" width="2.2" height="15.0" fill="rgb(216,97,24)" rx="2" ry="2" />
<text  x="103.28" y="927.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (13 samples, 0.27%)</title><rect x="663.2" y="549" width="3.2" height="15.0" fill="rgb(205,101,27)" rx="2" ry="2" />
<text  x="666.24" y="559.5" ></text>
</g>
<g >
<title>ovl_cleanup_and_whiteout (55 samples, 1.14%)</title><rect x="794.9" y="661" width="13.4" height="15.0" fill="rgb(236,30,7)" rx="2" ry="2" />
<text  x="797.87" y="671.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (1 samples, 0.02%)</title><rect x="103.5" y="981" width="0.2" height="15.0" fill="rgb(224,123,42)" rx="2" ry="2" />
<text  x="106.46" y="991.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (824 samples, 17.08%)</title><rect x="810.3" y="725" width="201.6" height="15.0" fill="rgb(243,85,6)" rx="2" ry="2" />
<text  x="813.29" y="735.5" >serde::ser::impls::&lt;impl s..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (77 samples, 1.60%)</title><rect x="132.6" y="549" width="18.8" height="15.0" fill="rgb(250,160,29)" rx="2" ry="2" />
<text  x="135.58" y="559.5" ></text>
</g>
<g >
<title>__dentry_kill (73 samples, 1.51%)</title><rect x="109.8" y="629" width="17.9" height="15.0" fill="rgb(237,113,49)" rx="2" ry="2" />
<text  x="112.82" y="639.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (3 samples, 0.06%)</title><rect x="829.4" y="469" width="0.7" height="15.0" fill="rgb(218,104,32)" rx="2" ry="2" />
<text  x="832.37" y="479.5" ></text>
</g>
<g >
<title>do_set_cpus_allowed (1 samples, 0.02%)</title><rect x="10.5" y="853" width="0.2" height="15.0" fill="rgb(251,177,35)" rx="2" ry="2" />
<text  x="13.49" y="863.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (23 samples, 0.48%)</title><rect x="675.5" y="533" width="5.6" height="15.0" fill="rgb(243,33,16)" rx="2" ry="2" />
<text  x="678.48" y="543.5" ></text>
</g>
<g >
<title>copy_page_to_iter (78 samples, 1.62%)</title><rect x="132.6" y="581" width="19.1" height="15.0" fill="rgb(252,162,2)" rx="2" ry="2" />
<text  x="135.58" y="591.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (1 samples, 0.02%)</title><rect x="832.3" y="469" width="0.3" height="15.0" fill="rgb(212,89,36)" rx="2" ry="2" />
<text  x="835.31" y="479.5" ></text>
</g>
<g >
<title>__find_get_block (1 samples, 0.02%)</title><rect x="803.9" y="469" width="0.3" height="15.0" fill="rgb(220,103,14)" rx="2" ry="2" />
<text  x="806.92" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.17%)</title><rect x="47.7" y="869" width="1.9" height="15.0" fill="rgb(234,155,22)" rx="2" ry="2" />
<text  x="50.68" y="879.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="33.2" y="613" width="0.3" height="15.0" fill="rgb(248,81,16)" rx="2" ry="2" />
<text  x="36.24" y="623.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.0 (1 samples, 0.02%)</title><rect x="775.8" y="437" width="0.2" height="15.0" fill="rgb(235,93,32)" rx="2" ry="2" />
<text  x="778.79" y="447.5" ></text>
</g>
<g >
<title>try_to_free_buffers (32 samples, 0.66%)</title><rect x="785.3" y="357" width="7.9" height="15.0" fill="rgb(252,0,27)" rx="2" ry="2" />
<text  x="788.33" y="367.5" ></text>
</g>
<g >
<title>__set_page_dirty (13 samples, 0.27%)</title><rect x="709.0" y="501" width="3.2" height="15.0" fill="rgb(250,187,6)" rx="2" ry="2" />
<text  x="712.00" y="511.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.02%)</title><rect x="35.7" y="805" width="0.2" height="15.0" fill="rgb(205,91,8)" rx="2" ry="2" />
<text  x="38.69" y="815.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (2 samples, 0.04%)</title><rect x="741.8" y="405" width="0.5" height="15.0" fill="rgb(254,88,36)" rx="2" ry="2" />
<text  x="744.78" y="415.5" ></text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.02%)</title><rect x="176.9" y="533" width="0.2" height="15.0" fill="rgb(248,122,40)" rx="2" ry="2" />
<text  x="179.86" y="543.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (3 samples, 0.06%)</title><rect x="657.4" y="805" width="0.7" height="15.0" fill="rgb(218,203,20)" rx="2" ry="2" />
<text  x="660.37" y="815.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="786.8" y="309" width="0.2" height="15.0" fill="rgb(218,4,54)" rx="2" ry="2" />
<text  x="789.80" y="319.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (1 samples, 0.02%)</title><rect x="864.8" y="421" width="0.3" height="15.0" fill="rgb(238,221,45)" rx="2" ry="2" />
<text  x="867.85" y="431.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="831.6" y="437" width="0.2" height="15.0" fill="rgb(206,62,24)" rx="2" ry="2" />
<text  x="834.57" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (10 samples, 0.21%)</title><rect x="38.1" y="1013" width="2.5" height="15.0" fill="rgb(205,125,34)" rx="2" ry="2" />
<text  x="41.14" y="1023.5" ></text>
</g>
<g >
<title>crypto_shash_update (2 samples, 0.04%)</title><rect x="751.8" y="421" width="0.5" height="15.0" fill="rgb(245,49,54)" rx="2" ry="2" />
<text  x="754.81" y="431.5" ></text>
</g>
<g >
<title>destroy_inode (73 samples, 1.51%)</title><rect x="109.8" y="693" width="17.9" height="15.0" fill="rgb(246,61,3)" rx="2" ry="2" />
<text  x="112.82" y="703.5" ></text>
</g>
<g >
<title>jbd2__journal_start (2 samples, 0.04%)</title><rect x="31.3" y="629" width="0.5" height="15.0" fill="rgb(229,106,11)" rx="2" ry="2" />
<text  x="34.29" y="639.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.02%)</title><rect x="46.5" y="949" width="0.2" height="15.0" fill="rgb(233,158,24)" rx="2" ry="2" />
<text  x="49.45" y="959.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (2 samples, 0.04%)</title><rect x="712.7" y="501" width="0.5" height="15.0" fill="rgb(253,153,11)" rx="2" ry="2" />
<text  x="715.67" y="511.5" ></text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.02%)</title><rect x="1185.8" y="853" width="0.3" height="15.0" fill="rgb(244,122,47)" rx="2" ry="2" />
<text  x="1188.84" y="863.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (2 samples, 0.04%)</title><rect x="30.6" y="661" width="0.4" height="15.0" fill="rgb(245,3,16)" rx="2" ry="2" />
<text  x="33.55" y="671.5" ></text>
</g>
<g >
<title>__cmd_record (1 samples, 0.02%)</title><rect x="10.2" y="997" width="0.3" height="15.0" fill="rgb(212,129,18)" rx="2" ry="2" />
<text  x="13.24" y="1007.5" ></text>
</g>
<g >
<title>udp_queue_rcv_one_skb (1 samples, 0.02%)</title><rect x="1112.9" y="549" width="0.3" height="15.0" fill="rgb(229,44,23)" rx="2" ry="2" />
<text  x="1115.93" y="559.5" ></text>
</g>
<g >
<title>rwsem_down_read_slowpath (1 samples, 0.02%)</title><rect x="1089.9" y="805" width="0.3" height="15.0" fill="rgb(234,221,30)" rx="2" ry="2" />
<text  x="1092.93" y="815.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.02%)</title><rect x="1090.2" y="965" width="0.2" height="15.0" fill="rgb(233,8,50)" rx="2" ry="2" />
<text  x="1093.18" y="975.5" ></text>
</g>
<g >
<title>vfs_statx (12 samples, 0.25%)</title><rect x="758.9" y="661" width="2.9" height="15.0" fill="rgb(251,4,41)" rx="2" ry="2" />
<text  x="761.91" y="671.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (27 samples, 0.56%)</title><rect x="276.4" y="821" width="6.6" height="15.0" fill="rgb(238,92,12)" rx="2" ry="2" />
<text  x="279.44" y="831.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (576 samples, 11.94%)</title><rect x="865.8" y="549" width="140.9" height="15.0" fill="rgb(219,45,39)" rx="2" ry="2" />
<text  x="868.82" y="559.5" >rustposix::safepo..</text>
</g>
<g >
<title>mnt_drop_write (1 samples, 0.02%)</title><rect x="738.6" y="549" width="0.2" height="15.0" fill="rgb(218,191,26)" rx="2" ry="2" />
<text  x="741.60" y="559.5" ></text>
</g>
<g >
<title>kernel_fpu_begin (2 samples, 0.04%)</title><rect x="752.5" y="405" width="0.5" height="15.0" fill="rgb(238,115,18)" rx="2" ry="2" />
<text  x="755.55" y="415.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.02%)</title><rect x="109.1" y="421" width="0.2" height="15.0" fill="rgb(246,83,52)" rx="2" ry="2" />
<text  x="112.09" y="431.5" ></text>
</g>
<g >
<title>resched_curr (1 samples, 0.02%)</title><rect x="130.6" y="613" width="0.3" height="15.0" fill="rgb(235,163,1)" rx="2" ry="2" />
<text  x="133.62" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.17%)</title><rect x="47.7" y="885" width="1.9" height="15.0" fill="rgb(223,44,14)" rx="2" ry="2" />
<text  x="50.68" y="895.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.04%)</title><rect x="1101.2" y="901" width="0.5" height="15.0" fill="rgb(222,221,50)" rx="2" ry="2" />
<text  x="1104.19" y="911.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.02%)</title><rect x="803.9" y="453" width="0.3" height="15.0" fill="rgb(208,56,16)" rx="2" ry="2" />
<text  x="806.92" y="463.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="46.5" y="869" width="0.2" height="15.0" fill="rgb(209,178,42)" rx="2" ry="2" />
<text  x="49.45" y="879.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (1 samples, 0.02%)</title><rect x="662.0" y="565" width="0.3" height="15.0" fill="rgb(252,120,33)" rx="2" ry="2" />
<text  x="665.02" y="575.5" ></text>
</g>
<g >
<title>ext4_search_dir (1 samples, 0.02%)</title><rect x="805.4" y="565" width="0.2" height="15.0" fill="rgb(244,43,24)" rx="2" ry="2" />
<text  x="808.39" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="1091.2" y="661" width="0.2" height="15.0" fill="rgb(254,130,21)" rx="2" ry="2" />
<text  x="1094.16" y="671.5" ></text>
</g>
<g >
<title>CheckMemoryAccess (1 samples, 0.02%)</title><rect x="107.4" y="901" width="0.2" height="15.0" fill="rgb(222,209,44)" rx="2" ry="2" />
<text  x="110.38" y="911.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::canonicalize (11 samples, 0.23%)</title><rect x="755.5" y="805" width="2.7" height="15.0" fill="rgb(205,28,37)" rx="2" ry="2" />
<text  x="758.48" y="815.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.04%)</title><rect x="201.3" y="485" width="0.5" height="15.0" fill="rgb(218,15,44)" rx="2" ry="2" />
<text  x="204.32" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1105.6" y="933" width="0.2" height="15.0" fill="rgb(242,208,15)" rx="2" ry="2" />
<text  x="1108.59" y="943.5" ></text>
</g>
<g >
<title>futex_wait (10 samples, 0.21%)</title><rect x="1013.1" y="725" width="2.5" height="15.0" fill="rgb(215,65,18)" rx="2" ry="2" />
<text  x="1016.11" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.04%)</title><rect x="814.0" y="501" width="0.4" height="15.0" fill="rgb(240,123,51)" rx="2" ry="2" />
<text  x="816.96" y="511.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.02%)</title><rect x="173.2" y="597" width="0.2" height="15.0" fill="rgb(236,33,54)" rx="2" ry="2" />
<text  x="176.19" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.04%)</title><rect x="824.5" y="389" width="0.5" height="15.0" fill="rgb(219,90,2)" rx="2" ry="2" />
<text  x="827.48" y="399.5" ></text>
</g>
<g >
<title>main (5 samples, 0.10%)</title><rect x="1090.2" y="997" width="1.2" height="15.0" fill="rgb(217,219,26)" rx="2" ry="2" />
<text  x="1093.18" y="1007.5" ></text>
</g>
<g >
<title>propagate_protected_usage (1 samples, 0.02%)</title><rect x="744.7" y="325" width="0.3" height="15.0" fill="rgb(253,13,50)" rx="2" ry="2" />
<text  x="747.72" y="335.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.02%)</title><rect x="34.7" y="565" width="0.3" height="15.0" fill="rgb(246,112,41)" rx="2" ry="2" />
<text  x="37.71" y="575.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.02%)</title><rect x="1091.4" y="1013" width="0.2" height="15.0" fill="rgb(218,220,50)" rx="2" ry="2" />
<text  x="1094.40" y="1023.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.04%)</title><rect x="115.4" y="453" width="0.5" height="15.0" fill="rgb(241,6,48)" rx="2" ry="2" />
<text  x="118.45" y="463.5" ></text>
</g>
<g >
<title>__legitimize_path (1 samples, 0.02%)</title><rect x="756.7" y="581" width="0.3" height="15.0" fill="rgb(235,125,12)" rx="2" ry="2" />
<text  x="759.71" y="591.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect x="1090.7" y="821" width="0.5" height="15.0" fill="rgb(244,214,26)" rx="2" ry="2" />
<text  x="1093.67" y="831.5" ></text>
</g>
<g >
<title>find_get_entries (1 samples, 0.02%)</title><rect x="782.2" y="437" width="0.2" height="15.0" fill="rgb(232,206,53)" rx="2" ry="2" />
<text  x="785.15" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_openat (86 samples, 1.78%)</title><rect x="734.4" y="677" width="21.1" height="15.0" fill="rgb(211,140,20)" rx="2" ry="2" />
<text  x="737.44" y="687.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.02%)</title><rect x="108.1" y="565" width="0.3" height="15.0" fill="rgb(237,152,48)" rx="2" ry="2" />
<text  x="111.11" y="575.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="888.3" y="245" width="0.3" height="15.0" fill="rgb(253,42,41)" rx="2" ry="2" />
<text  x="891.33" y="255.5" ></text>
</g>
<g >
<title>__udp_enqueue_schedule_skb (1 samples, 0.02%)</title><rect x="1113.7" y="501" width="0.2" height="15.0" fill="rgb(226,63,24)" rx="2" ry="2" />
<text  x="1116.67" y="511.5" ></text>
</g>
<g >
<title>filename_lookup (11 samples, 0.23%)</title><rect x="758.9" y="629" width="2.7" height="15.0" fill="rgb(252,183,41)" rx="2" ry="2" />
<text  x="761.91" y="639.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (1 samples, 0.02%)</title><rect x="800.0" y="501" width="0.3" height="15.0" fill="rgb(251,13,32)" rx="2" ry="2" />
<text  x="803.01" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (1 samples, 0.02%)</title><rect x="103.7" y="709" width="0.2" height="15.0" fill="rgb(205,216,41)" rx="2" ry="2" />
<text  x="106.71" y="719.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.02%)</title><rect x="1092.9" y="693" width="0.2" height="15.0" fill="rgb(222,220,0)" rx="2" ry="2" />
<text  x="1095.87" y="703.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="752.3" y="453" width="0.2" height="15.0" fill="rgb(249,13,21)" rx="2" ry="2" />
<text  x="755.30" y="463.5" ></text>
</g>
<g >
<title>event_function (63 samples, 1.31%)</title><rect x="14.6" y="741" width="15.5" height="15.0" fill="rgb(215,3,23)" rx="2" ry="2" />
<text  x="17.65" y="751.5" ></text>
</g>
<g >
<title>destroy_inode (1 samples, 0.02%)</title><rect x="108.6" y="677" width="0.2" height="15.0" fill="rgb(206,167,50)" rx="2" ry="2" />
<text  x="111.60" y="687.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (3,452 samples, 71.57%)</title><rect x="171.7" y="997" width="844.6" height="15.0" fill="rgb(249,216,38)" rx="2" ry="2" />
<text  x="174.72" y="1007.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="10.5" y="837" width="0.2" height="15.0" fill="rgb(223,151,45)" rx="2" ry="2" />
<text  x="13.49" y="847.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="730.8" y="741" width="0.2" height="15.0" fill="rgb(212,31,49)" rx="2" ry="2" />
<text  x="733.77" y="751.5" ></text>
</g>
<g >
<title>__GI___sched_setaffinity_new (1 samples, 0.02%)</title><rect x="10.5" y="949" width="0.2" height="15.0" fill="rgb(242,205,47)" rx="2" ry="2" />
<text  x="13.49" y="959.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="1105.1" y="853" width="0.2" height="15.0" fill="rgb(224,209,4)" rx="2" ry="2" />
<text  x="1108.10" y="863.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (1 samples, 0.02%)</title><rect x="170.7" y="837" width="0.3" height="15.0" fill="rgb(252,83,43)" rx="2" ry="2" />
<text  x="173.74" y="847.5" ></text>
</g>
<g >
<title>ns_capable (1 samples, 0.02%)</title><rect x="735.9" y="533" width="0.3" height="15.0" fill="rgb(215,56,43)" rx="2" ry="2" />
<text  x="738.91" y="543.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="754.7" y="453" width="0.3" height="15.0" fill="rgb(236,66,28)" rx="2" ry="2" />
<text  x="757.75" y="463.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (17 samples, 0.35%)</title><rect x="852.9" y="229" width="4.1" height="15.0" fill="rgb(236,103,42)" rx="2" ry="2" />
<text  x="855.86" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.17%)</title><rect x="47.7" y="901" width="1.9" height="15.0" fill="rgb(215,82,32)" rx="2" ry="2" />
<text  x="50.68" y="911.5" ></text>
</g>
<g >
<title>std::fs::remove_file (1 samples, 0.02%)</title><rect x="1090.4" y="917" width="0.3" height="15.0" fill="rgb(222,107,26)" rx="2" ry="2" />
<text  x="1093.42" y="927.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (10 samples, 0.21%)</title><rect x="854.3" y="165" width="2.5" height="15.0" fill="rgb(217,104,16)" rx="2" ry="2" />
<text  x="857.33" y="175.5" ></text>
</g>
<g >
<title>__do_sys_getcwd (4 samples, 0.08%)</title><rect x="763.6" y="709" width="0.9" height="15.0" fill="rgb(218,154,45)" rx="2" ry="2" />
<text  x="766.56" y="719.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (1 samples, 0.02%)</title><rect x="739.1" y="421" width="0.2" height="15.0" fill="rgb(252,161,54)" rx="2" ry="2" />
<text  x="742.09" y="431.5" ></text>
</g>
<g >
<title>do_sys_openat2 (84 samples, 1.74%)</title><rect x="734.9" y="661" width="20.6" height="15.0" fill="rgb(226,212,15)" rx="2" ry="2" />
<text  x="737.93" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (8 samples, 0.17%)</title><rect x="756.2" y="709" width="2.0" height="15.0" fill="rgb(228,46,14)" rx="2" ry="2" />
<text  x="759.22" y="719.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (89 samples, 1.85%)</title><rect x="1162.6" y="869" width="21.8" height="15.0" fill="rgb(247,166,23)" rx="2" ry="2" />
<text  x="1165.60" y="879.5" >c..</text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="1091.2" y="517" width="0.2" height="15.0" fill="rgb(215,95,43)" rx="2" ry="2" />
<text  x="1094.16" y="527.5" ></text>
</g>
<g >
<title>evict (73 samples, 1.51%)</title><rect x="109.8" y="549" width="17.9" height="15.0" fill="rgb(227,53,6)" rx="2" ry="2" />
<text  x="112.82" y="559.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.04%)</title><rect x="1006.7" y="517" width="0.5" height="15.0" fill="rgb(252,167,10)" rx="2" ry="2" />
<text  x="1009.75" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.04%)</title><rect x="744.5" y="405" width="0.5" height="15.0" fill="rgb(223,207,49)" rx="2" ry="2" />
<text  x="747.47" y="415.5" ></text>
</g>
<g >
<title>ovl_instantiate (5 samples, 0.10%)</title><rect x="746.2" y="517" width="1.2" height="15.0" fill="rgb(245,140,41)" rx="2" ry="2" />
<text  x="749.18" y="527.5" ></text>
</g>
<g >
<title>ext4_da_write_end (79 samples, 1.64%)</title><rect x="703.9" y="565" width="19.3" height="15.0" fill="rgb(250,53,4)" rx="2" ry="2" />
<text  x="706.86" y="575.5" ></text>
</g>
<g >
<title>ip6_list_rcv_finish.constprop.0 (1 samples, 0.02%)</title><rect x="1113.7" y="677" width="0.2" height="15.0" fill="rgb(235,45,47)" rx="2" ry="2" />
<text  x="1116.67" y="687.5" ></text>
</g>
<g >
<title>xas_create (6 samples, 0.12%)</title><rect x="688.9" y="469" width="1.5" height="15.0" fill="rgb(208,152,38)" rx="2" ry="2" />
<text  x="691.93" y="479.5" ></text>
</g>
<g >
<title>start_kernel (116 samples, 2.41%)</title><rect x="1161.6" y="981" width="28.4" height="15.0" fill="rgb(244,163,52)" rx="2" ry="2" />
<text  x="1164.62" y="991.5" >st..</text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="717.6" y="421" width="0.2" height="15.0" fill="rgb(224,51,36)" rx="2" ry="2" />
<text  x="720.56" y="431.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1017.5" y="821" width="0.3" height="15.0" fill="rgb(245,64,51)" rx="2" ry="2" />
<text  x="1020.51" y="831.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (2 samples, 0.04%)</title><rect x="1090.7" y="661" width="0.5" height="15.0" fill="rgb(230,162,50)" rx="2" ry="2" />
<text  x="1093.67" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.02%)</title><rect x="811.5" y="597" width="0.3" height="15.0" fill="rgb(218,82,37)" rx="2" ry="2" />
<text  x="814.51" y="607.5" ></text>
</g>
<g >
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="716.8" y="437" width="0.3" height="15.0" fill="rgb(214,7,31)" rx="2" ry="2" />
<text  x="719.83" y="447.5" ></text>
</g>
<g >
<title>vfs_write (5 samples, 0.10%)</title><rect x="1102.2" y="965" width="1.2" height="15.0" fill="rgb(236,35,15)" rx="2" ry="2" />
<text  x="1105.17" y="975.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="1159.7" y="933" width="0.2" height="15.0" fill="rgb(219,1,22)" rx="2" ry="2" />
<text  x="1162.66" y="943.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="792.7" y="341" width="0.5" height="15.0" fill="rgb(216,175,45)" rx="2" ry="2" />
<text  x="795.67" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (2 samples, 0.04%)</title><rect x="1185.6" y="869" width="0.5" height="15.0" fill="rgb(216,200,17)" rx="2" ry="2" />
<text  x="1188.60" y="879.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="689.9" y="405" width="0.3" height="15.0" fill="rgb(208,50,22)" rx="2" ry="2" />
<text  x="692.91" y="415.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="1042.2" y="1013" width="0.3" height="15.0" fill="rgb(245,25,36)" rx="2" ry="2" />
<text  x="1045.22" y="1023.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="46.5" y="981" width="0.2" height="15.0" fill="rgb(215,96,8)" rx="2" ry="2" />
<text  x="49.45" y="991.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (2 samples, 0.04%)</title><rect x="238.3" y="437" width="0.5" height="15.0" fill="rgb(240,178,54)" rx="2" ry="2" />
<text  x="241.27" y="447.5" ></text>
</g>
<g >
<title>__dquot_alloc_space (2 samples, 0.04%)</title><rect x="193.3" y="485" width="0.4" height="15.0" fill="rgb(254,67,45)" rx="2" ry="2" />
<text  x="196.25" y="495.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (105 samples, 2.18%)</title><rect x="838.4" y="421" width="25.7" height="15.0" fill="rgb(215,187,6)" rx="2" ry="2" />
<text  x="841.42" y="431.5" >c..</text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="1091.2" y="821" width="0.2" height="15.0" fill="rgb(223,146,7)" rx="2" ry="2" />
<text  x="1094.16" y="831.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (8 samples, 0.17%)</title><rect x="47.7" y="981" width="1.9" height="15.0" fill="rgb(219,153,29)" rx="2" ry="2" />
<text  x="50.68" y="991.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (553 samples, 11.47%)</title><rect x="871.5" y="517" width="135.2" height="15.0" fill="rgb(234,154,46)" rx="2" ry="2" />
<text  x="874.45" y="527.5" >serde::ser::Seria..</text>
</g>
<g >
<title>__netif_receive_skb_list_core (4 samples, 0.08%)</title><rect x="1112.9" y="725" width="1.0" height="15.0" fill="rgb(250,4,38)" rx="2" ry="2" />
<text  x="1115.93" y="735.5" ></text>
</g>
<g >
<title>xas_store (7 samples, 0.15%)</title><rect x="113.7" y="453" width="1.7" height="15.0" fill="rgb(208,64,39)" rx="2" ry="2" />
<text  x="116.74" y="463.5" ></text>
</g>
<g >
<title>ext4_free_inode (6 samples, 0.12%)</title><rect x="773.8" y="485" width="1.5" height="15.0" fill="rgb(230,32,32)" rx="2" ry="2" />
<text  x="776.83" y="495.5" ></text>
</g>
<g >
<title>do_unlinkat (1 samples, 0.02%)</title><rect x="1090.4" y="821" width="0.3" height="15.0" fill="rgb(215,76,54)" rx="2" ry="2" />
<text  x="1093.42" y="831.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="769.9" y="645" width="0.3" height="15.0" fill="rgb(239,141,27)" rx="2" ry="2" />
<text  x="772.92" y="655.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.02%)</title><rect x="810.8" y="597" width="0.2" height="15.0" fill="rgb(238,13,36)" rx="2" ry="2" />
<text  x="813.78" y="607.5" ></text>
</g>
<g >
<title>__es_remove_extent (3 samples, 0.06%)</title><rect x="774.1" y="437" width="0.7" height="15.0" fill="rgb(223,191,52)" rx="2" ry="2" />
<text  x="777.08" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (219 samples, 4.54%)</title><rect x="354.7" y="773" width="53.6" height="15.0" fill="rgb(240,87,43)" rx="2" ry="2" />
<text  x="357.73" y="783.5" >__mem..</text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="888.3" y="229" width="0.3" height="15.0" fill="rgb(207,112,41)" rx="2" ry="2" />
<text  x="891.33" y="239.5" ></text>
</g>
<g >
<title>NaClSysOpen (73 samples, 1.51%)</title><rect x="109.8" y="981" width="17.9" height="15.0" fill="rgb(246,190,2)" rx="2" ry="2" />
<text  x="112.82" y="991.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (1 samples, 0.02%)</title><rect x="810.0" y="661" width="0.3" height="15.0" fill="rgb(206,33,6)" rx="2" ry="2" />
<text  x="813.04" y="671.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="831.8" y="389" width="0.3" height="15.0" fill="rgb(231,222,52)" rx="2" ry="2" />
<text  x="834.82" y="399.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (1 samples, 0.02%)</title><rect x="864.8" y="405" width="0.3" height="15.0" fill="rgb(211,15,28)" rx="2" ry="2" />
<text  x="867.85" y="415.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (99 samples, 2.05%)</title><rect x="1161.9" y="901" width="24.2" height="15.0" fill="rgb(215,77,23)" rx="2" ry="2" />
<text  x="1164.86" y="911.5" >c..</text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (5 samples, 0.10%)</title><rect x="216.5" y="469" width="1.2" height="15.0" fill="rgb(244,135,36)" rx="2" ry="2" />
<text  x="219.49" y="479.5" ></text>
</g>
<g >
<title>__slab_free (6 samples, 0.12%)</title><rect x="124.7" y="341" width="1.5" height="15.0" fill="rgb(227,147,39)" rx="2" ry="2" />
<text  x="127.75" y="351.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (69 samples, 1.43%)</title><rect x="982.5" y="357" width="16.9" height="15.0" fill="rgb(237,10,25)" rx="2" ry="2" />
<text  x="985.53" y="367.5" ></text>
</g>
<g >
<title>ext4_delete_entry (2 samples, 0.04%)</title><rect x="751.8" y="453" width="0.5" height="15.0" fill="rgb(205,203,42)" rx="2" ry="2" />
<text  x="754.81" y="463.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.02%)</title><rect x="1092.9" y="869" width="0.2" height="15.0" fill="rgb(229,91,48)" rx="2" ry="2" />
<text  x="1095.87" y="879.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open (87 samples, 1.80%)</title><rect x="734.2" y="789" width="21.3" height="15.0" fill="rgb(208,32,15)" rx="2" ry="2" />
<text  x="737.20" y="799.5" >s..</text>
</g>
<g >
<title>mem_cgroup_uncharge_list (2 samples, 0.04%)</title><rect x="778.7" y="421" width="0.5" height="15.0" fill="rgb(225,32,16)" rx="2" ry="2" />
<text  x="781.72" y="431.5" ></text>
</g>
<g >
<title>__gconv_find_transform (1 samples, 0.02%)</title><rect x="10.0" y="933" width="0.2" height="15.0" fill="rgb(244,75,16)" rx="2" ry="2" />
<text  x="13.00" y="943.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.04%)</title><rect x="809.6" y="821" width="0.4" height="15.0" fill="rgb(242,199,39)" rx="2" ry="2" />
<text  x="812.55" y="831.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="1091.2" y="485" width="0.2" height="15.0" fill="rgb(235,7,14)" rx="2" ry="2" />
<text  x="1094.16" y="495.5" ></text>
</g>
<g >
<title>NaClLoadTrampoline (1 samples, 0.02%)</title><rect x="107.9" y="901" width="0.2" height="15.0" fill="rgb(217,88,8)" rx="2" ry="2" />
<text  x="110.86" y="911.5" ></text>
</g>
<g >
<title>core::cmp::min (1 samples, 0.02%)</title><rect x="153.9" y="853" width="0.2" height="15.0" fill="rgb(221,189,34)" rx="2" ry="2" />
<text  x="156.86" y="863.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="231.2" y="469" width="0.2" height="15.0" fill="rgb(207,180,4)" rx="2" ry="2" />
<text  x="234.17" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (86 samples, 1.78%)</title><rect x="734.4" y="709" width="21.1" height="15.0" fill="rgb(244,48,19)" rx="2" ry="2" />
<text  x="737.44" y="719.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="54.0" y="1013" width="0.8" height="15.0" fill="rgb(247,28,29)" rx="2" ry="2" />
<text  x="57.04" y="1023.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (63 samples, 1.31%)</title><rect x="232.4" y="549" width="15.4" height="15.0" fill="rgb(222,25,11)" rx="2" ry="2" />
<text  x="235.40" y="559.5" ></text>
</g>
<g >
<title>ovl_get_inode (2 samples, 0.04%)</title><rect x="746.7" y="501" width="0.5" height="15.0" fill="rgb(224,166,4)" rx="2" ry="2" />
<text  x="749.67" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.10%)</title><rect x="840.1" y="197" width="1.3" height="15.0" fill="rgb(243,106,31)" rx="2" ry="2" />
<text  x="843.13" y="207.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.02%)</title><rect x="1100.9" y="949" width="0.3" height="15.0" fill="rgb(224,13,43)" rx="2" ry="2" />
<text  x="1103.94" y="959.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.02%)</title><rect x="1114.6" y="773" width="0.3" height="15.0" fill="rgb(233,132,26)" rx="2" ry="2" />
<text  x="1117.64" y="783.5" ></text>
</g>
<g >
<title>do_iter_write (21 samples, 0.44%)</title><rect x="30.6" y="741" width="5.1" height="15.0" fill="rgb(213,202,21)" rx="2" ry="2" />
<text  x="33.55" y="751.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Seek&gt;::seek (1 samples, 0.02%)</title><rect x="658.6" y="837" width="0.2" height="15.0" fill="rgb(219,203,18)" rx="2" ry="2" />
<text  x="661.60" y="847.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1188.5" y="757" width="0.3" height="15.0" fill="rgb(234,93,20)" rx="2" ry="2" />
<text  x="1191.53" y="767.5" ></text>
</g>
<g >
<title>jbd2__journal_start (2 samples, 0.04%)</title><rect x="233.6" y="501" width="0.5" height="15.0" fill="rgb(234,147,36)" rx="2" ry="2" />
<text  x="236.62" y="511.5" ></text>
</g>
<g >
<title>crc_113 (1 samples, 0.02%)</title><rect x="807.4" y="549" width="0.2" height="15.0" fill="rgb(228,228,32)" rx="2" ry="2" />
<text  x="810.35" y="559.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="1169.7" y="629" width="0.2" height="15.0" fill="rgb(206,203,7)" rx="2" ry="2" />
<text  x="1172.69" y="639.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (825 samples, 17.11%)</title><rect x="810.0" y="805" width="201.9" height="15.0" fill="rgb(232,205,36)" rx="2" ry="2" />
<text  x="813.04" y="815.5" >serde::ser::impls::&lt;impl s..</text>
</g>
<g >
<title>NaClSysWaitpid (1 samples, 0.02%)</title><rect x="171.5" y="981" width="0.2" height="15.0" fill="rgb(245,228,12)" rx="2" ry="2" />
<text  x="174.48" y="991.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="1016.0" y="917" width="0.3" height="15.0" fill="rgb(220,223,9)" rx="2" ry="2" />
<text  x="1019.05" y="927.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="169.3" y="645" width="0.2" height="15.0" fill="rgb(239,31,49)" rx="2" ry="2" />
<text  x="172.27" y="655.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="805.6" y="565" width="0.3" height="15.0" fill="rgb(251,138,2)" rx="2" ry="2" />
<text  x="808.64" y="575.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (26 samples, 0.54%)</title><rect x="248.8" y="565" width="6.4" height="15.0" fill="rgb(232,107,41)" rx="2" ry="2" />
<text  x="251.79" y="575.5" ></text>
</g>
<g >
<title>ovl_write_iter (290 samples, 6.01%)</title><rect x="659.3" y="677" width="71.0" height="15.0" fill="rgb(210,68,19)" rx="2" ry="2" />
<text  x="662.33" y="687.5" >ovl_writ..</text>
</g>
<g >
<title>perf_event_for_each_child (71 samples, 1.47%)</title><rect x="12.7" y="837" width="17.4" height="15.0" fill="rgb(242,226,43)" rx="2" ry="2" />
<text  x="15.69" y="847.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (2 samples, 0.04%)</title><rect x="832.6" y="437" width="0.4" height="15.0" fill="rgb(243,113,46)" rx="2" ry="2" />
<text  x="835.55" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.10%)</title><rect x="1091.9" y="1029" width="1.2" height="15.0" fill="rgb(239,11,53)" rx="2" ry="2" />
<text  x="1094.89" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="853.8" y="149" width="0.5" height="15.0" fill="rgb(214,74,29)" rx="2" ry="2" />
<text  x="856.84" y="159.5" ></text>
</g>
<g >
<title>_perf_ioctl (1 samples, 0.02%)</title><rect x="35.9" y="965" width="0.3" height="15.0" fill="rgb(246,176,45)" rx="2" ry="2" />
<text  x="38.93" y="975.5" ></text>
</g>
<g >
<title>ext4_handle_dirty_dirblock (2 samples, 0.04%)</title><rect x="751.8" y="437" width="0.5" height="15.0" fill="rgb(240,173,26)" rx="2" ry="2" />
<text  x="754.81" y="447.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (1 samples, 0.02%)</title><rect x="1114.6" y="741" width="0.3" height="15.0" fill="rgb(247,63,51)" rx="2" ry="2" />
<text  x="1117.64" y="751.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (2 samples, 0.04%)</title><rect x="765.3" y="581" width="0.5" height="15.0" fill="rgb(234,132,37)" rx="2" ry="2" />
<text  x="768.27" y="591.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="862.9" y="181" width="0.2" height="15.0" fill="rgb(244,138,14)" rx="2" ry="2" />
<text  x="865.89" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (73 samples, 1.51%)</title><rect x="109.8" y="821" width="17.9" height="15.0" fill="rgb(212,189,13)" rx="2" ry="2" />
<text  x="112.82" y="831.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (9 samples, 0.19%)</title><rect x="1113.9" y="917" width="2.2" height="15.0" fill="rgb(250,34,51)" rx="2" ry="2" />
<text  x="1116.91" y="927.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="1091.9" y="789" width="0.2" height="15.0" fill="rgb(229,16,22)" rx="2" ry="2" />
<text  x="1094.89" y="799.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="172.9" y="789" width="0.3" height="15.0" fill="rgb(230,63,46)" rx="2" ry="2" />
<text  x="175.94" y="799.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="169.3" y="709" width="0.2" height="15.0" fill="rgb(250,89,38)" rx="2" ry="2" />
<text  x="172.27" y="719.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (2 samples, 0.04%)</title><rect x="832.6" y="453" width="0.4" height="15.0" fill="rgb(252,227,19)" rx="2" ry="2" />
<text  x="835.55" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (3 samples, 0.06%)</title><rect x="940.9" y="357" width="0.8" height="15.0" fill="rgb(253,203,1)" rx="2" ry="2" />
<text  x="943.94" y="367.5" ></text>
</g>
<g >
<title>std::fs::remove_file (171 samples, 3.55%)</title><rect x="767.7" y="837" width="41.9" height="15.0" fill="rgb(205,28,49)" rx="2" ry="2" />
<text  x="770.72" y="847.5" >std..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (80 samples, 1.66%)</title><rect x="981.5" y="373" width="19.6" height="15.0" fill="rgb(227,205,22)" rx="2" ry="2" />
<text  x="984.55" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (1 samples, 0.02%)</title><rect x="109.1" y="565" width="0.2" height="15.0" fill="rgb(213,143,13)" rx="2" ry="2" />
<text  x="112.09" y="575.5" ></text>
</g>
<g >
<title>add_transaction_credits (3 samples, 0.06%)</title><rect x="179.8" y="517" width="0.7" height="15.0" fill="rgb(209,158,21)" rx="2" ry="2" />
<text  x="182.79" y="527.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="769.9" y="629" width="0.3" height="15.0" fill="rgb(239,193,13)" rx="2" ry="2" />
<text  x="772.92" y="639.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="767.7" y="725" width="0.3" height="15.0" fill="rgb(222,168,51)" rx="2" ry="2" />
<text  x="770.72" y="735.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="207.0" y="469" width="0.2" height="15.0" fill="rgb(250,43,23)" rx="2" ry="2" />
<text  x="209.95" y="479.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.02%)</title><rect x="739.1" y="501" width="0.2" height="15.0" fill="rgb(232,37,0)" rx="2" ry="2" />
<text  x="742.09" y="511.5" ></text>
</g>
<g >
<title>do_shared_fault (3 samples, 0.06%)</title><rect x="104.4" y="757" width="0.8" height="15.0" fill="rgb(207,108,5)" rx="2" ry="2" />
<text  x="107.44" y="767.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3 samples, 0.06%)</title><rect x="104.4" y="837" width="0.8" height="15.0" fill="rgb(222,136,35)" rx="2" ry="2" />
<text  x="107.44" y="847.5" ></text>
</g>
<g >
<title>ext4_inode_journal_mode (1 samples, 0.02%)</title><rect x="242.2" y="469" width="0.2" height="15.0" fill="rgb(217,104,22)" rx="2" ry="2" />
<text  x="245.18" y="479.5" ></text>
</g>
<g >
<title>lookup_dcache (1 samples, 0.02%)</title><rect x="739.6" y="501" width="0.2" height="15.0" fill="rgb(223,149,45)" rx="2" ry="2" />
<text  x="742.58" y="511.5" ></text>
</g>
<g >
<title>ovl_check_dir_xattr (1 samples, 0.02%)</title><rect x="746.9" y="485" width="0.3" height="15.0" fill="rgb(252,225,43)" rx="2" ry="2" />
<text  x="749.92" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="202.1" y="501" width="0.2" height="15.0" fill="rgb(208,10,35)" rx="2" ry="2" />
<text  x="205.06" y="511.5" ></text>
</g>
<g >
<title>crc_26 (1 samples, 0.02%)</title><rect x="753.0" y="421" width="0.3" height="15.0" fill="rgb(234,130,10)" rx="2" ry="2" />
<text  x="756.04" y="431.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.02%)</title><rect x="30.3" y="917" width="0.3" height="15.0" fill="rgb(229,57,51)" rx="2" ry="2" />
<text  x="33.31" y="927.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.06%)</title><rect x="864.1" y="373" width="0.7" height="15.0" fill="rgb(241,82,51)" rx="2" ry="2" />
<text  x="867.11" y="383.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1169.0" y="709" width="0.2" height="15.0" fill="rgb(206,79,23)" rx="2" ry="2" />
<text  x="1171.96" y="719.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (1 samples, 0.02%)</title><rect x="1100.2" y="1029" width="0.3" height="15.0" fill="rgb(221,29,9)" rx="2" ry="2" />
<text  x="1103.21" y="1039.5" ></text>
</g>
<g >
<title>vfs_iter_write (21 samples, 0.44%)</title><rect x="30.6" y="757" width="5.1" height="15.0" fill="rgb(252,110,9)" rx="2" ry="2" />
<text  x="33.55" y="767.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="835.7" y="389" width="0.3" height="15.0" fill="rgb(226,39,23)" rx="2" ry="2" />
<text  x="838.73" y="399.5" ></text>
</g>
<g >
<title>alloc_page_buffers (1 samples, 0.02%)</title><rect x="32.0" y="613" width="0.3" height="15.0" fill="rgb(253,179,43)" rx="2" ry="2" />
<text  x="35.02" y="623.5" ></text>
</g>
<g >
<title>shmem_mapping (1 samples, 0.02%)</title><rect x="207.9" y="517" width="0.3" height="15.0" fill="rgb(245,114,15)" rx="2" ry="2" />
<text  x="210.93" y="527.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="705.8" y="485" width="0.3" height="15.0" fill="rgb(205,61,30)" rx="2" ry="2" />
<text  x="708.82" y="495.5" ></text>
</g>
<g >
<title>enqueue_task (2 samples, 0.04%)</title><rect x="130.1" y="645" width="0.5" height="15.0" fill="rgb(237,113,11)" rx="2" ry="2" />
<text  x="133.13" y="655.5" ></text>
</g>
<g >
<title>legitimize_root (1 samples, 0.02%)</title><rect x="756.7" y="597" width="0.3" height="15.0" fill="rgb(225,110,2)" rx="2" ry="2" />
<text  x="759.71" y="607.5" ></text>
</g>
<g >
<title>NaClDescIoDescDtor (1 samples, 0.02%)</title><rect x="108.1" y="901" width="0.3" height="15.0" fill="rgb(242,199,51)" rx="2" ry="2" />
<text  x="111.11" y="911.5" ></text>
</g>
<g >
<title>crypto_shash_update (2 samples, 0.04%)</title><rect x="741.8" y="373" width="0.5" height="15.0" fill="rgb(234,227,0)" rx="2" ry="2" />
<text  x="744.78" y="383.5" ></text>
</g>
<g >
<title>__futex_abstimed_wait_common64 (1 samples, 0.02%)</title><rect x="171.5" y="917" width="0.2" height="15.0" fill="rgb(226,59,38)" rx="2" ry="2" />
<text  x="174.48" y="927.5" ></text>
</g>
<g >
<title>free_buffer_head (20 samples, 0.41%)</title><rect x="787.8" y="341" width="4.9" height="15.0" fill="rgb(239,120,35)" rx="2" ry="2" />
<text  x="790.78" y="351.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_struct (4 samples, 0.08%)</title><rect x="866.3" y="533" width="1.0" height="15.0" fill="rgb(207,203,37)" rx="2" ry="2" />
<text  x="869.31" y="543.5" ></text>
</g>
<g >
<title>ext4_rename (16 samples, 0.33%)</title><rect x="749.6" y="485" width="3.9" height="15.0" fill="rgb(218,223,5)" rx="2" ry="2" />
<text  x="752.61" y="495.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (2 samples, 0.04%)</title><rect x="1090.7" y="917" width="0.5" height="15.0" fill="rgb(254,63,12)" rx="2" ry="2" />
<text  x="1093.67" y="927.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="840.6" y="181" width="0.8" height="15.0" fill="rgb(240,117,22)" rx="2" ry="2" />
<text  x="843.62" y="191.5" ></text>
</g>
<g >
<title>vfs_link (15 samples, 0.31%)</title><rect x="797.8" y="645" width="3.7" height="15.0" fill="rgb(205,89,46)" rx="2" ry="2" />
<text  x="800.81" y="655.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.17%)</title><rect x="47.7" y="917" width="1.9" height="15.0" fill="rgb(219,207,49)" rx="2" ry="2" />
<text  x="50.68" y="927.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (10 samples, 0.21%)</title><rect x="833.0" y="213" width="2.5" height="15.0" fill="rgb(226,184,52)" rx="2" ry="2" />
<text  x="836.04" y="223.5" ></text>
</g>
<g >
<title>ext4_inode_csum (1 samples, 0.02%)</title><rect x="798.5" y="533" width="0.3" height="15.0" fill="rgb(235,195,31)" rx="2" ry="2" />
<text  x="801.54" y="543.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (1 samples, 0.02%)</title><rect x="803.7" y="549" width="0.2" height="15.0" fill="rgb(247,226,0)" rx="2" ry="2" />
<text  x="806.68" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_select (1 samples, 0.02%)</title><rect x="1101.9" y="997" width="0.3" height="15.0" fill="rgb(236,135,27)" rx="2" ry="2" />
<text  x="1104.92" y="1007.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="859.0" y="245" width="0.5" height="15.0" fill="rgb(231,33,21)" rx="2" ry="2" />
<text  x="861.97" y="255.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="108.6" y="581" width="0.2" height="15.0" fill="rgb(242,6,16)" rx="2" ry="2" />
<text  x="111.60" y="591.5" ></text>
</g>
<g >
<title>get_typical_interval (2 samples, 0.04%)</title><rect x="1157.7" y="917" width="0.5" height="15.0" fill="rgb(210,215,37)" rx="2" ry="2" />
<text  x="1160.70" y="927.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.02%)</title><rect x="776.8" y="405" width="0.2" height="15.0" fill="rgb(233,177,49)" rx="2" ry="2" />
<text  x="779.77" y="415.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="762.8" y="805" width="0.3" height="15.0" fill="rgb(218,188,27)" rx="2" ry="2" />
<text  x="765.82" y="815.5" ></text>
</g>
<g >
<title>vfs_write (293 samples, 6.08%)</title><rect x="659.1" y="709" width="71.7" height="15.0" fill="rgb(232,176,43)" rx="2" ry="2" />
<text  x="662.09" y="719.5" >vfs_write</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;std::fs::File&gt;&gt;&gt;&gt; (12 samples, 0.25%)</title><rect x="654.2" y="837" width="2.9" height="15.0" fill="rgb(234,53,10)" rx="2" ry="2" />
<text  x="657.19" y="847.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.02%)</title><rect x="1100.7" y="981" width="0.2" height="15.0" fill="rgb(249,210,33)" rx="2" ry="2" />
<text  x="1103.70" y="991.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (25 samples, 0.52%)</title><rect x="882.5" y="341" width="6.1" height="15.0" fill="rgb(246,78,25)" rx="2" ry="2" />
<text  x="885.46" y="351.5" ></text>
</g>
<g >
<title>ovl_dentry_set_upper_alias (1 samples, 0.02%)</title><rect x="746.4" y="501" width="0.3" height="15.0" fill="rgb(239,150,8)" rx="2" ry="2" />
<text  x="749.43" y="511.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (6 samples, 0.12%)</title><rect x="830.1" y="501" width="1.5" height="15.0" fill="rgb(247,95,10)" rx="2" ry="2" />
<text  x="833.10" y="511.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.02%)</title><rect x="1091.4" y="933" width="0.2" height="15.0" fill="rgb(230,74,45)" rx="2" ry="2" />
<text  x="1094.40" y="943.5" ></text>
</g>
<g >
<title>may_delete (1 samples, 0.02%)</title><rect x="754.0" y="501" width="0.3" height="15.0" fill="rgb(236,80,25)" rx="2" ry="2" />
<text  x="757.01" y="511.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (11 samples, 0.23%)</title><rect x="113.5" y="485" width="2.7" height="15.0" fill="rgb(252,51,27)" rx="2" ry="2" />
<text  x="116.49" y="495.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect x="1090.7" y="837" width="0.5" height="15.0" fill="rgb(236,182,54)" rx="2" ry="2" />
<text  x="1093.67" y="847.5" ></text>
</g>
<g >
<title>user_path_at_empty (5 samples, 0.10%)</title><rect x="732.5" y="661" width="1.2" height="15.0" fill="rgb(217,86,8)" rx="2" ry="2" />
<text  x="735.48" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.23%)</title><rect x="888.6" y="341" width="2.7" height="15.0" fill="rgb(248,20,7)" rx="2" ry="2" />
<text  x="891.58" y="351.5" ></text>
</g>
<g >
<title>xas_clear_mark (2 samples, 0.04%)</title><rect x="780.2" y="421" width="0.5" height="15.0" fill="rgb(250,134,5)" rx="2" ry="2" />
<text  x="783.19" y="431.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (71 samples, 1.47%)</title><rect x="109.8" y="501" width="17.4" height="15.0" fill="rgb(225,51,52)" rx="2" ry="2" />
<text  x="112.82" y="511.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="795.1" y="517" width="0.3" height="15.0" fill="rgb(234,228,35)" rx="2" ry="2" />
<text  x="798.12" y="527.5" ></text>
</g>
<g >
<title>ksys_write (5 samples, 0.10%)</title><rect x="1102.2" y="981" width="1.2" height="15.0" fill="rgb(213,56,24)" rx="2" ry="2" />
<text  x="1105.17" y="991.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (9 samples, 0.19%)</title><rect x="128.7" y="837" width="2.2" height="15.0" fill="rgb(237,8,44)" rx="2" ry="2" />
<text  x="131.66" y="847.5" ></text>
</g>
<g >
<title>lock_two_nondirectories (1 samples, 0.02%)</title><rect x="807.8" y="629" width="0.3" height="15.0" fill="rgb(209,229,38)" rx="2" ry="2" />
<text  x="810.84" y="639.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="800.0" y="533" width="0.3" height="15.0" fill="rgb(218,224,49)" rx="2" ry="2" />
<text  x="803.01" y="543.5" ></text>
</g>
<g >
<title>generic_permission (1 samples, 0.02%)</title><rect x="764.8" y="597" width="0.2" height="15.0" fill="rgb(218,114,18)" rx="2" ry="2" />
<text  x="767.78" y="607.5" ></text>
</g>
<g >
<title>stop_this_handle (5 samples, 0.10%)</title><rect x="704.8" y="517" width="1.3" height="15.0" fill="rgb(216,54,10)" rx="2" ry="2" />
<text  x="707.84" y="527.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (2 samples, 0.04%)</title><rect x="1101.2" y="965" width="0.5" height="15.0" fill="rgb(221,160,37)" rx="2" ry="2" />
<text  x="1104.19" y="975.5" ></text>
</g>
<g >
<title>dput (91 samples, 1.89%)</title><rect x="771.1" y="629" width="22.3" height="15.0" fill="rgb(226,160,44)" rx="2" ry="2" />
<text  x="774.14" y="639.5" >d..</text>
</g>
<g >
<title>wake_up_process (2 samples, 0.04%)</title><rect x="1169.4" y="693" width="0.5" height="15.0" fill="rgb(205,69,29)" rx="2" ry="2" />
<text  x="1172.45" y="703.5" ></text>
</g>
<g >
<title>__ext4_find_entry (1 samples, 0.02%)</title><rect x="748.4" y="437" width="0.2" height="15.0" fill="rgb(210,193,21)" rx="2" ry="2" />
<text  x="751.39" y="447.5" ></text>
</g>
<g >
<title>inode_permission (2 samples, 0.04%)</title><rect x="765.3" y="597" width="0.5" height="15.0" fill="rgb(219,202,14)" rx="2" ry="2" />
<text  x="768.27" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="824.5" y="421" width="0.5" height="15.0" fill="rgb(225,204,15)" rx="2" ry="2" />
<text  x="827.48" y="431.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="46.5" y="885" width="0.2" height="15.0" fill="rgb(236,125,17)" rx="2" ry="2" />
<text  x="49.45" y="895.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (1 samples, 0.02%)</title><rect x="1091.2" y="645" width="0.2" height="15.0" fill="rgb(222,47,15)" rx="2" ry="2" />
<text  x="1094.16" y="655.5" ></text>
</g>
<g >
<title>alloc_page_buffers (1 samples, 0.02%)</title><rect x="667.9" y="533" width="0.2" height="15.0" fill="rgb(241,212,36)" rx="2" ry="2" />
<text  x="670.89" y="543.5" ></text>
</g>
<g >
<title>psi_task_change (2 samples, 0.04%)</title><rect x="1015.1" y="645" width="0.5" height="15.0" fill="rgb(214,76,51)" rx="2" ry="2" />
<text  x="1018.07" y="655.5" ></text>
</g>
<g >
<title>pagevec_lookup_entries (1 samples, 0.02%)</title><rect x="116.4" y="485" width="0.3" height="15.0" fill="rgb(213,111,6)" rx="2" ry="2" />
<text  x="119.43" y="495.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (1 samples, 0.02%)</title><rect x="784.1" y="373" width="0.3" height="15.0" fill="rgb(208,225,22)" rx="2" ry="2" />
<text  x="787.11" y="383.5" ></text>
</g>
<g >
<title>perf_event__prepare_comm (1 samples, 0.02%)</title><rect x="30.3" y="965" width="0.3" height="15.0" fill="rgb(221,108,17)" rx="2" ry="2" />
<text  x="33.31" y="975.5" ></text>
</g>
<g >
<title>ext4_evict_inode (1 samples, 0.02%)</title><rect x="108.6" y="517" width="0.2" height="15.0" fill="rgb(247,134,21)" rx="2" ry="2" />
<text  x="111.60" y="527.5" ></text>
</g>
<g >
<title>refill_obj_stock (2 samples, 0.04%)</title><rect x="126.2" y="325" width="0.5" height="15.0" fill="rgb(206,61,28)" rx="2" ry="2" />
<text  x="129.21" y="335.5" ></text>
</g>
<g >
<title>file_remove_privs (1 samples, 0.02%)</title><rect x="660.6" y="565" width="0.2" height="15.0" fill="rgb(219,4,22)" rx="2" ry="2" />
<text  x="663.55" y="575.5" ></text>
</g>
<g >
<title>NaClSysWrite (3,451 samples, 71.55%)</title><rect x="172.0" y="981" width="844.3" height="15.0" fill="rgb(223,77,35)" rx="2" ry="2" />
<text  x="174.97" y="991.5" >NaClSysWrite</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (12 samples, 0.25%)</title><rect x="654.2" y="693" width="2.9" height="15.0" fill="rgb(233,177,5)" rx="2" ry="2" />
<text  x="657.19" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="130.9" y="805" width="0.2" height="15.0" fill="rgb(235,78,2)" rx="2" ry="2" />
<text  x="133.86" y="815.5" ></text>
</g>
<g >
<title>walk_component (6 samples, 0.12%)</title><rect x="760.1" y="597" width="1.5" height="15.0" fill="rgb(254,217,7)" rx="2" ry="2" />
<text  x="763.13" y="607.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.02%)</title><rect x="1092.9" y="821" width="0.2" height="15.0" fill="rgb(216,204,9)" rx="2" ry="2" />
<text  x="1095.87" y="831.5" ></text>
</g>
<g >
<title>path_openat (82 samples, 1.70%)</title><rect x="735.2" y="629" width="20.0" height="15.0" fill="rgb(252,44,37)" rx="2" ry="2" />
<text  x="738.18" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (1 samples, 0.02%)</title><rect x="1090.4" y="901" width="0.3" height="15.0" fill="rgb(248,42,18)" rx="2" ry="2" />
<text  x="1093.42" y="911.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.04%)</title><rect x="1080.4" y="949" width="0.5" height="15.0" fill="rgb(248,102,46)" rx="2" ry="2" />
<text  x="1083.39" y="959.5" ></text>
</g>
<g >
<title>d_alloc_parallel (1 samples, 0.02%)</title><rect x="760.4" y="565" width="0.2" height="15.0" fill="rgb(254,103,25)" rx="2" ry="2" />
<text  x="763.38" y="575.5" ></text>
</g>
<g >
<title>__memcg_kmem_uncharge (1 samples, 0.02%)</title><rect x="792.2" y="261" width="0.2" height="15.0" fill="rgb(212,119,5)" rx="2" ry="2" />
<text  x="795.18" y="271.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.02%)</title><rect x="710.0" y="469" width="0.2" height="15.0" fill="rgb(248,34,53)" rx="2" ry="2" />
<text  x="712.98" y="479.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (12 samples, 0.25%)</title><rect x="1106.1" y="965" width="2.9" height="15.0" fill="rgb(237,177,13)" rx="2" ry="2" />
<text  x="1109.08" y="975.5" ></text>
</g>
<g >
<title>new_sync_write (21 samples, 0.44%)</title><rect x="30.6" y="789" width="5.1" height="15.0" fill="rgb(222,184,7)" rx="2" ry="2" />
<text  x="33.55" y="799.5" ></text>
</g>
<g >
<title>ext4_find_entry (7 samples, 0.15%)</title><rect x="750.1" y="469" width="1.7" height="15.0" fill="rgb(219,202,22)" rx="2" ry="2" />
<text  x="753.10" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (26 samples, 0.54%)</title><rect x="1163.6" y="853" width="6.3" height="15.0" fill="rgb(224,102,17)" rx="2" ry="2" />
<text  x="1166.58" y="863.5" ></text>
</g>
<g >
<title>start_secondary (211 samples, 4.37%)</title><rect x="1110.0" y="1013" width="51.6" height="15.0" fill="rgb(205,165,33)" rx="2" ry="2" />
<text  x="1113.00" y="1023.5" >start..</text>
</g>
<g >
<title>lindrustfinalize (3 samples, 0.06%)</title><rect x="1090.4" y="965" width="0.8" height="15.0" fill="rgb(247,201,39)" rx="2" ry="2" />
<text  x="1093.42" y="975.5" ></text>
</g>
<g >
<title>crypto_shash_update (3 samples, 0.06%)</title><rect x="806.1" y="549" width="0.8" height="15.0" fill="rgb(217,76,2)" rx="2" ry="2" />
<text  x="809.13" y="559.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (1 samples, 0.02%)</title><rect x="744.7" y="373" width="0.3" height="15.0" fill="rgb(238,62,54)" rx="2" ry="2" />
<text  x="747.72" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.06%)</title><rect x="104.4" y="805" width="0.8" height="15.0" fill="rgb(228,196,50)" rx="2" ry="2" />
<text  x="107.44" y="815.5" ></text>
</g>
<g >
<title>ovl_open_realfile (5 samples, 0.10%)</title><rect x="735.9" y="549" width="1.2" height="15.0" fill="rgb(238,103,54)" rx="2" ry="2" />
<text  x="738.91" y="559.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.06%)</title><rect x="692.4" y="453" width="0.7" height="15.0" fill="rgb(228,166,6)" rx="2" ry="2" />
<text  x="695.36" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.04%)</title><rect x="657.6" y="757" width="0.5" height="15.0" fill="rgb(246,151,50)" rx="2" ry="2" />
<text  x="660.62" y="767.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.02%)</title><rect x="108.1" y="789" width="0.3" height="15.0" fill="rgb(218,176,21)" rx="2" ry="2" />
<text  x="111.11" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="830.1" y="373" width="0.2" height="15.0" fill="rgb(243,13,13)" rx="2" ry="2" />
<text  x="833.10" y="383.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="731.7" y="645" width="0.3" height="15.0" fill="rgb(239,123,47)" rx="2" ry="2" />
<text  x="734.75" y="655.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.10%)</title><rect x="840.1" y="213" width="1.3" height="15.0" fill="rgb(244,66,37)" rx="2" ry="2" />
<text  x="843.13" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (169 samples, 3.50%)</title><rect x="768.2" y="773" width="41.4" height="15.0" fill="rgb(251,204,24)" rx="2" ry="2" />
<text  x="771.20" y="783.5" >do_..</text>
</g>
<g >
<title>__add_wb_stat (1 samples, 0.02%)</title><rect x="711.0" y="469" width="0.2" height="15.0" fill="rgb(211,43,40)" rx="2" ry="2" />
<text  x="713.95" y="479.5" ></text>
</g>
<g >
<title>ext4_inode_csum (11 samples, 0.23%)</title><rect x="238.3" y="453" width="2.7" height="15.0" fill="rgb(241,143,46)" rx="2" ry="2" />
<text  x="241.27" y="463.5" ></text>
</g>
<g >
<title>rustposix::interface::file::openfile (2 samples, 0.04%)</title><rect x="762.1" y="837" width="0.5" height="15.0" fill="rgb(219,139,31)" rx="2" ry="2" />
<text  x="765.09" y="847.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="711.0" y="453" width="0.2" height="15.0" fill="rgb(221,151,31)" rx="2" ry="2" />
<text  x="713.95" y="463.5" ></text>
</g>
<g >
<title>ovl_write_iter (338 samples, 7.01%)</title><rect x="173.2" y="693" width="82.7" height="15.0" fill="rgb(253,1,53)" rx="2" ry="2" />
<text  x="176.19" y="703.5" >ovl_write..</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="1089.9" y="853" width="0.3" height="15.0" fill="rgb(239,187,31)" rx="2" ry="2" />
<text  x="1092.93" y="863.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.02%)</title><rect x="230.0" y="485" width="0.2" height="15.0" fill="rgb(245,79,8)" rx="2" ry="2" />
<text  x="232.95" y="495.5" ></text>
</g>
<g >
<title>run_rebalance_domains (7 samples, 0.15%)</title><rect x="1167.7" y="757" width="1.7" height="15.0" fill="rgb(209,42,41)" rx="2" ry="2" />
<text  x="1170.74" y="767.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="862.9" y="165" width="0.2" height="15.0" fill="rgb(206,32,11)" rx="2" ry="2" />
<text  x="865.89" y="175.5" ></text>
</g>
<g >
<title>ovl_free_inode (2 samples, 0.04%)</title><rect x="1107.3" y="885" width="0.5" height="15.0" fill="rgb(244,87,16)" rx="2" ry="2" />
<text  x="1110.30" y="895.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (1 samples, 0.02%)</title><rect x="34.7" y="549" width="0.3" height="15.0" fill="rgb(243,46,28)" rx="2" ry="2" />
<text  x="37.71" y="559.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (6 samples, 0.12%)</title><rect x="672.8" y="453" width="1.5" height="15.0" fill="rgb(241,126,22)" rx="2" ry="2" />
<text  x="675.79" y="463.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="108.4" y="725" width="0.2" height="15.0" fill="rgb(232,176,44)" rx="2" ry="2" />
<text  x="111.35" y="735.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="731.5" y="821" width="0.2" height="15.0" fill="rgb(250,130,30)" rx="2" ry="2" />
<text  x="734.51" y="831.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (1 samples, 0.02%)</title><rect x="716.3" y="437" width="0.3" height="15.0" fill="rgb(214,128,36)" rx="2" ry="2" />
<text  x="719.34" y="447.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (338 samples, 7.01%)</title><rect x="173.2" y="645" width="82.7" height="15.0" fill="rgb(225,69,43)" rx="2" ry="2" />
<text  x="176.19" y="655.5" >do_iter_r..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="108.4" y="789" width="0.2" height="15.0" fill="rgb(243,168,5)" rx="2" ry="2" />
<text  x="111.35" y="799.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (1 samples, 0.02%)</title><rect x="55.0" y="965" width="0.3" height="15.0" fill="rgb(236,39,38)" rx="2" ry="2" />
<text  x="58.02" y="975.5" ></text>
</g>
<g >
<title>policy_node (1 samples, 0.02%)</title><rect x="220.4" y="533" width="0.3" height="15.0" fill="rgb(208,213,30)" rx="2" ry="2" />
<text  x="223.41" y="543.5" ></text>
</g>
<g >
<title>get_typical_interval (1 samples, 0.02%)</title><rect x="1184.9" y="853" width="0.2" height="15.0" fill="rgb(243,225,30)" rx="2" ry="2" />
<text  x="1187.86" y="863.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.15%)</title><rect x="824.5" y="469" width="1.7" height="15.0" fill="rgb(206,136,19)" rx="2" ry="2" />
<text  x="827.48" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (1 samples, 0.02%)</title><rect x="35.9" y="997" width="0.3" height="15.0" fill="rgb(239,224,28)" rx="2" ry="2" />
<text  x="38.93" y="1007.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="1113.2" y="629" width="0.2" height="15.0" fill="rgb(209,34,16)" rx="2" ry="2" />
<text  x="1116.18" y="639.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.25%)</title><rect x="654.2" y="805" width="2.9" height="15.0" fill="rgb(232,184,13)" rx="2" ry="2" />
<text  x="657.19" y="815.5" ></text>
</g>
<g >
<title>xas_find (1 samples, 0.02%)</title><rect x="113.5" y="453" width="0.2" height="15.0" fill="rgb(232,130,22)" rx="2" ry="2" />
<text  x="116.49" y="463.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.04%)</title><rect x="1109.3" y="853" width="0.5" height="15.0" fill="rgb(228,9,11)" rx="2" ry="2" />
<text  x="1112.26" y="863.5" ></text>
</g>
<g >
<title>set_default_locale (1 samples, 0.02%)</title><rect x="10.0" y="981" width="0.2" height="15.0" fill="rgb(214,203,50)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>futex_wake (7 samples, 0.15%)</title><rect x="129.1" y="709" width="1.8" height="15.0" fill="rgb(234,225,16)" rx="2" ry="2" />
<text  x="132.15" y="719.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (2 samples, 0.04%)</title><rect x="1158.2" y="901" width="0.5" height="15.0" fill="rgb(237,33,7)" rx="2" ry="2" />
<text  x="1161.19" y="911.5" ></text>
</g>
<g >
<title>ext4_getblk (1 samples, 0.02%)</title><rect x="750.6" y="389" width="0.2" height="15.0" fill="rgb(221,24,14)" rx="2" ry="2" />
<text  x="753.59" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="767.7" y="757" width="0.3" height="15.0" fill="rgb(222,17,38)" rx="2" ry="2" />
<text  x="770.72" y="767.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="687.7" y="485" width="0.3" height="15.0" fill="rgb(210,42,50)" rx="2" ry="2" />
<text  x="690.71" y="495.5" ></text>
</g>
<g >
<title>start_this_handle (1 samples, 0.02%)</title><rect x="31.5" y="613" width="0.3" height="15.0" fill="rgb(245,104,54)" rx="2" ry="2" />
<text  x="34.53" y="623.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (2 samples, 0.04%)</title><rect x="832.6" y="421" width="0.4" height="15.0" fill="rgb(246,33,51)" rx="2" ry="2" />
<text  x="835.55" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="762.6" y="581" width="0.2" height="15.0" fill="rgb(250,27,42)" rx="2" ry="2" />
<text  x="765.58" y="591.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (2 samples, 0.04%)</title><rect x="775.3" y="421" width="0.5" height="15.0" fill="rgb(254,71,43)" rx="2" ry="2" />
<text  x="778.30" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (73 samples, 1.51%)</title><rect x="109.8" y="789" width="17.9" height="15.0" fill="rgb(206,157,0)" rx="2" ry="2" />
<text  x="112.82" y="799.5" ></text>
</g>
<g >
<title>add_timer (1 samples, 0.02%)</title><rect x="103.7" y="565" width="0.2" height="15.0" fill="rgb(233,114,20)" rx="2" ry="2" />
<text  x="106.71" y="575.5" ></text>
</g>
<g >
<title>ext4_evict_inode (1 samples, 0.02%)</title><rect x="1090.4" y="581" width="0.3" height="15.0" fill="rgb(238,54,26)" rx="2" ry="2" />
<text  x="1093.42" y="591.5" ></text>
</g>
<g >
<title>_int_realloc (10 samples, 0.21%)</title><rect x="833.0" y="181" width="2.5" height="15.0" fill="rgb(210,75,10)" rx="2" ry="2" />
<text  x="836.04" y="191.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (2 samples, 0.04%)</title><rect x="741.8" y="437" width="0.5" height="15.0" fill="rgb(206,76,40)" rx="2" ry="2" />
<text  x="744.78" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="169.8" y="853" width="0.2" height="15.0" fill="rgb(217,187,53)" rx="2" ry="2" />
<text  x="172.76" y="863.5" ></text>
</g>
<g >
<title>__ext4_journal_ensure_credits (1 samples, 0.02%)</title><rect x="772.1" y="485" width="0.3" height="15.0" fill="rgb(232,109,28)" rx="2" ry="2" />
<text  x="775.12" y="495.5" ></text>
</g>
<g >
<title>leave_mm (1 samples, 0.02%)</title><rect x="1184.6" y="869" width="0.3" height="15.0" fill="rgb(206,67,1)" rx="2" ry="2" />
<text  x="1187.62" y="879.5" ></text>
</g>
<g >
<title>ovl_create_or_link (66 samples, 1.37%)</title><rect x="738.8" y="549" width="16.2" height="15.0" fill="rgb(250,168,22)" rx="2" ry="2" />
<text  x="741.85" y="559.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.02%)</title><rect x="108.1" y="629" width="0.3" height="15.0" fill="rgb(216,140,7)" rx="2" ry="2" />
<text  x="111.11" y="639.5" ></text>
</g>
<g >
<title>poll_idle (1 samples, 0.02%)</title><rect x="1157.2" y="917" width="0.3" height="15.0" fill="rgb(241,71,13)" rx="2" ry="2" />
<text  x="1160.22" y="927.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.31%)</title><rect x="938.2" y="405" width="3.7" height="15.0" fill="rgb(206,94,22)" rx="2" ry="2" />
<text  x="941.24" y="415.5" ></text>
</g>
<g >
<title>[anon] (205 samples, 4.25%)</title><rect x="52.6" y="1029" width="50.1" height="15.0" fill="rgb(231,93,4)" rx="2" ry="2" />
<text  x="55.57" y="1039.5" >[anon]</text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_value (23 samples, 0.48%)</title><rect x="1001.1" y="485" width="5.6" height="15.0" fill="rgb(214,131,0)" rx="2" ry="2" />
<text  x="1004.12" y="495.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (12 samples, 0.25%)</title><rect x="833.0" y="437" width="3.0" height="15.0" fill="rgb(212,107,14)" rx="2" ry="2" />
<text  x="836.04" y="447.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.02%)</title><rect x="103.7" y="949" width="0.2" height="15.0" fill="rgb(234,3,26)" rx="2" ry="2" />
<text  x="106.71" y="959.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (133 samples, 2.76%)</title><rect x="833.0" y="533" width="32.6" height="15.0" fill="rgb(214,85,39)" rx="2" ry="2" />
<text  x="836.04" y="543.5" >&lt;s..</text>
</g>
<g >
<title>__run_hrtimer (9 samples, 0.19%)</title><rect x="1164.3" y="757" width="2.2" height="15.0" fill="rgb(220,163,35)" rx="2" ry="2" />
<text  x="1167.31" y="767.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.02%)</title><rect x="653.9" y="821" width="0.3" height="15.0" fill="rgb(243,47,50)" rx="2" ry="2" />
<text  x="656.95" y="831.5" ></text>
</g>
<g >
<title>common_interrupt (15 samples, 0.31%)</title><rect x="1110.2" y="901" width="3.7" height="15.0" fill="rgb(223,10,45)" rx="2" ry="2" />
<text  x="1113.24" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="657.4" y="757" width="0.2" height="15.0" fill="rgb(226,188,22)" rx="2" ry="2" />
<text  x="660.37" y="767.5" ></text>
</g>
<g >
<title>NaClSysClose (1 samples, 0.02%)</title><rect x="103.7" y="981" width="0.2" height="15.0" fill="rgb(206,90,15)" rx="2" ry="2" />
<text  x="106.71" y="991.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="731.7" y="677" width="0.3" height="15.0" fill="rgb(247,219,13)" rx="2" ry="2" />
<text  x="734.75" y="687.5" ></text>
</g>
<g >
<title>ovl_getattr (2 samples, 0.04%)</title><rect x="733.7" y="645" width="0.5" height="15.0" fill="rgb(227,28,0)" rx="2" ry="2" />
<text  x="736.71" y="655.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="745.0" y="453" width="0.2" height="15.0" fill="rgb(248,42,34)" rx="2" ry="2" />
<text  x="747.96" y="463.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="1166.0" y="645" width="0.3" height="15.0" fill="rgb(205,141,41)" rx="2" ry="2" />
<text  x="1169.02" y="655.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (1 samples, 0.02%)</title><rect x="46.5" y="837" width="0.2" height="15.0" fill="rgb(250,176,6)" rx="2" ry="2" />
<text  x="49.45" y="847.5" ></text>
</g>
<g >
<title>alloc_buffer_head (24 samples, 0.50%)</title><rect x="183.7" y="517" width="5.9" height="15.0" fill="rgb(254,95,7)" rx="2" ry="2" />
<text  x="186.71" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (11 samples, 0.23%)</title><rect x="888.6" y="325" width="2.7" height="15.0" fill="rgb(220,228,12)" rx="2" ry="2" />
<text  x="891.58" y="335.5" ></text>
</g>
<g >
<title>udpv6_rcv (1 samples, 0.02%)</title><rect x="1113.7" y="597" width="0.2" height="15.0" fill="rgb(214,150,53)" rx="2" ry="2" />
<text  x="1116.67" y="607.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.02%)</title><rect x="207.2" y="469" width="0.2" height="15.0" fill="rgb(216,49,24)" rx="2" ry="2" />
<text  x="210.20" y="479.5" ></text>
</g>
<g >
<title>ext4_clear_inode (1 samples, 0.02%)</title><rect x="773.6" y="485" width="0.2" height="15.0" fill="rgb(231,91,35)" rx="2" ry="2" />
<text  x="776.59" y="495.5" ></text>
</g>
<g >
<title>workingset_update_node (1 samples, 0.02%)</title><rect x="688.0" y="485" width="0.2" height="15.0" fill="rgb(220,170,42)" rx="2" ry="2" />
<text  x="690.96" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="767.7" y="741" width="0.3" height="15.0" fill="rgb(220,184,10)" rx="2" ry="2" />
<text  x="770.72" y="751.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.02%)</title><rect x="30.3" y="949" width="0.3" height="15.0" fill="rgb(210,228,21)" rx="2" ry="2" />
<text  x="33.31" y="959.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="762.8" y="757" width="0.3" height="15.0" fill="rgb(227,94,38)" rx="2" ry="2" />
<text  x="765.82" y="767.5" ></text>
</g>
<g >
<title>path_lookupat (6 samples, 0.12%)</title><rect x="756.2" y="645" width="1.5" height="15.0" fill="rgb(243,20,0)" rx="2" ry="2" />
<text  x="759.22" y="655.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="1100.7" y="933" width="0.2" height="15.0" fill="rgb(230,63,49)" rx="2" ry="2" />
<text  x="1103.70" y="943.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="862.9" y="213" width="0.2" height="15.0" fill="rgb(251,38,18)" rx="2" ry="2" />
<text  x="865.89" y="223.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.04%)</title><rect x="814.0" y="517" width="0.4" height="15.0" fill="rgb(239,217,30)" rx="2" ry="2" />
<text  x="816.96" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.31%)</title><rect x="938.2" y="421" width="3.7" height="15.0" fill="rgb(253,86,47)" rx="2" ry="2" />
<text  x="941.24" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="757.2" y="581" width="0.2" height="15.0" fill="rgb(249,53,26)" rx="2" ry="2" />
<text  x="760.19" y="591.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (2 samples, 0.04%)</title><rect x="1185.6" y="885" width="0.5" height="15.0" fill="rgb(231,92,33)" rx="2" ry="2" />
<text  x="1188.60" y="895.5" ></text>
</g>
<g >
<title>ip6_sublist_rcv_finish (1 samples, 0.02%)</title><rect x="1113.7" y="661" width="0.2" height="15.0" fill="rgb(246,51,35)" rx="2" ry="2" />
<text  x="1116.67" y="671.5" ></text>
</g>
<g >
<title>ip6_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="1113.7" y="613" width="0.2" height="15.0" fill="rgb(214,181,33)" rx="2" ry="2" />
<text  x="1116.67" y="623.5" ></text>
</g>
<g >
<title>tick_sched_handle (7 samples, 0.15%)</title><rect x="1164.6" y="725" width="1.7" height="15.0" fill="rgb(214,107,7)" rx="2" ry="2" />
<text  x="1167.56" y="735.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="888.3" y="117" width="0.3" height="15.0" fill="rgb(228,195,49)" rx="2" ry="2" />
<text  x="891.33" y="127.5" ></text>
</g>
<g >
<title>do_select (1 samples, 0.02%)</title><rect x="1101.9" y="949" width="0.3" height="15.0" fill="rgb(248,102,24)" rx="2" ry="2" />
<text  x="1104.92" y="959.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="108.8" y="549" width="0.3" height="15.0" fill="rgb(234,68,38)" rx="2" ry="2" />
<text  x="111.84" y="559.5" ></text>
</g>
<g >
<title>_start (6 samples, 0.12%)</title><rect x="1090.2" y="1029" width="1.4" height="15.0" fill="rgb(212,43,10)" rx="2" ry="2" />
<text  x="1093.18" y="1039.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1189.5" y="837" width="0.3" height="15.0" fill="rgb(247,103,9)" rx="2" ry="2" />
<text  x="1192.51" y="847.5" ></text>
</g>
<g >
<title>nf_conntrack_double_lock.constprop.0 (1 samples, 0.02%)</title><rect x="1109.0" y="917" width="0.3" height="15.0" fill="rgb(219,138,23)" rx="2" ry="2" />
<text  x="1112.02" y="927.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 1.33%)</title><rect x="14.4" y="757" width="15.7" height="15.0" fill="rgb(228,72,3)" rx="2" ry="2" />
<text  x="17.40" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.08%)</title><rect x="863.1" y="309" width="1.0" height="15.0" fill="rgb(241,193,47)" rx="2" ry="2" />
<text  x="866.13" y="319.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (24 samples, 0.50%)</title><rect x="814.9" y="549" width="5.9" height="15.0" fill="rgb(244,40,15)" rx="2" ry="2" />
<text  x="817.93" y="559.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (1 samples, 0.02%)</title><rect x="108.1" y="709" width="0.3" height="15.0" fill="rgb(226,197,49)" rx="2" ry="2" />
<text  x="111.11" y="719.5" ></text>
</g>
<g >
<title>workingset_update_node (1 samples, 0.02%)</title><rect x="204.8" y="485" width="0.2" height="15.0" fill="rgb(251,5,0)" rx="2" ry="2" />
<text  x="207.75" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::fs::File&gt; (12 samples, 0.25%)</title><rect x="654.2" y="741" width="2.9" height="15.0" fill="rgb(235,78,54)" rx="2" ry="2" />
<text  x="657.19" y="751.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (8 samples, 0.17%)</title><rect x="654.7" y="613" width="1.9" height="15.0" fill="rgb(244,220,1)" rx="2" ry="2" />
<text  x="657.68" y="623.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (3 samples, 0.06%)</title><rect x="191.0" y="517" width="0.8" height="15.0" fill="rgb(213,163,26)" rx="2" ry="2" />
<text  x="194.05" y="527.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (3 samples, 0.06%)</title><rect x="852.1" y="229" width="0.8" height="15.0" fill="rgb(233,113,50)" rx="2" ry="2" />
<text  x="855.12" y="239.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (2 samples, 0.04%)</title><rect x="33.5" y="629" width="0.5" height="15.0" fill="rgb(216,36,31)" rx="2" ry="2" />
<text  x="36.49" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_value (4 samples, 0.08%)</title><rect x="863.1" y="357" width="1.0" height="15.0" fill="rgb(218,5,24)" rx="2" ry="2" />
<text  x="866.13" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.04%)</title><rect x="678.2" y="485" width="0.5" height="15.0" fill="rgb(242,9,5)" rx="2" ry="2" />
<text  x="681.17" y="495.5" ></text>
</g>
<g >
<title>file_remove_privs (3 samples, 0.06%)</title><rect x="659.3" y="661" width="0.8" height="15.0" fill="rgb(226,117,44)" rx="2" ry="2" />
<text  x="662.33" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (1 samples, 0.02%)</title><rect x="153.1" y="773" width="0.3" height="15.0" fill="rgb(205,216,19)" rx="2" ry="2" />
<text  x="156.13" y="783.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (6 samples, 0.12%)</title><rect x="816.2" y="485" width="1.4" height="15.0" fill="rgb(205,124,41)" rx="2" ry="2" />
<text  x="819.16" y="495.5" ></text>
</g>
<g >
<title>workingset_update_node (1 samples, 0.02%)</title><rect x="689.2" y="453" width="0.2" height="15.0" fill="rgb(239,192,40)" rx="2" ry="2" />
<text  x="692.18" y="463.5" ></text>
</g>
<g >
<title>[unknown] (298 samples, 6.18%)</title><rect x="1017.0" y="1029" width="72.9" height="15.0" fill="rgb(209,109,28)" rx="2" ry="2" />
<text  x="1020.02" y="1039.5" >[unknown]</text>
</g>
<g >
<title>create_empty_buffers (30 samples, 0.62%)</title><rect x="668.1" y="533" width="7.4" height="15.0" fill="rgb(219,99,12)" rx="2" ry="2" />
<text  x="671.14" y="543.5" ></text>
</g>
<g >
<title>__unlink (1 samples, 0.02%)</title><rect x="1090.2" y="741" width="0.2" height="15.0" fill="rgb(237,57,35)" rx="2" ry="2" />
<text  x="1093.18" y="751.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (23 samples, 0.48%)</title><rect x="1075.3" y="1013" width="5.6" height="15.0" fill="rgb(217,53,38)" rx="2" ry="2" />
<text  x="1078.25" y="1023.5" ></text>
</g>
<g >
<title>__lookup_slow (11 samples, 0.23%)</title><rect x="795.1" y="613" width="2.7" height="15.0" fill="rgb(230,154,42)" rx="2" ry="2" />
<text  x="798.12" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="103.7" y="741" width="0.2" height="15.0" fill="rgb(252,13,32)" rx="2" ry="2" />
<text  x="106.71" y="751.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.02%)</title><rect x="1091.9" y="853" width="0.2" height="15.0" fill="rgb(246,153,20)" rx="2" ry="2" />
<text  x="1094.89" y="863.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="46.5" y="917" width="0.2" height="15.0" fill="rgb(207,92,11)" rx="2" ry="2" />
<text  x="49.45" y="927.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (6 samples, 0.12%)</title><rect x="691.6" y="469" width="1.5" height="15.0" fill="rgb(233,212,34)" rx="2" ry="2" />
<text  x="694.63" y="479.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1101.9" y="885" width="0.3" height="15.0" fill="rgb(236,127,9)" rx="2" ry="2" />
<text  x="1104.92" y="895.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (3 samples, 0.06%)</title><rect x="32.5" y="613" width="0.7" height="15.0" fill="rgb(229,24,18)" rx="2" ry="2" />
<text  x="35.51" y="623.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (90 samples, 1.87%)</title><rect x="72.9" y="997" width="22.0" height="15.0" fill="rgb(208,163,17)" rx="2" ry="2" />
<text  x="75.88" y="1007.5" >r..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="821.3" y="501" width="0.5" height="15.0" fill="rgb(207,101,26)" rx="2" ry="2" />
<text  x="824.30" y="511.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.02%)</title><rect x="10.0" y="853" width="0.2" height="15.0" fill="rgb(254,94,51)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>unlazy_walk (1 samples, 0.02%)</title><rect x="756.7" y="613" width="0.3" height="15.0" fill="rgb(234,173,13)" rx="2" ry="2" />
<text  x="759.71" y="623.5" ></text>
</g>
<g >
<title>insert_module (1 samples, 0.02%)</title><rect x="10.0" y="869" width="0.2" height="15.0" fill="rgb(211,66,48)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (1 samples, 0.02%)</title><rect x="55.0" y="1013" width="0.3" height="15.0" fill="rgb(223,89,1)" rx="2" ry="2" />
<text  x="58.02" y="1023.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (1 samples, 0.02%)</title><rect x="1106.8" y="869" width="0.3" height="15.0" fill="rgb(239,220,37)" rx="2" ry="2" />
<text  x="1109.82" y="879.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="108.4" y="757" width="0.2" height="15.0" fill="rgb(241,129,33)" rx="2" ry="2" />
<text  x="111.35" y="767.5" ></text>
</g>
<g >
<title>alx_mask_msix (3 samples, 0.06%)</title><rect x="1112.2" y="773" width="0.7" height="15.0" fill="rgb(231,215,26)" rx="2" ry="2" />
<text  x="1115.20" y="783.5" ></text>
</g>
<g >
<title>NaClTextMapWrapper (3 samples, 0.06%)</title><rect x="104.4" y="949" width="0.8" height="15.0" fill="rgb(213,1,22)" rx="2" ry="2" />
<text  x="107.44" y="959.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="1112.9" y="485" width="0.3" height="15.0" fill="rgb(220,30,45)" rx="2" ry="2" />
<text  x="1115.93" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="695.1" y="469" width="0.2" height="15.0" fill="rgb(220,12,38)" rx="2" ry="2" />
<text  x="698.05" y="479.5" ></text>
</g>
<g >
<title>NaClSysExit (5 samples, 0.10%)</title><rect x="108.4" y="981" width="1.2" height="15.0" fill="rgb(207,82,16)" rx="2" ry="2" />
<text  x="111.35" y="991.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1106.6" y="869" width="0.2" height="15.0" fill="rgb(208,17,52)" rx="2" ry="2" />
<text  x="1109.57" y="879.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="169.3" y="677" width="0.2" height="15.0" fill="rgb(246,46,41)" rx="2" ry="2" />
<text  x="172.27" y="687.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (2 samples, 0.04%)</title><rect x="795.4" y="517" width="0.5" height="15.0" fill="rgb(239,160,43)" rx="2" ry="2" />
<text  x="798.36" y="527.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="130.4" y="613" width="0.2" height="15.0" fill="rgb(251,74,7)" rx="2" ry="2" />
<text  x="133.37" y="623.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="228.7" y="501" width="0.3" height="15.0" fill="rgb(210,137,34)" rx="2" ry="2" />
<text  x="231.73" y="511.5" ></text>
</g>
<g >
<title>_warn_unseeded_randomness (2 samples, 0.04%)</title><rect x="185.7" y="437" width="0.5" height="15.0" fill="rgb(221,115,19)" rx="2" ry="2" />
<text  x="188.67" y="447.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr (1 samples, 0.02%)</title><rect x="10.5" y="869" width="0.2" height="15.0" fill="rgb(213,115,46)" rx="2" ry="2" />
<text  x="13.49" y="879.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="835.7" y="325" width="0.3" height="15.0" fill="rgb(247,205,54)" rx="2" ry="2" />
<text  x="838.73" y="335.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (2 samples, 0.04%)</title><rect x="814.4" y="549" width="0.5" height="15.0" fill="rgb(235,37,1)" rx="2" ry="2" />
<text  x="817.45" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.10%)</title><rect x="763.3" y="741" width="1.2" height="15.0" fill="rgb(212,164,20)" rx="2" ry="2" />
<text  x="766.31" y="751.5" ></text>
</g>
<g >
<title>__close_fd (2 samples, 0.04%)</title><rect x="654.2" y="597" width="0.5" height="15.0" fill="rgb(222,23,26)" rx="2" ry="2" />
<text  x="657.19" y="607.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (17 samples, 0.35%)</title><rect x="852.9" y="245" width="4.1" height="15.0" fill="rgb(235,31,25)" rx="2" ry="2" />
<text  x="855.86" y="255.5" ></text>
</g>
<g >
<title>page_cache_free_page.isra.0 (1 samples, 0.02%)</title><rect x="116.2" y="485" width="0.2" height="15.0" fill="rgb(227,190,15)" rx="2" ry="2" />
<text  x="119.18" y="495.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="695.1" y="453" width="0.2" height="15.0" fill="rgb(229,103,36)" rx="2" ry="2" />
<text  x="698.05" y="463.5" ></text>
</g>
<g >
<title>ext4_evict_inode (1 samples, 0.02%)</title><rect x="1091.9" y="741" width="0.2" height="15.0" fill="rgb(253,168,16)" rx="2" ry="2" />
<text  x="1094.89" y="751.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (5 samples, 0.10%)</title><rect x="121.6" y="389" width="1.2" height="15.0" fill="rgb(208,227,25)" rx="2" ry="2" />
<text  x="124.57" y="399.5" ></text>
</g>
<g >
<title>xas_load (5 samples, 0.10%)</title><rect x="218.9" y="517" width="1.3" height="15.0" fill="rgb(215,146,18)" rx="2" ry="2" />
<text  x="221.94" y="527.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="1091.6" y="1029" width="0.3" height="15.0" fill="rgb(206,44,26)" rx="2" ry="2" />
<text  x="1094.65" y="1039.5" ></text>
</g>
<g >
<title>ext4_group_desc_csum (1 samples, 0.02%)</title><rect x="775.1" y="453" width="0.2" height="15.0" fill="rgb(207,116,42)" rx="2" ry="2" />
<text  x="778.05" y="463.5" ></text>
</g>
<g >
<title>__ext4_check_dir_entry (1 samples, 0.02%)</title><rect x="805.9" y="549" width="0.2" height="15.0" fill="rgb(250,75,18)" rx="2" ry="2" />
<text  x="808.88" y="559.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.02%)</title><rect x="776.8" y="389" width="0.2" height="15.0" fill="rgb(246,99,44)" rx="2" ry="2" />
<text  x="779.77" y="399.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (2 samples, 0.04%)</title><rect x="772.6" y="437" width="0.5" height="15.0" fill="rgb(213,35,27)" rx="2" ry="2" />
<text  x="775.61" y="447.5" ></text>
</g>
<g >
<title>alloc_empty_file (2 samples, 0.04%)</title><rect x="735.4" y="613" width="0.5" height="15.0" fill="rgb(222,144,54)" rx="2" ry="2" />
<text  x="738.42" y="623.5" ></text>
</g>
<g >
<title>ksys_write (21 samples, 0.44%)</title><rect x="30.6" y="821" width="5.1" height="15.0" fill="rgb(223,92,2)" rx="2" ry="2" />
<text  x="33.55" y="831.5" ></text>
</g>
<g >
<title>dispatcher (175 samples, 3.63%)</title><rect x="128.4" y="917" width="42.8" height="15.0" fill="rgb(210,154,9)" rx="2" ry="2" />
<text  x="131.42" y="927.5" >disp..</text>
</g>
<g >
<title>ovl_get_acl (1 samples, 0.02%)</title><rect x="764.8" y="565" width="0.2" height="15.0" fill="rgb(216,90,23)" rx="2" ry="2" />
<text  x="767.78" y="575.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="739.1" y="437" width="0.2" height="15.0" fill="rgb(231,62,29)" rx="2" ry="2" />
<text  x="742.09" y="447.5" ></text>
</g>
<g >
<title>alloc_perturb (1 samples, 0.02%)</title><rect x="835.2" y="149" width="0.3" height="15.0" fill="rgb(229,215,44)" rx="2" ry="2" />
<text  x="838.24" y="159.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (2 samples, 0.04%)</title><rect x="752.5" y="421" width="0.5" height="15.0" fill="rgb(253,57,11)" rx="2" ry="2" />
<text  x="755.55" y="431.5" ></text>
</g>
<g >
<title>uncharge_page (2 samples, 0.04%)</title><rect x="112.8" y="437" width="0.4" height="15.0" fill="rgb(236,182,6)" rx="2" ry="2" />
<text  x="115.76" y="447.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (1 samples, 0.02%)</title><rect x="835.7" y="405" width="0.3" height="15.0" fill="rgb(205,100,31)" rx="2" ry="2" />
<text  x="838.73" y="415.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.02%)</title><rect x="653.9" y="805" width="0.3" height="15.0" fill="rgb(226,180,24)" rx="2" ry="2" />
<text  x="656.95" y="815.5" ></text>
</g>
<g >
<title>NaClValidateCode (10 samples, 0.21%)</title><rect x="105.2" y="949" width="2.4" height="15.0" fill="rgb(223,137,7)" rx="2" ry="2" />
<text  x="108.17" y="959.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="30.1" y="853" width="0.2" height="15.0" fill="rgb(237,93,51)" rx="2" ry="2" />
<text  x="33.06" y="863.5" ></text>
</g>
<g >
<title>__realpath (11 samples, 0.23%)</title><rect x="755.5" y="789" width="2.7" height="15.0" fill="rgb(237,105,53)" rx="2" ry="2" />
<text  x="758.48" y="799.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (1 samples, 0.02%)</title><rect x="173.9" y="501" width="0.3" height="15.0" fill="rgb(252,92,44)" rx="2" ry="2" />
<text  x="176.92" y="511.5" ></text>
</g>
<g >
<title>jbd2__journal_start (2 samples, 0.04%)</title><rect x="798.1" y="581" width="0.4" height="15.0" fill="rgb(253,35,44)" rx="2" ry="2" />
<text  x="801.05" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::close (1 samples, 0.02%)</title><rect x="108.4" y="885" width="0.2" height="15.0" fill="rgb(231,9,17)" rx="2" ry="2" />
<text  x="111.35" y="895.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (54 samples, 1.12%)</title><rect x="234.1" y="517" width="13.2" height="15.0" fill="rgb(232,78,54)" rx="2" ry="2" />
<text  x="237.11" y="527.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="103.7" y="677" width="0.2" height="15.0" fill="rgb(235,98,35)" rx="2" ry="2" />
<text  x="106.71" y="687.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_in (1 samples, 0.02%)</title><rect x="1113.4" y="661" width="0.3" height="15.0" fill="rgb(206,172,34)" rx="2" ry="2" />
<text  x="1116.42" y="671.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="108.1" y="581" width="0.3" height="15.0" fill="rgb(228,111,33)" rx="2" ry="2" />
<text  x="111.11" y="591.5" ></text>
</g>
<g >
<title>___slab_alloc (4 samples, 0.08%)</title><rect x="185.4" y="469" width="1.0" height="15.0" fill="rgb(242,49,38)" rx="2" ry="2" />
<text  x="188.42" y="479.5" ></text>
</g>
<g >
<title>__GI___readlink (8 samples, 0.17%)</title><rect x="756.2" y="757" width="2.0" height="15.0" fill="rgb(237,80,4)" rx="2" ry="2" />
<text  x="759.22" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (77 samples, 1.60%)</title><rect x="11.2" y="885" width="18.9" height="15.0" fill="rgb(228,200,16)" rx="2" ry="2" />
<text  x="14.22" y="895.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (4 samples, 0.08%)</title><rect x="837.2" y="389" width="1.0" height="15.0" fill="rgb(238,107,11)" rx="2" ry="2" />
<text  x="840.20" y="399.5" ></text>
</g>
<g >
<title>ext4_mknod (1 samples, 0.02%)</title><rect x="1090.2" y="565" width="0.2" height="15.0" fill="rgb(229,173,30)" rx="2" ry="2" />
<text  x="1093.18" y="575.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (25 samples, 0.52%)</title><rect x="120.8" y="405" width="6.1" height="15.0" fill="rgb(222,85,18)" rx="2" ry="2" />
<text  x="123.83" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="840.4" y="181" width="0.2" height="15.0" fill="rgb(240,169,7)" rx="2" ry="2" />
<text  x="843.38" y="191.5" ></text>
</g>
<g >
<title>free_unref_page_list (8 samples, 0.17%)</title><rect x="110.8" y="453" width="2.0" height="15.0" fill="rgb(249,218,5)" rx="2" ry="2" />
<text  x="113.80" y="463.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect x="109.1" y="373" width="0.2" height="15.0" fill="rgb(242,229,20)" rx="2" ry="2" />
<text  x="112.09" y="383.5" ></text>
</g>
<g >
<title>ovl_is_whiteout (1 samples, 0.02%)</title><rect x="761.4" y="517" width="0.2" height="15.0" fill="rgb(215,156,47)" rx="2" ry="2" />
<text  x="764.35" y="527.5" ></text>
</g>
<g >
<title>run_timer_softirq (3 samples, 0.06%)</title><rect x="1115.4" y="821" width="0.7" height="15.0" fill="rgb(253,177,42)" rx="2" ry="2" />
<text  x="1118.38" y="831.5" ></text>
</g>
<g >
<title>fput_many (1 samples, 0.02%)</title><rect x="654.2" y="549" width="0.2" height="15.0" fill="rgb(233,128,49)" rx="2" ry="2" />
<text  x="657.19" y="559.5" ></text>
</g>
<g >
<title>ext4_inode_block_valid (1 samples, 0.02%)</title><rect x="748.4" y="357" width="0.2" height="15.0" fill="rgb(215,29,12)" rx="2" ry="2" />
<text  x="751.39" y="367.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (79 samples, 1.64%)</title><rect x="10.7" y="949" width="19.4" height="15.0" fill="rgb(217,80,28)" rx="2" ry="2" />
<text  x="13.73" y="959.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.08%)</title><rect x="820.8" y="517" width="1.0" height="15.0" fill="rgb(205,5,3)" rx="2" ry="2" />
<text  x="823.81" y="527.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="169.3" y="693" width="0.2" height="15.0" fill="rgb(219,123,25)" rx="2" ry="2" />
<text  x="172.27" y="703.5" ></text>
</g>
<g >
<title>mem_cgroup_page_lruvec (1 samples, 0.02%)</title><rect x="691.4" y="485" width="0.2" height="15.0" fill="rgb(234,208,12)" rx="2" ry="2" />
<text  x="694.38" y="495.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (12 samples, 0.25%)</title><rect x="817.9" y="453" width="2.9" height="15.0" fill="rgb(240,78,26)" rx="2" ry="2" />
<text  x="820.87" y="463.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.02%)</title><rect x="801.2" y="629" width="0.3" height="15.0" fill="rgb(212,223,40)" rx="2" ry="2" />
<text  x="804.23" y="639.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (115 samples, 2.38%)</title><rect x="836.0" y="437" width="28.1" height="15.0" fill="rgb(218,119,32)" rx="2" ry="2" />
<text  x="838.98" y="447.5" >c..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="857.0" y="245" width="0.3" height="15.0" fill="rgb(213,37,19)" rx="2" ry="2" />
<text  x="860.02" y="255.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.04%)</title><rect x="814.4" y="517" width="0.5" height="15.0" fill="rgb(243,79,44)" rx="2" ry="2" />
<text  x="817.45" y="527.5" ></text>
</g>
<g >
<title>ext4_fname_prepare_lookup (1 samples, 0.02%)</title><rect x="797.6" y="565" width="0.2" height="15.0" fill="rgb(230,39,10)" rx="2" ry="2" />
<text  x="800.56" y="575.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="1112.9" y="501" width="0.3" height="15.0" fill="rgb(234,212,18)" rx="2" ry="2" />
<text  x="1115.93" y="511.5" ></text>
</g>
<g >
<title>_perf_ioctl (77 samples, 1.60%)</title><rect x="11.2" y="853" width="18.9" height="15.0" fill="rgb(208,188,38)" rx="2" ry="2" />
<text  x="14.22" y="863.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.06%)</title><rect x="857.0" y="325" width="0.8" height="15.0" fill="rgb(207,199,52)" rx="2" ry="2" />
<text  x="860.02" y="335.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.02%)</title><rect x="1092.1" y="869" width="0.3" height="15.0" fill="rgb(247,125,10)" rx="2" ry="2" />
<text  x="1095.14" y="879.5" ></text>
</g>
<g >
<title>NaClDescIoDescDtor (1 samples, 0.02%)</title><rect x="1090.2" y="917" width="0.2" height="15.0" fill="rgb(220,123,10)" rx="2" ry="2" />
<text  x="1093.18" y="927.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="888.3" y="197" width="0.3" height="15.0" fill="rgb(247,106,21)" rx="2" ry="2" />
<text  x="891.33" y="207.5" ></text>
</g>
<g >
<title>__dentry_kill (91 samples, 1.89%)</title><rect x="771.1" y="597" width="22.3" height="15.0" fill="rgb(207,76,46)" rx="2" ry="2" />
<text  x="774.14" y="607.5" >_..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (26 samples, 0.54%)</title><rect x="857.8" y="373" width="6.3" height="15.0" fill="rgb(220,167,28)" rx="2" ry="2" />
<text  x="860.75" y="383.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="221.9" y="533" width="0.5" height="15.0" fill="rgb(250,4,17)" rx="2" ry="2" />
<text  x="224.88" y="543.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.02%)</title><rect x="749.6" y="421" width="0.3" height="15.0" fill="rgb(236,103,20)" rx="2" ry="2" />
<text  x="752.61" y="431.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (45 samples, 0.93%)</title><rect x="1063.8" y="1013" width="11.0" height="15.0" fill="rgb(223,211,16)" rx="2" ry="2" />
<text  x="1066.75" y="1023.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (2 samples, 0.04%)</title><rect x="733.7" y="661" width="0.5" height="15.0" fill="rgb(224,16,32)" rx="2" ry="2" />
<text  x="736.71" y="671.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (2 samples, 0.04%)</title><rect x="864.8" y="469" width="0.5" height="15.0" fill="rgb(228,138,5)" rx="2" ry="2" />
<text  x="867.85" y="479.5" ></text>
</g>
<g >
<title>__activate_page (1 samples, 0.02%)</title><rect x="1092.1" y="725" width="0.3" height="15.0" fill="rgb(226,107,43)" rx="2" ry="2" />
<text  x="1095.14" y="735.5" ></text>
</g>
<g >
<title>sched_move_task (1 samples, 0.02%)</title><rect x="1092.6" y="869" width="0.3" height="15.0" fill="rgb(252,185,53)" rx="2" ry="2" />
<text  x="1095.62" y="879.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_page (1 samples, 0.02%)</title><rect x="675.2" y="501" width="0.3" height="15.0" fill="rgb(218,57,38)" rx="2" ry="2" />
<text  x="678.23" y="511.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="809.1" y="677" width="0.2" height="15.0" fill="rgb(223,197,15)" rx="2" ry="2" />
<text  x="812.06" y="687.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (570 samples, 11.82%)</title><rect x="867.3" y="533" width="139.4" height="15.0" fill="rgb(224,145,47)" rx="2" ry="2" />
<text  x="870.29" y="543.5" >&lt;serde_json::ser:..</text>
</g>
<g >
<title>ovl_xattr_get (1 samples, 0.02%)</title><rect x="659.8" y="597" width="0.3" height="15.0" fill="rgb(221,205,32)" rx="2" ry="2" />
<text  x="662.82" y="607.5" ></text>
</g>
<g >
<title>d_splice_alias (2 samples, 0.04%)</title><rect x="760.6" y="549" width="0.5" height="15.0" fill="rgb(246,62,15)" rx="2" ry="2" />
<text  x="763.62" y="559.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="731.7" y="821" width="0.3" height="15.0" fill="rgb(222,79,26)" rx="2" ry="2" />
<text  x="734.75" y="831.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (4 samples, 0.08%)</title><rect x="111.5" y="421" width="1.0" height="15.0" fill="rgb(208,104,3)" rx="2" ry="2" />
<text  x="114.53" y="431.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (1 samples, 0.02%)</title><rect x="813.7" y="389" width="0.3" height="15.0" fill="rgb(209,185,22)" rx="2" ry="2" />
<text  x="816.71" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="46.5" y="757" width="0.2" height="15.0" fill="rgb(226,199,35)" rx="2" ry="2" />
<text  x="49.45" y="767.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (73 samples, 1.51%)</title><rect x="109.8" y="517" width="17.9" height="15.0" fill="rgb(242,166,51)" rx="2" ry="2" />
<text  x="112.82" y="527.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (3 samples, 0.06%)</title><rect x="772.4" y="453" width="0.7" height="15.0" fill="rgb(237,40,24)" rx="2" ry="2" />
<text  x="775.36" y="463.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.02%)</title><rect x="1017.5" y="853" width="0.3" height="15.0" fill="rgb(226,133,24)" rx="2" ry="2" />
<text  x="1020.51" y="863.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="52.8" y="981" width="0.3" height="15.0" fill="rgb(235,77,40)" rx="2" ry="2" />
<text  x="55.82" y="991.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="857.3" y="261" width="0.5" height="15.0" fill="rgb(246,181,20)" rx="2" ry="2" />
<text  x="860.26" y="271.5" ></text>
</g>
<g >
<title>down_read (1 samples, 0.02%)</title><rect x="1089.9" y="821" width="0.3" height="15.0" fill="rgb(211,160,10)" rx="2" ry="2" />
<text  x="1092.93" y="831.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (3 samples, 0.06%)</title><rect x="852.1" y="245" width="0.8" height="15.0" fill="rgb(240,119,30)" rx="2" ry="2" />
<text  x="855.12" y="255.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="170.7" y="869" width="0.3" height="15.0" fill="rgb(228,103,2)" rx="2" ry="2" />
<text  x="173.74" y="879.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.04%)</title><rect x="1102.9" y="949" width="0.5" height="15.0" fill="rgb(235,85,53)" rx="2" ry="2" />
<text  x="1105.90" y="959.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (38 samples, 0.79%)</title><rect x="283.0" y="853" width="9.3" height="15.0" fill="rgb(241,132,10)" rx="2" ry="2" />
<text  x="286.04" y="863.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="10.5" y="821" width="0.2" height="15.0" fill="rgb(230,223,15)" rx="2" ry="2" />
<text  x="13.49" y="831.5" ></text>
</g>
<g >
<title>d_lookup (1 samples, 0.02%)</title><rect x="748.6" y="469" width="0.3" height="15.0" fill="rgb(246,3,33)" rx="2" ry="2" />
<text  x="751.63" y="479.5" ></text>
</g>
<g >
<title>__rdl_realloc (1 samples, 0.02%)</title><rect x="54.8" y="1013" width="0.2" height="15.0" fill="rgb(218,55,37)" rx="2" ry="2" />
<text  x="57.77" y="1023.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="831.6" y="421" width="0.2" height="15.0" fill="rgb(217,151,45)" rx="2" ry="2" />
<text  x="834.57" y="431.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="1092.1" y="805" width="0.3" height="15.0" fill="rgb(225,49,20)" rx="2" ry="2" />
<text  x="1095.14" y="815.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (284 samples, 5.89%)</title><rect x="660.6" y="597" width="69.4" height="15.0" fill="rgb(223,125,34)" rx="2" ry="2" />
<text  x="663.55" y="607.5" >ext4_bu..</text>
</g>
<g >
<title>_int_malloc (2 samples, 0.04%)</title><rect x="835.0" y="165" width="0.5" height="15.0" fill="rgb(241,203,23)" rx="2" ry="2" />
<text  x="838.00" y="175.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.15%)</title><rect x="94.9" y="1013" width="1.7" height="15.0" fill="rgb(205,106,54)" rx="2" ry="2" />
<text  x="97.90" y="1023.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (19 samples, 0.39%)</title><rect x="826.9" y="517" width="4.7" height="15.0" fill="rgb(205,124,10)" rx="2" ry="2" />
<text  x="829.92" y="527.5" ></text>
</g>
<g >
<title>lookup_one_len (11 samples, 0.23%)</title><rect x="795.1" y="629" width="2.7" height="15.0" fill="rgb(238,153,23)" rx="2" ry="2" />
<text  x="798.12" y="639.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (327 samples, 6.78%)</title><rect x="1110.0" y="1029" width="80.0" height="15.0" fill="rgb(250,178,53)" rx="2" ry="2" />
<text  x="1113.00" y="1039.5" >secondary..</text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="655.7" y="517" width="0.2" height="15.0" fill="rgb(247,0,2)" rx="2" ry="2" />
<text  x="658.66" y="527.5" ></text>
</g>
<g >
<title>__update_blocked_fair (2 samples, 0.04%)</title><rect x="1114.9" y="789" width="0.5" height="15.0" fill="rgb(243,30,44)" rx="2" ry="2" />
<text  x="1117.89" y="799.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="811.8" y="597" width="0.2" height="15.0" fill="rgb(229,27,10)" rx="2" ry="2" />
<text  x="814.75" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (1 samples, 0.02%)</title><rect x="1090.2" y="757" width="0.2" height="15.0" fill="rgb(245,209,34)" rx="2" ry="2" />
<text  x="1093.18" y="767.5" ></text>
</g>
<g >
<title>find_get_entry (4 samples, 0.08%)</title><rect x="701.9" y="517" width="1.0" height="15.0" fill="rgb(211,107,35)" rx="2" ry="2" />
<text  x="704.90" y="527.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (3 samples, 0.06%)</title><rect x="1113.9" y="885" width="0.7" height="15.0" fill="rgb(212,46,44)" rx="2" ry="2" />
<text  x="1116.91" y="895.5" ></text>
</g>
<g >
<title>NaClValidateImage (2 samples, 0.04%)</title><rect x="1017.8" y="949" width="0.4" height="15.0" fill="rgb(210,63,54)" rx="2" ry="2" />
<text  x="1020.76" y="959.5" ></text>
</g>
<g >
<title>destroy_inode (93 samples, 1.93%)</title><rect x="770.7" y="661" width="22.7" height="15.0" fill="rgb(246,41,27)" rx="2" ry="2" />
<text  x="773.65" y="671.5" >d..</text>
</g>
<g >
<title>fsnotify_get_cookie (1 samples, 0.02%)</title><rect x="807.6" y="629" width="0.2" height="15.0" fill="rgb(226,162,35)" rx="2" ry="2" />
<text  x="810.59" y="639.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (3 samples, 0.06%)</title><rect x="784.6" y="357" width="0.7" height="15.0" fill="rgb(221,188,6)" rx="2" ry="2" />
<text  x="787.60" y="367.5" ></text>
</g>
<g >
<title>ovl_file_accessed.part.0 (1 samples, 0.02%)</title><rect x="131.8" y="677" width="0.3" height="15.0" fill="rgb(251,90,50)" rx="2" ry="2" />
<text  x="134.84" y="687.5" ></text>
</g>
<g >
<title>invoke_rcu_core (1 samples, 0.02%)</title><rect x="1165.0" y="693" width="0.3" height="15.0" fill="rgb(231,136,54)" rx="2" ry="2" />
<text  x="1168.04" y="703.5" ></text>
</g>
<g >
<title>do_dentry_open (7 samples, 0.15%)</title><rect x="735.9" y="581" width="1.7" height="15.0" fill="rgb(243,90,52)" rx="2" ry="2" />
<text  x="738.91" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="658.6" y="789" width="0.2" height="15.0" fill="rgb(231,117,16)" rx="2" ry="2" />
<text  x="661.60" y="799.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (1 samples, 0.02%)</title><rect x="109.1" y="325" width="0.2" height="15.0" fill="rgb(212,106,3)" rx="2" ry="2" />
<text  x="112.09" y="335.5" ></text>
</g>
<g >
<title>rmqueue (6 samples, 0.12%)</title><rect x="216.2" y="485" width="1.5" height="15.0" fill="rgb(215,80,40)" rx="2" ry="2" />
<text  x="219.25" y="495.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="108.6" y="597" width="0.2" height="15.0" fill="rgb(231,45,1)" rx="2" ry="2" />
<text  x="111.60" y="607.5" ></text>
</g>
<g >
<title>worker_thread (4 samples, 0.08%)</title><rect x="1109.0" y="997" width="1.0" height="15.0" fill="rgb(206,217,17)" rx="2" ry="2" />
<text  x="1112.02" y="1007.5" ></text>
</g>
<g >
<title>security_inode_init_security (1 samples, 0.02%)</title><rect x="1090.2" y="517" width="0.2" height="15.0" fill="rgb(218,34,43)" rx="2" ry="2" />
<text  x="1093.18" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (5 samples, 0.10%)</title><rect x="887.1" y="293" width="1.2" height="15.0" fill="rgb(238,163,9)" rx="2" ry="2" />
<text  x="890.11" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="768.7" y="693" width="0.2" height="15.0" fill="rgb(243,227,51)" rx="2" ry="2" />
<text  x="771.69" y="703.5" ></text>
</g>
<g >
<title>BitmapClearBit (1 samples, 0.02%)</title><rect x="107.4" y="885" width="0.2" height="15.0" fill="rgb(254,17,11)" rx="2" ry="2" />
<text  x="110.38" y="895.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.10%)</title><rect x="840.1" y="229" width="1.3" height="15.0" fill="rgb(243,170,51)" rx="2" ry="2" />
<text  x="843.13" y="239.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (71 samples, 1.47%)</title><rect x="839.6" y="325" width="17.4" height="15.0" fill="rgb(208,98,47)" rx="2" ry="2" />
<text  x="842.65" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="814.2" y="453" width="0.2" height="15.0" fill="rgb(244,120,14)" rx="2" ry="2" />
<text  x="817.20" y="463.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (1 samples, 0.02%)</title><rect x="776.8" y="437" width="0.2" height="15.0" fill="rgb(224,196,33)" rx="2" ry="2" />
<text  x="779.77" y="447.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="1090.4" y="805" width="0.3" height="15.0" fill="rgb(252,75,50)" rx="2" ry="2" />
<text  x="1093.42" y="815.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (51 samples, 1.06%)</title><rect x="641.5" y="805" width="12.4" height="15.0" fill="rgb(229,18,28)" rx="2" ry="2" />
<text  x="644.47" y="815.5" ></text>
</g>
<g >
<title>__GI___getcwd (5 samples, 0.10%)</title><rect x="763.3" y="773" width="1.2" height="15.0" fill="rgb(208,150,45)" rx="2" ry="2" />
<text  x="766.31" y="783.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="217.7" y="501" width="0.3" height="15.0" fill="rgb(232,16,12)" rx="2" ry="2" />
<text  x="220.72" y="511.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.02%)</title><rect x="109.1" y="469" width="0.2" height="15.0" fill="rgb(237,98,12)" rx="2" ry="2" />
<text  x="112.09" y="479.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="1113.7" y="453" width="0.2" height="15.0" fill="rgb(249,24,28)" rx="2" ry="2" />
<text  x="1116.67" y="463.5" ></text>
</g>
<g >
<title>xas_load (4 samples, 0.08%)</title><rect x="229.0" y="485" width="1.0" height="15.0" fill="rgb(228,221,29)" rx="2" ry="2" />
<text  x="231.97" y="495.5" ></text>
</g>
<g >
<title>d_splice_alias (2 samples, 0.04%)</title><rect x="797.1" y="565" width="0.5" height="15.0" fill="rgb(219,7,24)" rx="2" ry="2" />
<text  x="800.07" y="575.5" ></text>
</g>
<g >
<title>__evlist__enable (80 samples, 1.66%)</title><rect x="10.5" y="981" width="19.6" height="15.0" fill="rgb(219,219,47)" rx="2" ry="2" />
<text  x="13.49" y="991.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.02%)</title><rect x="1015.8" y="901" width="0.2" height="15.0" fill="rgb(219,48,11)" rx="2" ry="2" />
<text  x="1018.80" y="911.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (1 samples, 0.02%)</title><rect x="1090.9" y="565" width="0.3" height="15.0" fill="rgb(242,98,46)" rx="2" ry="2" />
<text  x="1093.91" y="575.5" ></text>
</g>
<g >
<title>ext4_fc_track_template (1 samples, 0.02%)</title><rect x="719.8" y="469" width="0.2" height="15.0" fill="rgb(232,102,10)" rx="2" ry="2" />
<text  x="722.76" y="479.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="657.9" y="677" width="0.2" height="15.0" fill="rgb(207,225,10)" rx="2" ry="2" />
<text  x="660.86" y="687.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="864.1" y="341" width="0.7" height="15.0" fill="rgb(253,157,1)" rx="2" ry="2" />
<text  x="867.11" y="351.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="108.1" y="597" width="0.3" height="15.0" fill="rgb(234,61,40)" rx="2" ry="2" />
<text  x="111.11" y="607.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="793.6" y="709" width="0.3" height="15.0" fill="rgb(253,98,2)" rx="2" ry="2" />
<text  x="796.65" y="719.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="843.3" y="277" width="0.3" height="15.0" fill="rgb(210,35,38)" rx="2" ry="2" />
<text  x="846.32" y="287.5" ></text>
</g>
<g >
<title>i_callback (2 samples, 0.04%)</title><rect x="1107.3" y="901" width="0.5" height="15.0" fill="rgb(245,220,8)" rx="2" ry="2" />
<text  x="1110.30" y="911.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (1 samples, 0.02%)</title><rect x="1114.2" y="773" width="0.2" height="15.0" fill="rgb(236,70,34)" rx="2" ry="2" />
<text  x="1117.16" y="783.5" ></text>
</g>
<g >
<title>ext4_search_dir (1 samples, 0.02%)</title><rect x="796.8" y="549" width="0.3" height="15.0" fill="rgb(243,180,19)" rx="2" ry="2" />
<text  x="799.83" y="559.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (1 samples, 0.02%)</title><rect x="10.2" y="981" width="0.3" height="15.0" fill="rgb(233,205,3)" rx="2" ry="2" />
<text  x="13.24" y="991.5" ></text>
</g>
<g >
<title>__switch_to_asm (1 samples, 0.02%)</title><rect x="1160.9" y="949" width="0.2" height="15.0" fill="rgb(250,151,15)" rx="2" ry="2" />
<text  x="1163.89" y="959.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="835.7" y="341" width="0.3" height="15.0" fill="rgb(231,184,43)" rx="2" ry="2" />
<text  x="838.73" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="1012.6" y="789" width="0.3" height="15.0" fill="rgb(205,191,11)" rx="2" ry="2" />
<text  x="1015.62" y="799.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="46.5" y="933" width="0.2" height="15.0" fill="rgb(220,81,38)" rx="2" ry="2" />
<text  x="49.45" y="943.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3 samples, 0.06%)</title><rect x="1113.9" y="853" width="0.7" height="15.0" fill="rgb(253,140,48)" rx="2" ry="2" />
<text  x="1116.91" y="863.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1101.7" y="933" width="0.2" height="15.0" fill="rgb(209,161,6)" rx="2" ry="2" />
<text  x="1104.68" y="943.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="1101.9" y="741" width="0.3" height="15.0" fill="rgb(205,225,52)" rx="2" ry="2" />
<text  x="1104.92" y="751.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.15%)</title><rect x="833.0" y="165" width="1.8" height="15.0" fill="rgb(229,199,25)" rx="2" ry="2" />
<text  x="836.04" y="175.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (1 samples, 0.02%)</title><rect x="108.4" y="853" width="0.2" height="15.0" fill="rgb(215,128,38)" rx="2" ry="2" />
<text  x="111.35" y="863.5" ></text>
</g>
<g >
<title>security_capable (1 samples, 0.02%)</title><rect x="794.1" y="581" width="0.3" height="15.0" fill="rgb(237,55,23)" rx="2" ry="2" />
<text  x="797.14" y="591.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.02%)</title><rect x="786.6" y="277" width="0.2" height="15.0" fill="rgb(230,192,35)" rx="2" ry="2" />
<text  x="789.55" y="287.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (73 samples, 1.51%)</title><rect x="109.8" y="917" width="17.9" height="15.0" fill="rgb(248,161,40)" rx="2" ry="2" />
<text  x="112.82" y="927.5" ></text>
</g>
<g >
<title>kthread (27 samples, 0.56%)</title><rect x="1103.4" y="1013" width="6.6" height="15.0" fill="rgb(228,126,8)" rx="2" ry="2" />
<text  x="1106.39" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (339 samples, 7.03%)</title><rect x="173.2" y="773" width="82.9" height="15.0" fill="rgb(227,63,40)" rx="2" ry="2" />
<text  x="176.19" y="783.5" >do_syscal..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="831.8" y="373" width="0.3" height="15.0" fill="rgb(213,154,50)" rx="2" ry="2" />
<text  x="834.82" y="383.5" ></text>
</g>
<g >
<title>NaClDescIoDescDtor (1 samples, 0.02%)</title><rect x="103.7" y="933" width="0.2" height="15.0" fill="rgb(212,114,32)" rx="2" ry="2" />
<text  x="106.71" y="943.5" ></text>
</g>
<g >
<title>smp_call_function_single (66 samples, 1.37%)</title><rect x="13.9" y="789" width="16.2" height="15.0" fill="rgb(229,221,9)" rx="2" ry="2" />
<text  x="16.91" y="799.5" ></text>
</g>
<g >
<title>xas_create (1 samples, 0.02%)</title><rect x="205.0" y="485" width="0.2" height="15.0" fill="rgb(235,77,7)" rx="2" ry="2" />
<text  x="207.99" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (73 samples, 1.51%)</title><rect x="109.8" y="805" width="17.9" height="15.0" fill="rgb(215,101,50)" rx="2" ry="2" />
<text  x="112.82" y="815.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (290 samples, 6.01%)</title><rect x="337.4" y="805" width="70.9" height="15.0" fill="rgb(248,53,29)" rx="2" ry="2" />
<text  x="340.36" y="815.5" >ringbuf:..</text>
</g>
<g >
<title>find_inode_bit (2 samples, 0.04%)</title><rect x="743.7" y="453" width="0.5" height="15.0" fill="rgb(211,84,16)" rx="2" ry="2" />
<text  x="746.74" y="463.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.02%)</title><rect x="795.1" y="533" width="0.3" height="15.0" fill="rgb(229,149,4)" rx="2" ry="2" />
<text  x="798.12" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.02%)</title><rect x="653.9" y="837" width="0.3" height="15.0" fill="rgb(242,8,32)" rx="2" ry="2" />
<text  x="656.95" y="847.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (2 samples, 0.04%)</title><rect x="1017.3" y="901" width="0.5" height="15.0" fill="rgb(218,116,45)" rx="2" ry="2" />
<text  x="1020.27" y="911.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (15 samples, 0.31%)</title><rect x="191.8" y="517" width="3.7" height="15.0" fill="rgb(214,138,29)" rx="2" ry="2" />
<text  x="194.78" y="527.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (9 samples, 0.19%)</title><rect x="100.3" y="965" width="2.2" height="15.0" fill="rgb(232,92,0)" rx="2" ry="2" />
<text  x="103.28" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.17%)</title><rect x="756.2" y="741" width="2.0" height="15.0" fill="rgb(236,60,13)" rx="2" ry="2" />
<text  x="759.22" y="751.5" ></text>
</g>
<g >
<title>jbd2__journal_start (16 samples, 0.33%)</title><rect x="176.6" y="549" width="3.9" height="15.0" fill="rgb(239,117,16)" rx="2" ry="2" />
<text  x="179.61" y="559.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (340 samples, 7.05%)</title><rect x="172.9" y="853" width="83.2" height="15.0" fill="rgb(237,184,51)" rx="2" ry="2" />
<text  x="175.94" y="863.5" >std::os::..</text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="730.0" y="629" width="0.3" height="15.0" fill="rgb(208,184,3)" rx="2" ry="2" />
<text  x="733.04" y="639.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.02%)</title><rect x="35.9" y="885" width="0.3" height="15.0" fill="rgb(224,154,20)" rx="2" ry="2" />
<text  x="38.93" y="895.5" ></text>
</g>
<g >
<title>perf_mmap__push (21 samples, 0.44%)</title><rect x="30.6" y="949" width="5.1" height="15.0" fill="rgb(250,48,17)" rx="2" ry="2" />
<text  x="33.55" y="959.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (89 samples, 1.85%)</title><rect x="942.2" y="485" width="21.7" height="15.0" fill="rgb(207,90,22)" rx="2" ry="2" />
<text  x="945.16" y="495.5" >s..</text>
</g>
<g >
<title>seq_put_decimal_ull_width (1 samples, 0.02%)</title><rect x="30.3" y="741" width="0.3" height="15.0" fill="rgb(206,113,0)" rx="2" ry="2" />
<text  x="33.31" y="751.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="1107.3" y="869" width="0.5" height="15.0" fill="rgb(217,53,38)" rx="2" ry="2" />
<text  x="1110.30" y="879.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (12 samples, 0.25%)</title><rect x="833.0" y="453" width="3.0" height="15.0" fill="rgb(220,10,8)" rx="2" ry="2" />
<text  x="836.04" y="463.5" ></text>
</g>
<g >
<title>shmem_recalc_inode (1 samples, 0.02%)</title><rect x="104.4" y="693" width="0.3" height="15.0" fill="rgb(229,164,5)" rx="2" ry="2" />
<text  x="107.44" y="703.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="731.3" y="725" width="0.2" height="15.0" fill="rgb(209,205,21)" rx="2" ry="2" />
<text  x="734.26" y="735.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.0 (2 samples, 0.04%)</title><rect x="243.4" y="453" width="0.5" height="15.0" fill="rgb(252,113,26)" rx="2" ry="2" />
<text  x="246.41" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.02%)</title><rect x="1015.8" y="869" width="0.2" height="15.0" fill="rgb(232,221,38)" rx="2" ry="2" />
<text  x="1018.80" y="879.5" ></text>
</g>
<g >
<title>do_syscall_64 (86 samples, 1.78%)</title><rect x="734.4" y="693" width="21.1" height="15.0" fill="rgb(233,67,10)" rx="2" ry="2" />
<text  x="737.44" y="703.5" ></text>
</g>
<g >
<title>__d_lookup (1 samples, 0.02%)</title><rect x="739.6" y="469" width="0.2" height="15.0" fill="rgb(212,68,26)" rx="2" ry="2" />
<text  x="742.58" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.06%)</title><rect x="182.0" y="549" width="0.7" height="15.0" fill="rgb(246,228,36)" rx="2" ry="2" />
<text  x="185.00" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::seek (1 samples, 0.02%)</title><rect x="153.1" y="837" width="0.3" height="15.0" fill="rgb(225,61,36)" rx="2" ry="2" />
<text  x="156.13" y="847.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (20 samples, 0.41%)</title><rect x="858.2" y="325" width="4.9" height="15.0" fill="rgb(238,120,52)" rx="2" ry="2" />
<text  x="861.24" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.06%)</title><rect x="108.8" y="693" width="0.8" height="15.0" fill="rgb(210,22,19)" rx="2" ry="2" />
<text  x="111.84" y="703.5" ></text>
</g>
<g >
<title>vfs_write (21 samples, 0.44%)</title><rect x="30.6" y="805" width="5.1" height="15.0" fill="rgb(219,38,34)" rx="2" ry="2" />
<text  x="33.55" y="815.5" ></text>
</g>
<g >
<title>ext4_fc_start_update (1 samples, 0.02%)</title><rect x="173.4" y="597" width="0.3" height="15.0" fill="rgb(232,19,27)" rx="2" ry="2" />
<text  x="176.43" y="607.5" ></text>
</g>
<g >
<title>__brelse (2 samples, 0.04%)</title><rect x="234.6" y="485" width="0.5" height="15.0" fill="rgb(250,176,36)" rx="2" ry="2" />
<text  x="237.60" y="495.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.10%)</title><rect x="836.0" y="373" width="1.2" height="15.0" fill="rgb(214,153,51)" rx="2" ry="2" />
<text  x="838.98" y="383.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.02%)</title><rect x="35.7" y="933" width="0.2" height="15.0" fill="rgb(226,129,44)" rx="2" ry="2" />
<text  x="38.69" y="943.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="762.8" y="661" width="0.3" height="15.0" fill="rgb(208,127,30)" rx="2" ry="2" />
<text  x="765.82" y="671.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (1 samples, 0.02%)</title><rect x="1090.2" y="789" width="0.2" height="15.0" fill="rgb(230,132,12)" rx="2" ry="2" />
<text  x="1093.18" y="799.5" ></text>
</g>
<g >
<title>__unlink (1 samples, 0.02%)</title><rect x="103.7" y="757" width="0.2" height="15.0" fill="rgb(209,180,1)" rx="2" ry="2" />
<text  x="106.71" y="767.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.04%)</title><rect x="1101.2" y="869" width="0.5" height="15.0" fill="rgb(249,8,26)" rx="2" ry="2" />
<text  x="1104.19" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_write (339 samples, 7.03%)</title><rect x="173.2" y="757" width="82.9" height="15.0" fill="rgb(232,29,31)" rx="2" ry="2" />
<text  x="176.19" y="767.5" >__x64_sys..</text>
</g>
<g >
<title>tick_program_event (3 samples, 0.06%)</title><rect x="1167.0" y="773" width="0.7" height="15.0" fill="rgb(238,133,43)" rx="2" ry="2" />
<text  x="1170.00" y="783.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="109.1" y="501" width="0.2" height="15.0" fill="rgb(222,105,2)" rx="2" ry="2" />
<text  x="112.09" y="511.5" ></text>
</g>
<g >
<title>filename_parentat (4 samples, 0.08%)</title><rect x="769.2" y="725" width="1.0" height="15.0" fill="rgb(205,147,9)" rx="2" ry="2" />
<text  x="772.18" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.23%)</title><rect x="1100.7" y="1029" width="2.7" height="15.0" fill="rgb(234,112,29)" rx="2" ry="2" />
<text  x="1103.70" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1090.4" y="869" width="0.3" height="15.0" fill="rgb(254,194,41)" rx="2" ry="2" />
<text  x="1093.42" y="879.5" ></text>
</g>
<g >
<title>lock_two_nondirectories (2 samples, 0.04%)</title><rect x="753.5" y="501" width="0.5" height="15.0" fill="rgb(244,220,3)" rx="2" ry="2" />
<text  x="756.52" y="511.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (12 samples, 0.25%)</title><rect x="238.0" y="469" width="3.0" height="15.0" fill="rgb(217,183,47)" rx="2" ry="2" />
<text  x="241.02" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (4 samples, 0.08%)</title><rect x="837.2" y="373" width="1.0" height="15.0" fill="rgb(205,39,50)" rx="2" ry="2" />
<text  x="840.20" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.19%)</title><rect x="100.3" y="933" width="2.2" height="15.0" fill="rgb(220,101,23)" rx="2" ry="2" />
<text  x="103.28" y="943.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (91 samples, 1.89%)</title><rect x="681.1" y="549" width="22.3" height="15.0" fill="rgb(239,220,11)" rx="2" ry="2" />
<text  x="684.11" y="559.5" >g..</text>
</g>
<g >
<title>[unknown] (104 samples, 2.16%)</title><rect x="10.5" y="1029" width="25.4" height="15.0" fill="rgb(234,152,14)" rx="2" ry="2" />
<text  x="13.49" y="1039.5" >[..</text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (72 samples, 1.49%)</title><rect x="963.9" y="421" width="17.6" height="15.0" fill="rgb(223,93,22)" rx="2" ry="2" />
<text  x="966.93" y="431.5" ></text>
</g>
<g >
<title>__unlink (1 samples, 0.02%)</title><rect x="1090.4" y="885" width="0.3" height="15.0" fill="rgb(234,96,22)" rx="2" ry="2" />
<text  x="1093.42" y="895.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.04%)</title><rect x="713.9" y="469" width="0.5" height="15.0" fill="rgb(218,29,12)" rx="2" ry="2" />
<text  x="716.89" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (170 samples, 3.52%)</title><rect x="768.0" y="789" width="41.6" height="15.0" fill="rgb(209,193,39)" rx="2" ry="2" />
<text  x="770.96" y="799.5" >ent..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="831.6" y="309" width="0.2" height="15.0" fill="rgb(235,96,26)" rx="2" ry="2" />
<text  x="834.57" y="319.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="1092.1" y="821" width="0.3" height="15.0" fill="rgb(233,218,17)" rx="2" ry="2" />
<text  x="1095.14" y="831.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (3 samples, 0.06%)</title><rect x="657.4" y="821" width="0.7" height="15.0" fill="rgb(244,139,22)" rx="2" ry="2" />
<text  x="660.37" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.15%)</title><rect x="50.9" y="901" width="1.7" height="15.0" fill="rgb(249,5,26)" rx="2" ry="2" />
<text  x="53.86" y="911.5" ></text>
</g>
<g >
<title>ovl_create (68 samples, 1.41%)</title><rect x="738.6" y="581" width="16.6" height="15.0" fill="rgb(215,43,21)" rx="2" ry="2" />
<text  x="741.60" y="591.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.02%)</title><rect x="1159.7" y="853" width="0.2" height="15.0" fill="rgb(230,42,37)" rx="2" ry="2" />
<text  x="1162.66" y="863.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="30.3" y="885" width="0.3" height="15.0" fill="rgb(234,41,41)" rx="2" ry="2" />
<text  x="33.31" y="895.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (1 samples, 0.02%)</title><rect x="763.8" y="677" width="0.2" height="15.0" fill="rgb(226,8,7)" rx="2" ry="2" />
<text  x="766.80" y="687.5" ></text>
</g>
<g >
<title>CompareAndSwap (1 samples, 0.02%)</title><rect x="53.1" y="1013" width="0.2" height="15.0" fill="rgb(219,108,42)" rx="2" ry="2" />
<text  x="56.06" y="1023.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="1166.0" y="629" width="0.3" height="15.0" fill="rgb(250,19,48)" rx="2" ry="2" />
<text  x="1169.02" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (88 samples, 1.82%)</title><rect x="942.2" y="453" width="21.5" height="15.0" fill="rgb(206,229,19)" rx="2" ry="2" />
<text  x="945.16" y="463.5" >s..</text>
</g>
<g >
<title>menu_select (3 samples, 0.06%)</title><rect x="1184.9" y="869" width="0.7" height="15.0" fill="rgb(251,228,31)" rx="2" ry="2" />
<text  x="1187.86" y="879.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (21 samples, 0.44%)</title><rect x="30.6" y="725" width="5.1" height="15.0" fill="rgb(235,83,33)" rx="2" ry="2" />
<text  x="33.55" y="735.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.02%)</title><rect x="721.5" y="405" width="0.2" height="15.0" fill="rgb(247,214,35)" rx="2" ry="2" />
<text  x="724.47" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (211 samples, 4.37%)</title><rect x="1110.0" y="997" width="51.6" height="15.0" fill="rgb(224,183,38)" rx="2" ry="2" />
<text  x="1113.00" y="1007.5" >cpu_s..</text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="1089.9" y="869" width="0.3" height="15.0" fill="rgb(224,174,17)" rx="2" ry="2" />
<text  x="1092.93" y="879.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="809.6" y="709" width="0.4" height="15.0" fill="rgb(225,53,10)" rx="2" ry="2" />
<text  x="812.55" y="719.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="865.1" y="357" width="0.2" height="15.0" fill="rgb(253,29,24)" rx="2" ry="2" />
<text  x="868.09" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="657.6" y="741" width="0.3" height="15.0" fill="rgb(214,61,51)" rx="2" ry="2" />
<text  x="660.62" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="950.2" y="325" width="0.3" height="15.0" fill="rgb(254,146,10)" rx="2" ry="2" />
<text  x="953.23" y="335.5" ></text>
</g>
<g >
<title>pollwake (1 samples, 0.02%)</title><rect x="1113.7" y="421" width="0.2" height="15.0" fill="rgb(253,112,22)" rx="2" ry="2" />
<text  x="1116.67" y="431.5" ></text>
</g>
<g >
<title>clear_page_erms (25 samples, 0.52%)</title><rect x="210.1" y="469" width="6.1" height="15.0" fill="rgb(213,38,36)" rx="2" ry="2" />
<text  x="213.13" y="479.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (10 samples, 0.21%)</title><rect x="833.0" y="405" width="2.5" height="15.0" fill="rgb(227,208,24)" rx="2" ry="2" />
<text  x="836.04" y="415.5" ></text>
</g>
<g >
<title>__es_tree_search.isra.0 (1 samples, 0.02%)</title><rect x="680.6" y="469" width="0.3" height="15.0" fill="rgb(224,71,5)" rx="2" ry="2" />
<text  x="683.62" y="479.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="1091.2" y="565" width="0.2" height="15.0" fill="rgb(215,214,13)" rx="2" ry="2" />
<text  x="1094.16" y="575.5" ></text>
</g>
<g >
<title>ovl_get_acl (1 samples, 0.02%)</title><rect x="749.4" y="469" width="0.2" height="15.0" fill="rgb(230,213,34)" rx="2" ry="2" />
<text  x="752.37" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.08%)</title><rect x="46.7" y="885" width="1.0" height="15.0" fill="rgb(207,2,30)" rx="2" ry="2" />
<text  x="49.70" y="895.5" ></text>
</g>
<g >
<title>pick_next_task_fair (12 samples, 0.25%)</title><rect x="1186.8" y="869" width="3.0" height="15.0" fill="rgb(251,142,0)" rx="2" ry="2" />
<text  x="1189.82" y="879.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (2 samples, 0.04%)</title><rect x="1101.2" y="949" width="0.5" height="15.0" fill="rgb(248,83,22)" rx="2" ry="2" />
<text  x="1104.19" y="959.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (23 samples, 0.48%)</title><rect x="1001.1" y="453" width="5.6" height="15.0" fill="rgb(208,134,33)" rx="2" ry="2" />
<text  x="1004.12" y="463.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (2 samples, 0.04%)</title><rect x="694.6" y="485" width="0.5" height="15.0" fill="rgb(220,99,47)" rx="2" ry="2" />
<text  x="697.56" y="495.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="731.7" y="805" width="0.3" height="15.0" fill="rgb(222,79,25)" rx="2" ry="2" />
<text  x="734.75" y="815.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (1 samples, 0.02%)</title><rect x="798.8" y="581" width="0.2" height="15.0" fill="rgb(223,70,24)" rx="2" ry="2" />
<text  x="801.79" y="591.5" ></text>
</g>
<g >
<title>ttwu_do_activate (3 samples, 0.06%)</title><rect x="130.1" y="661" width="0.8" height="15.0" fill="rgb(205,189,39)" rx="2" ry="2" />
<text  x="133.13" y="671.5" ></text>
</g>
<g >
<title>try_to_free_buffers (1 samples, 0.02%)</title><rect x="793.2" y="373" width="0.2" height="15.0" fill="rgb(239,123,34)" rx="2" ry="2" />
<text  x="796.16" y="383.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (5 samples, 0.10%)</title><rect x="764.8" y="629" width="1.2" height="15.0" fill="rgb(205,207,24)" rx="2" ry="2" />
<text  x="767.78" y="639.5" ></text>
</g>
<g >
<title>std::path::PathBuf::push (1 samples, 0.02%)</title><rect x="762.6" y="757" width="0.2" height="15.0" fill="rgb(212,97,15)" rx="2" ry="2" />
<text  x="765.58" y="767.5" ></text>
</g>
<g >
<title>load_balance (2 samples, 0.04%)</title><rect x="1109.3" y="917" width="0.5" height="15.0" fill="rgb(253,36,13)" rx="2" ry="2" />
<text  x="1112.26" y="927.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (1 samples, 0.02%)</title><rect x="722.0" y="437" width="0.2" height="15.0" fill="rgb(205,63,22)" rx="2" ry="2" />
<text  x="724.96" y="447.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="1091.2" y="869" width="0.2" height="15.0" fill="rgb(231,143,16)" rx="2" ry="2" />
<text  x="1094.16" y="879.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (1 samples, 0.02%)</title><rect x="1090.4" y="533" width="0.3" height="15.0" fill="rgb(208,184,42)" rx="2" ry="2" />
<text  x="1093.42" y="543.5" ></text>
</g>
<g >
<title>note_gp_changes (1 samples, 0.02%)</title><rect x="1106.1" y="917" width="0.2" height="15.0" fill="rgb(244,102,43)" rx="2" ry="2" />
<text  x="1109.08" y="927.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="108.6" y="725" width="0.2" height="15.0" fill="rgb(216,27,17)" rx="2" ry="2" />
<text  x="111.60" y="735.5" ></text>
</g>
<g >
<title>ext4_xattr_get (1 samples, 0.02%)</title><rect x="660.6" y="485" width="0.2" height="15.0" fill="rgb(211,106,0)" rx="2" ry="2" />
<text  x="663.55" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (78 samples, 1.62%)</title><rect x="11.0" y="917" width="19.1" height="15.0" fill="rgb(243,157,2)" rx="2" ry="2" />
<text  x="13.98" y="927.5" ></text>
</g>
<g >
<title>ext4_getblk (1 samples, 0.02%)</title><rect x="796.6" y="533" width="0.2" height="15.0" fill="rgb(229,97,2)" rx="2" ry="2" />
<text  x="799.59" y="543.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (186 samples, 3.86%)</title><rect x="175.1" y="581" width="45.6" height="15.0" fill="rgb(213,167,31)" rx="2" ry="2" />
<text  x="178.15" y="591.5" >ext4..</text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1 samples, 0.02%)</title><rect x="762.6" y="789" width="0.2" height="15.0" fill="rgb(249,96,25)" rx="2" ry="2" />
<text  x="765.58" y="799.5" ></text>
</g>
<g >
<title>ext4_inode_csum (10 samples, 0.21%)</title><rect x="717.1" y="437" width="2.4" height="15.0" fill="rgb(236,98,45)" rx="2" ry="2" />
<text  x="720.07" y="447.5" ></text>
</g>
<g >
<title>__alloc_file (3 samples, 0.06%)</title><rect x="736.2" y="501" width="0.7" height="15.0" fill="rgb(221,45,2)" rx="2" ry="2" />
<text  x="739.15" y="511.5" ></text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.02%)</title><rect x="1101.7" y="949" width="0.2" height="15.0" fill="rgb(245,43,45)" rx="2" ry="2" />
<text  x="1104.68" y="959.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (4 samples, 0.08%)</title><rect x="863.1" y="261" width="1.0" height="15.0" fill="rgb(214,149,17)" rx="2" ry="2" />
<text  x="866.13" y="271.5" ></text>
</g>
<g >
<title>event_function_call (1 samples, 0.02%)</title><rect x="35.9" y="917" width="0.3" height="15.0" fill="rgb(226,92,12)" rx="2" ry="2" />
<text  x="38.93" y="927.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1 samples, 0.02%)</title><rect x="171.7" y="981" width="0.3" height="15.0" fill="rgb(226,107,45)" rx="2" ry="2" />
<text  x="174.72" y="991.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (40 samples, 0.83%)</title><rect x="208.2" y="517" width="9.8" height="15.0" fill="rgb(252,19,45)" rx="2" ry="2" />
<text  x="211.18" y="527.5" ></text>
</g>
<g >
<title>ip_list_rcv (3 samples, 0.06%)</title><rect x="1112.9" y="709" width="0.8" height="15.0" fill="rgb(211,224,51)" rx="2" ry="2" />
<text  x="1115.93" y="719.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.02%)</title><rect x="109.6" y="917" width="0.2" height="15.0" fill="rgb(221,192,11)" rx="2" ry="2" />
<text  x="112.58" y="927.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (25 samples, 0.52%)</title><rect x="882.5" y="373" width="6.1" height="15.0" fill="rgb(211,181,9)" rx="2" ry="2" />
<text  x="885.46" y="383.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="46.5" y="789" width="0.2" height="15.0" fill="rgb(224,6,26)" rx="2" ry="2" />
<text  x="49.45" y="799.5" ></text>
</g>
<g >
<title>rcu_do_batch (11 samples, 0.23%)</title><rect x="1106.3" y="917" width="2.7" height="15.0" fill="rgb(252,94,50)" rx="2" ry="2" />
<text  x="1109.33" y="927.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (34 samples, 0.70%)</title><rect x="234.4" y="501" width="8.3" height="15.0" fill="rgb(216,206,26)" rx="2" ry="2" />
<text  x="237.35" y="511.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (76 samples, 1.58%)</title><rect x="838.4" y="341" width="18.6" height="15.0" fill="rgb(218,160,15)" rx="2" ry="2" />
<text  x="841.42" y="351.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.02%)</title><rect x="10.2" y="805" width="0.3" height="15.0" fill="rgb(253,29,36)" rx="2" ry="2" />
<text  x="13.24" y="815.5" ></text>
</g>
<g >
<title>ovl_llseek (1 samples, 0.02%)</title><rect x="153.1" y="741" width="0.3" height="15.0" fill="rgb(254,213,40)" rx="2" ry="2" />
<text  x="156.13" y="751.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.10%)</title><rect x="947.3" y="389" width="1.2" height="15.0" fill="rgb(214,32,53)" rx="2" ry="2" />
<text  x="950.30" y="399.5" ></text>
</g>
<g >
<title>ext4_da_write_end (6 samples, 0.12%)</title><rect x="33.5" y="661" width="1.5" height="15.0" fill="rgb(234,208,12)" rx="2" ry="2" />
<text  x="36.49" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.06%)</title><rect x="940.9" y="389" width="0.8" height="15.0" fill="rgb(225,79,14)" rx="2" ry="2" />
<text  x="943.94" y="399.5" ></text>
</g>
<g >
<title>psi_task_switch (2 samples, 0.04%)</title><rect x="1160.4" y="933" width="0.5" height="15.0" fill="rgb(242,109,18)" rx="2" ry="2" />
<text  x="1163.40" y="943.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (1 samples, 0.02%)</title><rect x="748.4" y="373" width="0.2" height="15.0" fill="rgb(247,17,45)" rx="2" ry="2" />
<text  x="751.39" y="383.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="223.1" y="501" width="0.5" height="15.0" fill="rgb(230,81,40)" rx="2" ry="2" />
<text  x="226.10" y="511.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (758 samples, 15.72%)</title><rect x="822.5" y="565" width="185.5" height="15.0" fill="rgb(215,59,33)" rx="2" ry="2" />
<text  x="825.52" y="575.5" >&lt;&amp;mut serde_json::ser::S..</text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (3,446 samples, 71.45%)</title><rect x="172.7" y="901" width="843.1" height="15.0" fill="rgb(223,1,15)" rx="2" ry="2" />
<text  x="175.70" y="911.5" >rustposix::safeposix::dispatcher::dispatcher::{{closure}}</text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="107.9" y="837" width="0.2" height="15.0" fill="rgb(213,54,16)" rx="2" ry="2" />
<text  x="110.86" y="847.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="169.3" y="725" width="0.2" height="15.0" fill="rgb(205,116,28)" rx="2" ry="2" />
<text  x="172.27" y="735.5" ></text>
</g>
<g >
<title>ovl_dentry_release (1 samples, 0.02%)</title><rect x="768.9" y="693" width="0.3" height="15.0" fill="rgb(254,137,2)" rx="2" ry="2" />
<text  x="771.94" y="703.5" ></text>
</g>
<g >
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="807.4" y="565" width="0.2" height="15.0" fill="rgb(254,157,38)" rx="2" ry="2" />
<text  x="810.35" y="575.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="1090.9" y="581" width="0.3" height="15.0" fill="rgb(253,89,2)" rx="2" ry="2" />
<text  x="1093.91" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="1091.2" y="677" width="0.2" height="15.0" fill="rgb(254,32,37)" rx="2" ry="2" />
<text  x="1094.16" y="687.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.06%)</title><rect x="108.8" y="757" width="0.8" height="15.0" fill="rgb(228,206,18)" rx="2" ry="2" />
<text  x="111.84" y="767.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (8 samples, 0.17%)</title><rect x="290.4" y="789" width="1.9" height="15.0" fill="rgb(241,80,8)" rx="2" ry="2" />
<text  x="293.38" y="799.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="763.8" y="693" width="0.2" height="15.0" fill="rgb(223,85,26)" rx="2" ry="2" />
<text  x="766.80" y="703.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="740.3" y="421" width="0.3" height="15.0" fill="rgb(254,211,29)" rx="2" ry="2" />
<text  x="743.31" y="431.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.02%)</title><rect x="1105.1" y="821" width="0.2" height="15.0" fill="rgb(241,76,44)" rx="2" ry="2" />
<text  x="1108.10" y="831.5" ></text>
</g>
<g >
<title>kernel_fpu_begin (1 samples, 0.02%)</title><rect x="800.5" y="517" width="0.2" height="15.0" fill="rgb(254,220,39)" rx="2" ry="2" />
<text  x="803.50" y="527.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="1104.4" y="885" width="0.2" height="15.0" fill="rgb(210,132,25)" rx="2" ry="2" />
<text  x="1107.37" y="895.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="231.4" y="469" width="0.3" height="15.0" fill="rgb(216,81,35)" rx="2" ry="2" />
<text  x="234.42" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (294 samples, 6.10%)</title><rect x="659.1" y="821" width="71.9" height="15.0" fill="rgb(248,74,43)" rx="2" ry="2" />
<text  x="662.09" y="831.5" >std::sys..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (1 samples, 0.02%)</title><rect x="172.7" y="869" width="0.2" height="15.0" fill="rgb(227,158,49)" rx="2" ry="2" />
<text  x="175.70" y="879.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (1 samples, 0.02%)</title><rect x="1161.1" y="965" width="0.3" height="15.0" fill="rgb(248,59,54)" rx="2" ry="2" />
<text  x="1164.13" y="975.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.08%)</title><rect x="866.3" y="421" width="1.0" height="15.0" fill="rgb(233,69,54)" rx="2" ry="2" />
<text  x="869.31" y="431.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect x="1090.7" y="597" width="0.5" height="15.0" fill="rgb(245,218,29)" rx="2" ry="2" />
<text  x="1093.67" y="607.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (4 samples, 0.08%)</title><rect x="799.3" y="565" width="1.0" height="15.0" fill="rgb(229,209,20)" rx="2" ry="2" />
<text  x="802.28" y="575.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="731.3" y="709" width="0.2" height="15.0" fill="rgb(240,141,47)" rx="2" ry="2" />
<text  x="734.26" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.17%)</title><rect x="732.2" y="741" width="2.0" height="15.0" fill="rgb(231,2,31)" rx="2" ry="2" />
<text  x="735.24" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="824.5" y="405" width="0.5" height="15.0" fill="rgb(217,191,2)" rx="2" ry="2" />
<text  x="827.48" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 0.17%)</title><rect x="860.9" y="197" width="2.0" height="15.0" fill="rgb(206,208,42)" rx="2" ry="2" />
<text  x="863.93" y="207.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (4 samples, 0.08%)</title><rect x="1092.1" y="997" width="1.0" height="15.0" fill="rgb(212,30,14)" rx="2" ry="2" />
<text  x="1095.14" y="1007.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (4 samples, 0.08%)</title><rect x="664.0" y="517" width="1.0" height="15.0" fill="rgb(214,115,50)" rx="2" ry="2" />
<text  x="666.98" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.17%)</title><rect x="1009.4" y="533" width="2.0" height="15.0" fill="rgb(206,125,40)" rx="2" ry="2" />
<text  x="1012.44" y="543.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="1090.4" y="597" width="0.3" height="15.0" fill="rgb(241,195,42)" rx="2" ry="2" />
<text  x="1093.42" y="607.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (3 samples, 0.06%)</title><rect x="108.8" y="837" width="0.8" height="15.0" fill="rgb(213,83,41)" rx="2" ry="2" />
<text  x="111.84" y="847.5" ></text>
</g>
<g >
<title>ns_capable_common (1 samples, 0.02%)</title><rect x="801.2" y="581" width="0.3" height="15.0" fill="rgb(231,142,13)" rx="2" ry="2" />
<text  x="804.23" y="591.5" ></text>
</g>
<g >
<title>ext4_inode_block_valid (1 samples, 0.02%)</title><rect x="796.6" y="485" width="0.2" height="15.0" fill="rgb(245,55,9)" rx="2" ry="2" />
<text  x="799.59" y="495.5" ></text>
</g>
<g >
<title>ns_capable_common (1 samples, 0.02%)</title><rect x="808.1" y="565" width="0.2" height="15.0" fill="rgb(218,2,10)" rx="2" ry="2" />
<text  x="811.08" y="575.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (244 samples, 5.06%)</title><rect x="878.1" y="469" width="59.7" height="15.0" fill="rgb(232,202,45)" rx="2" ry="2" />
<text  x="881.06" y="479.5" >&lt;serde..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="817.6" y="453" width="0.3" height="15.0" fill="rgb(215,205,25)" rx="2" ry="2" />
<text  x="820.63" y="463.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="830.1" y="357" width="0.2" height="15.0" fill="rgb(212,22,51)" rx="2" ry="2" />
<text  x="833.10" y="367.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="864.1" y="357" width="0.7" height="15.0" fill="rgb(238,192,35)" rx="2" ry="2" />
<text  x="867.11" y="367.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="108.6" y="613" width="0.2" height="15.0" fill="rgb(241,97,17)" rx="2" ry="2" />
<text  x="111.60" y="623.5" ></text>
</g>
<g >
<title>__update_blocked_fair (3 samples, 0.06%)</title><rect x="1188.8" y="821" width="0.7" height="15.0" fill="rgb(246,47,40)" rx="2" ry="2" />
<text  x="1191.78" y="831.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1 samples, 0.02%)</title><rect x="53.3" y="1013" width="0.2" height="15.0" fill="rgb(212,33,36)" rx="2" ry="2" />
<text  x="56.30" y="1023.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.06%)</title><rect x="857.0" y="341" width="0.8" height="15.0" fill="rgb(252,59,2)" rx="2" ry="2" />
<text  x="860.02" y="351.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="115.9" y="453" width="0.3" height="15.0" fill="rgb(232,176,33)" rx="2" ry="2" />
<text  x="118.94" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.06%)</title><rect x="1007.2" y="469" width="0.8" height="15.0" fill="rgb(222,226,12)" rx="2" ry="2" />
<text  x="1010.24" y="479.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="657.4" y="741" width="0.2" height="15.0" fill="rgb(244,90,51)" rx="2" ry="2" />
<text  x="660.37" y="751.5" ></text>
</g>
<g >
<title>update_group_capacity (1 samples, 0.02%)</title><rect x="1187.3" y="789" width="0.3" height="15.0" fill="rgb(216,175,15)" rx="2" ry="2" />
<text  x="1190.31" y="799.5" ></text>
</g>
<g >
<title>schedule_idle (13 samples, 0.27%)</title><rect x="1186.8" y="901" width="3.2" height="15.0" fill="rgb(250,37,49)" rx="2" ry="2" />
<text  x="1189.82" y="911.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (1 samples, 0.02%)</title><rect x="1090.2" y="837" width="0.2" height="15.0" fill="rgb(230,54,28)" rx="2" ry="2" />
<text  x="1093.18" y="847.5" ></text>
</g>
<g >
<title>security_inode_getsecurity (1 samples, 0.02%)</title><rect x="659.6" y="549" width="0.2" height="15.0" fill="rgb(226,62,52)" rx="2" ry="2" />
<text  x="662.57" y="559.5" ></text>
</g>
<g >
<title>lookup_one_len (6 samples, 0.12%)</title><rect x="747.4" y="501" width="1.5" height="15.0" fill="rgb(254,211,24)" rx="2" ry="2" />
<text  x="750.41" y="511.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="1091.4" y="997" width="0.2" height="15.0" fill="rgb(222,3,16)" rx="2" ry="2" />
<text  x="1094.40" y="1007.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (21 samples, 0.44%)</title><rect x="30.6" y="693" width="5.1" height="15.0" fill="rgb(213,44,19)" rx="2" ry="2" />
<text  x="33.55" y="703.5" ></text>
</g>
<g >
<title>lind_close (1 samples, 0.02%)</title><rect x="1090.2" y="885" width="0.2" height="15.0" fill="rgb(252,64,8)" rx="2" ry="2" />
<text  x="1093.18" y="895.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="821.3" y="485" width="0.5" height="15.0" fill="rgb(221,143,49)" rx="2" ry="2" />
<text  x="824.30" y="495.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.02%)</title><rect x="806.9" y="597" width="0.2" height="15.0" fill="rgb(252,7,18)" rx="2" ry="2" />
<text  x="809.86" y="607.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (11 samples, 0.23%)</title><rect x="814.9" y="533" width="2.7" height="15.0" fill="rgb(247,25,50)" rx="2" ry="2" />
<text  x="817.93" y="543.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="712.9" y="485" width="0.3" height="15.0" fill="rgb(237,55,52)" rx="2" ry="2" />
<text  x="715.91" y="495.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.02%)</title><rect x="103.7" y="837" width="0.2" height="15.0" fill="rgb(230,133,18)" rx="2" ry="2" />
<text  x="106.71" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (294 samples, 6.10%)</title><rect x="659.1" y="773" width="71.9" height="15.0" fill="rgb(250,75,5)" rx="2" ry="2" />
<text  x="662.09" y="783.5" >entry_SY..</text>
</g>
<g >
<title>__destroy_inode (2 samples, 0.04%)</title><rect x="770.7" y="645" width="0.4" height="15.0" fill="rgb(234,60,16)" rx="2" ry="2" />
<text  x="773.65" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c (1 samples, 0.02%)</title><rect x="1089.4" y="1013" width="0.3" height="15.0" fill="rgb(225,148,50)" rx="2" ry="2" />
<text  x="1092.44" y="1023.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.04%)</title><rect x="1080.4" y="853" width="0.5" height="15.0" fill="rgb(238,220,31)" rx="2" ry="2" />
<text  x="1083.39" y="863.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.02%)</title><rect x="1102.7" y="949" width="0.2" height="15.0" fill="rgb(214,169,6)" rx="2" ry="2" />
<text  x="1105.66" y="959.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (24 samples, 0.50%)</title><rect x="1164.1" y="837" width="5.8" height="15.0" fill="rgb(228,172,43)" rx="2" ry="2" />
<text  x="1167.07" y="847.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (2 samples, 0.04%)</title><rect x="742.8" y="437" width="0.4" height="15.0" fill="rgb(222,162,42)" rx="2" ry="2" />
<text  x="745.76" y="447.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (1 samples, 0.02%)</title><rect x="798.5" y="549" width="0.3" height="15.0" fill="rgb(249,224,2)" rx="2" ry="2" />
<text  x="801.54" y="559.5" ></text>
</g>
<g >
<title>alloc_empty_file_noaccount (3 samples, 0.06%)</title><rect x="736.2" y="517" width="0.7" height="15.0" fill="rgb(215,14,46)" rx="2" ry="2" />
<text  x="739.15" y="527.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="202.5" y="485" width="0.3" height="15.0" fill="rgb(249,91,42)" rx="2" ry="2" />
<text  x="205.55" y="495.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.02%)</title><rect x="171.2" y="965" width="0.3" height="15.0" fill="rgb(232,106,53)" rx="2" ry="2" />
<text  x="174.23" y="975.5" ></text>
</g>
<g >
<title>load_balance (7 samples, 0.15%)</title><rect x="1187.1" y="837" width="1.7" height="15.0" fill="rgb(253,28,1)" rx="2" ry="2" />
<text  x="1190.06" y="847.5" ></text>
</g>
<g >
<title>__ext4_check_dir_entry (1 samples, 0.02%)</title><rect x="805.4" y="549" width="0.2" height="15.0" fill="rgb(236,128,33)" rx="2" ry="2" />
<text  x="808.39" y="559.5" ></text>
</g>
<g >
<title>lookup_dcache (1 samples, 0.02%)</title><rect x="748.6" y="485" width="0.3" height="15.0" fill="rgb(236,204,43)" rx="2" ry="2" />
<text  x="751.63" y="495.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="739.1" y="469" width="0.2" height="15.0" fill="rgb(254,110,26)" rx="2" ry="2" />
<text  x="742.09" y="479.5" ></text>
</g>
<g >
<title>unlock_page (2 samples, 0.04%)</title><rect x="729.3" y="565" width="0.5" height="15.0" fill="rgb(207,8,40)" rx="2" ry="2" />
<text  x="732.30" y="575.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge (1 samples, 0.02%)</title><rect x="744.7" y="357" width="0.3" height="15.0" fill="rgb(237,17,50)" rx="2" ry="2" />
<text  x="747.72" y="367.5" ></text>
</g>
<g >
<title>ext4_inode_table (1 samples, 0.02%)</title><rect x="722.2" y="453" width="0.3" height="15.0" fill="rgb(218,37,21)" rx="2" ry="2" />
<text  x="725.21" y="463.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="654.2" y="565" width="0.2" height="15.0" fill="rgb(233,166,32)" rx="2" ry="2" />
<text  x="657.19" y="575.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (10 samples, 0.21%)</title><rect x="105.2" y="917" width="2.4" height="15.0" fill="rgb(217,48,6)" rx="2" ry="2" />
<text  x="108.17" y="927.5" ></text>
</g>
<g >
<title>cmd_record (104 samples, 2.16%)</title><rect x="10.5" y="1013" width="25.4" height="15.0" fill="rgb(241,90,31)" rx="2" ry="2" />
<text  x="13.49" y="1023.5" >c..</text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1114.6" y="757" width="0.3" height="15.0" fill="rgb(242,73,23)" rx="2" ry="2" />
<text  x="1117.64" y="767.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="832.8" y="405" width="0.2" height="15.0" fill="rgb(223,153,18)" rx="2" ry="2" />
<text  x="835.79" y="415.5" ></text>
</g>
<g >
<title>ext4_lookup (7 samples, 0.15%)</title><rect x="796.1" y="597" width="1.7" height="15.0" fill="rgb(231,132,23)" rx="2" ry="2" />
<text  x="799.10" y="607.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (73 samples, 1.51%)</title><rect x="109.8" y="677" width="17.9" height="15.0" fill="rgb(253,201,54)" rx="2" ry="2" />
<text  x="112.82" y="687.5" ></text>
</g>
<g >
<title>ovl_remove_and_whiteout (1 samples, 0.02%)</title><rect x="1090.2" y="613" width="0.2" height="15.0" fill="rgb(213,169,33)" rx="2" ry="2" />
<text  x="1093.18" y="623.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (1 samples, 0.02%)</title><rect x="832.3" y="485" width="0.3" height="15.0" fill="rgb(252,151,33)" rx="2" ry="2" />
<text  x="835.31" y="495.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (102 samples, 2.11%)</title><rect x="195.7" y="565" width="25.0" height="15.0" fill="rgb(214,146,24)" rx="2" ry="2" />
<text  x="198.70" y="575.5" >g..</text>
</g>
<g >
<title>crypto_shash_update (2 samples, 0.04%)</title><rect x="775.3" y="437" width="0.5" height="15.0" fill="rgb(234,35,32)" rx="2" ry="2" />
<text  x="778.30" y="447.5" ></text>
</g>
<g >
<title>step_into (1 samples, 0.02%)</title><rect x="769.9" y="661" width="0.3" height="15.0" fill="rgb(246,108,54)" rx="2" ry="2" />
<text  x="772.92" y="671.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (1 samples, 0.02%)</title><rect x="1185.4" y="853" width="0.2" height="15.0" fill="rgb(238,17,41)" rx="2" ry="2" />
<text  x="1188.35" y="863.5" ></text>
</g>
<g >
<title>cap_capable (1 samples, 0.02%)</title><rect x="808.1" y="549" width="0.2" height="15.0" fill="rgb(240,34,52)" rx="2" ry="2" />
<text  x="811.08" y="559.5" ></text>
</g>
<g >
<title>prepare_task_switch (2 samples, 0.04%)</title><rect x="1159.9" y="933" width="0.5" height="15.0" fill="rgb(254,54,33)" rx="2" ry="2" />
<text  x="1162.91" y="943.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.02%)</title><rect x="756.2" y="629" width="0.3" height="15.0" fill="rgb(213,16,39)" rx="2" ry="2" />
<text  x="759.22" y="639.5" ></text>
</g>
<g >
<title>ext4_getattr (1 samples, 0.02%)</title><rect x="733.7" y="581" width="0.3" height="15.0" fill="rgb(211,193,30)" rx="2" ry="2" />
<text  x="736.71" y="591.5" ></text>
</g>
<g >
<title>perf_ioctl (77 samples, 1.60%)</title><rect x="11.2" y="869" width="18.9" height="15.0" fill="rgb(240,213,28)" rx="2" ry="2" />
<text  x="14.22" y="879.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="1090.7" y="549" width="0.2" height="15.0" fill="rgb(221,143,2)" rx="2" ry="2" />
<text  x="1093.67" y="559.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (91 samples, 1.89%)</title><rect x="771.1" y="581" width="22.3" height="15.0" fill="rgb(225,69,53)" rx="2" ry="2" />
<text  x="774.14" y="591.5" >d..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="946.3" y="389" width="0.5" height="15.0" fill="rgb(225,66,20)" rx="2" ry="2" />
<text  x="949.32" y="399.5" ></text>
</g>
<g >
<title>ext4_drop_inode (1 samples, 0.02%)</title><rect x="771.1" y="533" width="0.3" height="15.0" fill="rgb(221,137,11)" rx="2" ry="2" />
<text  x="774.14" y="543.5" ></text>
</g>
<g >
<title>ovl_remove_and_whiteout (59 samples, 1.22%)</title><rect x="794.4" y="677" width="14.4" height="15.0" fill="rgb(217,92,31)" rx="2" ry="2" />
<text  x="797.38" y="687.5" ></text>
</g>
<g >
<title>start_this_handle (9 samples, 0.19%)</title><rect x="178.3" y="533" width="2.2" height="15.0" fill="rgb(239,204,31)" rx="2" ry="2" />
<text  x="181.33" y="543.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_super (2 samples, 0.04%)</title><rect x="775.3" y="469" width="0.5" height="15.0" fill="rgb(251,25,18)" rx="2" ry="2" />
<text  x="778.30" y="479.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (2 samples, 0.04%)</title><rect x="107.9" y="997" width="0.5" height="15.0" fill="rgb(213,226,48)" rx="2" ry="2" />
<text  x="110.86" y="1007.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.02%)</title><rect x="1017.0" y="901" width="0.3" height="15.0" fill="rgb(230,35,37)" rx="2" ry="2" />
<text  x="1020.02" y="911.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (1 samples, 0.02%)</title><rect x="103.7" y="773" width="0.2" height="15.0" fill="rgb(246,100,36)" rx="2" ry="2" />
<text  x="106.71" y="783.5" ></text>
</g>
<g >
<title>__inc_zone_page_state (1 samples, 0.02%)</title><rect x="711.2" y="469" width="0.2" height="15.0" fill="rgb(210,171,10)" rx="2" ry="2" />
<text  x="714.20" y="479.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.02%)</title><rect x="810.0" y="645" width="0.3" height="15.0" fill="rgb(206,139,43)" rx="2" ry="2" />
<text  x="813.04" y="655.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.15%)</title><rect x="810.8" y="645" width="1.7" height="15.0" fill="rgb(239,96,53)" rx="2" ry="2" />
<text  x="813.78" y="655.5" ></text>
</g>
<g >
<title>NaClStoreMem (1 samples, 0.02%)</title><rect x="109.6" y="821" width="0.2" height="15.0" fill="rgb(253,108,13)" rx="2" ry="2" />
<text  x="112.58" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.04%)</title><rect x="809.6" y="773" width="0.4" height="15.0" fill="rgb(206,226,44)" rx="2" ry="2" />
<text  x="812.55" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="1005.3" y="373" width="0.5" height="15.0" fill="rgb(232,214,9)" rx="2" ry="2" />
<text  x="1008.28" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="831.8" y="357" width="0.3" height="15.0" fill="rgb(242,35,3)" rx="2" ry="2" />
<text  x="834.82" y="367.5" ></text>
</g>
<g >
<title>process_vm_writev (2 samples, 0.04%)</title><rect x="1017.3" y="997" width="0.5" height="15.0" fill="rgb(251,29,0)" rx="2" ry="2" />
<text  x="1020.27" y="1007.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (12 samples, 0.25%)</title><rect x="654.2" y="789" width="2.9" height="15.0" fill="rgb(222,226,42)" rx="2" ry="2" />
<text  x="657.19" y="799.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (51 samples, 1.06%)</title><rect x="157.3" y="853" width="12.5" height="15.0" fill="rgb(238,187,28)" rx="2" ry="2" />
<text  x="160.29" y="863.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (4 samples, 0.08%)</title><rect x="678.9" y="485" width="1.0" height="15.0" fill="rgb(230,132,23)" rx="2" ry="2" />
<text  x="681.90" y="495.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.02%)</title><rect x="1158.7" y="949" width="0.2" height="15.0" fill="rgb(218,88,23)" rx="2" ry="2" />
<text  x="1161.68" y="959.5" ></text>
</g>
<g >
<title>CachedMapWritableText (3 samples, 0.06%)</title><rect x="104.4" y="933" width="0.8" height="15.0" fill="rgb(205,97,1)" rx="2" ry="2" />
<text  x="107.44" y="943.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (85 samples, 1.76%)</title><rect x="132.1" y="645" width="20.8" height="15.0" fill="rgb(222,217,48)" rx="2" ry="2" />
<text  x="135.09" y="655.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="103.7" y="645" width="0.2" height="15.0" fill="rgb(238,184,41)" rx="2" ry="2" />
<text  x="106.71" y="655.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="223.1" y="485" width="0.2" height="15.0" fill="rgb(241,104,24)" rx="2" ry="2" />
<text  x="226.10" y="495.5" ></text>
</g>
<g >
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="248.1" y="581" width="0.2" height="15.0" fill="rgb(217,184,47)" rx="2" ry="2" />
<text  x="251.06" y="591.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (11 samples, 0.23%)</title><rect x="888.6" y="421" width="2.7" height="15.0" fill="rgb(206,89,9)" rx="2" ry="2" />
<text  x="891.58" y="431.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (284 samples, 5.89%)</title><rect x="660.6" y="629" width="69.4" height="15.0" fill="rgb(243,90,40)" rx="2" ry="2" />
<text  x="663.55" y="639.5" >do_iter..</text>
</g>
<g >
<title>NaClSysForkDecoder (1 samples, 0.02%)</title><rect x="109.6" y="997" width="0.2" height="15.0" fill="rgb(206,78,8)" rx="2" ry="2" />
<text  x="112.58" y="1007.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (1 samples, 0.02%)</title><rect x="832.3" y="453" width="0.3" height="15.0" fill="rgb(222,20,27)" rx="2" ry="2" />
<text  x="835.31" y="463.5" ></text>
</g>
<g >
<title>lind_open (73 samples, 1.51%)</title><rect x="109.8" y="949" width="17.9" height="15.0" fill="rgb(252,146,12)" rx="2" ry="2" />
<text  x="112.82" y="959.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (50 samples, 1.04%)</title><rect x="681.8" y="517" width="12.3" height="15.0" fill="rgb(252,68,21)" rx="2" ry="2" />
<text  x="684.84" y="527.5" ></text>
</g>
<g >
<title>strncpy_from_user (2 samples, 0.04%)</title><rect x="808.8" y="725" width="0.5" height="15.0" fill="rgb(232,174,49)" rx="2" ry="2" />
<text  x="811.82" y="735.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (10 samples, 0.21%)</title><rect x="1111.5" y="837" width="2.4" height="15.0" fill="rgb(239,146,14)" rx="2" ry="2" />
<text  x="1114.46" y="847.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="666.4" y="549" width="0.3" height="15.0" fill="rgb(225,124,16)" rx="2" ry="2" />
<text  x="669.43" y="559.5" ></text>
</g>
<g >
<title>capable_wrt_inode_uidgid (1 samples, 0.02%)</title><rect x="808.1" y="581" width="0.2" height="15.0" fill="rgb(211,47,42)" rx="2" ry="2" />
<text  x="811.08" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (1 samples, 0.02%)</title><rect x="1090.4" y="933" width="0.3" height="15.0" fill="rgb(205,114,42)" rx="2" ry="2" />
<text  x="1093.42" y="943.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (1 samples, 0.02%)</title><rect x="46.5" y="805" width="0.2" height="15.0" fill="rgb(233,44,22)" rx="2" ry="2" />
<text  x="49.45" y="815.5" ></text>
</g>
<g >
<title>ext4_handle_dirty_dirblock (4 samples, 0.08%)</title><rect x="752.5" y="453" width="1.0" height="15.0" fill="rgb(250,88,6)" rx="2" ry="2" />
<text  x="755.55" y="463.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (16 samples, 0.33%)</title><rect x="103.9" y="981" width="4.0" height="15.0" fill="rgb(247,98,15)" rx="2" ry="2" />
<text  x="106.95" y="991.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="30.3" y="869" width="0.3" height="15.0" fill="rgb(254,28,33)" rx="2" ry="2" />
<text  x="33.31" y="879.5" ></text>
</g>
<g >
<title>inode_permission (1 samples, 0.02%)</title><rect x="794.1" y="661" width="0.3" height="15.0" fill="rgb(239,168,30)" rx="2" ry="2" />
<text  x="797.14" y="671.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="1112.9" y="405" width="0.3" height="15.0" fill="rgb(229,82,52)" rx="2" ry="2" />
<text  x="1115.93" y="415.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (15 samples, 0.31%)</title><rect x="859.5" y="277" width="3.6" height="15.0" fill="rgb(243,32,18)" rx="2" ry="2" />
<text  x="862.46" y="287.5" ></text>
</g>
<g >
<title>main (1 samples, 0.02%)</title><rect x="10.0" y="997" width="0.2" height="15.0" fill="rgb(215,110,29)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::remove (3 samples, 0.06%)</title><rect x="657.4" y="837" width="0.7" height="15.0" fill="rgb(254,4,5)" rx="2" ry="2" />
<text  x="660.37" y="847.5" ></text>
</g>
<g >
<title>iput (91 samples, 1.89%)</title><rect x="771.1" y="565" width="22.3" height="15.0" fill="rgb(207,119,28)" rx="2" ry="2" />
<text  x="774.14" y="575.5" >i..</text>
</g>
<g >
<title>xas_alloc (3 samples, 0.06%)</title><rect x="689.7" y="437" width="0.7" height="15.0" fill="rgb(241,114,32)" rx="2" ry="2" />
<text  x="692.67" y="447.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="862.9" y="85" width="0.2" height="15.0" fill="rgb(217,38,32)" rx="2" ry="2" />
<text  x="865.89" y="95.5" ></text>
</g>
<g >
<title>NaClThreadInterfaceStart (1 samples, 0.02%)</title><rect x="1089.9" y="997" width="0.3" height="15.0" fill="rgb(228,203,33)" rx="2" ry="2" />
<text  x="1092.93" y="1007.5" ></text>
</g>
<g >
<title>exc_page_fault (3 samples, 0.06%)</title><rect x="104.4" y="853" width="0.8" height="15.0" fill="rgb(223,56,9)" rx="2" ry="2" />
<text  x="107.44" y="863.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="813.7" y="533" width="0.3" height="15.0" fill="rgb(220,221,54)" rx="2" ry="2" />
<text  x="816.71" y="543.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="10.2" y="933" width="0.3" height="15.0" fill="rgb(215,92,19)" rx="2" ry="2" />
<text  x="13.24" y="943.5" ></text>
</g>
<g >
<title>arena_get2.part.0 (1 samples, 0.02%)</title><rect x="1089.9" y="901" width="0.3" height="15.0" fill="rgb(219,174,25)" rx="2" ry="2" />
<text  x="1092.93" y="911.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::_open (87 samples, 1.80%)</title><rect x="734.2" y="805" width="21.3" height="15.0" fill="rgb(229,139,47)" rx="2" ry="2" />
<text  x="737.20" y="815.5" >s..</text>
</g>
<g >
<title>iput (73 samples, 1.51%)</title><rect x="109.8" y="757" width="17.9" height="15.0" fill="rgb(253,41,26)" rx="2" ry="2" />
<text  x="112.82" y="767.5" ></text>
</g>
<g >
<title>dequeue_task_fair (5 samples, 0.10%)</title><rect x="1013.8" y="645" width="1.3" height="15.0" fill="rgb(249,58,6)" rx="2" ry="2" />
<text  x="1016.84" y="655.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (12 samples, 0.25%)</title><rect x="833.0" y="485" width="3.0" height="15.0" fill="rgb(226,123,27)" rx="2" ry="2" />
<text  x="836.04" y="495.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1,463 samples, 30.33%)</title><rect x="653.9" y="869" width="358.0" height="15.0" fill="rgb(243,151,49)" rx="2" ry="2" />
<text  x="656.95" y="879.5" >rustposix::safeposix::filesystem::persist_metadata</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.04%)</title><rect x="814.4" y="501" width="0.5" height="15.0" fill="rgb(253,72,44)" rx="2" ry="2" />
<text  x="817.45" y="511.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (1 samples, 0.02%)</title><rect x="170.7" y="853" width="0.3" height="15.0" fill="rgb(207,54,8)" rx="2" ry="2" />
<text  x="173.74" y="863.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memchr (1 samples, 0.02%)</title><rect x="758.4" y="709" width="0.3" height="15.0" fill="rgb(215,21,51)" rx="2" ry="2" />
<text  x="761.42" y="719.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.02%)</title><rect x="1186.1" y="901" width="0.2" height="15.0" fill="rgb(226,9,21)" rx="2" ry="2" />
<text  x="1189.09" y="911.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (39 samples, 0.81%)</title><rect x="928.2" y="293" width="9.6" height="15.0" fill="rgb(248,80,1)" rx="2" ry="2" />
<text  x="931.21" y="303.5" ></text>
</g>
<g >
<title>&lt;std::path::PathBuf as core::iter::traits::collect::Extend&lt;P&gt;&gt;::extend::{{closure}} (1 samples, 0.02%)</title><rect x="762.6" y="773" width="0.2" height="15.0" fill="rgb(252,121,36)" rx="2" ry="2" />
<text  x="765.58" y="783.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="731.5" y="805" width="0.2" height="15.0" fill="rgb(210,199,24)" rx="2" ry="2" />
<text  x="734.51" y="815.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.02%)</title><rect x="1092.1" y="789" width="0.3" height="15.0" fill="rgb(213,36,18)" rx="2" ry="2" />
<text  x="1095.14" y="799.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (105 samples, 2.18%)</title><rect x="838.4" y="389" width="25.7" height="15.0" fill="rgb(234,158,50)" rx="2" ry="2" />
<text  x="841.42" y="399.5" >s..</text>
</g>
<g >
<title>native_write_msr (63 samples, 1.31%)</title><rect x="14.6" y="661" width="15.5" height="15.0" fill="rgb(229,142,31)" rx="2" ry="2" />
<text  x="17.65" y="671.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (1 samples, 0.02%)</title><rect x="1092.9" y="661" width="0.2" height="15.0" fill="rgb(244,14,2)" rx="2" ry="2" />
<text  x="1095.87" y="671.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="1090.4" y="789" width="0.3" height="15.0" fill="rgb(214,173,24)" rx="2" ry="2" />
<text  x="1093.42" y="799.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.04%)</title><rect x="831.8" y="501" width="0.5" height="15.0" fill="rgb(215,158,21)" rx="2" ry="2" />
<text  x="834.82" y="511.5" ></text>
</g>
<g >
<title>ext4_es_find_extent_range (1 samples, 0.02%)</title><rect x="676.7" y="501" width="0.2" height="15.0" fill="rgb(222,228,35)" rx="2" ry="2" />
<text  x="679.70" y="511.5" ></text>
</g>
<g >
<title>dput (3 samples, 0.06%)</title><rect x="768.4" y="725" width="0.8" height="15.0" fill="rgb(213,63,26)" rx="2" ry="2" />
<text  x="771.45" y="735.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampolineCall (1 samples, 0.02%)</title><rect x="109.6" y="869" width="0.2" height="15.0" fill="rgb(240,134,38)" rx="2" ry="2" />
<text  x="112.58" y="879.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="658.8" y="821" width="0.3" height="15.0" fill="rgb(243,135,28)" rx="2" ry="2" />
<text  x="661.84" y="831.5" ></text>
</g>
<g >
<title>ovl_write_iter (21 samples, 0.44%)</title><rect x="30.6" y="773" width="5.1" height="15.0" fill="rgb(206,63,25)" rx="2" ry="2" />
<text  x="33.55" y="783.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (2 samples, 0.04%)</title><rect x="187.6" y="453" width="0.5" height="15.0" fill="rgb(207,79,9)" rx="2" ry="2" />
<text  x="190.62" y="463.5" ></text>
</g>
<g >
<title>lind (1 samples, 0.02%)</title><rect x="10.0" y="1045" width="0.2" height="15.0" fill="rgb(234,125,52)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.02%)</title><rect x="810.3" y="613" width="0.2" height="15.0" fill="rgb(219,119,16)" rx="2" ry="2" />
<text  x="813.29" y="623.5" ></text>
</g>
<g >
<title>NaClLoadTrampoline (1 samples, 0.02%)</title><rect x="109.6" y="901" width="0.2" height="15.0" fill="rgb(250,32,34)" rx="2" ry="2" />
<text  x="112.58" y="911.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="1100.7" y="853" width="0.2" height="15.0" fill="rgb(207,14,17)" rx="2" ry="2" />
<text  x="1103.70" y="863.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.02%)</title><rect x="232.2" y="517" width="0.2" height="15.0" fill="rgb(227,18,14)" rx="2" ry="2" />
<text  x="235.15" y="527.5" ></text>
</g>
<g >
<title>__GI_getenv (1 samples, 0.02%)</title><rect x="10.2" y="949" width="0.3" height="15.0" fill="rgb(236,150,26)" rx="2" ry="2" />
<text  x="13.24" y="959.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.02%)</title><rect x="742.3" y="437" width="0.2" height="15.0" fill="rgb(251,10,43)" rx="2" ry="2" />
<text  x="745.27" y="447.5" ></text>
</g>
<g >
<title>find_busiest_group (2 samples, 0.04%)</title><rect x="1109.3" y="901" width="0.5" height="15.0" fill="rgb(221,192,2)" rx="2" ry="2" />
<text  x="1112.26" y="911.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="831.6" y="501" width="0.2" height="15.0" fill="rgb(251,70,10)" rx="2" ry="2" />
<text  x="834.57" y="511.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (11 samples, 0.23%)</title><rect x="814.9" y="517" width="2.7" height="15.0" fill="rgb(226,47,25)" rx="2" ry="2" />
<text  x="817.93" y="527.5" ></text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (3 samples, 0.06%)</title><rect x="104.4" y="917" width="0.8" height="15.0" fill="rgb(224,73,46)" rx="2" ry="2" />
<text  x="107.44" y="927.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="38.6" y="981" width="0.3" height="15.0" fill="rgb(214,160,27)" rx="2" ry="2" />
<text  x="41.63" y="991.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (3 samples, 0.06%)</title><rect x="829.4" y="485" width="0.7" height="15.0" fill="rgb(247,163,40)" rx="2" ry="2" />
<text  x="832.37" y="495.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="108.1" y="645" width="0.3" height="15.0" fill="rgb(251,108,34)" rx="2" ry="2" />
<text  x="111.11" y="655.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (3 samples, 0.06%)</title><rect x="32.5" y="597" width="0.7" height="15.0" fill="rgb(216,56,2)" rx="2" ry="2" />
<text  x="35.51" y="607.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (29 samples, 0.60%)</title><rect x="813.7" y="597" width="7.1" height="15.0" fill="rgb(230,163,27)" rx="2" ry="2" />
<text  x="816.71" y="607.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (90 samples, 1.87%)</title><rect x="72.9" y="949" width="22.0" height="15.0" fill="rgb(209,161,53)" rx="2" ry="2" />
<text  x="75.88" y="959.5" >c..</text>
</g>
<g >
<title>filename_lookup (9 samples, 0.19%)</title><rect x="764.8" y="677" width="2.2" height="15.0" fill="rgb(242,80,12)" rx="2" ry="2" />
<text  x="767.78" y="687.5" ></text>
</g>
<g >
<title>ext4_map_blocks (1 samples, 0.02%)</title><rect x="803.7" y="501" width="0.2" height="15.0" fill="rgb(215,58,5)" rx="2" ry="2" />
<text  x="806.68" y="511.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.02%)</title><rect x="1017.0" y="837" width="0.3" height="15.0" fill="rgb(206,32,19)" rx="2" ry="2" />
<text  x="1020.02" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (12 samples, 0.25%)</title><rect x="654.2" y="725" width="2.9" height="15.0" fill="rgb(227,212,24)" rx="2" ry="2" />
<text  x="657.19" y="735.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2 samples, 0.04%)</title><rect x="1101.2" y="933" width="0.5" height="15.0" fill="rgb(205,111,32)" rx="2" ry="2" />
<text  x="1104.19" y="943.5" ></text>
</g>
<g >
<title>ext4_orphan_del (3 samples, 0.06%)</title><rect x="775.3" y="485" width="0.7" height="15.0" fill="rgb(238,23,25)" rx="2" ry="2" />
<text  x="778.30" y="495.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.15%)</title><rect x="50.9" y="949" width="1.7" height="15.0" fill="rgb(241,114,17)" rx="2" ry="2" />
<text  x="53.86" y="959.5" ></text>
</g>
<g >
<title>dispatcher (73 samples, 1.51%)</title><rect x="109.8" y="933" width="17.9" height="15.0" fill="rgb(233,1,29)" rx="2" ry="2" />
<text  x="112.82" y="943.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (9 samples, 0.19%)</title><rect x="31.3" y="661" width="2.2" height="15.0" fill="rgb(250,32,32)" rx="2" ry="2" />
<text  x="34.29" y="671.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="757.7" y="629" width="0.2" height="15.0" fill="rgb(210,186,24)" rx="2" ry="2" />
<text  x="760.68" y="639.5" ></text>
</g>
<g >
<title>drain_obj_stock (1 samples, 0.02%)</title><rect x="790.5" y="293" width="0.2" height="15.0" fill="rgb(246,190,18)" rx="2" ry="2" />
<text  x="793.47" y="303.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (8 samples, 0.17%)</title><rect x="239.0" y="421" width="2.0" height="15.0" fill="rgb(250,119,53)" rx="2" ry="2" />
<text  x="242.00" y="431.5" ></text>
</g>
<g >
<title>udpv6_queue_rcv_one_skb (1 samples, 0.02%)</title><rect x="1113.7" y="533" width="0.2" height="15.0" fill="rgb(233,138,6)" rx="2" ry="2" />
<text  x="1116.67" y="543.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect x="1090.7" y="709" width="0.5" height="15.0" fill="rgb(244,129,20)" rx="2" ry="2" />
<text  x="1093.67" y="719.5" ></text>
</g>
<g >
<title>perf (105 samples, 2.18%)</title><rect x="10.5" y="1045" width="25.7" height="15.0" fill="rgb(208,192,12)" rx="2" ry="2" />
<text  x="13.49" y="1055.5" >p..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (152 samples, 3.15%)</title><rect x="963.9" y="469" width="37.2" height="15.0" fill="rgb(220,123,17)" rx="2" ry="2" />
<text  x="966.93" y="479.5" >&lt;&amp;m..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.06%)</title><rect x="940.9" y="373" width="0.8" height="15.0" fill="rgb(226,24,29)" rx="2" ry="2" />
<text  x="943.94" y="383.5" ></text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (3 samples, 0.06%)</title><rect x="104.4" y="901" width="0.8" height="15.0" fill="rgb(234,57,6)" rx="2" ry="2" />
<text  x="107.44" y="911.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (20 samples, 0.41%)</title><rect x="858.2" y="309" width="4.9" height="15.0" fill="rgb(242,207,30)" rx="2" ry="2" />
<text  x="861.24" y="319.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (1 samples, 0.02%)</title><rect x="108.1" y="757" width="0.3" height="15.0" fill="rgb(212,163,16)" rx="2" ry="2" />
<text  x="111.11" y="767.5" ></text>
</g>
<g >
<title>crc_126 (1 samples, 0.02%)</title><rect x="751.8" y="405" width="0.3" height="15.0" fill="rgb(210,187,28)" rx="2" ry="2" />
<text  x="754.81" y="415.5" ></text>
</g>
<g >
<title>handle_pte_fault (3 samples, 0.06%)</title><rect x="104.4" y="789" width="0.8" height="15.0" fill="rgb(240,166,16)" rx="2" ry="2" />
<text  x="107.44" y="799.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (35 samples, 0.73%)</title><rect x="196.7" y="517" width="8.5" height="15.0" fill="rgb(245,121,18)" rx="2" ry="2" />
<text  x="199.68" y="527.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="1007.5" y="453" width="0.5" height="15.0" fill="rgb(230,170,8)" rx="2" ry="2" />
<text  x="1010.48" y="463.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (2 samples, 0.04%)</title><rect x="700.9" y="453" width="0.5" height="15.0" fill="rgb(208,18,18)" rx="2" ry="2" />
<text  x="703.92" y="463.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="1092.9" y="741" width="0.2" height="15.0" fill="rgb(246,165,45)" rx="2" ry="2" />
<text  x="1095.87" y="751.5" ></text>
</g>
<g >
<title>newidle_balance (3 samples, 0.06%)</title><rect x="1104.9" y="901" width="0.7" height="15.0" fill="rgb(223,203,7)" rx="2" ry="2" />
<text  x="1107.86" y="911.5" ></text>
</g>
<g >
<title>xas_find_conflict (1 samples, 0.02%)</title><rect x="688.2" y="485" width="0.2" height="15.0" fill="rgb(212,177,19)" rx="2" ry="2" />
<text  x="691.20" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.21%)</title><rect x="833.0" y="277" width="2.5" height="15.0" fill="rgb(212,146,46)" rx="2" ry="2" />
<text  x="836.04" y="287.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.04%)</title><rect x="814.0" y="533" width="0.4" height="15.0" fill="rgb(214,152,25)" rx="2" ry="2" />
<text  x="816.96" y="543.5" ></text>
</g>
<g >
<title>set_next_task_fair (1 samples, 0.02%)</title><rect x="1092.6" y="853" width="0.3" height="15.0" fill="rgb(238,60,29)" rx="2" ry="2" />
<text  x="1095.62" y="863.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (67 samples, 1.39%)</title><rect x="963.9" y="405" width="16.4" height="15.0" fill="rgb(221,26,54)" rx="2" ry="2" />
<text  x="966.93" y="415.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.02%)</title><rect x="107.9" y="933" width="0.2" height="15.0" fill="rgb(210,18,25)" rx="2" ry="2" />
<text  x="110.86" y="943.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.21%)</title><rect x="833.0" y="245" width="2.5" height="15.0" fill="rgb(229,224,10)" rx="2" ry="2" />
<text  x="836.04" y="255.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (2 samples, 0.04%)</title><rect x="1017.8" y="965" width="0.4" height="15.0" fill="rgb(216,181,0)" rx="2" ry="2" />
<text  x="1020.76" y="975.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="731.0" y="645" width="0.3" height="15.0" fill="rgb(254,6,51)" rx="2" ry="2" />
<text  x="734.02" y="655.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="1184.4" y="869" width="0.2" height="15.0" fill="rgb(216,3,53)" rx="2" ry="2" />
<text  x="1187.37" y="879.5" ></text>
</g>
<g >
<title>open_with_fake_path (4 samples, 0.08%)</title><rect x="736.2" y="533" width="0.9" height="15.0" fill="rgb(233,67,2)" rx="2" ry="2" />
<text  x="739.15" y="543.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (1 samples, 0.02%)</title><rect x="1017.0" y="997" width="0.3" height="15.0" fill="rgb(221,53,20)" rx="2" ry="2" />
<text  x="1020.02" y="1007.5" ></text>
</g>
<g >
<title>dx_probe (2 samples, 0.04%)</title><rect x="750.8" y="421" width="0.5" height="15.0" fill="rgb(232,45,6)" rx="2" ry="2" />
<text  x="753.83" y="431.5" ></text>
</g>
<g >
<title>ext4_has_free_clusters (1 samples, 0.02%)</title><rect x="194.0" y="469" width="0.2" height="15.0" fill="rgb(250,142,37)" rx="2" ry="2" />
<text  x="196.99" y="479.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (27 samples, 0.56%)</title><rect x="276.4" y="837" width="6.6" height="15.0" fill="rgb(251,167,18)" rx="2" ry="2" />
<text  x="279.44" y="847.5" ></text>
</g>
<g >
<title>ext4_inode_csum (2 samples, 0.04%)</title><rect x="799.5" y="501" width="0.5" height="15.0" fill="rgb(237,226,20)" rx="2" ry="2" />
<text  x="802.52" y="511.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="108.6" y="693" width="0.2" height="15.0" fill="rgb(231,85,22)" rx="2" ry="2" />
<text  x="111.60" y="703.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (2 samples, 0.04%)</title><rect x="1109.3" y="885" width="0.5" height="15.0" fill="rgb(227,32,6)" rx="2" ry="2" />
<text  x="1112.26" y="895.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="743.2" y="421" width="0.3" height="15.0" fill="rgb(246,92,36)" rx="2" ry="2" />
<text  x="746.25" y="431.5" ></text>
</g>
<g >
<title>create_empty_buffers (2 samples, 0.04%)</title><rect x="31.8" y="629" width="0.5" height="15.0" fill="rgb(218,12,2)" rx="2" ry="2" />
<text  x="34.77" y="639.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="761.8" y="821" width="0.3" height="15.0" fill="rgb(215,104,53)" rx="2" ry="2" />
<text  x="764.84" y="831.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.02%)</title><rect x="1114.6" y="805" width="0.3" height="15.0" fill="rgb(243,15,11)" rx="2" ry="2" />
<text  x="1117.64" y="815.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.02%)</title><rect x="1091.2" y="773" width="0.2" height="15.0" fill="rgb(244,16,21)" rx="2" ry="2" />
<text  x="1094.16" y="783.5" ></text>
</g>
<g >
<title>iput_final (96 samples, 1.99%)</title><rect x="770.2" y="693" width="23.4" height="15.0" fill="rgb(247,111,3)" rx="2" ry="2" />
<text  x="773.16" y="703.5" >i..</text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="739.1" y="453" width="0.2" height="15.0" fill="rgb(229,46,31)" rx="2" ry="2" />
<text  x="742.09" y="463.5" ></text>
</g>
<g >
<title>do_unlinkat (166 samples, 3.44%)</title><rect x="768.2" y="741" width="40.6" height="15.0" fill="rgb(235,103,52)" rx="2" ry="2" />
<text  x="771.20" y="751.5" >do_..</text>
</g>
<g >
<title>__ext4fs_dirhash (1 samples, 0.02%)</title><rect x="804.4" y="517" width="0.3" height="15.0" fill="rgb(206,167,20)" rx="2" ry="2" />
<text  x="807.41" y="527.5" ></text>
</g>
<g >
<title>ext4_es_can_be_merged.isra.0 (2 samples, 0.04%)</title><rect x="195.0" y="485" width="0.5" height="15.0" fill="rgb(250,25,27)" rx="2" ry="2" />
<text  x="197.96" y="495.5" ></text>
</g>
<g >
<title>do_unlinkat (1 samples, 0.02%)</title><rect x="1091.9" y="981" width="0.2" height="15.0" fill="rgb(225,89,40)" rx="2" ry="2" />
<text  x="1094.89" y="991.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (825 samples, 17.11%)</title><rect x="810.0" y="773" width="201.9" height="15.0" fill="rgb(223,147,53)" rx="2" ry="2" />
<text  x="813.04" y="783.5" >&lt;serde_json::ser::Compound..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (15 samples, 0.31%)</title><rect x="938.2" y="469" width="3.7" height="15.0" fill="rgb(226,222,28)" rx="2" ry="2" />
<text  x="941.24" y="479.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (775 samples, 16.07%)</title><rect x="821.8" y="613" width="189.6" height="15.0" fill="rgb(239,98,41)" rx="2" ry="2" />
<text  x="824.79" y="623.5" >&lt;serde_json::ser::Compou..</text>
</g>
<g >
<title>ext4_mark_iloc_dirty (27 samples, 0.56%)</title><rect x="713.4" y="485" width="6.6" height="15.0" fill="rgb(250,104,0)" rx="2" ry="2" />
<text  x="716.40" y="495.5" ></text>
</g>
<g >
<title>__futex_abstimed_wait_common64 (15 samples, 0.31%)</title><rect x="1012.1" y="805" width="3.7" height="15.0" fill="rgb(247,47,41)" rx="2" ry="2" />
<text  x="1015.13" y="815.5" ></text>
</g>
<g >
<title>filename_lookup (2 samples, 0.04%)</title><rect x="732.5" y="645" width="0.5" height="15.0" fill="rgb(250,111,53)" rx="2" ry="2" />
<text  x="735.48" y="655.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="1103.1" y="933" width="0.3" height="15.0" fill="rgb(254,60,1)" rx="2" ry="2" />
<text  x="1106.15" y="943.5" ></text>
</g>
<g >
<title>cpu_startup_entry (116 samples, 2.41%)</title><rect x="1161.6" y="933" width="28.4" height="15.0" fill="rgb(234,46,12)" rx="2" ry="2" />
<text  x="1164.62" y="943.5" >cp..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (265 samples, 5.49%)</title><rect x="941.9" y="501" width="64.8" height="15.0" fill="rgb(211,210,22)" rx="2" ry="2" />
<text  x="944.91" y="511.5" >&lt;serde_..</text>
</g>
<g >
<title>ext4_inode_csum (1 samples, 0.02%)</title><rect x="752.3" y="389" width="0.2" height="15.0" fill="rgb(226,144,42)" rx="2" ry="2" />
<text  x="755.30" y="399.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7 samples, 0.15%)</title><rect x="824.5" y="501" width="1.7" height="15.0" fill="rgb(212,136,33)" rx="2" ry="2" />
<text  x="827.48" y="511.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (3 samples, 0.06%)</title><rect x="1017.0" y="1013" width="0.8" height="15.0" fill="rgb(220,149,42)" rx="2" ry="2" />
<text  x="1020.02" y="1023.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (7 samples, 0.15%)</title><rect x="129.1" y="789" width="1.8" height="15.0" fill="rgb(244,30,45)" rx="2" ry="2" />
<text  x="132.15" y="799.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.02%)</title><rect x="189.3" y="501" width="0.3" height="15.0" fill="rgb(231,69,12)" rx="2" ry="2" />
<text  x="192.34" y="511.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (5 samples, 0.10%)</title><rect x="721.0" y="453" width="1.2" height="15.0" fill="rgb(233,59,47)" rx="2" ry="2" />
<text  x="723.98" y="463.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (4 samples, 0.08%)</title><rect x="756.5" y="629" width="0.9" height="15.0" fill="rgb(250,62,21)" rx="2" ry="2" />
<text  x="759.46" y="639.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.02%)</title><rect x="800.0" y="549" width="0.3" height="15.0" fill="rgb(241,204,18)" rx="2" ry="2" />
<text  x="803.01" y="559.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.02%)</title><rect x="171.0" y="901" width="0.2" height="15.0" fill="rgb(222,32,41)" rx="2" ry="2" />
<text  x="173.99" y="911.5" ></text>
</g>
<g >
<title>do_futex (11 samples, 0.23%)</title><rect x="1013.1" y="741" width="2.7" height="15.0" fill="rgb(236,118,31)" rx="2" ry="2" />
<text  x="1016.11" y="751.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (1 samples, 0.02%)</title><rect x="237.5" y="469" width="0.3" height="15.0" fill="rgb(236,222,28)" rx="2" ry="2" />
<text  x="240.53" y="479.5" ></text>
</g>
<g >
<title>inode_permission (1 samples, 0.02%)</title><rect x="759.9" y="549" width="0.2" height="15.0" fill="rgb(254,149,17)" rx="2" ry="2" />
<text  x="762.89" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (5 samples, 0.10%)</title><rect x="177.1" y="533" width="1.2" height="15.0" fill="rgb(216,24,22)" rx="2" ry="2" />
<text  x="180.10" y="543.5" ></text>
</g>
<g >
<title>__libc_read (90 samples, 1.87%)</title><rect x="131.1" y="805" width="22.0" height="15.0" fill="rgb(250,164,39)" rx="2" ry="2" />
<text  x="134.11" y="815.5" >_..</text>
</g>
<g >
<title>exit_to_user_mode_loop (4 samples, 0.08%)</title><rect x="1092.1" y="965" width="1.0" height="15.0" fill="rgb(234,31,2)" rx="2" ry="2" />
<text  x="1095.14" y="975.5" ></text>
</g>
<g >
<title>[[heap]] (66 samples, 1.37%)</title><rect x="36.4" y="1029" width="16.2" height="15.0" fill="rgb(211,32,4)" rx="2" ry="2" />
<text  x="39.42" y="1039.5" ></text>
</g>
<g >
<title>reweight_entity (2 samples, 0.04%)</title><rect x="1014.1" y="597" width="0.5" height="15.0" fill="rgb(214,123,52)" rx="2" ry="2" />
<text  x="1017.09" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="108.4" y="773" width="0.2" height="15.0" fill="rgb(243,109,50)" rx="2" ry="2" />
<text  x="111.35" y="783.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (10 samples, 0.21%)</title><rect x="221.1" y="549" width="2.5" height="15.0" fill="rgb(240,49,31)" rx="2" ry="2" />
<text  x="224.14" y="559.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (1 samples, 0.02%)</title><rect x="832.1" y="421" width="0.2" height="15.0" fill="rgb(254,180,18)" rx="2" ry="2" />
<text  x="835.06" y="431.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (824 samples, 17.08%)</title><rect x="810.3" y="709" width="201.6" height="15.0" fill="rgb(219,215,23)" rx="2" ry="2" />
<text  x="813.29" y="719.5" >serde::ser::Serializer::co..</text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (90 samples, 1.87%)</title><rect x="131.1" y="853" width="22.0" height="15.0" fill="rgb(250,125,48)" rx="2" ry="2" />
<text  x="134.11" y="863.5" >&lt;..</text>
</g>
<g >
<title>ext4_inode_csum (2 samples, 0.04%)</title><rect x="741.8" y="389" width="0.5" height="15.0" fill="rgb(250,31,35)" rx="2" ry="2" />
<text  x="744.78" y="399.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.02%)</title><rect x="1017.0" y="981" width="0.3" height="15.0" fill="rgb(254,216,17)" rx="2" ry="2" />
<text  x="1020.02" y="991.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.31%)</title><rect x="859.5" y="261" width="3.6" height="15.0" fill="rgb(228,187,9)" rx="2" ry="2" />
<text  x="862.46" y="271.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (3,733 samples, 77.40%)</title><rect x="103.0" y="1013" width="913.3" height="15.0" fill="rgb(252,55,49)" rx="2" ry="2" />
<text  x="105.97" y="1023.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>ext4_add_nondir (3 samples, 0.06%)</title><rect x="745.5" y="469" width="0.7" height="15.0" fill="rgb(240,222,44)" rx="2" ry="2" />
<text  x="748.45" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;rustposix::safeposix::filesystem::FilesystemMetadata&gt;&gt; (9 samples, 0.19%)</title><rect x="128.7" y="869" width="2.2" height="15.0" fill="rgb(242,225,19)" rx="2" ry="2" />
<text  x="131.66" y="879.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="809.1" y="709" width="0.2" height="15.0" fill="rgb(229,38,12)" rx="2" ry="2" />
<text  x="812.06" y="719.5" ></text>
</g>
<g >
<title>rcu_core_si (12 samples, 0.25%)</title><rect x="1106.1" y="949" width="2.9" height="15.0" fill="rgb(223,8,45)" rx="2" ry="2" />
<text  x="1109.08" y="959.5" ></text>
</g>
<g >
<title>ovl_cleanup_and_whiteout (1 samples, 0.02%)</title><rect x="1090.2" y="597" width="0.2" height="15.0" fill="rgb(221,136,14)" rx="2" ry="2" />
<text  x="1093.18" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c (87 samples, 1.80%)</title><rect x="734.2" y="773" width="21.3" height="15.0" fill="rgb(228,195,21)" rx="2" ry="2" />
<text  x="737.20" y="783.5" >s..</text>
</g>
<g >
<title>ext4_setent.part.0 (2 samples, 0.04%)</title><rect x="807.1" y="597" width="0.5" height="15.0" fill="rgb(222,77,39)" rx="2" ry="2" />
<text  x="810.11" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="658.1" y="821" width="0.5" height="15.0" fill="rgb(253,145,23)" rx="2" ry="2" />
<text  x="661.11" y="831.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="1115.9" y="677" width="0.2" height="15.0" fill="rgb(217,93,23)" rx="2" ry="2" />
<text  x="1118.87" y="687.5" ></text>
</g>
<g >
<title>vfs_iter_write (286 samples, 5.93%)</title><rect x="660.3" y="661" width="70.0" height="15.0" fill="rgb(243,138,24)" rx="2" ry="2" />
<text  x="663.31" y="671.5" >vfs_ite..</text>
</g>
<g >
<title>schedule_timeout (6 samples, 0.12%)</title><rect x="1104.4" y="965" width="1.4" height="15.0" fill="rgb(245,7,21)" rx="2" ry="2" />
<text  x="1107.37" y="975.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (48 samples, 1.00%)</title><rect x="157.8" y="789" width="11.7" height="15.0" fill="rgb(242,100,27)" rx="2" ry="2" />
<text  x="160.78" y="799.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (25 samples, 0.52%)</title><rect x="706.5" y="533" width="6.2" height="15.0" fill="rgb(229,102,16)" rx="2" ry="2" />
<text  x="709.55" y="543.5" ></text>
</g>
<g >
<title>lind_close (1 samples, 0.02%)</title><rect x="103.7" y="901" width="0.2" height="15.0" fill="rgb(235,211,4)" rx="2" ry="2" />
<text  x="106.71" y="911.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (176 samples, 3.65%)</title><rect x="128.2" y="965" width="43.0" height="15.0" fill="rgb(210,62,49)" rx="2" ry="2" />
<text  x="131.17" y="975.5" >NaCl..</text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.02%)</title><rect x="736.6" y="469" width="0.3" height="15.0" fill="rgb(227,75,31)" rx="2" ry="2" />
<text  x="739.64" y="479.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (38 samples, 0.79%)</title><rect x="713.2" y="501" width="9.3" height="15.0" fill="rgb(227,90,31)" rx="2" ry="2" />
<text  x="716.16" y="511.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (3,449 samples, 71.51%)</title><rect x="172.2" y="965" width="843.8" height="15.0" fill="rgb(212,137,37)" rx="2" ry="2" />
<text  x="175.21" y="975.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="762.8" y="773" width="0.3" height="15.0" fill="rgb(223,176,18)" rx="2" ry="2" />
<text  x="765.82" y="783.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (1 samples, 0.02%)</title><rect x="761.6" y="581" width="0.2" height="15.0" fill="rgb(223,200,6)" rx="2" ry="2" />
<text  x="764.60" y="591.5" ></text>
</g>
<g >
<title>__find_get_block (1 samples, 0.02%)</title><rect x="721.5" y="421" width="0.2" height="15.0" fill="rgb(232,63,50)" rx="2" ry="2" />
<text  x="724.47" y="431.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (1 samples, 0.02%)</title><rect x="761.6" y="629" width="0.2" height="15.0" fill="rgb(249,92,23)" rx="2" ry="2" />
<text  x="764.60" y="639.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (3 samples, 0.06%)</title><rect x="188.6" y="485" width="0.7" height="15.0" fill="rgb(239,106,36)" rx="2" ry="2" />
<text  x="191.60" y="495.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.02%)</title><rect x="1101.9" y="789" width="0.3" height="15.0" fill="rgb(205,74,47)" rx="2" ry="2" />
<text  x="1104.92" y="799.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.31%)</title><rect x="859.5" y="245" width="3.6" height="15.0" fill="rgb(233,198,24)" rx="2" ry="2" />
<text  x="862.46" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="680.1" y="453" width="0.3" height="15.0" fill="rgb(232,56,10)" rx="2" ry="2" />
<text  x="683.13" y="463.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1105.3" y="885" width="0.3" height="15.0" fill="rgb(211,13,23)" rx="2" ry="2" />
<text  x="1108.35" y="895.5" ></text>
</g>
<g >
<title>std::ffi::c_str::CString::from_vec_unchecked (1 samples, 0.02%)</title><rect x="102.5" y="1013" width="0.2" height="15.0" fill="rgb(225,178,21)" rx="2" ry="2" />
<text  x="105.48" y="1023.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.06%)</title><rect x="832.3" y="501" width="0.7" height="15.0" fill="rgb(253,65,9)" rx="2" ry="2" />
<text  x="835.31" y="511.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (6 samples, 0.12%)</title><rect x="45.0" y="997" width="1.5" height="15.0" fill="rgb(253,136,28)" rx="2" ry="2" />
<text  x="47.99" y="1007.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (813 samples, 16.86%)</title><rect x="812.5" y="645" width="198.9" height="15.0" fill="rgb(239,108,49)" rx="2" ry="2" />
<text  x="815.49" y="655.5" >serde::ser::Serializer::co..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="762.6" y="613" width="0.2" height="15.0" fill="rgb(219,78,46)" rx="2" ry="2" />
<text  x="765.58" y="623.5" ></text>
</g>
<g >
<title>ksys_read (89 samples, 1.85%)</title><rect x="131.4" y="741" width="21.7" height="15.0" fill="rgb(233,20,23)" rx="2" ry="2" />
<text  x="134.35" y="751.5" >k..</text>
</g>
<g >
<title>current_time (1 samples, 0.02%)</title><rect x="798.8" y="597" width="0.2" height="15.0" fill="rgb(239,189,51)" rx="2" ry="2" />
<text  x="801.79" y="607.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.10%)</title><rect x="836.0" y="389" width="1.2" height="15.0" fill="rgb(219,185,0)" rx="2" ry="2" />
<text  x="838.98" y="399.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (2 samples, 0.04%)</title><rect x="686.0" y="453" width="0.5" height="15.0" fill="rgb(210,178,25)" rx="2" ry="2" />
<text  x="689.00" y="463.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="30.1" y="869" width="0.2" height="15.0" fill="rgb(211,32,41)" rx="2" ry="2" />
<text  x="33.06" y="879.5" ></text>
</g>
<g >
<title>ext4_inode_block_valid (1 samples, 0.02%)</title><rect x="804.2" y="453" width="0.2" height="15.0" fill="rgb(231,144,49)" rx="2" ry="2" />
<text  x="807.17" y="463.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (574 samples, 11.90%)</title><rect x="292.8" y="837" width="140.5" height="15.0" fill="rgb(223,23,29)" rx="2" ry="2" />
<text  x="295.83" y="847.5" >ringbuf::producer..</text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (24 samples, 0.50%)</title><rect x="723.4" y="565" width="5.9" height="15.0" fill="rgb(245,50,11)" rx="2" ry="2" />
<text  x="726.43" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (56 samples, 1.16%)</title><rect x="950.0" y="389" width="13.7" height="15.0" fill="rgb(215,109,14)" rx="2" ry="2" />
<text  x="952.99" y="399.5" ></text>
</g>
<g >
<title>kern_select (1 samples, 0.02%)</title><rect x="1101.9" y="981" width="0.3" height="15.0" fill="rgb(249,207,2)" rx="2" ry="2" />
<text  x="1104.92" y="991.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="33.2" y="581" width="0.3" height="15.0" fill="rgb(235,117,44)" rx="2" ry="2" />
<text  x="36.24" y="591.5" ></text>
</g>
<g >
<title>fscrypt_prepare_new_inode (1 samples, 0.02%)</title><rect x="744.2" y="453" width="0.3" height="15.0" fill="rgb(210,197,5)" rx="2" ry="2" />
<text  x="747.23" y="463.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.02%)</title><rect x="104.9" y="725" width="0.3" height="15.0" fill="rgb(242,157,5)" rx="2" ry="2" />
<text  x="107.93" y="735.5" ></text>
</g>
<g >
<title>__udp_enqueue_schedule_skb (1 samples, 0.02%)</title><rect x="1112.9" y="533" width="0.3" height="15.0" fill="rgb(244,152,18)" rx="2" ry="2" />
<text  x="1115.93" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.17%)</title><rect x="841.4" y="229" width="1.9" height="15.0" fill="rgb(232,220,49)" rx="2" ry="2" />
<text  x="844.36" y="239.5" ></text>
</g>
<g >
<title>perf_event_task_tick (2 samples, 0.04%)</title><rect x="1165.8" y="677" width="0.5" height="15.0" fill="rgb(238,218,1)" rx="2" ry="2" />
<text  x="1168.78" y="687.5" ></text>
</g>
<g >
<title>__d_add (1 samples, 0.02%)</title><rect x="760.6" y="533" width="0.3" height="15.0" fill="rgb(244,52,18)" rx="2" ry="2" />
<text  x="763.62" y="543.5" ></text>
</g>
<g >
<title>NaClHostDescRead (176 samples, 3.65%)</title><rect x="128.2" y="949" width="43.0" height="15.0" fill="rgb(251,165,8)" rx="2" ry="2" />
<text  x="131.17" y="959.5" >NaCl..</text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="130.9" y="853" width="0.2" height="15.0" fill="rgb(237,216,29)" rx="2" ry="2" />
<text  x="133.86" y="863.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (8 samples, 0.17%)</title><rect x="841.4" y="277" width="1.9" height="15.0" fill="rgb(210,44,1)" rx="2" ry="2" />
<text  x="844.36" y="287.5" ></text>
</g>
<g >
<title>generic_update_time (1 samples, 0.02%)</title><rect x="173.9" y="565" width="0.3" height="15.0" fill="rgb(231,72,20)" rx="2" ry="2" />
<text  x="176.92" y="575.5" ></text>
</g>
<g >
<title>ovl_override_creds (1 samples, 0.02%)</title><rect x="769.4" y="645" width="0.3" height="15.0" fill="rgb(237,114,14)" rx="2" ry="2" />
<text  x="772.43" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.08%)</title><rect x="981.5" y="357" width="1.0" height="15.0" fill="rgb(224,47,46)" rx="2" ry="2" />
<text  x="984.55" y="367.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="1091.9" y="661" width="0.2" height="15.0" fill="rgb(209,74,41)" rx="2" ry="2" />
<text  x="1094.89" y="671.5" ></text>
</g>
<g >
<title>map_id_up (1 samples, 0.02%)</title><rect x="241.4" y="453" width="0.3" height="15.0" fill="rgb(242,224,41)" rx="2" ry="2" />
<text  x="244.45" y="463.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (5 samples, 0.10%)</title><rect x="830.3" y="405" width="1.3" height="15.0" fill="rgb(213,97,24)" rx="2" ry="2" />
<text  x="833.35" y="415.5" ></text>
</g>
<g >
<title>__gconv_read_conf (1 samples, 0.02%)</title><rect x="10.0" y="901" width="0.2" height="15.0" fill="rgb(249,208,32)" rx="2" ry="2" />
<text  x="13.00" y="911.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.02%)</title><rect x="1157.5" y="917" width="0.2" height="15.0" fill="rgb(248,129,9)" rx="2" ry="2" />
<text  x="1160.46" y="927.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.08%)</title><rect x="863.1" y="293" width="1.0" height="15.0" fill="rgb(245,87,52)" rx="2" ry="2" />
<text  x="866.13" y="303.5" ></text>
</g>
<g >
<title>__switch_to_asm (1 samples, 0.02%)</title><rect x="1012.4" y="789" width="0.2" height="15.0" fill="rgb(217,86,34)" rx="2" ry="2" />
<text  x="1015.38" y="799.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (51 samples, 1.06%)</title><rect x="157.3" y="837" width="12.5" height="15.0" fill="rgb(216,191,14)" rx="2" ry="2" />
<text  x="160.29" y="847.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="33.7" y="597" width="0.3" height="15.0" fill="rgb(239,134,38)" rx="2" ry="2" />
<text  x="36.73" y="607.5" ></text>
</g>
<g >
<title>ext4_bread (1 samples, 0.02%)</title><rect x="803.7" y="533" width="0.2" height="15.0" fill="rgb(234,118,24)" rx="2" ry="2" />
<text  x="806.68" y="543.5" ></text>
</g>
<g >
<title>ovl_new_inode (1 samples, 0.02%)</title><rect x="755.0" y="549" width="0.2" height="15.0" fill="rgb(239,194,47)" rx="2" ry="2" />
<text  x="757.99" y="559.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="670.1" y="469" width="0.2" height="15.0" fill="rgb(207,45,50)" rx="2" ry="2" />
<text  x="673.10" y="479.5" ></text>
</g>
<g >
<title>record__mmap_read_all (22 samples, 0.46%)</title><rect x="30.6" y="981" width="5.3" height="15.0" fill="rgb(218,111,15)" rx="2" ry="2" />
<text  x="33.55" y="991.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="1112.9" y="389" width="0.3" height="15.0" fill="rgb(224,34,52)" rx="2" ry="2" />
<text  x="1115.93" y="399.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="1109.8" y="901" width="0.2" height="15.0" fill="rgb(244,118,38)" rx="2" ry="2" />
<text  x="1112.75" y="911.5" ></text>
</g>
<g >
<title>prepare_creds (2 samples, 0.04%)</title><rect x="754.5" y="533" width="0.5" height="15.0" fill="rgb(251,58,28)" rx="2" ry="2" />
<text  x="757.50" y="543.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="1092.9" y="773" width="0.2" height="15.0" fill="rgb(242,105,45)" rx="2" ry="2" />
<text  x="1095.87" y="783.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="227.7" y="517" width="0.3" height="15.0" fill="rgb(213,208,6)" rx="2" ry="2" />
<text  x="230.75" y="527.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="1185.6" y="853" width="0.2" height="15.0" fill="rgb(224,189,15)" rx="2" ry="2" />
<text  x="1188.60" y="863.5" ></text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.04%)</title><rect x="1169.4" y="757" width="0.5" height="15.0" fill="rgb(238,222,54)" rx="2" ry="2" />
<text  x="1172.45" y="767.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.02%)</title><rect x="33.2" y="565" width="0.3" height="15.0" fill="rgb(230,117,47)" rx="2" ry="2" />
<text  x="36.24" y="575.5" ></text>
</g>
<g >
<title>dequeue_task (7 samples, 0.15%)</title><rect x="1013.8" y="661" width="1.8" height="15.0" fill="rgb(250,188,49)" rx="2" ry="2" />
<text  x="1016.84" y="671.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.02%)</title><rect x="53.8" y="1013" width="0.2" height="15.0" fill="rgb(210,193,42)" rx="2" ry="2" />
<text  x="56.79" y="1023.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="684.8" y="485" width="0.2" height="15.0" fill="rgb(206,28,52)" rx="2" ry="2" />
<text  x="687.78" y="495.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.02%)</title><rect x="1185.6" y="805" width="0.2" height="15.0" fill="rgb(249,216,8)" rx="2" ry="2" />
<text  x="1188.60" y="815.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.02%)</title><rect x="757.9" y="645" width="0.3" height="15.0" fill="rgb(243,183,27)" rx="2" ry="2" />
<text  x="760.93" y="655.5" ></text>
</g>
<g >
<title>__getblk_gfp (1 samples, 0.02%)</title><rect x="750.6" y="373" width="0.2" height="15.0" fill="rgb(208,96,10)" rx="2" ry="2" />
<text  x="753.59" y="383.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="763.8" y="661" width="0.2" height="15.0" fill="rgb(243,223,17)" rx="2" ry="2" />
<text  x="766.80" y="671.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="1091.9" y="965" width="0.2" height="15.0" fill="rgb(245,220,6)" rx="2" ry="2" />
<text  x="1094.89" y="975.5" ></text>
</g>
<g >
<title>ovl_do_remove (1 samples, 0.02%)</title><rect x="1090.2" y="629" width="0.2" height="15.0" fill="rgb(250,211,54)" rx="2" ry="2" />
<text  x="1093.18" y="639.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="1091.9" y="869" width="0.2" height="15.0" fill="rgb(237,74,7)" rx="2" ry="2" />
<text  x="1094.89" y="879.5" ></text>
</g>
<g >
<title>ext4_getblk (2 samples, 0.04%)</title><rect x="750.1" y="421" width="0.5" height="15.0" fill="rgb(232,195,0)" rx="2" ry="2" />
<text  x="753.10" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="767.7" y="773" width="0.3" height="15.0" fill="rgb(205,6,10)" rx="2" ry="2" />
<text  x="770.72" y="783.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2 samples, 0.04%)</title><rect x="657.6" y="773" width="0.5" height="15.0" fill="rgb(205,71,14)" rx="2" ry="2" />
<text  x="660.62" y="783.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.02%)</title><rect x="778.0" y="421" width="0.2" height="15.0" fill="rgb(212,162,43)" rx="2" ry="2" />
<text  x="780.99" y="431.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="169.8" y="837" width="0.2" height="15.0" fill="rgb(232,37,38)" rx="2" ry="2" />
<text  x="172.76" y="847.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (7 samples, 0.15%)</title><rect x="186.4" y="485" width="1.7" height="15.0" fill="rgb(240,80,8)" rx="2" ry="2" />
<text  x="189.40" y="495.5" ></text>
</g>
<g >
<title>PageHuge (1 samples, 0.02%)</title><rect x="201.1" y="501" width="0.2" height="15.0" fill="rgb(220,107,21)" rx="2" ry="2" />
<text  x="204.08" y="511.5" ></text>
</g>
<g >
<title>destroy_inode (1 samples, 0.02%)</title><rect x="1090.4" y="741" width="0.3" height="15.0" fill="rgb(240,131,27)" rx="2" ry="2" />
<text  x="1093.42" y="751.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.02%)</title><rect x="30.3" y="853" width="0.3" height="15.0" fill="rgb(235,25,30)" rx="2" ry="2" />
<text  x="33.31" y="863.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.04%)</title><rect x="831.8" y="485" width="0.5" height="15.0" fill="rgb(230,43,10)" rx="2" ry="2" />
<text  x="834.82" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.12%)</title><rect x="830.1" y="437" width="1.5" height="15.0" fill="rgb(240,211,5)" rx="2" ry="2" />
<text  x="833.10" y="447.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (121 samples, 2.51%)</title><rect x="836.0" y="501" width="29.6" height="15.0" fill="rgb(247,103,44)" rx="2" ry="2" />
<text  x="838.98" y="511.5" >&lt;s..</text>
</g>
<g >
<title>__set_page_dirty_no_writeback (1 samples, 0.02%)</title><rect x="104.7" y="725" width="0.2" height="15.0" fill="rgb(222,66,52)" rx="2" ry="2" />
<text  x="107.68" y="735.5" ></text>
</g>
<g >
<title>vfs_iter_read (85 samples, 1.76%)</title><rect x="132.1" y="677" width="20.8" height="15.0" fill="rgb(209,79,11)" rx="2" ry="2" />
<text  x="135.09" y="687.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="762.8" y="725" width="0.3" height="15.0" fill="rgb(243,196,16)" rx="2" ry="2" />
<text  x="765.82" y="735.5" ></text>
</g>
<g >
<title>lind_close (1 samples, 0.02%)</title><rect x="108.1" y="869" width="0.3" height="15.0" fill="rgb(242,48,54)" rx="2" ry="2" />
<text  x="111.11" y="879.5" ></text>
</g>
<g >
<title>__rust_alloc (1 samples, 0.02%)</title><rect x="731.5" y="741" width="0.2" height="15.0" fill="rgb(210,63,6)" rx="2" ry="2" />
<text  x="734.51" y="751.5" ></text>
</g>
<g >
<title>record__write (1 samples, 0.02%)</title><rect x="35.7" y="949" width="0.2" height="15.0" fill="rgb(209,204,24)" rx="2" ry="2" />
<text  x="38.69" y="959.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (4 samples, 0.08%)</title><rect x="1008.5" y="517" width="0.9" height="15.0" fill="rgb(225,132,30)" rx="2" ry="2" />
<text  x="1011.46" y="527.5" ></text>
</g>
<g >
<title>node_dirty_ok (4 samples, 0.08%)</title><rect x="208.7" y="485" width="0.9" height="15.0" fill="rgb(207,94,4)" rx="2" ry="2" />
<text  x="211.66" y="495.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="657.9" y="661" width="0.2" height="15.0" fill="rgb(225,43,23)" rx="2" ry="2" />
<text  x="660.86" y="671.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (7 samples, 0.15%)</title><rect x="704.3" y="533" width="1.8" height="15.0" fill="rgb(226,171,0)" rx="2" ry="2" />
<text  x="707.35" y="543.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.06%)</title><rect x="201.3" y="501" width="0.8" height="15.0" fill="rgb(243,172,18)" rx="2" ry="2" />
<text  x="204.32" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_futex (7 samples, 0.15%)</title><rect x="129.1" y="741" width="1.8" height="15.0" fill="rgb(225,53,33)" rx="2" ry="2" />
<text  x="132.15" y="751.5" ></text>
</g>
<g >
<title>_raw_read_lock (2 samples, 0.04%)</title><rect x="190.6" y="517" width="0.4" height="15.0" fill="rgb(212,112,13)" rx="2" ry="2" />
<text  x="193.56" y="527.5" ></text>
</g>
<g >
<title>__d_free (4 samples, 0.08%)</title><rect x="1106.3" y="901" width="1.0" height="15.0" fill="rgb(249,185,32)" rx="2" ry="2" />
<text  x="1109.33" y="911.5" ></text>
</g>
<g >
<title>record__write (21 samples, 0.44%)</title><rect x="30.6" y="917" width="5.1" height="15.0" fill="rgb(232,228,54)" rx="2" ry="2" />
<text  x="33.55" y="927.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (39 samples, 0.81%)</title><rect x="266.9" y="853" width="9.5" height="15.0" fill="rgb(228,206,40)" rx="2" ry="2" />
<text  x="269.89" y="863.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (4 samples, 0.08%)</title><rect x="1110.2" y="821" width="1.0" height="15.0" fill="rgb(219,104,49)" rx="2" ry="2" />
<text  x="1113.24" y="831.5" ></text>
</g>
<g >
<title>security_d_instantiate (1 samples, 0.02%)</title><rect x="745.9" y="453" width="0.3" height="15.0" fill="rgb(229,40,21)" rx="2" ry="2" />
<text  x="748.94" y="463.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (1 samples, 0.02%)</title><rect x="1090.9" y="533" width="0.3" height="15.0" fill="rgb(228,80,17)" rx="2" ry="2" />
<text  x="1093.91" y="543.5" ></text>
</g>
<g >
<title>ext4_find_dest_de (1 samples, 0.02%)</title><rect x="745.7" y="421" width="0.2" height="15.0" fill="rgb(227,124,30)" rx="2" ry="2" />
<text  x="748.70" y="431.5" ></text>
</g>
<g >
<title>xas_expand (4 samples, 0.08%)</title><rect x="689.4" y="453" width="1.0" height="15.0" fill="rgb(209,119,16)" rx="2" ry="2" />
<text  x="692.42" y="463.5" ></text>
</g>
<g >
<title>vfs_rename (28 samples, 0.58%)</title><rect x="801.5" y="645" width="6.8" height="15.0" fill="rgb(241,114,17)" rx="2" ry="2" />
<text  x="804.48" y="655.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="1092.9" y="885" width="0.2" height="15.0" fill="rgb(230,41,3)" rx="2" ry="2" />
<text  x="1095.87" y="895.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (1 samples, 0.02%)</title><rect x="53.5" y="1013" width="0.3" height="15.0" fill="rgb(251,205,2)" rx="2" ry="2" />
<text  x="56.55" y="1023.5" ></text>
</g>
<g >
<title>__unlink (1 samples, 0.02%)</title><rect x="108.6" y="821" width="0.2" height="15.0" fill="rgb(240,42,36)" rx="2" ry="2" />
<text  x="111.60" y="831.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="1090.4" y="773" width="0.3" height="15.0" fill="rgb(239,152,53)" rx="2" ry="2" />
<text  x="1093.42" y="783.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="670.1" y="453" width="0.2" height="15.0" fill="rgb(214,31,19)" rx="2" ry="2" />
<text  x="673.10" y="463.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="1111.2" y="837" width="0.3" height="15.0" fill="rgb(232,132,25)" rx="2" ry="2" />
<text  x="1114.22" y="847.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.02%)</title><rect x="1167.7" y="677" width="0.3" height="15.0" fill="rgb(208,102,21)" rx="2" ry="2" />
<text  x="1170.74" y="687.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1090.9" y="421" width="0.3" height="15.0" fill="rgb(215,89,32)" rx="2" ry="2" />
<text  x="1093.91" y="431.5" ></text>
</g>
<g >
<title>psi_flags_change (1 samples, 0.02%)</title><rect x="1115.6" y="693" width="0.3" height="15.0" fill="rgb(205,89,35)" rx="2" ry="2" />
<text  x="1118.62" y="703.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (1 samples, 0.02%)</title><rect x="103.7" y="805" width="0.2" height="15.0" fill="rgb(224,202,18)" rx="2" ry="2" />
<text  x="106.71" y="815.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (4 samples, 0.08%)</title><rect x="1112.9" y="741" width="1.0" height="15.0" fill="rgb(208,124,34)" rx="2" ry="2" />
<text  x="1115.93" y="751.5" ></text>
</g>
<g >
<title>NaClCondVarTimedWaitRelative (1 samples, 0.02%)</title><rect x="171.5" y="949" width="0.2" height="15.0" fill="rgb(209,227,42)" rx="2" ry="2" />
<text  x="174.48" y="959.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (1 samples, 0.02%)</title><rect x="755.2" y="629" width="0.3" height="15.0" fill="rgb(232,151,28)" rx="2" ry="2" />
<text  x="758.24" y="639.5" ></text>
</g>
<g >
<title>__memchr_avx2 (1 samples, 0.02%)</title><rect x="758.4" y="693" width="0.3" height="15.0" fill="rgb(243,79,1)" rx="2" ry="2" />
<text  x="761.42" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="802.2" y="629" width="0.3" height="15.0" fill="rgb(219,107,6)" rx="2" ry="2" />
<text  x="805.21" y="639.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.02%)</title><rect x="798.5" y="565" width="0.3" height="15.0" fill="rgb(226,165,5)" rx="2" ry="2" />
<text  x="801.54" y="575.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (20 samples, 0.41%)</title><rect x="858.2" y="341" width="4.9" height="15.0" fill="rgb(242,83,14)" rx="2" ry="2" />
<text  x="861.24" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (1 samples, 0.02%)</title><rect x="1090.2" y="693" width="0.2" height="15.0" fill="rgb(252,157,33)" rx="2" ry="2" />
<text  x="1093.18" y="703.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.02%)</title><rect x="1100.7" y="965" width="0.2" height="15.0" fill="rgb(244,147,15)" rx="2" ry="2" />
<text  x="1103.70" y="975.5" ></text>
</g>
<g >
<title>do_readlinkat (8 samples, 0.17%)</title><rect x="756.2" y="693" width="2.0" height="15.0" fill="rgb(206,226,42)" rx="2" ry="2" />
<text  x="759.22" y="703.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (3 samples, 0.06%)</title><rect x="1115.4" y="805" width="0.7" height="15.0" fill="rgb(208,58,22)" rx="2" ry="2" />
<text  x="1118.38" y="815.5" ></text>
</g>
<g >
<title>crc_108 (1 samples, 0.02%)</title><rect x="806.6" y="533" width="0.3" height="15.0" fill="rgb(229,227,23)" rx="2" ry="2" />
<text  x="809.62" y="543.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 1.31%)</title><rect x="14.6" y="709" width="15.5" height="15.0" fill="rgb(220,222,36)" rx="2" ry="2" />
<text  x="17.65" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="865.1" y="373" width="0.2" height="15.0" fill="rgb(232,197,23)" rx="2" ry="2" />
<text  x="868.09" y="383.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (2 samples, 0.04%)</title><rect x="832.6" y="485" width="0.4" height="15.0" fill="rgb(208,34,54)" rx="2" ry="2" />
<text  x="835.55" y="495.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="32.0" y="581" width="0.3" height="15.0" fill="rgb(230,108,3)" rx="2" ry="2" />
<text  x="35.02" y="591.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (1 samples, 0.02%)</title><rect x="1089.9" y="773" width="0.3" height="15.0" fill="rgb(249,79,24)" rx="2" ry="2" />
<text  x="1092.93" y="783.5" ></text>
</g>
<g >
<title>__find_get_block (1 samples, 0.02%)</title><rect x="773.3" y="405" width="0.3" height="15.0" fill="rgb(243,84,36)" rx="2" ry="2" />
<text  x="776.34" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="762.6" y="597" width="0.2" height="15.0" fill="rgb(210,88,12)" rx="2" ry="2" />
<text  x="765.58" y="607.5" ></text>
</g>
<g >
<title>get_acl.part.0 (1 samples, 0.02%)</title><rect x="769.2" y="613" width="0.2" height="15.0" fill="rgb(226,109,39)" rx="2" ry="2" />
<text  x="772.18" y="623.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="1090.4" y="709" width="0.3" height="15.0" fill="rgb(224,56,28)" rx="2" ry="2" />
<text  x="1093.42" y="719.5" ></text>
</g>
<g >
<title>____fput (7 samples, 0.15%)</title><rect x="654.9" y="549" width="1.7" height="15.0" fill="rgb(207,208,34)" rx="2" ry="2" />
<text  x="657.93" y="559.5" ></text>
</g>
<g >
<title>evict (90 samples, 1.87%)</title><rect x="771.4" y="517" width="22.0" height="15.0" fill="rgb(250,226,30)" rx="2" ry="2" />
<text  x="774.39" y="527.5" >e..</text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.02%)</title><rect x="1186.6" y="901" width="0.2" height="15.0" fill="rgb(217,95,24)" rx="2" ry="2" />
<text  x="1189.57" y="911.5" ></text>
</g>
<g >
<title>ext4_map_blocks (1 samples, 0.02%)</title><rect x="796.6" y="517" width="0.2" height="15.0" fill="rgb(213,78,33)" rx="2" ry="2" />
<text  x="799.59" y="527.5" ></text>
</g>
<g >
<title>iput (73 samples, 1.51%)</title><rect x="109.8" y="597" width="17.9" height="15.0" fill="rgb(249,130,31)" rx="2" ry="2" />
<text  x="112.82" y="607.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.06%)</title><rect x="1007.2" y="533" width="0.8" height="15.0" fill="rgb(229,227,6)" rx="2" ry="2" />
<text  x="1010.24" y="543.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.02%)</title><rect x="1091.4" y="981" width="0.2" height="15.0" fill="rgb(253,59,52)" rx="2" ry="2" />
<text  x="1094.40" y="991.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (2 samples, 0.04%)</title><rect x="773.1" y="453" width="0.5" height="15.0" fill="rgb(205,229,14)" rx="2" ry="2" />
<text  x="776.10" y="463.5" ></text>
</g>
<g >
<title>[sel_ldr] (3,734 samples, 77.42%)</title><rect x="103.0" y="1029" width="913.5" height="15.0" fill="rgb(207,206,34)" rx="2" ry="2" />
<text  x="105.97" y="1039.5" >[sel_ldr]</text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (1 samples, 0.02%)</title><rect x="32.3" y="613" width="0.2" height="15.0" fill="rgb(210,141,11)" rx="2" ry="2" />
<text  x="35.26" y="623.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="752.3" y="437" width="0.2" height="15.0" fill="rgb(250,154,46)" rx="2" ry="2" />
<text  x="755.30" y="447.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (2 samples, 0.04%)</title><rect x="218.0" y="517" width="0.5" height="15.0" fill="rgb(216,156,9)" rx="2" ry="2" />
<text  x="220.96" y="527.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.02%)</title><rect x="665.0" y="517" width="0.2" height="15.0" fill="rgb(253,40,44)" rx="2" ry="2" />
<text  x="667.96" y="527.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (13 samples, 0.27%)</title><rect x="817.6" y="533" width="3.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="820.63" y="543.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.02%)</title><rect x="739.3" y="517" width="0.3" height="15.0" fill="rgb(235,39,47)" rx="2" ry="2" />
<text  x="742.33" y="527.5" ></text>
</g>
<g >
<title>pagevec_lookup_entries (1 samples, 0.02%)</title><rect x="782.2" y="453" width="0.2" height="15.0" fill="rgb(244,208,40)" rx="2" ry="2" />
<text  x="785.15" y="463.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (54 samples, 1.12%)</title><rect x="950.5" y="357" width="13.2" height="15.0" fill="rgb(250,40,27)" rx="2" ry="2" />
<text  x="953.48" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (2 samples, 0.04%)</title><rect x="731.0" y="773" width="0.5" height="15.0" fill="rgb(246,221,7)" rx="2" ry="2" />
<text  x="734.02" y="783.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.02%)</title><rect x="1017.0" y="869" width="0.3" height="15.0" fill="rgb(232,166,34)" rx="2" ry="2" />
<text  x="1020.02" y="879.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (284 samples, 5.89%)</title><rect x="660.6" y="613" width="69.4" height="15.0" fill="rgb(221,196,12)" rx="2" ry="2" />
<text  x="663.55" y="623.5" >ext4_fi..</text>
</g>
<g >
<title>crc32c_pcl_intel_update (2 samples, 0.04%)</title><rect x="741.8" y="357" width="0.5" height="15.0" fill="rgb(235,62,39)" rx="2" ry="2" />
<text  x="744.78" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.15%)</title><rect x="129.1" y="757" width="1.8" height="15.0" fill="rgb(240,222,16)" rx="2" ry="2" />
<text  x="132.15" y="767.5" ></text>
</g>
<g >
<title>ext4_map_blocks (1 samples, 0.02%)</title><rect x="804.2" y="485" width="0.2" height="15.0" fill="rgb(252,90,40)" rx="2" ry="2" />
<text  x="807.17" y="495.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (825 samples, 17.11%)</title><rect x="810.0" y="789" width="201.9" height="15.0" fill="rgb(242,63,21)" rx="2" ry="2" />
<text  x="813.04" y="799.5" >rustposix::safeposix::file..</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (5 samples, 0.10%)</title><rect x="670.3" y="469" width="1.3" height="15.0" fill="rgb(234,134,39)" rx="2" ry="2" />
<text  x="673.34" y="479.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (73 samples, 1.51%)</title><rect x="109.8" y="613" width="17.9" height="15.0" fill="rgb(253,103,45)" rx="2" ry="2" />
<text  x="112.82" y="623.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="1091.9" y="917" width="0.2" height="15.0" fill="rgb(218,124,51)" rx="2" ry="2" />
<text  x="1094.89" y="927.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (85 samples, 1.76%)</title><rect x="132.1" y="629" width="20.8" height="15.0" fill="rgb(239,52,36)" rx="2" ry="2" />
<text  x="135.09" y="639.5" ></text>
</g>
<g >
<title>__update_blocked_fair (3 samples, 0.06%)</title><rect x="1187.8" y="757" width="0.7" height="15.0" fill="rgb(209,123,18)" rx="2" ry="2" />
<text  x="1190.80" y="767.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="1092.4" y="837" width="0.2" height="15.0" fill="rgb(221,48,50)" rx="2" ry="2" />
<text  x="1095.38" y="847.5" ></text>
</g>
<g >
<title>page_cache_delete_batch (7 samples, 0.15%)</title><rect x="779.5" y="437" width="1.7" height="15.0" fill="rgb(237,209,7)" rx="2" ry="2" />
<text  x="782.46" y="447.5" ></text>
</g>
<g >
<title>__unlink (170 samples, 3.52%)</title><rect x="768.0" y="805" width="41.6" height="15.0" fill="rgb(233,213,1)" rx="2" ry="2" />
<text  x="770.96" y="815.5" >__u..</text>
</g>
<g >
<title>NaClStore32 (1 samples, 0.02%)</title><rect x="109.6" y="837" width="0.2" height="15.0" fill="rgb(240,228,9)" rx="2" ry="2" />
<text  x="112.58" y="847.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.02%)</title><rect x="35.7" y="709" width="0.2" height="15.0" fill="rgb(231,49,1)" rx="2" ry="2" />
<text  x="38.69" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::canonicalize (19 samples, 0.39%)</title><rect x="763.1" y="821" width="4.6" height="15.0" fill="rgb(222,143,0)" rx="2" ry="2" />
<text  x="766.07" y="831.5" ></text>
</g>
<g >
<title>__lookup_slow (5 samples, 0.10%)</title><rect x="760.4" y="581" width="1.2" height="15.0" fill="rgb(228,74,5)" rx="2" ry="2" />
<text  x="763.38" y="591.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 0.27%)</title><rect x="46.5" y="997" width="3.1" height="15.0" fill="rgb(205,142,18)" rx="2" ry="2" />
<text  x="49.45" y="1007.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="10.2" y="853" width="0.3" height="15.0" fill="rgb(220,216,41)" rx="2" ry="2" />
<text  x="13.24" y="863.5" ></text>
</g>
<g >
<title>ovl_create_real (26 samples, 0.54%)</title><rect x="739.8" y="517" width="6.4" height="15.0" fill="rgb(237,133,7)" rx="2" ry="2" />
<text  x="742.82" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (1 samples, 0.02%)</title><rect x="1100.7" y="997" width="0.2" height="15.0" fill="rgb(245,217,14)" rx="2" ry="2" />
<text  x="1103.70" y="1007.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="1090.4" y="677" width="0.3" height="15.0" fill="rgb(217,121,26)" rx="2" ry="2" />
<text  x="1093.42" y="687.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (16 samples, 0.33%)</title><rect x="103.9" y="997" width="4.0" height="15.0" fill="rgb(215,91,19)" rx="2" ry="2" />
<text  x="106.95" y="1007.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="860.0" y="213" width="0.4" height="15.0" fill="rgb(237,130,47)" rx="2" ry="2" />
<text  x="862.95" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="35.9" y="1029" width="0.3" height="15.0" fill="rgb(246,71,2)" rx="2" ry="2" />
<text  x="38.93" y="1039.5" ></text>
</g>
<g >
<title>node_dirty_ok (2 samples, 0.04%)</title><rect x="695.8" y="469" width="0.5" height="15.0" fill="rgb(225,92,18)" rx="2" ry="2" />
<text  x="698.78" y="479.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (6 samples, 0.12%)</title><rect x="45.0" y="981" width="1.5" height="15.0" fill="rgb(208,99,11)" rx="2" ry="2" />
<text  x="47.99" y="991.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="169.3" y="741" width="0.2" height="15.0" fill="rgb(245,191,39)" rx="2" ry="2" />
<text  x="172.27" y="751.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (48 samples, 1.00%)</title><rect x="157.8" y="805" width="11.7" height="15.0" fill="rgb(241,60,40)" rx="2" ry="2" />
<text  x="160.78" y="815.5" ></text>
</g>
<g >
<title>path_init (1 samples, 0.02%)</title><rect x="732.7" y="613" width="0.3" height="15.0" fill="rgb(214,101,24)" rx="2" ry="2" />
<text  x="735.73" y="623.5" ></text>
</g>
<g >
<title>from_kuid (1 samples, 0.02%)</title><rect x="241.4" y="469" width="0.3" height="15.0" fill="rgb(244,205,25)" rx="2" ry="2" />
<text  x="244.45" y="479.5" ></text>
</g>
<g >
<title>ovl_create_over_whiteout (63 samples, 1.31%)</title><rect x="738.8" y="533" width="15.5" height="15.0" fill="rgb(218,122,50)" rx="2" ry="2" />
<text  x="741.85" y="543.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.17%)</title><rect x="841.4" y="245" width="1.9" height="15.0" fill="rgb(213,139,24)" rx="2" ry="2" />
<text  x="844.36" y="255.5" ></text>
</g>
<g >
<title>_start (1 samples, 0.02%)</title><rect x="10.0" y="1029" width="0.2" height="15.0" fill="rgb(249,10,15)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (74 samples, 1.53%)</title><rect x="919.6" y="357" width="18.2" height="15.0" fill="rgb(221,205,19)" rx="2" ry="2" />
<text  x="922.65" y="367.5" ></text>
</g>
<g >
<title>kick_process (1 samples, 0.02%)</title><rect x="654.2" y="533" width="0.2" height="15.0" fill="rgb(227,161,9)" rx="2" ry="2" />
<text  x="657.19" y="543.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="888.3" y="101" width="0.3" height="15.0" fill="rgb(211,59,12)" rx="2" ry="2" />
<text  x="891.33" y="111.5" ></text>
</g>
<g >
<title>fscrypt_match_name (1 samples, 0.02%)</title><rect x="796.8" y="533" width="0.3" height="15.0" fill="rgb(229,220,52)" rx="2" ry="2" />
<text  x="799.83" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::stat (15 samples, 0.31%)</title><rect x="758.2" y="789" width="3.6" height="15.0" fill="rgb(233,92,29)" rx="2" ry="2" />
<text  x="761.17" y="799.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (1 samples, 0.02%)</title><rect x="752.3" y="405" width="0.2" height="15.0" fill="rgb(227,185,38)" rx="2" ry="2" />
<text  x="755.30" y="415.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (2 samples, 0.04%)</title><rect x="1169.4" y="741" width="0.5" height="15.0" fill="rgb(221,48,42)" rx="2" ry="2" />
<text  x="1172.45" y="751.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="233.4" y="501" width="0.2" height="15.0" fill="rgb(212,175,15)" rx="2" ry="2" />
<text  x="236.38" y="511.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (2 samples, 0.04%)</title><rect x="1090.7" y="789" width="0.5" height="15.0" fill="rgb(251,182,13)" rx="2" ry="2" />
<text  x="1093.67" y="799.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.21%)</title><rect x="833.0" y="357" width="2.5" height="15.0" fill="rgb(220,53,29)" rx="2" ry="2" />
<text  x="836.04" y="367.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="1164.3" y="725" width="0.3" height="15.0" fill="rgb(247,200,8)" rx="2" ry="2" />
<text  x="1167.31" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1007.2" y="453" width="0.3" height="15.0" fill="rgb(241,198,30)" rx="2" ry="2" />
<text  x="1010.24" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.04%)</title><rect x="128.7" y="805" width="0.4" height="15.0" fill="rgb(231,80,48)" rx="2" ry="2" />
<text  x="131.66" y="815.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (2 samples, 0.04%)</title><rect x="692.6" y="421" width="0.5" height="15.0" fill="rgb(236,145,44)" rx="2" ry="2" />
<text  x="695.60" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="762.8" y="709" width="0.3" height="15.0" fill="rgb(210,8,0)" rx="2" ry="2" />
<text  x="765.82" y="719.5" ></text>
</g>
<g >
<title>__getblk_gfp (1 samples, 0.02%)</title><rect x="773.3" y="421" width="0.3" height="15.0" fill="rgb(218,207,50)" rx="2" ry="2" />
<text  x="776.34" y="431.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (12 samples, 0.25%)</title><rect x="1106.1" y="997" width="2.9" height="15.0" fill="rgb(212,206,48)" rx="2" ry="2" />
<text  x="1109.08" y="1007.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect x="1011.4" y="677" width="0.5" height="15.0" fill="rgb(207,219,20)" rx="2" ry="2" />
<text  x="1014.40" y="687.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (824 samples, 17.08%)</title><rect x="810.3" y="741" width="201.6" height="15.0" fill="rgb(247,227,34)" rx="2" ry="2" />
<text  x="813.29" y="751.5" >&lt;serde_json::ser::Compound..</text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (2 samples, 0.04%)</title><rect x="891.3" y="421" width="0.5" height="15.0" fill="rgb(249,135,37)" rx="2" ry="2" />
<text  x="894.27" y="431.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="169.8" y="869" width="0.2" height="15.0" fill="rgb(209,222,43)" rx="2" ry="2" />
<text  x="172.76" y="879.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (8 samples, 0.17%)</title><rect x="38.6" y="997" width="2.0" height="15.0" fill="rgb(242,82,42)" rx="2" ry="2" />
<text  x="41.63" y="1007.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (3 samples, 0.06%)</title><rect x="1112.9" y="693" width="0.8" height="15.0" fill="rgb(206,229,39)" rx="2" ry="2" />
<text  x="1115.93" y="703.5" ></text>
</g>
<g >
<title>__set_page_dirty (1 samples, 0.02%)</title><rect x="34.5" y="597" width="0.2" height="15.0" fill="rgb(239,201,14)" rx="2" ry="2" />
<text  x="37.47" y="607.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.02%)</title><rect x="810.3" y="677" width="0.2" height="15.0" fill="rgb(221,71,23)" rx="2" ry="2" />
<text  x="813.29" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="653.9" y="629" width="0.3" height="15.0" fill="rgb(244,177,10)" rx="2" ry="2" />
<text  x="656.95" y="639.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="963.7" y="469" width="0.2" height="15.0" fill="rgb(248,220,26)" rx="2" ry="2" />
<text  x="966.69" y="479.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.21%)</title><rect x="836.0" y="405" width="2.4" height="15.0" fill="rgb(245,156,26)" rx="2" ry="2" />
<text  x="838.98" y="415.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (2 samples, 0.04%)</title><rect x="1090.7" y="645" width="0.5" height="15.0" fill="rgb(245,40,48)" rx="2" ry="2" />
<text  x="1093.67" y="655.5" ></text>
</g>
<g >
<title>ovl_instantiate (1 samples, 0.02%)</title><rect x="754.3" y="533" width="0.2" height="15.0" fill="rgb(234,51,2)" rx="2" ry="2" />
<text  x="757.26" y="543.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.25%)</title><rect x="817.9" y="437" width="2.9" height="15.0" fill="rgb(216,76,45)" rx="2" ry="2" />
<text  x="820.87" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1109.5" y="837" width="0.3" height="15.0" fill="rgb(253,173,51)" rx="2" ry="2" />
<text  x="1112.51" y="847.5" ></text>
</g>
<g >
<title>nf_ct_gc_expired (1 samples, 0.02%)</title><rect x="1109.0" y="949" width="0.3" height="15.0" fill="rgb(248,22,11)" rx="2" ry="2" />
<text  x="1112.02" y="959.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.29%)</title><rect x="884.9" y="309" width="3.4" height="15.0" fill="rgb(240,100,24)" rx="2" ry="2" />
<text  x="887.91" y="319.5" ></text>
</g>
<g >
<title>drop_buffers (1 samples, 0.02%)</title><rect x="122.8" y="373" width="0.2" height="15.0" fill="rgb(239,90,40)" rx="2" ry="2" />
<text  x="125.79" y="383.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.02%)</title><rect x="1017.5" y="869" width="0.3" height="15.0" fill="rgb(244,52,7)" rx="2" ry="2" />
<text  x="1020.51" y="879.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="865.3" y="421" width="0.3" height="15.0" fill="rgb(245,199,17)" rx="2" ry="2" />
<text  x="868.33" y="431.5" ></text>
</g>
<g >
<title>evict (94 samples, 1.95%)</title><rect x="770.7" y="677" width="22.9" height="15.0" fill="rgb(220,33,35)" rx="2" ry="2" />
<text  x="773.65" y="687.5" >e..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.15%)</title><rect x="824.5" y="485" width="1.7" height="15.0" fill="rgb(217,222,13)" rx="2" ry="2" />
<text  x="827.48" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (56 samples, 1.16%)</title><rect x="950.0" y="373" width="13.7" height="15.0" fill="rgb(220,225,8)" rx="2" ry="2" />
<text  x="952.99" y="383.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (170 samples, 3.52%)</title><rect x="768.0" y="821" width="41.6" height="15.0" fill="rgb(238,55,44)" rx="2" ry="2" />
<text  x="770.96" y="831.5" >std..</text>
</g>
<g >
<title>crc_99 (1 samples, 0.02%)</title><rect x="753.3" y="421" width="0.2" height="15.0" fill="rgb(237,114,23)" rx="2" ry="2" />
<text  x="756.28" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.04%)</title><rect x="1006.7" y="469" width="0.5" height="15.0" fill="rgb(239,96,25)" rx="2" ry="2" />
<text  x="1009.75" y="479.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="831.6" y="469" width="0.2" height="15.0" fill="rgb(253,143,26)" rx="2" ry="2" />
<text  x="834.57" y="479.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="831.8" y="405" width="0.3" height="15.0" fill="rgb(243,40,27)" rx="2" ry="2" />
<text  x="834.82" y="415.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (3 samples, 0.06%)</title><rect x="108.8" y="677" width="0.8" height="15.0" fill="rgb(217,52,20)" rx="2" ry="2" />
<text  x="111.84" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::try_statx (13 samples, 0.27%)</title><rect x="758.7" y="773" width="3.1" height="15.0" fill="rgb(243,101,30)" rx="2" ry="2" />
<text  x="761.66" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;std::fs::File&gt;&gt; (12 samples, 0.25%)</title><rect x="654.2" y="773" width="2.9" height="15.0" fill="rgb(228,126,21)" rx="2" ry="2" />
<text  x="657.19" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.2" y="1029" width="0.3" height="15.0" fill="rgb(231,65,35)" rx="2" ry="2" />
<text  x="13.24" y="1039.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1166.8" y="773" width="0.2" height="15.0" fill="rgb(240,198,32)" rx="2" ry="2" />
<text  x="1169.76" y="783.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.02%)</title><rect x="708.8" y="501" width="0.2" height="15.0" fill="rgb(239,179,39)" rx="2" ry="2" />
<text  x="711.75" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.08%)</title><rect x="866.3" y="453" width="1.0" height="15.0" fill="rgb(215,101,10)" rx="2" ry="2" />
<text  x="869.31" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.25%)</title><rect x="1012.9" y="773" width="2.9" height="15.0" fill="rgb(243,134,5)" rx="2" ry="2" />
<text  x="1015.87" y="783.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (11 samples, 0.23%)</title><rect x="814.9" y="501" width="2.7" height="15.0" fill="rgb(252,40,41)" rx="2" ry="2" />
<text  x="817.93" y="511.5" ></text>
</g>
<g >
<title>__alloc_file (1 samples, 0.02%)</title><rect x="735.7" y="597" width="0.2" height="15.0" fill="rgb(217,33,37)" rx="2" ry="2" />
<text  x="738.66" y="607.5" ></text>
</g>
<g >
<title>do_futex (7 samples, 0.15%)</title><rect x="129.1" y="725" width="1.8" height="15.0" fill="rgb(253,105,6)" rx="2" ry="2" />
<text  x="132.15" y="735.5" ></text>
</g>
<g >
<title>ext4_superblock_csum_set (2 samples, 0.04%)</title><rect x="775.3" y="453" width="0.5" height="15.0" fill="rgb(249,161,23)" rx="2" ry="2" />
<text  x="778.30" y="463.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="1101.9" y="757" width="0.3" height="15.0" fill="rgb(250,182,14)" rx="2" ry="2" />
<text  x="1104.92" y="767.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.02%)</title><rect x="46.5" y="965" width="0.2" height="15.0" fill="rgb(243,29,45)" rx="2" ry="2" />
<text  x="49.45" y="975.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 0.41%)</title><rect x="858.2" y="357" width="4.9" height="15.0" fill="rgb(217,155,53)" rx="2" ry="2" />
<text  x="861.24" y="367.5" ></text>
</g>
<g >
<title>dentry_kill (3 samples, 0.06%)</title><rect x="768.4" y="709" width="0.8" height="15.0" fill="rgb(221,42,16)" rx="2" ry="2" />
<text  x="771.45" y="719.5" ></text>
</g>
<g >
<title>enqueue_task (2 samples, 0.04%)</title><rect x="1169.4" y="645" width="0.5" height="15.0" fill="rgb(235,10,21)" rx="2" ry="2" />
<text  x="1172.45" y="655.5" ></text>
</g>
<g >
<title>schedule (7 samples, 0.15%)</title><rect x="1013.8" y="693" width="1.8" height="15.0" fill="rgb(221,75,4)" rx="2" ry="2" />
<text  x="1016.84" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="693.1" y="469" width="0.2" height="15.0" fill="rgb(205,166,13)" rx="2" ry="2" />
<text  x="696.09" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.08%)</title><rect x="820.8" y="533" width="1.0" height="15.0" fill="rgb(223,225,46)" rx="2" ry="2" />
<text  x="823.81" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="169.8" y="821" width="0.2" height="15.0" fill="rgb(217,155,45)" rx="2" ry="2" />
<text  x="172.76" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="1017.3" y="965" width="0.5" height="15.0" fill="rgb(235,10,23)" rx="2" ry="2" />
<text  x="1020.27" y="975.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="46.5" y="709" width="0.2" height="15.0" fill="rgb(245,160,47)" rx="2" ry="2" />
<text  x="49.45" y="719.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (1 samples, 0.02%)</title><rect x="832.6" y="405" width="0.2" height="15.0" fill="rgb(234,25,37)" rx="2" ry="2" />
<text  x="835.55" y="415.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="888.3" y="165" width="0.3" height="15.0" fill="rgb(221,152,17)" rx="2" ry="2" />
<text  x="891.33" y="175.5" ></text>
</g>
<g >
<title>path_parentat (4 samples, 0.08%)</title><rect x="769.2" y="709" width="1.0" height="15.0" fill="rgb(233,99,39)" rx="2" ry="2" />
<text  x="772.18" y="719.5" ></text>
</g>
<g >
<title>new_inode (1 samples, 0.02%)</title><rect x="755.0" y="533" width="0.2" height="15.0" fill="rgb(206,92,34)" rx="2" ry="2" />
<text  x="757.99" y="543.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.15%)</title><rect x="38.9" y="965" width="1.7" height="15.0" fill="rgb(248,154,5)" rx="2" ry="2" />
<text  x="41.87" y="975.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (78 samples, 1.62%)</title><rect x="132.6" y="565" width="19.1" height="15.0" fill="rgb(235,191,11)" rx="2" ry="2" />
<text  x="135.58" y="575.5" ></text>
</g>
<g >
<title>stop_this_handle (1 samples, 0.02%)</title><rect x="740.3" y="437" width="0.3" height="15.0" fill="rgb(249,32,27)" rx="2" ry="2" />
<text  x="743.31" y="447.5" ></text>
</g>
<g >
<title>__ext4_link (13 samples, 0.27%)</title><rect x="798.1" y="613" width="3.1" height="15.0" fill="rgb(207,91,5)" rx="2" ry="2" />
<text  x="801.05" y="623.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.02%)</title><rect x="1017.5" y="885" width="0.3" height="15.0" fill="rgb(208,11,52)" rx="2" ry="2" />
<text  x="1020.51" y="895.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize (1 samples, 0.02%)</title><rect x="1091.2" y="885" width="0.2" height="15.0" fill="rgb(215,82,45)" rx="2" ry="2" />
<text  x="1094.16" y="895.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="1169.0" y="693" width="0.2" height="15.0" fill="rgb(252,227,49)" rx="2" ry="2" />
<text  x="1171.96" y="703.5" ></text>
</g>
<g >
<title>serde_json::de::from_trait (1 samples, 0.02%)</title><rect x="1091.2" y="901" width="0.2" height="15.0" fill="rgb(246,77,20)" rx="2" ry="2" />
<text  x="1094.16" y="911.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="1109.3" y="805" width="0.2" height="15.0" fill="rgb(251,220,12)" rx="2" ry="2" />
<text  x="1112.26" y="815.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt (1 samples, 0.02%)</title><rect x="758.7" y="757" width="0.2" height="15.0" fill="rgb(231,55,41)" rx="2" ry="2" />
<text  x="761.66" y="767.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="658.1" y="805" width="0.5" height="15.0" fill="rgb(232,186,37)" rx="2" ry="2" />
<text  x="661.11" y="815.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect x="831.6" y="453" width="0.2" height="15.0" fill="rgb(250,196,14)" rx="2" ry="2" />
<text  x="834.57" y="463.5" ></text>
</g>
<g >
<title>nf_hook_slow_list (1 samples, 0.02%)</title><rect x="1113.4" y="677" width="0.3" height="15.0" fill="rgb(219,216,31)" rx="2" ry="2" />
<text  x="1116.42" y="687.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (4 samples, 0.08%)</title><rect x="193.3" y="501" width="0.9" height="15.0" fill="rgb(249,165,14)" rx="2" ry="2" />
<text  x="196.25" y="511.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="109.1" y="453" width="0.2" height="15.0" fill="rgb(245,85,38)" rx="2" ry="2" />
<text  x="112.09" y="463.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (1 samples, 0.02%)</title><rect x="171.7" y="965" width="0.3" height="15.0" fill="rgb(236,225,34)" rx="2" ry="2" />
<text  x="174.72" y="975.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (1 samples, 0.02%)</title><rect x="767.7" y="821" width="0.3" height="15.0" fill="rgb(244,215,23)" rx="2" ry="2" />
<text  x="770.72" y="831.5" ></text>
</g>
<g >
<title>ext4_group_desc_csum_set (1 samples, 0.02%)</title><rect x="775.1" y="469" width="0.2" height="15.0" fill="rgb(254,49,8)" rx="2" ry="2" />
<text  x="778.05" y="479.5" ></text>
</g>
<g >
<title>udp6_gro_receive (1 samples, 0.02%)</title><rect x="1111.7" y="725" width="0.3" height="15.0" fill="rgb(243,212,7)" rx="2" ry="2" />
<text  x="1114.71" y="735.5" ></text>
</g>
<g >
<title>get_acl (1 samples, 0.02%)</title><rect x="765.0" y="597" width="0.3" height="15.0" fill="rgb(210,129,39)" rx="2" ry="2" />
<text  x="768.02" y="607.5" ></text>
</g>
<g >
<title>dput (73 samples, 1.51%)</title><rect x="109.8" y="661" width="17.9" height="15.0" fill="rgb(205,44,40)" rx="2" ry="2" />
<text  x="112.82" y="671.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="789.5" y="309" width="0.2" height="15.0" fill="rgb(253,158,17)" rx="2" ry="2" />
<text  x="792.49" y="319.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="1111.7" y="741" width="0.3" height="15.0" fill="rgb(227,54,16)" rx="2" ry="2" />
<text  x="1114.71" y="751.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.02%)</title><rect x="744.7" y="341" width="0.3" height="15.0" fill="rgb(229,185,41)" rx="2" ry="2" />
<text  x="747.72" y="351.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.02%)</title><rect x="1089.9" y="1013" width="0.3" height="15.0" fill="rgb(246,152,1)" rx="2" ry="2" />
<text  x="1092.93" y="1023.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="169.8" y="805" width="0.2" height="15.0" fill="rgb(239,207,27)" rx="2" ry="2" />
<text  x="172.76" y="815.5" ></text>
</g>
<g >
<title>newidle_balance (3 samples, 0.06%)</title><rect x="1109.3" y="933" width="0.7" height="15.0" fill="rgb(216,204,14)" rx="2" ry="2" />
<text  x="1112.26" y="943.5" ></text>
</g>
<g >
<title>__lookup_slow (5 samples, 0.10%)</title><rect x="747.4" y="485" width="1.2" height="15.0" fill="rgb(243,217,45)" rx="2" ry="2" />
<text  x="750.41" y="495.5" ></text>
</g>
<g >
<title>dentry_kill (91 samples, 1.89%)</title><rect x="771.1" y="613" width="22.3" height="15.0" fill="rgb(241,101,26)" rx="2" ry="2" />
<text  x="774.14" y="623.5" >d..</text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.02%)</title><rect x="1016.0" y="965" width="0.3" height="15.0" fill="rgb(243,111,8)" rx="2" ry="2" />
<text  x="1019.05" y="975.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="10.2" y="837" width="0.3" height="15.0" fill="rgb(211,146,41)" rx="2" ry="2" />
<text  x="13.24" y="847.5" ></text>
</g>
<g >
<title>pollwake (1 samples, 0.02%)</title><rect x="1112.9" y="453" width="0.3" height="15.0" fill="rgb(228,29,0)" rx="2" ry="2" />
<text  x="1115.93" y="463.5" ></text>
</g>
<g >
<title>crc_1 (1 samples, 0.02%)</title><rect x="806.4" y="533" width="0.2" height="15.0" fill="rgb(212,9,25)" rx="2" ry="2" />
<text  x="809.37" y="543.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.04%)</title><rect x="814.4" y="533" width="0.5" height="15.0" fill="rgb(240,172,45)" rx="2" ry="2" />
<text  x="817.45" y="543.5" ></text>
</g>
<g >
<title>ext4_link (13 samples, 0.27%)</title><rect x="798.1" y="629" width="3.1" height="15.0" fill="rgb(219,31,30)" rx="2" ry="2" />
<text  x="801.05" y="639.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1112.9" y="421" width="0.3" height="15.0" fill="rgb(225,33,37)" rx="2" ry="2" />
<text  x="1115.93" y="431.5" ></text>
</g>
<g >
<title>d_delete (1 samples, 0.02%)</title><rect x="793.9" y="709" width="0.2" height="15.0" fill="rgb(251,134,53)" rx="2" ry="2" />
<text  x="796.89" y="719.5" ></text>
</g>
<g >
<title>dentry_kill (73 samples, 1.51%)</title><rect x="109.8" y="645" width="17.9" height="15.0" fill="rgb(226,153,15)" rx="2" ry="2" />
<text  x="112.82" y="655.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (47 samples, 0.97%)</title><rect x="196.7" y="533" width="11.5" height="15.0" fill="rgb(250,4,48)" rx="2" ry="2" />
<text  x="199.68" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::try_statx::statx (8 samples, 0.17%)</title><rect x="732.2" y="773" width="2.0" height="15.0" fill="rgb(206,183,17)" rx="2" ry="2" />
<text  x="735.24" y="783.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.02%)</title><rect x="747.7" y="405" width="0.2" height="15.0" fill="rgb(223,216,25)" rx="2" ry="2" />
<text  x="750.65" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::try_statx::statx (12 samples, 0.25%)</title><rect x="758.9" y="757" width="2.9" height="15.0" fill="rgb(241,23,54)" rx="2" ry="2" />
<text  x="761.91" y="767.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (25 samples, 0.52%)</title><rect x="882.5" y="389" width="6.1" height="15.0" fill="rgb(209,67,29)" rx="2" ry="2" />
<text  x="885.46" y="399.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="46.5" y="773" width="0.2" height="15.0" fill="rgb(237,118,36)" rx="2" ry="2" />
<text  x="49.45" y="783.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10 samples, 0.21%)</title><rect x="1111.5" y="885" width="2.4" height="15.0" fill="rgb(253,203,50)" rx="2" ry="2" />
<text  x="1114.46" y="895.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.08%)</title><rect x="1009.9" y="501" width="1.0" height="15.0" fill="rgb(205,215,39)" rx="2" ry="2" />
<text  x="1012.93" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (339 samples, 7.03%)</title><rect x="173.2" y="789" width="82.9" height="15.0" fill="rgb(222,157,21)" rx="2" ry="2" />
<text  x="176.19" y="799.5" >entry_SYS..</text>
</g>
<g >
<title>try_to_release_page (38 samples, 0.79%)</title><rect x="784.1" y="405" width="9.3" height="15.0" fill="rgb(213,105,27)" rx="2" ry="2" />
<text  x="787.11" y="415.5" ></text>
</g>
<g >
<title>complete_walk (1 samples, 0.02%)</title><rect x="732.5" y="613" width="0.2" height="15.0" fill="rgb(219,74,13)" rx="2" ry="2" />
<text  x="735.48" y="623.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.02%)</title><rect x="657.1" y="853" width="0.3" height="15.0" fill="rgb(206,157,46)" rx="2" ry="2" />
<text  x="660.13" y="863.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="1167.7" y="725" width="0.3" height="15.0" fill="rgb(223,154,0)" rx="2" ry="2" />
<text  x="1170.74" y="735.5" ></text>
</g>
<g >
<title>putname (1 samples, 0.02%)</title><rect x="793.6" y="725" width="0.3" height="15.0" fill="rgb(217,36,34)" rx="2" ry="2" />
<text  x="796.65" y="735.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (11 samples, 0.23%)</title><rect x="678.2" y="501" width="2.7" height="15.0" fill="rgb(220,13,5)" rx="2" ry="2" />
<text  x="681.17" y="511.5" ></text>
</g>
<g >
<title>__d_lookup (1 samples, 0.02%)</title><rect x="757.0" y="581" width="0.2" height="15.0" fill="rgb(228,101,36)" rx="2" ry="2" />
<text  x="759.95" y="591.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="658.4" y="773" width="0.2" height="15.0" fill="rgb(251,64,14)" rx="2" ry="2" />
<text  x="661.35" y="783.5" ></text>
</g>
<g >
<title>d_lookup (1 samples, 0.02%)</title><rect x="739.6" y="485" width="0.2" height="15.0" fill="rgb(221,80,39)" rx="2" ry="2" />
<text  x="742.58" y="495.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.04%)</title><rect x="1167.2" y="741" width="0.5" height="15.0" fill="rgb(223,0,26)" rx="2" ry="2" />
<text  x="1170.25" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.44%)</title><rect x="30.6" y="869" width="5.1" height="15.0" fill="rgb(240,183,21)" rx="2" ry="2" />
<text  x="33.55" y="879.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="1092.9" y="725" width="0.2" height="15.0" fill="rgb(223,11,35)" rx="2" ry="2" />
<text  x="1095.87" y="735.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (3 samples, 0.06%)</title><rect x="799.3" y="533" width="0.7" height="15.0" fill="rgb(216,13,26)" rx="2" ry="2" />
<text  x="802.28" y="543.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.02%)</title><rect x="1114.6" y="789" width="0.3" height="15.0" fill="rgb(228,200,35)" rx="2" ry="2" />
<text  x="1117.64" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.23%)</title><rect x="1100.7" y="1013" width="2.7" height="15.0" fill="rgb(210,160,0)" rx="2" ry="2" />
<text  x="1103.70" y="1023.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (76 samples, 1.58%)</title><rect x="838.4" y="357" width="18.6" height="15.0" fill="rgb(224,41,40)" rx="2" ry="2" />
<text  x="841.42" y="367.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="108.1" y="677" width="0.3" height="15.0" fill="rgb(212,85,0)" rx="2" ry="2" />
<text  x="111.11" y="687.5" ></text>
</g>
<g >
<title>ovl_lookup_temp (8 samples, 0.17%)</title><rect x="747.4" y="517" width="2.0" height="15.0" fill="rgb(211,114,21)" rx="2" ry="2" />
<text  x="750.41" y="527.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="103.7" y="885" width="0.2" height="15.0" fill="rgb(243,184,51)" rx="2" ry="2" />
<text  x="106.71" y="895.5" ></text>
</g>
<g >
<title>generic_write_end (99 samples, 2.05%)</title><rect x="223.6" y="565" width="24.2" height="15.0" fill="rgb(244,205,36)" rx="2" ry="2" />
<text  x="226.59" y="575.5" >g..</text>
</g>
<g >
<title>__brelse (1 samples, 0.02%)</title><rect x="803.4" y="565" width="0.3" height="15.0" fill="rgb(239,199,21)" rx="2" ry="2" />
<text  x="806.44" y="575.5" ></text>
</g>
<g >
<title>page_cache_delete_batch (1 samples, 0.02%)</title><rect x="781.7" y="453" width="0.2" height="15.0" fill="rgb(236,56,7)" rx="2" ry="2" />
<text  x="784.66" y="463.5" ></text>
</g>
<g >
<title>unlazy_walk (1 samples, 0.02%)</title><rect x="766.0" y="629" width="0.2" height="15.0" fill="rgb(218,140,4)" rx="2" ry="2" />
<text  x="769.00" y="639.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="1100.7" y="869" width="0.2" height="15.0" fill="rgb(251,160,27)" rx="2" ry="2" />
<text  x="1103.70" y="879.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="193.7" y="485" width="0.3" height="15.0" fill="rgb(245,82,41)" rx="2" ry="2" />
<text  x="196.74" y="495.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (10 samples, 0.21%)</title><rect x="860.4" y="213" width="2.5" height="15.0" fill="rgb(207,133,6)" rx="2" ry="2" />
<text  x="863.44" y="223.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="1092.9" y="789" width="0.2" height="15.0" fill="rgb(253,210,50)" rx="2" ry="2" />
<text  x="1095.87" y="799.5" ></text>
</g>
<g >
<title>__es_remove_extent (1 samples, 0.02%)</title><rect x="680.4" y="469" width="0.2" height="15.0" fill="rgb(218,101,51)" rx="2" ry="2" />
<text  x="683.37" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.19%)</title><rect x="764.8" y="741" width="2.2" height="15.0" fill="rgb(234,67,26)" rx="2" ry="2" />
<text  x="767.78" y="751.5" ></text>
</g>
<g >
<title>std::ffi::os_str::OsString::push (1 samples, 0.02%)</title><rect x="762.6" y="725" width="0.2" height="15.0" fill="rgb(247,210,12)" rx="2" ry="2" />
<text  x="765.58" y="735.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="731.5" y="773" width="0.2" height="15.0" fill="rgb(209,143,39)" rx="2" ry="2" />
<text  x="734.51" y="783.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1169.4" y="597" width="0.3" height="15.0" fill="rgb(244,30,48)" rx="2" ry="2" />
<text  x="1172.45" y="607.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.04%)</title><rect x="831.8" y="469" width="0.5" height="15.0" fill="rgb(213,176,43)" rx="2" ry="2" />
<text  x="834.82" y="479.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.04%)</title><rect x="110.1" y="453" width="0.5" height="15.0" fill="rgb(242,123,23)" rx="2" ry="2" />
<text  x="113.07" y="463.5" ></text>
</g>
<g >
<title>new_sync_write (339 samples, 7.03%)</title><rect x="173.2" y="709" width="82.9" height="15.0" fill="rgb(219,25,34)" rx="2" ry="2" />
<text  x="176.19" y="719.5" >new_sync_..</text>
</g>
<g >
<title>ttwu_do_activate (2 samples, 0.04%)</title><rect x="1169.4" y="661" width="0.5" height="15.0" fill="rgb(233,76,10)" rx="2" ry="2" />
<text  x="1172.45" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.08%)</title><rect x="830.6" y="389" width="1.0" height="15.0" fill="rgb(208,86,13)" rx="2" ry="2" />
<text  x="833.59" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect x="809.6" y="757" width="0.4" height="15.0" fill="rgb(248,143,40)" rx="2" ry="2" />
<text  x="812.55" y="767.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="1189.8" y="869" width="0.2" height="15.0" fill="rgb(251,146,24)" rx="2" ry="2" />
<text  x="1192.76" y="879.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="731.7" y="709" width="0.3" height="15.0" fill="rgb(248,173,16)" rx="2" ry="2" />
<text  x="734.75" y="719.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="169.3" y="757" width="0.2" height="15.0" fill="rgb(229,207,32)" rx="2" ry="2" />
<text  x="172.27" y="767.5" ></text>
</g>
<g >
<title>__GI___getcwd (2 samples, 0.04%)</title><rect x="755.7" y="757" width="0.5" height="15.0" fill="rgb(222,162,28)" rx="2" ry="2" />
<text  x="758.73" y="767.5" ></text>
</g>
<g >
<title>__GI___readlink (10 samples, 0.21%)</title><rect x="764.5" y="773" width="2.5" height="15.0" fill="rgb(245,130,46)" rx="2" ry="2" />
<text  x="767.53" y="783.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (813 samples, 16.86%)</title><rect x="812.5" y="661" width="198.9" height="15.0" fill="rgb(233,110,30)" rx="2" ry="2" />
<text  x="815.49" y="671.5" >core::iter::traits::iterat..</text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="736.4" y="453" width="0.2" height="15.0" fill="rgb(252,68,6)" rx="2" ry="2" />
<text  x="739.40" y="463.5" ></text>
</g>
<g >
<title>d_set_d_op (1 samples, 0.02%)</title><rect x="760.4" y="517" width="0.2" height="15.0" fill="rgb(240,82,39)" rx="2" ry="2" />
<text  x="763.38" y="527.5" ></text>
</g>
<g >
<title>ext4_bread (1 samples, 0.02%)</title><rect x="750.6" y="405" width="0.2" height="15.0" fill="rgb(216,227,52)" rx="2" ry="2" />
<text  x="753.59" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="731.7" y="725" width="0.3" height="15.0" fill="rgb(216,199,36)" rx="2" ry="2" />
<text  x="734.75" y="735.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (17 samples, 0.35%)</title><rect x="937.8" y="485" width="4.1" height="15.0" fill="rgb(230,205,46)" rx="2" ry="2" />
<text  x="940.75" y="495.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="1104.4" y="901" width="0.2" height="15.0" fill="rgb(210,153,16)" rx="2" ry="2" />
<text  x="1107.37" y="911.5" ></text>
</g>
<g >
<title>get_cached_acl (1 samples, 0.02%)</title><rect x="765.3" y="533" width="0.2" height="15.0" fill="rgb(251,38,40)" rx="2" ry="2" />
<text  x="768.27" y="543.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.02%)</title><rect x="10.0" y="1013" width="0.2" height="15.0" fill="rgb(241,55,45)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (1 samples, 0.02%)</title><rect x="803.7" y="485" width="0.2" height="15.0" fill="rgb(221,143,12)" rx="2" ry="2" />
<text  x="806.68" y="495.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.02%)</title><rect x="103.7" y="965" width="0.2" height="15.0" fill="rgb(253,92,5)" rx="2" ry="2" />
<text  x="106.71" y="975.5" ></text>
</g>
<g >
<title>sched_setaffinity (1 samples, 0.02%)</title><rect x="10.5" y="885" width="0.2" height="15.0" fill="rgb(209,146,1)" rx="2" ry="2" />
<text  x="13.49" y="895.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="708.5" y="501" width="0.3" height="15.0" fill="rgb(244,225,16)" rx="2" ry="2" />
<text  x="711.51" y="511.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::load_fs (1 samples, 0.02%)</title><rect x="1091.2" y="949" width="0.2" height="15.0" fill="rgb(250,13,41)" rx="2" ry="2" />
<text  x="1094.16" y="959.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (38 samples, 0.79%)</title><rect x="812.5" y="613" width="9.3" height="15.0" fill="rgb(241,118,6)" rx="2" ry="2" />
<text  x="815.49" y="623.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (1 samples, 0.02%)</title><rect x="796.6" y="501" width="0.2" height="15.0" fill="rgb(215,57,36)" rx="2" ry="2" />
<text  x="799.59" y="511.5" ></text>
</g>
<g >
<title>std::path::Path::exists (15 samples, 0.31%)</title><rect x="758.2" y="821" width="3.6" height="15.0" fill="rgb(238,175,27)" rx="2" ry="2" />
<text  x="761.17" y="831.5" ></text>
</g>
<g >
<title>AcceptThread (1 samples, 0.02%)</title><rect x="1089.9" y="981" width="0.3" height="15.0" fill="rgb(217,170,25)" rx="2" ry="2" />
<text  x="1092.93" y="991.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10 samples, 0.21%)</title><rect x="1164.3" y="773" width="2.5" height="15.0" fill="rgb(237,2,41)" rx="2" ry="2" />
<text  x="1167.31" y="783.5" ></text>
</g>
<g >
<title>psi_group_change (2 samples, 0.04%)</title><rect x="1015.1" y="629" width="0.5" height="15.0" fill="rgb(224,114,23)" rx="2" ry="2" />
<text  x="1018.07" y="639.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="131.4" y="725" width="0.2" height="15.0" fill="rgb(213,64,2)" rx="2" ry="2" />
<text  x="134.35" y="735.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.15%)</title><rect x="810.8" y="661" width="1.7" height="15.0" fill="rgb(246,38,35)" rx="2" ry="2" />
<text  x="813.78" y="671.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.10%)</title><rect x="828.1" y="501" width="1.3" height="15.0" fill="rgb(246,174,17)" rx="2" ry="2" />
<text  x="831.15" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="774.1" y="421" width="0.2" height="15.0" fill="rgb(233,46,10)" rx="2" ry="2" />
<text  x="777.08" y="431.5" ></text>
</g>
<g >
<title>refill_obj_stock (1 samples, 0.02%)</title><rect x="1114.6" y="725" width="0.3" height="15.0" fill="rgb(223,184,10)" rx="2" ry="2" />
<text  x="1117.64" y="735.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="810.0" y="741" width="0.3" height="15.0" fill="rgb(231,59,14)" rx="2" ry="2" />
<text  x="813.04" y="751.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="1112.9" y="613" width="0.3" height="15.0" fill="rgb(228,62,6)" rx="2" ry="2" />
<text  x="1115.93" y="623.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (38 samples, 0.79%)</title><rect x="283.0" y="837" width="9.3" height="15.0" fill="rgb(237,217,39)" rx="2" ry="2" />
<text  x="286.04" y="847.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.02%)</title><rect x="1169.4" y="613" width="0.3" height="15.0" fill="rgb(226,77,44)" rx="2" ry="2" />
<text  x="1172.45" y="623.5" ></text>
</g>
<g >
<title>lookup_one_len (1 samples, 0.02%)</title><rect x="739.6" y="517" width="0.2" height="15.0" fill="rgb(232,57,29)" rx="2" ry="2" />
<text  x="742.58" y="527.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="1161.4" y="949" width="0.2" height="15.0" fill="rgb(243,14,24)" rx="2" ry="2" />
<text  x="1164.37" y="959.5" ></text>
</g>
<g >
<title>touch_atime (1 samples, 0.02%)</title><rect x="131.8" y="661" width="0.3" height="15.0" fill="rgb(228,63,44)" rx="2" ry="2" />
<text  x="134.84" y="671.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="813.7" y="453" width="0.3" height="15.0" fill="rgb(223,228,0)" rx="2" ry="2" />
<text  x="816.71" y="463.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object (2 samples, 0.04%)</title><rect x="1006.7" y="549" width="0.5" height="15.0" fill="rgb(209,178,1)" rx="2" ry="2" />
<text  x="1009.75" y="559.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="1090.7" y="581" width="0.2" height="15.0" fill="rgb(232,13,12)" rx="2" ry="2" />
<text  x="1093.67" y="591.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (1 samples, 0.02%)</title><rect x="1090.7" y="501" width="0.2" height="15.0" fill="rgb(235,117,4)" rx="2" ry="2" />
<text  x="1093.67" y="511.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect x="46.5" y="853" width="0.2" height="15.0" fill="rgb(235,222,2)" rx="2" ry="2" />
<text  x="49.45" y="863.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (5 samples, 0.10%)</title><rect x="840.1" y="277" width="1.3" height="15.0" fill="rgb(247,12,11)" rx="2" ry="2" />
<text  x="843.13" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (3 samples, 0.06%)</title><rect x="104.4" y="885" width="0.8" height="15.0" fill="rgb(249,113,41)" rx="2" ry="2" />
<text  x="107.44" y="895.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="941.7" y="389" width="0.2" height="15.0" fill="rgb(224,129,8)" rx="2" ry="2" />
<text  x="944.67" y="399.5" ></text>
</g>
<g >
<title>posix_acl_create (1 samples, 0.02%)</title><rect x="749.4" y="517" width="0.2" height="15.0" fill="rgb(230,202,24)" rx="2" ry="2" />
<text  x="752.37" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_free (4 samples, 0.08%)</title><rect x="1106.3" y="885" width="1.0" height="15.0" fill="rgb(227,218,1)" rx="2" ry="2" />
<text  x="1109.33" y="895.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="108.1" y="533" width="0.3" height="15.0" fill="rgb(219,58,2)" rx="2" ry="2" />
<text  x="111.11" y="543.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (10 samples, 0.21%)</title><rect x="205.5" y="501" width="2.4" height="15.0" fill="rgb(211,216,35)" rx="2" ry="2" />
<text  x="208.48" y="511.5" ></text>
</g>
<g >
<title>security_inode_need_killpriv (1 samples, 0.02%)</title><rect x="660.6" y="549" width="0.2" height="15.0" fill="rgb(237,19,35)" rx="2" ry="2" />
<text  x="663.55" y="559.5" ></text>
</g>
<g >
<title>alloc_pages_current (32 samples, 0.66%)</title><rect x="694.1" y="517" width="7.8" height="15.0" fill="rgb(236,52,21)" rx="2" ry="2" />
<text  x="697.07" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.04%)</title><rect x="754.5" y="517" width="0.5" height="15.0" fill="rgb(216,7,33)" rx="2" ry="2" />
<text  x="757.50" y="527.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="805.6" y="581" width="0.3" height="15.0" fill="rgb(236,36,3)" rx="2" ry="2" />
<text  x="808.64" y="591.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="838.2" y="389" width="0.2" height="15.0" fill="rgb(240,177,32)" rx="2" ry="2" />
<text  x="841.18" y="399.5" ></text>
</g>
<g >
<title>__find_get_block (3 samples, 0.06%)</title><rect x="246.3" y="437" width="0.8" height="15.0" fill="rgb(211,64,45)" rx="2" ry="2" />
<text  x="249.34" y="447.5" ></text>
</g>
<g >
<title>try_to_free_buffers (17 samples, 0.35%)</title><rect x="122.8" y="389" width="4.1" height="15.0" fill="rgb(243,50,49)" rx="2" ry="2" />
<text  x="125.79" y="399.5" ></text>
</g>
<g >
<title>crypto_shash_update (9 samples, 0.19%)</title><rect x="238.8" y="437" width="2.2" height="15.0" fill="rgb(219,40,27)" rx="2" ry="2" />
<text  x="241.76" y="447.5" ></text>
</g>
<g >
<title>alx_poll (10 samples, 0.21%)</title><rect x="1111.5" y="789" width="2.4" height="15.0" fill="rgb(249,34,30)" rx="2" ry="2" />
<text  x="1114.46" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sys::unix::os_str::Buf&gt; (1 samples, 0.02%)</title><rect x="767.7" y="789" width="0.3" height="15.0" fill="rgb(235,67,33)" rx="2" ry="2" />
<text  x="770.72" y="799.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.02%)</title><rect x="802.9" y="565" width="0.3" height="15.0" fill="rgb(245,5,35)" rx="2" ry="2" />
<text  x="805.95" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.15%)</title><rect x="50.9" y="933" width="1.7" height="15.0" fill="rgb(247,42,38)" rx="2" ry="2" />
<text  x="53.86" y="943.5" ></text>
</g>
<g >
<title>ret_from_fork (27 samples, 0.56%)</title><rect x="1103.4" y="1029" width="6.6" height="15.0" fill="rgb(217,130,3)" rx="2" ry="2" />
<text  x="1106.39" y="1039.5" ></text>
</g>
<g >
<title>alx_clean_tx_irq (1 samples, 0.02%)</title><rect x="1112.0" y="773" width="0.2" height="15.0" fill="rgb(229,23,36)" rx="2" ry="2" />
<text  x="1114.95" y="783.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.02%)</title><rect x="710.2" y="469" width="0.3" height="15.0" fill="rgb(250,32,10)" rx="2" ry="2" />
<text  x="713.22" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1090.2" y="709" width="0.2" height="15.0" fill="rgb(221,217,47)" rx="2" ry="2" />
<text  x="1093.18" y="719.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (1 samples, 0.02%)</title><rect x="751.1" y="389" width="0.2" height="15.0" fill="rgb(220,140,22)" rx="2" ry="2" />
<text  x="754.08" y="399.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.02%)</title><rect x="795.1" y="501" width="0.3" height="15.0" fill="rgb(234,47,24)" rx="2" ry="2" />
<text  x="798.12" y="511.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (1 samples, 0.02%)</title><rect x="809.1" y="693" width="0.2" height="15.0" fill="rgb(239,182,22)" rx="2" ry="2" />
<text  x="812.06" y="703.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (58 samples, 1.20%)</title><rect x="1170.2" y="853" width="14.2" height="15.0" fill="rgb(221,154,50)" rx="2" ry="2" />
<text  x="1173.18" y="863.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.02%)</title><rect x="754.0" y="485" width="0.3" height="15.0" fill="rgb(228,122,3)" rx="2" ry="2" />
<text  x="757.01" y="495.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.04%)</title><rect x="747.4" y="421" width="0.5" height="15.0" fill="rgb(250,128,8)" rx="2" ry="2" />
<text  x="750.41" y="431.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (244 samples, 5.06%)</title><rect x="878.1" y="485" width="59.7" height="15.0" fill="rgb(241,36,42)" rx="2" ry="2" />
<text  x="881.06" y="495.5" >serde:..</text>
</g>
<g >
<title>rebalance_domains (3 samples, 0.06%)</title><rect x="1168.0" y="741" width="0.7" height="15.0" fill="rgb(211,84,30)" rx="2" ry="2" />
<text  x="1170.98" y="751.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1161.6" y="901" width="0.3" height="15.0" fill="rgb(226,143,38)" rx="2" ry="2" />
<text  x="1164.62" y="911.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="950.2" y="341" width="0.3" height="15.0" fill="rgb(252,16,51)" rx="2" ry="2" />
<text  x="953.23" y="351.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="1091.2" y="805" width="0.2" height="15.0" fill="rgb(227,3,16)" rx="2" ry="2" />
<text  x="1094.16" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.08%)</title><rect x="863.1" y="277" width="1.0" height="15.0" fill="rgb(229,18,47)" rx="2" ry="2" />
<text  x="866.13" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="814.0" y="485" width="0.4" height="15.0" fill="rgb(247,0,43)" rx="2" ry="2" />
<text  x="816.96" y="495.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (7 samples, 0.15%)</title><rect x="1187.1" y="805" width="1.7" height="15.0" fill="rgb(253,12,41)" rx="2" ry="2" />
<text  x="1190.06" y="815.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="653.9" y="741" width="0.3" height="15.0" fill="rgb(206,58,23)" rx="2" ry="2" />
<text  x="656.95" y="751.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="749.9" y="469" width="0.2" height="15.0" fill="rgb(233,58,23)" rx="2" ry="2" />
<text  x="752.85" y="479.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (2 samples, 0.04%)</title><rect x="741.8" y="421" width="0.5" height="15.0" fill="rgb(210,228,50)" rx="2" ry="2" />
<text  x="744.78" y="431.5" ></text>
</g>
<g >
<title>ext4_inode_journal_mode (1 samples, 0.02%)</title><rect x="719.5" y="453" width="0.3" height="15.0" fill="rgb(231,180,15)" rx="2" ry="2" />
<text  x="722.52" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.04%)</title><rect x="860.0" y="181" width="0.4" height="15.0" fill="rgb(230,64,44)" rx="2" ry="2" />
<text  x="862.95" y="191.5" ></text>
</g>
<g >
<title>arch_do_signal (4 samples, 0.08%)</title><rect x="1092.1" y="949" width="1.0" height="15.0" fill="rgb(218,189,21)" rx="2" ry="2" />
<text  x="1095.14" y="959.5" ></text>
</g>
<g >
<title>__udpv6_queue_rcv_skb (1 samples, 0.02%)</title><rect x="1113.7" y="517" width="0.2" height="15.0" fill="rgb(232,152,43)" rx="2" ry="2" />
<text  x="1116.67" y="527.5" ></text>
</g>
<g >
<title>__call_rcu (1 samples, 0.02%)</title><rect x="768.4" y="661" width="0.3" height="15.0" fill="rgb(253,146,31)" rx="2" ry="2" />
<text  x="771.45" y="671.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (21 samples, 0.44%)</title><rect x="669.1" y="485" width="5.2" height="15.0" fill="rgb(208,138,2)" rx="2" ry="2" />
<text  x="672.12" y="495.5" ></text>
</g>
<g >
<title>vfs_getxattr (1 samples, 0.02%)</title><rect x="659.6" y="565" width="0.2" height="15.0" fill="rgb(236,141,12)" rx="2" ry="2" />
<text  x="662.57" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.08%)</title><rect x="1008.5" y="549" width="0.9" height="15.0" fill="rgb(251,225,34)" rx="2" ry="2" />
<text  x="1011.46" y="559.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (59 samples, 1.22%)</title><rect x="233.4" y="533" width="14.4" height="15.0" fill="rgb(219,229,11)" rx="2" ry="2" />
<text  x="236.38" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.04%)</title><rect x="814.4" y="469" width="0.5" height="15.0" fill="rgb(231,74,52)" rx="2" ry="2" />
<text  x="817.45" y="479.5" ></text>
</g>
<g >
<title>alloc_inode (1 samples, 0.02%)</title><rect x="755.0" y="517" width="0.2" height="15.0" fill="rgb(210,20,33)" rx="2" ry="2" />
<text  x="757.99" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (3 samples, 0.06%)</title><rect x="170.0" y="821" width="0.7" height="15.0" fill="rgb(210,33,50)" rx="2" ry="2" />
<text  x="173.01" y="831.5" ></text>
</g>
<g >
<title>xas_store (2 samples, 0.04%)</title><rect x="780.7" y="421" width="0.5" height="15.0" fill="rgb(245,37,8)" rx="2" ry="2" />
<text  x="783.68" y="431.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (1 samples, 0.02%)</title><rect x="255.2" y="581" width="0.2" height="15.0" fill="rgb(224,130,47)" rx="2" ry="2" />
<text  x="258.15" y="591.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="802.9" y="597" width="0.3" height="15.0" fill="rgb(227,123,51)" rx="2" ry="2" />
<text  x="805.95" y="607.5" ></text>
</g>
<g >
<title>path_lookupat (11 samples, 0.23%)</title><rect x="758.9" y="613" width="2.7" height="15.0" fill="rgb(214,89,42)" rx="2" ry="2" />
<text  x="761.91" y="623.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.02%)</title><rect x="203.5" y="501" width="0.3" height="15.0" fill="rgb(216,160,11)" rx="2" ry="2" />
<text  x="206.53" y="511.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="103.7" y="869" width="0.2" height="15.0" fill="rgb(254,117,50)" rx="2" ry="2" />
<text  x="106.71" y="879.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (6 samples, 0.12%)</title><rect x="721.0" y="469" width="1.5" height="15.0" fill="rgb(234,1,51)" rx="2" ry="2" />
<text  x="723.98" y="479.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.04%)</title><rect x="778.2" y="421" width="0.5" height="15.0" fill="rgb(207,38,40)" rx="2" ry="2" />
<text  x="781.24" y="431.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (10 samples, 0.21%)</title><rect x="685.0" y="485" width="2.5" height="15.0" fill="rgb(235,182,42)" rx="2" ry="2" />
<text  x="688.02" y="495.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (1 samples, 0.02%)</title><rect x="1169.9" y="837" width="0.3" height="15.0" fill="rgb(225,174,50)" rx="2" ry="2" />
<text  x="1172.94" y="847.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="862.9" y="197" width="0.2" height="15.0" fill="rgb(205,88,32)" rx="2" ry="2" />
<text  x="865.89" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="831.6" y="341" width="0.2" height="15.0" fill="rgb(252,212,37)" rx="2" ry="2" />
<text  x="834.57" y="351.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.02%)</title><rect x="813.7" y="405" width="0.3" height="15.0" fill="rgb(211,202,22)" rx="2" ry="2" />
<text  x="816.71" y="415.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (168 samples, 3.48%)</title><rect x="1116.1" y="917" width="41.1" height="15.0" fill="rgb(245,150,25)" rx="2" ry="2" />
<text  x="1119.11" y="927.5" >mwa..</text>
</g>
<g >
<title>NaClHostDescClose (1 samples, 0.02%)</title><rect x="103.7" y="917" width="0.2" height="15.0" fill="rgb(232,81,27)" rx="2" ry="2" />
<text  x="106.71" y="927.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="853.8" y="165" width="0.5" height="15.0" fill="rgb(208,112,47)" rx="2" ry="2" />
<text  x="856.84" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="860.0" y="197" width="0.4" height="15.0" fill="rgb(206,96,42)" rx="2" ry="2" />
<text  x="862.95" y="207.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.02%)</title><rect x="35.7" y="821" width="0.2" height="15.0" fill="rgb(240,90,29)" rx="2" ry="2" />
<text  x="38.69" y="831.5" ></text>
</g>
<g >
<title>NaClSysRead (179 samples, 3.71%)</title><rect x="127.7" y="981" width="43.8" height="15.0" fill="rgb(249,55,54)" rx="2" ry="2" />
<text  x="130.68" y="991.5" >NaCl..</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (6 samples, 0.12%)</title><rect x="1114.6" y="853" width="1.5" height="15.0" fill="rgb(244,103,21)" rx="2" ry="2" />
<text  x="1117.64" y="863.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.06%)</title><rect x="104.4" y="821" width="0.8" height="15.0" fill="rgb(253,112,15)" rx="2" ry="2" />
<text  x="107.44" y="831.5" ></text>
</g>
<g >
<title>security_inode_need_killpriv (3 samples, 0.06%)</title><rect x="659.3" y="645" width="0.8" height="15.0" fill="rgb(252,196,43)" rx="2" ry="2" />
<text  x="662.33" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.21%)</title><rect x="833.0" y="309" width="2.5" height="15.0" fill="rgb(241,220,29)" rx="2" ry="2" />
<text  x="836.04" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (48 samples, 1.00%)</title><rect x="157.8" y="773" width="11.7" height="15.0" fill="rgb(247,109,50)" rx="2" ry="2" />
<text  x="160.78" y="783.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (1 samples, 0.02%)</title><rect x="802.7" y="597" width="0.2" height="15.0" fill="rgb(235,227,26)" rx="2" ry="2" />
<text  x="805.70" y="607.5" ></text>
</g>
<g >
<title>d_alloc (4 samples, 0.08%)</title><rect x="795.1" y="581" width="1.0" height="15.0" fill="rgb(227,209,40)" rx="2" ry="2" />
<text  x="798.12" y="591.5" ></text>
</g>
<g >
<title>add_transaction_credits (1 samples, 0.02%)</title><rect x="663.7" y="517" width="0.3" height="15.0" fill="rgb(237,115,11)" rx="2" ry="2" />
<text  x="666.73" y="527.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (1 samples, 0.02%)</title><rect x="770.7" y="629" width="0.2" height="15.0" fill="rgb(226,102,34)" rx="2" ry="2" />
<text  x="773.65" y="639.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 0.04%)</title><rect x="1017.8" y="901" width="0.4" height="15.0" fill="rgb(223,154,11)" rx="2" ry="2" />
<text  x="1020.76" y="911.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (5 samples, 0.10%)</title><rect x="108.4" y="917" width="1.2" height="15.0" fill="rgb(210,221,42)" rx="2" ry="2" />
<text  x="111.35" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (2 samples, 0.04%)</title><rect x="1017.3" y="949" width="0.5" height="15.0" fill="rgb(239,52,15)" rx="2" ry="2" />
<text  x="1020.27" y="959.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (90 samples, 1.87%)</title><rect x="131.1" y="821" width="22.0" height="15.0" fill="rgb(246,209,32)" rx="2" ry="2" />
<text  x="134.11" y="831.5" >s..</text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.02%)</title><rect x="1161.4" y="965" width="0.2" height="15.0" fill="rgb(233,110,5)" rx="2" ry="2" />
<text  x="1164.37" y="975.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (36 samples, 0.75%)</title><rect x="784.4" y="373" width="8.8" height="15.0" fill="rgb(239,33,11)" rx="2" ry="2" />
<text  x="787.35" y="383.5" ></text>
</g>
<g >
<title>ext4_releasepage (38 samples, 0.79%)</title><rect x="784.1" y="389" width="9.3" height="15.0" fill="rgb(208,154,19)" rx="2" ry="2" />
<text  x="787.11" y="399.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (8 samples, 0.17%)</title><rect x="691.6" y="485" width="2.0" height="15.0" fill="rgb(217,74,47)" rx="2" ry="2" />
<text  x="694.63" y="495.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect x="731.0" y="757" width="0.5" height="15.0" fill="rgb(248,147,20)" rx="2" ry="2" />
<text  x="734.02" y="767.5" ></text>
</g>
<g >
<title>vfs_create (25 samples, 0.52%)</title><rect x="740.1" y="501" width="6.1" height="15.0" fill="rgb(254,65,51)" rx="2" ry="2" />
<text  x="743.07" y="511.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="115.7" y="437" width="0.2" height="15.0" fill="rgb(230,92,14)" rx="2" ry="2" />
<text  x="118.69" y="447.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (41 samples, 0.85%)</title><rect x="117.2" y="469" width="10.0" height="15.0" fill="rgb(250,54,37)" rx="2" ry="2" />
<text  x="120.16" y="479.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="731.3" y="741" width="0.2" height="15.0" fill="rgb(245,62,35)" rx="2" ry="2" />
<text  x="734.26" y="751.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (10 samples, 0.21%)</title><rect x="205.5" y="485" width="2.4" height="15.0" fill="rgb(239,67,53)" rx="2" ry="2" />
<text  x="208.48" y="495.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (115 samples, 2.38%)</title><rect x="836.0" y="485" width="28.1" height="15.0" fill="rgb(223,111,41)" rx="2" ry="2" />
<text  x="838.98" y="495.5" >s..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (4 samples, 0.08%)</title><rect x="46.7" y="981" width="1.0" height="15.0" fill="rgb(222,21,3)" rx="2" ry="2" />
<text  x="49.70" y="991.5" ></text>
</g>
<g >
<title>wait_for_stable_page (2 samples, 0.04%)</title><rect x="703.4" y="549" width="0.5" height="15.0" fill="rgb(208,46,28)" rx="2" ry="2" />
<text  x="706.37" y="559.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.06%)</title><rect x="864.1" y="437" width="0.7" height="15.0" fill="rgb(242,112,39)" rx="2" ry="2" />
<text  x="867.11" y="447.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="865.3" y="453" width="0.3" height="15.0" fill="rgb(205,152,41)" rx="2" ry="2" />
<text  x="868.33" y="463.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="775.8" y="453" width="0.2" height="15.0" fill="rgb(208,40,18)" rx="2" ry="2" />
<text  x="778.79" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="1090.9" y="469" width="0.3" height="15.0" fill="rgb(228,52,22)" rx="2" ry="2" />
<text  x="1093.91" y="479.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.02%)</title><rect x="35.7" y="773" width="0.2" height="15.0" fill="rgb(227,215,33)" rx="2" ry="2" />
<text  x="38.69" y="783.5" ></text>
</g>
<g >
<title>ext4_generic_delete_entry (1 samples, 0.02%)</title><rect x="805.9" y="565" width="0.2" height="15.0" fill="rgb(221,215,21)" rx="2" ry="2" />
<text  x="808.88" y="575.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="35.7" y="837" width="0.2" height="15.0" fill="rgb(249,6,19)" rx="2" ry="2" />
<text  x="38.69" y="847.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (90 samples, 1.87%)</title><rect x="72.9" y="981" width="22.0" height="15.0" fill="rgb(239,185,10)" rx="2" ry="2" />
<text  x="75.88" y="991.5" >r..</text>
</g>
<g >
<title>crc_60 (1 samples, 0.02%)</title><rect x="800.7" y="533" width="0.3" height="15.0" fill="rgb(219,53,4)" rx="2" ry="2" />
<text  x="803.74" y="543.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3 samples, 0.06%)</title><rect x="692.4" y="437" width="0.7" height="15.0" fill="rgb(240,105,35)" rx="2" ry="2" />
<text  x="695.36" y="447.5" ></text>
</g>
<g >
<title>rustposix::interface::file::openfile (129 samples, 2.67%)</title><rect x="731.0" y="853" width="31.6" height="15.0" fill="rgb(252,37,29)" rx="2" ry="2" />
<text  x="734.02" y="863.5" >ru..</text>
</g>
<g >
<title>rcu_gp_cleanup (1 samples, 0.02%)</title><rect x="1103.4" y="981" width="0.2" height="15.0" fill="rgb(226,82,19)" rx="2" ry="2" />
<text  x="1106.39" y="991.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (12 samples, 0.25%)</title><rect x="833.0" y="469" width="3.0" height="15.0" fill="rgb(216,145,25)" rx="2" ry="2" />
<text  x="836.04" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1017.0" y="949" width="0.3" height="15.0" fill="rgb(225,16,10)" rx="2" ry="2" />
<text  x="1020.02" y="959.5" ></text>
</g>
<g >
<title>vfs_iter_write (338 samples, 7.01%)</title><rect x="173.2" y="677" width="82.7" height="15.0" fill="rgb(220,166,18)" rx="2" ry="2" />
<text  x="176.19" y="687.5" >vfs_iter_..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="762.6" y="837" width="0.2" height="15.0" fill="rgb(238,95,9)" rx="2" ry="2" />
<text  x="765.58" y="847.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (19 samples, 0.39%)</title><rect x="242.7" y="501" width="4.6" height="15.0" fill="rgb(224,144,22)" rx="2" ry="2" />
<text  x="245.67" y="511.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (55 samples, 1.14%)</title><rect x="843.6" y="277" width="13.4" height="15.0" fill="rgb(228,55,20)" rx="2" ry="2" />
<text  x="846.56" y="287.5" ></text>
</g>
<g >
<title>revert_creds (1 samples, 0.02%)</title><rect x="765.8" y="613" width="0.2" height="15.0" fill="rgb(228,164,0)" rx="2" ry="2" />
<text  x="768.76" y="623.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.04%)</title><rect x="1006.7" y="533" width="0.5" height="15.0" fill="rgb(215,66,34)" rx="2" ry="2" />
<text  x="1009.75" y="543.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.02%)</title><rect x="1105.1" y="837" width="0.2" height="15.0" fill="rgb(205,228,39)" rx="2" ry="2" />
<text  x="1108.10" y="847.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1166.0" y="613" width="0.3" height="15.0" fill="rgb(218,204,39)" rx="2" ry="2" />
<text  x="1169.02" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_getcwd (4 samples, 0.08%)</title><rect x="763.6" y="725" width="0.9" height="15.0" fill="rgb(242,52,10)" rx="2" ry="2" />
<text  x="766.56" y="735.5" ></text>
</g>
<g >
<title>__errno_location (1 samples, 0.02%)</title><rect x="758.7" y="709" width="0.2" height="15.0" fill="rgb(210,23,1)" rx="2" ry="2" />
<text  x="761.66" y="719.5" ></text>
</g>
<g >
<title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (12 samples, 0.25%)</title><rect x="654.2" y="677" width="2.9" height="15.0" fill="rgb(233,191,35)" rx="2" ry="2" />
<text  x="657.19" y="687.5" ></text>
</g>
<g >
<title>__libc_start_main (5 samples, 0.10%)</title><rect x="1090.2" y="1013" width="1.2" height="15.0" fill="rgb(217,39,42)" rx="2" ry="2" />
<text  x="1093.18" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="153.1" y="805" width="0.3" height="15.0" fill="rgb(241,62,45)" rx="2" ry="2" />
<text  x="156.13" y="815.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.02%)</title><rect x="1012.1" y="789" width="0.3" height="15.0" fill="rgb(217,224,17)" rx="2" ry="2" />
<text  x="1015.13" y="799.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.02%)</title><rect x="109.6" y="965" width="0.2" height="15.0" fill="rgb(231,0,18)" rx="2" ry="2" />
<text  x="112.58" y="975.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (74 samples, 1.53%)</title><rect x="919.6" y="389" width="18.2" height="15.0" fill="rgb(242,70,10)" rx="2" ry="2" />
<text  x="922.65" y="399.5" ></text>
</g>
<g >
<title>ima_file_free (1 samples, 0.02%)</title><rect x="656.1" y="533" width="0.3" height="15.0" fill="rgb(215,79,46)" rx="2" ry="2" />
<text  x="659.15" y="543.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (9 samples, 0.19%)</title><rect x="1167.7" y="805" width="2.2" height="15.0" fill="rgb(252,62,29)" rx="2" ry="2" />
<text  x="1170.74" y="815.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="1113.7" y="389" width="0.2" height="15.0" fill="rgb(242,6,17)" rx="2" ry="2" />
<text  x="1116.67" y="399.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (1 samples, 0.02%)</title><rect x="153.9" y="837" width="0.2" height="15.0" fill="rgb(223,82,45)" rx="2" ry="2" />
<text  x="156.86" y="847.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.02%)</title><rect x="104.4" y="725" width="0.3" height="15.0" fill="rgb(223,169,41)" rx="2" ry="2" />
<text  x="107.44" y="735.5" ></text>
</g>
<g >
<title>affinity__set (1 samples, 0.02%)</title><rect x="10.5" y="965" width="0.2" height="15.0" fill="rgb(252,28,28)" rx="2" ry="2" />
<text  x="13.49" y="975.5" ></text>
</g>
<g >
<title>NaClHostDescOpen (73 samples, 1.51%)</title><rect x="109.8" y="965" width="17.9" height="15.0" fill="rgb(242,24,42)" rx="2" ry="2" />
<text  x="112.82" y="975.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="657.9" y="725" width="0.2" height="15.0" fill="rgb(238,175,11)" rx="2" ry="2" />
<text  x="660.86" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c::{{closure}} (87 samples, 1.80%)</title><rect x="734.2" y="741" width="21.3" height="15.0" fill="rgb(222,149,38)" rx="2" ry="2" />
<text  x="737.20" y="751.5" >s..</text>
</g>
<g >
<title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="762.6" y="821" width="0.2" height="15.0" fill="rgb(213,167,30)" rx="2" ry="2" />
<text  x="765.58" y="831.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_value (1 samples, 0.02%)</title><rect x="865.3" y="485" width="0.3" height="15.0" fill="rgb(239,134,0)" rx="2" ry="2" />
<text  x="868.33" y="495.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (4 samples, 0.08%)</title><rect x="46.7" y="949" width="1.0" height="15.0" fill="rgb(235,183,53)" rx="2" ry="2" />
<text  x="49.70" y="959.5" ></text>
</g>
<g >
<title>NaClValidateCode (2 samples, 0.04%)</title><rect x="1017.8" y="933" width="0.4" height="15.0" fill="rgb(218,37,7)" rx="2" ry="2" />
<text  x="1020.76" y="943.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.02%)</title><rect x="1092.9" y="709" width="0.2" height="15.0" fill="rgb(232,155,1)" rx="2" ry="2" />
<text  x="1095.87" y="719.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (71 samples, 1.47%)</title><rect x="776.0" y="485" width="17.4" height="15.0" fill="rgb(234,181,53)" rx="2" ry="2" />
<text  x="779.03" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.02%)</title><rect x="171.0" y="853" width="0.2" height="15.0" fill="rgb(254,197,24)" rx="2" ry="2" />
<text  x="173.99" y="863.5" ></text>
</g>
<g >
<title>crypto_shash_update (3 samples, 0.06%)</title><rect x="800.3" y="549" width="0.7" height="15.0" fill="rgb(211,0,1)" rx="2" ry="2" />
<text  x="803.26" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_statx (8 samples, 0.17%)</title><rect x="732.2" y="709" width="2.0" height="15.0" fill="rgb(223,146,29)" rx="2" ry="2" />
<text  x="735.24" y="719.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="657.9" y="693" width="0.2" height="15.0" fill="rgb(221,161,31)" rx="2" ry="2" />
<text  x="660.86" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="10.5" y="917" width="0.2" height="15.0" fill="rgb(250,72,8)" rx="2" ry="2" />
<text  x="13.49" y="927.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="115.4" y="437" width="0.3" height="15.0" fill="rgb(209,193,44)" rx="2" ry="2" />
<text  x="118.45" y="447.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (22 samples, 0.46%)</title><rect x="30.6" y="965" width="5.3" height="15.0" fill="rgb(247,124,27)" rx="2" ry="2" />
<text  x="33.55" y="975.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect x="108.1" y="725" width="0.3" height="15.0" fill="rgb(238,160,19)" rx="2" ry="2" />
<text  x="111.11" y="735.5" ></text>
</g>
<g >
<title>ns_capable_common (1 samples, 0.02%)</title><rect x="794.1" y="597" width="0.3" height="15.0" fill="rgb(242,39,0)" rx="2" ry="2" />
<text  x="797.14" y="607.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (2 samples, 0.04%)</title><rect x="1090.7" y="933" width="0.5" height="15.0" fill="rgb(237,167,17)" rx="2" ry="2" />
<text  x="1093.67" y="943.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (28 samples, 0.58%)</title><rect x="248.3" y="581" width="6.9" height="15.0" fill="rgb(222,52,10)" rx="2" ry="2" />
<text  x="251.30" y="591.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (2 samples, 0.04%)</title><rect x="1080.4" y="965" width="0.5" height="15.0" fill="rgb(206,187,32)" rx="2" ry="2" />
<text  x="1083.39" y="975.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (1 samples, 0.02%)</title><rect x="30.1" y="885" width="0.2" height="15.0" fill="rgb(231,151,27)" rx="2" ry="2" />
<text  x="33.06" y="895.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="762.6" y="645" width="0.2" height="15.0" fill="rgb(211,15,29)" rx="2" ry="2" />
<text  x="765.58" y="655.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (3 samples, 0.06%)</title><rect x="1113.9" y="869" width="0.7" height="15.0" fill="rgb(250,26,40)" rx="2" ry="2" />
<text  x="1116.91" y="879.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="108.1" y="661" width="0.3" height="15.0" fill="rgb(232,224,47)" rx="2" ry="2" />
<text  x="111.11" y="671.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (23 samples, 0.48%)</title><rect x="675.5" y="517" width="5.6" height="15.0" fill="rgb(222,113,4)" rx="2" ry="2" />
<text  x="678.48" y="527.5" ></text>
</g>
<g >
<title>pagecache_get_page (4 samples, 0.08%)</title><rect x="32.5" y="629" width="1.0" height="15.0" fill="rgb(249,198,44)" rx="2" ry="2" />
<text  x="35.51" y="639.5" ></text>
</g>
<g >
<title>__es_insert_extent (2 samples, 0.04%)</title><rect x="677.4" y="469" width="0.5" height="15.0" fill="rgb(227,155,30)" rx="2" ry="2" />
<text  x="680.44" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (5 samples, 0.10%)</title><rect x="108.4" y="933" width="1.2" height="15.0" fill="rgb(238,214,11)" rx="2" ry="2" />
<text  x="111.35" y="943.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (134 samples, 2.78%)</title><rect x="833.0" y="549" width="32.8" height="15.0" fill="rgb(221,48,27)" rx="2" ry="2" />
<text  x="836.04" y="559.5" >ru..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.17%)</title><rect x="1009.4" y="565" width="2.0" height="15.0" fill="rgb(244,137,41)" rx="2" ry="2" />
<text  x="1012.44" y="575.5" ></text>
</g>
<g >
<title>iptable_filter_hook (1 samples, 0.02%)</title><rect x="1113.2" y="613" width="0.2" height="15.0" fill="rgb(247,196,21)" rx="2" ry="2" />
<text  x="1116.18" y="623.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (42 samples, 0.87%)</title><rect x="712.7" y="517" width="10.2" height="15.0" fill="rgb(208,33,27)" rx="2" ry="2" />
<text  x="715.67" y="527.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="806.1" y="533" width="0.3" height="15.0" fill="rgb(212,137,45)" rx="2" ry="2" />
<text  x="809.13" y="543.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (56 samples, 1.16%)</title><rect x="950.0" y="421" width="13.7" height="15.0" fill="rgb(209,42,42)" rx="2" ry="2" />
<text  x="952.99" y="431.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="10.2" y="901" width="0.3" height="15.0" fill="rgb(212,49,32)" rx="2" ry="2" />
<text  x="13.24" y="911.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="36.4" y="1013" width="0.3" height="15.0" fill="rgb(225,98,7)" rx="2" ry="2" />
<text  x="39.42" y="1023.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (188 samples, 3.90%)</title><rect x="891.8" y="421" width="46.0" height="15.0" fill="rgb(239,162,24)" rx="2" ry="2" />
<text  x="894.76" y="431.5" >serd..</text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="1090.4" y="629" width="0.3" height="15.0" fill="rgb(250,206,41)" rx="2" ry="2" />
<text  x="1093.42" y="639.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (20 samples, 0.41%)</title><rect x="184.4" y="501" width="4.9" height="15.0" fill="rgb(229,31,41)" rx="2" ry="2" />
<text  x="187.44" y="511.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (10 samples, 0.21%)</title><rect x="720.0" y="485" width="2.5" height="15.0" fill="rgb(223,12,4)" rx="2" ry="2" />
<text  x="723.01" y="495.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.02%)</title><rect x="1090.2" y="933" width="0.2" height="15.0" fill="rgb(208,206,18)" rx="2" ry="2" />
<text  x="1093.18" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="1042.0" y="997" width="0.2" height="15.0" fill="rgb(211,191,11)" rx="2" ry="2" />
<text  x="1044.98" y="1007.5" ></text>
</g>
<g >
<title>ext4_lookup.part.0 (3 samples, 0.06%)</title><rect x="747.9" y="453" width="0.7" height="15.0" fill="rgb(222,138,8)" rx="2" ry="2" />
<text  x="750.90" y="463.5" ></text>
</g>
<g >
<title>number (1 samples, 0.02%)</title><rect x="749.1" y="469" width="0.3" height="15.0" fill="rgb(250,74,30)" rx="2" ry="2" />
<text  x="752.12" y="479.5" ></text>
</g>
<g >
<title>remote_function (1 samples, 0.02%)</title><rect x="35.9" y="869" width="0.3" height="15.0" fill="rgb(248,2,19)" rx="2" ry="2" />
<text  x="38.93" y="879.5" ></text>
</g>
<g >
<title>generic_permission (1 samples, 0.02%)</title><rect x="794.1" y="629" width="0.3" height="15.0" fill="rgb(207,189,26)" rx="2" ry="2" />
<text  x="797.14" y="639.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.02%)</title><rect x="46.5" y="821" width="0.2" height="15.0" fill="rgb(222,228,50)" rx="2" ry="2" />
<text  x="49.45" y="831.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (2 samples, 0.04%)</title><rect x="1017.8" y="981" width="0.4" height="15.0" fill="rgb(214,98,39)" rx="2" ry="2" />
<text  x="1020.76" y="991.5" ></text>
</g>
<g >
<title>security_inode_permission (1 samples, 0.02%)</title><rect x="765.5" y="565" width="0.3" height="15.0" fill="rgb(222,141,50)" rx="2" ry="2" />
<text  x="768.51" y="575.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (1 samples, 0.02%)</title><rect x="32.3" y="629" width="0.2" height="15.0" fill="rgb(219,149,11)" rx="2" ry="2" />
<text  x="35.26" y="639.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.04%)</title><rect x="1115.6" y="741" width="0.5" height="15.0" fill="rgb(236,108,19)" rx="2" ry="2" />
<text  x="1118.62" y="751.5" ></text>
</g>
<g >
<title>&lt;std::path::PathBuf as core::iter::traits::collect::Extend&lt;P&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="762.6" y="805" width="0.2" height="15.0" fill="rgb(230,176,45)" rx="2" ry="2" />
<text  x="765.58" y="815.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="740.3" y="405" width="0.3" height="15.0" fill="rgb(249,25,53)" rx="2" ry="2" />
<text  x="743.31" y="415.5" ></text>
</g>
<g >
<title>alx_clean_rx_irq (1 samples, 0.02%)</title><rect x="1111.7" y="773" width="0.3" height="15.0" fill="rgb(207,112,54)" rx="2" ry="2" />
<text  x="1114.71" y="783.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="1092.9" y="837" width="0.2" height="15.0" fill="rgb(229,20,6)" rx="2" ry="2" />
<text  x="1095.87" y="847.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::cstr (1 samples, 0.02%)</title><rect x="758.4" y="773" width="0.3" height="15.0" fill="rgb(205,49,44)" rx="2" ry="2" />
<text  x="761.42" y="783.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (16 samples, 0.33%)</title><rect x="1011.9" y="821" width="3.9" height="15.0" fill="rgb(226,44,8)" rx="2" ry="2" />
<text  x="1014.89" y="831.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (6 samples, 0.12%)</title><rect x="718.0" y="405" width="1.5" height="15.0" fill="rgb(243,103,21)" rx="2" ry="2" />
<text  x="721.05" y="415.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="695.1" y="389" width="0.2" height="15.0" fill="rgb(251,209,38)" rx="2" ry="2" />
<text  x="698.05" y="399.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="730.8" y="725" width="0.2" height="15.0" fill="rgb(244,64,45)" rx="2" ry="2" />
<text  x="733.77" y="735.5" ></text>
</g>
<g >
<title>ovl_other_xattr_get (2 samples, 0.04%)</title><rect x="659.3" y="597" width="0.5" height="15.0" fill="rgb(249,25,40)" rx="2" ry="2" />
<text  x="662.33" y="607.5" ></text>
</g>
<g >
<title>read (1 samples, 0.02%)</title><rect x="30.3" y="933" width="0.3" height="15.0" fill="rgb(215,114,41)" rx="2" ry="2" />
<text  x="33.31" y="943.5" ></text>
</g>
<g >
<title>start_this_handle (5 samples, 0.10%)</title><rect x="665.2" y="517" width="1.2" height="15.0" fill="rgb(248,52,30)" rx="2" ry="2" />
<text  x="668.20" y="527.5" ></text>
</g>
<g >
<title>vfs_open (7 samples, 0.15%)</title><rect x="735.9" y="597" width="1.7" height="15.0" fill="rgb(227,78,40)" rx="2" ry="2" />
<text  x="738.91" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.17%)</title><rect x="756.2" y="725" width="2.0" height="15.0" fill="rgb(243,95,28)" rx="2" ry="2" />
<text  x="759.22" y="735.5" ></text>
</g>
<g >
<title>core::cmp::min_by (1 samples, 0.02%)</title><rect x="153.9" y="821" width="0.2" height="15.0" fill="rgb(245,121,37)" rx="2" ry="2" />
<text  x="156.86" y="831.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="108.1" y="693" width="0.3" height="15.0" fill="rgb(248,135,6)" rx="2" ry="2" />
<text  x="111.11" y="703.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (15 samples, 0.31%)</title><rect x="859.5" y="293" width="3.6" height="15.0" fill="rgb(240,156,13)" rx="2" ry="2" />
<text  x="862.46" y="303.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="862.9" y="69" width="0.2" height="15.0" fill="rgb(232,129,25)" rx="2" ry="2" />
<text  x="865.89" y="79.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;std::fs::File&gt;&gt;&gt; (12 samples, 0.25%)</title><rect x="654.2" y="821" width="2.9" height="15.0" fill="rgb(229,173,15)" rx="2" ry="2" />
<text  x="657.19" y="831.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.02%)</title><rect x="130.6" y="645" width="0.3" height="15.0" fill="rgb(238,47,12)" rx="2" ry="2" />
<text  x="133.62" y="655.5" ></text>
</g>
<g >
<title>walk_component (1 samples, 0.02%)</title><rect x="757.4" y="629" width="0.3" height="15.0" fill="rgb(221,154,3)" rx="2" ry="2" />
<text  x="760.44" y="639.5" ></text>
</g>
<g >
<title>path_lookupat (2 samples, 0.04%)</title><rect x="732.5" y="629" width="0.5" height="15.0" fill="rgb(223,206,28)" rx="2" ry="2" />
<text  x="735.48" y="639.5" ></text>
</g>
<g >
<title>ovl_permission (2 samples, 0.04%)</title><rect x="759.6" y="565" width="0.5" height="15.0" fill="rgb(224,206,15)" rx="2" ry="2" />
<text  x="762.64" y="575.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="191.5" y="501" width="0.3" height="15.0" fill="rgb(241,73,13)" rx="2" ry="2" />
<text  x="194.54" y="511.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (1 samples, 0.02%)</title><rect x="1090.9" y="549" width="0.3" height="15.0" fill="rgb(209,160,24)" rx="2" ry="2" />
<text  x="1093.91" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.04%)</title><rect x="230.2" y="501" width="0.5" height="15.0" fill="rgb(208,54,8)" rx="2" ry="2" />
<text  x="233.19" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_close (2 samples, 0.04%)</title><rect x="654.2" y="613" width="0.5" height="15.0" fill="rgb(217,129,52)" rx="2" ry="2" />
<text  x="657.19" y="623.5" ></text>
</g>
<g >
<title>clear_page_erms (18 samples, 0.37%)</title><rect x="696.5" y="453" width="4.4" height="15.0" fill="rgb(237,99,10)" rx="2" ry="2" />
<text  x="699.52" y="463.5" ></text>
</g>
<g >
<title>vfs_read (88 samples, 1.82%)</title><rect x="131.6" y="725" width="21.5" height="15.0" fill="rgb(232,164,41)" rx="2" ry="2" />
<text  x="134.60" y="735.5" >v..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.10%)</title><rect x="838.4" y="309" width="1.2" height="15.0" fill="rgb(231,97,28)" rx="2" ry="2" />
<text  x="841.42" y="319.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7 samples, 0.15%)</title><rect x="50.9" y="965" width="1.7" height="15.0" fill="rgb(212,158,7)" rx="2" ry="2" />
<text  x="53.86" y="975.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="1113.7" y="485" width="0.2" height="15.0" fill="rgb(236,144,27)" rx="2" ry="2" />
<text  x="1116.67" y="495.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (32 samples, 0.66%)</title><rect x="942.2" y="437" width="7.8" height="15.0" fill="rgb(213,19,5)" rx="2" ry="2" />
<text  x="945.16" y="447.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="764.0" y="661" width="0.3" height="15.0" fill="rgb(238,1,14)" rx="2" ry="2" />
<text  x="767.05" y="671.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (1 samples, 0.02%)</title><rect x="831.8" y="421" width="0.3" height="15.0" fill="rgb(240,112,53)" rx="2" ry="2" />
<text  x="834.82" y="431.5" ></text>
</g>
<g >
<title>do_fault (3 samples, 0.06%)</title><rect x="104.4" y="773" width="0.8" height="15.0" fill="rgb(223,226,9)" rx="2" ry="2" />
<text  x="107.44" y="783.5" ></text>
</g>
<g >
<title>ext4_check_bdev_write_error (1 samples, 0.02%)</title><rect x="108.6" y="453" width="0.2" height="15.0" fill="rgb(244,61,43)" rx="2" ry="2" />
<text  x="111.60" y="463.5" ></text>
</g>
<g >
<title>crc_36 (1 samples, 0.02%)</title><rect x="752.1" y="405" width="0.2" height="15.0" fill="rgb(209,49,24)" rx="2" ry="2" />
<text  x="755.06" y="415.5" ></text>
</g>
<g >
<title>ext4_evict_inode (87 samples, 1.80%)</title><rect x="772.1" y="501" width="21.3" height="15.0" fill="rgb(230,68,30)" rx="2" ry="2" />
<text  x="775.12" y="511.5" >e..</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="888.3" y="261" width="0.3" height="15.0" fill="rgb(238,16,0)" rx="2" ry="2" />
<text  x="891.33" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_futex (12 samples, 0.25%)</title><rect x="1012.9" y="757" width="2.9" height="15.0" fill="rgb(231,177,53)" rx="2" ry="2" />
<text  x="1015.87" y="767.5" ></text>
</g>
<g >
<title>node_page_state (1 samples, 0.02%)</title><rect x="209.4" y="469" width="0.2" height="15.0" fill="rgb(228,149,45)" rx="2" ry="2" />
<text  x="212.40" y="479.5" ></text>
</g>
<g >
<title>kmem_cache_free (19 samples, 0.39%)</title><rect x="788.0" y="325" width="4.7" height="15.0" fill="rgb(254,12,33)" rx="2" ry="2" />
<text  x="791.02" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (1 samples, 0.02%)</title><rect x="108.6" y="773" width="0.2" height="15.0" fill="rgb(230,216,49)" rx="2" ry="2" />
<text  x="111.60" y="783.5" ></text>
</g>
<g >
<title>memset (1 samples, 0.02%)</title><rect x="674.3" y="485" width="0.2" height="15.0" fill="rgb(250,107,44)" rx="2" ry="2" />
<text  x="677.25" y="495.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.02%)</title><rect x="764.0" y="677" width="0.3" height="15.0" fill="rgb(233,4,38)" rx="2" ry="2" />
<text  x="767.05" y="687.5" ></text>
</g>
<g >
<title>__libc_lseek (1 samples, 0.02%)</title><rect x="658.6" y="805" width="0.2" height="15.0" fill="rgb(239,167,1)" rx="2" ry="2" />
<text  x="661.60" y="815.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (6 samples, 0.12%)</title><rect x="45.0" y="949" width="1.5" height="15.0" fill="rgb(226,119,36)" rx="2" ry="2" />
<text  x="47.99" y="959.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object (4 samples, 0.08%)</title><rect x="866.3" y="501" width="1.0" height="15.0" fill="rgb(219,123,22)" rx="2" ry="2" />
<text  x="869.31" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.04%)</title><rect x="658.1" y="789" width="0.5" height="15.0" fill="rgb(216,18,10)" rx="2" ry="2" />
<text  x="661.11" y="799.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="762.8" y="693" width="0.3" height="15.0" fill="rgb(221,229,14)" rx="2" ry="2" />
<text  x="765.82" y="703.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (5 samples, 0.10%)</title><rect x="660.8" y="565" width="1.2" height="15.0" fill="rgb(218,209,50)" rx="2" ry="2" />
<text  x="663.80" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="731.7" y="773" width="0.3" height="15.0" fill="rgb(235,156,34)" rx="2" ry="2" />
<text  x="734.75" y="783.5" ></text>
</g>
<g >
<title>d_alloc_parallel (2 samples, 0.04%)</title><rect x="747.4" y="469" width="0.5" height="15.0" fill="rgb(223,181,7)" rx="2" ry="2" />
<text  x="750.41" y="479.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.04%)</title><rect x="1114.9" y="821" width="0.5" height="15.0" fill="rgb(214,161,41)" rx="2" ry="2" />
<text  x="1117.89" y="831.5" ></text>
</g>
<g >
<title>__GI___clone (1 samples, 0.02%)</title><rect x="1089.9" y="1029" width="0.3" height="15.0" fill="rgb(247,91,45)" rx="2" ry="2" />
<text  x="1092.93" y="1039.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="742.3" y="405" width="0.2" height="15.0" fill="rgb(216,20,35)" rx="2" ry="2" />
<text  x="745.27" y="415.5" ></text>
</g>
<g >
<title>new_sync_read (87 samples, 1.80%)</title><rect x="131.6" y="709" width="21.3" height="15.0" fill="rgb(233,188,37)" rx="2" ry="2" />
<text  x="134.60" y="719.5" >n..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="52.8" y="997" width="0.3" height="15.0" fill="rgb(232,64,34)" rx="2" ry="2" />
<text  x="55.82" y="1007.5" ></text>
</g>
<g >
<title>call_timer_fn (2 samples, 0.04%)</title><rect x="1169.4" y="725" width="0.5" height="15.0" fill="rgb(245,109,20)" rx="2" ry="2" />
<text  x="1172.45" y="735.5" ></text>
</g>
<g >
<title>__unlink (73 samples, 1.51%)</title><rect x="109.8" y="837" width="17.9" height="15.0" fill="rgb(236,95,43)" rx="2" ry="2" />
<text  x="112.82" y="847.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.02%)</title><rect x="1101.4" y="821" width="0.3" height="15.0" fill="rgb(245,164,52)" rx="2" ry="2" />
<text  x="1104.43" y="831.5" ></text>
</g>
<g >
<title>integrity_inode_free (1 samples, 0.02%)</title><rect x="770.9" y="629" width="0.2" height="15.0" fill="rgb(229,195,13)" rx="2" ry="2" />
<text  x="773.90" y="639.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (5 samples, 0.10%)</title><rect x="858.2" y="293" width="1.3" height="15.0" fill="rgb(246,22,18)" rx="2" ry="2" />
<text  x="861.24" y="303.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="34.7" y="597" width="0.3" height="15.0" fill="rgb(248,162,14)" rx="2" ry="2" />
<text  x="37.71" y="607.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (2 samples, 0.04%)</title><rect x="31.3" y="645" width="0.5" height="15.0" fill="rgb(229,99,32)" rx="2" ry="2" />
<text  x="34.29" y="655.5" ></text>
</g>
<g >
<title>lookup_fast (2 samples, 0.04%)</title><rect x="757.0" y="597" width="0.4" height="15.0" fill="rgb(253,185,43)" rx="2" ry="2" />
<text  x="759.95" y="607.5" ></text>
</g>
<g >
<title>do_unlinkat (1 samples, 0.02%)</title><rect x="1090.2" y="677" width="0.2" height="15.0" fill="rgb(243,227,20)" rx="2" ry="2" />
<text  x="1093.18" y="687.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="888.3" y="293" width="0.3" height="15.0" fill="rgb(235,210,14)" rx="2" ry="2" />
<text  x="891.33" y="303.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.04%)</title><rect x="1090.7" y="885" width="0.5" height="15.0" fill="rgb(221,95,44)" rx="2" ry="2" />
<text  x="1093.67" y="895.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (2 samples, 0.04%)</title><rect x="34.2" y="629" width="0.5" height="15.0" fill="rgb(214,96,37)" rx="2" ry="2" />
<text  x="37.22" y="639.5" ></text>
</g>
<g >
<title>dequeue_entity (5 samples, 0.10%)</title><rect x="1013.8" y="629" width="1.3" height="15.0" fill="rgb(210,45,2)" rx="2" ry="2" />
<text  x="1016.84" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (7 samples, 0.15%)</title><rect x="50.9" y="997" width="1.7" height="15.0" fill="rgb(229,104,32)" rx="2" ry="2" />
<text  x="53.86" y="1007.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="801.0" y="597" width="0.2" height="15.0" fill="rgb(209,26,7)" rx="2" ry="2" />
<text  x="803.99" y="607.5" ></text>
</g>
<g >
<title>fdarray__poll (1 samples, 0.02%)</title><rect x="30.1" y="981" width="0.2" height="15.0" fill="rgb(229,228,28)" rx="2" ry="2" />
<text  x="33.06" y="991.5" ></text>
</g>
<g >
<title>event_function (1 samples, 0.02%)</title><rect x="35.9" y="853" width="0.3" height="15.0" fill="rgb(207,167,51)" rx="2" ry="2" />
<text  x="38.93" y="863.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.23%)</title><rect x="888.6" y="357" width="2.7" height="15.0" fill="rgb(214,32,46)" rx="2" ry="2" />
<text  x="891.58" y="367.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.02%)</title><rect x="729.8" y="581" width="0.2" height="15.0" fill="rgb(224,65,53)" rx="2" ry="2" />
<text  x="732.79" y="591.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (74 samples, 1.53%)</title><rect x="919.6" y="405" width="18.2" height="15.0" fill="rgb(247,141,46)" rx="2" ry="2" />
<text  x="922.65" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1090.4" y="853" width="0.3" height="15.0" fill="rgb(249,5,31)" rx="2" ry="2" />
<text  x="1093.42" y="863.5" ></text>
</g>
<g >
<title>ovl_lookup_temp (11 samples, 0.23%)</title><rect x="795.1" y="645" width="2.7" height="15.0" fill="rgb(251,168,43)" rx="2" ry="2" />
<text  x="798.12" y="655.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="108.6" y="469" width="0.2" height="15.0" fill="rgb(226,165,12)" rx="2" ry="2" />
<text  x="111.60" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="695.1" y="485" width="0.2" height="15.0" fill="rgb(236,33,21)" rx="2" ry="2" />
<text  x="698.05" y="495.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1112.9" y="629" width="0.3" height="15.0" fill="rgb(253,188,11)" rx="2" ry="2" />
<text  x="1115.93" y="639.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (44 samples, 0.91%)</title><rect x="319.7" y="773" width="10.8" height="15.0" fill="rgb(232,210,10)" rx="2" ry="2" />
<text  x="322.74" y="783.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (51 samples, 1.06%)</title><rect x="157.3" y="821" width="12.5" height="15.0" fill="rgb(253,64,42)" rx="2" ry="2" />
<text  x="160.29" y="831.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.04%)</title><rect x="710.5" y="485" width="0.5" height="15.0" fill="rgb(239,139,21)" rx="2" ry="2" />
<text  x="713.46" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.19%)</title><rect x="764.8" y="757" width="2.2" height="15.0" fill="rgb(232,66,38)" rx="2" ry="2" />
<text  x="767.78" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="35.7" y="901" width="0.2" height="15.0" fill="rgb(231,30,28)" rx="2" ry="2" />
<text  x="38.69" y="911.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (2 samples, 0.04%)</title><rect x="1090.7" y="869" width="0.5" height="15.0" fill="rgb(244,53,32)" rx="2" ry="2" />
<text  x="1093.67" y="879.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="834.8" y="165" width="0.2" height="15.0" fill="rgb(214,189,40)" rx="2" ry="2" />
<text  x="837.75" y="175.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.02%)</title><rect x="173.9" y="549" width="0.3" height="15.0" fill="rgb(227,109,34)" rx="2" ry="2" />
<text  x="176.92" y="559.5" ></text>
</g>
<g >
<title>do_exit (4 samples, 0.08%)</title><rect x="1092.1" y="901" width="1.0" height="15.0" fill="rgb(245,85,10)" rx="2" ry="2" />
<text  x="1095.14" y="911.5" ></text>
</g>
<g >
<title>__pagevec_release (15 samples, 0.31%)</title><rect x="109.8" y="485" width="3.7" height="15.0" fill="rgb(219,148,40)" rx="2" ry="2" />
<text  x="112.82" y="495.5" ></text>
</g>
<g >
<title>std::fs::File::metadata (9 samples, 0.19%)</title><rect x="732.0" y="821" width="2.2" height="15.0" fill="rgb(224,31,38)" rx="2" ry="2" />
<text  x="734.99" y="831.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="767.7" y="677" width="0.3" height="15.0" fill="rgb(250,229,51)" rx="2" ry="2" />
<text  x="770.72" y="687.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (1 samples, 0.02%)</title><rect x="1091.9" y="885" width="0.2" height="15.0" fill="rgb(236,191,37)" rx="2" ry="2" />
<text  x="1094.89" y="895.5" ></text>
</g>
<g >
<title>__getblk_gfp (1 samples, 0.02%)</title><rect x="803.9" y="485" width="0.3" height="15.0" fill="rgb(238,214,42)" rx="2" ry="2" />
<text  x="806.92" y="495.5" ></text>
</g>
<g >
<title>__run_hrtimer (3 samples, 0.06%)</title><rect x="1113.9" y="821" width="0.7" height="15.0" fill="rgb(217,208,46)" rx="2" ry="2" />
<text  x="1116.91" y="831.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (67 samples, 1.39%)</title><rect x="153.4" y="869" width="16.4" height="15.0" fill="rgb(227,73,45)" rx="2" ry="2" />
<text  x="156.37" y="879.5" ></text>
</g>
<g >
<title>unlock_page_memcg (1 samples, 0.02%)</title><rect x="712.4" y="501" width="0.3" height="15.0" fill="rgb(209,91,2)" rx="2" ry="2" />
<text  x="715.42" y="511.5" ></text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.02%)</title><rect x="31.3" y="613" width="0.2" height="15.0" fill="rgb(238,172,6)" rx="2" ry="2" />
<text  x="34.29" y="623.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.15%)</title><rect x="999.4" y="357" width="1.7" height="15.0" fill="rgb(224,50,21)" rx="2" ry="2" />
<text  x="1002.41" y="367.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.10%)</title><rect x="828.1" y="485" width="1.3" height="15.0" fill="rgb(218,180,10)" rx="2" ry="2" />
<text  x="831.15" y="495.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1100.7" y="901" width="0.2" height="15.0" fill="rgb(215,98,23)" rx="2" ry="2" />
<text  x="1103.70" y="911.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="810.0" y="677" width="0.3" height="15.0" fill="rgb(239,70,18)" rx="2" ry="2" />
<text  x="813.04" y="687.5" ></text>
</g>
<g >
<title>block_invalidatepage (41 samples, 0.85%)</title><rect x="783.4" y="421" width="10.0" height="15.0" fill="rgb(213,87,9)" rx="2" ry="2" />
<text  x="786.37" y="431.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.02%)</title><rect x="35.7" y="917" width="0.2" height="15.0" fill="rgb(240,91,6)" rx="2" ry="2" />
<text  x="38.69" y="927.5" ></text>
</g>
<g >
<title>__es_insert_extent (2 samples, 0.04%)</title><rect x="194.5" y="485" width="0.5" height="15.0" fill="rgb(249,144,49)" rx="2" ry="2" />
<text  x="197.47" y="495.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (2 samples, 0.04%)</title><rect x="126.2" y="341" width="0.5" height="15.0" fill="rgb(237,123,22)" rx="2" ry="2" />
<text  x="129.21" y="351.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (6 samples, 0.12%)</title><rect x="45.0" y="965" width="1.5" height="15.0" fill="rgb(242,100,8)" rx="2" ry="2" />
<text  x="47.99" y="975.5" ></text>
</g>
<g >
<title>update_cfs_group (2 samples, 0.04%)</title><rect x="1014.1" y="613" width="0.5" height="15.0" fill="rgb(237,0,13)" rx="2" ry="2" />
<text  x="1017.09" y="623.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.08%)</title><rect x="1008.5" y="501" width="0.9" height="15.0" fill="rgb(247,153,18)" rx="2" ry="2" />
<text  x="1011.46" y="511.5" ></text>
</g>
<g >
<title>radix_tree_node_rcu_free (1 samples, 0.02%)</title><rect x="1107.8" y="901" width="0.2" height="15.0" fill="rgb(224,83,46)" rx="2" ry="2" />
<text  x="1110.79" y="911.5" ></text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (1 samples, 0.02%)</title><rect x="10.5" y="901" width="0.2" height="15.0" fill="rgb(218,75,14)" rx="2" ry="2" />
<text  x="13.49" y="911.5" ></text>
</g>
<g >
<title>napi_poll (10 samples, 0.21%)</title><rect x="1111.5" y="805" width="2.4" height="15.0" fill="rgb(213,55,44)" rx="2" ry="2" />
<text  x="1114.46" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="857.0" y="229" width="0.3" height="15.0" fill="rgb(253,79,4)" rx="2" ry="2" />
<text  x="860.02" y="239.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (1 samples, 0.02%)</title><rect x="33.0" y="565" width="0.2" height="15.0" fill="rgb(226,185,18)" rx="2" ry="2" />
<text  x="36.00" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (89 samples, 1.85%)</title><rect x="131.4" y="789" width="21.7" height="15.0" fill="rgb(225,183,53)" rx="2" ry="2" />
<text  x="134.35" y="799.5" >e..</text>
</g>
<g >
<title>drain_obj_stock (1 samples, 0.02%)</title><rect x="792.2" y="277" width="0.2" height="15.0" fill="rgb(243,100,34)" rx="2" ry="2" />
<text  x="795.18" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.02%)</title><rect x="107.9" y="853" width="0.2" height="15.0" fill="rgb(210,188,23)" rx="2" ry="2" />
<text  x="110.86" y="863.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="34.7" y="581" width="0.3" height="15.0" fill="rgb(232,220,2)" rx="2" ry="2" />
<text  x="37.71" y="591.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="695.1" y="437" width="0.2" height="15.0" fill="rgb(231,179,21)" rx="2" ry="2" />
<text  x="698.05" y="447.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.02%)</title><rect x="113.2" y="453" width="0.3" height="15.0" fill="rgb(242,229,43)" rx="2" ry="2" />
<text  x="116.25" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (173 samples, 3.59%)</title><rect x="128.7" y="885" width="42.3" height="15.0" fill="rgb(253,45,0)" rx="2" ry="2" />
<text  x="131.66" y="895.5" >rus..</text>
</g>
<g >
<title>__x64_sys_write (293 samples, 6.08%)</title><rect x="659.1" y="741" width="71.7" height="15.0" fill="rgb(250,76,45)" rx="2" ry="2" />
<text  x="662.09" y="751.5" >__x64_sy..</text>
</g>
<g >
<title>set_next_entity (1 samples, 0.02%)</title><rect x="1092.6" y="837" width="0.3" height="15.0" fill="rgb(226,8,29)" rx="2" ry="2" />
<text  x="1095.62" y="847.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.02%)</title><rect x="255.9" y="693" width="0.2" height="15.0" fill="rgb(220,116,36)" rx="2" ry="2" />
<text  x="258.88" y="703.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1109.8" y="917" width="0.2" height="15.0" fill="rgb(235,72,39)" rx="2" ry="2" />
<text  x="1112.75" y="927.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (79 samples, 1.64%)</title><rect x="10.7" y="965" width="19.4" height="15.0" fill="rgb(206,86,4)" rx="2" ry="2" />
<text  x="13.73" y="975.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="653.9" y="773" width="0.3" height="15.0" fill="rgb(247,137,4)" rx="2" ry="2" />
<text  x="656.95" y="783.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="37.6" y="997" width="0.5" height="15.0" fill="rgb(238,22,1)" rx="2" ry="2" />
<text  x="40.65" y="1007.5" ></text>
</g>
<g >
<title>do_idle (211 samples, 4.37%)</title><rect x="1110.0" y="981" width="51.6" height="15.0" fill="rgb(211,161,21)" rx="2" ry="2" />
<text  x="1113.00" y="991.5" >do_idle</text>
</g>
<g >
<title>handle_edge_irq (5 samples, 0.10%)</title><rect x="1110.2" y="869" width="1.3" height="15.0" fill="rgb(244,124,53)" rx="2" ry="2" />
<text  x="1113.24" y="879.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.06%)</title><rect x="864.1" y="389" width="0.7" height="15.0" fill="rgb(214,158,31)" rx="2" ry="2" />
<text  x="867.11" y="399.5" ></text>
</g>
<g >
<title>get_acl (1 samples, 0.02%)</title><rect x="769.2" y="629" width="0.2" height="15.0" fill="rgb(209,224,37)" rx="2" ry="2" />
<text  x="772.18" y="639.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (1 samples, 0.02%)</title><rect x="55.0" y="997" width="0.3" height="15.0" fill="rgb(220,5,52)" rx="2" ry="2" />
<text  x="58.02" y="1007.5" ></text>
</g>
<g >
<title>__d_add (1 samples, 0.02%)</title><rect x="797.1" y="549" width="0.2" height="15.0" fill="rgb(217,178,10)" rx="2" ry="2" />
<text  x="800.07" y="559.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1100.5" y="1029" width="0.2" height="15.0" fill="rgb(245,118,4)" rx="2" ry="2" />
<text  x="1103.45" y="1039.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (5 samples, 0.10%)</title><rect x="1090.2" y="981" width="1.2" height="15.0" fill="rgb(206,40,18)" rx="2" ry="2" />
<text  x="1093.18" y="991.5" ></text>
</g>
<g >
<title>stop_this_handle (5 samples, 0.10%)</title><rect x="222.4" y="533" width="1.2" height="15.0" fill="rgb(215,124,47)" rx="2" ry="2" />
<text  x="225.37" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.06%)</title><rect x="667.2" y="533" width="0.7" height="15.0" fill="rgb(227,98,25)" rx="2" ry="2" />
<text  x="670.16" y="543.5" ></text>
</g>
<g >
<title>cmd_record (1 samples, 0.02%)</title><rect x="10.2" y="1013" width="0.3" height="15.0" fill="rgb(211,11,38)" rx="2" ry="2" />
<text  x="13.24" y="1023.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.06%)</title><rect x="857.0" y="277" width="0.8" height="15.0" fill="rgb(221,187,22)" rx="2" ry="2" />
<text  x="860.02" y="287.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge (1 samples, 0.02%)</title><rect x="747.7" y="373" width="0.2" height="15.0" fill="rgb(207,204,13)" rx="2" ry="2" />
<text  x="750.65" y="383.5" ></text>
</g>
<g >
<title>__schedule (5 samples, 0.10%)</title><rect x="1104.4" y="933" width="1.2" height="15.0" fill="rgb(253,172,20)" rx="2" ry="2" />
<text  x="1107.37" y="943.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.02%)</title><rect x="730.8" y="709" width="0.2" height="15.0" fill="rgb(224,15,6)" rx="2" ry="2" />
<text  x="733.77" y="719.5" ></text>
</g>
<g >
<title>ip6_sublist_rcv (1 samples, 0.02%)</title><rect x="1113.7" y="693" width="0.2" height="15.0" fill="rgb(250,40,46)" rx="2" ry="2" />
<text  x="1116.67" y="703.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.06%)</title><rect x="1007.2" y="501" width="0.8" height="15.0" fill="rgb(231,43,48)" rx="2" ry="2" />
<text  x="1010.24" y="511.5" ></text>
</g>
<g >
<title>do_unlinkat (1 samples, 0.02%)</title><rect x="103.7" y="693" width="0.2" height="15.0" fill="rgb(215,104,43)" rx="2" ry="2" />
<text  x="106.71" y="703.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (5 samples, 0.10%)</title><rect x="1110.2" y="885" width="1.3" height="15.0" fill="rgb(226,143,51)" rx="2" ry="2" />
<text  x="1113.24" y="895.5" ></text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.06%)</title><rect x="1188.8" y="837" width="0.7" height="15.0" fill="rgb(219,195,19)" rx="2" ry="2" />
<text  x="1191.78" y="847.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="1091.9" y="645" width="0.2" height="15.0" fill="rgb(253,173,43)" rx="2" ry="2" />
<text  x="1094.89" y="655.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="1167.7" y="645" width="0.3" height="15.0" fill="rgb(238,214,0)" rx="2" ry="2" />
<text  x="1170.74" y="655.5" ></text>
</g>
<g >
<title>__udp4_lib_rcv (1 samples, 0.02%)</title><rect x="1112.9" y="581" width="0.3" height="15.0" fill="rgb(237,217,42)" rx="2" ry="2" />
<text  x="1115.93" y="591.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (105 samples, 2.18%)</title><rect x="838.4" y="405" width="25.7" height="15.0" fill="rgb(246,105,24)" rx="2" ry="2" />
<text  x="841.42" y="415.5" >s..</text>
</g>
<g >
<title>get_obj_cgroup_from_current (3 samples, 0.06%)</title><rect x="188.6" y="469" width="0.7" height="15.0" fill="rgb(225,183,35)" rx="2" ry="2" />
<text  x="191.60" y="479.5" ></text>
</g>
<g >
<title>map_id_up (2 samples, 0.04%)</title><rect x="241.0" y="453" width="0.4" height="15.0" fill="rgb(206,29,24)" rx="2" ry="2" />
<text  x="243.96" y="463.5" ></text>
</g>
<g >
<title>ksys_lseek (1 samples, 0.02%)</title><rect x="153.1" y="757" width="0.3" height="15.0" fill="rgb(243,63,3)" rx="2" ry="2" />
<text  x="156.13" y="767.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="1114.6" y="821" width="0.3" height="15.0" fill="rgb(207,8,30)" rx="2" ry="2" />
<text  x="1117.64" y="831.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (16 samples, 0.33%)</title><rect x="1011.9" y="837" width="3.9" height="15.0" fill="rgb(248,27,26)" rx="2" ry="2" />
<text  x="1014.89" y="847.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (5 samples, 0.10%)</title><rect x="758.9" y="597" width="1.2" height="15.0" fill="rgb(229,75,13)" rx="2" ry="2" />
<text  x="761.91" y="607.5" ></text>
</g>
<g >
<title>unaccount_page_cache_page (1 samples, 0.02%)</title><rect x="1091.9" y="677" width="0.2" height="15.0" fill="rgb(250,199,7)" rx="2" ry="2" />
<text  x="1094.89" y="687.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="831.8" y="341" width="0.3" height="15.0" fill="rgb(238,162,16)" rx="2" ry="2" />
<text  x="834.82" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (3 samples, 0.06%)</title><rect x="108.8" y="805" width="0.8" height="15.0" fill="rgb(215,85,4)" rx="2" ry="2" />
<text  x="111.84" y="815.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.02%)</title><rect x="108.4" y="805" width="0.2" height="15.0" fill="rgb(249,89,52)" rx="2" ry="2" />
<text  x="111.35" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="762.6" y="693" width="0.2" height="15.0" fill="rgb(208,183,4)" rx="2" ry="2" />
<text  x="765.58" y="703.5" ></text>
</g>
<g >
<title>get_acl (1 samples, 0.02%)</title><rect x="764.8" y="581" width="0.2" height="15.0" fill="rgb(253,199,18)" rx="2" ry="2" />
<text  x="767.78" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="731.0" y="741" width="0.3" height="15.0" fill="rgb(218,0,46)" rx="2" ry="2" />
<text  x="734.02" y="751.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.02%)</title><rect x="1090.2" y="949" width="0.2" height="15.0" fill="rgb(212,213,0)" rx="2" ry="2" />
<text  x="1093.18" y="959.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath.part.0 (1 samples, 0.02%)</title><rect x="1092.4" y="821" width="0.2" height="15.0" fill="rgb(224,190,53)" rx="2" ry="2" />
<text  x="1095.38" y="831.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (1 samples, 0.02%)</title><rect x="802.9" y="549" width="0.3" height="15.0" fill="rgb(232,212,34)" rx="2" ry="2" />
<text  x="805.95" y="559.5" ></text>
</g>
<g >
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="1015.6" y="725" width="0.2" height="15.0" fill="rgb(253,227,42)" rx="2" ry="2" />
<text  x="1018.56" y="735.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (5 samples, 0.10%)</title><rect x="858.2" y="261" width="1.3" height="15.0" fill="rgb(248,216,18)" rx="2" ry="2" />
<text  x="861.24" y="271.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.02%)</title><rect x="30.3" y="821" width="0.3" height="15.0" fill="rgb(206,26,4)" rx="2" ry="2" />
<text  x="33.31" y="831.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="653.9" y="661" width="0.3" height="15.0" fill="rgb(253,87,32)" rx="2" ry="2" />
<text  x="656.95" y="671.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="771.6" y="501" width="0.3" height="15.0" fill="rgb(226,101,23)" rx="2" ry="2" />
<text  x="774.63" y="511.5" ></text>
</g>
<g >
<title>ext4_rename_delete (4 samples, 0.08%)</title><rect x="805.9" y="597" width="1.0" height="15.0" fill="rgb(223,36,21)" rx="2" ry="2" />
<text  x="808.88" y="607.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (2 samples, 0.04%)</title><rect x="759.6" y="581" width="0.5" height="15.0" fill="rgb(233,6,40)" rx="2" ry="2" />
<text  x="762.64" y="591.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="1090.4" y="757" width="0.3" height="15.0" fill="rgb(222,102,17)" rx="2" ry="2" />
<text  x="1093.42" y="767.5" ></text>
</g>
<g >
<title>d_alloc (2 samples, 0.04%)</title><rect x="747.4" y="453" width="0.5" height="15.0" fill="rgb(239,72,30)" rx="2" ry="2" />
<text  x="750.41" y="463.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.02%)</title><rect x="108.1" y="933" width="0.3" height="15.0" fill="rgb(207,70,45)" rx="2" ry="2" />
<text  x="111.11" y="943.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (2 samples, 0.04%)</title><rect x="1090.7" y="901" width="0.5" height="15.0" fill="rgb(214,196,33)" rx="2" ry="2" />
<text  x="1093.67" y="911.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="798.5" y="581" width="0.3" height="15.0" fill="rgb(212,133,38)" rx="2" ry="2" />
<text  x="801.54" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::canonicalize (1 samples, 0.02%)</title><rect x="1089.7" y="1013" width="0.2" height="15.0" fill="rgb(231,31,28)" rx="2" ry="2" />
<text  x="1092.69" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (78 samples, 1.62%)</title><rect x="11.0" y="901" width="19.1" height="15.0" fill="rgb(231,158,47)" rx="2" ry="2" />
<text  x="13.98" y="911.5" ></text>
</g>
<g >
<title>security_inode_permission (1 samples, 0.02%)</title><rect x="759.9" y="517" width="0.2" height="15.0" fill="rgb(221,138,2)" rx="2" ry="2" />
<text  x="762.89" y="527.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.02%)</title><rect x="733.5" y="629" width="0.2" height="15.0" fill="rgb(249,64,11)" rx="2" ry="2" />
<text  x="736.46" y="639.5" ></text>
</g>
<g >
<title>rcu_core (12 samples, 0.25%)</title><rect x="1106.1" y="933" width="2.9" height="15.0" fill="rgb(217,4,12)" rx="2" ry="2" />
<text  x="1109.08" y="943.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (1 samples, 0.02%)</title><rect x="55.0" y="981" width="0.3" height="15.0" fill="rgb(234,158,34)" rx="2" ry="2" />
<text  x="58.02" y="991.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="237.8" y="469" width="0.2" height="15.0" fill="rgb(254,71,51)" rx="2" ry="2" />
<text  x="240.78" y="479.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="35.7" y="757" width="0.2" height="15.0" fill="rgb(236,152,41)" rx="2" ry="2" />
<text  x="38.69" y="767.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="731.7" y="789" width="0.3" height="15.0" fill="rgb(237,97,25)" rx="2" ry="2" />
<text  x="734.75" y="799.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="755.2" y="613" width="0.3" height="15.0" fill="rgb(222,97,27)" rx="2" ry="2" />
<text  x="758.24" y="623.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (10 samples, 0.21%)</title><rect x="105.2" y="933" width="2.4" height="15.0" fill="rgb(240,101,31)" rx="2" ry="2" />
<text  x="108.17" y="943.5" ></text>
</g>
<g >
<title>dec_zone_page_state (1 samples, 0.02%)</title><rect x="787.0" y="325" width="0.3" height="15.0" fill="rgb(224,28,4)" rx="2" ry="2" />
<text  x="790.04" y="335.5" ></text>
</g>
<g >
<title>node_page_state (1 samples, 0.02%)</title><rect x="209.6" y="485" width="0.3" height="15.0" fill="rgb(247,99,2)" rx="2" ry="2" />
<text  x="212.64" y="495.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (71 samples, 1.47%)</title><rect x="839.6" y="293" width="17.4" height="15.0" fill="rgb(207,78,44)" rx="2" ry="2" />
<text  x="842.65" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (10 samples, 0.21%)</title><rect x="833.0" y="197" width="2.5" height="15.0" fill="rgb(244,105,44)" rx="2" ry="2" />
<text  x="836.04" y="207.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (225 samples, 4.67%)</title><rect x="353.3" y="789" width="55.0" height="15.0" fill="rgb(221,120,0)" rx="2" ry="2" />
<text  x="356.26" y="799.5" >core:..</text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::new (1 samples, 0.02%)</title><rect x="761.8" y="805" width="0.3" height="15.0" fill="rgb(231,42,50)" rx="2" ry="2" />
<text  x="764.84" y="815.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (1 samples, 0.02%)</title><rect x="1092.4" y="853" width="0.2" height="15.0" fill="rgb(228,116,23)" rx="2" ry="2" />
<text  x="1095.38" y="863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="30.3" y="901" width="0.3" height="15.0" fill="rgb(209,96,33)" rx="2" ry="2" />
<text  x="33.31" y="911.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.02%)</title><rect x="1159.7" y="917" width="0.2" height="15.0" fill="rgb(240,157,49)" rx="2" ry="2" />
<text  x="1162.66" y="927.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3 samples, 0.06%)</title><rect x="1113.9" y="837" width="0.7" height="15.0" fill="rgb(217,149,5)" rx="2" ry="2" />
<text  x="1116.91" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.48%)</title><rect x="1001.1" y="437" width="5.6" height="15.0" fill="rgb(233,208,48)" rx="2" ry="2" />
<text  x="1004.12" y="447.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.02%)</title><rect x="781.4" y="389" width="0.3" height="15.0" fill="rgb(223,181,29)" rx="2" ry="2" />
<text  x="784.42" y="399.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (6 samples, 0.12%)</title><rect x="830.1" y="485" width="1.5" height="15.0" fill="rgb(251,75,23)" rx="2" ry="2" />
<text  x="833.10" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="809.6" y="789" width="0.4" height="15.0" fill="rgb(253,130,34)" rx="2" ry="2" />
<text  x="812.55" y="799.5" ></text>
</g>
<g >
<title>pagecache_get_page (101 samples, 2.09%)</title><rect x="195.9" y="549" width="24.8" height="15.0" fill="rgb(206,190,51)" rx="2" ry="2" />
<text  x="198.94" y="559.5" >p..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (74 samples, 1.53%)</title><rect x="919.6" y="341" width="18.2" height="15.0" fill="rgb(208,56,16)" rx="2" ry="2" />
<text  x="922.65" y="351.5" ></text>
</g>
<g >
<title>do_statx (8 samples, 0.17%)</title><rect x="732.2" y="693" width="2.0" height="15.0" fill="rgb(254,139,17)" rx="2" ry="2" />
<text  x="735.24" y="703.5" ></text>
</g>
<g >
<title>ovl_release (1 samples, 0.02%)</title><rect x="656.4" y="533" width="0.2" height="15.0" fill="rgb(242,113,0)" rx="2" ry="2" />
<text  x="659.39" y="543.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (2 samples, 0.04%)</title><rect x="188.1" y="485" width="0.5" height="15.0" fill="rgb(210,171,9)" rx="2" ry="2" />
<text  x="191.11" y="495.5" ></text>
</g>
<g >
<title>ext4_fc_track_template (2 samples, 0.04%)</title><rect x="241.7" y="469" width="0.5" height="15.0" fill="rgb(250,68,24)" rx="2" ry="2" />
<text  x="244.69" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="731.0" y="709" width="0.3" height="15.0" fill="rgb(252,136,19)" rx="2" ry="2" />
<text  x="734.02" y="719.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Seek&gt;::seek (1 samples, 0.02%)</title><rect x="153.1" y="853" width="0.3" height="15.0" fill="rgb(213,226,32)" rx="2" ry="2" />
<text  x="156.13" y="863.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="657.9" y="709" width="0.2" height="15.0" fill="rgb(222,129,9)" rx="2" ry="2" />
<text  x="660.86" y="719.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="231.7" y="517" width="0.2" height="15.0" fill="rgb(247,30,22)" rx="2" ry="2" />
<text  x="234.66" y="527.5" ></text>
</g>
<g >
<title>__d_alloc (1 samples, 0.02%)</title><rect x="760.4" y="533" width="0.2" height="15.0" fill="rgb(228,48,38)" rx="2" ry="2" />
<text  x="763.38" y="543.5" ></text>
</g>
<g >
<title>__d_lookup (2 samples, 0.04%)</title><rect x="766.2" y="613" width="0.5" height="15.0" fill="rgb(245,0,2)" rx="2" ry="2" />
<text  x="769.25" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.27%)</title><rect x="817.6" y="501" width="3.2" height="15.0" fill="rgb(234,79,23)" rx="2" ry="2" />
<text  x="820.63" y="511.5" ></text>
</g>
<g >
<title>path_lookupat (9 samples, 0.19%)</title><rect x="764.8" y="661" width="2.2" height="15.0" fill="rgb(217,29,45)" rx="2" ry="2" />
<text  x="767.78" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.21%)</title><rect x="1003.3" y="389" width="2.5" height="15.0" fill="rgb(213,77,37)" rx="2" ry="2" />
<text  x="1006.32" y="399.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="1159.7" y="869" width="0.2" height="15.0" fill="rgb(224,188,24)" rx="2" ry="2" />
<text  x="1162.66" y="879.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (85 samples, 1.76%)</title><rect x="132.1" y="597" width="20.8" height="15.0" fill="rgb(212,52,51)" rx="2" ry="2" />
<text  x="135.09" y="607.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="689.9" y="389" width="0.3" height="15.0" fill="rgb(231,117,33)" rx="2" ry="2" />
<text  x="692.91" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.08%)</title><rect x="46.7" y="869" width="1.0" height="15.0" fill="rgb(234,164,49)" rx="2" ry="2" />
<text  x="49.70" y="879.5" ></text>
</g>
<g >
<title>lindrustinit (1 samples, 0.02%)</title><rect x="1091.2" y="965" width="0.2" height="15.0" fill="rgb(212,180,1)" rx="2" ry="2" />
<text  x="1094.16" y="975.5" ></text>
</g>
<g >
<title>alloc_page_buffers (26 samples, 0.54%)</title><rect x="669.1" y="517" width="6.4" height="15.0" fill="rgb(218,161,42)" rx="2" ry="2" />
<text  x="672.12" y="527.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (1 samples, 0.02%)</title><rect x="1092.4" y="869" width="0.2" height="15.0" fill="rgb(213,163,24)" rx="2" ry="2" />
<text  x="1095.38" y="879.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (3 samples, 0.06%)</title><rect x="108.8" y="741" width="0.8" height="15.0" fill="rgb(213,30,34)" rx="2" ry="2" />
<text  x="111.84" y="751.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.02%)</title><rect x="108.1" y="805" width="0.3" height="15.0" fill="rgb(222,37,26)" rx="2" ry="2" />
<text  x="111.11" y="815.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="655.9" y="501" width="0.2" height="15.0" fill="rgb(224,219,1)" rx="2" ry="2" />
<text  x="658.91" y="511.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.02%)</title><rect x="1185.1" y="853" width="0.3" height="15.0" fill="rgb(243,151,31)" rx="2" ry="2" />
<text  x="1188.11" y="863.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="657.6" y="693" width="0.3" height="15.0" fill="rgb(254,23,52)" rx="2" ry="2" />
<text  x="660.62" y="703.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (2 samples, 0.04%)</title><rect x="808.8" y="741" width="0.5" height="15.0" fill="rgb(226,60,20)" rx="2" ry="2" />
<text  x="811.82" y="751.5" ></text>
</g>
<g >
<title>posix_acl_create.part.0 (1 samples, 0.02%)</title><rect x="749.4" y="501" width="0.2" height="15.0" fill="rgb(226,144,43)" rx="2" ry="2" />
<text  x="752.37" y="511.5" ></text>
</g>
<g >
<title>node_page_state (1 samples, 0.02%)</title><rect x="696.3" y="469" width="0.2" height="15.0" fill="rgb(232,105,31)" rx="2" ry="2" />
<text  x="699.27" y="479.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (2 samples, 0.04%)</title><rect x="1017.8" y="917" width="0.4" height="15.0" fill="rgb(252,155,21)" rx="2" ry="2" />
<text  x="1020.76" y="927.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_full (1 samples, 0.02%)</title><rect x="837.0" y="357" width="0.2" height="15.0" fill="rgb(238,69,32)" rx="2" ry="2" />
<text  x="839.95" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.12%)</title><rect x="830.1" y="453" width="1.5" height="15.0" fill="rgb(210,155,27)" rx="2" ry="2" />
<text  x="833.10" y="463.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (8 samples, 0.17%)</title><rect x="654.7" y="597" width="1.9" height="15.0" fill="rgb(226,60,22)" rx="2" ry="2" />
<text  x="657.68" y="607.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (3 samples, 0.06%)</title><rect x="857.0" y="357" width="0.8" height="15.0" fill="rgb(221,3,23)" rx="2" ry="2" />
<text  x="860.02" y="367.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect x="1090.7" y="565" width="0.2" height="15.0" fill="rgb(232,207,13)" rx="2" ry="2" />
<text  x="1093.67" y="575.5" ></text>
</g>
<g >
<title>inode_init_always (1 samples, 0.02%)</title><rect x="755.0" y="501" width="0.2" height="15.0" fill="rgb(213,36,4)" rx="2" ry="2" />
<text  x="757.99" y="511.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (8 samples, 0.17%)</title><rect x="47.7" y="853" width="1.9" height="15.0" fill="rgb(252,79,35)" rx="2" ry="2" />
<text  x="50.68" y="863.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (1 samples, 0.02%)</title><rect x="130.9" y="821" width="0.2" height="15.0" fill="rgb(251,134,4)" rx="2" ry="2" />
<text  x="133.86" y="831.5" ></text>
</g>
<g >
<title>NaClSysFork (1 samples, 0.02%)</title><rect x="109.6" y="981" width="0.2" height="15.0" fill="rgb(220,23,51)" rx="2" ry="2" />
<text  x="112.58" y="991.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (767 samples, 15.90%)</title><rect x="821.8" y="597" width="187.6" height="15.0" fill="rgb(218,131,53)" rx="2" ry="2" />
<text  x="824.79" y="607.5" >serde::ser::impls::&lt;impl..</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.02%)</title><rect x="755.2" y="597" width="0.3" height="15.0" fill="rgb(216,115,54)" rx="2" ry="2" />
<text  x="758.24" y="607.5" ></text>
</g>
<g >
<title>__ext4_find_entry (10 samples, 0.21%)</title><rect x="803.2" y="581" width="2.4" height="15.0" fill="rgb(238,46,34)" rx="2" ry="2" />
<text  x="806.19" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="762.6" y="677" width="0.2" height="15.0" fill="rgb(227,159,50)" rx="2" ry="2" />
<text  x="765.58" y="687.5" ></text>
</g>
<g >
<title>iput_final (90 samples, 1.87%)</title><rect x="771.4" y="533" width="22.0" height="15.0" fill="rgb(217,76,6)" rx="2" ry="2" />
<text  x="774.39" y="543.5" >i..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="55.0" y="949" width="0.3" height="15.0" fill="rgb(219,180,47)" rx="2" ry="2" />
<text  x="58.02" y="959.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="813.7" y="485" width="0.3" height="15.0" fill="rgb(246,95,4)" rx="2" ry="2" />
<text  x="816.71" y="495.5" ></text>
</g>
<g >
<title>page_cache_delete_batch (8 samples, 0.17%)</title><rect x="113.5" y="469" width="1.9" height="15.0" fill="rgb(218,32,16)" rx="2" ry="2" />
<text  x="116.49" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="814.4" y="485" width="0.5" height="15.0" fill="rgb(215,35,1)" rx="2" ry="2" />
<text  x="817.45" y="495.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (2 samples, 0.04%)</title><rect x="103.9" y="949" width="0.5" height="15.0" fill="rgb(251,49,49)" rx="2" ry="2" />
<text  x="106.95" y="959.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.02%)</title><rect x="34.7" y="613" width="0.3" height="15.0" fill="rgb(226,4,11)" rx="2" ry="2" />
<text  x="37.71" y="623.5" ></text>
</g>
<g >
<title>CopyBundleTails (2 samples, 0.04%)</title><rect x="103.9" y="933" width="0.5" height="15.0" fill="rgb(223,164,44)" rx="2" ry="2" />
<text  x="106.95" y="943.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.06%)</title><rect x="108.8" y="645" width="0.8" height="15.0" fill="rgb(227,11,53)" rx="2" ry="2" />
<text  x="111.84" y="655.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1 samples, 0.02%)</title><rect x="1091.2" y="629" width="0.2" height="15.0" fill="rgb(243,111,26)" rx="2" ry="2" />
<text  x="1094.16" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="107.6" y="965" width="0.3" height="15.0" fill="rgb(246,181,11)" rx="2" ry="2" />
<text  x="110.62" y="975.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.08%)</title><rect x="866.3" y="469" width="1.0" height="15.0" fill="rgb(206,87,15)" rx="2" ry="2" />
<text  x="869.31" y="479.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="1101.9" y="837" width="0.3" height="15.0" fill="rgb(231,34,10)" rx="2" ry="2" />
<text  x="1104.92" y="847.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="131.4" y="709" width="0.2" height="15.0" fill="rgb(241,81,19)" rx="2" ry="2" />
<text  x="134.35" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="831.6" y="293" width="0.2" height="15.0" fill="rgb(228,38,27)" rx="2" ry="2" />
<text  x="834.57" y="303.5" ></text>
</g>
<g >
<title>free_buffer_head (1 samples, 0.02%)</title><rect x="784.4" y="357" width="0.2" height="15.0" fill="rgb(232,11,44)" rx="2" ry="2" />
<text  x="787.35" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="731.7" y="693" width="0.3" height="15.0" fill="rgb(235,13,35)" rx="2" ry="2" />
<text  x="734.75" y="703.5" ></text>
</g>
<g >
<title>__add_wb_stat (2 samples, 0.04%)</title><rect x="709.2" y="485" width="0.5" height="15.0" fill="rgb(239,2,32)" rx="2" ry="2" />
<text  x="712.24" y="495.5" ></text>
</g>
<g >
<title>strlen (1 samples, 0.02%)</title><rect x="30.3" y="725" width="0.3" height="15.0" fill="rgb(244,122,18)" rx="2" ry="2" />
<text  x="33.31" y="735.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="835.7" y="373" width="0.3" height="15.0" fill="rgb(227,88,47)" rx="2" ry="2" />
<text  x="838.73" y="383.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (29 samples, 0.60%)</title><rect x="813.7" y="565" width="7.1" height="15.0" fill="rgb(215,165,10)" rx="2" ry="2" />
<text  x="816.71" y="575.5" ></text>
</g>
<g >
<title>sel_ldr (4,321 samples, 89.59%)</title><rect x="36.2" y="1045" width="1057.2" height="15.0" fill="rgb(212,180,2)" rx="2" ry="2" />
<text  x="39.18" y="1055.5" >sel_ldr</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="840.4" y="165" width="0.2" height="15.0" fill="rgb(226,153,2)" rx="2" ry="2" />
<text  x="843.38" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="835.7" y="357" width="0.3" height="15.0" fill="rgb(208,102,53)" rx="2" ry="2" />
<text  x="838.73" y="367.5" ></text>
</g>
<g >
<title>__d_rehash (1 samples, 0.02%)</title><rect x="760.6" y="517" width="0.3" height="15.0" fill="rgb(251,150,17)" rx="2" ry="2" />
<text  x="763.62" y="527.5" ></text>
</g>
<g >
<title>del_timer_sync (1 samples, 0.02%)</title><rect x="1103.9" y="965" width="0.2" height="15.0" fill="rgb(229,208,0)" rx="2" ry="2" />
<text  x="1106.88" y="975.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.04%)</title><rect x="1101.2" y="853" width="0.5" height="15.0" fill="rgb(249,39,16)" rx="2" ry="2" />
<text  x="1104.19" y="863.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (1 samples, 0.02%)</title><rect x="1090.4" y="837" width="0.3" height="15.0" fill="rgb(230,62,19)" rx="2" ry="2" />
<text  x="1093.42" y="847.5" ></text>
</g>
<g >
<title>__perf_event_enable (63 samples, 1.31%)</title><rect x="14.6" y="725" width="15.5" height="15.0" fill="rgb(207,92,8)" rx="2" ry="2" />
<text  x="17.65" y="735.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook (1 samples, 0.02%)</title><rect x="1107.1" y="869" width="0.2" height="15.0" fill="rgb(219,1,38)" rx="2" ry="2" />
<text  x="1110.06" y="879.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.02%)</title><rect x="754.7" y="501" width="0.3" height="15.0" fill="rgb(227,92,26)" rx="2" ry="2" />
<text  x="757.75" y="511.5" ></text>
</g>
<g >
<title>unlock_page (2 samples, 0.04%)</title><rect x="127.2" y="501" width="0.5" height="15.0" fill="rgb(220,11,12)" rx="2" ry="2" />
<text  x="130.19" y="511.5" ></text>
</g>
<g >
<title>ext4_create (25 samples, 0.52%)</title><rect x="740.1" y="485" width="6.1" height="15.0" fill="rgb(226,66,40)" rx="2" ry="2" />
<text  x="743.07" y="495.5" ></text>
</g>
<g >
<title>filp_close (1 samples, 0.02%)</title><rect x="654.2" y="581" width="0.2" height="15.0" fill="rgb(234,55,19)" rx="2" ry="2" />
<text  x="657.19" y="591.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="222.9" y="501" width="0.2" height="15.0" fill="rgb(217,214,46)" rx="2" ry="2" />
<text  x="225.86" y="511.5" ></text>
</g>
<g >
<title>ovl_permission (1 samples, 0.02%)</title><rect x="794.1" y="677" width="0.3" height="15.0" fill="rgb(236,87,9)" rx="2" ry="2" />
<text  x="797.14" y="687.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.02%)</title><rect x="794.9" y="645" width="0.2" height="15.0" fill="rgb(250,183,8)" rx="2" ry="2" />
<text  x="797.87" y="655.5" ></text>
</g>
<g >
<title>add_dirent_to_buf (7 samples, 0.15%)</title><rect x="799.3" y="581" width="1.7" height="15.0" fill="rgb(240,63,51)" rx="2" ry="2" />
<text  x="802.28" y="591.5" ></text>
</g>
<g >
<title>tcache_init.part.0 (1 samples, 0.02%)</title><rect x="1089.9" y="917" width="0.3" height="15.0" fill="rgb(226,225,46)" rx="2" ry="2" />
<text  x="1092.93" y="927.5" ></text>
</g>
<g >
<title>security_inode_alloc (1 samples, 0.02%)</title><rect x="755.0" y="485" width="0.2" height="15.0" fill="rgb(236,211,23)" rx="2" ry="2" />
<text  x="757.99" y="495.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (16 samples, 0.33%)</title><rect x="1011.9" y="869" width="3.9" height="15.0" fill="rgb(213,218,4)" rx="2" ry="2" />
<text  x="1014.89" y="879.5" ></text>
</g>
<g >
<title>security_file_free (1 samples, 0.02%)</title><rect x="655.9" y="517" width="0.2" height="15.0" fill="rgb(231,126,1)" rx="2" ry="2" />
<text  x="658.91" y="527.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.02%)</title><rect x="231.4" y="453" width="0.3" height="15.0" fill="rgb(236,117,10)" rx="2" ry="2" />
<text  x="234.42" y="463.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (62 samples, 1.29%)</title><rect x="180.5" y="565" width="15.2" height="15.0" fill="rgb(242,74,43)" rx="2" ry="2" />
<text  x="183.53" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="731.5" y="789" width="0.2" height="15.0" fill="rgb(227,7,43)" rx="2" ry="2" />
<text  x="734.51" y="799.5" ></text>
</g>
<g >
<title>revert_creds (1 samples, 0.02%)</title><rect x="730.3" y="677" width="0.2" height="15.0" fill="rgb(205,5,35)" rx="2" ry="2" />
<text  x="733.28" y="687.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (2 samples, 0.04%)</title><rect x="1017.8" y="997" width="0.4" height="15.0" fill="rgb(220,185,24)" rx="2" ry="2" />
<text  x="1020.76" y="1007.5" ></text>
</g>
<g >
<title>menu_select (5 samples, 0.10%)</title><rect x="1157.5" y="933" width="1.2" height="15.0" fill="rgb(229,124,11)" rx="2" ry="2" />
<text  x="1160.46" y="943.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (3 samples, 0.06%)</title><rect x="852.1" y="261" width="0.8" height="15.0" fill="rgb(237,6,0)" rx="2" ry="2" />
<text  x="855.12" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (89 samples, 1.85%)</title><rect x="131.4" y="773" width="21.7" height="15.0" fill="rgb(239,17,21)" rx="2" ry="2" />
<text  x="134.35" y="783.5" >d..</text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="10.2" y="869" width="0.3" height="15.0" fill="rgb(222,83,10)" rx="2" ry="2" />
<text  x="13.24" y="879.5" ></text>
</g>
<g >
<title>prep_new_page (18 samples, 0.37%)</title><rect x="696.5" y="469" width="4.4" height="15.0" fill="rgb(251,20,38)" rx="2" ry="2" />
<text  x="699.52" y="479.5" ></text>
</g>
<g >
<title>ext4_alloc_inode (2 samples, 0.04%)</title><rect x="744.5" y="421" width="0.5" height="15.0" fill="rgb(246,182,26)" rx="2" ry="2" />
<text  x="747.47" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::os::errno (1 samples, 0.02%)</title><rect x="758.7" y="725" width="0.2" height="15.0" fill="rgb(240,54,43)" rx="2" ry="2" />
<text  x="761.66" y="735.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (2 samples, 0.04%)</title><rect x="107.9" y="949" width="0.5" height="15.0" fill="rgb(247,57,42)" rx="2" ry="2" />
<text  x="110.86" y="959.5" ></text>
</g>
<g >
<title>crypto_shash_update (6 samples, 0.12%)</title><rect x="718.0" y="421" width="1.5" height="15.0" fill="rgb(244,90,47)" rx="2" ry="2" />
<text  x="721.05" y="431.5" ></text>
</g>
<g >
<title>do_iter_write (338 samples, 7.01%)</title><rect x="173.2" y="661" width="82.7" height="15.0" fill="rgb(233,34,26)" rx="2" ry="2" />
<text  x="176.19" y="671.5" >do_iter_w..</text>
</g>
<g >
<title>&lt;u32 as itoa::Integer&gt;::write (32 samples, 0.66%)</title><rect x="942.2" y="421" width="7.8" height="15.0" fill="rgb(212,48,0)" rx="2" ry="2" />
<text  x="945.16" y="431.5" ></text>
</g>
<g >
<title>lookup_fast (1 samples, 0.02%)</title><rect x="769.7" y="661" width="0.2" height="15.0" fill="rgb(247,4,10)" rx="2" ry="2" />
<text  x="772.67" y="671.5" ></text>
</g>
<g >
<title>walk_component (2 samples, 0.04%)</title><rect x="769.7" y="677" width="0.5" height="15.0" fill="rgb(206,44,52)" rx="2" ry="2" />
<text  x="772.67" y="687.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="664.7" y="485" width="0.3" height="15.0" fill="rgb(253,8,20)" rx="2" ry="2" />
<text  x="667.71" y="495.5" ></text>
</g>
<g >
<title>rest_init (116 samples, 2.41%)</title><rect x="1161.6" y="949" width="28.4" height="15.0" fill="rgb(254,210,54)" rx="2" ry="2" />
<text  x="1164.62" y="959.5" >re..</text>
</g>
<g >
<title>newidle_balance (11 samples, 0.23%)</title><rect x="1186.8" y="853" width="2.7" height="15.0" fill="rgb(240,169,19)" rx="2" ry="2" />
<text  x="1189.82" y="863.5" ></text>
</g>
<g >
<title>__schedule (7 samples, 0.15%)</title><rect x="1013.8" y="677" width="1.8" height="15.0" fill="rgb(231,91,15)" rx="2" ry="2" />
<text  x="1016.84" y="687.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.06%)</title><rect x="1109.3" y="965" width="0.7" height="15.0" fill="rgb(242,137,40)" rx="2" ry="2" />
<text  x="1112.26" y="975.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (71 samples, 1.47%)</title><rect x="839.6" y="309" width="17.4" height="15.0" fill="rgb(230,219,36)" rx="2" ry="2" />
<text  x="842.65" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="1090.9" y="453" width="0.3" height="15.0" fill="rgb(218,44,42)" rx="2" ry="2" />
<text  x="1093.91" y="463.5" ></text>
</g>
<g >
<title>__unlink (1 samples, 0.02%)</title><rect x="1042.0" y="1013" width="0.2" height="15.0" fill="rgb(238,58,27)" rx="2" ry="2" />
<text  x="1044.98" y="1023.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="730.5" y="693" width="0.3" height="15.0" fill="rgb(230,85,36)" rx="2" ry="2" />
<text  x="733.53" y="703.5" ></text>
</g>
<g >
<title>lookup_bh_lru (2 samples, 0.04%)</title><rect x="246.3" y="421" width="0.5" height="15.0" fill="rgb(206,92,32)" rx="2" ry="2" />
<text  x="249.34" y="431.5" ></text>
</g>
<g >
<title>core::cmp::min (27 samples, 0.56%)</title><rect x="276.4" y="853" width="6.6" height="15.0" fill="rgb(235,43,27)" rx="2" ry="2" />
<text  x="279.44" y="863.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="807.8" y="597" width="0.3" height="15.0" fill="rgb(239,135,52)" rx="2" ry="2" />
<text  x="810.84" y="607.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.02%)</title><rect x="750.6" y="357" width="0.2" height="15.0" fill="rgb(229,195,45)" rx="2" ry="2" />
<text  x="753.59" y="367.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="657.6" y="709" width="0.3" height="15.0" fill="rgb(220,23,47)" rx="2" ry="2" />
<text  x="660.62" y="719.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="1185.6" y="837" width="0.2" height="15.0" fill="rgb(248,194,53)" rx="2" ry="2" />
<text  x="1188.60" y="847.5" ></text>
</g>
<g >
<title>ovl_lookup (4 samples, 0.08%)</title><rect x="760.6" y="565" width="1.0" height="15.0" fill="rgb(241,22,1)" rx="2" ry="2" />
<text  x="763.62" y="575.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (1 samples, 0.02%)</title><rect x="1091.9" y="725" width="0.2" height="15.0" fill="rgb(205,138,11)" rx="2" ry="2" />
<text  x="1094.89" y="735.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="172.7" y="853" width="0.2" height="15.0" fill="rgb(242,169,43)" rx="2" ry="2" />
<text  x="175.70" y="863.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="1162.1" y="869" width="0.5" height="15.0" fill="rgb(246,193,11)" rx="2" ry="2" />
<text  x="1165.11" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.25%)</title><rect x="1012.9" y="789" width="2.9" height="15.0" fill="rgb(207,88,48)" rx="2" ry="2" />
<text  x="1015.87" y="799.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (10 samples, 0.21%)</title><rect x="1111.5" y="869" width="2.4" height="15.0" fill="rgb(206,12,23)" rx="2" ry="2" />
<text  x="1114.46" y="879.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (3 samples, 0.06%)</title><rect x="108.8" y="725" width="0.8" height="15.0" fill="rgb(214,191,19)" rx="2" ry="2" />
<text  x="111.84" y="735.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (4 samples, 0.08%)</title><rect x="46.7" y="965" width="1.0" height="15.0" fill="rgb(212,57,42)" rx="2" ry="2" />
<text  x="49.70" y="975.5" ></text>
</g>
<g >
<title>pick_next_task_fair (4 samples, 0.08%)</title><rect x="1104.6" y="917" width="1.0" height="15.0" fill="rgb(207,83,25)" rx="2" ry="2" />
<text  x="1107.61" y="927.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.06%)</title><rect x="736.2" y="485" width="0.7" height="15.0" fill="rgb(241,227,13)" rx="2" ry="2" />
<text  x="739.15" y="495.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="1091.2" y="853" width="0.2" height="15.0" fill="rgb(246,185,48)" rx="2" ry="2" />
<text  x="1094.16" y="863.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (25 samples, 0.52%)</title><rect x="189.6" y="549" width="6.1" height="15.0" fill="rgb(222,205,44)" rx="2" ry="2" />
<text  x="192.58" y="559.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="108.4" y="741" width="0.2" height="15.0" fill="rgb(206,180,9)" rx="2" ry="2" />
<text  x="111.35" y="751.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.04%)</title><rect x="1114.2" y="789" width="0.4" height="15.0" fill="rgb(207,101,33)" rx="2" ry="2" />
<text  x="1117.16" y="799.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="1091.2" y="613" width="0.2" height="15.0" fill="rgb(211,8,7)" rx="2" ry="2" />
<text  x="1094.16" y="623.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect x="1090.7" y="693" width="0.5" height="15.0" fill="rgb(237,81,17)" rx="2" ry="2" />
<text  x="1093.67" y="703.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="865.3" y="405" width="0.3" height="15.0" fill="rgb(232,154,27)" rx="2" ry="2" />
<text  x="868.33" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="33.2" y="597" width="0.3" height="15.0" fill="rgb(206,114,51)" rx="2" ry="2" />
<text  x="36.24" y="607.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (1 samples, 0.02%)</title><rect x="754.7" y="485" width="0.3" height="15.0" fill="rgb(246,92,35)" rx="2" ry="2" />
<text  x="757.75" y="495.5" ></text>
</g>
<g >
<title>create_empty_buffers (28 samples, 0.58%)</title><rect x="182.7" y="549" width="6.9" height="15.0" fill="rgb(242,138,31)" rx="2" ry="2" />
<text  x="185.73" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.02%)</title><rect x="1043.0" y="1013" width="0.2" height="15.0" fill="rgb(228,113,7)" rx="2" ry="2" />
<text  x="1045.96" y="1023.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (3 samples, 0.06%)</title><rect x="233.4" y="517" width="0.7" height="15.0" fill="rgb(250,13,9)" rx="2" ry="2" />
<text  x="236.38" y="527.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (827 samples, 17.15%)</title><rect x="809.6" y="837" width="202.3" height="15.0" fill="rgb(236,165,5)" rx="2" ry="2" />
<text  x="812.55" y="847.5" >serde_json::ser::to_vec</text>
</g>
<g >
<title>wake_up_process (2 samples, 0.04%)</title><rect x="1115.6" y="757" width="0.5" height="15.0" fill="rgb(205,30,54)" rx="2" ry="2" />
<text  x="1118.62" y="767.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.10%)</title><rect x="980.3" y="405" width="1.2" height="15.0" fill="rgb(216,192,15)" rx="2" ry="2" />
<text  x="983.33" y="415.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.02%)</title><rect x="171.0" y="885" width="0.2" height="15.0" fill="rgb(241,129,36)" rx="2" ry="2" />
<text  x="173.99" y="895.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.04%)</title><rect x="1090.7" y="853" width="0.5" height="15.0" fill="rgb(226,194,53)" rx="2" ry="2" />
<text  x="1093.67" y="863.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (1 samples, 0.02%)</title><rect x="108.1" y="821" width="0.3" height="15.0" fill="rgb(221,126,36)" rx="2" ry="2" />
<text  x="111.11" y="831.5" ></text>
</g>
<g >
<title>xas_store (8 samples, 0.17%)</title><rect x="688.4" y="485" width="2.0" height="15.0" fill="rgb(242,15,16)" rx="2" ry="2" />
<text  x="691.44" y="495.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (1 samples, 0.02%)</title><rect x="109.1" y="293" width="0.2" height="15.0" fill="rgb(218,157,54)" rx="2" ry="2" />
<text  x="112.09" y="303.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (12 samples, 0.25%)</title><rect x="49.6" y="1013" width="3.0" height="15.0" fill="rgb(227,109,6)" rx="2" ry="2" />
<text  x="52.64" y="1023.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (25 samples, 0.52%)</title><rect x="882.5" y="405" width="6.1" height="15.0" fill="rgb(229,153,32)" rx="2" ry="2" />
<text  x="885.46" y="415.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="1090.4" y="661" width="0.3" height="15.0" fill="rgb(219,13,52)" rx="2" ry="2" />
<text  x="1093.42" y="671.5" ></text>
</g>
<g >
<title>HandleStackContext (1 samples, 0.02%)</title><rect x="103.5" y="997" width="0.2" height="15.0" fill="rgb(254,181,6)" rx="2" ry="2" />
<text  x="106.46" y="1007.5" ></text>
</g>
<g >
<title>__pagevec_release (10 samples, 0.21%)</title><rect x="776.8" y="453" width="2.4" height="15.0" fill="rgb(220,12,20)" rx="2" ry="2" />
<text  x="779.77" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.27%)</title><rect x="817.6" y="469" width="3.2" height="15.0" fill="rgb(235,179,19)" rx="2" ry="2" />
<text  x="820.63" y="479.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (1 samples, 0.02%)</title><rect x="1090.4" y="549" width="0.3" height="15.0" fill="rgb(210,115,54)" rx="2" ry="2" />
<text  x="1093.42" y="559.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="10.2" y="917" width="0.3" height="15.0" fill="rgb(238,54,30)" rx="2" ry="2" />
<text  x="13.24" y="927.5" ></text>
</g>
<g >
<title>lookup_bh_lru (1 samples, 0.02%)</title><rect x="773.3" y="389" width="0.3" height="15.0" fill="rgb(218,187,45)" rx="2" ry="2" />
<text  x="776.34" y="399.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1106.6" y="853" width="0.2" height="15.0" fill="rgb(215,170,41)" rx="2" ry="2" />
<text  x="1109.57" y="863.5" ></text>
</g>
<g >
<title>ext4_setent.part.0 (5 samples, 0.10%)</title><rect x="752.3" y="469" width="1.2" height="15.0" fill="rgb(241,199,17)" rx="2" ry="2" />
<text  x="755.30" y="479.5" ></text>
</g>
<g >
<title>find_get_entry (4 samples, 0.08%)</title><rect x="151.9" y="565" width="1.0" height="15.0" fill="rgb(216,83,22)" rx="2" ry="2" />
<text  x="154.90" y="575.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (10 samples, 0.21%)</title><rect x="1111.5" y="853" width="2.4" height="15.0" fill="rgb(205,104,30)" rx="2" ry="2" />
<text  x="1114.46" y="863.5" ></text>
</g>
<g >
<title>_perf_event_enable (1 samples, 0.02%)</title><rect x="35.9" y="933" width="0.3" height="15.0" fill="rgb(212,41,20)" rx="2" ry="2" />
<text  x="38.93" y="943.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.23%)</title><rect x="888.6" y="373" width="2.7" height="15.0" fill="rgb(251,40,9)" rx="2" ry="2" />
<text  x="891.58" y="383.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (25 samples, 0.52%)</title><rect x="189.6" y="533" width="6.1" height="15.0" fill="rgb(253,160,11)" rx="2" ry="2" />
<text  x="192.58" y="543.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.02%)</title><rect x="35.7" y="693" width="0.2" height="15.0" fill="rgb(216,187,30)" rx="2" ry="2" />
<text  x="38.69" y="703.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.02%)</title><rect x="30.1" y="965" width="0.2" height="15.0" fill="rgb(220,95,27)" rx="2" ry="2" />
<text  x="33.06" y="975.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (2 samples, 0.04%)</title><rect x="1017.3" y="917" width="0.5" height="15.0" fill="rgb(217,119,13)" rx="2" ry="2" />
<text  x="1020.27" y="927.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.02%)</title><rect x="108.6" y="485" width="0.2" height="15.0" fill="rgb(216,52,21)" rx="2" ry="2" />
<text  x="111.60" y="495.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_value (3 samples, 0.06%)</title><rect x="1007.2" y="549" width="0.8" height="15.0" fill="rgb(225,79,23)" rx="2" ry="2" />
<text  x="1010.24" y="559.5" ></text>
</g>
<g >
<title>queue_delayed_work_on (1 samples, 0.02%)</title><rect x="103.7" y="597" width="0.2" height="15.0" fill="rgb(223,29,13)" rx="2" ry="2" />
<text  x="106.71" y="607.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (3 samples, 0.06%)</title><rect x="733.0" y="645" width="0.7" height="15.0" fill="rgb(223,167,36)" rx="2" ry="2" />
<text  x="735.97" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.15%)</title><rect x="824.5" y="437" width="1.7" height="15.0" fill="rgb(242,75,38)" rx="2" ry="2" />
<text  x="827.48" y="447.5" ></text>
</g>
<g >
<title>kernel_fpu_begin (1 samples, 0.02%)</title><rect x="743.2" y="405" width="0.3" height="15.0" fill="rgb(248,75,3)" rx="2" ry="2" />
<text  x="746.25" y="415.5" ></text>
</g>
<g >
<title>__libc_write (340 samples, 7.05%)</title><rect x="172.9" y="805" width="83.2" height="15.0" fill="rgb(240,220,25)" rx="2" ry="2" />
<text  x="175.94" y="815.5" >__libc_wr..</text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="1014.6" y="613" width="0.2" height="15.0" fill="rgb(245,196,18)" rx="2" ry="2" />
<text  x="1017.58" y="623.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (1 samples, 0.02%)</title><rect x="832.3" y="437" width="0.3" height="15.0" fill="rgb(250,105,18)" rx="2" ry="2" />
<text  x="835.31" y="447.5" ></text>
</g>
<g >
<title>do_filp_open (82 samples, 1.70%)</title><rect x="735.2" y="645" width="20.0" height="15.0" fill="rgb(247,159,35)" rx="2" ry="2" />
<text  x="738.18" y="655.5" ></text>
</g>
<g >
<title>walk_component (2 samples, 0.04%)</title><rect x="757.0" y="613" width="0.4" height="15.0" fill="rgb(215,221,31)" rx="2" ry="2" />
<text  x="759.95" y="623.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="657.6" y="645" width="0.3" height="15.0" fill="rgb(227,116,29)" rx="2" ry="2" />
<text  x="660.62" y="655.5" ></text>
</g>
<g >
<title>alloc_buffer_head (1 samples, 0.02%)</title><rect x="32.0" y="597" width="0.3" height="15.0" fill="rgb(236,148,4)" rx="2" ry="2" />
<text  x="35.02" y="607.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (338 samples, 7.01%)</title><rect x="173.2" y="629" width="82.7" height="15.0" fill="rgb(205,120,24)" rx="2" ry="2" />
<text  x="176.19" y="639.5" >ext4_file..</text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="1091.9" y="933" width="0.2" height="15.0" fill="rgb(215,148,34)" rx="2" ry="2" />
<text  x="1094.89" y="943.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="653.9" y="709" width="0.3" height="15.0" fill="rgb(253,207,3)" rx="2" ry="2" />
<text  x="656.95" y="719.5" ></text>
</g>
<g >
<title>std::ffi::c_str::CString::new (1 samples, 0.02%)</title><rect x="758.4" y="757" width="0.3" height="15.0" fill="rgb(230,164,30)" rx="2" ry="2" />
<text  x="761.42" y="767.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="865.1" y="341" width="0.2" height="15.0" fill="rgb(222,117,5)" rx="2" ry="2" />
<text  x="868.09" y="351.5" ></text>
</g>
<g >
<title>mblen (1 samples, 0.02%)</title><rect x="10.0" y="965" width="0.2" height="15.0" fill="rgb(205,221,3)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (1 samples, 0.02%)</title><rect x="654.7" y="565" width="0.2" height="15.0" fill="rgb(242,56,38)" rx="2" ry="2" />
<text  x="657.68" y="575.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (116 samples, 2.41%)</title><rect x="1161.6" y="1013" width="28.4" height="15.0" fill="rgb(250,152,5)" rx="2" ry="2" />
<text  x="1164.62" y="1023.5" >x8..</text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="835.5" y="389" width="0.2" height="15.0" fill="rgb(247,52,5)" rx="2" ry="2" />
<text  x="838.49" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="837.0" y="341" width="0.2" height="15.0" fill="rgb(232,154,24)" rx="2" ry="2" />
<text  x="839.95" y="351.5" ></text>
</g>
<g >
<title>&lt;u32 as itoa::Integer&gt;::write (1 samples, 0.02%)</title><rect x="832.3" y="421" width="0.3" height="15.0" fill="rgb(216,84,20)" rx="2" ry="2" />
<text  x="835.31" y="431.5" ></text>
</g>
<g >
<title>std::fs::metadata (15 samples, 0.31%)</title><rect x="758.2" y="805" width="3.6" height="15.0" fill="rgb(230,92,43)" rx="2" ry="2" />
<text  x="761.17" y="815.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (1 samples, 0.02%)</title><rect x="676.5" y="501" width="0.2" height="15.0" fill="rgb(207,79,14)" rx="2" ry="2" />
<text  x="679.46" y="511.5" ></text>
</g>
<g >
<title>NaClFillTrampolineRegion (1 samples, 0.02%)</title><rect x="107.9" y="885" width="0.2" height="15.0" fill="rgb(249,193,4)" rx="2" ry="2" />
<text  x="110.86" y="895.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (2 samples, 0.04%)</title><rect x="809.6" y="741" width="0.4" height="15.0" fill="rgb(228,35,38)" rx="2" ry="2" />
<text  x="812.55" y="751.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.12%)</title><rect x="831.6" y="533" width="1.4" height="15.0" fill="rgb(207,210,41)" rx="2" ry="2" />
<text  x="834.57" y="543.5" ></text>
</g>
<g >
<title>__xa_set_mark (5 samples, 0.10%)</title><rect x="229.0" y="501" width="1.2" height="15.0" fill="rgb(215,31,48)" rx="2" ry="2" />
<text  x="231.97" y="511.5" ></text>
</g>
<g >
<title>ext4_rename2 (21 samples, 0.44%)</title><rect x="802.5" y="629" width="5.1" height="15.0" fill="rgb(213,69,25)" rx="2" ry="2" />
<text  x="805.46" y="639.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.04%)</title><rect x="177.6" y="517" width="0.5" height="15.0" fill="rgb(253,166,40)" rx="2" ry="2" />
<text  x="180.59" y="527.5" ></text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (1 samples, 0.02%)</title><rect x="107.9" y="869" width="0.2" height="15.0" fill="rgb(233,139,1)" rx="2" ry="2" />
<text  x="110.86" y="879.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (5 samples, 0.10%)</title><rect x="108.4" y="997" width="1.2" height="15.0" fill="rgb(206,97,39)" rx="2" ry="2" />
<text  x="111.35" y="1007.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.02%)</title><rect x="1091.2" y="741" width="0.2" height="15.0" fill="rgb(213,133,33)" rx="2" ry="2" />
<text  x="1094.16" y="751.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (813 samples, 16.86%)</title><rect x="812.5" y="629" width="198.9" height="15.0" fill="rgb(251,11,18)" rx="2" ry="2" />
<text  x="815.49" y="639.5" >serde::ser::SerializeMap::..</text>
</g>
<g >
<title>proc_single_show (1 samples, 0.02%)</title><rect x="30.3" y="789" width="0.3" height="15.0" fill="rgb(232,169,11)" rx="2" ry="2" />
<text  x="33.31" y="799.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.04%)</title><rect x="687.0" y="469" width="0.5" height="15.0" fill="rgb(206,103,14)" rx="2" ry="2" />
<text  x="689.98" y="479.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="671.6" y="469" width="0.2" height="15.0" fill="rgb(218,137,0)" rx="2" ry="2" />
<text  x="674.56" y="479.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="731.0" y="677" width="0.3" height="15.0" fill="rgb(230,12,44)" rx="2" ry="2" />
<text  x="734.02" y="687.5" ></text>
</g>
<g >
<title>ctx_resched (1 samples, 0.02%)</title><rect x="35.9" y="821" width="0.3" height="15.0" fill="rgb(249,210,14)" rx="2" ry="2" />
<text  x="38.93" y="831.5" ></text>
</g>
<g >
<title>rmqueue (2 samples, 0.04%)</title><rect x="700.9" y="469" width="0.5" height="15.0" fill="rgb(239,82,12)" rx="2" ry="2" />
<text  x="703.92" y="479.5" ></text>
</g>
<g >
<title>__ext4_find_entry (7 samples, 0.15%)</title><rect x="750.1" y="453" width="1.7" height="15.0" fill="rgb(235,105,45)" rx="2" ry="2" />
<text  x="753.10" y="463.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (823 samples, 17.06%)</title><rect x="810.5" y="693" width="201.4" height="15.0" fill="rgb(247,31,17)" rx="2" ry="2" />
<text  x="813.53" y="703.5" >core::iter::traits::iterat..</text>
</g>
<g >
<title>update_blocked_averages (4 samples, 0.08%)</title><rect x="1187.8" y="773" width="1.0" height="15.0" fill="rgb(213,150,28)" rx="2" ry="2" />
<text  x="1190.80" y="783.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (91 samples, 1.89%)</title><rect x="131.1" y="869" width="22.3" height="15.0" fill="rgb(220,28,42)" rx="2" ry="2" />
<text  x="134.11" y="879.5" >r..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (3 samples, 0.06%)</title><rect x="864.1" y="485" width="0.7" height="15.0" fill="rgb(226,192,21)" rx="2" ry="2" />
<text  x="867.11" y="495.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (8 samples, 0.17%)</title><rect x="290.4" y="821" width="1.9" height="15.0" fill="rgb(231,173,40)" rx="2" ry="2" />
<text  x="293.38" y="831.5" ></text>
</g>
<g >
<title>stop_this_handle (1 samples, 0.02%)</title><rect x="33.7" y="613" width="0.3" height="15.0" fill="rgb(240,191,46)" rx="2" ry="2" />
<text  x="36.73" y="623.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.06%)</title><rect x="108.8" y="773" width="0.8" height="15.0" fill="rgb(233,52,45)" rx="2" ry="2" />
<text  x="111.84" y="783.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (338 samples, 7.01%)</title><rect x="173.2" y="613" width="82.7" height="15.0" fill="rgb(242,125,9)" rx="2" ry="2" />
<text  x="176.19" y="623.5" >ext4_buff..</text>
</g>
<g >
<title>process_timeout (2 samples, 0.04%)</title><rect x="1169.4" y="709" width="0.5" height="15.0" fill="rgb(210,212,45)" rx="2" ry="2" />
<text  x="1172.45" y="719.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="814.4" y="453" width="0.5" height="15.0" fill="rgb(229,219,50)" rx="2" ry="2" />
<text  x="817.45" y="463.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.02%)</title><rect x="104.4" y="741" width="0.3" height="15.0" fill="rgb(210,73,21)" rx="2" ry="2" />
<text  x="107.44" y="751.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.02%)</title><rect x="660.6" y="469" width="0.2" height="15.0" fill="rgb(252,134,1)" rx="2" ry="2" />
<text  x="663.55" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_write (21 samples, 0.44%)</title><rect x="30.6" y="837" width="5.1" height="15.0" fill="rgb(232,224,49)" rx="2" ry="2" />
<text  x="33.55" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.04%)</title><rect x="1006.7" y="501" width="0.5" height="15.0" fill="rgb(234,169,33)" rx="2" ry="2" />
<text  x="1009.75" y="511.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::new (127 samples, 2.63%)</title><rect x="731.0" y="837" width="31.1" height="15.0" fill="rgb(219,59,6)" rx="2" ry="2" />
<text  x="734.02" y="847.5" >ru..</text>
</g>
<g >
<title>x86_64_start_reservations (116 samples, 2.41%)</title><rect x="1161.6" y="997" width="28.4" height="15.0" fill="rgb(213,161,30)" rx="2" ry="2" />
<text  x="1164.62" y="1007.5" >x8..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="108.4" y="677" width="0.2" height="15.0" fill="rgb(210,36,42)" rx="2" ry="2" />
<text  x="111.35" y="687.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.02%)</title><rect x="173.9" y="533" width="0.3" height="15.0" fill="rgb(212,181,12)" rx="2" ry="2" />
<text  x="176.92" y="543.5" ></text>
</g>
<g >
<title>ovl_permission (2 samples, 0.04%)</title><rect x="769.2" y="661" width="0.5" height="15.0" fill="rgb(213,36,19)" rx="2" ry="2" />
<text  x="772.18" y="671.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="831.6" y="405" width="0.2" height="15.0" fill="rgb(247,164,28)" rx="2" ry="2" />
<text  x="834.57" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.08%)</title><rect x="866.3" y="437" width="1.0" height="15.0" fill="rgb(251,73,6)" rx="2" ry="2" />
<text  x="869.31" y="447.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.02%)</title><rect x="108.1" y="613" width="0.3" height="15.0" fill="rgb(247,17,0)" rx="2" ry="2" />
<text  x="111.11" y="623.5" ></text>
</g>
<g >
<title>workingset_update_node (1 samples, 0.02%)</title><rect x="114.7" y="437" width="0.3" height="15.0" fill="rgb(226,16,1)" rx="2" ry="2" />
<text  x="117.71" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="830.1" y="389" width="0.2" height="15.0" fill="rgb(245,74,26)" rx="2" ry="2" />
<text  x="833.10" y="399.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="1112.9" y="357" width="0.3" height="15.0" fill="rgb(223,1,3)" rx="2" ry="2" />
<text  x="1115.93" y="367.5" ></text>
</g>
<g >
<title>alloc_pages_current (44 samples, 0.91%)</title><rect x="208.2" y="533" width="10.7" height="15.0" fill="rgb(210,196,23)" rx="2" ry="2" />
<text  x="211.18" y="543.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (2 samples, 0.04%)</title><rect x="864.8" y="485" width="0.5" height="15.0" fill="rgb(251,70,54)" rx="2" ry="2" />
<text  x="867.85" y="495.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (9 samples, 0.19%)</title><rect x="100.3" y="949" width="2.2" height="15.0" fill="rgb(232,91,25)" rx="2" ry="2" />
<text  x="103.28" y="959.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.17%)</title><rect x="841.4" y="197" width="1.9" height="15.0" fill="rgb(228,49,31)" rx="2" ry="2" />
<text  x="844.36" y="207.5" ></text>
</g>
<g >
<title>from_kprojid (2 samples, 0.04%)</title><rect x="241.0" y="469" width="0.4" height="15.0" fill="rgb(231,226,54)" rx="2" ry="2" />
<text  x="243.96" y="479.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="1101.9" y="869" width="0.3" height="15.0" fill="rgb(246,181,5)" rx="2" ry="2" />
<text  x="1104.92" y="879.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (8 samples, 0.17%)</title><rect x="790.5" y="309" width="1.9" height="15.0" fill="rgb(225,70,46)" rx="2" ry="2" />
<text  x="793.47" y="319.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="108.6" y="501" width="0.2" height="15.0" fill="rgb(230,122,42)" rx="2" ry="2" />
<text  x="111.60" y="511.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.15%)</title><rect x="850.2" y="261" width="1.7" height="15.0" fill="rgb(253,9,32)" rx="2" ry="2" />
<text  x="853.17" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.12%)</title><rect x="36.7" y="1013" width="1.4" height="15.0" fill="rgb(252,79,17)" rx="2" ry="2" />
<text  x="39.67" y="1023.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (8 samples, 0.17%)</title><rect x="841.4" y="261" width="1.9" height="15.0" fill="rgb(223,225,13)" rx="2" ry="2" />
<text  x="844.36" y="271.5" ></text>
</g>
<g >
<title>policy_nodemask (1 samples, 0.02%)</title><rect x="701.7" y="501" width="0.2" height="15.0" fill="rgb(219,168,51)" rx="2" ry="2" />
<text  x="704.66" y="511.5" ></text>
</g>
<g >
<title>__getblk_gfp (2 samples, 0.04%)</title><rect x="750.1" y="405" width="0.5" height="15.0" fill="rgb(218,100,42)" rx="2" ry="2" />
<text  x="753.10" y="415.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="1167.7" y="661" width="0.3" height="15.0" fill="rgb(237,20,44)" rx="2" ry="2" />
<text  x="1170.74" y="671.5" ></text>
</g>
<g >
<title>__cancel_dirty_page (6 samples, 0.12%)</title><rect x="785.8" y="341" width="1.5" height="15.0" fill="rgb(205,192,50)" rx="2" ry="2" />
<text  x="788.82" y="351.5" ></text>
</g>
<g >
<title>net_rx_action (10 samples, 0.21%)</title><rect x="1111.5" y="821" width="2.4" height="15.0" fill="rgb(233,65,20)" rx="2" ry="2" />
<text  x="1114.46" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (74 samples, 1.53%)</title><rect x="919.6" y="325" width="18.2" height="15.0" fill="rgb(252,68,54)" rx="2" ry="2" />
<text  x="922.65" y="335.5" ></text>
</g>
<g >
<title>capable_wrt_inode_uidgid (1 samples, 0.02%)</title><rect x="794.1" y="613" width="0.3" height="15.0" fill="rgb(229,51,40)" rx="2" ry="2" />
<text  x="797.14" y="623.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (298 samples, 6.18%)</title><rect x="658.1" y="853" width="72.9" height="15.0" fill="rgb(217,27,28)" rx="2" ry="2" />
<text  x="661.11" y="863.5" >rustposi..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="767.0" y="773" width="0.7" height="15.0" fill="rgb(242,183,15)" rx="2" ry="2" />
<text  x="769.98" y="783.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (2 samples, 0.04%)</title><rect x="1112.9" y="661" width="0.5" height="15.0" fill="rgb(230,140,9)" rx="2" ry="2" />
<text  x="1115.93" y="671.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (1 samples, 0.02%)</title><rect x="751.1" y="405" width="0.2" height="15.0" fill="rgb(231,108,14)" rx="2" ry="2" />
<text  x="754.08" y="415.5" ></text>
</g>
<g >
<title>current_time (1 samples, 0.02%)</title><rect x="173.7" y="565" width="0.2" height="15.0" fill="rgb(243,80,38)" rx="2" ry="2" />
<text  x="176.68" y="575.5" ></text>
</g>
<g >
<title>release_pages (9 samples, 0.19%)</title><rect x="777.0" y="437" width="2.2" height="15.0" fill="rgb(226,28,11)" rx="2" ry="2" />
<text  x="780.01" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (1 samples, 0.02%)</title><rect x="658.6" y="773" width="0.2" height="15.0" fill="rgb(208,122,24)" rx="2" ry="2" />
<text  x="661.60" y="783.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="1167.7" y="629" width="0.3" height="15.0" fill="rgb(223,88,9)" rx="2" ry="2" />
<text  x="1170.74" y="639.5" ></text>
</g>
<g >
<title>free_unref_page_commit (5 samples, 0.10%)</title><rect x="111.3" y="437" width="1.2" height="15.0" fill="rgb(212,31,12)" rx="2" ry="2" />
<text  x="114.29" y="447.5" ></text>
</g>
<g >
<title>find_get_entries (1 samples, 0.02%)</title><rect x="116.4" y="469" width="0.3" height="15.0" fill="rgb(226,123,23)" rx="2" ry="2" />
<text  x="119.43" y="479.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="851.9" y="229" width="0.2" height="15.0" fill="rgb(212,95,26)" rx="2" ry="2" />
<text  x="854.88" y="239.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::seek (1 samples, 0.02%)</title><rect x="658.6" y="821" width="0.2" height="15.0" fill="rgb(239,169,33)" rx="2" ry="2" />
<text  x="661.60" y="831.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (2 samples, 0.04%)</title><rect x="1158.2" y="917" width="0.5" height="15.0" fill="rgb(218,203,15)" rx="2" ry="2" />
<text  x="1161.19" y="927.5" ></text>
</g>
<g >
<title>try_to_wake_up (5 samples, 0.10%)</title><rect x="129.6" y="677" width="1.3" height="15.0" fill="rgb(226,121,40)" rx="2" ry="2" />
<text  x="132.64" y="687.5" ></text>
</g>
<g >
<title>__udp6_lib_rcv (1 samples, 0.02%)</title><rect x="1113.7" y="581" width="0.2" height="15.0" fill="rgb(246,103,50)" rx="2" ry="2" />
<text  x="1116.67" y="591.5" ></text>
</g>
<g >
<title>load_balance (2 samples, 0.04%)</title><rect x="1104.9" y="885" width="0.4" height="15.0" fill="rgb(211,140,37)" rx="2" ry="2" />
<text  x="1107.86" y="895.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="1017.3" y="981" width="0.5" height="15.0" fill="rgb(215,149,23)" rx="2" ry="2" />
<text  x="1020.27" y="991.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.02%)</title><rect x="1092.9" y="853" width="0.2" height="15.0" fill="rgb(210,58,54)" rx="2" ry="2" />
<text  x="1095.87" y="863.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (4 samples, 0.08%)</title><rect x="838.7" y="293" width="0.9" height="15.0" fill="rgb(251,189,38)" rx="2" ry="2" />
<text  x="841.67" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (17 samples, 0.35%)</title><rect x="884.4" y="325" width="4.2" height="15.0" fill="rgb(231,196,40)" rx="2" ry="2" />
<text  x="887.42" y="335.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (9 samples, 0.19%)</title><rect x="128.7" y="821" width="2.2" height="15.0" fill="rgb(219,136,47)" rx="2" ry="2" />
<text  x="131.66" y="831.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (3 samples, 0.06%)</title><rect x="228.0" y="517" width="0.7" height="15.0" fill="rgb(241,106,23)" rx="2" ry="2" />
<text  x="230.99" y="527.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="720.5" y="421" width="0.2" height="15.0" fill="rgb(227,207,47)" rx="2" ry="2" />
<text  x="723.50" y="431.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="1090.9" y="437" width="0.3" height="15.0" fill="rgb(218,173,22)" rx="2" ry="2" />
<text  x="1093.91" y="447.5" ></text>
</g>
<g >
<title>pick_file (1 samples, 0.02%)</title><rect x="654.4" y="581" width="0.3" height="15.0" fill="rgb(214,213,7)" rx="2" ry="2" />
<text  x="657.44" y="591.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (1 samples, 0.02%)</title><rect x="172.2" y="933" width="0.3" height="15.0" fill="rgb(207,120,22)" rx="2" ry="2" />
<text  x="175.21" y="943.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (1 samples, 0.02%)</title><rect x="831.6" y="389" width="0.2" height="15.0" fill="rgb(212,12,32)" rx="2" ry="2" />
<text  x="834.57" y="399.5" ></text>
</g>
<g >
<title>proc_pid_status (1 samples, 0.02%)</title><rect x="30.3" y="773" width="0.3" height="15.0" fill="rgb(238,224,54)" rx="2" ry="2" />
<text  x="33.31" y="783.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="1159.7" y="901" width="0.2" height="15.0" fill="rgb(226,113,11)" rx="2" ry="2" />
<text  x="1162.66" y="911.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (1 samples, 0.02%)</title><rect x="799.3" y="517" width="0.2" height="15.0" fill="rgb(227,95,24)" rx="2" ry="2" />
<text  x="802.28" y="527.5" ></text>
</g>
<g >
<title>ipt_do_table (1 samples, 0.02%)</title><rect x="1113.2" y="597" width="0.2" height="15.0" fill="rgb(210,142,21)" rx="2" ry="2" />
<text  x="1116.18" y="607.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="831.6" y="373" width="0.2" height="15.0" fill="rgb(239,197,39)" rx="2" ry="2" />
<text  x="834.57" y="383.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="739.1" y="517" width="0.2" height="15.0" fill="rgb(205,2,5)" rx="2" ry="2" />
<text  x="742.09" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (12 samples, 0.25%)</title><rect x="654.2" y="709" width="2.9" height="15.0" fill="rgb(250,85,52)" rx="2" ry="2" />
<text  x="657.19" y="719.5" ></text>
</g>
<g >
<title>alloc_page_buffers (25 samples, 0.52%)</title><rect x="183.5" y="533" width="6.1" height="15.0" fill="rgb(215,137,15)" rx="2" ry="2" />
<text  x="186.46" y="543.5" ></text>
</g>
<g >
<title>task_work_run (7 samples, 0.15%)</title><rect x="654.9" y="565" width="1.7" height="15.0" fill="rgb(239,129,26)" rx="2" ry="2" />
<text  x="657.93" y="575.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (13 samples, 0.27%)</title><rect x="817.6" y="517" width="3.2" height="15.0" fill="rgb(223,227,19)" rx="2" ry="2" />
<text  x="820.63" y="527.5" ></text>
</g>
<g >
<title>cpuidle_enter (93 samples, 1.93%)</title><rect x="1162.1" y="885" width="22.8" height="15.0" fill="rgb(229,89,13)" rx="2" ry="2" />
<text  x="1165.11" y="895.5" >c..</text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1109.3" y="821" width="0.2" height="15.0" fill="rgb(233,36,23)" rx="2" ry="2" />
<text  x="1112.26" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.04%)</title><rect x="821.3" y="469" width="0.5" height="15.0" fill="rgb(249,84,7)" rx="2" ry="2" />
<text  x="824.30" y="479.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="810.0" y="709" width="0.3" height="15.0" fill="rgb(231,207,53)" rx="2" ry="2" />
<text  x="813.04" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (3,446 samples, 71.45%)</title><rect x="172.7" y="885" width="843.1" height="15.0" fill="rgb(210,152,12)" rx="2" ry="2" />
<text  x="175.70" y="895.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall</text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.02%)</title><rect x="108.1" y="917" width="0.3" height="15.0" fill="rgb(216,144,20)" rx="2" ry="2" />
<text  x="111.11" y="927.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (2 samples, 0.04%)</title><rect x="1165.8" y="661" width="0.5" height="15.0" fill="rgb(213,5,39)" rx="2" ry="2" />
<text  x="1168.78" y="671.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="1091.9" y="837" width="0.2" height="15.0" fill="rgb(209,150,20)" rx="2" ry="2" />
<text  x="1094.89" y="847.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="736.4" y="469" width="0.2" height="15.0" fill="rgb(249,189,0)" rx="2" ry="2" />
<text  x="739.40" y="479.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (2 samples, 0.04%)</title><rect x="744.5" y="389" width="0.5" height="15.0" fill="rgb(246,45,10)" rx="2" ry="2" />
<text  x="747.47" y="399.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (2 samples, 0.04%)</title><rect x="107.9" y="965" width="0.5" height="15.0" fill="rgb(211,65,26)" rx="2" ry="2" />
<text  x="110.86" y="975.5" ></text>
</g>
<g >
<title>add_transaction_credits (3 samples, 0.06%)</title><rect x="665.7" y="501" width="0.7" height="15.0" fill="rgb(228,85,1)" rx="2" ry="2" />
<text  x="668.69" y="511.5" ></text>
</g>
<g >
<title>std::io::error::Error::last_os_error (1 samples, 0.02%)</title><rect x="758.7" y="741" width="0.2" height="15.0" fill="rgb(240,215,25)" rx="2" ry="2" />
<text  x="761.66" y="751.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="776.8" y="421" width="0.2" height="15.0" fill="rgb(211,134,9)" rx="2" ry="2" />
<text  x="779.77" y="431.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.04%)</title><rect x="1114.2" y="805" width="0.4" height="15.0" fill="rgb(234,111,53)" rx="2" ry="2" />
<text  x="1117.16" y="815.5" ></text>
</g>
<g >
<title>ksys_write (293 samples, 6.08%)</title><rect x="659.1" y="725" width="71.7" height="15.0" fill="rgb(210,180,6)" rx="2" ry="2" />
<text  x="662.09" y="735.5" >ksys_write</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.19%)</title><rect x="100.3" y="901" width="2.2" height="15.0" fill="rgb(242,183,39)" rx="2" ry="2" />
<text  x="103.28" y="911.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="1017.5" y="805" width="0.3" height="15.0" fill="rgb(218,144,20)" rx="2" ry="2" />
<text  x="1020.51" y="815.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.02%)</title><rect x="1016.0" y="949" width="0.3" height="15.0" fill="rgb(213,79,31)" rx="2" ry="2" />
<text  x="1019.05" y="959.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="888.3" y="181" width="0.3" height="15.0" fill="rgb(216,168,16)" rx="2" ry="2" />
<text  x="891.33" y="191.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="1091.2" y="597" width="0.2" height="15.0" fill="rgb(228,98,11)" rx="2" ry="2" />
<text  x="1094.16" y="607.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="1091.9" y="821" width="0.2" height="15.0" fill="rgb(208,50,16)" rx="2" ry="2" />
<text  x="1094.89" y="831.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="774.8" y="437" width="0.3" height="15.0" fill="rgb(241,144,43)" rx="2" ry="2" />
<text  x="777.81" y="447.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="720.7" y="469" width="0.3" height="15.0" fill="rgb(245,9,41)" rx="2" ry="2" />
<text  x="723.74" y="479.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.06%)</title><rect x="35.0" y="645" width="0.7" height="15.0" fill="rgb(212,129,6)" rx="2" ry="2" />
<text  x="37.96" y="655.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="1090.7" y="533" width="0.2" height="15.0" fill="rgb(247,64,17)" rx="2" ry="2" />
<text  x="1093.67" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (2 samples, 0.04%)</title><rect x="1074.8" y="1013" width="0.5" height="15.0" fill="rgb(215,76,53)" rx="2" ry="2" />
<text  x="1077.76" y="1023.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="735.7" y="581" width="0.2" height="15.0" fill="rgb(244,12,16)" rx="2" ry="2" />
<text  x="738.66" y="591.5" ></text>
</g>
<g >
<title>ext4_rename (21 samples, 0.44%)</title><rect x="802.5" y="613" width="5.1" height="15.0" fill="rgb(223,124,53)" rx="2" ry="2" />
<text  x="805.46" y="623.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="862.9" y="133" width="0.2" height="15.0" fill="rgb(225,17,38)" rx="2" ry="2" />
<text  x="865.89" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="817.6" y="421" width="0.3" height="15.0" fill="rgb(218,161,34)" rx="2" ry="2" />
<text  x="820.63" y="431.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.02%)</title><rect x="108.6" y="629" width="0.2" height="15.0" fill="rgb(209,18,39)" rx="2" ry="2" />
<text  x="111.60" y="639.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="1090.9" y="501" width="0.3" height="15.0" fill="rgb(213,104,14)" rx="2" ry="2" />
<text  x="1093.91" y="511.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (80 samples, 1.66%)</title><rect x="981.5" y="421" width="19.6" height="15.0" fill="rgb(230,156,14)" rx="2" ry="2" />
<text  x="984.55" y="431.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.04%)</title><rect x="1168.7" y="741" width="0.5" height="15.0" fill="rgb(246,179,25)" rx="2" ry="2" />
<text  x="1171.71" y="751.5" ></text>
</g>
<g >
<title>rcu_gp_fqs_loop (9 samples, 0.19%)</title><rect x="1103.6" y="981" width="2.2" height="15.0" fill="rgb(241,161,24)" rx="2" ry="2" />
<text  x="1106.63" y="991.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.02%)</title><rect x="664.7" y="501" width="0.3" height="15.0" fill="rgb(209,34,22)" rx="2" ry="2" />
<text  x="667.71" y="511.5" ></text>
</g>
<g >
<title>activate_page (1 samples, 0.02%)</title><rect x="1092.1" y="757" width="0.3" height="15.0" fill="rgb(239,226,2)" rx="2" ry="2" />
<text  x="1095.14" y="767.5" ></text>
</g>
<g >
<title>process_vm_rw (2 samples, 0.04%)</title><rect x="1017.3" y="933" width="0.5" height="15.0" fill="rgb(237,24,11)" rx="2" ry="2" />
<text  x="1020.27" y="943.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="108.6" y="533" width="0.2" height="15.0" fill="rgb(240,143,46)" rx="2" ry="2" />
<text  x="111.60" y="543.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.04%)</title><rect x="946.8" y="389" width="0.5" height="15.0" fill="rgb(205,1,31)" rx="2" ry="2" />
<text  x="949.81" y="399.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (162 samples, 3.36%)</title><rect x="55.3" y="1013" width="39.6" height="15.0" fill="rgb(254,171,13)" rx="2" ry="2" />
<text  x="58.26" y="1023.5" >rin..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3 samples, 0.06%)</title><rect x="187.4" y="469" width="0.7" height="15.0" fill="rgb(212,98,0)" rx="2" ry="2" />
<text  x="190.38" y="479.5" ></text>
</g>
<g >
<title>__es_insert_extent (2 samples, 0.04%)</title><rect x="679.9" y="469" width="0.5" height="15.0" fill="rgb(215,201,21)" rx="2" ry="2" />
<text  x="682.88" y="479.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (1 samples, 0.02%)</title><rect x="757.9" y="661" width="0.3" height="15.0" fill="rgb(207,171,17)" rx="2" ry="2" />
<text  x="760.93" y="671.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1,626 samples, 33.71%)</title><rect x="256.1" y="869" width="397.8" height="15.0" fill="rgb(245,194,43)" rx="2" ry="2" />
<text  x="259.13" y="879.5" >rustposix::interface::pipe::EmulatedPipe::write_to_pipe</text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="749.9" y="453" width="0.2" height="15.0" fill="rgb(213,224,1)" rx="2" ry="2" />
<text  x="752.85" y="463.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (3 samples, 0.06%)</title><rect x="170.0" y="869" width="0.7" height="15.0" fill="rgb(206,173,19)" rx="2" ry="2" />
<text  x="173.01" y="879.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.02%)</title><rect x="690.2" y="405" width="0.2" height="15.0" fill="rgb(209,210,28)" rx="2" ry="2" />
<text  x="693.16" y="415.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.02%)</title><rect x="113.5" y="437" width="0.2" height="15.0" fill="rgb(241,39,13)" rx="2" ry="2" />
<text  x="116.49" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (10 samples, 0.21%)</title><rect x="833.0" y="261" width="2.5" height="15.0" fill="rgb(225,152,17)" rx="2" ry="2" />
<text  x="836.04" y="271.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::open (87 samples, 1.80%)</title><rect x="734.2" y="821" width="21.3" height="15.0" fill="rgb(218,207,20)" rx="2" ry="2" />
<text  x="737.20" y="831.5" >s..</text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="108.4" y="693" width="0.2" height="15.0" fill="rgb(210,88,3)" rx="2" ry="2" />
<text  x="111.35" y="703.5" ></text>
</g>
<g >
<title>vfs_write (339 samples, 7.03%)</title><rect x="173.2" y="725" width="82.9" height="15.0" fill="rgb(230,26,40)" rx="2" ry="2" />
<text  x="176.19" y="735.5" >vfs_write</text>
</g>
<g >
<title>destroy_inode (1 samples, 0.02%)</title><rect x="771.9" y="501" width="0.2" height="15.0" fill="rgb(212,125,38)" rx="2" ry="2" />
<text  x="774.87" y="511.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (9 samples, 0.19%)</title><rect x="1167.7" y="789" width="2.2" height="15.0" fill="rgb(234,62,27)" rx="2" ry="2" />
<text  x="1170.74" y="799.5" ></text>
</g>
<g >
<title>serde_json::de::from_str (1 samples, 0.02%)</title><rect x="1091.2" y="917" width="0.2" height="15.0" fill="rgb(245,93,39)" rx="2" ry="2" />
<text  x="1094.16" y="927.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="657.4" y="773" width="0.2" height="15.0" fill="rgb(206,193,5)" rx="2" ry="2" />
<text  x="660.37" y="783.5" ></text>
</g>
<g >
<title>fault_dirty_shared_page (2 samples, 0.04%)</title><rect x="104.7" y="741" width="0.5" height="15.0" fill="rgb(209,82,44)" rx="2" ry="2" />
<text  x="107.68" y="751.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="862.9" y="149" width="0.2" height="15.0" fill="rgb(232,147,26)" rx="2" ry="2" />
<text  x="865.89" y="159.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (2 samples, 0.04%)</title><rect x="1090.7" y="741" width="0.5" height="15.0" fill="rgb(232,38,38)" rx="2" ry="2" />
<text  x="1093.67" y="751.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 0.08%)</title><rect x="866.3" y="485" width="1.0" height="15.0" fill="rgb(220,224,25)" rx="2" ry="2" />
<text  x="869.31" y="495.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (1 samples, 0.02%)</title><rect x="1090.4" y="565" width="0.3" height="15.0" fill="rgb(229,204,20)" rx="2" ry="2" />
<text  x="1093.42" y="575.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (70 samples, 1.45%)</title><rect x="776.3" y="469" width="17.1" height="15.0" fill="rgb(229,30,49)" rx="2" ry="2" />
<text  x="779.28" y="479.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (2 samples, 0.04%)</title><rect x="702.9" y="517" width="0.5" height="15.0" fill="rgb(209,224,23)" rx="2" ry="2" />
<text  x="705.88" y="527.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (28 samples, 0.58%)</title><rect x="694.6" y="501" width="6.8" height="15.0" fill="rgb(206,172,16)" rx="2" ry="2" />
<text  x="697.56" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.19%)</title><rect x="854.6" y="149" width="2.2" height="15.0" fill="rgb(220,91,0)" rx="2" ry="2" />
<text  x="857.57" y="159.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (3 samples, 0.06%)</title><rect x="170.0" y="853" width="0.7" height="15.0" fill="rgb(244,219,12)" rx="2" ry="2" />
<text  x="173.01" y="863.5" ></text>
</g>
<g >
<title>NaClSysWaitpidDecoder (1 samples, 0.02%)</title><rect x="171.5" y="997" width="0.2" height="15.0" fill="rgb(248,102,16)" rx="2" ry="2" />
<text  x="174.48" y="1007.5" ></text>
</g>
<g >
<title>may_delete (1 samples, 0.02%)</title><rect x="808.1" y="629" width="0.2" height="15.0" fill="rgb(246,147,38)" rx="2" ry="2" />
<text  x="811.08" y="639.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (3 samples, 0.06%)</title><rect x="35.0" y="661" width="0.7" height="15.0" fill="rgb(229,0,37)" rx="2" ry="2" />
<text  x="37.96" y="671.5" ></text>
</g>
<g >
<title>unaccount_page_cache_page (3 samples, 0.06%)</title><rect x="115.4" y="469" width="0.8" height="15.0" fill="rgb(235,179,33)" rx="2" ry="2" />
<text  x="118.45" y="479.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (10 samples, 0.21%)</title><rect x="833.0" y="389" width="2.5" height="15.0" fill="rgb(221,197,40)" rx="2" ry="2" />
<text  x="836.04" y="399.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="1090.4" y="613" width="0.3" height="15.0" fill="rgb(253,131,3)" rx="2" ry="2" />
<text  x="1093.42" y="623.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (3 samples, 0.06%)</title><rect x="670.8" y="437" width="0.8" height="15.0" fill="rgb(229,14,6)" rx="2" ry="2" />
<text  x="673.83" y="447.5" ></text>
</g>
<g >
<title>dx_probe (4 samples, 0.08%)</title><rect x="803.9" y="549" width="1.0" height="15.0" fill="rgb(215,144,2)" rx="2" ry="2" />
<text  x="806.92" y="559.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (2 samples, 0.04%)</title><rect x="814.0" y="549" width="0.4" height="15.0" fill="rgb(220,70,39)" rx="2" ry="2" />
<text  x="816.96" y="559.5" ></text>
</g>
<g >
<title>__ext4_find_entry (3 samples, 0.06%)</title><rect x="796.3" y="565" width="0.8" height="15.0" fill="rgb(216,9,43)" rx="2" ry="2" />
<text  x="799.34" y="575.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="176.4" y="549" width="0.2" height="15.0" fill="rgb(249,2,21)" rx="2" ry="2" />
<text  x="179.37" y="559.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="35.9" y="805" width="0.3" height="15.0" fill="rgb(241,179,23)" rx="2" ry="2" />
<text  x="38.93" y="815.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (43 samples, 0.89%)</title><rect x="116.7" y="485" width="10.5" height="15.0" fill="rgb(208,52,7)" rx="2" ry="2" />
<text  x="119.67" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (23 samples, 0.48%)</title><rect x="1001.1" y="421" width="5.6" height="15.0" fill="rgb(224,104,3)" rx="2" ry="2" />
<text  x="1004.12" y="431.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (32 samples, 0.66%)</title><rect x="823.7" y="533" width="7.9" height="15.0" fill="rgb(223,116,11)" rx="2" ry="2" />
<text  x="826.74" y="543.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (15 samples, 0.31%)</title><rect x="938.2" y="453" width="3.7" height="15.0" fill="rgb(251,76,19)" rx="2" ry="2" />
<text  x="941.24" y="463.5" ></text>
</g>
<g >
<title>ext4_da_write_end (112 samples, 2.32%)</title><rect x="220.7" y="581" width="27.4" height="15.0" fill="rgb(242,120,38)" rx="2" ry="2" />
<text  x="223.65" y="591.5" >e..</text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="35.7" y="869" width="0.2" height="15.0" fill="rgb(213,144,2)" rx="2" ry="2" />
<text  x="38.69" y="879.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.02%)</title><rect x="794.1" y="645" width="0.3" height="15.0" fill="rgb(245,114,23)" rx="2" ry="2" />
<text  x="797.14" y="655.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (1 samples, 0.02%)</title><rect x="171.5" y="933" width="0.2" height="15.0" fill="rgb(252,217,7)" rx="2" ry="2" />
<text  x="174.48" y="943.5" ></text>
</g>
<g >
<title>destroy_inode (1 samples, 0.02%)</title><rect x="1091.9" y="901" width="0.2" height="15.0" fill="rgb(214,45,51)" rx="2" ry="2" />
<text  x="1094.89" y="911.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (1 samples, 0.02%)</title><rect x="732.2" y="661" width="0.3" height="15.0" fill="rgb(246,94,0)" rx="2" ry="2" />
<text  x="735.24" y="671.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.02%)</title><rect x="888.3" y="85" width="0.3" height="15.0" fill="rgb(252,52,27)" rx="2" ry="2" />
<text  x="891.33" y="95.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.02%)</title><rect x="658.8" y="805" width="0.3" height="15.0" fill="rgb(249,76,9)" rx="2" ry="2" />
<text  x="661.84" y="815.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (4 samples, 0.08%)</title><rect x="108.6" y="885" width="1.0" height="15.0" fill="rgb(244,38,1)" rx="2" ry="2" />
<text  x="111.60" y="895.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (2 samples, 0.04%)</title><rect x="686.0" y="469" width="0.5" height="15.0" fill="rgb(223,55,10)" rx="2" ry="2" />
<text  x="689.00" y="479.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="108.6" y="565" width="0.2" height="15.0" fill="rgb(215,145,46)" rx="2" ry="2" />
<text  x="111.60" y="575.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2 samples, 0.04%)</title><rect x="1115.6" y="725" width="0.5" height="15.0" fill="rgb(221,65,27)" rx="2" ry="2" />
<text  x="1118.62" y="735.5" ></text>
</g>
<g >
<title>ion (21 samples, 0.44%)</title><rect x="30.6" y="901" width="5.1" height="15.0" fill="rgb(237,144,34)" rx="2" ry="2" />
<text  x="33.55" y="911.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.02%)</title><rect x="756.5" y="613" width="0.2" height="15.0" fill="rgb(247,59,42)" rx="2" ry="2" />
<text  x="759.46" y="623.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.02%)</title><rect x="1090.4" y="693" width="0.3" height="15.0" fill="rgb(252,108,30)" rx="2" ry="2" />
<text  x="1093.42" y="703.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (1 samples, 0.02%)</title><rect x="108.6" y="869" width="0.2" height="15.0" fill="rgb(224,145,12)" rx="2" ry="2" />
<text  x="111.60" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (13 samples, 0.27%)</title><rect x="922.8" y="277" width="3.2" height="15.0" fill="rgb(205,25,46)" rx="2" ry="2" />
<text  x="925.83" y="287.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (3 samples, 0.06%)</title><rect x="108.8" y="661" width="0.8" height="15.0" fill="rgb(221,106,37)" rx="2" ry="2" />
<text  x="111.84" y="671.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (11 samples, 0.23%)</title><rect x="716.8" y="453" width="2.7" height="15.0" fill="rgb(251,44,49)" rx="2" ry="2" />
<text  x="719.83" y="463.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="835.5" y="405" width="0.2" height="15.0" fill="rgb(244,124,0)" rx="2" ry="2" />
<text  x="838.49" y="415.5" ></text>
</g>
<g >
<title>pagecache_get_page (5 samples, 0.10%)</title><rect x="151.7" y="581" width="1.2" height="15.0" fill="rgb(236,63,34)" rx="2" ry="2" />
<text  x="154.66" y="591.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (23 samples, 0.48%)</title><rect x="1001.1" y="469" width="5.6" height="15.0" fill="rgb(215,39,36)" rx="2" ry="2" />
<text  x="1004.12" y="479.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="762.8" y="677" width="0.3" height="15.0" fill="rgb(227,37,2)" rx="2" ry="2" />
<text  x="765.82" y="687.5" ></text>
</g>
<g >
<title>napi_complete_done (4 samples, 0.08%)</title><rect x="1112.9" y="773" width="1.0" height="15.0" fill="rgb(238,208,53)" rx="2" ry="2" />
<text  x="1115.93" y="783.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="109.1" y="389" width="0.2" height="15.0" fill="rgb(250,221,37)" rx="2" ry="2" />
<text  x="112.09" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.12%)</title><rect x="1008.0" y="565" width="1.4" height="15.0" fill="rgb(220,81,38)" rx="2" ry="2" />
<text  x="1010.97" y="575.5" ></text>
</g>
<g >
<title>ext4_delete_entry (4 samples, 0.08%)</title><rect x="805.9" y="581" width="1.0" height="15.0" fill="rgb(236,212,23)" rx="2" ry="2" />
<text  x="808.88" y="591.5" ></text>
</g>
<g >
<title>get_signal (4 samples, 0.08%)</title><rect x="1092.1" y="933" width="1.0" height="15.0" fill="rgb(212,2,25)" rx="2" ry="2" />
<text  x="1095.14" y="943.5" ></text>
</g>
<g >
<title>iput (96 samples, 1.99%)</title><rect x="770.2" y="725" width="23.4" height="15.0" fill="rgb(212,47,26)" rx="2" ry="2" />
<text  x="773.16" y="735.5" >i..</text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.02%)</title><rect x="1017.0" y="853" width="0.3" height="15.0" fill="rgb(214,117,42)" rx="2" ry="2" />
<text  x="1020.02" y="863.5" ></text>
</g>
<g >
<title>unaccount_page_cache_page (1 samples, 0.02%)</title><rect x="781.4" y="437" width="0.3" height="15.0" fill="rgb(207,192,38)" rx="2" ry="2" />
<text  x="784.42" y="447.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.02%)</title><rect x="752.3" y="421" width="0.2" height="15.0" fill="rgb(252,81,8)" rx="2" ry="2" />
<text  x="755.30" y="431.5" ></text>
</g>
<g >
<title>ext4_getblk (1 samples, 0.02%)</title><rect x="748.4" y="405" width="0.2" height="15.0" fill="rgb(230,150,9)" rx="2" ry="2" />
<text  x="751.39" y="415.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="247.1" y="437" width="0.2" height="15.0" fill="rgb(252,53,40)" rx="2" ry="2" />
<text  x="250.08" y="447.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="109.1" y="405" width="0.2" height="15.0" fill="rgb(209,22,52)" rx="2" ry="2" />
<text  x="112.09" y="415.5" ></text>
</g>
<g >
<title>down_write (1 samples, 0.02%)</title><rect x="807.8" y="613" width="0.3" height="15.0" fill="rgb(252,90,45)" rx="2" ry="2" />
<text  x="810.84" y="623.5" ></text>
</g>
<g >
<title>lind_write (3,448 samples, 71.49%)</title><rect x="172.5" y="933" width="843.5" height="15.0" fill="rgb(225,92,26)" rx="2" ry="2" />
<text  x="175.45" y="943.5" >lind_write</text>
</g>
<g >
<title>lru_cache_add (13 samples, 0.27%)</title><rect x="690.4" y="501" width="3.2" height="15.0" fill="rgb(253,9,21)" rx="2" ry="2" />
<text  x="693.40" y="511.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.70%)</title><rect x="907.9" y="405" width="8.3" height="15.0" fill="rgb(220,170,28)" rx="2" ry="2" />
<text  x="910.91" y="415.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1166.3" y="725" width="0.2" height="15.0" fill="rgb(225,219,39)" rx="2" ry="2" />
<text  x="1169.27" y="735.5" ></text>
</g>
<g >
<title>dentry_free (1 samples, 0.02%)</title><rect x="768.4" y="677" width="0.3" height="15.0" fill="rgb(208,111,43)" rx="2" ry="2" />
<text  x="771.45" y="687.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (5 samples, 0.10%)</title><rect x="840.1" y="261" width="1.3" height="15.0" fill="rgb(246,134,12)" rx="2" ry="2" />
<text  x="843.13" y="271.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (827 samples, 17.15%)</title><rect x="809.6" y="853" width="202.3" height="15.0" fill="rgb(229,143,27)" rx="2" ry="2" />
<text  x="812.55" y="863.5" >serde_json::ser::to_string</text>
</g>
<g >
<title>do_iter_read (85 samples, 1.76%)</title><rect x="132.1" y="661" width="20.8" height="15.0" fill="rgb(245,12,9)" rx="2" ry="2" />
<text  x="135.09" y="671.5" ></text>
</g>
<g >
<title>__slab_alloc (4 samples, 0.08%)</title><rect x="185.4" y="485" width="1.0" height="15.0" fill="rgb(237,51,0)" rx="2" ry="2" />
<text  x="188.42" y="495.5" ></text>
</g>
<g >
<title>__libc_write (294 samples, 6.10%)</title><rect x="659.1" y="789" width="71.9" height="15.0" fill="rgb(238,86,32)" rx="2" ry="2" />
<text  x="662.09" y="799.5" >__libc_w..</text>
</g>
<g >
<title>xas_load (2 samples, 0.04%)</title><rect x="152.4" y="549" width="0.5" height="15.0" fill="rgb(221,228,29)" rx="2" ry="2" />
<text  x="155.39" y="559.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (8 samples, 0.17%)</title><rect x="764.8" y="645" width="1.9" height="15.0" fill="rgb(228,225,4)" rx="2" ry="2" />
<text  x="767.78" y="655.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (1 samples, 0.02%)</title><rect x="35.7" y="677" width="0.2" height="15.0" fill="rgb(230,138,15)" rx="2" ry="2" />
<text  x="38.69" y="687.5" ></text>
</g>
<g >
<title>ext4_has_free_clusters (2 samples, 0.04%)</title><rect x="679.1" y="453" width="0.5" height="15.0" fill="rgb(248,91,20)" rx="2" ry="2" />
<text  x="682.15" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.21%)</title><rect x="833.0" y="341" width="2.5" height="15.0" fill="rgb(235,12,46)" rx="2" ry="2" />
<text  x="836.04" y="351.5" ></text>
</g>
<g >
<title>security_inode_init_security (1 samples, 0.02%)</title><rect x="745.2" y="453" width="0.3" height="15.0" fill="rgb(244,196,34)" rx="2" ry="2" />
<text  x="748.21" y="463.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="31.0" y="661" width="0.3" height="15.0" fill="rgb(210,211,25)" rx="2" ry="2" />
<text  x="34.04" y="671.5" ></text>
</g>
<g >
<title>refill_obj_stock (7 samples, 0.15%)</title><rect x="790.7" y="293" width="1.7" height="15.0" fill="rgb(250,16,3)" rx="2" ry="2" />
<text  x="793.71" y="303.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="865.3" y="469" width="0.3" height="15.0" fill="rgb(241,98,21)" rx="2" ry="2" />
<text  x="868.33" y="479.5" ></text>
</g>
<g >
<title>__execvpe_common (1 samples, 0.02%)</title><rect x="10.2" y="965" width="0.3" height="15.0" fill="rgb(240,165,45)" rx="2" ry="2" />
<text  x="13.24" y="975.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.06%)</title><rect x="108.8" y="709" width="0.8" height="15.0" fill="rgb(242,218,2)" rx="2" ry="2" />
<text  x="111.84" y="719.5" ></text>
</g>
<g >
<title>vfs_unlink (1 samples, 0.02%)</title><rect x="1090.2" y="661" width="0.2" height="15.0" fill="rgb(245,156,54)" rx="2" ry="2" />
<text  x="1093.18" y="671.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="802.9" y="581" width="0.3" height="15.0" fill="rgb(236,137,0)" rx="2" ry="2" />
<text  x="805.95" y="591.5" ></text>
</g>
<g >
<title>PageHuge (1 samples, 0.02%)</title><rect x="682.1" y="501" width="0.2" height="15.0" fill="rgb(232,216,54)" rx="2" ry="2" />
<text  x="685.08" y="511.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (3 samples, 0.06%)</title><rect x="741.8" y="453" width="0.7" height="15.0" fill="rgb(241,112,33)" rx="2" ry="2" />
<text  x="744.78" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.08%)</title><rect x="820.8" y="549" width="1.0" height="15.0" fill="rgb(241,182,16)" rx="2" ry="2" />
<text  x="823.81" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.06%)</title><rect x="857.0" y="309" width="0.8" height="15.0" fill="rgb(246,66,9)" rx="2" ry="2" />
<text  x="860.02" y="319.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (1 samples, 0.02%)</title><rect x="33.0" y="581" width="0.2" height="15.0" fill="rgb(249,114,3)" rx="2" ry="2" />
<text  x="36.00" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::close (3 samples, 0.06%)</title><rect x="657.4" y="853" width="0.7" height="15.0" fill="rgb(217,66,9)" rx="2" ry="2" />
<text  x="660.37" y="863.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (15 samples, 0.31%)</title><rect x="103.9" y="965" width="3.7" height="15.0" fill="rgb(239,64,19)" rx="2" ry="2" />
<text  x="106.95" y="975.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="109.1" y="517" width="0.2" height="15.0" fill="rgb(248,228,1)" rx="2" ry="2" />
<text  x="112.09" y="527.5" ></text>
</g>
<g >
<title>kernel_poison_pages (1 samples, 0.02%)</title><rect x="112.5" y="437" width="0.3" height="15.0" fill="rgb(210,98,50)" rx="2" ry="2" />
<text  x="115.51" y="447.5" ></text>
</g>
<g >
<title>_local_bh_enable (1 samples, 0.02%)</title><rect x="1164.1" y="821" width="0.2" height="15.0" fill="rgb(242,45,28)" rx="2" ry="2" />
<text  x="1167.07" y="831.5" ></text>
</g>
<g >
<title>__libc_write (21 samples, 0.44%)</title><rect x="30.6" y="885" width="5.1" height="15.0" fill="rgb(232,164,28)" rx="2" ry="2" />
<text  x="33.55" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (294 samples, 6.10%)</title><rect x="659.1" y="757" width="71.9" height="15.0" fill="rgb(219,162,37)" rx="2" ry="2" />
<text  x="662.09" y="767.5" >do_sysca..</text>
</g>
<g >
<title>ext4_es_insert_extent (3 samples, 0.06%)</title><rect x="677.4" y="485" width="0.8" height="15.0" fill="rgb(237,168,42)" rx="2" ry="2" />
<text  x="680.44" y="495.5" ></text>
</g>
<g >
<title>__ext4_link (1 samples, 0.02%)</title><rect x="797.8" y="629" width="0.3" height="15.0" fill="rgb(239,83,40)" rx="2" ry="2" />
<text  x="800.81" y="639.5" ></text>
</g>
<g >
<title>mem_cgroup_track_foreign_dirty_slowpath (2 samples, 0.04%)</title><rect x="711.7" y="469" width="0.5" height="15.0" fill="rgb(215,220,44)" rx="2" ry="2" />
<text  x="714.69" y="479.5" ></text>
</g>
<g >
<title>dispatcher (5 samples, 0.10%)</title><rect x="108.4" y="949" width="1.2" height="15.0" fill="rgb(209,188,43)" rx="2" ry="2" />
<text  x="111.35" y="959.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.04%)</title><rect x="1090.7" y="677" width="0.5" height="15.0" fill="rgb(235,193,8)" rx="2" ry="2" />
<text  x="1093.67" y="687.5" ></text>
</g>
<g >
<title>generic_permission (1 samples, 0.02%)</title><rect x="808.1" y="597" width="0.2" height="15.0" fill="rgb(205,145,4)" rx="2" ry="2" />
<text  x="811.08" y="607.5" ></text>
</g>
<g >
<title>get_page_from_freelist (25 samples, 0.52%)</title><rect x="695.3" y="485" width="6.1" height="15.0" fill="rgb(240,115,47)" rx="2" ry="2" />
<text  x="698.30" y="495.5" ></text>
</g>
<g >
<title>crypto_shash_update (4 samples, 0.08%)</title><rect x="752.5" y="437" width="1.0" height="15.0" fill="rgb(245,83,42)" rx="2" ry="2" />
<text  x="755.55" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (3 samples, 0.06%)</title><rect x="170.0" y="837" width="0.7" height="15.0" fill="rgb(212,145,25)" rx="2" ry="2" />
<text  x="173.01" y="847.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="742.3" y="421" width="0.2" height="15.0" fill="rgb(207,82,31)" rx="2" ry="2" />
<text  x="745.27" y="431.5" ></text>
</g>
<g >
<title>apparmor_capable (1 samples, 0.02%)</title><rect x="801.2" y="549" width="0.3" height="15.0" fill="rgb(217,9,12)" rx="2" ry="2" />
<text  x="804.23" y="559.5" ></text>
</g>
<g >
<title>__activate_page.part.0 (1 samples, 0.02%)</title><rect x="1092.1" y="709" width="0.3" height="15.0" fill="rgb(254,142,1)" rx="2" ry="2" />
<text  x="1095.14" y="719.5" ></text>
</g>
<g >
<title>__ext4_new_inode (20 samples, 0.41%)</title><rect x="740.6" y="469" width="4.9" height="15.0" fill="rgb(218,73,44)" rx="2" ry="2" />
<text  x="743.56" y="479.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (2 samples, 0.04%)</title><rect x="803.9" y="533" width="0.5" height="15.0" fill="rgb(245,113,38)" rx="2" ry="2" />
<text  x="806.92" y="543.5" ></text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.02%)</title><rect x="687.5" y="485" width="0.2" height="15.0" fill="rgb(205,29,46)" rx="2" ry="2" />
<text  x="690.47" y="495.5" ></text>
</g>
<g >
<title>std::ffi::c_str::CString::_new (1 samples, 0.02%)</title><rect x="758.4" y="741" width="0.3" height="15.0" fill="rgb(224,82,25)" rx="2" ry="2" />
<text  x="761.42" y="751.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="810.8" y="581" width="0.2" height="15.0" fill="rgb(220,120,30)" rx="2" ry="2" />
<text  x="813.78" y="591.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.02%)</title><rect x="1100.9" y="965" width="0.3" height="15.0" fill="rgb(219,160,49)" rx="2" ry="2" />
<text  x="1103.94" y="975.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="1089.9" y="933" width="0.3" height="15.0" fill="rgb(242,5,38)" rx="2" ry="2" />
<text  x="1092.93" y="943.5" ></text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.02%)</title><rect x="35.9" y="901" width="0.3" height="15.0" fill="rgb(220,151,35)" rx="2" ry="2" />
<text  x="38.93" y="911.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="36.4" y="965" width="0.3" height="15.0" fill="rgb(254,65,33)" rx="2" ry="2" />
<text  x="39.42" y="975.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.02%)</title><rect x="794.1" y="693" width="0.3" height="15.0" fill="rgb(235,116,24)" rx="2" ry="2" />
<text  x="797.14" y="703.5" ></text>
</g>
<g >
<title>[sel_ldr] (1 samples, 0.02%)</title><rect x="1016.8" y="1013" width="0.2" height="15.0" fill="rgb(213,39,35)" rx="2" ry="2" />
<text  x="1019.78" y="1023.5" ></text>
</g>
<g >
<title>__wcsmbs_load_conv (1 samples, 0.02%)</title><rect x="10.0" y="949" width="0.2" height="15.0" fill="rgb(216,196,45)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.04%)</title><rect x="1005.3" y="357" width="0.5" height="15.0" fill="rgb(226,85,33)" rx="2" ry="2" />
<text  x="1008.28" y="367.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1113.9" y="805" width="0.3" height="15.0" fill="rgb(241,142,16)" rx="2" ry="2" />
<text  x="1116.91" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.06%)</title><rect x="864.1" y="405" width="0.7" height="15.0" fill="rgb(206,42,34)" rx="2" ry="2" />
<text  x="867.11" y="415.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (1 samples, 0.02%)</title><rect x="202.8" y="501" width="0.2" height="15.0" fill="rgb(217,17,32)" rx="2" ry="2" />
<text  x="205.79" y="511.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="762.8" y="821" width="0.3" height="15.0" fill="rgb(252,26,3)" rx="2" ry="2" />
<text  x="765.82" y="831.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::file_attr (9 samples, 0.19%)</title><rect x="732.0" y="805" width="2.2" height="15.0" fill="rgb(213,104,32)" rx="2" ry="2" />
<text  x="734.99" y="815.5" ></text>
</g>
<g >
<title>do_group_exit (4 samples, 0.08%)</title><rect x="1092.1" y="917" width="1.0" height="15.0" fill="rgb(244,84,27)" rx="2" ry="2" />
<text  x="1095.14" y="927.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="1091.2" y="501" width="0.2" height="15.0" fill="rgb(233,105,10)" rx="2" ry="2" />
<text  x="1094.16" y="511.5" ></text>
</g>
<g >
<title>NaClSimpleServiceAcceptAndSpawnHandler (1 samples, 0.02%)</title><rect x="1089.9" y="965" width="0.3" height="15.0" fill="rgb(227,220,7)" rx="2" ry="2" />
<text  x="1092.93" y="975.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.17%)</title><rect x="1009.4" y="517" width="2.0" height="15.0" fill="rgb(236,116,27)" rx="2" ry="2" />
<text  x="1012.44" y="527.5" ></text>
</g>
<g >
<title>ext4_get_dummy_policy (1 samples, 0.02%)</title><rect x="744.2" y="437" width="0.3" height="15.0" fill="rgb(241,76,3)" rx="2" ry="2" />
<text  x="747.23" y="447.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (2 samples, 0.04%)</title><rect x="799.5" y="517" width="0.5" height="15.0" fill="rgb(226,122,13)" rx="2" ry="2" />
<text  x="802.52" y="527.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.02%)</title><rect x="1091.4" y="949" width="0.2" height="15.0" fill="rgb(225,149,1)" rx="2" ry="2" />
<text  x="1094.40" y="959.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampoline (1 samples, 0.02%)</title><rect x="109.6" y="885" width="0.2" height="15.0" fill="rgb(254,8,18)" rx="2" ry="2" />
<text  x="112.58" y="895.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="1104.4" y="917" width="0.2" height="15.0" fill="rgb(218,159,17)" rx="2" ry="2" />
<text  x="1107.37" y="927.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="1159.7" y="885" width="0.2" height="15.0" fill="rgb(218,213,46)" rx="2" ry="2" />
<text  x="1162.66" y="895.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="1090.9" y="485" width="0.3" height="15.0" fill="rgb(209,150,32)" rx="2" ry="2" />
<text  x="1093.91" y="495.5" ></text>
</g>
<g >
<title>ext4_rename2 (16 samples, 0.33%)</title><rect x="749.6" y="501" width="3.9" height="15.0" fill="rgb(252,134,37)" rx="2" ry="2" />
<text  x="752.61" y="511.5" ></text>
</g>
<g >
<title>udp_unicast_rcv_skb (1 samples, 0.02%)</title><rect x="1112.9" y="565" width="0.3" height="15.0" fill="rgb(231,181,11)" rx="2" ry="2" />
<text  x="1115.93" y="575.5" ></text>
</g>
<g >
<title>swapper (395 samples, 8.19%)</title><rect x="1093.4" y="1045" width="96.6" height="15.0" fill="rgb(211,42,23)" rx="2" ry="2" />
<text  x="1096.36" y="1055.5" >swapper</text>
</g>
<g >
<title>schedule_idle (8 samples, 0.17%)</title><rect x="1159.2" y="965" width="1.9" height="15.0" fill="rgb(254,222,11)" rx="2" ry="2" />
<text  x="1162.17" y="975.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="121.1" y="389" width="0.2" height="15.0" fill="rgb(213,58,1)" rx="2" ry="2" />
<text  x="124.08" y="399.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (3 samples, 0.06%)</title><rect x="108.8" y="869" width="0.8" height="15.0" fill="rgb(254,154,31)" rx="2" ry="2" />
<text  x="111.84" y="879.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="35.7" y="853" width="0.2" height="15.0" fill="rgb(228,14,31)" rx="2" ry="2" />
<text  x="38.69" y="863.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1091.2" y="549" width="0.2" height="15.0" fill="rgb(217,53,14)" rx="2" ry="2" />
<text  x="1094.16" y="559.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="793.9" y="693" width="0.2" height="15.0" fill="rgb(213,162,34)" rx="2" ry="2" />
<text  x="796.89" y="703.5" ></text>
</g>
<g >
<title>psi_flags_change (1 samples, 0.02%)</title><rect x="1169.7" y="613" width="0.2" height="15.0" fill="rgb(254,221,29)" rx="2" ry="2" />
<text  x="1172.69" y="623.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.02%)</title><rect x="1100.9" y="981" width="0.3" height="15.0" fill="rgb(217,68,40)" rx="2" ry="2" />
<text  x="1103.94" y="991.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (2 samples, 0.04%)</title><rect x="1090.7" y="725" width="0.5" height="15.0" fill="rgb(210,210,36)" rx="2" ry="2" />
<text  x="1093.67" y="735.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.02%)</title><rect x="810.3" y="661" width="0.2" height="15.0" fill="rgb(250,45,51)" rx="2" ry="2" />
<text  x="813.29" y="671.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 1.31%)</title><rect x="14.6" y="677" width="15.5" height="15.0" fill="rgb(211,33,39)" rx="2" ry="2" />
<text  x="17.65" y="687.5" ></text>
</g>
<g >
<title>statx (8 samples, 0.17%)</title><rect x="732.2" y="757" width="2.0" height="15.0" fill="rgb(231,42,35)" rx="2" ry="2" />
<text  x="735.24" y="767.5" ></text>
</g>
<g >
<title>__libc_open64 (87 samples, 1.80%)</title><rect x="734.2" y="725" width="21.3" height="15.0" fill="rgb(216,50,27)" rx="2" ry="2" />
<text  x="737.20" y="735.5" >_..</text>
</g>
<g >
<title>ext4_handle_dirty_dirblock (3 samples, 0.06%)</title><rect x="800.3" y="565" width="0.7" height="15.0" fill="rgb(250,2,15)" rx="2" ry="2" />
<text  x="803.26" y="575.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="798.3" y="565" width="0.2" height="15.0" fill="rgb(217,218,9)" rx="2" ry="2" />
<text  x="801.30" y="575.5" ></text>
</g>
<g >
<title>security_capable (1 samples, 0.02%)</title><rect x="801.2" y="565" width="0.3" height="15.0" fill="rgb(220,79,32)" rx="2" ry="2" />
<text  x="804.23" y="575.5" ></text>
</g>
<g >
<title>xas_start (2 samples, 0.04%)</title><rect x="115.0" y="437" width="0.4" height="15.0" fill="rgb(215,206,9)" rx="2" ry="2" />
<text  x="117.96" y="447.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="109.1" y="549" width="0.2" height="15.0" fill="rgb(209,138,23)" rx="2" ry="2" />
<text  x="112.09" y="559.5" ></text>
</g>
<g >
<title>block_invalidatepage (34 samples, 0.70%)</title><rect x="118.9" y="453" width="8.3" height="15.0" fill="rgb(213,114,11)" rx="2" ry="2" />
<text  x="121.87" y="463.5" ></text>
</g>
<g >
<title>ext4_clear_inode (4 samples, 0.08%)</title><rect x="774.1" y="469" width="1.0" height="15.0" fill="rgb(233,197,21)" rx="2" ry="2" />
<text  x="777.08" y="479.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="752.3" y="357" width="0.2" height="15.0" fill="rgb(244,160,21)" rx="2" ry="2" />
<text  x="755.30" y="367.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.02%)</title><rect x="735.7" y="565" width="0.2" height="15.0" fill="rgb(214,143,18)" rx="2" ry="2" />
<text  x="738.66" y="575.5" ></text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.02%)</title><rect x="130.6" y="629" width="0.3" height="15.0" fill="rgb(239,37,3)" rx="2" ry="2" />
<text  x="133.62" y="639.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (90 samples, 1.87%)</title><rect x="72.9" y="965" width="22.0" height="15.0" fill="rgb(237,213,16)" rx="2" ry="2" />
<text  x="75.88" y="975.5" >r..</text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.02%)</title><rect x="246.8" y="421" width="0.3" height="15.0" fill="rgb(215,118,8)" rx="2" ry="2" />
<text  x="249.83" y="431.5" ></text>
</g>
<g >
<title>alloc_inode (2 samples, 0.04%)</title><rect x="744.5" y="437" width="0.5" height="15.0" fill="rgb(232,218,17)" rx="2" ry="2" />
<text  x="747.47" y="447.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (115 samples, 2.38%)</title><rect x="836.0" y="453" width="28.1" height="15.0" fill="rgb(223,5,28)" rx="2" ry="2" />
<text  x="838.98" y="463.5" >c..</text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="862.9" y="53" width="0.2" height="15.0" fill="rgb(222,218,13)" rx="2" ry="2" />
<text  x="865.89" y="63.5" ></text>
</g>
<g >
<title>uncharge_batch (1 samples, 0.02%)</title><rect x="779.0" y="405" width="0.2" height="15.0" fill="rgb(251,1,15)" rx="2" ry="2" />
<text  x="781.97" y="415.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1115.1" y="773" width="0.3" height="15.0" fill="rgb(250,67,23)" rx="2" ry="2" />
<text  x="1118.13" y="783.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="1092.1" y="741" width="0.3" height="15.0" fill="rgb(245,35,22)" rx="2" ry="2" />
<text  x="1095.14" y="751.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="723.2" y="565" width="0.2" height="15.0" fill="rgb(220,55,37)" rx="2" ry="2" />
<text  x="726.19" y="575.5" ></text>
</g>
<g >
<title>page_poisoning_enabled (1 samples, 0.02%)</title><rect x="209.9" y="485" width="0.2" height="15.0" fill="rgb(225,28,2)" rx="2" ry="2" />
<text  x="212.89" y="495.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.02%)</title><rect x="764.3" y="693" width="0.2" height="15.0" fill="rgb(243,30,20)" rx="2" ry="2" />
<text  x="767.29" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.10%)</title><rect x="1091.9" y="1013" width="1.2" height="15.0" fill="rgb(250,221,43)" rx="2" ry="2" />
<text  x="1094.89" y="1023.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="1158.9" y="965" width="0.3" height="15.0" fill="rgb(205,82,34)" rx="2" ry="2" />
<text  x="1161.93" y="975.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.27%)</title><rect x="922.8" y="293" width="3.2" height="15.0" fill="rgb(228,225,32)" rx="2" ry="2" />
<text  x="925.83" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.06%)</title><rect x="857.0" y="293" width="0.8" height="15.0" fill="rgb(231,139,28)" rx="2" ry="2" />
<text  x="860.02" y="303.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (8 samples, 0.17%)</title><rect x="1013.6" y="709" width="2.0" height="15.0" fill="rgb(247,130,48)" rx="2" ry="2" />
<text  x="1016.60" y="719.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (1 samples, 0.02%)</title><rect x="793.4" y="661" width="0.2" height="15.0" fill="rgb(207,80,24)" rx="2" ry="2" />
<text  x="796.40" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (97 samples, 2.01%)</title><rect x="1018.2" y="1013" width="23.8" height="15.0" fill="rgb(226,43,24)" rx="2" ry="2" />
<text  x="1021.25" y="1023.5" >_..</text>
</g>
<g >
<title>NaClSysCloseDecoder (1 samples, 0.02%)</title><rect x="103.7" y="997" width="0.2" height="15.0" fill="rgb(244,58,17)" rx="2" ry="2" />
<text  x="106.71" y="1007.5" ></text>
</g>
<g >
<title>ovl_lookup_single (2 samples, 0.04%)</title><rect x="761.1" y="533" width="0.5" height="15.0" fill="rgb(216,166,36)" rx="2" ry="2" />
<text  x="764.11" y="543.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (244 samples, 5.06%)</title><rect x="878.1" y="453" width="59.7" height="15.0" fill="rgb(230,11,21)" rx="2" ry="2" />
<text  x="881.06" y="463.5" >&lt;&amp;mut ..</text>
</g>
<g >
<title>realpath_stk (19 samples, 0.39%)</title><rect x="763.1" y="789" width="4.6" height="15.0" fill="rgb(222,148,48)" rx="2" ry="2" />
<text  x="766.07" y="799.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.02%)</title><rect x="658.8" y="789" width="0.3" height="15.0" fill="rgb(219,105,11)" rx="2" ry="2" />
<text  x="661.84" y="799.5" ></text>
</g>
<g >
<title>kernel_fpu_begin (1 samples, 0.02%)</title><rect x="806.1" y="517" width="0.3" height="15.0" fill="rgb(220,137,44)" rx="2" ry="2" />
<text  x="809.13" y="527.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (26 samples, 0.54%)</title><rect x="235.3" y="485" width="6.4" height="15.0" fill="rgb(226,185,52)" rx="2" ry="2" />
<text  x="238.33" y="495.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (48 samples, 1.00%)</title><rect x="926.0" y="309" width="11.8" height="15.0" fill="rgb(246,128,45)" rx="2" ry="2" />
<text  x="929.01" y="319.5" ></text>
</g>
<g >
<title>NaClSysExecve (2 samples, 0.04%)</title><rect x="107.9" y="981" width="0.5" height="15.0" fill="rgb(250,212,9)" rx="2" ry="2" />
<text  x="110.86" y="991.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (2 samples, 0.04%)</title><rect x="1109.3" y="869" width="0.5" height="15.0" fill="rgb(241,195,13)" rx="2" ry="2" />
<text  x="1112.26" y="879.5" ></text>
</g>
<g >
<title>__GI___pthread_mutexattr_settype (1 samples, 0.02%)</title><rect x="761.8" y="773" width="0.3" height="15.0" fill="rgb(211,78,37)" rx="2" ry="2" />
<text  x="764.84" y="783.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="110.6" y="453" width="0.2" height="15.0" fill="rgb(253,9,49)" rx="2" ry="2" />
<text  x="113.56" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2 samples, 0.04%)</title><rect x="156.8" y="821" width="0.5" height="15.0" fill="rgb(206,182,47)" rx="2" ry="2" />
<text  x="159.80" y="831.5" ></text>
</g>
<g >
<title>account_page_dirtied (5 samples, 0.10%)</title><rect x="711.0" y="485" width="1.2" height="15.0" fill="rgb(231,36,32)" rx="2" ry="2" />
<text  x="713.95" y="495.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.04%)</title><rect x="1090.7" y="613" width="0.5" height="15.0" fill="rgb(250,120,25)" rx="2" ry="2" />
<text  x="1093.67" y="623.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (11 samples, 0.23%)</title><rect x="1103.4" y="997" width="2.7" height="15.0" fill="rgb(254,43,26)" rx="2" ry="2" />
<text  x="1106.39" y="1007.5" ></text>
</g>
<g >
<title>may_o_create (1 samples, 0.02%)</title><rect x="738.4" y="581" width="0.2" height="15.0" fill="rgb(222,129,26)" rx="2" ry="2" />
<text  x="741.36" y="591.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="1112.9" y="469" width="0.3" height="15.0" fill="rgb(238,85,3)" rx="2" ry="2" />
<text  x="1115.93" y="479.5" ></text>
</g>
<g >
<title>generic_fillattr (1 samples, 0.02%)</title><rect x="734.0" y="581" width="0.2" height="15.0" fill="rgb(229,102,13)" rx="2" ry="2" />
<text  x="736.95" y="591.5" ></text>
</g>
<g >
<title>jbd2__journal_start (11 samples, 0.23%)</title><rect x="663.7" y="533" width="2.7" height="15.0" fill="rgb(223,202,22)" rx="2" ry="2" />
<text  x="666.73" y="543.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="695.1" y="373" width="0.2" height="15.0" fill="rgb(229,20,7)" rx="2" ry="2" />
<text  x="698.05" y="383.5" ></text>
</g>
<g >
<title>ext4_releasepage (25 samples, 0.52%)</title><rect x="120.8" y="421" width="6.1" height="15.0" fill="rgb(253,152,5)" rx="2" ry="2" />
<text  x="123.83" y="431.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.02%)</title><rect x="110.3" y="421" width="0.3" height="15.0" fill="rgb(210,56,48)" rx="2" ry="2" />
<text  x="113.31" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="14.2" y="773" width="0.2" height="15.0" fill="rgb(239,192,26)" rx="2" ry="2" />
<text  x="17.16" y="783.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.02%)</title><rect x="1113.7" y="405" width="0.2" height="15.0" fill="rgb(230,23,40)" rx="2" ry="2" />
<text  x="1116.67" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.04%)</title><rect x="1042.5" y="1013" width="0.5" height="15.0" fill="rgb(212,100,53)" rx="2" ry="2" />
<text  x="1045.47" y="1023.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (1 samples, 0.02%)</title><rect x="804.7" y="517" width="0.2" height="15.0" fill="rgb(243,147,36)" rx="2" ry="2" />
<text  x="807.66" y="527.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (5 samples, 0.10%)</title><rect x="840.1" y="245" width="1.3" height="15.0" fill="rgb(217,50,9)" rx="2" ry="2" />
<text  x="843.13" y="255.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.04%)</title><rect x="1101.2" y="917" width="0.5" height="15.0" fill="rgb(247,174,3)" rx="2" ry="2" />
<text  x="1104.19" y="927.5" ></text>
</g>
<g >
<title>policy_nodemask (2 samples, 0.04%)</title><rect x="218.5" y="517" width="0.4" height="15.0" fill="rgb(210,81,11)" rx="2" ry="2" />
<text  x="221.45" y="527.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="37.6" y="965" width="0.5" height="15.0" fill="rgb(219,16,28)" rx="2" ry="2" />
<text  x="40.65" y="975.5" ></text>
</g>
<g >
<title>__ioctl (79 samples, 1.64%)</title><rect x="10.7" y="933" width="19.4" height="15.0" fill="rgb(248,70,21)" rx="2" ry="2" />
<text  x="13.73" y="943.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.02%)</title><rect x="33.0" y="549" width="0.2" height="15.0" fill="rgb(228,91,44)" rx="2" ry="2" />
<text  x="36.00" y="559.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.02%)</title><rect x="195.5" y="517" width="0.2" height="15.0" fill="rgb(245,114,50)" rx="2" ry="2" />
<text  x="198.45" y="527.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="832.3" y="405" width="0.3" height="15.0" fill="rgb(240,106,30)" rx="2" ry="2" />
<text  x="835.31" y="415.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (33 samples, 0.68%)</title><rect x="682.3" y="501" width="8.1" height="15.0" fill="rgb(219,225,34)" rx="2" ry="2" />
<text  x="685.33" y="511.5" ></text>
</g>
<g >
<title>ext4_search_dir (2 samples, 0.04%)</title><rect x="751.3" y="421" width="0.5" height="15.0" fill="rgb(218,124,38)" rx="2" ry="2" />
<text  x="754.32" y="431.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1114.4" y="773" width="0.2" height="15.0" fill="rgb(238,225,18)" rx="2" ry="2" />
<text  x="1117.40" y="783.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (192 samples, 3.98%)</title><rect x="762.6" y="853" width="47.0" height="15.0" fill="rgb(252,220,35)" rx="2" ry="2" />
<text  x="765.58" y="863.5" >rust..</text>
</g>
<g >
<title>drop_buffers (2 samples, 0.04%)</title><rect x="787.3" y="341" width="0.5" height="15.0" fill="rgb(236,122,27)" rx="2" ry="2" />
<text  x="790.29" y="351.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (13 samples, 0.27%)</title><rect x="154.1" y="837" width="3.2" height="15.0" fill="rgb(233,190,28)" rx="2" ry="2" />
<text  x="157.11" y="847.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (4 samples, 0.08%)</title><rect x="820.8" y="597" width="1.0" height="15.0" fill="rgb(238,144,40)" rx="2" ry="2" />
<text  x="823.81" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="35.7" y="885" width="0.2" height="15.0" fill="rgb(216,113,0)" rx="2" ry="2" />
<text  x="38.69" y="895.5" ></text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.06%)</title><rect x="1109.3" y="949" width="0.7" height="15.0" fill="rgb(225,83,35)" rx="2" ry="2" />
<text  x="1112.26" y="959.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (36 samples, 0.75%)</title><rect x="822.8" y="549" width="8.8" height="15.0" fill="rgb(233,50,21)" rx="2" ry="2" />
<text  x="825.76" y="559.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2 samples, 0.04%)</title><rect x="129.6" y="661" width="0.5" height="15.0" fill="rgb(214,182,7)" rx="2" ry="2" />
<text  x="132.64" y="671.5" ></text>
</g>
<g >
<title>&lt;&amp;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="810.3" y="693" width="0.2" height="15.0" fill="rgb(207,26,14)" rx="2" ry="2" />
<text  x="813.29" y="703.5" ></text>
</g>
<g >
<title>ext4_lookup (3 samples, 0.06%)</title><rect x="747.9" y="469" width="0.7" height="15.0" fill="rgb(222,115,6)" rx="2" ry="2" />
<text  x="750.90" y="479.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (1 samples, 0.02%)</title><rect x="1091.9" y="693" width="0.2" height="15.0" fill="rgb(241,198,8)" rx="2" ry="2" />
<text  x="1094.89" y="703.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.04%)</title><rect x="831.8" y="453" width="0.5" height="15.0" fill="rgb(216,35,29)" rx="2" ry="2" />
<text  x="834.82" y="463.5" ></text>
</g>
<g >
<title>apparmor_file_open (1 samples, 0.02%)</title><rect x="737.4" y="549" width="0.2" height="15.0" fill="rgb(232,96,32)" rx="2" ry="2" />
<text  x="740.38" y="559.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1115.4" y="757" width="0.2" height="15.0" fill="rgb(214,111,49)" rx="2" ry="2" />
<text  x="1118.38" y="767.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="657.6" y="661" width="0.3" height="15.0" fill="rgb(226,36,2)" rx="2" ry="2" />
<text  x="660.62" y="671.5" ></text>
</g>
<g >
<title>run_ksoftirqd (12 samples, 0.25%)</title><rect x="1106.1" y="981" width="2.9" height="15.0" fill="rgb(251,215,53)" rx="2" ry="2" />
<text  x="1109.08" y="991.5" ></text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 1.31%)</title><rect x="14.6" y="693" width="15.5" height="15.0" fill="rgb(215,161,36)" rx="2" ry="2" />
<text  x="17.65" y="703.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DeviceInode&gt;::serialize (6 samples, 0.12%)</title><rect x="831.6" y="549" width="1.4" height="15.0" fill="rgb(217,101,38)" rx="2" ry="2" />
<text  x="834.57" y="559.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (1 samples, 0.02%)</title><rect x="750.6" y="421" width="0.2" height="15.0" fill="rgb(235,34,52)" rx="2" ry="2" />
<text  x="753.59" y="431.5" ></text>
</g>
<g >
<title>d_set_d_op (1 samples, 0.02%)</title><rect x="795.9" y="565" width="0.2" height="15.0" fill="rgb(221,71,0)" rx="2" ry="2" />
<text  x="798.85" y="575.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (5 samples, 0.10%)</title><rect x="1187.6" y="789" width="1.2" height="15.0" fill="rgb(220,5,41)" rx="2" ry="2" />
<text  x="1190.55" y="799.5" ></text>
</g>
<g >
<title>page_counter_uncharge (1 samples, 0.02%)</title><rect x="792.2" y="245" width="0.2" height="15.0" fill="rgb(253,128,37)" rx="2" ry="2" />
<text  x="795.18" y="255.5" ></text>
</g>
<g >
<title>generic_fillattr (1 samples, 0.02%)</title><rect x="733.7" y="565" width="0.3" height="15.0" fill="rgb(238,229,39)" rx="2" ry="2" />
<text  x="736.71" y="575.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (73 samples, 1.51%)</title><rect x="109.8" y="885" width="17.9" height="15.0" fill="rgb(251,167,21)" rx="2" ry="2" />
<text  x="112.82" y="895.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="195.7" y="549" width="0.2" height="15.0" fill="rgb(221,20,42)" rx="2" ry="2" />
<text  x="198.70" y="559.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="658.8" y="773" width="0.3" height="15.0" fill="rgb(245,26,50)" rx="2" ry="2" />
<text  x="661.84" y="783.5" ></text>
</g>
<g >
<title>ovl_xattr_get (2 samples, 0.04%)</title><rect x="659.3" y="581" width="0.5" height="15.0" fill="rgb(208,58,27)" rx="2" ry="2" />
<text  x="662.33" y="591.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (18 samples, 0.37%)</title><rect x="176.1" y="565" width="4.4" height="15.0" fill="rgb(212,99,43)" rx="2" ry="2" />
<text  x="179.12" y="575.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="741.5" y="453" width="0.3" height="15.0" fill="rgb(211,208,16)" rx="2" ry="2" />
<text  x="744.54" y="463.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (2 samples, 0.04%)</title><rect x="831.8" y="437" width="0.5" height="15.0" fill="rgb(231,189,9)" rx="2" ry="2" />
<text  x="834.82" y="447.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (179 samples, 3.71%)</title><rect x="127.7" y="997" width="43.8" height="15.0" fill="rgb(224,88,3)" rx="2" ry="2" />
<text  x="130.68" y="1007.5" >NaCl..</text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.02%)</title><rect x="712.2" y="501" width="0.2" height="15.0" fill="rgb(225,104,1)" rx="2" ry="2" />
<text  x="715.18" y="511.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.02%)</title><rect x="35.7" y="789" width="0.2" height="15.0" fill="rgb(211,85,3)" rx="2" ry="2" />
<text  x="38.69" y="799.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.04%)</title><rect x="1112.9" y="645" width="0.5" height="15.0" fill="rgb(252,16,15)" rx="2" ry="2" />
<text  x="1115.93" y="655.5" ></text>
</g>
<g >
<title>generic_perform_write (21 samples, 0.44%)</title><rect x="30.6" y="677" width="5.1" height="15.0" fill="rgb(206,104,12)" rx="2" ry="2" />
<text  x="33.55" y="687.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (3 samples, 0.06%)</title><rect x="799.3" y="549" width="0.7" height="15.0" fill="rgb(252,189,16)" rx="2" ry="2" />
<text  x="802.28" y="559.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (3 samples, 0.06%)</title><rect x="657.4" y="789" width="0.7" height="15.0" fill="rgb(216,143,27)" rx="2" ry="2" />
<text  x="660.37" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (168 samples, 3.48%)</title><rect x="768.2" y="757" width="41.1" height="15.0" fill="rgb(233,31,18)" rx="2" ry="2" />
<text  x="771.20" y="767.5" >__x..</text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.06%)</title><rect x="836.2" y="357" width="0.8" height="15.0" fill="rgb(252,196,21)" rx="2" ry="2" />
<text  x="839.22" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.04%)</title><rect x="731.0" y="789" width="0.5" height="15.0" fill="rgb(252,13,25)" rx="2" ry="2" />
<text  x="734.02" y="799.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (902 samples, 18.70%)</title><rect x="433.3" y="837" width="220.6" height="15.0" fill="rgb(222,154,31)" rx="2" ry="2" />
<text  x="436.26" y="847.5" >ringbuf::ring_buffer::RingBuf..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::restore_metadata (1 samples, 0.02%)</title><rect x="1091.2" y="933" width="0.2" height="15.0" fill="rgb(231,225,6)" rx="2" ry="2" />
<text  x="1094.16" y="943.5" ></text>
</g>
<g >
<title>d_drop (2 samples, 0.04%)</title><rect x="794.4" y="661" width="0.5" height="15.0" fill="rgb(220,20,31)" rx="2" ry="2" />
<text  x="797.38" y="671.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="108.6" y="741" width="0.2" height="15.0" fill="rgb(235,121,23)" rx="2" ry="2" />
<text  x="111.60" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1090.2" y="725" width="0.2" height="15.0" fill="rgb(214,1,47)" rx="2" ry="2" />
<text  x="1093.18" y="735.5" ></text>
</g>
<g >
<title>generic_perform_write (282 samples, 5.85%)</title><rect x="660.8" y="581" width="69.0" height="15.0" fill="rgb(206,162,5)" rx="2" ry="2" />
<text  x="663.80" y="591.5" >generic..</text>
</g>
<g >
<title>std::path::PathBuf::_push (1 samples, 0.02%)</title><rect x="762.6" y="741" width="0.2" height="15.0" fill="rgb(237,8,15)" rx="2" ry="2" />
<text  x="765.58" y="751.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (2 samples, 0.04%)</title><rect x="733.7" y="613" width="0.5" height="15.0" fill="rgb(205,86,44)" rx="2" ry="2" />
<text  x="736.71" y="623.5" ></text>
</g>
<g >
<title>build_open_flags (2 samples, 0.04%)</title><rect x="734.4" y="661" width="0.5" height="15.0" fill="rgb(237,27,51)" rx="2" ry="2" />
<text  x="737.44" y="671.5" ></text>
</g>
<g >
<title>d_ancestor (2 samples, 0.04%)</title><rect x="808.3" y="629" width="0.5" height="15.0" fill="rgb(249,164,1)" rx="2" ry="2" />
<text  x="811.33" y="639.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.02%)</title><rect x="685.8" y="469" width="0.2" height="15.0" fill="rgb(215,113,24)" rx="2" ry="2" />
<text  x="688.75" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="678.9" y="469" width="0.2" height="15.0" fill="rgb(207,225,31)" rx="2" ry="2" />
<text  x="681.90" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="769.7" y="645" width="0.2" height="15.0" fill="rgb(250,53,39)" rx="2" ry="2" />
<text  x="772.67" y="655.5" ></text>
</g>
<g >
<title>set_next_entity (1 samples, 0.02%)</title><rect x="1189.5" y="853" width="0.3" height="15.0" fill="rgb(247,207,51)" rx="2" ry="2" />
<text  x="1192.51" y="863.5" ></text>
</g>
<g >
<title>__wake_up (3 samples, 0.06%)</title><rect x="222.9" y="517" width="0.7" height="15.0" fill="rgb(239,2,25)" rx="2" ry="2" />
<text  x="225.86" y="527.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.02%)</title><rect x="247.8" y="565" width="0.3" height="15.0" fill="rgb(208,100,31)" rx="2" ry="2" />
<text  x="250.81" y="575.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.06%)</title><rect x="864.1" y="421" width="0.7" height="15.0" fill="rgb(220,27,33)" rx="2" ry="2" />
<text  x="867.11" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (340 samples, 7.05%)</title><rect x="172.9" y="837" width="83.2" height="15.0" fill="rgb(218,203,3)" rx="2" ry="2" />
<text  x="175.94" y="847.5" >std::sys:..</text>
</g>
<g >
<title>load_balance (3 samples, 0.06%)</title><rect x="1168.0" y="725" width="0.7" height="15.0" fill="rgb(252,54,34)" rx="2" ry="2" />
<text  x="1170.98" y="735.5" ></text>
</g>
<g >
<title>security_file_open (2 samples, 0.04%)</title><rect x="737.1" y="565" width="0.5" height="15.0" fill="rgb(245,186,42)" rx="2" ry="2" />
<text  x="740.13" y="575.5" ></text>
</g>
<g >
<title>ext4_handle_dirty_dirblock (2 samples, 0.04%)</title><rect x="807.1" y="581" width="0.5" height="15.0" fill="rgb(224,54,24)" rx="2" ry="2" />
<text  x="810.11" y="591.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.02%)</title><rect x="1112.9" y="437" width="0.3" height="15.0" fill="rgb(234,55,4)" rx="2" ry="2" />
<text  x="1115.93" y="447.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.02%)</title><rect x="759.9" y="533" width="0.2" height="15.0" fill="rgb(248,16,25)" rx="2" ry="2" />
<text  x="762.89" y="543.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (17 samples, 0.35%)</title><rect x="852.9" y="261" width="4.1" height="15.0" fill="rgb(211,214,19)" rx="2" ry="2" />
<text  x="855.86" y="271.5" ></text>
</g>
<g >
<title>get_random_u32 (1 samples, 0.02%)</title><rect x="186.2" y="437" width="0.2" height="15.0" fill="rgb(226,196,28)" rx="2" ry="2" />
<text  x="189.16" y="447.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="865.3" y="389" width="0.3" height="15.0" fill="rgb(239,175,21)" rx="2" ry="2" />
<text  x="868.33" y="399.5" ></text>
</g>
<g >
<title>_raw_write_lock (3 samples, 0.06%)</title><rect x="192.5" y="501" width="0.8" height="15.0" fill="rgb(245,69,33)" rx="2" ry="2" />
<text  x="195.52" y="511.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="888.3" y="309" width="0.3" height="15.0" fill="rgb(227,15,44)" rx="2" ry="2" />
<text  x="891.33" y="319.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="836.0" y="341" width="0.2" height="15.0" fill="rgb(221,196,43)" rx="2" ry="2" />
<text  x="838.98" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (7 samples, 0.15%)</title><rect x="129.1" y="805" width="1.8" height="15.0" fill="rgb(242,181,23)" rx="2" ry="2" />
<text  x="132.15" y="815.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook (1 samples, 0.02%)</title><rect x="792.4" y="309" width="0.3" height="15.0" fill="rgb(209,84,27)" rx="2" ry="2" />
<text  x="795.43" y="319.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="108.4" y="709" width="0.2" height="15.0" fill="rgb(231,225,24)" rx="2" ry="2" />
<text  x="111.35" y="719.5" ></text>
</g>
<g >
<title>seq_put_decimal_ull (1 samples, 0.02%)</title><rect x="30.3" y="757" width="0.3" height="15.0" fill="rgb(231,156,40)" rx="2" ry="2" />
<text  x="33.31" y="767.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="223.3" y="485" width="0.3" height="15.0" fill="rgb(215,42,3)" rx="2" ry="2" />
<text  x="226.34" y="495.5" ></text>
</g>
<g >
<title>psi_task_change (2 samples, 0.04%)</title><rect x="130.1" y="629" width="0.5" height="15.0" fill="rgb(236,219,52)" rx="2" ry="2" />
<text  x="133.13" y="639.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="108.6" y="549" width="0.2" height="15.0" fill="rgb(244,112,41)" rx="2" ry="2" />
<text  x="111.60" y="559.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="108.6" y="709" width="0.2" height="15.0" fill="rgb(249,227,38)" rx="2" ry="2" />
<text  x="111.60" y="719.5" ></text>
</g>
<g >
<title>kernel_fpu_begin (2 samples, 0.04%)</title><rect x="775.3" y="405" width="0.5" height="15.0" fill="rgb(252,52,39)" rx="2" ry="2" />
<text  x="778.30" y="415.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook (1 samples, 0.02%)</title><rect x="1107.5" y="853" width="0.3" height="15.0" fill="rgb(213,139,44)" rx="2" ry="2" />
<text  x="1110.55" y="863.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (21 samples, 0.44%)</title><rect x="30.6" y="709" width="5.1" height="15.0" fill="rgb(242,218,13)" rx="2" ry="2" />
<text  x="33.55" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="35.9" y="1013" width="0.3" height="15.0" fill="rgb(251,54,42)" rx="2" ry="2" />
<text  x="38.93" y="1023.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (115 samples, 2.38%)</title><rect x="836.0" y="469" width="28.1" height="15.0" fill="rgb(215,25,43)" rx="2" ry="2" />
<text  x="838.98" y="479.5" >s..</text>
</g>
<g >
<title>&lt;u32 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (26 samples, 0.54%)</title><rect x="942.2" y="405" width="6.3" height="15.0" fill="rgb(247,96,39)" rx="2" ry="2" />
<text  x="945.16" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (2 samples, 0.04%)</title><rect x="1090.7" y="629" width="0.5" height="15.0" fill="rgb(241,164,8)" rx="2" ry="2" />
<text  x="1093.67" y="639.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (21 samples, 0.44%)</title><rect x="714.4" y="469" width="5.1" height="15.0" fill="rgb(237,178,18)" rx="2" ry="2" />
<text  x="717.38" y="479.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (2 samples, 0.04%)</title><rect x="1080.4" y="901" width="0.5" height="15.0" fill="rgb(251,91,35)" rx="2" ry="2" />
<text  x="1083.39" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.15%)</title><rect x="824.5" y="453" width="1.7" height="15.0" fill="rgb(241,181,35)" rx="2" ry="2" />
<text  x="827.48" y="463.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="862.9" y="37" width="0.2" height="15.0" fill="rgb(219,118,41)" rx="2" ry="2" />
<text  x="865.89" y="47.5" ></text>
</g>
<g >
<title>security_inode_getsecurity (1 samples, 0.02%)</title><rect x="659.3" y="565" width="0.3" height="15.0" fill="rgb(244,189,2)" rx="2" ry="2" />
<text  x="662.33" y="575.5" ></text>
</g>
<g >
<title>ext4_add_entry (8 samples, 0.17%)</title><rect x="799.0" y="597" width="2.0" height="15.0" fill="rgb(251,132,46)" rx="2" ry="2" />
<text  x="802.03" y="607.5" ></text>
</g>
<g >
<title>realpath_stk (11 samples, 0.23%)</title><rect x="755.5" y="773" width="2.7" height="15.0" fill="rgb(233,1,51)" rx="2" ry="2" />
<text  x="758.48" y="783.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (56 samples, 1.16%)</title><rect x="950.0" y="405" width="13.7" height="15.0" fill="rgb(233,205,13)" rx="2" ry="2" />
<text  x="952.99" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (5 samples, 0.10%)</title><rect x="838.4" y="325" width="1.2" height="15.0" fill="rgb(214,165,25)" rx="2" ry="2" />
<text  x="841.42" y="335.5" ></text>
</g>
<g >
<title>statx (12 samples, 0.25%)</title><rect x="758.9" y="741" width="2.9" height="15.0" fill="rgb(248,25,15)" rx="2" ry="2" />
<text  x="761.91" y="751.5" ></text>
</g>
<g >
<title>perf_ioctl (1 samples, 0.02%)</title><rect x="35.9" y="981" width="0.3" height="15.0" fill="rgb(244,18,54)" rx="2" ry="2" />
<text  x="38.93" y="991.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="1091.2" y="709" width="0.2" height="15.0" fill="rgb(213,195,39)" rx="2" ry="2" />
<text  x="1094.16" y="719.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.06%)</title><rect x="108.8" y="613" width="0.8" height="15.0" fill="rgb(223,158,50)" rx="2" ry="2" />
<text  x="111.84" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (80 samples, 1.66%)</title><rect x="981.5" y="405" width="19.6" height="15.0" fill="rgb(230,197,11)" rx="2" ry="2" />
<text  x="984.55" y="415.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 0.08%)</title><rect x="820.8" y="581" width="1.0" height="15.0" fill="rgb(218,50,19)" rx="2" ry="2" />
<text  x="823.81" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="731.7" y="741" width="0.3" height="15.0" fill="rgb(208,132,22)" rx="2" ry="2" />
<text  x="734.75" y="751.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect x="1090.7" y="757" width="0.5" height="15.0" fill="rgb(218,62,19)" rx="2" ry="2" />
<text  x="1093.67" y="767.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (4 samples, 0.08%)</title><rect x="915.2" y="389" width="1.0" height="15.0" fill="rgb(254,19,23)" rx="2" ry="2" />
<text  x="918.25" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_read (89 samples, 1.85%)</title><rect x="131.4" y="757" width="21.7" height="15.0" fill="rgb(229,225,41)" rx="2" ry="2" />
<text  x="134.35" y="767.5" >_..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="36.4" y="981" width="0.3" height="15.0" fill="rgb(249,89,30)" rx="2" ry="2" />
<text  x="39.42" y="991.5" ></text>
</g>
<g >
<title>__legitimize_mnt (1 samples, 0.02%)</title><rect x="756.7" y="565" width="0.3" height="15.0" fill="rgb(216,107,51)" rx="2" ry="2" />
<text  x="759.71" y="575.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="813.7" y="437" width="0.3" height="15.0" fill="rgb(240,59,50)" rx="2" ry="2" />
<text  x="816.71" y="447.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="174.9" y="581" width="0.2" height="15.0" fill="rgb(231,44,23)" rx="2" ry="2" />
<text  x="177.90" y="591.5" ></text>
</g>
<g >
<title>gc_worker (1 samples, 0.02%)</title><rect x="1109.0" y="965" width="0.3" height="15.0" fill="rgb(234,102,45)" rx="2" ry="2" />
<text  x="1112.02" y="975.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1091.2" y="693" width="0.2" height="15.0" fill="rgb(234,52,37)" rx="2" ry="2" />
<text  x="1094.16" y="703.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (7 samples, 0.15%)</title><rect x="999.4" y="341" width="1.7" height="15.0" fill="rgb(247,112,54)" rx="2" ry="2" />
<text  x="1002.41" y="351.5" ></text>
</g>
<g >
<title>ext4_claim_free_clusters (1 samples, 0.02%)</title><rect x="194.0" y="485" width="0.2" height="15.0" fill="rgb(228,183,43)" rx="2" ry="2" />
<text  x="196.99" y="495.5" ></text>
</g>
<g >
<title>ext4_evict_inode (73 samples, 1.51%)</title><rect x="109.8" y="533" width="17.9" height="15.0" fill="rgb(246,151,6)" rx="2" ry="2" />
<text  x="112.82" y="543.5" ></text>
</g>
<g >
<title>ovl_permission (4 samples, 0.08%)</title><rect x="764.8" y="613" width="1.0" height="15.0" fill="rgb(228,33,3)" rx="2" ry="2" />
<text  x="767.78" y="623.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (1 samples, 0.02%)</title><rect x="109.1" y="357" width="0.2" height="15.0" fill="rgb(247,138,14)" rx="2" ry="2" />
<text  x="112.09" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.25%)</title><rect x="654.2" y="645" width="2.9" height="15.0" fill="rgb(226,73,53)" rx="2" ry="2" />
<text  x="657.19" y="655.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="1090.9" y="517" width="0.3" height="15.0" fill="rgb(220,49,45)" rx="2" ry="2" />
<text  x="1093.91" y="527.5" ></text>
</g>
<g >
<title>__xa_set_mark (2 samples, 0.04%)</title><rect x="710.0" y="485" width="0.5" height="15.0" fill="rgb(226,206,18)" rx="2" ry="2" />
<text  x="712.98" y="495.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect x="1080.4" y="933" width="0.5" height="15.0" fill="rgb(214,141,13)" rx="2" ry="2" />
<text  x="1083.39" y="943.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (3 samples, 0.06%)</title><rect x="217.0" y="453" width="0.7" height="15.0" fill="rgb(211,168,46)" rx="2" ry="2" />
<text  x="219.98" y="463.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="1166.5" y="757" width="0.3" height="15.0" fill="rgb(245,60,54)" rx="2" ry="2" />
<text  x="1169.51" y="767.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="733.2" y="613" width="0.3" height="15.0" fill="rgb(249,102,51)" rx="2" ry="2" />
<text  x="736.22" y="623.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.02%)</title><rect x="1017.0" y="917" width="0.3" height="15.0" fill="rgb(248,12,31)" rx="2" ry="2" />
<text  x="1020.02" y="927.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.08%)</title><rect x="46.7" y="917" width="1.0" height="15.0" fill="rgb(205,221,36)" rx="2" ry="2" />
<text  x="49.70" y="927.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="1101.9" y="821" width="0.3" height="15.0" fill="rgb(228,179,3)" rx="2" ry="2" />
<text  x="1104.92" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.25%)</title><rect x="758.9" y="709" width="2.9" height="15.0" fill="rgb(225,164,26)" rx="2" ry="2" />
<text  x="761.91" y="719.5" ></text>
</g>
<g >
<title>d_alloc (1 samples, 0.02%)</title><rect x="760.4" y="549" width="0.2" height="15.0" fill="rgb(243,37,8)" rx="2" ry="2" />
<text  x="763.38" y="559.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (1 samples, 0.02%)</title><rect x="108.1" y="773" width="0.3" height="15.0" fill="rgb(240,42,40)" rx="2" ry="2" />
<text  x="111.11" y="783.5" ></text>
</g>
<g >
<title>file_modified (2 samples, 0.04%)</title><rect x="173.7" y="597" width="0.5" height="15.0" fill="rgb(229,106,11)" rx="2" ry="2" />
<text  x="176.68" y="607.5" ></text>
</g>
<g >
<title>ovl_unlink (1 samples, 0.02%)</title><rect x="1090.2" y="645" width="0.2" height="15.0" fill="rgb(229,103,41)" rx="2" ry="2" />
<text  x="1093.18" y="655.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="786.6" y="293" width="0.2" height="15.0" fill="rgb(224,4,1)" rx="2" ry="2" />
<text  x="789.55" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.02%)</title><rect x="810.3" y="645" width="0.2" height="15.0" fill="rgb(214,75,18)" rx="2" ry="2" />
<text  x="813.29" y="655.5" ></text>
</g>
<g >
<title>lookup_open.isra.0 (71 samples, 1.47%)</title><rect x="737.9" y="597" width="17.3" height="15.0" fill="rgb(214,150,9)" rx="2" ry="2" />
<text  x="740.87" y="607.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.02%)</title><rect x="30.3" y="837" width="0.3" height="15.0" fill="rgb(229,122,29)" rx="2" ry="2" />
<text  x="33.31" y="847.5" ></text>
</g>
<g >
<title>clockevents_program_event (3 samples, 0.06%)</title><rect x="1167.0" y="757" width="0.7" height="15.0" fill="rgb(228,118,1)" rx="2" ry="2" />
<text  x="1170.00" y="767.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="205.2" y="501" width="0.3" height="15.0" fill="rgb(212,156,12)" rx="2" ry="2" />
<text  x="208.24" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="657.4" y="709" width="0.2" height="15.0" fill="rgb(208,103,26)" rx="2" ry="2" />
<text  x="660.37" y="719.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.04%)</title><rect x="192.0" y="501" width="0.5" height="15.0" fill="rgb(220,216,27)" rx="2" ry="2" />
<text  x="195.03" y="511.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 0.12%)</title><rect x="830.1" y="469" width="1.5" height="15.0" fill="rgb(213,43,37)" rx="2" ry="2" />
<text  x="833.10" y="479.5" ></text>
</g>
<g >
<title>poll_freewait (1 samples, 0.02%)</title><rect x="1101.7" y="965" width="0.2" height="15.0" fill="rgb(227,206,19)" rx="2" ry="2" />
<text  x="1104.68" y="975.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.04%)</title><rect x="762.1" y="821" width="0.5" height="15.0" fill="rgb(241,164,25)" rx="2" ry="2" />
<text  x="765.09" y="831.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="842.6" y="181" width="0.7" height="15.0" fill="rgb(211,111,53)" rx="2" ry="2" />
<text  x="845.58" y="191.5" ></text>
</g>
<g >
<title>get_page_from_freelist (38 samples, 0.79%)</title><rect x="208.4" y="501" width="9.3" height="15.0" fill="rgb(245,32,35)" rx="2" ry="2" />
<text  x="211.42" y="511.5" ></text>
</g>
<g >
<title>__update_blocked_fair (2 samples, 0.04%)</title><rect x="1168.7" y="725" width="0.5" height="15.0" fill="rgb(213,132,1)" rx="2" ry="2" />
<text  x="1171.71" y="735.5" ></text>
</g>
<g >
<title>__d_lookup (1 samples, 0.02%)</title><rect x="748.6" y="453" width="0.3" height="15.0" fill="rgb(229,22,42)" rx="2" ry="2" />
<text  x="751.63" y="463.5" ></text>
</g>
<g >
<title>generic_write_end (4 samples, 0.08%)</title><rect x="34.0" y="645" width="1.0" height="15.0" fill="rgb(252,161,15)" rx="2" ry="2" />
<text  x="36.98" y="655.5" ></text>
</g>
<g >
<title>iput_final (73 samples, 1.51%)</title><rect x="109.8" y="725" width="17.9" height="15.0" fill="rgb(246,145,18)" rx="2" ry="2" />
<text  x="112.82" y="735.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (6 samples, 0.12%)</title><rect x="1114.6" y="837" width="1.5" height="15.0" fill="rgb(212,93,22)" rx="2" ry="2" />
<text  x="1117.64" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="817.6" y="437" width="0.3" height="15.0" fill="rgb(206,101,43)" rx="2" ry="2" />
<text  x="820.63" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="30.1" y="933" width="0.2" height="15.0" fill="rgb(219,182,43)" rx="2" ry="2" />
<text  x="33.06" y="943.5" ></text>
</g>
<g >
<title>cap_inode_need_killpriv (3 samples, 0.06%)</title><rect x="659.3" y="629" width="0.8" height="15.0" fill="rgb(254,132,8)" rx="2" ry="2" />
<text  x="662.33" y="639.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.02%)</title><rect x="34.2" y="597" width="0.3" height="15.0" fill="rgb(208,187,46)" rx="2" ry="2" />
<text  x="37.22" y="607.5" ></text>
</g>
<g >
<title>iput_final (73 samples, 1.51%)</title><rect x="109.8" y="565" width="17.9" height="15.0" fill="rgb(252,158,23)" rx="2" ry="2" />
<text  x="112.82" y="575.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (1 samples, 0.02%)</title><rect x="109.1" y="277" width="0.2" height="15.0" fill="rgb(247,132,33)" rx="2" ry="2" />
<text  x="112.09" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (28 samples, 0.58%)</title><rect x="330.5" y="789" width="6.9" height="15.0" fill="rgb(226,182,30)" rx="2" ry="2" />
<text  x="333.51" y="799.5" ></text>
</g>
<g >
<title>do_statx (12 samples, 0.25%)</title><rect x="758.9" y="677" width="2.9" height="15.0" fill="rgb(207,69,20)" rx="2" ry="2" />
<text  x="761.91" y="687.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.15%)</title><rect x="50.9" y="917" width="1.7" height="15.0" fill="rgb(228,210,31)" rx="2" ry="2" />
<text  x="53.86" y="927.5" ></text>
</g>
<g >
<title>__schedule (7 samples, 0.15%)</title><rect x="1159.2" y="949" width="1.7" height="15.0" fill="rgb(220,115,6)" rx="2" ry="2" />
<text  x="1162.17" y="959.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1101.9" y="773" width="0.3" height="15.0" fill="rgb(237,29,6)" rx="2" ry="2" />
<text  x="1104.92" y="783.5" ></text>
</g>
<g >
<title>d_alloc_parallel (4 samples, 0.08%)</title><rect x="795.1" y="597" width="1.0" height="15.0" fill="rgb(250,80,46)" rx="2" ry="2" />
<text  x="798.12" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="657.6" y="725" width="0.3" height="15.0" fill="rgb(208,9,24)" rx="2" ry="2" />
<text  x="660.62" y="735.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="1165.3" y="693" width="0.2" height="15.0" fill="rgb(250,209,1)" rx="2" ry="2" />
<text  x="1168.29" y="703.5" ></text>
</g>
<g >
<title>enqueue_task (2 samples, 0.04%)</title><rect x="1115.6" y="709" width="0.5" height="15.0" fill="rgb(219,192,22)" rx="2" ry="2" />
<text  x="1118.62" y="719.5" ></text>
</g>
<g >
<title>file_ra_state_init (1 samples, 0.02%)</title><rect x="736.9" y="517" width="0.2" height="15.0" fill="rgb(248,94,43)" rx="2" ry="2" />
<text  x="739.89" y="527.5" ></text>
</g>
<g >
<title>NaClSimpleServiceAcceptConnection (1 samples, 0.02%)</title><rect x="1089.9" y="949" width="0.3" height="15.0" fill="rgb(220,58,5)" rx="2" ry="2" />
<text  x="1092.93" y="959.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="108.1" y="853" width="0.3" height="15.0" fill="rgb(221,126,40)" rx="2" ry="2" />
<text  x="111.11" y="863.5" ></text>
</g>
<g >
<title>generic_write_end (70 samples, 1.45%)</title><rect x="706.1" y="549" width="17.1" height="15.0" fill="rgb(230,65,34)" rx="2" ry="2" />
<text  x="709.06" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="865.1" y="405" width="0.2" height="15.0" fill="rgb(205,66,50)" rx="2" ry="2" />
<text  x="868.09" y="415.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (2 samples, 0.04%)</title><rect x="34.2" y="613" width="0.5" height="15.0" fill="rgb(242,98,23)" rx="2" ry="2" />
<text  x="37.22" y="623.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="888.3" y="213" width="0.3" height="15.0" fill="rgb(244,78,23)" rx="2" ry="2" />
<text  x="891.33" y="223.5" ></text>
</g>
<g >
<title>copy_fpregs_to_fpstate (1 samples, 0.02%)</title><rect x="743.2" y="389" width="0.3" height="15.0" fill="rgb(206,77,12)" rx="2" ry="2" />
<text  x="746.25" y="399.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (35 samples, 0.73%)</title><rect x="1080.9" y="1013" width="8.5" height="15.0" fill="rgb(217,34,15)" rx="2" ry="2" />
<text  x="1083.88" y="1023.5" ></text>
</g>
<g >
<title>new_heap (1 samples, 0.02%)</title><rect x="1089.9" y="885" width="0.3" height="15.0" fill="rgb(219,110,28)" rx="2" ry="2" />
<text  x="1092.93" y="895.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="857.0" y="261" width="0.3" height="15.0" fill="rgb(218,28,41)" rx="2" ry="2" />
<text  x="860.02" y="271.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="173.9" y="517" width="0.3" height="15.0" fill="rgb(251,73,53)" rx="2" ry="2" />
<text  x="176.92" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="830.1" y="405" width="0.2" height="15.0" fill="rgb(247,148,41)" rx="2" ry="2" />
<text  x="833.10" y="415.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.15%)</title><rect x="850.2" y="245" width="1.7" height="15.0" fill="rgb(254,153,3)" rx="2" ry="2" />
<text  x="853.17" y="255.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (28 samples, 0.58%)</title><rect x="330.5" y="805" width="6.9" height="15.0" fill="rgb(252,180,1)" rx="2" ry="2" />
<text  x="333.51" y="815.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (3 samples, 0.06%)</title><rect x="720.0" y="469" width="0.7" height="15.0" fill="rgb(250,149,8)" rx="2" ry="2" />
<text  x="723.01" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (2 samples, 0.04%)</title><rect x="128.7" y="789" width="0.4" height="15.0" fill="rgb(249,139,36)" rx="2" ry="2" />
<text  x="131.66" y="799.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="777.7" y="421" width="0.3" height="15.0" fill="rgb(207,69,36)" rx="2" ry="2" />
<text  x="780.75" y="431.5" ></text>
</g>
<g >
<title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.02%)</title><rect x="653.9" y="853" width="0.3" height="15.0" fill="rgb(224,133,22)" rx="2" ry="2" />
<text  x="656.95" y="863.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.02%)</title><rect x="813.7" y="421" width="0.3" height="15.0" fill="rgb(231,2,19)" rx="2" ry="2" />
<text  x="816.71" y="431.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::State as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="877.6" y="485" width="0.5" height="15.0" fill="rgb(214,98,40)" rx="2" ry="2" />
<text  x="880.57" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (90 samples, 1.87%)</title><rect x="131.1" y="837" width="22.0" height="15.0" fill="rgb(208,227,44)" rx="2" ry="2" />
<text  x="134.11" y="847.5" >s..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (5 samples, 0.10%)</title><rect x="825.0" y="421" width="1.2" height="15.0" fill="rgb(209,160,39)" rx="2" ry="2" />
<text  x="827.97" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::fs::File&gt;&gt; (12 samples, 0.25%)</title><rect x="654.2" y="757" width="2.9" height="15.0" fill="rgb(244,128,6)" rx="2" ry="2" />
<text  x="657.19" y="767.5" ></text>
</g>
<g >
<title>xa_get_order (2 samples, 0.04%)</title><rect x="203.0" y="501" width="0.5" height="15.0" fill="rgb(246,25,27)" rx="2" ry="2" />
<text  x="206.04" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_statx (12 samples, 0.25%)</title><rect x="758.9" y="693" width="2.9" height="15.0" fill="rgb(216,194,16)" rx="2" ry="2" />
<text  x="761.91" y="703.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.02%)</title><rect x="178.1" y="517" width="0.2" height="15.0" fill="rgb(232,171,39)" rx="2" ry="2" />
<text  x="181.08" y="527.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.02%)</title><rect x="109.6" y="949" width="0.2" height="15.0" fill="rgb(208,136,5)" rx="2" ry="2" />
<text  x="112.58" y="959.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (1 samples, 0.02%)</title><rect x="1089.9" y="789" width="0.3" height="15.0" fill="rgb(253,28,33)" rx="2" ry="2" />
<text  x="1092.93" y="799.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="1091.2" y="581" width="0.2" height="15.0" fill="rgb(246,107,28)" rx="2" ry="2" />
<text  x="1094.16" y="591.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (3,449 samples, 71.51%)</title><rect x="172.2" y="949" width="843.8" height="15.0" fill="rgb(253,120,41)" rx="2" ry="2" />
<text  x="175.21" y="959.5" >NaClHostDescWrite</text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="800.5" y="533" width="0.2" height="15.0" fill="rgb(221,171,11)" rx="2" ry="2" />
<text  x="803.50" y="543.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (133 samples, 2.76%)</title><rect x="833.0" y="517" width="32.6" height="15.0" fill="rgb(234,42,22)" rx="2" ry="2" />
<text  x="836.04" y="527.5" >se..</text>
</g>
<g >
<title>slab_free_freelist_hook (1 samples, 0.02%)</title><rect x="126.7" y="341" width="0.2" height="15.0" fill="rgb(251,30,43)" rx="2" ry="2" />
<text  x="129.70" y="351.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="1090.2" y="869" width="0.2" height="15.0" fill="rgb(249,151,13)" rx="2" ry="2" />
<text  x="1093.18" y="879.5" ></text>
</g>
<g >
<title>NaClApplyPatchToMemory (1 samples, 0.02%)</title><rect x="109.6" y="853" width="0.2" height="15.0" fill="rgb(247,63,33)" rx="2" ry="2" />
<text  x="112.58" y="863.5" ></text>
</g>
<g >
<title>__schedule (13 samples, 0.27%)</title><rect x="1186.8" y="885" width="3.2" height="15.0" fill="rgb(242,202,13)" rx="2" ry="2" />
<text  x="1189.82" y="895.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.02%)</title><rect x="1158.4" y="885" width="0.3" height="15.0" fill="rgb(207,51,40)" rx="2" ry="2" />
<text  x="1161.44" y="895.5" ></text>
</g>
<g >
<title>get_acl.part.0 (1 samples, 0.02%)</title><rect x="749.4" y="485" width="0.2" height="15.0" fill="rgb(242,89,41)" rx="2" ry="2" />
<text  x="752.37" y="495.5" ></text>
</g>
<g >
<title>ext4_add_entry (2 samples, 0.04%)</title><rect x="745.5" y="453" width="0.4" height="15.0" fill="rgb(223,144,1)" rx="2" ry="2" />
<text  x="748.45" y="463.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (2 samples, 0.04%)</title><rect x="740.1" y="469" width="0.5" height="15.0" fill="rgb(226,106,12)" rx="2" ry="2" />
<text  x="743.07" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.27%)</title><rect x="922.8" y="309" width="3.2" height="15.0" fill="rgb(216,154,50)" rx="2" ry="2" />
<text  x="925.83" y="319.5" ></text>
</g>
<g >
<title>user_path_at_empty (8 samples, 0.17%)</title><rect x="756.2" y="677" width="2.0" height="15.0" fill="rgb(222,49,27)" rx="2" ry="2" />
<text  x="759.22" y="687.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1107.8" y="885" width="0.2" height="15.0" fill="rgb(226,94,36)" rx="2" ry="2" />
<text  x="1110.79" y="895.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (14 samples, 0.29%)</title><rect x="916.2" y="357" width="3.4" height="15.0" fill="rgb(211,88,25)" rx="2" ry="2" />
<text  x="919.22" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="705.8" y="469" width="0.3" height="15.0" fill="rgb(235,201,14)" rx="2" ry="2" />
<text  x="708.82" y="479.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect x="1080.4" y="885" width="0.5" height="15.0" fill="rgb(232,203,38)" rx="2" ry="2" />
<text  x="1083.39" y="895.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.02%)</title><rect x="675.0" y="485" width="0.2" height="15.0" fill="rgb(247,170,37)" rx="2" ry="2" />
<text  x="677.99" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (294 samples, 6.10%)</title><rect x="659.1" y="805" width="71.9" height="15.0" fill="rgb(228,24,50)" rx="2" ry="2" />
<text  x="662.09" y="815.5" >std::sys..</text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1101.9" y="901" width="0.3" height="15.0" fill="rgb(216,138,21)" rx="2" ry="2" />
<text  x="1104.92" y="911.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (194 samples, 4.02%)</title><rect x="1110.0" y="933" width="47.5" height="15.0" fill="rgb(226,128,14)" rx="2" ry="2" />
<text  x="1113.00" y="943.5" >cpui..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="52.8" y="1013" width="0.3" height="15.0" fill="rgb(242,100,19)" rx="2" ry="2" />
<text  x="55.82" y="1023.5" ></text>
</g>
<g >
<title>__d_lookup_done (1 samples, 0.02%)</title><rect x="797.1" y="533" width="0.2" height="15.0" fill="rgb(214,67,2)" rx="2" ry="2" />
<text  x="800.07" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (1 samples, 0.02%)</title><rect x="767.7" y="805" width="0.3" height="15.0" fill="rgb(228,115,45)" rx="2" ry="2" />
<text  x="770.72" y="815.5" ></text>
</g>
<g >
<title>__libc_lseek (1 samples, 0.02%)</title><rect x="153.1" y="821" width="0.3" height="15.0" fill="rgb(245,202,31)" rx="2" ry="2" />
<text  x="156.13" y="831.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.02%)</title><rect x="255.4" y="581" width="0.2" height="15.0" fill="rgb(224,123,42)" rx="2" ry="2" />
<text  x="258.39" y="591.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="109.3" y="549" width="0.3" height="15.0" fill="rgb(209,8,46)" rx="2" ry="2" />
<text  x="112.33" y="559.5" ></text>
</g>
<g >
<title>file_modified (1 samples, 0.02%)</title><rect x="660.6" y="581" width="0.2" height="15.0" fill="rgb(219,144,11)" rx="2" ry="2" />
<text  x="663.55" y="591.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (2 samples, 0.04%)</title><rect x="202.3" y="501" width="0.5" height="15.0" fill="rgb(220,30,5)" rx="2" ry="2" />
<text  x="205.30" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.02%)</title><rect x="1017.0" y="933" width="0.3" height="15.0" fill="rgb(253,0,34)" rx="2" ry="2" />
<text  x="1020.02" y="943.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (14 samples, 0.29%)</title><rect x="1164.3" y="821" width="3.4" height="15.0" fill="rgb(214,4,15)" rx="2" ry="2" />
<text  x="1167.31" y="831.5" ></text>
</g>
<g >
<title>__perf_event_enable (1 samples, 0.02%)</title><rect x="35.9" y="837" width="0.3" height="15.0" fill="rgb(254,156,43)" rx="2" ry="2" />
<text  x="38.93" y="847.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="653.9" y="645" width="0.3" height="15.0" fill="rgb(233,228,12)" rx="2" ry="2" />
<text  x="656.95" y="655.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="761.6" y="597" width="0.2" height="15.0" fill="rgb(247,177,13)" rx="2" ry="2" />
<text  x="764.60" y="607.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="831.6" y="357" width="0.2" height="15.0" fill="rgb(242,0,44)" rx="2" ry="2" />
<text  x="834.57" y="367.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="109.1" y="533" width="0.2" height="15.0" fill="rgb(234,7,23)" rx="2" ry="2" />
<text  x="112.09" y="543.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (79 samples, 1.64%)</title><rect x="838.4" y="373" width="19.4" height="15.0" fill="rgb(245,188,0)" rx="2" ry="2" />
<text  x="841.42" y="383.5" ></text>
</g>
<g >
<title>__do_sys_getcwd (1 samples, 0.02%)</title><rect x="763.3" y="725" width="0.3" height="15.0" fill="rgb(225,132,53)" rx="2" ry="2" />
<text  x="766.31" y="735.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (294 samples, 6.10%)</title><rect x="659.1" y="837" width="71.9" height="15.0" fill="rgb(207,16,24)" rx="2" ry="2" />
<text  x="662.09" y="847.5" >std::os:..</text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="35.9" y="773" width="0.3" height="15.0" fill="rgb(245,36,52)" rx="2" ry="2" />
<text  x="38.93" y="783.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.27%)</title><rect x="817.6" y="485" width="3.2" height="15.0" fill="rgb(237,100,15)" rx="2" ry="2" />
<text  x="820.63" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (69 samples, 1.43%)</title><rect x="982.5" y="341" width="16.9" height="15.0" fill="rgb(238,3,0)" rx="2" ry="2" />
<text  x="985.53" y="351.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="851.9" y="245" width="0.2" height="15.0" fill="rgb(233,125,47)" rx="2" ry="2" />
<text  x="854.88" y="255.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="1167.7" y="741" width="0.3" height="15.0" fill="rgb(249,64,43)" rx="2" ry="2" />
<text  x="1170.74" y="751.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.02%)</title><rect x="1015.8" y="885" width="0.2" height="15.0" fill="rgb(244,127,40)" rx="2" ry="2" />
<text  x="1018.80" y="895.5" ></text>
</g>
<g >
<title>page_cache_free_page.isra.0 (1 samples, 0.02%)</title><rect x="781.2" y="437" width="0.2" height="15.0" fill="rgb(213,155,44)" rx="2" ry="2" />
<text  x="784.17" y="447.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (2 samples, 0.04%)</title><rect x="33.5" y="645" width="0.5" height="15.0" fill="rgb(217,119,13)" rx="2" ry="2" />
<text  x="36.49" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="653.9" y="725" width="0.3" height="15.0" fill="rgb(239,75,33)" rx="2" ry="2" />
<text  x="656.95" y="735.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize::MapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="1091.2" y="757" width="0.2" height="15.0" fill="rgb(216,123,46)" rx="2" ry="2" />
<text  x="1094.16" y="767.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (10 samples, 0.21%)</title><rect x="833.0" y="421" width="2.5" height="15.0" fill="rgb(243,199,3)" rx="2" ry="2" />
<text  x="836.04" y="431.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (5 samples, 0.10%)</title><rect x="408.3" y="805" width="1.2" height="15.0" fill="rgb(230,23,11)" rx="2" ry="2" />
<text  x="411.31" y="815.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (45 samples, 0.93%)</title><rect x="782.4" y="453" width="11.0" height="15.0" fill="rgb(237,202,9)" rx="2" ry="2" />
<text  x="785.39" y="463.5" ></text>
</g>
<g >
<title>allocate_slab (3 samples, 0.06%)</title><rect x="185.7" y="453" width="0.7" height="15.0" fill="rgb(246,51,11)" rx="2" ry="2" />
<text  x="188.67" y="463.5" ></text>
</g>
<g >
<title>__vfs_getxattr (1 samples, 0.02%)</title><rect x="660.6" y="517" width="0.2" height="15.0" fill="rgb(205,115,19)" rx="2" ry="2" />
<text  x="663.55" y="527.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="1101.9" y="805" width="0.3" height="15.0" fill="rgb(245,226,1)" rx="2" ry="2" />
<text  x="1104.92" y="815.5" ></text>
</g>
<g >
<title>__set_page_dirty (12 samples, 0.25%)</title><rect x="228.7" y="517" width="3.0" height="15.0" fill="rgb(233,163,52)" rx="2" ry="2" />
<text  x="231.73" y="527.5" ></text>
</g>
<g >
<title>truncate_inode_page (1 samples, 0.02%)</title><rect x="1092.9" y="677" width="0.2" height="15.0" fill="rgb(254,53,26)" rx="2" ry="2" />
<text  x="1095.87" y="687.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="1092.9" y="805" width="0.2" height="15.0" fill="rgb(227,106,42)" rx="2" ry="2" />
<text  x="1095.87" y="815.5" ></text>
</g>
<g >
<title>iput.part.0 (96 samples, 1.99%)</title><rect x="770.2" y="709" width="23.4" height="15.0" fill="rgb(253,223,33)" rx="2" ry="2" />
<text  x="773.16" y="719.5" >i..</text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="888.3" y="149" width="0.3" height="15.0" fill="rgb(240,100,38)" rx="2" ry="2" />
<text  x="891.33" y="159.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1104.1" y="965" width="0.3" height="15.0" fill="rgb(206,138,41)" rx="2" ry="2" />
<text  x="1107.12" y="975.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (14 samples, 0.29%)</title><rect x="916.2" y="389" width="3.4" height="15.0" fill="rgb(250,68,34)" rx="2" ry="2" />
<text  x="919.22" y="399.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1100.7" y="917" width="0.2" height="15.0" fill="rgb(207,83,15)" rx="2" ry="2" />
<text  x="1103.70" y="927.5" ></text>
</g>
<g >
<title>__fput (5 samples, 0.10%)</title><rect x="654.9" y="533" width="1.2" height="15.0" fill="rgb(217,115,54)" rx="2" ry="2" />
<text  x="657.93" y="543.5" ></text>
</g>
<g >
<title>__getblk_gfp (4 samples, 0.08%)</title><rect x="246.3" y="453" width="1.0" height="15.0" fill="rgb(235,99,45)" rx="2" ry="2" />
<text  x="249.34" y="463.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="109.1" y="437" width="0.2" height="15.0" fill="rgb(208,143,32)" rx="2" ry="2" />
<text  x="112.09" y="447.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="1164.6" y="709" width="0.2" height="15.0" fill="rgb(216,116,53)" rx="2" ry="2" />
<text  x="1167.56" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (5 samples, 0.10%)</title><rect x="108.4" y="901" width="1.2" height="15.0" fill="rgb(221,105,20)" rx="2" ry="2" />
<text  x="111.35" y="911.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9 samples, 0.19%)</title><rect x="1167.7" y="821" width="2.2" height="15.0" fill="rgb(237,77,19)" rx="2" ry="2" />
<text  x="1170.74" y="831.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (8 samples, 0.17%)</title><rect x="47.7" y="933" width="1.9" height="15.0" fill="rgb(232,9,45)" rx="2" ry="2" />
<text  x="50.68" y="943.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="711.4" y="469" width="0.3" height="15.0" fill="rgb(210,162,46)" rx="2" ry="2" />
<text  x="714.44" y="479.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (1 samples, 0.02%)</title><rect x="169.5" y="805" width="0.3" height="15.0" fill="rgb(217,118,10)" rx="2" ry="2" />
<text  x="172.52" y="815.5" ></text>
</g>
<g >
<title>scheduler_tick (3 samples, 0.06%)</title><rect x="1165.5" y="693" width="0.8" height="15.0" fill="rgb(242,13,3)" rx="2" ry="2" />
<text  x="1168.53" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::try_statx (9 samples, 0.19%)</title><rect x="732.0" y="789" width="2.2" height="15.0" fill="rgb(226,148,17)" rx="2" ry="2" />
<text  x="734.99" y="799.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (3 samples, 0.06%)</title><rect x="108.8" y="853" width="0.8" height="15.0" fill="rgb(206,185,45)" rx="2" ry="2" />
<text  x="111.84" y="863.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 0.08%)</title><rect x="863.1" y="341" width="1.0" height="15.0" fill="rgb(240,152,17)" rx="2" ry="2" />
<text  x="866.13" y="351.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (2 samples, 0.04%)</title><rect x="773.1" y="437" width="0.5" height="15.0" fill="rgb(208,8,48)" rx="2" ry="2" />
<text  x="776.10" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.10%)</title><rect x="763.3" y="757" width="1.2" height="15.0" fill="rgb(216,69,36)" rx="2" ry="2" />
<text  x="766.31" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.21%)</title><rect x="833.0" y="325" width="2.5" height="15.0" fill="rgb(233,16,54)" rx="2" ry="2" />
<text  x="836.04" y="335.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="799.8" y="485" width="0.2" height="15.0" fill="rgb(214,181,48)" rx="2" ry="2" />
<text  x="802.77" y="495.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (2 samples, 0.04%)</title><rect x="676.9" y="501" width="0.5" height="15.0" fill="rgb(236,11,43)" rx="2" ry="2" />
<text  x="679.95" y="511.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (1 samples, 0.02%)</title><rect x="108.6" y="661" width="0.2" height="15.0" fill="rgb(231,46,0)" rx="2" ry="2" />
<text  x="111.60" y="671.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.02%)</title><rect x="809.8" y="693" width="0.2" height="15.0" fill="rgb(211,48,17)" rx="2" ry="2" />
<text  x="812.80" y="703.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="813.7" y="469" width="0.3" height="15.0" fill="rgb(222,111,37)" rx="2" ry="2" />
<text  x="816.71" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_poll (3 samples, 0.06%)</title><rect x="1101.2" y="997" width="0.7" height="15.0" fill="rgb(215,131,49)" rx="2" ry="2" />
<text  x="1104.19" y="1007.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.02%)</title><rect x="103.7" y="821" width="0.2" height="15.0" fill="rgb(229,30,50)" rx="2" ry="2" />
<text  x="106.71" y="831.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="33.7" y="565" width="0.3" height="15.0" fill="rgb(239,139,5)" rx="2" ry="2" />
<text  x="36.73" y="575.5" ></text>
</g>
<g >
<title>ext4_rename_delete (2 samples, 0.04%)</title><rect x="751.8" y="469" width="0.5" height="15.0" fill="rgb(214,156,13)" rx="2" ry="2" />
<text  x="754.81" y="479.5" ></text>
</g>
<g >
<title>__memcg_kmem_uncharge (2 samples, 0.04%)</title><rect x="791.7" y="277" width="0.5" height="15.0" fill="rgb(253,115,46)" rx="2" ry="2" />
<text  x="794.69" y="287.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (269 samples, 5.58%)</title><rect x="876.1" y="501" width="65.8" height="15.0" fill="rgb(208,48,48)" rx="2" ry="2" />
<text  x="879.10" y="511.5" >&lt;serde_..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1017.5" y="837" width="0.3" height="15.0" fill="rgb(230,74,25)" rx="2" ry="2" />
<text  x="1020.51" y="847.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="152.9" y="709" width="0.2" height="15.0" fill="rgb(253,202,1)" rx="2" ry="2" />
<text  x="155.88" y="719.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (56 samples, 1.16%)</title><rect x="950.0" y="437" width="13.7" height="15.0" fill="rgb(225,179,35)" rx="2" ry="2" />
<text  x="952.99" y="447.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (3 samples, 0.06%)</title><rect x="826.2" y="517" width="0.7" height="15.0" fill="rgb(227,172,52)" rx="2" ry="2" />
<text  x="829.19" y="527.5" ></text>
</g>
<g >
<title>__inc_node_page_state (1 samples, 0.02%)</title><rect x="709.7" y="485" width="0.3" height="15.0" fill="rgb(242,31,51)" rx="2" ry="2" />
<text  x="712.73" y="495.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.10%)</title><rect x="810.8" y="629" width="1.2" height="15.0" fill="rgb(209,83,11)" rx="2" ry="2" />
<text  x="813.78" y="639.5" ></text>
</g>
<g >
<title>refill_obj_stock (1 samples, 0.02%)</title><rect x="1106.8" y="853" width="0.3" height="15.0" fill="rgb(250,132,42)" rx="2" ry="2" />
<text  x="1109.82" y="863.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (2 samples, 0.04%)</title><rect x="740.1" y="453" width="0.5" height="15.0" fill="rgb(246,147,27)" rx="2" ry="2" />
<text  x="743.07" y="463.5" ></text>
</g>
<g >
<title>__add_wb_stat (1 samples, 0.02%)</title><rect x="231.2" y="485" width="0.2" height="15.0" fill="rgb(219,159,6)" rx="2" ry="2" />
<text  x="234.17" y="495.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge (1 samples, 0.02%)</title><rect x="754.7" y="469" width="0.3" height="15.0" fill="rgb(207,117,7)" rx="2" ry="2" />
<text  x="757.75" y="479.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect x="810.0" y="725" width="0.3" height="15.0" fill="rgb(225,139,28)" rx="2" ry="2" />
<text  x="813.04" y="735.5" ></text>
</g>
<g >
<title>filename_lookup (7 samples, 0.15%)</title><rect x="756.2" y="661" width="1.7" height="15.0" fill="rgb(239,85,12)" rx="2" ry="2" />
<text  x="759.22" y="671.5" ></text>
</g>
<g >
<title>generic_perform_write (333 samples, 6.90%)</title><rect x="174.2" y="597" width="81.4" height="15.0" fill="rgb(241,78,0)" rx="2" ry="2" />
<text  x="177.17" y="607.5" >generic_p..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="46.5" y="725" width="0.2" height="15.0" fill="rgb(206,75,12)" rx="2" ry="2" />
<text  x="49.45" y="735.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="657.4" y="693" width="0.2" height="15.0" fill="rgb(251,138,11)" rx="2" ry="2" />
<text  x="660.37" y="703.5" ></text>
</g>
<g >
<title>event_function_call (67 samples, 1.39%)</title><rect x="13.7" y="805" width="16.4" height="15.0" fill="rgb(217,54,16)" rx="2" ry="2" />
<text  x="16.67" y="815.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (13 samples, 0.27%)</title><rect x="154.1" y="853" width="3.2" height="15.0" fill="rgb(217,51,46)" rx="2" ry="2" />
<text  x="157.11" y="863.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (4 samples, 0.08%)</title><rect x="32.5" y="645" width="1.0" height="15.0" fill="rgb(252,48,29)" rx="2" ry="2" />
<text  x="35.51" y="655.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="657.4" y="725" width="0.2" height="15.0" fill="rgb(233,220,30)" rx="2" ry="2" />
<text  x="660.37" y="735.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="657.6" y="677" width="0.3" height="15.0" fill="rgb(212,82,30)" rx="2" ry="2" />
<text  x="660.62" y="687.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="1092.1" y="837" width="0.3" height="15.0" fill="rgb(238,224,10)" rx="2" ry="2" />
<text  x="1095.14" y="847.5" ></text>
</g>
<g >
<title>vfs_unlink (61 samples, 1.26%)</title><rect x="793.9" y="725" width="14.9" height="15.0" fill="rgb(219,211,26)" rx="2" ry="2" />
<text  x="796.89" y="735.5" ></text>
</g>
<g >
<title>cpuidle_select (3 samples, 0.06%)</title><rect x="1184.9" y="885" width="0.7" height="15.0" fill="rgb(241,27,46)" rx="2" ry="2" />
<text  x="1187.86" y="895.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="1101.9" y="917" width="0.3" height="15.0" fill="rgb(249,9,52)" rx="2" ry="2" />
<text  x="1104.92" y="927.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.06%)</title><rect x="795.1" y="549" width="0.8" height="15.0" fill="rgb(215,12,46)" rx="2" ry="2" />
<text  x="798.12" y="559.5" ></text>
</g>
<g >
<title>ip_list_rcv_finish.constprop.0 (2 samples, 0.04%)</title><rect x="1112.9" y="677" width="0.5" height="15.0" fill="rgb(244,122,30)" rx="2" ry="2" />
<text  x="1115.93" y="687.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.06%)</title><rect x="108.8" y="789" width="0.8" height="15.0" fill="rgb(238,34,30)" rx="2" ry="2" />
<text  x="111.84" y="799.5" ></text>
</g>
<g >
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="802.9" y="533" width="0.3" height="15.0" fill="rgb(219,219,44)" rx="2" ry="2" />
<text  x="805.95" y="543.5" ></text>
</g>
<g >
<title>wake_up_bit (1 samples, 0.02%)</title><rect x="126.9" y="437" width="0.3" height="15.0" fill="rgb(231,7,8)" rx="2" ry="2" />
<text  x="129.95" y="447.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.06%)</title><rect x="1007.2" y="517" width="0.8" height="15.0" fill="rgb(211,135,27)" rx="2" ry="2" />
<text  x="1010.24" y="527.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (902 samples, 18.70%)</title><rect x="433.3" y="853" width="220.6" height="15.0" fill="rgb(229,103,6)" rx="2" ry="2" />
<text  x="436.26" y="863.5" >ringbuf::producer::Producer&lt;T..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="10.2" y="885" width="0.3" height="15.0" fill="rgb(230,80,17)" rx="2" ry="2" />
<text  x="13.24" y="895.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (3 samples, 0.06%)</title><rect x="108.8" y="597" width="0.8" height="15.0" fill="rgb(227,69,11)" rx="2" ry="2" />
<text  x="111.84" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (17 samples, 0.35%)</title><rect x="852.9" y="213" width="4.1" height="15.0" fill="rgb(208,109,31)" rx="2" ry="2" />
<text  x="855.86" y="223.5" ></text>
</g>
<g >
<title>libc::unix::linux_like::linux::makedev (1 samples, 0.02%)</title><rect x="732.0" y="773" width="0.2" height="15.0" fill="rgb(209,229,22)" rx="2" ry="2" />
<text  x="734.99" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="153.1" y="789" width="0.3" height="15.0" fill="rgb(236,99,36)" rx="2" ry="2" />
<text  x="156.13" y="799.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (3 samples, 0.06%)</title><rect x="31.8" y="645" width="0.7" height="15.0" fill="rgb(242,81,28)" rx="2" ry="2" />
<text  x="34.77" y="655.5" ></text>
</g>
<g >
<title>std::fs::remove_file (1 samples, 0.02%)</title><rect x="103.7" y="789" width="0.2" height="15.0" fill="rgb(206,89,0)" rx="2" ry="2" />
<text  x="106.71" y="799.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (2 samples, 0.04%)</title><rect x="1017.8" y="1013" width="0.4" height="15.0" fill="rgb(226,142,15)" rx="2" ry="2" />
<text  x="1020.76" y="1023.5" ></text>
</g>
<g >
<title>rustposix::interface::file::assert_is_allowed_filename (1 samples, 0.02%)</title><rect x="1016.3" y="1013" width="0.2" height="15.0" fill="rgb(233,18,5)" rx="2" ry="2" />
<text  x="1019.29" y="1023.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.02%)</title><rect x="203.0" y="485" width="0.3" height="15.0" fill="rgb(252,206,18)" rx="2" ry="2" />
<text  x="206.04" y="495.5" ></text>
</g>
<g >
<title>strncpy_from_user (1 samples, 0.02%)</title><rect x="761.6" y="613" width="0.2" height="15.0" fill="rgb(225,69,1)" rx="2" ry="2" />
<text  x="764.60" y="623.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.02%)</title><rect x="749.9" y="437" width="0.2" height="15.0" fill="rgb(224,81,0)" rx="2" ry="2" />
<text  x="752.85" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1091.2" y="533" width="0.2" height="15.0" fill="rgb(226,60,43)" rx="2" ry="2" />
<text  x="1094.16" y="543.5" ></text>
</g>
<g >
<title>std::fs::remove_file (1 samples, 0.02%)</title><rect x="1090.2" y="773" width="0.2" height="15.0" fill="rgb(234,33,31)" rx="2" ry="2" />
<text  x="1093.18" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="731.0" y="725" width="0.3" height="15.0" fill="rgb(243,214,38)" rx="2" ry="2" />
<text  x="734.02" y="735.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="770.4" y="677" width="0.3" height="15.0" fill="rgb(229,43,31)" rx="2" ry="2" />
<text  x="773.41" y="687.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.02%)</title><rect x="103.7" y="661" width="0.2" height="15.0" fill="rgb(232,44,9)" rx="2" ry="2" />
<text  x="106.71" y="671.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="722.7" y="501" width="0.2" height="15.0" fill="rgb(209,223,14)" rx="2" ry="2" />
<text  x="725.70" y="511.5" ></text>
</g>
<g >
<title>ovl_lookup_layer (2 samples, 0.04%)</title><rect x="761.1" y="549" width="0.5" height="15.0" fill="rgb(234,6,50)" rx="2" ry="2" />
<text  x="764.11" y="559.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="169.3" y="613" width="0.2" height="15.0" fill="rgb(247,162,50)" rx="2" ry="2" />
<text  x="172.27" y="623.5" ></text>
</g>
<g >
<title>update_process_times (5 samples, 0.10%)</title><rect x="1165.0" y="709" width="1.3" height="15.0" fill="rgb(214,41,29)" rx="2" ry="2" />
<text  x="1168.04" y="719.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (9 samples, 0.19%)</title><rect x="1113.9" y="901" width="2.2" height="15.0" fill="rgb(229,1,31)" rx="2" ry="2" />
<text  x="1116.91" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="1006.7" y="485" width="0.5" height="15.0" fill="rgb(231,21,34)" rx="2" ry="2" />
<text  x="1009.75" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_write (5 samples, 0.10%)</title><rect x="1102.2" y="997" width="1.2" height="15.0" fill="rgb(244,166,44)" rx="2" ry="2" />
<text  x="1105.17" y="1007.5" ></text>
</g>
<g >
<title>ovl_unlink (59 samples, 1.22%)</title><rect x="794.4" y="709" width="14.4" height="15.0" fill="rgb(210,199,8)" rx="2" ry="2" />
<text  x="797.38" y="719.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 0.08%)</title><rect x="46.7" y="933" width="1.0" height="15.0" fill="rgb(229,124,2)" rx="2" ry="2" />
<text  x="49.70" y="943.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="837.0" y="325" width="0.2" height="15.0" fill="rgb(232,35,6)" rx="2" ry="2" />
<text  x="839.95" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="840.4" y="149" width="0.2" height="15.0" fill="rgb(218,87,8)" rx="2" ry="2" />
<text  x="843.38" y="159.5" ></text>
</g>
<g >
<title>irq_exit_rcu (6 samples, 0.12%)</title><rect x="1114.6" y="885" width="1.5" height="15.0" fill="rgb(208,113,15)" rx="2" ry="2" />
<text  x="1117.64" y="895.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (24 samples, 0.50%)</title><rect x="96.6" y="1013" width="5.9" height="15.0" fill="rgb(226,69,16)" rx="2" ry="2" />
<text  x="99.61" y="1023.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="1112.9" y="517" width="0.3" height="15.0" fill="rgb(237,154,20)" rx="2" ry="2" />
<text  x="1115.93" y="527.5" ></text>
</g>
<g >
<title>ext4_ext_map_blocks (3 samples, 0.06%)</title><rect x="677.4" y="501" width="0.8" height="15.0" fill="rgb(214,85,23)" rx="2" ry="2" />
<text  x="680.44" y="511.5" ></text>
</g>
<g >
<title>_perf_event_enable (67 samples, 1.39%)</title><rect x="13.7" y="821" width="16.4" height="15.0" fill="rgb(209,44,15)" rx="2" ry="2" />
<text  x="16.67" y="831.5" ></text>
</g>
<g >
<title>file_update_time (2 samples, 0.04%)</title><rect x="173.7" y="581" width="0.5" height="15.0" fill="rgb(206,183,20)" rx="2" ry="2" />
<text  x="176.68" y="591.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (4 samples, 0.08%)</title><rect x="1112.9" y="757" width="1.0" height="15.0" fill="rgb(226,196,24)" rx="2" ry="2" />
<text  x="1115.93" y="767.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (5 samples, 0.10%)</title><rect x="194.2" y="501" width="1.3" height="15.0" fill="rgb(226,120,12)" rx="2" ry="2" />
<text  x="197.23" y="511.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (173 samples, 3.59%)</title><rect x="128.7" y="901" width="42.3" height="15.0" fill="rgb(218,197,46)" rx="2" ry="2" />
<text  x="131.66" y="911.5" >rus..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (10 samples, 0.21%)</title><rect x="833.0" y="229" width="2.5" height="15.0" fill="rgb(218,79,1)" rx="2" ry="2" />
<text  x="836.04" y="239.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="767.7" y="709" width="0.3" height="15.0" fill="rgb(207,85,26)" rx="2" ry="2" />
<text  x="770.72" y="719.5" ></text>
</g>
<g >
<title>cap_inode_need_killpriv (1 samples, 0.02%)</title><rect x="660.6" y="533" width="0.2" height="15.0" fill="rgb(206,21,36)" rx="2" ry="2" />
<text  x="663.55" y="543.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.0 (3 samples, 0.06%)</title><rect x="720.0" y="437" width="0.7" height="15.0" fill="rgb(236,57,26)" rx="2" ry="2" />
<text  x="723.01" y="447.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="813.7" y="549" width="0.3" height="15.0" fill="rgb(251,47,42)" rx="2" ry="2" />
<text  x="816.71" y="559.5" ></text>
</g>
<g >
<title>alloc_buffer_head (25 samples, 0.52%)</title><rect x="669.1" y="501" width="6.1" height="15.0" fill="rgb(242,90,1)" rx="2" ry="2" />
<text  x="672.12" y="511.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="774.6" y="405" width="0.2" height="15.0" fill="rgb(223,212,2)" rx="2" ry="2" />
<text  x="777.57" y="415.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (5 samples, 0.10%)</title><rect x="772.4" y="485" width="1.2" height="15.0" fill="rgb(209,11,33)" rx="2" ry="2" />
<text  x="775.36" y="495.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.02%)</title><rect x="35.7" y="725" width="0.2" height="15.0" fill="rgb(213,150,11)" rx="2" ry="2" />
<text  x="38.69" y="735.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.02%)</title><rect x="810.0" y="629" width="0.3" height="15.0" fill="rgb(253,173,48)" rx="2" ry="2" />
<text  x="813.04" y="639.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="1089.9" y="837" width="0.3" height="15.0" fill="rgb(231,156,38)" rx="2" ry="2" />
<text  x="1092.93" y="847.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="762.8" y="741" width="0.3" height="15.0" fill="rgb(206,221,4)" rx="2" ry="2" />
<text  x="765.82" y="751.5" ></text>
</g>
<g >
<title>NaClXCondVarTimedWaitRelative (1 samples, 0.02%)</title><rect x="171.5" y="965" width="0.2" height="15.0" fill="rgb(241,88,13)" rx="2" ry="2" />
<text  x="174.48" y="975.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (152 samples, 3.15%)</title><rect x="963.9" y="453" width="37.2" height="15.0" fill="rgb(221,7,52)" rx="2" ry="2" />
<text  x="966.93" y="463.5" >ser..</text>
</g>
<g >
<title>putname (1 samples, 0.02%)</title><rect x="757.7" y="645" width="0.2" height="15.0" fill="rgb(252,73,24)" rx="2" ry="2" />
<text  x="760.68" y="655.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (2 samples, 0.04%)</title><rect x="247.3" y="517" width="0.5" height="15.0" fill="rgb(210,147,13)" rx="2" ry="2" />
<text  x="250.32" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (1 samples, 0.02%)</title><rect x="109.3" y="565" width="0.3" height="15.0" fill="rgb(248,94,22)" rx="2" ry="2" />
<text  x="112.33" y="575.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="1167.7" y="709" width="0.3" height="15.0" fill="rgb(206,206,7)" rx="2" ry="2" />
<text  x="1170.74" y="719.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="739.1" y="485" width="0.2" height="15.0" fill="rgb(244,203,4)" rx="2" ry="2" />
<text  x="742.09" y="495.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_constants::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::syscalls::fs_constants::DevNo&gt;::serialize (1 samples, 0.02%)</title><rect x="831.6" y="517" width="0.2" height="15.0" fill="rgb(208,213,41)" rx="2" ry="2" />
<text  x="834.57" y="527.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (12 samples, 0.25%)</title><rect x="220.7" y="565" width="2.9" height="15.0" fill="rgb(214,64,34)" rx="2" ry="2" />
<text  x="223.65" y="575.5" ></text>
</g>
<g >
<title>ext4_get_reserved_space (1 samples, 0.02%)</title><rect x="679.6" y="469" width="0.3" height="15.0" fill="rgb(241,121,13)" rx="2" ry="2" />
<text  x="682.64" y="479.5" ></text>
</g>
<g >
<title>__vfs_getxattr (3 samples, 0.06%)</title><rect x="659.3" y="613" width="0.8" height="15.0" fill="rgb(234,155,24)" rx="2" ry="2" />
<text  x="662.33" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1017.0" y="965" width="0.3" height="15.0" fill="rgb(239,152,32)" rx="2" ry="2" />
<text  x="1020.02" y="975.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="731.5" y="757" width="0.2" height="15.0" fill="rgb(216,136,19)" rx="2" ry="2" />
<text  x="734.51" y="767.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="108.1" y="837" width="0.3" height="15.0" fill="rgb(223,51,47)" rx="2" ry="2" />
<text  x="111.11" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="52.6" y="1013" width="0.2" height="15.0" fill="rgb(233,85,17)" rx="2" ry="2" />
<text  x="55.57" y="1023.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="813.7" y="501" width="0.3" height="15.0" fill="rgb(212,182,14)" rx="2" ry="2" />
<text  x="816.71" y="511.5" ></text>
</g>
<g >
<title>sched_autogroup_exit_task (1 samples, 0.02%)</title><rect x="1092.6" y="885" width="0.3" height="15.0" fill="rgb(252,63,25)" rx="2" ry="2" />
<text  x="1095.62" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.44%)</title><rect x="30.6" y="853" width="5.1" height="15.0" fill="rgb(228,28,51)" rx="2" ry="2" />
<text  x="33.55" y="863.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.02%)</title><rect x="1090.2" y="805" width="0.2" height="15.0" fill="rgb(205,85,49)" rx="2" ry="2" />
<text  x="1093.18" y="815.5" ></text>
</g>
<g >
<title>add_dirent_to_buf (2 samples, 0.04%)</title><rect x="745.5" y="437" width="0.4" height="15.0" fill="rgb(240,64,20)" rx="2" ry="2" />
<text  x="748.45" y="447.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.08%)</title><rect x="820.8" y="565" width="1.0" height="15.0" fill="rgb(248,137,10)" rx="2" ry="2" />
<text  x="823.81" y="575.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.02%)</title><rect x="34.7" y="629" width="0.3" height="15.0" fill="rgb(249,30,29)" rx="2" ry="2" />
<text  x="37.71" y="639.5" ></text>
</g>
<g >
<title>free_buffer_head (16 samples, 0.33%)</title><rect x="123.0" y="373" width="3.9" height="15.0" fill="rgb(216,79,48)" rx="2" ry="2" />
<text  x="126.03" y="383.5" ></text>
</g>
<g >
<title>page_mapped (1 samples, 0.02%)</title><rect x="781.9" y="453" width="0.3" height="15.0" fill="rgb(246,3,40)" rx="2" ry="2" />
<text  x="784.91" y="463.5" ></text>
</g>
<g >
<title>seq_read_iter (1 samples, 0.02%)</title><rect x="30.3" y="805" width="0.3" height="15.0" fill="rgb(240,184,41)" rx="2" ry="2" />
<text  x="33.31" y="815.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="800.0" y="517" width="0.3" height="15.0" fill="rgb(219,197,20)" rx="2" ry="2" />
<text  x="803.01" y="527.5" ></text>
</g>
<g >
<title>ipv6_list_rcv (1 samples, 0.02%)</title><rect x="1113.7" y="709" width="0.2" height="15.0" fill="rgb(208,17,34)" rx="2" ry="2" />
<text  x="1116.67" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (767 samples, 15.90%)</title><rect x="821.8" y="581" width="187.6" height="15.0" fill="rgb(240,92,10)" rx="2" ry="2" />
<text  x="824.79" y="591.5" >rustposix::safeposix::fi..</text>
</g>
<g >
<title>lind_exit (5 samples, 0.10%)</title><rect x="108.4" y="965" width="1.2" height="15.0" fill="rgb(244,196,6)" rx="2" ry="2" />
<text  x="111.35" y="975.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (1 samples, 0.02%)</title><rect x="35.9" y="949" width="0.3" height="15.0" fill="rgb(216,203,48)" rx="2" ry="2" />
<text  x="38.93" y="959.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.62%)</title><rect x="907.9" y="389" width="7.3" height="15.0" fill="rgb(216,21,31)" rx="2" ry="2" />
<text  x="910.91" y="399.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="798.5" y="597" width="0.3" height="15.0" fill="rgb(238,12,48)" rx="2" ry="2" />
<text  x="801.54" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="658.1" y="837" width="0.5" height="15.0" fill="rgb(238,157,14)" rx="2" ry="2" />
<text  x="661.11" y="847.5" ></text>
</g>
<g >
<title>copy_page_from_iter (1 samples, 0.02%)</title><rect x="1017.3" y="885" width="0.2" height="15.0" fill="rgb(229,221,21)" rx="2" ry="2" />
<text  x="1020.27" y="895.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (4 samples, 0.08%)</title><rect x="769.2" y="693" width="1.0" height="15.0" fill="rgb(253,110,44)" rx="2" ry="2" />
<text  x="772.18" y="703.5" ></text>
</g>
<g >
<title>ext4_bread_batch (2 samples, 0.04%)</title><rect x="750.1" y="437" width="0.5" height="15.0" fill="rgb(210,192,24)" rx="2" ry="2" />
<text  x="753.10" y="447.5" ></text>
</g>
<g >
<title>all (4,823 samples, 100%)</title><rect x="10.0" y="1061" width="1180.0" height="15.0" fill="rgb(215,172,28)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" ></text>
</g>
<g >
<title>__ext4_new_inode (1 samples, 0.02%)</title><rect x="1090.2" y="549" width="0.2" height="15.0" fill="rgb(209,165,5)" rx="2" ry="2" />
<text  x="1093.18" y="559.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.02%)</title><rect x="32.0" y="565" width="0.3" height="15.0" fill="rgb(236,171,0)" rx="2" ry="2" />
<text  x="35.02" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (1 samples, 0.02%)</title><rect x="103.7" y="853" width="0.2" height="15.0" fill="rgb(243,228,32)" rx="2" ry="2" />
<text  x="106.71" y="863.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (3 samples, 0.06%)</title><rect x="1090.4" y="949" width="0.8" height="15.0" fill="rgb(236,168,22)" rx="2" ry="2" />
<text  x="1093.42" y="959.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="762.8" y="837" width="0.3" height="15.0" fill="rgb(233,69,39)" rx="2" ry="2" />
<text  x="765.82" y="847.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="721.7" y="437" width="0.3" height="15.0" fill="rgb(217,183,24)" rx="2" ry="2" />
<text  x="724.72" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="103.7" y="725" width="0.2" height="15.0" fill="rgb(212,13,1)" rx="2" ry="2" />
<text  x="106.71" y="735.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (32 samples, 0.66%)</title><rect x="224.6" y="549" width="7.8" height="15.0" fill="rgb(209,78,44)" rx="2" ry="2" />
<text  x="227.57" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.25%)</title><rect x="758.9" y="725" width="2.9" height="15.0" fill="rgb(214,25,46)" rx="2" ry="2" />
<text  x="761.91" y="735.5" ></text>
</g>
<g >
<title>[unknown]  (2 samples, 0.04%)</title><rect x="1016.5" y="1029" width="0.5" height="15.0" fill="rgb(232,185,50)" rx="2" ry="2" />
<text  x="1019.54" y="1039.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (170 samples, 3.52%)</title><rect x="662.3" y="565" width="41.6" height="15.0" fill="rgb(241,99,8)" rx="2" ry="2" />
<text  x="665.27" y="575.5" >ext..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.04%)</title><rect x="1090.7" y="773" width="0.5" height="15.0" fill="rgb(216,53,6)" rx="2" ry="2" />
<text  x="1093.67" y="783.5" ></text>
</g>
<g >
<title>exit_notify (1 samples, 0.02%)</title><rect x="1092.4" y="885" width="0.2" height="15.0" fill="rgb(218,218,26)" rx="2" ry="2" />
<text  x="1095.38" y="895.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="851.9" y="213" width="0.2" height="15.0" fill="rgb(221,69,44)" rx="2" ry="2" />
<text  x="854.88" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1158.4" y="869" width="0.3" height="15.0" fill="rgb(219,32,10)" rx="2" ry="2" />
<text  x="1161.44" y="879.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (7 samples, 0.15%)</title><rect x="38.9" y="981" width="1.7" height="15.0" fill="rgb(208,129,7)" rx="2" ry="2" />
<text  x="41.87" y="991.5" ></text>
</g>
<g >
<title>udp_rcv (1 samples, 0.02%)</title><rect x="1112.9" y="597" width="0.3" height="15.0" fill="rgb(230,166,4)" rx="2" ry="2" />
<text  x="1115.93" y="607.5" ></text>
</g>
<g >
<title>crypto_shash_update (2 samples, 0.04%)</title><rect x="743.2" y="437" width="0.5" height="15.0" fill="rgb(243,25,6)" rx="2" ry="2" />
<text  x="746.25" y="447.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (4 samples, 0.08%)</title><rect x="46.7" y="853" width="1.0" height="15.0" fill="rgb(214,25,18)" rx="2" ry="2" />
<text  x="49.70" y="863.5" ></text>
</g>
<g >
<title>security_path_mknod (1 samples, 0.02%)</title><rect x="738.4" y="565" width="0.2" height="15.0" fill="rgb(228,168,7)" rx="2" ry="2" />
<text  x="741.36" y="575.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.02%)</title><rect x="1185.6" y="821" width="0.2" height="15.0" fill="rgb(234,85,27)" rx="2" ry="2" />
<text  x="1188.60" y="831.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="722.5" y="501" width="0.2" height="15.0" fill="rgb(250,185,34)" rx="2" ry="2" />
<text  x="725.45" y="511.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (74 samples, 1.53%)</title><rect x="919.6" y="373" width="18.2" height="15.0" fill="rgb(224,132,25)" rx="2" ry="2" />
<text  x="922.65" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.21%)</title><rect x="654.2" y="629" width="2.4" height="15.0" fill="rgb(222,43,37)" rx="2" ry="2" />
<text  x="657.19" y="639.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="108.8" y="565" width="0.3" height="15.0" fill="rgb(208,198,16)" rx="2" ry="2" />
<text  x="111.84" y="575.5" ></text>
</g>
<g >
<title>NaClSysOpenDecoder (73 samples, 1.51%)</title><rect x="109.8" y="997" width="17.9" height="15.0" fill="rgb(238,229,39)" rx="2" ry="2" />
<text  x="112.82" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="108.6" y="805" width="0.2" height="15.0" fill="rgb(220,81,7)" rx="2" ry="2" />
<text  x="111.60" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.04%)</title><rect x="853.8" y="133" width="0.5" height="15.0" fill="rgb(221,6,21)" rx="2" ry="2" />
<text  x="856.84" y="143.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (340 samples, 7.05%)</title><rect x="172.9" y="821" width="83.2" height="15.0" fill="rgb(225,202,32)" rx="2" ry="2" />
<text  x="175.94" y="831.5" >std::sys:..</text>
</g>
<g >
<title>ext4_mark_iloc_dirty (3 samples, 0.06%)</title><rect x="772.4" y="469" width="0.7" height="15.0" fill="rgb(238,85,9)" rx="2" ry="2" />
<text  x="775.36" y="479.5" ></text>
</g>
<g >
<title>core_sys_select (1 samples, 0.02%)</title><rect x="1101.9" y="965" width="0.3" height="15.0" fill="rgb(217,161,46)" rx="2" ry="2" />
<text  x="1104.92" y="975.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.04%)</title><rect x="811.0" y="597" width="0.5" height="15.0" fill="rgb(237,126,0)" rx="2" ry="2" />
<text  x="814.02" y="607.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (2 samples, 0.04%)</title><rect x="1090.7" y="805" width="0.5" height="15.0" fill="rgb(209,225,14)" rx="2" ry="2" />
<text  x="1093.67" y="815.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.02%)</title><rect x="778.7" y="405" width="0.3" height="15.0" fill="rgb(239,111,51)" rx="2" ry="2" />
<text  x="781.72" y="415.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.06%)</title><rect x="689.7" y="421" width="0.7" height="15.0" fill="rgb(230,153,2)" rx="2" ry="2" />
<text  x="692.67" y="431.5" ></text>
</g>
<g >
<title>ext4_init_security (1 samples, 0.02%)</title><rect x="1090.2" y="533" width="0.2" height="15.0" fill="rgb(214,107,2)" rx="2" ry="2" />
<text  x="1093.18" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="831.6" y="325" width="0.2" height="15.0" fill="rgb(245,174,20)" rx="2" ry="2" />
<text  x="834.57" y="335.5" ></text>
</g>
<g >
<title>std::fs::canonicalize (19 samples, 0.39%)</title><rect x="763.1" y="837" width="4.6" height="15.0" fill="rgb(227,228,40)" rx="2" ry="2" />
<text  x="766.07" y="847.5" ></text>
</g>
<g >
<title>ovl_get_acl (1 samples, 0.02%)</title><rect x="769.2" y="597" width="0.2" height="15.0" fill="rgb(233,116,1)" rx="2" ry="2" />
<text  x="772.18" y="607.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (4 samples, 0.08%)</title><rect x="1110.2" y="837" width="1.0" height="15.0" fill="rgb(217,218,24)" rx="2" ry="2" />
<text  x="1113.24" y="847.5" ></text>
</g>
<g >
<title>cpuidle_enter (194 samples, 4.02%)</title><rect x="1110.0" y="949" width="47.5" height="15.0" fill="rgb(224,55,48)" rx="2" ry="2" />
<text  x="1113.00" y="959.5" >cpui..</text>
</g>
<g >
<title>__find_get_block (2 samples, 0.04%)</title><rect x="750.1" y="389" width="0.5" height="15.0" fill="rgb(226,107,15)" rx="2" ry="2" />
<text  x="753.10" y="399.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (97 samples, 2.01%)</title><rect x="409.5" y="821" width="23.8" height="15.0" fill="rgb(223,15,9)" rx="2" ry="2" />
<text  x="412.53" y="831.5" >r..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (7 samples, 0.15%)</title><rect x="50.9" y="885" width="1.7" height="15.0" fill="rgb(226,163,48)" rx="2" ry="2" />
<text  x="53.86" y="895.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (9 samples, 0.19%)</title><rect x="100.3" y="981" width="2.2" height="15.0" fill="rgb(251,185,13)" rx="2" ry="2" />
<text  x="103.28" y="991.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="169.3" y="629" width="0.2" height="15.0" fill="rgb(214,98,0)" rx="2" ry="2" />
<text  x="172.27" y="639.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (14 samples, 0.29%)</title><rect x="1164.3" y="789" width="3.4" height="15.0" fill="rgb(209,49,23)" rx="2" ry="2" />
<text  x="1167.31" y="799.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (1 samples, 0.02%)</title><rect x="1185.4" y="837" width="0.2" height="15.0" fill="rgb(249,212,17)" rx="2" ry="2" />
<text  x="1188.35" y="847.5" ></text>
</g>
<g >
<title>copyout (1 samples, 0.02%)</title><rect x="151.4" y="549" width="0.3" height="15.0" fill="rgb(231,14,17)" rx="2" ry="2" />
<text  x="154.41" y="559.5" ></text>
</g>
<g >
<title>vfs_getxattr_alloc (1 samples, 0.02%)</title><rect x="659.6" y="533" width="0.2" height="15.0" fill="rgb(216,149,33)" rx="2" ry="2" />
<text  x="662.57" y="543.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="716.6" y="437" width="0.2" height="15.0" fill="rgb(207,190,26)" rx="2" ry="2" />
<text  x="719.58" y="447.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (3 samples, 0.06%)</title><rect x="864.1" y="453" width="0.7" height="15.0" fill="rgb(212,139,42)" rx="2" ry="2" />
<text  x="867.11" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (1 samples, 0.02%)</title><rect x="108.6" y="837" width="0.2" height="15.0" fill="rgb(217,201,32)" rx="2" ry="2" />
<text  x="111.60" y="847.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (2 samples, 0.04%)</title><rect x="832.6" y="469" width="0.4" height="15.0" fill="rgb(209,153,40)" rx="2" ry="2" />
<text  x="835.55" y="479.5" ></text>
</g>
<g >
<title>native_write_cr4 (1 samples, 0.02%)</title><rect x="1169.9" y="821" width="0.3" height="15.0" fill="rgb(220,152,44)" rx="2" ry="2" />
<text  x="1172.94" y="831.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect x="1080.4" y="869" width="0.5" height="15.0" fill="rgb(208,199,33)" rx="2" ry="2" />
<text  x="1083.39" y="879.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="108.6" y="789" width="0.2" height="15.0" fill="rgb(254,59,9)" rx="2" ry="2" />
<text  x="111.60" y="799.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="740.1" y="437" width="0.2" height="15.0" fill="rgb(233,73,5)" rx="2" ry="2" />
<text  x="743.07" y="447.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="657.4" y="677" width="0.2" height="15.0" fill="rgb(207,25,2)" rx="2" ry="2" />
<text  x="660.37" y="687.5" ></text>
</g>
<g >
<title>tick_sched_timer (8 samples, 0.17%)</title><rect x="1164.6" y="741" width="1.9" height="15.0" fill="rgb(241,82,54)" rx="2" ry="2" />
<text  x="1167.56" y="751.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="653.9" y="677" width="0.3" height="15.0" fill="rgb(230,131,26)" rx="2" ry="2" />
<text  x="656.95" y="687.5" ></text>
</g>
<g >
<title>ovl_do_remove (59 samples, 1.22%)</title><rect x="794.4" y="693" width="14.4" height="15.0" fill="rgb(227,217,29)" rx="2" ry="2" />
<text  x="797.38" y="703.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="1017.3" y="853" width="0.2" height="15.0" fill="rgb(254,229,27)" rx="2" ry="2" />
<text  x="1020.27" y="863.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="865.1" y="389" width="0.2" height="15.0" fill="rgb(218,28,46)" rx="2" ry="2" />
<text  x="868.09" y="399.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="749.6" y="437" width="0.3" height="15.0" fill="rgb(234,116,23)" rx="2" ry="2" />
<text  x="752.61" y="447.5" ></text>
</g>
<g >
<title>pagecache_get_page (91 samples, 1.89%)</title><rect x="681.1" y="533" width="22.3" height="15.0" fill="rgb(221,130,21)" rx="2" ry="2" />
<text  x="684.11" y="543.5" >p..</text>
</g>
<g >
<title>___d_drop (2 samples, 0.04%)</title><rect x="794.4" y="645" width="0.5" height="15.0" fill="rgb(229,182,38)" rx="2" ry="2" />
<text  x="797.38" y="655.5" ></text>
</g>
<g >
<title>capable_wrt_inode_uidgid (1 samples, 0.02%)</title><rect x="801.2" y="597" width="0.3" height="15.0" fill="rgb(224,35,19)" rx="2" ry="2" />
<text  x="804.23" y="607.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (7 samples, 0.15%)</title><rect x="824.5" y="517" width="1.7" height="15.0" fill="rgb(219,78,4)" rx="2" ry="2" />
<text  x="827.48" y="527.5" ></text>
</g>
<g >
<title>do_unlinkat (1 samples, 0.02%)</title><rect x="809.3" y="757" width="0.3" height="15.0" fill="rgb(243,96,5)" rx="2" ry="2" />
<text  x="812.31" y="767.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.02%)</title><rect x="1017.0" y="885" width="0.3" height="15.0" fill="rgb(235,96,43)" rx="2" ry="2" />
<text  x="1020.02" y="895.5" ></text>
</g>
<g >
<title>generic_file_read_iter (85 samples, 1.76%)</title><rect x="132.1" y="613" width="20.8" height="15.0" fill="rgb(244,142,26)" rx="2" ry="2" />
<text  x="135.09" y="623.5" ></text>
</g>
<g >
<title>ext4_es_remove_extent (4 samples, 0.08%)</title><rect x="774.1" y="453" width="1.0" height="15.0" fill="rgb(250,135,6)" rx="2" ry="2" />
<text  x="777.08" y="463.5" ></text>
</g>
<g >
<title>ovl_create_object (68 samples, 1.41%)</title><rect x="738.6" y="565" width="16.6" height="15.0" fill="rgb(224,217,15)" rx="2" ry="2" />
<text  x="741.60" y="575.5" ></text>
</g>
<g >
<title>copy_fpregs_to_fpstate (1 samples, 0.02%)</title><rect x="171.5" y="901" width="0.2" height="15.0" fill="rgb(227,61,20)" rx="2" ry="2" />
<text  x="174.48" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="731.0" y="821" width="0.5" height="15.0" fill="rgb(238,80,1)" rx="2" ry="2" />
<text  x="734.02" y="831.5" ></text>
</g>
<g >
<title>vfs_mknod (1 samples, 0.02%)</title><rect x="1090.2" y="581" width="0.2" height="15.0" fill="rgb(241,212,15)" rx="2" ry="2" />
<text  x="1093.18" y="591.5" ></text>
</g>
<g >
<title>ext4_bread (2 samples, 0.04%)</title><rect x="803.9" y="517" width="0.5" height="15.0" fill="rgb(211,5,10)" rx="2" ry="2" />
<text  x="806.92" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1 samples, 0.02%)</title><rect x="865.6" y="533" width="0.2" height="15.0" fill="rgb(235,197,3)" rx="2" ry="2" />
<text  x="868.58" y="543.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (8 samples, 0.17%)</title><rect x="654.7" y="581" width="1.9" height="15.0" fill="rgb(231,208,10)" rx="2" ry="2" />
<text  x="657.68" y="591.5" ></text>
</g>
<g >
<title>do_open (7 samples, 0.15%)</title><rect x="735.9" y="613" width="1.7" height="15.0" fill="rgb(242,92,4)" rx="2" ry="2" />
<text  x="738.91" y="623.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="749.6" y="469" width="0.3" height="15.0" fill="rgb(211,222,30)" rx="2" ry="2" />
<text  x="752.61" y="479.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (24 samples, 0.50%)</title><rect x="226.5" y="533" width="5.9" height="15.0" fill="rgb(215,126,38)" rx="2" ry="2" />
<text  x="229.52" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="46.5" y="741" width="0.2" height="15.0" fill="rgb(216,161,12)" rx="2" ry="2" />
<text  x="49.45" y="751.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="731.0" y="693" width="0.3" height="15.0" fill="rgb(237,70,24)" rx="2" ry="2" />
<text  x="734.02" y="703.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="781.4" y="405" width="0.3" height="15.0" fill="rgb(251,34,19)" rx="2" ry="2" />
<text  x="784.42" y="415.5" ></text>
</g>
<g >
<title>open_last_lookups (72 samples, 1.49%)</title><rect x="737.6" y="613" width="17.6" height="15.0" fill="rgb(246,92,18)" rx="2" ry="2" />
<text  x="740.62" y="623.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (13 samples, 0.27%)</title><rect x="244.1" y="485" width="3.2" height="15.0" fill="rgb(209,15,19)" rx="2" ry="2" />
<text  x="247.14" y="495.5" ></text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.02%)</title><rect x="1014.8" y="613" width="0.3" height="15.0" fill="rgb(210,111,28)" rx="2" ry="2" />
<text  x="1017.82" y="623.5" ></text>
</g>
<g >
<title>wake_up_q (5 samples, 0.10%)</title><rect x="129.6" y="693" width="1.3" height="15.0" fill="rgb(237,35,22)" rx="2" ry="2" />
<text  x="132.64" y="703.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="201.8" y="485" width="0.3" height="15.0" fill="rgb(206,37,21)" rx="2" ry="2" />
<text  x="204.81" y="495.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="1115.9" y="693" width="0.2" height="15.0" fill="rgb(241,127,50)" rx="2" ry="2" />
<text  x="1118.87" y="703.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="653.9" y="757" width="0.3" height="15.0" fill="rgb(241,95,34)" rx="2" ry="2" />
<text  x="656.95" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::init (1 samples, 0.02%)</title><rect x="761.8" y="789" width="0.3" height="15.0" fill="rgb(221,17,29)" rx="2" ry="2" />
<text  x="764.84" y="799.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (4 samples, 0.08%)</title><rect x="1108.0" y="901" width="1.0" height="15.0" fill="rgb(217,62,28)" rx="2" ry="2" />
<text  x="1111.04" y="911.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="856.8" y="165" width="0.2" height="15.0" fill="rgb(240,39,50)" rx="2" ry="2" />
<text  x="859.77" y="175.5" ></text>
</g>
<g >
<title>ovl_lock_rename_workdir (2 samples, 0.04%)</title><rect x="808.3" y="661" width="0.5" height="15.0" fill="rgb(246,111,14)" rx="2" ry="2" />
<text  x="811.33" y="671.5" ></text>
</g>
<g >
<title>leave_mm (1 samples, 0.02%)</title><rect x="1169.9" y="853" width="0.3" height="15.0" fill="rgb(240,186,1)" rx="2" ry="2" />
<text  x="1172.94" y="863.5" ></text>
</g>
<g >
<title>free_buffer_head (1 samples, 0.02%)</title><rect x="121.3" y="389" width="0.3" height="15.0" fill="rgb(251,112,51)" rx="2" ry="2" />
<text  x="124.32" y="399.5" ></text>
</g>
<g >
<title>vfs_rename (19 samples, 0.39%)</title><rect x="749.6" y="517" width="4.7" height="15.0" fill="rgb(215,162,51)" rx="2" ry="2" />
<text  x="752.61" y="527.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (1 samples, 0.02%)</title><rect x="1169.2" y="741" width="0.2" height="15.0" fill="rgb(216,227,20)" rx="2" ry="2" />
<text  x="1172.20" y="751.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="33.2" y="549" width="0.3" height="15.0" fill="rgb(239,68,9)" rx="2" ry="2" />
<text  x="36.24" y="559.5" ></text>
</g>
<g >
<title>NaClHostDescClose (1 samples, 0.02%)</title><rect x="1090.2" y="901" width="0.2" height="15.0" fill="rgb(243,99,11)" rx="2" ry="2" />
<text  x="1093.18" y="911.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.04%)</title><rect x="733.0" y="629" width="0.5" height="15.0" fill="rgb(242,182,28)" rx="2" ry="2" />
<text  x="735.97" y="639.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="1091.9" y="949" width="0.2" height="15.0" fill="rgb(246,40,21)" rx="2" ry="2" />
<text  x="1094.89" y="959.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.04%)</title><rect x="1169.4" y="677" width="0.5" height="15.0" fill="rgb(220,166,29)" rx="2" ry="2" />
<text  x="1172.45" y="687.5" ></text>
</g>
<g >
<title>stop_this_handle (1 samples, 0.02%)</title><rect x="35.7" y="645" width="0.2" height="15.0" fill="rgb(246,25,12)" rx="2" ry="2" />
<text  x="38.69" y="655.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="693.3" y="469" width="0.3" height="15.0" fill="rgb(251,116,47)" rx="2" ry="2" />
<text  x="696.34" y="479.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="1093.1" y="1029" width="0.3" height="15.0" fill="rgb(224,102,25)" rx="2" ry="2" />
<text  x="1096.11" y="1039.5" ></text>
</g>
<g >
<title>ksys_write (339 samples, 7.03%)</title><rect x="173.2" y="741" width="82.9" height="15.0" fill="rgb(240,208,40)" rx="2" ry="2" />
<text  x="176.19" y="751.5" >ksys_write</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="1091.2" y="725" width="0.2" height="15.0" fill="rgb(239,220,28)" rx="2" ry="2" />
<text  x="1094.16" y="735.5" ></text>
</g>
<g >
<title>may_delete (1 samples, 0.02%)</title><rect x="794.1" y="709" width="0.3" height="15.0" fill="rgb(254,4,3)" rx="2" ry="2" />
<text  x="797.14" y="719.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="1112.9" y="373" width="0.3" height="15.0" fill="rgb(234,49,12)" rx="2" ry="2" />
<text  x="1115.93" y="383.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.02%)</title><rect x="107.9" y="917" width="0.2" height="15.0" fill="rgb(218,141,26)" rx="2" ry="2" />
<text  x="110.86" y="927.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.02%)</title><rect x="767.7" y="693" width="0.3" height="15.0" fill="rgb(240,143,29)" rx="2" ry="2" />
<text  x="770.72" y="703.5" ></text>
</g>
<g >
<title>schedule (6 samples, 0.12%)</title><rect x="1104.4" y="949" width="1.4" height="15.0" fill="rgb(239,4,27)" rx="2" ry="2" />
<text  x="1107.37" y="959.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect x="812.0" y="629" width="0.5" height="15.0" fill="rgb(214,211,1)" rx="2" ry="2" />
<text  x="815.00" y="639.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (1 samples, 0.02%)</title><rect x="747.7" y="389" width="0.2" height="15.0" fill="rgb(234,119,6)" rx="2" ry="2" />
<text  x="750.65" y="399.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (1 samples, 0.02%)</title><rect x="804.4" y="501" width="0.3" height="15.0" fill="rgb(228,5,2)" rx="2" ry="2" />
<text  x="807.41" y="511.5" ></text>
</g>
<g >
<title>new_inode (2 samples, 0.04%)</title><rect x="744.5" y="453" width="0.5" height="15.0" fill="rgb(207,119,51)" rx="2" ry="2" />
<text  x="747.47" y="463.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (152 samples, 3.15%)</title><rect x="963.9" y="485" width="37.2" height="15.0" fill="rgb(250,82,6)" rx="2" ry="2" />
<text  x="966.93" y="495.5" >ser..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="809.6" y="805" width="0.4" height="15.0" fill="rgb(245,3,54)" rx="2" ry="2" />
<text  x="812.55" y="815.5" ></text>
</g>
<g >
<title>attach_task (1 samples, 0.02%)</title><rect x="1167.7" y="693" width="0.3" height="15.0" fill="rgb(208,204,27)" rx="2" ry="2" />
<text  x="1170.74" y="703.5" ></text>
</g>
<g >
<title>std::sys_common::memchr::memchr (1 samples, 0.02%)</title><rect x="758.4" y="725" width="0.3" height="15.0" fill="rgb(221,86,18)" rx="2" ry="2" />
<text  x="761.42" y="735.5" ></text>
</g>
<g >
<title>dispatcher (3,448 samples, 71.49%)</title><rect x="172.5" y="917" width="843.5" height="15.0" fill="rgb(252,42,48)" rx="2" ry="2" />
<text  x="175.45" y="927.5" >dispatcher</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (3 samples, 0.06%)</title><rect x="829.4" y="501" width="0.7" height="15.0" fill="rgb(218,27,19)" rx="2" ry="2" />
<text  x="832.37" y="511.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="242.7" y="469" width="0.2" height="15.0" fill="rgb(236,31,25)" rx="2" ry="2" />
<text  x="245.67" y="479.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="888.3" y="277" width="0.3" height="15.0" fill="rgb(252,137,6)" rx="2" ry="2" />
<text  x="891.33" y="287.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="1091.2" y="837" width="0.2" height="15.0" fill="rgb(225,145,25)" rx="2" ry="2" />
<text  x="1094.16" y="847.5" ></text>
</g>
<g >
<title>down_write (2 samples, 0.04%)</title><rect x="753.5" y="485" width="0.5" height="15.0" fill="rgb(228,184,39)" rx="2" ry="2" />
<text  x="756.52" y="495.5" ></text>
</g>
<g >
<title>process_timeout (3 samples, 0.06%)</title><rect x="1115.4" y="773" width="0.7" height="15.0" fill="rgb(232,54,20)" rx="2" ry="2" />
<text  x="1118.38" y="783.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="862.9" y="101" width="0.2" height="15.0" fill="rgb(236,22,18)" rx="2" ry="2" />
<text  x="865.89" y="111.5" ></text>
</g>
<g >
<title>ovl_dentry_release (1 samples, 0.02%)</title><rect x="103.7" y="629" width="0.2" height="15.0" fill="rgb(243,174,39)" rx="2" ry="2" />
<text  x="106.71" y="639.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (477 samples, 9.89%)</title><rect x="292.8" y="821" width="116.7" height="15.0" fill="rgb(231,86,21)" rx="2" ry="2" />
<text  x="295.83" y="831.5" >ringbuf::produ..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="866.6" y="405" width="0.2" height="15.0" fill="rgb(216,185,3)" rx="2" ry="2" />
<text  x="869.56" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="742.5" y="453" width="0.3" height="15.0" fill="rgb(212,164,41)" rx="2" ry="2" />
<text  x="745.52" y="463.5" ></text>
</g>
<g >
<title>ext4_getblk (1 samples, 0.02%)</title><rect x="803.7" y="517" width="0.2" height="15.0" fill="rgb(248,140,31)" rx="2" ry="2" />
<text  x="806.68" y="527.5" ></text>
</g>
<g >
<title>ext4_fc_track_inode (1 samples, 0.02%)</title><rect x="713.2" y="485" width="0.2" height="15.0" fill="rgb(227,105,51)" rx="2" ry="2" />
<text  x="716.16" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.02%)</title><rect x="30.1" y="917" width="0.2" height="15.0" fill="rgb(247,124,35)" rx="2" ry="2" />
<text  x="33.06" y="927.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="1091.9" y="773" width="0.2" height="15.0" fill="rgb(221,209,4)" rx="2" ry="2" />
<text  x="1094.89" y="783.5" ></text>
</g>
<g >
<title>workingset_update_node (1 samples, 0.02%)</title><rect x="779.9" y="421" width="0.3" height="15.0" fill="rgb(244,55,42)" rx="2" ry="2" />
<text  x="782.95" y="431.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (2 samples, 0.04%)</title><rect x="795.4" y="533" width="0.5" height="15.0" fill="rgb(247,3,39)" rx="2" ry="2" />
<text  x="798.36" y="543.5" ></text>
</g>
<g >
<title>ext4_lookup.part.0 (7 samples, 0.15%)</title><rect x="796.1" y="581" width="1.7" height="15.0" fill="rgb(217,10,40)" rx="2" ry="2" />
<text  x="799.10" y="591.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1114.4" y="757" width="0.2" height="15.0" fill="rgb(239,191,40)" rx="2" ry="2" />
<text  x="1117.40" y="767.5" ></text>
</g>
<g >
<title>lru_cache_add (11 samples, 0.23%)</title><rect x="205.2" y="517" width="2.7" height="15.0" fill="rgb(239,210,2)" rx="2" ry="2" />
<text  x="208.24" y="527.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (37 samples, 0.77%)</title><rect x="40.6" y="1013" width="9.0" height="15.0" fill="rgb(242,136,26)" rx="2" ry="2" />
<text  x="43.58" y="1023.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (12 samples, 0.25%)</title><rect x="833.0" y="501" width="3.0" height="15.0" fill="rgb(225,21,24)" rx="2" ry="2" />
<text  x="836.04" y="511.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.02%)</title><rect x="1101.9" y="853" width="0.3" height="15.0" fill="rgb(240,172,9)" rx="2" ry="2" />
<text  x="1104.92" y="863.5" ></text>
</g>
<g >
<title>snprintf (2 samples, 0.04%)</title><rect x="748.9" y="501" width="0.5" height="15.0" fill="rgb(229,143,18)" rx="2" ry="2" />
<text  x="751.88" y="511.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (1 samples, 0.02%)</title><rect x="108.1" y="741" width="0.3" height="15.0" fill="rgb(254,173,38)" rx="2" ry="2" />
<text  x="111.11" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;std::fs::File&gt;&gt; (1 samples, 0.02%)</title><rect x="658.8" y="837" width="0.3" height="15.0" fill="rgb(250,139,15)" rx="2" ry="2" />
<text  x="661.84" y="847.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="705.8" y="501" width="0.3" height="15.0" fill="rgb(224,209,1)" rx="2" ry="2" />
<text  x="708.82" y="511.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="33.7" y="581" width="0.3" height="15.0" fill="rgb(250,212,53)" rx="2" ry="2" />
<text  x="36.73" y="591.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="1010.9" y="501" width="0.5" height="15.0" fill="rgb(251,5,16)" rx="2" ry="2" />
<text  x="1013.91" y="511.5" ></text>
</g>
<g >
<title>__destroy_inode (1 samples, 0.02%)</title><rect x="771.9" y="485" width="0.2" height="15.0" fill="rgb(241,86,18)" rx="2" ry="2" />
<text  x="774.87" y="495.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="775.8" y="469" width="0.2" height="15.0" fill="rgb(239,161,3)" rx="2" ry="2" />
<text  x="778.79" y="479.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (821 samples, 17.02%)</title><rect x="810.5" y="677" width="200.9" height="15.0" fill="rgb(233,64,14)" rx="2" ry="2" />
<text  x="813.53" y="687.5" >core::iter::traits::iterat..</text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="1113.7" y="469" width="0.2" height="15.0" fill="rgb(226,79,2)" rx="2" ry="2" />
<text  x="1116.67" y="479.5" ></text>
</g>
<g >
<title>update_curr (2 samples, 0.04%)</title><rect x="1101.2" y="837" width="0.5" height="15.0" fill="rgb(208,130,52)" rx="2" ry="2" />
<text  x="1104.19" y="847.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="1017.5" y="789" width="0.3" height="15.0" fill="rgb(230,17,44)" rx="2" ry="2" />
<text  x="1020.51" y="799.5" ></text>
</g>
<g >
<title>refill_stock (1 samples, 0.02%)</title><rect x="686.7" y="469" width="0.3" height="15.0" fill="rgb(220,205,5)" rx="2" ry="2" />
<text  x="689.73" y="479.5" ></text>
</g>
<g >
<title>do_readlinkat (9 samples, 0.19%)</title><rect x="764.8" y="709" width="2.2" height="15.0" fill="rgb(242,31,18)" rx="2" ry="2" />
<text  x="767.78" y="719.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="1101.9" y="933" width="0.3" height="15.0" fill="rgb(251,144,14)" rx="2" ry="2" />
<text  x="1104.92" y="943.5" ></text>
</g>
<g >
<title>do_iter_write (286 samples, 5.93%)</title><rect x="660.3" y="645" width="70.0" height="15.0" fill="rgb(222,78,27)" rx="2" ry="2" />
<text  x="663.31" y="655.5" >do_iter..</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.02%)</title><rect x="810.0" y="613" width="0.3" height="15.0" fill="rgb(212,73,48)" rx="2" ry="2" />
<text  x="813.04" y="623.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.02%)</title><rect x="750.3" y="373" width="0.3" height="15.0" fill="rgb(211,33,40)" rx="2" ry="2" />
<text  x="753.34" y="383.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (8 samples, 0.17%)</title><rect x="47.7" y="949" width="1.9" height="15.0" fill="rgb(231,32,34)" rx="2" ry="2" />
<text  x="50.68" y="959.5" ></text>
</g>
<g >
<title>prep_new_page (25 samples, 0.52%)</title><rect x="210.1" y="485" width="6.1" height="15.0" fill="rgb(222,136,10)" rx="2" ry="2" />
<text  x="213.13" y="495.5" ></text>
</g>
<g >
<title>ext4_file_getattr (2 samples, 0.04%)</title><rect x="733.7" y="597" width="0.5" height="15.0" fill="rgb(216,132,52)" rx="2" ry="2" />
<text  x="736.71" y="607.5" ></text>
</g>
<g >
<title>__free_one_page (3 samples, 0.06%)</title><rect x="111.8" y="405" width="0.7" height="15.0" fill="rgb(211,225,10)" rx="2" ry="2" />
<text  x="114.78" y="415.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.02%)</title><rect x="1186.3" y="901" width="0.3" height="15.0" fill="rgb(242,170,2)" rx="2" ry="2" />
<text  x="1189.33" y="911.5" ></text>
</g>
<g >
<title>ovl_open (5 samples, 0.10%)</title><rect x="735.9" y="565" width="1.2" height="15.0" fill="rgb(233,86,36)" rx="2" ry="2" />
<text  x="738.91" y="575.5" ></text>
</g>
<g >
<title>generic_exec_single (64 samples, 1.33%)</title><rect x="14.4" y="773" width="15.7" height="15.0" fill="rgb(254,221,26)" rx="2" ry="2" />
<text  x="17.40" y="783.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (3 samples, 0.06%)</title><rect x="720.0" y="453" width="0.7" height="15.0" fill="rgb(249,140,1)" rx="2" ry="2" />
<text  x="723.01" y="463.5" ></text>
</g>
<g >
<title>lock_rename (2 samples, 0.04%)</title><rect x="808.3" y="645" width="0.5" height="15.0" fill="rgb(222,7,6)" rx="2" ry="2" />
<text  x="811.33" y="655.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (25 samples, 0.52%)</title><rect x="882.5" y="421" width="6.1" height="15.0" fill="rgb(218,49,15)" rx="2" ry="2" />
<text  x="885.46" y="431.5" ></text>
</g>
<g >
<title>ip6_input (1 samples, 0.02%)</title><rect x="1113.7" y="629" width="0.2" height="15.0" fill="rgb(231,229,48)" rx="2" ry="2" />
<text  x="1116.67" y="639.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.35%)</title><rect x="852.9" y="197" width="4.1" height="15.0" fill="rgb(250,187,48)" rx="2" ry="2" />
<text  x="855.86" y="207.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="786.6" y="309" width="0.2" height="15.0" fill="rgb(214,172,42)" rx="2" ry="2" />
<text  x="789.55" y="319.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (3 samples, 0.06%)</title><rect x="829.4" y="453" width="0.7" height="15.0" fill="rgb(234,156,20)" rx="2" ry="2" />
<text  x="832.37" y="463.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.02%)</title><rect x="722.9" y="533" width="0.3" height="15.0" fill="rgb(207,215,49)" rx="2" ry="2" />
<text  x="725.94" y="543.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3 samples, 0.06%)</title><rect x="670.8" y="453" width="0.8" height="15.0" fill="rgb(210,213,2)" rx="2" ry="2" />
<text  x="673.83" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="695.1" y="421" width="0.2" height="15.0" fill="rgb(241,114,54)" rx="2" ry="2" />
<text  x="698.05" y="431.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.02%)</title><rect x="780.9" y="405" width="0.3" height="15.0" fill="rgb(239,155,27)" rx="2" ry="2" />
<text  x="783.93" y="415.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (88 samples, 1.82%)</title><rect x="942.2" y="469" width="21.5" height="15.0" fill="rgb(209,12,49)" rx="2" ry="2" />
<text  x="945.16" y="479.5" >&lt;..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (11 samples, 0.23%)</title><rect x="888.6" y="405" width="2.7" height="15.0" fill="rgb(235,135,2)" rx="2" ry="2" />
<text  x="891.58" y="415.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (8 samples, 0.17%)</title><rect x="1009.4" y="581" width="2.0" height="15.0" fill="rgb(214,72,22)" rx="2" ry="2" />
<text  x="1012.44" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="762.6" y="629" width="0.2" height="15.0" fill="rgb(254,139,19)" rx="2" ry="2" />
<text  x="765.58" y="639.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="731.0" y="661" width="0.3" height="15.0" fill="rgb(209,214,17)" rx="2" ry="2" />
<text  x="734.02" y="671.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.02%)</title><rect x="1016.0" y="933" width="0.3" height="15.0" fill="rgb(249,182,44)" rx="2" ry="2" />
<text  x="1019.05" y="943.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (91 samples, 1.89%)</title><rect x="771.1" y="645" width="22.3" height="15.0" fill="rgb(237,116,51)" rx="2" ry="2" />
<text  x="774.14" y="655.5" >o..</text>
</g>
<g >
<title>new_sync_write (291 samples, 6.03%)</title><rect x="659.3" y="693" width="71.2" height="15.0" fill="rgb(240,197,18)" rx="2" ry="2" />
<text  x="662.33" y="703.5" >new_sync..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.04%)</title><rect x="814.0" y="469" width="0.4" height="15.0" fill="rgb(215,79,16)" rx="2" ry="2" />
<text  x="816.96" y="479.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (4 samples, 0.08%)</title><rect x="1005.8" y="389" width="0.9" height="15.0" fill="rgb(211,0,40)" rx="2" ry="2" />
<text  x="1008.77" y="399.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (10 samples, 0.21%)</title><rect x="671.8" y="469" width="2.5" height="15.0" fill="rgb(248,28,38)" rx="2" ry="2" />
<text  x="674.81" y="479.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (1 samples, 0.02%)</title><rect x="770.7" y="597" width="0.2" height="15.0" fill="rgb(242,43,37)" rx="2" ry="2" />
<text  x="773.65" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="950.2" y="357" width="0.3" height="15.0" fill="rgb(219,160,28)" rx="2" ry="2" />
<text  x="953.23" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="36.4" y="997" width="0.3" height="15.0" fill="rgb(243,73,3)" rx="2" ry="2" />
<text  x="39.42" y="1007.5" ></text>
</g>
<g >
<title>user_path_at_empty (9 samples, 0.19%)</title><rect x="764.8" y="693" width="2.2" height="15.0" fill="rgb(239,201,31)" rx="2" ry="2" />
<text  x="767.78" y="703.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="802.7" y="581" width="0.2" height="15.0" fill="rgb(225,205,0)" rx="2" ry="2" />
<text  x="805.70" y="591.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (14 samples, 0.29%)</title><rect x="1164.3" y="805" width="3.4" height="15.0" fill="rgb(226,196,50)" rx="2" ry="2" />
<text  x="1167.31" y="815.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (73 samples, 1.51%)</title><rect x="109.8" y="853" width="17.9" height="15.0" fill="rgb(225,115,1)" rx="2" ry="2" />
<text  x="112.82" y="863.5" ></text>
</g>
<g >
<title>udpv6_queue_rcv_skb (1 samples, 0.02%)</title><rect x="1113.7" y="549" width="0.2" height="15.0" fill="rgb(234,212,54)" rx="2" ry="2" />
<text  x="1116.67" y="559.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (72 samples, 1.49%)</title><rect x="963.9" y="437" width="17.6" height="15.0" fill="rgb(220,14,46)" rx="2" ry="2" />
<text  x="966.93" y="447.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1111.7" y="757" width="0.3" height="15.0" fill="rgb(236,167,35)" rx="2" ry="2" />
<text  x="1114.71" y="767.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (6 samples, 0.12%)</title><rect x="242.7" y="485" width="1.4" height="15.0" fill="rgb(247,147,14)" rx="2" ry="2" />
<text  x="245.67" y="495.5" ></text>
</g>
<g >
<title>NaClHostDescClose (1 samples, 0.02%)</title><rect x="108.1" y="885" width="0.3" height="15.0" fill="rgb(210,34,5)" rx="2" ry="2" />
<text  x="111.11" y="895.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.17%)</title><rect x="841.4" y="213" width="1.9" height="15.0" fill="rgb(210,131,30)" rx="2" ry="2" />
<text  x="844.36" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.08%)</title><rect x="46.7" y="901" width="1.0" height="15.0" fill="rgb(205,6,23)" rx="2" ry="2" />
<text  x="49.70" y="911.5" ></text>
</g>
<g >
<title>copy_page_from_iter_iovec (1 samples, 0.02%)</title><rect x="1017.3" y="869" width="0.2" height="15.0" fill="rgb(254,151,50)" rx="2" ry="2" />
<text  x="1020.27" y="879.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (2 samples, 0.04%)</title><rect x="835.5" y="421" width="0.5" height="15.0" fill="rgb(212,17,48)" rx="2" ry="2" />
<text  x="838.49" y="431.5" ></text>
</g>
<g >
<title>ovl_read_iter (87 samples, 1.80%)</title><rect x="131.6" y="693" width="21.3" height="15.0" fill="rgb(223,227,8)" rx="2" ry="2" />
<text  x="134.60" y="703.5" >o..</text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="1090.7" y="517" width="0.2" height="15.0" fill="rgb(252,224,32)" rx="2" ry="2" />
<text  x="1093.67" y="527.5" ></text>
</g>
<g >
<title>mutex_unlock (4 samples, 0.08%)</title><rect x="11.7" y="837" width="1.0" height="15.0" fill="rgb(231,149,49)" rx="2" ry="2" />
<text  x="14.71" y="847.5" ></text>
</g>
<g >
<title>iput.part.0 (73 samples, 1.51%)</title><rect x="109.8" y="581" width="17.9" height="15.0" fill="rgb(224,59,22)" rx="2" ry="2" />
<text  x="112.82" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="653.9" y="693" width="0.3" height="15.0" fill="rgb(249,152,9)" rx="2" ry="2" />
<text  x="656.95" y="703.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="866.8" y="405" width="0.5" height="15.0" fill="rgb(223,56,43)" rx="2" ry="2" />
<text  x="869.80" y="415.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="1164.3" y="741" width="0.3" height="15.0" fill="rgb(224,4,34)" rx="2" ry="2" />
<text  x="1167.31" y="751.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="1100.7" y="885" width="0.2" height="15.0" fill="rgb(234,28,48)" rx="2" ry="2" />
<text  x="1103.70" y="895.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="35.9" y="789" width="0.3" height="15.0" fill="rgb(209,155,19)" rx="2" ry="2" />
<text  x="38.93" y="799.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (6 samples, 0.12%)</title><rect x="1114.6" y="869" width="1.5" height="15.0" fill="rgb(254,183,35)" rx="2" ry="2" />
<text  x="1117.64" y="879.5" ></text>
</g>
<g >
<title>generic_permission (1 samples, 0.02%)</title><rect x="801.2" y="613" width="0.3" height="15.0" fill="rgb(220,228,54)" rx="2" ry="2" />
<text  x="804.23" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="731.0" y="805" width="0.5" height="15.0" fill="rgb(253,105,11)" rx="2" ry="2" />
<text  x="734.02" y="815.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (3 samples, 0.06%)</title><rect x="174.2" y="581" width="0.7" height="15.0" fill="rgb(226,71,2)" rx="2" ry="2" />
<text  x="177.17" y="591.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (3 samples, 0.06%)</title><rect x="108.8" y="581" width="0.8" height="15.0" fill="rgb(206,160,20)" rx="2" ry="2" />
<text  x="111.84" y="591.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="243.9" y="469" width="0.2" height="15.0" fill="rgb(248,130,28)" rx="2" ry="2" />
<text  x="246.90" y="479.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="207.0" y="453" width="0.2" height="15.0" fill="rgb(243,117,50)" rx="2" ry="2" />
<text  x="209.95" y="463.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (54 samples, 1.12%)</title><rect x="950.5" y="341" width="13.2" height="15.0" fill="rgb(205,222,40)" rx="2" ry="2" />
<text  x="953.48" y="351.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (1 samples, 0.02%)</title><rect x="804.2" y="469" width="0.2" height="15.0" fill="rgb(248,207,54)" rx="2" ry="2" />
<text  x="807.17" y="479.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (340 samples, 7.05%)</title><rect x="172.9" y="869" width="83.2" height="15.0" fill="rgb(207,21,3)" rx="2" ry="2" />
<text  x="175.94" y="879.5" >rustposix..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="851.9" y="261" width="0.2" height="15.0" fill="rgb(227,7,4)" rx="2" ry="2" />
<text  x="854.88" y="271.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.02%)</title><rect x="680.9" y="501" width="0.2" height="15.0" fill="rgb(246,52,52)" rx="2" ry="2" />
<text  x="683.86" y="511.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (2 samples, 0.04%)</title><rect x="798.1" y="597" width="0.4" height="15.0" fill="rgb(229,82,43)" rx="2" ry="2" />
<text  x="801.05" y="607.5" ></text>
</g>
<g >
<title>ext4_map_blocks (1 samples, 0.02%)</title><rect x="748.4" y="389" width="0.2" height="15.0" fill="rgb(243,117,17)" rx="2" ry="2" />
<text  x="751.39" y="399.5" ></text>
</g>
<g >
<title>evict (73 samples, 1.51%)</title><rect x="109.8" y="709" width="17.9" height="15.0" fill="rgb(213,29,41)" rx="2" ry="2" />
<text  x="112.82" y="719.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (44 samples, 0.91%)</title><rect x="319.7" y="789" width="10.8" height="15.0" fill="rgb(248,182,28)" rx="2" ry="2" />
<text  x="322.74" y="799.5" ></text>
</g>
<g >
<title>alx_mask_msix (4 samples, 0.08%)</title><rect x="1110.2" y="805" width="1.0" height="15.0" fill="rgb(237,11,31)" rx="2" ry="2" />
<text  x="1113.24" y="815.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="862.9" y="117" width="0.2" height="15.0" fill="rgb(218,162,49)" rx="2" ry="2" />
<text  x="865.89" y="127.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.02%)</title><rect x="1092.1" y="885" width="0.3" height="15.0" fill="rgb(249,116,26)" rx="2" ry="2" />
<text  x="1095.14" y="895.5" ></text>
</g>
<g >
<title>dequeue_task (2 samples, 0.04%)</title><rect x="1101.2" y="885" width="0.5" height="15.0" fill="rgb(219,126,2)" rx="2" ry="2" />
<text  x="1104.19" y="895.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="35.7" y="661" width="0.2" height="15.0" fill="rgb(211,11,34)" rx="2" ry="2" />
<text  x="38.69" y="671.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (8 samples, 0.17%)</title><rect x="47.7" y="965" width="1.9" height="15.0" fill="rgb(253,20,47)" rx="2" ry="2" />
<text  x="50.68" y="975.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (17 samples, 0.35%)</title><rect x="852.9" y="181" width="4.1" height="15.0" fill="rgb(222,115,26)" rx="2" ry="2" />
<text  x="855.86" y="191.5" ></text>
</g>
<g >
<title>generic_permission (1 samples, 0.02%)</title><rect x="754.0" y="469" width="0.3" height="15.0" fill="rgb(232,7,53)" rx="2" ry="2" />
<text  x="757.01" y="479.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (1 samples, 0.02%)</title><rect x="864.8" y="437" width="0.3" height="15.0" fill="rgb(247,5,10)" rx="2" ry="2" />
<text  x="867.85" y="447.5" ></text>
</g>
<g >
<title>ext4_search_dir (2 samples, 0.04%)</title><rect x="804.9" y="549" width="0.5" height="15.0" fill="rgb(221,7,49)" rx="2" ry="2" />
<text  x="807.90" y="559.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (1 samples, 0.02%)</title><rect x="255.6" y="597" width="0.3" height="15.0" fill="rgb(250,146,26)" rx="2" ry="2" />
<text  x="258.64" y="607.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (2 samples, 0.04%)</title><rect x="773.1" y="469" width="0.5" height="15.0" fill="rgb(220,31,5)" rx="2" ry="2" />
<text  x="776.10" y="479.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (11 samples, 0.23%)</title><rect x="888.6" y="389" width="2.7" height="15.0" fill="rgb(254,54,9)" rx="2" ry="2" />
<text  x="891.58" y="399.5" ></text>
</g>
<g >
<title>release_pages (15 samples, 0.31%)</title><rect x="109.8" y="469" width="3.7" height="15.0" fill="rgb(252,136,29)" rx="2" ry="2" />
<text  x="112.82" y="479.5" ></text>
</g>
<g >
<title>__getblk_gfp (3 samples, 0.06%)</title><rect x="721.0" y="437" width="0.7" height="15.0" fill="rgb(215,175,34)" rx="2" ry="2" />
<text  x="723.98" y="447.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="110.3" y="437" width="0.3" height="15.0" fill="rgb(214,42,52)" rx="2" ry="2" />
<text  x="113.31" y="447.5" ></text>
</g>
<g >
<title>user_path_at_empty (12 samples, 0.25%)</title><rect x="758.9" y="645" width="2.9" height="15.0" fill="rgb(224,128,2)" rx="2" ry="2" />
<text  x="761.91" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (51 samples, 1.06%)</title><rect x="641.5" y="789" width="12.4" height="15.0" fill="rgb(253,26,41)" rx="2" ry="2" />
<text  x="644.47" y="799.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.02%)</title><rect x="653.9" y="789" width="0.3" height="15.0" fill="rgb(231,101,34)" rx="2" ry="2" />
<text  x="656.95" y="799.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.02%)</title><rect x="109.1" y="485" width="0.2" height="15.0" fill="rgb(253,158,8)" rx="2" ry="2" />
<text  x="112.09" y="495.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.19%)</title><rect x="128.7" y="853" width="2.2" height="15.0" fill="rgb(247,208,51)" rx="2" ry="2" />
<text  x="131.66" y="863.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (1 samples, 0.02%)</title><rect x="1100.9" y="997" width="0.3" height="15.0" fill="rgb(210,167,40)" rx="2" ry="2" />
<text  x="1103.94" y="1007.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (1 samples, 0.02%)</title><rect x="1090.4" y="725" width="0.3" height="15.0" fill="rgb(205,86,5)" rx="2" ry="2" />
<text  x="1093.42" y="735.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (23 samples, 0.48%)</title><rect x="723.7" y="549" width="5.6" height="15.0" fill="rgb(227,21,50)" rx="2" ry="2" />
<text  x="726.68" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.02%)</title><rect x="1015.8" y="853" width="0.2" height="15.0" fill="rgb(245,188,30)" rx="2" ry="2" />
<text  x="1018.80" y="863.5" ></text>
</g>
<g >
<title>std::fs::canonicalize (11 samples, 0.23%)</title><rect x="755.5" y="821" width="2.7" height="15.0" fill="rgb(248,155,47)" rx="2" ry="2" />
<text  x="758.48" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="762.6" y="661" width="0.2" height="15.0" fill="rgb(239,186,34)" rx="2" ry="2" />
<text  x="765.58" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.31%)</title><rect x="859.5" y="229" width="3.6" height="15.0" fill="rgb(205,84,53)" rx="2" ry="2" />
<text  x="862.46" y="239.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.08%)</title><rect x="837.2" y="357" width="1.0" height="15.0" fill="rgb(205,148,42)" rx="2" ry="2" />
<text  x="840.20" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.21%)</title><rect x="833.0" y="373" width="2.5" height="15.0" fill="rgb(237,209,50)" rx="2" ry="2" />
<text  x="836.04" y="383.5" ></text>
</g>
<g >
<title>page_mapping (2 samples, 0.04%)</title><rect x="207.4" y="469" width="0.5" height="15.0" fill="rgb(248,114,25)" rx="2" ry="2" />
<text  x="210.44" y="479.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.06%)</title><rect x="108.8" y="629" width="0.8" height="15.0" fill="rgb(241,210,42)" rx="2" ry="2" />
<text  x="111.84" y="639.5" ></text>
</g>
<g >
<title>ext4_claim_free_clusters (2 samples, 0.04%)</title><rect x="679.1" y="469" width="0.5" height="15.0" fill="rgb(224,98,28)" rx="2" ry="2" />
<text  x="682.15" y="479.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="1160.6" y="917" width="0.3" height="15.0" fill="rgb(224,52,14)" rx="2" ry="2" />
<text  x="1163.64" y="927.5" ></text>
</g>
<g >
<title>ext4_find_entry (10 samples, 0.21%)</title><rect x="803.2" y="597" width="2.4" height="15.0" fill="rgb(217,196,19)" rx="2" ry="2" />
<text  x="806.19" y="607.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.02%)</title><rect x="30.3" y="981" width="0.3" height="15.0" fill="rgb(207,177,16)" rx="2" ry="2" />
<text  x="33.31" y="991.5" ></text>
</g>
<g >
<title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.02%)</title><rect x="762.6" y="709" width="0.2" height="15.0" fill="rgb(238,186,0)" rx="2" ry="2" />
<text  x="765.58" y="719.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (1 samples, 0.02%)</title><rect x="663.5" y="533" width="0.2" height="15.0" fill="rgb(249,207,52)" rx="2" ry="2" />
<text  x="666.49" y="543.5" ></text>
</g>
<g >
<title>__cmd_record (104 samples, 2.16%)</title><rect x="10.5" y="997" width="25.4" height="15.0" fill="rgb(225,118,1)" rx="2" ry="2" />
<text  x="13.49" y="1007.5" >_..</text>
</g>
<g >
<title>inode_permission.part.0 (2 samples, 0.04%)</title><rect x="769.2" y="677" width="0.5" height="15.0" fill="rgb(242,109,16)" rx="2" ry="2" />
<text  x="772.18" y="687.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.04%)</title><rect x="1114.9" y="805" width="0.5" height="15.0" fill="rgb(212,36,6)" rx="2" ry="2" />
<text  x="1117.89" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.12%)</title><rect x="830.1" y="421" width="1.5" height="15.0" fill="rgb(217,148,39)" rx="2" ry="2" />
<text  x="833.10" y="431.5" ></text>
</g>
<g >
<title>__queue_delayed_work (1 samples, 0.02%)</title><rect x="103.7" y="581" width="0.2" height="15.0" fill="rgb(233,18,37)" rx="2" ry="2" />
<text  x="106.71" y="591.5" ></text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.02%)</title><rect x="231.9" y="517" width="0.3" height="15.0" fill="rgb(238,153,54)" rx="2" ry="2" />
<text  x="234.91" y="527.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.21%)</title><rect x="836.0" y="421" width="2.4" height="15.0" fill="rgb(237,189,11)" rx="2" ry="2" />
<text  x="838.98" y="431.5" ></text>
</g>
<g >
<title>__d_alloc (2 samples, 0.04%)</title><rect x="747.4" y="437" width="0.5" height="15.0" fill="rgb(248,140,49)" rx="2" ry="2" />
<text  x="750.41" y="447.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.02%)</title><rect x="1092.1" y="773" width="0.3" height="15.0" fill="rgb(252,189,15)" rx="2" ry="2" />
<text  x="1095.14" y="783.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="693.6" y="501" width="0.2" height="15.0" fill="rgb(209,124,17)" rx="2" ry="2" />
<text  x="696.58" y="511.5" ></text>
</g>
<g >
<title>memchr_inv (1 samples, 0.02%)</title><rect x="1185.8" y="837" width="0.3" height="15.0" fill="rgb(213,206,41)" rx="2" ry="2" />
<text  x="1188.84" y="847.5" ></text>
</g>
</g>
</svg>
