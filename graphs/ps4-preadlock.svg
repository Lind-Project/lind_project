<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>sched_clock_idle_sleep_event (7 samples, 0.01%)</title><rect x="143.1" y="453" width="0.2" height="15.0" fill="rgb(211,225,30)" rx="2" ry="2" />
<text  x="146.14" y="463.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (9 samples, 0.02%)</title><rect x="146.0" y="325" width="0.2" height="15.0" fill="rgb(245,217,16)" rx="2" ry="2" />
<text  x="148.95" y="335.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (157 samples, 0.31%)</title><rect x="993.4" y="325" width="3.6" height="15.0" fill="rgb(215,108,13)" rx="2" ry="2" />
<text  x="996.43" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (74 samples, 0.14%)</title><rect x="930.1" y="261" width="1.7" height="15.0" fill="rgb(246,163,3)" rx="2" ry="2" />
<text  x="933.11" y="271.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (143 samples, 0.28%)</title><rect x="993.7" y="293" width="3.3" height="15.0" fill="rgb(235,208,7)" rx="2" ry="2" />
<text  x="996.75" y="303.5" ></text>
</g>
<g >
<title>ip6_sublist_rcv (5 samples, 0.01%)</title><rect x="112.2" y="197" width="0.1" height="15.0" fill="rgb(229,64,29)" rx="2" ry="2" />
<text  x="115.22" y="207.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (20 samples, 0.04%)</title><rect x="1183.1" y="357" width="0.4" height="15.0" fill="rgb(224,42,19)" rx="2" ry="2" />
<text  x="1186.07" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (12 samples, 0.02%)</title><rect x="827.5" y="277" width="0.3" height="15.0" fill="rgb(208,162,34)" rx="2" ry="2" />
<text  x="830.52" y="287.5" ></text>
</g>
<g >
<title>wake_up_process (8 samples, 0.02%)</title><rect x="112.4" y="293" width="0.2" height="15.0" fill="rgb(247,211,10)" rx="2" ry="2" />
<text  x="115.43" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (13 samples, 0.03%)</title><rect x="713.3" y="421" width="0.3" height="15.0" fill="rgb(216,3,38)" rx="2" ry="2" />
<text  x="716.31" y="431.5" ></text>
</g>
<g >
<title>native_sched_clock (16 samples, 0.03%)</title><rect x="172.5" y="341" width="0.4" height="15.0" fill="rgb(240,140,42)" rx="2" ry="2" />
<text  x="175.52" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 0.02%)</title><rect x="195.0" y="469" width="0.3" height="15.0" fill="rgb(228,108,51)" rx="2" ry="2" />
<text  x="198.00" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (365 samples, 0.71%)</title><rect x="1017.1" y="453" width="8.4" height="15.0" fill="rgb(245,133,0)" rx="2" ry="2" />
<text  x="1020.12" y="463.5" ></text>
</g>
<g >
<title>rmqueue (5 samples, 0.01%)</title><rect x="180.0" y="69" width="0.2" height="15.0" fill="rgb(232,109,9)" rx="2" ry="2" />
<text  x="183.05" y="79.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (20 samples, 0.04%)</title><rect x="275.0" y="501" width="0.4" height="15.0" fill="rgb(206,183,31)" rx="2" ry="2" />
<text  x="277.98" y="511.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (216 samples, 0.42%)</title><rect x="167.4" y="341" width="5.0" height="15.0" fill="rgb(231,118,34)" rx="2" ry="2" />
<text  x="170.44" y="351.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (66 samples, 0.13%)</title><rect x="175.7" y="341" width="1.5" height="15.0" fill="rgb(221,106,48)" rx="2" ry="2" />
<text  x="178.70" y="351.5" ></text>
</g>
<g >
<title>schedule_idle (165 samples, 0.32%)</title><rect x="139.1" y="469" width="3.8" height="15.0" fill="rgb(218,30,19)" rx="2" ry="2" />
<text  x="142.12" y="479.5" ></text>
</g>
<g >
<title>kick_ilb (123 samples, 0.24%)</title><rect x="169.6" y="325" width="2.8" height="15.0" fill="rgb(232,35,0)" rx="2" ry="2" />
<text  x="172.56" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (14 samples, 0.03%)</title><rect x="891.5" y="309" width="0.3" height="15.0" fill="rgb(222,123,4)" rx="2" ry="2" />
<text  x="894.50" y="319.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (18,034 samples, 35.16%)</title><rect x="292.0" y="469" width="414.9" height="15.0" fill="rgb(251,41,44)" rx="2" ry="2" />
<text  x="295.00" y="479.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>ip_sublist_rcv (12 samples, 0.02%)</title><rect x="111.9" y="197" width="0.3" height="15.0" fill="rgb(244,144,36)" rx="2" ry="2" />
<text  x="114.95" y="207.5" ></text>
</g>
<g >
<title>ptep_clear_flush (10 samples, 0.02%)</title><rect x="108.1" y="341" width="0.3" height="15.0" fill="rgb(239,178,22)" rx="2" ry="2" />
<text  x="111.15" y="351.5" ></text>
</g>
<g >
<title>new_sync_write (176 samples, 0.34%)</title><rect x="177.8" y="293" width="4.1" height="15.0" fill="rgb(238,142,50)" rx="2" ry="2" />
<text  x="180.82" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (379 samples, 0.74%)</title><rect x="979.1" y="325" width="8.7" height="15.0" fill="rgb(254,66,37)" rx="2" ry="2" />
<text  x="982.11" y="335.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,860 samples, 3.63%)</title><rect x="845.2" y="341" width="42.8" height="15.0" fill="rgb(209,82,19)" rx="2" ry="2" />
<text  x="848.21" y="351.5" >&lt;std..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (481 samples, 0.94%)</title><rect x="966.5" y="325" width="11.1" height="15.0" fill="rgb(237,86,53)" rx="2" ry="2" />
<text  x="969.48" y="335.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (5 samples, 0.01%)</title><rect x="1181.2" y="389" width="0.1" height="15.0" fill="rgb(241,142,36)" rx="2" ry="2" />
<text  x="1184.21" y="399.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (27 samples, 0.05%)</title><rect x="948.5" y="213" width="0.7" height="15.0" fill="rgb(245,129,18)" rx="2" ry="2" />
<text  x="951.54" y="223.5" ></text>
</g>
<g >
<title>DynArrayGet (15 samples, 0.03%)</title><rect x="1085.4" y="517" width="0.3" height="15.0" fill="rgb(235,126,39)" rx="2" ry="2" />
<text  x="1088.36" y="527.5" ></text>
</g>
<g >
<title>create_empty_buffers (16 samples, 0.03%)</title><rect x="178.3" y="133" width="0.4" height="15.0" fill="rgb(206,215,1)" rx="2" ry="2" />
<text  x="181.32" y="143.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (924 samples, 1.80%)</title><rect x="928.5" y="373" width="21.2" height="15.0" fill="rgb(228,94,3)" rx="2" ry="2" />
<text  x="931.45" y="383.5" >s..</text>
</g>
<g >
<title>std::sync::poison::Flag::done (17 samples, 0.03%)</title><rect x="845.2" y="325" width="0.4" height="15.0" fill="rgb(237,130,28)" rx="2" ry="2" />
<text  x="848.21" y="335.5" ></text>
</g>
<g >
<title>mmput (42 samples, 0.08%)</title><rect x="1135.8" y="437" width="1.0" height="15.0" fill="rgb(227,195,51)" rx="2" ry="2" />
<text  x="1138.84" y="447.5" ></text>
</g>
<g >
<title>NaClValidateCode (35 samples, 0.07%)</title><rect x="290.9" y="453" width="0.8" height="15.0" fill="rgb(239,166,39)" rx="2" ry="2" />
<text  x="293.90" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (16 samples, 0.03%)</title><rect x="1133.9" y="501" width="0.4" height="15.0" fill="rgb(245,223,16)" rx="2" ry="2" />
<text  x="1136.93" y="511.5" ></text>
</g>
<g >
<title>kworker/u32:0 (7,185 samples, 14.01%)</title><rect x="10.0" y="549" width="165.3" height="15.0" fill="rgb(248,38,0)" rx="2" ry="2" />
<text  x="13.02" y="559.5" >kworker/u32:0</text>
</g>
<g >
<title>release_pages (16 samples, 0.03%)</title><rect x="1136.4" y="293" width="0.4" height="15.0" fill="rgb(254,149,49)" rx="2" ry="2" />
<text  x="1139.44" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (9 samples, 0.02%)</title><rect x="161.9" y="325" width="0.2" height="15.0" fill="rgb(228,95,23)" rx="2" ry="2" />
<text  x="164.94" y="335.5" ></text>
</g>
<g >
<title>schedule_idle (66 samples, 0.13%)</title><rect x="1188.0" y="405" width="1.6" height="15.0" fill="rgb(229,68,41)" rx="2" ry="2" />
<text  x="1191.04" y="415.5" ></text>
</g>
<g >
<title>update_rq_clock (17 samples, 0.03%)</title><rect x="172.5" y="373" width="0.4" height="15.0" fill="rgb(249,124,52)" rx="2" ry="2" />
<text  x="175.50" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (1,860 samples, 3.63%)</title><rect x="845.2" y="357" width="42.8" height="15.0" fill="rgb(206,75,10)" rx="2" ry="2" />
<text  x="848.21" y="367.5" >core..</text>
</g>
<g >
<title>__netif_receive_skb_list (7 samples, 0.01%)</title><rect x="1174.2" y="245" width="0.2" height="15.0" fill="rgb(236,84,1)" rx="2" ry="2" />
<text  x="1177.19" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (16 samples, 0.03%)</title><rect x="890.6" y="309" width="0.3" height="15.0" fill="rgb(229,188,20)" rx="2" ry="2" />
<text  x="893.56" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_write (8 samples, 0.02%)</title><rect x="182.0" y="501" width="0.2" height="15.0" fill="rgb(223,7,49)" rx="2" ry="2" />
<text  x="184.98" y="511.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (11 samples, 0.02%)</title><rect x="726.3" y="485" width="0.3" height="15.0" fill="rgb(214,221,0)" rx="2" ry="2" />
<text  x="729.31" y="495.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="194.2" y="485" width="0.3" height="15.0" fill="rgb(214,167,9)" rx="2" ry="2" />
<text  x="197.24" y="495.5" ></text>
</g>
<g >
<title>has_bh_in_lru (5 samples, 0.01%)</title><rect x="107.8" y="293" width="0.1" height="15.0" fill="rgb(208,70,39)" rx="2" ry="2" />
<text  x="110.80" y="303.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (5 samples, 0.01%)</title><rect x="173.4" y="389" width="0.1" height="15.0" fill="rgb(229,118,15)" rx="2" ry="2" />
<text  x="176.42" y="399.5" ></text>
</g>
<g >
<title>pagecache_get_page (56 samples, 0.11%)</title><rect x="179.0" y="133" width="1.3" height="15.0" fill="rgb(227,211,32)" rx="2" ry="2" />
<text  x="181.97" y="143.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2,068 samples, 4.03%)</title><rect x="508.8" y="325" width="47.6" height="15.0" fill="rgb(253,51,21)" rx="2" ry="2" />
<text  x="511.78" y="335.5" >core..</text>
</g>
<g >
<title>HandleStackContext (11 samples, 0.02%)</title><rect x="221.9" y="517" width="0.2" height="15.0" fill="rgb(242,134,20)" rx="2" ry="2" />
<text  x="224.85" y="527.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (7 samples, 0.01%)</title><rect x="1182.9" y="325" width="0.2" height="15.0" fill="rgb(222,206,24)" rx="2" ry="2" />
<text  x="1185.89" y="335.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (176 samples, 0.34%)</title><rect x="212.5" y="517" width="4.0" height="15.0" fill="rgb(215,120,29)" rx="2" ry="2" />
<text  x="215.49" y="527.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (7 samples, 0.01%)</title><rect x="107.8" y="325" width="0.1" height="15.0" fill="rgb(213,45,32)" rx="2" ry="2" />
<text  x="110.76" y="335.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (10 samples, 0.02%)</title><rect x="163.0" y="309" width="0.3" height="15.0" fill="rgb(251,61,43)" rx="2" ry="2" />
<text  x="166.04" y="319.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (11 samples, 0.02%)</title><rect x="109.1" y="341" width="0.2" height="15.0" fill="rgb(249,220,15)" rx="2" ry="2" />
<text  x="112.07" y="351.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (14 samples, 0.03%)</title><rect x="223.6" y="517" width="0.3" height="15.0" fill="rgb(240,206,22)" rx="2" ry="2" />
<text  x="226.62" y="527.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (11 samples, 0.02%)</title><rect x="1174.1" y="373" width="0.3" height="15.0" fill="rgb(245,161,44)" rx="2" ry="2" />
<text  x="1177.10" y="383.5" ></text>
</g>
<g >
<title>napi_complete_done (7 samples, 0.01%)</title><rect x="1174.2" y="277" width="0.2" height="15.0" fill="rgb(254,90,6)" rx="2" ry="2" />
<text  x="1177.19" y="287.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (593 samples, 1.16%)</title><rect x="813.3" y="325" width="13.7" height="15.0" fill="rgb(208,200,10)" rx="2" ry="2" />
<text  x="816.35" y="335.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (12 samples, 0.02%)</title><rect x="212.2" y="485" width="0.3" height="15.0" fill="rgb(208,157,46)" rx="2" ry="2" />
<text  x="215.21" y="495.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (281 samples, 0.55%)</title><rect x="309.3" y="357" width="6.5" height="15.0" fill="rgb(232,100,14)" rx="2" ry="2" />
<text  x="312.35" y="367.5" ></text>
</g>
<g >
<title>exit_mm (42 samples, 0.08%)</title><rect x="1135.8" y="453" width="1.0" height="15.0" fill="rgb(226,152,21)" rx="2" ry="2" />
<text  x="1138.84" y="463.5" ></text>
</g>
<g >
<title>std::lazy::SyncLazy&lt;T,F&gt;::force (9 samples, 0.02%)</title><rect x="793.7" y="357" width="0.2" height="15.0" fill="rgb(211,15,29)" rx="2" ry="2" />
<text  x="796.72" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (7 samples, 0.01%)</title><rect x="137.0" y="453" width="0.1" height="15.0" fill="rgb(205,79,13)" rx="2" ry="2" />
<text  x="139.98" y="463.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (825 samples, 1.61%)</title><rect x="144.8" y="405" width="19.0" height="15.0" fill="rgb(216,184,2)" rx="2" ry="2" />
<text  x="147.78" y="415.5" ></text>
</g>
<g >
<title>sched_clock_cpu (10 samples, 0.02%)</title><rect x="133.7" y="421" width="0.2" height="15.0" fill="rgb(232,118,40)" rx="2" ry="2" />
<text  x="136.66" y="431.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (11 samples, 0.02%)</title><rect x="1174.1" y="341" width="0.3" height="15.0" fill="rgb(223,132,35)" rx="2" ry="2" />
<text  x="1177.10" y="351.5" ></text>
</g>
<g >
<title>NaClSysExecve (5 samples, 0.01%)</title><rect x="291.7" y="485" width="0.1" height="15.0" fill="rgb(227,179,38)" rx="2" ry="2" />
<text  x="294.72" y="495.5" ></text>
</g>
<g >
<title>__writeback_single_inode (16 samples, 0.03%)</title><rect x="109.0" y="389" width="0.4" height="15.0" fill="rgb(223,145,33)" rx="2" ry="2" />
<text  x="112.02" y="399.5" ></text>
</g>
<g >
<title>llist_add_batch (6 samples, 0.01%)</title><rect x="1181.7" y="357" width="0.1" height="15.0" fill="rgb(252,117,5)" rx="2" ry="2" />
<text  x="1184.69" y="367.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (6 samples, 0.01%)</title><rect x="998.8" y="261" width="0.1" height="15.0" fill="rgb(212,71,53)" rx="2" ry="2" />
<text  x="1001.79" y="271.5" ></text>
</g>
<g >
<title>[sel_ldr] (35,748 samples, 69.70%)</title><rect x="221.1" y="533" width="822.5" height="15.0" fill="rgb(228,27,22)" rx="2" ry="2" />
<text  x="224.12" y="543.5" >[sel_ldr]</text>
</g>
<g >
<title>sched_clock_cpu (9 samples, 0.02%)</title><rect x="133.1" y="405" width="0.2" height="15.0" fill="rgb(210,7,34)" rx="2" ry="2" />
<text  x="136.07" y="415.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (172 samples, 0.34%)</title><rect x="177.9" y="197" width="4.0" height="15.0" fill="rgb(249,100,35)" rx="2" ry="2" />
<text  x="180.91" y="207.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.constprop.0 (6 samples, 0.01%)</title><rect x="111.9" y="165" width="0.2" height="15.0" fill="rgb(224,136,23)" rx="2" ry="2" />
<text  x="114.95" y="175.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (17 samples, 0.03%)</title><rect x="142.9" y="469" width="0.4" height="15.0" fill="rgb(214,113,14)" rx="2" ry="2" />
<text  x="145.91" y="479.5" ></text>
</g>
<g >
<title>cpuidle_select (118 samples, 0.23%)</title><rect x="134.1" y="453" width="2.7" height="15.0" fill="rgb(245,35,37)" rx="2" ry="2" />
<text  x="137.10" y="463.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (604 samples, 1.18%)</title><rect x="813.1" y="357" width="13.9" height="15.0" fill="rgb(217,172,27)" rx="2" ry="2" />
<text  x="816.09" y="367.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.06%)</title><rect x="997.6" y="293" width="0.7" height="15.0" fill="rgb(236,148,3)" rx="2" ry="2" />
<text  x="1000.59" y="303.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (26 samples, 0.05%)</title><rect x="977.6" y="357" width="0.5" height="15.0" fill="rgb(207,14,39)" rx="2" ry="2" />
<text  x="980.55" y="367.5" ></text>
</g>
<g >
<title>NaClSysWrite (16 samples, 0.03%)</title><rect x="186.2" y="517" width="0.4" height="15.0" fill="rgb(233,214,40)" rx="2" ry="2" />
<text  x="189.19" y="527.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (12 samples, 0.02%)</title><rect x="977.9" y="293" width="0.2" height="15.0" fill="rgb(249,224,7)" rx="2" ry="2" />
<text  x="980.87" y="303.5" ></text>
</g>
<g >
<title>NaClSysWrite (11 samples, 0.02%)</title><rect x="706.9" y="501" width="0.3" height="15.0" fill="rgb(215,199,0)" rx="2" ry="2" />
<text  x="709.92" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (22 samples, 0.04%)</title><rect x="219.2" y="469" width="0.5" height="15.0" fill="rgb(234,40,22)" rx="2" ry="2" />
<text  x="222.21" y="479.5" ></text>
</g>
<g >
<title>poll_idle (489 samples, 0.95%)</title><rect x="147.3" y="357" width="11.2" height="15.0" fill="rgb(250,45,39)" rx="2" ry="2" />
<text  x="150.26" y="367.5" ></text>
</g>
<g >
<title>do_writepages (16 samples, 0.03%)</title><rect x="109.0" y="373" width="0.4" height="15.0" fill="rgb(211,90,34)" rx="2" ry="2" />
<text  x="112.02" y="383.5" ></text>
</g>
<g >
<title>unmap_single_vma (42 samples, 0.08%)</title><rect x="1135.8" y="389" width="1.0" height="15.0" fill="rgb(211,118,21)" rx="2" ry="2" />
<text  x="1138.84" y="399.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (26 samples, 0.05%)</title><rect x="977.6" y="341" width="0.5" height="15.0" fill="rgb(226,35,3)" rx="2" ry="2" />
<text  x="980.55" y="351.5" ></text>
</g>
<g >
<title>dispatcher (11,294 samples, 22.02%)</title><rect x="755.9" y="421" width="259.8" height="15.0" fill="rgb(245,191,33)" rx="2" ry="2" />
<text  x="758.85" y="431.5" >dispatcher</text>
</g>
<g >
<title>NaClHostDescRead (18,034 samples, 35.16%)</title><rect x="292.0" y="453" width="414.9" height="15.0" fill="rgb(240,189,21)" rx="2" ry="2" />
<text  x="295.00" y="463.5" >NaClHostDescRead</text>
</g>
<g >
<title>flush_smp_call_function_from_idle (21 samples, 0.04%)</title><rect x="1187.5" y="405" width="0.5" height="15.0" fill="rgb(232,229,22)" rx="2" ry="2" />
<text  x="1190.52" y="415.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (501 samples, 0.98%)</title><rect x="987.8" y="389" width="11.6" height="15.0" fill="rgb(218,106,11)" rx="2" ry="2" />
<text  x="990.83" y="399.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11 samples, 0.02%)</title><rect x="1174.1" y="389" width="0.3" height="15.0" fill="rgb(234,184,5)" rx="2" ry="2" />
<text  x="1177.10" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (13 samples, 0.03%)</title><rect x="1026.7" y="453" width="0.3" height="15.0" fill="rgb(223,133,0)" rx="2" ry="2" />
<text  x="1029.67" y="463.5" ></text>
</g>
<g >
<title>update_process_times (6 samples, 0.01%)</title><rect x="112.7" y="277" width="0.1" height="15.0" fill="rgb(252,129,20)" rx="2" ry="2" />
<text  x="115.66" y="287.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 0.12%)</title><rect x="175.7" y="261" width="1.5" height="15.0" fill="rgb(221,201,33)" rx="2" ry="2" />
<text  x="178.74" y="271.5" ></text>
</g>
<g >
<title>ret_from_fork (98 samples, 0.19%)</title><rect x="107.2" y="533" width="2.2" height="15.0" fill="rgb(228,148,30)" rx="2" ry="2" />
<text  x="110.16" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_write (177 samples, 0.35%)</title><rect x="177.8" y="341" width="4.1" height="15.0" fill="rgb(217,31,37)" rx="2" ry="2" />
<text  x="180.79" y="351.5" ></text>
</g>
<g >
<title>__ioctl (80 samples, 0.16%)</title><rect x="175.4" y="437" width="1.9" height="15.0" fill="rgb(226,159,1)" rx="2" ry="2" />
<text  x="178.45" y="447.5" ></text>
</g>
<g >
<title>net_rx_action (11 samples, 0.02%)</title><rect x="1174.1" y="325" width="0.3" height="15.0" fill="rgb(217,171,30)" rx="2" ry="2" />
<text  x="1177.10" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (5 samples, 0.01%)</title><rect x="291.8" y="389" width="0.2" height="15.0" fill="rgb(225,167,39)" rx="2" ry="2" />
<text  x="294.84" y="399.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (81 samples, 0.16%)</title><rect x="891.8" y="309" width="1.9" height="15.0" fill="rgb(252,43,18)" rx="2" ry="2" />
<text  x="894.82" y="319.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,033 samples, 2.01%)</title><rect x="110.2" y="437" width="23.7" height="15.0" fill="rgb(239,147,39)" rx="2" ry="2" />
<text  x="113.15" y="447.5" >c..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (598 samples, 1.17%)</title><rect x="828.2" y="309" width="13.8" height="15.0" fill="rgb(215,12,12)" rx="2" ry="2" />
<text  x="831.21" y="319.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (44 samples, 0.09%)</title><rect x="290.7" y="485" width="1.0" height="15.0" fill="rgb(244,78,27)" rx="2" ry="2" />
<text  x="293.71" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (31 samples, 0.06%)</title><rect x="941.6" y="213" width="0.7" height="15.0" fill="rgb(220,102,20)" rx="2" ry="2" />
<text  x="944.64" y="223.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (11 samples, 0.02%)</title><rect x="1083.5" y="405" width="0.2" height="15.0" fill="rgb(215,97,17)" rx="2" ry="2" />
<text  x="1086.48" y="415.5" ></text>
</g>
<g >
<title>ip_list_rcv (12 samples, 0.02%)</title><rect x="111.9" y="213" width="0.3" height="15.0" fill="rgb(237,55,8)" rx="2" ry="2" />
<text  x="114.95" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (412 samples, 0.80%)</title><rect x="586.6" y="293" width="9.4" height="15.0" fill="rgb(243,64,15)" rx="2" ry="2" />
<text  x="589.56" y="303.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (6 samples, 0.01%)</title><rect x="1187.2" y="341" width="0.2" height="15.0" fill="rgb(219,23,18)" rx="2" ry="2" />
<text  x="1190.22" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 0.16%)</title><rect x="175.4" y="421" width="1.9" height="15.0" fill="rgb(246,30,0)" rx="2" ry="2" />
<text  x="178.45" y="431.5" ></text>
</g>
<g >
<title>native_sched_clock (5 samples, 0.01%)</title><rect x="1189.4" y="341" width="0.1" height="15.0" fill="rgb(211,67,12)" rx="2" ry="2" />
<text  x="1192.42" y="351.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (82 samples, 0.16%)</title><rect x="137.2" y="469" width="1.9" height="15.0" fill="rgb(219,200,5)" rx="2" ry="2" />
<text  x="140.18" y="479.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (16 samples, 0.03%)</title><rect x="180.4" y="133" width="0.4" height="15.0" fill="rgb(222,54,36)" rx="2" ry="2" />
<text  x="183.44" y="143.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (16 samples, 0.03%)</title><rect x="109.0" y="405" width="0.4" height="15.0" fill="rgb(214,215,37)" rx="2" ry="2" />
<text  x="112.02" y="415.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,036 samples, 2.02%)</title><rect x="110.1" y="453" width="23.8" height="15.0" fill="rgb(235,182,53)" rx="2" ry="2" />
<text  x="113.10" y="463.5" >c..</text>
</g>
<g >
<title>std::panicking::panicking (17 samples, 0.03%)</title><rect x="845.2" y="293" width="0.4" height="15.0" fill="rgb(225,32,8)" rx="2" ry="2" />
<text  x="848.21" y="303.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (17 samples, 0.03%)</title><rect x="845.2" y="277" width="0.4" height="15.0" fill="rgb(244,132,28)" rx="2" ry="2" />
<text  x="848.21" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (9 samples, 0.02%)</title><rect x="920.4" y="293" width="0.3" height="15.0" fill="rgb(216,135,2)" rx="2" ry="2" />
<text  x="923.45" y="303.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (22 samples, 0.04%)</title><rect x="179.7" y="101" width="0.5" height="15.0" fill="rgb(210,34,32)" rx="2" ry="2" />
<text  x="182.68" y="111.5" ></text>
</g>
<g >
<title>alx_poll (11 samples, 0.02%)</title><rect x="1174.1" y="293" width="0.3" height="15.0" fill="rgb(240,221,27)" rx="2" ry="2" />
<text  x="1177.10" y="303.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (23 samples, 0.04%)</title><rect x="931.1" y="245" width="0.6" height="15.0" fill="rgb(205,162,46)" rx="2" ry="2" />
<text  x="934.14" y="255.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (19 samples, 0.04%)</title><rect x="180.9" y="85" width="0.4" height="15.0" fill="rgb(215,149,3)" rx="2" ry="2" />
<text  x="183.85" y="95.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (635 samples, 1.24%)</title><rect x="196.4" y="517" width="14.6" height="15.0" fill="rgb(254,4,44)" rx="2" ry="2" />
<text  x="199.43" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (5 samples, 0.01%)</title><rect x="143.2" y="421" width="0.1" height="15.0" fill="rgb(228,225,26)" rx="2" ry="2" />
<text  x="146.19" y="431.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_init (9 samples, 0.02%)</title><rect x="793.7" y="341" width="0.2" height="15.0" fill="rgb(211,42,42)" rx="2" ry="2" />
<text  x="796.72" y="351.5" ></text>
</g>
<g >
<title>smp_call_function_single (65 samples, 0.13%)</title><rect x="175.7" y="293" width="1.5" height="15.0" fill="rgb(245,128,38)" rx="2" ry="2" />
<text  x="178.72" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (9 samples, 0.02%)</title><rect x="1174.4" y="421" width="0.2" height="15.0" fill="rgb(245,65,13)" rx="2" ry="2" />
<text  x="1177.38" y="431.5" ></text>
</g>
<g >
<title>poll_idle (304 samples, 0.59%)</title><rect x="126.3" y="421" width="7.0" height="15.0" fill="rgb(227,104,10)" rx="2" ry="2" />
<text  x="129.28" y="431.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (6 samples, 0.01%)</title><rect x="597.4" y="261" width="0.2" height="15.0" fill="rgb(212,17,22)" rx="2" ry="2" />
<text  x="600.45" y="271.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (27 samples, 0.05%)</title><rect x="948.5" y="229" width="0.7" height="15.0" fill="rgb(242,207,18)" rx="2" ry="2" />
<text  x="951.54" y="239.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (16 samples, 0.03%)</title><rect x="890.6" y="277" width="0.3" height="15.0" fill="rgb(245,198,32)" rx="2" ry="2" />
<text  x="893.56" y="287.5" ></text>
</g>
<g >
<title>sched_clock_cpu (6 samples, 0.01%)</title><rect x="142.7" y="421" width="0.1" height="15.0" fill="rgb(254,74,35)" rx="2" ry="2" />
<text  x="145.68" y="431.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (15 samples, 0.03%)</title><rect x="218.9" y="485" width="0.3" height="15.0" fill="rgb(227,195,49)" rx="2" ry="2" />
<text  x="221.86" y="495.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (16 samples, 0.03%)</title><rect x="218.5" y="485" width="0.4" height="15.0" fill="rgb(225,229,44)" rx="2" ry="2" />
<text  x="221.49" y="495.5" ></text>
</g>
<g >
<title>dispatcher (9 samples, 0.02%)</title><rect x="987.8" y="373" width="0.2" height="15.0" fill="rgb(229,43,9)" rx="2" ry="2" />
<text  x="990.83" y="383.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (5 samples, 0.01%)</title><rect x="178.4" y="69" width="0.1" height="15.0" fill="rgb(230,64,53)" rx="2" ry="2" />
<text  x="181.41" y="79.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (640 samples, 1.25%)</title><rect x="770.3" y="405" width="14.8" height="15.0" fill="rgb(230,142,43)" rx="2" ry="2" />
<text  x="773.35" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (5 samples, 0.01%)</title><rect x="291.8" y="421" width="0.2" height="15.0" fill="rgb(208,204,6)" rx="2" ry="2" />
<text  x="294.84" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (240 samples, 0.47%)</title><rect x="793.9" y="341" width="5.6" height="15.0" fill="rgb(220,81,43)" rx="2" ry="2" />
<text  x="796.93" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (24 samples, 0.05%)</title><rect x="112.4" y="405" width="0.5" height="15.0" fill="rgb(220,5,50)" rx="2" ry="2" />
<text  x="115.38" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (1,843 samples, 3.59%)</title><rect x="845.6" y="309" width="42.4" height="15.0" fill="rgb(228,65,27)" rx="2" ry="2" />
<text  x="848.60" y="319.5" >std..</text>
</g>
<g >
<title>cpuidle_idle_call (1,191 samples, 2.32%)</title><rect x="109.8" y="469" width="27.4" height="15.0" fill="rgb(220,185,11)" rx="2" ry="2" />
<text  x="112.76" y="479.5" >c..</text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (12 samples, 0.02%)</title><rect x="1083.0" y="325" width="0.3" height="15.0" fill="rgb(221,25,36)" rx="2" ry="2" />
<text  x="1086.04" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (481 samples, 0.94%)</title><rect x="966.5" y="309" width="11.1" height="15.0" fill="rgb(248,110,34)" rx="2" ry="2" />
<text  x="969.48" y="319.5" ></text>
</g>
<g >
<title>alx_mask_msix (24 samples, 0.05%)</title><rect x="110.4" y="309" width="0.6" height="15.0" fill="rgb(248,61,10)" rx="2" ry="2" />
<text  x="113.40" y="319.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (34 samples, 0.07%)</title><rect x="164.0" y="389" width="0.8" height="15.0" fill="rgb(229,111,41)" rx="2" ry="2" />
<text  x="167.01" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7 samples, 0.01%)</title><rect x="163.1" y="293" width="0.2" height="15.0" fill="rgb(233,3,14)" rx="2" ry="2" />
<text  x="166.11" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (225 samples, 0.44%)</title><rect x="944.0" y="309" width="5.2" height="15.0" fill="rgb(230,30,12)" rx="2" ry="2" />
<text  x="946.98" y="319.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3,064 samples, 5.97%)</title><rect x="622.2" y="293" width="70.5" height="15.0" fill="rgb(233,178,36)" rx="2" ry="2" />
<text  x="625.20" y="303.5" >core::i..</text>
</g>
<g >
<title>ext4_block_write_begin (28 samples, 0.05%)</title><rect x="178.3" y="149" width="0.6" height="15.0" fill="rgb(238,39,23)" rx="2" ry="2" />
<text  x="181.30" y="159.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (13 samples, 0.03%)</title><rect x="194.2" y="501" width="0.3" height="15.0" fill="rgb(213,125,24)" rx="2" ry="2" />
<text  x="197.24" y="511.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (12 samples, 0.02%)</title><rect x="1181.6" y="373" width="0.2" height="15.0" fill="rgb(248,222,4)" rx="2" ry="2" />
<text  x="1184.56" y="383.5" ></text>
</g>
<g >
<title>napi_complete_done (19 samples, 0.04%)</title><rect x="111.9" y="277" width="0.4" height="15.0" fill="rgb(243,204,27)" rx="2" ry="2" />
<text  x="114.90" y="287.5" ></text>
</g>
<g >
<title>alx_poll (57 samples, 0.11%)</title><rect x="111.0" y="293" width="1.3" height="15.0" fill="rgb(243,100,5)" rx="2" ry="2" />
<text  x="114.03" y="303.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (6 samples, 0.01%)</title><rect x="178.2" y="149" width="0.1" height="15.0" fill="rgb(216,57,18)" rx="2" ry="2" />
<text  x="181.16" y="159.5" ></text>
</g>
<g >
<title>read_tsc (5 samples, 0.01%)</title><rect x="1189.7" y="389" width="0.1" height="15.0" fill="rgb(221,202,40)" rx="2" ry="2" />
<text  x="1192.72" y="399.5" ></text>
</g>
<g >
<title>read_tsc (11 samples, 0.02%)</title><rect x="173.9" y="389" width="0.3" height="15.0" fill="rgb(207,185,54)" rx="2" ry="2" />
<text  x="176.90" y="399.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (21 samples, 0.04%)</title><rect x="994.8" y="245" width="0.5" height="15.0" fill="rgb(237,192,21)" rx="2" ry="2" />
<text  x="997.83" y="255.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (12 samples, 0.02%)</title><rect x="1188.5" y="325" width="0.3" height="15.0" fill="rgb(230,187,47)" rx="2" ry="2" />
<text  x="1191.48" y="335.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (18,031 samples, 35.16%)</title><rect x="292.0" y="373" width="414.9" height="15.0" fill="rgb(229,217,8)" rx="2" ry="2" />
<text  x="295.02" y="383.5" >rustposix::interface::pipe::EmulatedPipe::read_from_pipe</text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.03%)</title><rect x="1173.3" y="517" width="0.4" height="15.0" fill="rgb(245,207,22)" rx="2" ry="2" />
<text  x="1176.27" y="527.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (179 samples, 0.35%)</title><rect x="319.3" y="325" width="4.1" height="15.0" fill="rgb(219,60,52)" rx="2" ry="2" />
<text  x="322.26" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (41 samples, 0.08%)</title><rect x="990.5" y="277" width="0.9" height="15.0" fill="rgb(218,206,51)" rx="2" ry="2" />
<text  x="993.48" y="287.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (417 samples, 0.81%)</title><rect x="1016.2" y="469" width="9.6" height="15.0" fill="rgb(240,198,54)" rx="2" ry="2" />
<text  x="1019.16" y="479.5" ></text>
</g>
<g >
<title>all (51,288 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(215,68,28)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>alloc_pages_vma (53 samples, 0.10%)</title><rect x="1082.2" y="405" width="1.2" height="15.0" fill="rgb(219,17,51)" rx="2" ry="2" />
<text  x="1085.16" y="415.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (19 samples, 0.04%)</title><rect x="1136.4" y="309" width="0.4" height="15.0" fill="rgb(210,31,1)" rx="2" ry="2" />
<text  x="1139.37" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (9 samples, 0.02%)</title><rect x="146.0" y="293" width="0.2" height="15.0" fill="rgb(239,56,29)" rx="2" ry="2" />
<text  x="148.95" y="303.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (8 samples, 0.02%)</title><rect x="108.2" y="309" width="0.2" height="15.0" fill="rgb(214,192,41)" rx="2" ry="2" />
<text  x="111.20" y="319.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (32 samples, 0.06%)</title><rect x="324.2" y="309" width="0.8" height="15.0" fill="rgb(244,196,31)" rx="2" ry="2" />
<text  x="327.23" y="319.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1,210 samples, 2.36%)</title><rect x="949.7" y="373" width="27.9" height="15.0" fill="rgb(245,43,25)" rx="2" ry="2" />
<text  x="952.71" y="383.5" >s..</text>
</g>
<g >
<title>hrtimer_next_event_without (28 samples, 0.05%)</title><rect x="161.9" y="341" width="0.6" height="15.0" fill="rgb(212,67,38)" rx="2" ry="2" />
<text  x="164.87" y="351.5" ></text>
</g>
<g >
<title>do_sys_poll (6 samples, 0.01%)</title><rect x="106.7" y="485" width="0.1" height="15.0" fill="rgb(210,113,23)" rx="2" ry="2" />
<text  x="109.70" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (14 samples, 0.03%)</title><rect x="977.6" y="293" width="0.3" height="15.0" fill="rgb(223,224,34)" rx="2" ry="2" />
<text  x="980.55" y="303.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (16 samples, 0.03%)</title><rect x="890.6" y="293" width="0.3" height="15.0" fill="rgb(222,3,49)" rx="2" ry="2" />
<text  x="893.56" y="303.5" ></text>
</g>
<g >
<title>core::cmp::min (329 samples, 0.64%)</title><rect x="315.8" y="357" width="7.6" height="15.0" fill="rgb(205,210,10)" rx="2" ry="2" />
<text  x="318.81" y="367.5" ></text>
</g>
<g >
<title>menu_update (18 samples, 0.04%)</title><rect x="161.2" y="357" width="0.4" height="15.0" fill="rgb(225,111,4)" rx="2" ry="2" />
<text  x="164.18" y="367.5" ></text>
</g>
<g >
<title>get_page_from_freelist (49 samples, 0.10%)</title><rect x="1082.2" y="373" width="1.1" height="15.0" fill="rgb(221,18,7)" rx="2" ry="2" />
<text  x="1085.21" y="383.5" ></text>
</g>
<g >
<title>ksys_write (177 samples, 0.35%)</title><rect x="177.8" y="325" width="4.1" height="15.0" fill="rgb(224,104,52)" rx="2" ry="2" />
<text  x="180.79" y="335.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (22 samples, 0.04%)</title><rect x="219.2" y="485" width="0.5" height="15.0" fill="rgb(232,150,19)" rx="2" ry="2" />
<text  x="222.21" y="495.5" ></text>
</g>
<g >
<title>alloc_page_buffers (15 samples, 0.03%)</title><rect x="178.3" y="117" width="0.4" height="15.0" fill="rgb(221,120,9)" rx="2" ry="2" />
<text  x="181.34" y="127.5" ></text>
</g>
<g >
<title>page_remove_rmap (7 samples, 0.01%)</title><rect x="1136.2" y="325" width="0.2" height="15.0" fill="rgb(238,178,53)" rx="2" ry="2" />
<text  x="1139.21" y="335.5" ></text>
</g>
<g >
<title>arch_call_rest_init (331 samples, 0.65%)</title><rect x="1182.4" y="469" width="7.6" height="15.0" fill="rgb(215,191,6)" rx="2" ry="2" />
<text  x="1185.38" y="479.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (16 samples, 0.03%)</title><rect x="218.5" y="501" width="0.4" height="15.0" fill="rgb(234,148,2)" rx="2" ry="2" />
<text  x="221.49" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (178 samples, 0.35%)</title><rect x="177.8" y="373" width="4.1" height="15.0" fill="rgb(209,38,18)" rx="2" ry="2" />
<text  x="180.77" y="383.5" ></text>
</g>
<g >
<title>newidle_balance (230 samples, 0.45%)</title><rect x="167.1" y="357" width="5.3" height="15.0" fill="rgb(233,198,30)" rx="2" ry="2" />
<text  x="170.12" y="367.5" ></text>
</g>
<g >
<title>vfs_iter_write (8 samples, 0.02%)</title><rect x="182.0" y="421" width="0.2" height="15.0" fill="rgb(252,6,51)" rx="2" ry="2" />
<text  x="184.98" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (16 samples, 0.03%)</title><rect x="1133.9" y="453" width="0.4" height="15.0" fill="rgb(231,144,4)" rx="2" ry="2" />
<text  x="1136.93" y="463.5" ></text>
</g>
<g >
<title>cmd_record (285 samples, 0.56%)</title><rect x="175.4" y="517" width="6.6" height="15.0" fill="rgb(243,109,26)" rx="2" ry="2" />
<text  x="178.42" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (183 samples, 0.36%)</title><rect x="988.5" y="325" width="4.2" height="15.0" fill="rgb(224,61,40)" rx="2" ry="2" />
<text  x="991.46" y="335.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (9 samples, 0.02%)</title><rect x="1187.6" y="389" width="0.2" height="15.0" fill="rgb(236,2,26)" rx="2" ry="2" />
<text  x="1190.56" y="399.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new (18 samples, 0.04%)</title><rect x="920.4" y="341" width="0.5" height="15.0" fill="rgb(244,162,36)" rx="2" ry="2" />
<text  x="923.45" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (6 samples, 0.01%)</title><rect x="136.4" y="357" width="0.2" height="15.0" fill="rgb(225,64,6)" rx="2" ry="2" />
<text  x="139.45" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (104 samples, 0.20%)</title><rect x="163.8" y="405" width="2.4" height="15.0" fill="rgb(251,186,45)" rx="2" ry="2" />
<text  x="166.78" y="415.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (3,759 samples, 7.33%)</title><rect x="842.0" y="373" width="86.5" height="15.0" fill="rgb(216,68,41)" rx="2" ry="2" />
<text  x="844.97" y="383.5" >rustposix:..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (593 samples, 1.16%)</title><rect x="799.5" y="325" width="13.6" height="15.0" fill="rgb(227,154,52)" rx="2" ry="2" />
<text  x="802.45" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (25 samples, 0.05%)</title><rect x="890.9" y="293" width="0.6" height="15.0" fill="rgb(212,171,10)" rx="2" ry="2" />
<text  x="893.93" y="303.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 0.12%)</title><rect x="175.7" y="181" width="1.5" height="15.0" fill="rgb(228,179,49)" rx="2" ry="2" />
<text  x="178.74" y="191.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (23 samples, 0.04%)</title><rect x="137.3" y="453" width="0.6" height="15.0" fill="rgb(223,130,9)" rx="2" ry="2" />
<text  x="140.35" y="463.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (15 samples, 0.03%)</title><rect x="785.6" y="389" width="0.3" height="15.0" fill="rgb(210,56,15)" rx="2" ry="2" />
<text  x="788.60" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (58 samples, 0.11%)</title><rect x="189.5" y="517" width="1.3" height="15.0" fill="rgb(214,175,4)" rx="2" ry="2" />
<text  x="192.50" y="527.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (3,090 samples, 6.02%)</title><rect x="621.8" y="309" width="71.1" height="15.0" fill="rgb(214,53,53)" rx="2" ry="2" />
<text  x="624.81" y="319.5" >ringbuf:..</text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.08%)</title><rect x="997.4" y="309" width="0.9" height="15.0" fill="rgb(226,209,1)" rx="2" ry="2" />
<text  x="1000.43" y="319.5" ></text>
</g>
<g >
<title>menu_select (114 samples, 0.22%)</title><rect x="134.1" y="437" width="2.6" height="15.0" fill="rgb(237,24,51)" rx="2" ry="2" />
<text  x="137.10" y="447.5" ></text>
</g>
<g >
<title>new_sync_write (8 samples, 0.02%)</title><rect x="182.0" y="453" width="0.2" height="15.0" fill="rgb(215,161,20)" rx="2" ry="2" />
<text  x="184.98" y="463.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2,631 samples, 5.13%)</title><rect x="632.1" y="277" width="60.6" height="15.0" fill="rgb(244,10,8)" rx="2" ry="2" />
<text  x="635.14" y="287.5" >__memm..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (479 samples, 0.93%)</title><rect x="586.6" y="309" width="11.0" height="15.0" fill="rgb(244,99,1)" rx="2" ry="2" />
<text  x="589.56" y="319.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (19 samples, 0.04%)</title><rect x="111.9" y="245" width="0.4" height="15.0" fill="rgb(209,171,26)" rx="2" ry="2" />
<text  x="114.90" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (37 samples, 0.07%)</title><rect x="1134.9" y="533" width="0.8" height="15.0" fill="rgb(211,121,50)" rx="2" ry="2" />
<text  x="1137.85" y="543.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (46 samples, 0.09%)</title><rect x="939.1" y="293" width="1.0" height="15.0" fill="rgb(234,70,53)" rx="2" ry="2" />
<text  x="942.06" y="303.5" ></text>
</g>
<g >
<title>cpumask_next_and (9 samples, 0.02%)</title><rect x="170.4" y="309" width="0.2" height="15.0" fill="rgb(223,5,36)" rx="2" ry="2" />
<text  x="173.36" y="319.5" ></text>
</g>
<g >
<title>__test_set_page_writeback (8 samples, 0.02%)</title><rect x="109.1" y="277" width="0.2" height="15.0" fill="rgb(228,229,51)" rx="2" ry="2" />
<text  x="112.12" y="287.5" ></text>
</g>
<g >
<title>do_idle (1,486 samples, 2.90%)</title><rect x="109.5" y="485" width="34.1" height="15.0" fill="rgb(219,86,52)" rx="2" ry="2" />
<text  x="112.46" y="495.5" >do..</text>
</g>
<g >
<title>CompareAndSwap (681 samples, 1.33%)</title><rect x="259.3" y="485" width="15.7" height="15.0" fill="rgb(218,41,36)" rx="2" ry="2" />
<text  x="262.31" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (645 samples, 1.26%)</title><rect x="951.6" y="325" width="14.9" height="15.0" fill="rgb(216,102,38)" rx="2" ry="2" />
<text  x="954.64" y="335.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (24 samples, 0.05%)</title><rect x="893.9" y="325" width="0.6" height="15.0" fill="rgb(253,153,25)" rx="2" ry="2" />
<text  x="896.92" y="335.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (116 samples, 0.23%)</title><rect x="1081.6" y="517" width="2.7" height="15.0" fill="rgb(234,34,28)" rx="2" ry="2" />
<text  x="1084.64" y="527.5" ></text>
</g>
<g >
<title>__GI___poll (15 samples, 0.03%)</title><rect x="177.3" y="469" width="0.4" height="15.0" fill="rgb(225,85,6)" rx="2" ry="2" />
<text  x="180.31" y="479.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (5 samples, 0.01%)</title><rect x="106.1" y="533" width="0.1" height="15.0" fill="rgb(210,144,0)" rx="2" ry="2" />
<text  x="109.06" y="543.5" ></text>
</g>
<g >
<title>nohz_csd_func (27 samples, 0.05%)</title><rect x="138.4" y="453" width="0.7" height="15.0" fill="rgb(221,110,25)" rx="2" ry="2" />
<text  x="141.45" y="463.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (39 samples, 0.08%)</title><rect x="939.2" y="261" width="0.9" height="15.0" fill="rgb(207,216,27)" rx="2" ry="2" />
<text  x="942.22" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (7 samples, 0.01%)</title><rect x="137.0" y="437" width="0.1" height="15.0" fill="rgb(254,33,39)" rx="2" ry="2" />
<text  x="139.98" y="447.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (145 samples, 0.28%)</title><rect x="1174.6" y="421" width="3.3" height="15.0" fill="rgb(242,218,11)" rx="2" ry="2" />
<text  x="1177.61" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (249 samples, 0.49%)</title><rect x="944.0" y="325" width="5.7" height="15.0" fill="rgb(248,25,51)" rx="2" ry="2" />
<text  x="946.98" y="335.5" ></text>
</g>
<g >
<title>[anon] (1,624 samples, 3.17%)</title><rect x="182.3" y="533" width="37.4" height="15.0" fill="rgb(234,6,23)" rx="2" ry="2" />
<text  x="185.35" y="543.5" >[an..</text>
</g>
<g >
<title>native_write_msr (64 samples, 0.12%)</title><rect x="175.7" y="165" width="1.5" height="15.0" fill="rgb(225,184,40)" rx="2" ry="2" />
<text  x="178.74" y="175.5" ></text>
</g>
<g >
<title>pick_next_task_fair (36 samples, 0.07%)</title><rect x="1181.1" y="437" width="0.8" height="15.0" fill="rgb(253,8,44)" rx="2" ry="2" />
<text  x="1184.05" y="447.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (5 samples, 0.01%)</title><rect x="845.1" y="325" width="0.1" height="15.0" fill="rgb(214,142,45)" rx="2" ry="2" />
<text  x="848.10" y="335.5" ></text>
</g>
<g >
<title>kick_ilb (21 samples, 0.04%)</title><rect x="1181.3" y="389" width="0.5" height="15.0" fill="rgb(233,4,52)" rx="2" ry="2" />
<text  x="1184.35" y="399.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (5 samples, 0.01%)</title><rect x="180.3" y="133" width="0.1" height="15.0" fill="rgb(220,137,11)" rx="2" ry="2" />
<text  x="183.30" y="143.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (287 samples, 0.56%)</title><rect x="931.8" y="261" width="6.6" height="15.0" fill="rgb(247,95,53)" rx="2" ry="2" />
<text  x="934.81" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (25 samples, 0.05%)</title><rect x="136.1" y="405" width="0.6" height="15.0" fill="rgb(241,109,41)" rx="2" ry="2" />
<text  x="139.08" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (89 samples, 0.17%)</title><rect x="947.1" y="277" width="2.1" height="15.0" fill="rgb(227,60,38)" rx="2" ry="2" />
<text  x="950.11" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (43 samples, 0.08%)</title><rect x="1103.8" y="517" width="1.0" height="15.0" fill="rgb(234,91,27)" rx="2" ry="2" />
<text  x="1106.79" y="527.5" ></text>
</g>
<g >
<title>alloc_pages_current (23 samples, 0.04%)</title><rect x="179.7" y="117" width="0.5" height="15.0" fill="rgb(237,19,47)" rx="2" ry="2" />
<text  x="182.66" y="127.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (604 samples, 1.18%)</title><rect x="813.1" y="373" width="13.9" height="15.0" fill="rgb(220,37,7)" rx="2" ry="2" />
<text  x="816.09" y="383.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (8 samples, 0.02%)</title><rect x="159.1" y="341" width="0.2" height="15.0" fill="rgb(214,132,30)" rx="2" ry="2" />
<text  x="162.11" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (14 samples, 0.03%)</title><rect x="218.0" y="437" width="0.3" height="15.0" fill="rgb(218,95,33)" rx="2" ry="2" />
<text  x="220.99" y="447.5" ></text>
</g>
<g >
<title>rest_init (331 samples, 0.65%)</title><rect x="1182.4" y="453" width="7.6" height="15.0" fill="rgb(215,160,11)" rx="2" ry="2" />
<text  x="1185.38" y="463.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (22 samples, 0.04%)</title><rect x="143.6" y="485" width="0.6" height="15.0" fill="rgb(233,222,22)" rx="2" ry="2" />
<text  x="146.65" y="495.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (331 samples, 0.65%)</title><rect x="1182.4" y="517" width="7.6" height="15.0" fill="rgb(226,26,20)" rx="2" ry="2" />
<text  x="1185.38" y="527.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (18 samples, 0.04%)</title><rect x="222.8" y="517" width="0.5" height="15.0" fill="rgb(241,57,54)" rx="2" ry="2" />
<text  x="225.84" y="527.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (43 samples, 0.08%)</title><rect x="290.7" y="469" width="1.0" height="15.0" fill="rgb(217,147,49)" rx="2" ry="2" />
<text  x="293.71" y="479.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (45 samples, 0.09%)</title><rect x="141.5" y="373" width="1.0" height="15.0" fill="rgb(254,217,44)" rx="2" ry="2" />
<text  x="144.46" y="383.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_try_init (9 samples, 0.02%)</title><rect x="793.7" y="325" width="0.2" height="15.0" fill="rgb(233,41,11)" rx="2" ry="2" />
<text  x="796.72" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (6 samples, 0.01%)</title><rect x="112.7" y="293" width="0.1" height="15.0" fill="rgb(219,63,25)" rx="2" ry="2" />
<text  x="115.66" y="303.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (38 samples, 0.07%)</title><rect x="947.7" y="229" width="0.8" height="15.0" fill="rgb(236,105,6)" rx="2" ry="2" />
<text  x="950.66" y="239.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (12 samples, 0.02%)</title><rect x="827.5" y="261" width="0.3" height="15.0" fill="rgb(233,170,52)" rx="2" ry="2" />
<text  x="830.52" y="271.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (26 samples, 0.05%)</title><rect x="110.4" y="389" width="0.6" height="15.0" fill="rgb(229,137,10)" rx="2" ry="2" />
<text  x="113.38" y="399.5" ></text>
</g>
<g >
<title>nohz_csd_func (10 samples, 0.02%)</title><rect x="1180.7" y="453" width="0.3" height="15.0" fill="rgb(223,212,48)" rx="2" ry="2" />
<text  x="1183.73" y="463.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (30 samples, 0.06%)</title><rect x="1181.2" y="405" width="0.7" height="15.0" fill="rgb(209,188,20)" rx="2" ry="2" />
<text  x="1184.17" y="415.5" ></text>
</g>
<g >
<title>generic_exec_single (33 samples, 0.06%)</title><rect x="170.6" y="293" width="0.8" height="15.0" fill="rgb(210,200,4)" rx="2" ry="2" />
<text  x="173.64" y="303.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (11,997 samples, 23.39%)</title><rect x="740.1" y="469" width="276.1" height="15.0" fill="rgb(234,194,9)" rx="2" ry="2" />
<text  x="743.14" y="479.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.12%)</title><rect x="944.8" y="293" width="1.5" height="15.0" fill="rgb(213,116,4)" rx="2" ry="2" />
<text  x="947.79" y="303.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (593 samples, 1.16%)</title><rect x="799.5" y="341" width="13.6" height="15.0" fill="rgb(221,99,7)" rx="2" ry="2" />
<text  x="802.45" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (781 samples, 1.52%)</title><rect x="603.8" y="309" width="18.0" height="15.0" fill="rgb(253,74,14)" rx="2" ry="2" />
<text  x="606.84" y="319.5" ></text>
</g>
<g >
<title>process_one_work (22 samples, 0.04%)</title><rect x="108.9" y="485" width="0.5" height="15.0" fill="rgb(218,16,39)" rx="2" ry="2" />
<text  x="111.89" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (9 samples, 0.02%)</title><rect x="920.4" y="277" width="0.3" height="15.0" fill="rgb(241,76,1)" rx="2" ry="2" />
<text  x="923.45" y="287.5" ></text>
</g>
<g >
<title>alx_clean_rx_irq (10 samples, 0.02%)</title><rect x="111.3" y="277" width="0.2" height="15.0" fill="rgb(232,114,19)" rx="2" ry="2" />
<text  x="114.26" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (242 samples, 0.47%)</title><rect x="788.2" y="341" width="5.5" height="15.0" fill="rgb(244,165,31)" rx="2" ry="2" />
<text  x="791.15" y="351.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (7 samples, 0.01%)</title><rect x="181.3" y="53" width="0.2" height="15.0" fill="rgb(229,53,48)" rx="2" ry="2" />
<text  x="184.34" y="63.5" ></text>
</g>
<g >
<title>asm_common_interrupt (17 samples, 0.03%)</title><rect x="1174.0" y="421" width="0.4" height="15.0" fill="rgb(215,193,42)" rx="2" ry="2" />
<text  x="1176.99" y="431.5" ></text>
</g>
<g >
<title>NaClMutexLock (15 samples, 0.03%)</title><rect x="1087.2" y="517" width="0.3" height="15.0" fill="rgb(205,76,47)" rx="2" ry="2" />
<text  x="1090.16" y="527.5" ></text>
</g>
<g >
<title>kcompactd (73 samples, 0.14%)</title><rect x="107.2" y="501" width="1.6" height="15.0" fill="rgb(206,214,28)" rx="2" ry="2" />
<text  x="110.16" y="511.5" ></text>
</g>
<g >
<title>do_idle (326 samples, 0.64%)</title><rect x="1182.4" y="421" width="7.5" height="15.0" fill="rgb(235,6,49)" rx="2" ry="2" />
<text  x="1185.41" y="431.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (23 samples, 0.04%)</title><rect x="251.9" y="485" width="0.5" height="15.0" fill="rgb(240,190,30)" rx="2" ry="2" />
<text  x="254.85" y="495.5" ></text>
</g>
<g >
<title>dispatcher (18,034 samples, 35.16%)</title><rect x="292.0" y="421" width="414.9" height="15.0" fill="rgb(250,157,2)" rx="2" ry="2" />
<text  x="295.00" y="431.5" >dispatcher</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (8,775 samples, 17.11%)</title><rect x="785.9" y="389" width="201.9" height="15.0" fill="rgb(217,58,26)" rx="2" ry="2" />
<text  x="788.95" y="399.5" >rustposix::safeposix::sysc..</text>
</g>
<g >
<title>__handle_mm_fault (92 samples, 0.18%)</title><rect x="1082.0" y="453" width="2.1" height="15.0" fill="rgb(206,68,36)" rx="2" ry="2" />
<text  x="1084.98" y="463.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (13 samples, 0.03%)</title><rect x="999.4" y="325" width="0.3" height="15.0" fill="rgb(231,20,11)" rx="2" ry="2" />
<text  x="1002.36" y="335.5" ></text>
</g>
<g >
<title>menu_select (139 samples, 0.27%)</title><rect x="160.2" y="373" width="3.2" height="15.0" fill="rgb(222,163,9)" rx="2" ry="2" />
<text  x="163.19" y="383.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12 samples, 0.02%)</title><rect x="195.0" y="485" width="0.3" height="15.0" fill="rgb(250,203,12)" rx="2" ry="2" />
<text  x="198.00" y="495.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1,353 samples, 2.64%)</title><rect x="144.2" y="517" width="31.1" height="15.0" fill="rgb(249,97,12)" rx="2" ry="2" />
<text  x="147.20" y="527.5" >x8..</text>
</g>
<g >
<title>record__pushfn (179 samples, 0.35%)</title><rect x="177.8" y="437" width="4.1" height="15.0" fill="rgb(251,40,47)" rx="2" ry="2" />
<text  x="180.77" y="447.5" ></text>
</g>
<g >
<title>pick_next_task_fair (126 samples, 0.25%)</title><rect x="139.6" y="437" width="2.9" height="15.0" fill="rgb(245,157,38)" rx="2" ry="2" />
<text  x="142.60" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (8 samples, 0.02%)</title><rect x="218.3" y="437" width="0.2" height="15.0" fill="rgb(249,55,21)" rx="2" ry="2" />
<text  x="221.31" y="447.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (22 samples, 0.04%)</title><rect x="219.2" y="501" width="0.5" height="15.0" fill="rgb(241,143,51)" rx="2" ry="2" />
<text  x="222.21" y="511.5" ></text>
</g>
<g >
<title>record__write (179 samples, 0.35%)</title><rect x="177.8" y="421" width="4.1" height="15.0" fill="rgb(247,130,33)" rx="2" ry="2" />
<text  x="180.77" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_futex (7 samples, 0.01%)</title><rect x="106.5" y="501" width="0.1" height="15.0" fill="rgb(241,50,50)" rx="2" ry="2" />
<text  x="109.47" y="511.5" ></text>
</g>
<g >
<title>read_tsc (7 samples, 0.01%)</title><rect x="143.0" y="453" width="0.1" height="15.0" fill="rgb(215,104,39)" rx="2" ry="2" />
<text  x="145.96" y="463.5" ></text>
</g>
<g >
<title>enqueue_task (5 samples, 0.01%)</title><rect x="112.5" y="245" width="0.1" height="15.0" fill="rgb(247,164,19)" rx="2" ry="2" />
<text  x="115.50" y="255.5" ></text>
</g>
<g >
<title>irq_exit_rcu (59 samples, 0.12%)</title><rect x="111.0" y="389" width="1.4" height="15.0" fill="rgb(253,151,34)" rx="2" ry="2" />
<text  x="114.00" y="399.5" ></text>
</g>
<g >
<title>cpuidle_select (32 samples, 0.06%)</title><rect x="1186.8" y="389" width="0.7" height="15.0" fill="rgb(224,41,7)" rx="2" ry="2" />
<text  x="1189.76" y="399.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (74 samples, 0.14%)</title><rect x="938.4" y="309" width="1.7" height="15.0" fill="rgb(252,26,13)" rx="2" ry="2" />
<text  x="941.41" y="319.5" ></text>
</g>
<g >
<title>generic_exec_single (15 samples, 0.03%)</title><rect x="141.5" y="357" width="0.3" height="15.0" fill="rgb(213,133,49)" rx="2" ry="2" />
<text  x="144.49" y="367.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (11 samples, 0.02%)</title><rect x="178.7" y="117" width="0.2" height="15.0" fill="rgb(228,211,33)" rx="2" ry="2" />
<text  x="181.69" y="127.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (54 samples, 0.11%)</title><rect x="892.4" y="277" width="1.3" height="15.0" fill="rgb(205,105,15)" rx="2" ry="2" />
<text  x="895.45" y="287.5" ></text>
</g>
<g >
<title>native_sched_clock (8 samples, 0.02%)</title><rect x="133.7" y="405" width="0.2" height="15.0" fill="rgb(222,205,26)" rx="2" ry="2" />
<text  x="136.69" y="415.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (166 samples, 0.32%)</title><rect x="1182.9" y="373" width="3.8" height="15.0" fill="rgb(206,164,41)" rx="2" ry="2" />
<text  x="1185.87" y="383.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (10 samples, 0.02%)</title><rect x="108.1" y="325" width="0.3" height="15.0" fill="rgb(210,217,7)" rx="2" ry="2" />
<text  x="111.15" y="335.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (16 samples, 0.03%)</title><rect x="1136.9" y="517" width="0.3" height="15.0" fill="rgb(227,212,37)" rx="2" ry="2" />
<text  x="1139.88" y="527.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (304 samples, 0.59%)</title><rect x="1027.0" y="453" width="7.0" height="15.0" fill="rgb(216,71,1)" rx="2" ry="2" />
<text  x="1029.97" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (12 samples, 0.02%)</title><rect x="1187.2" y="357" width="0.3" height="15.0" fill="rgb(234,127,3)" rx="2" ry="2" />
<text  x="1190.19" y="367.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (1,098 samples, 2.14%)</title><rect x="895.2" y="325" width="25.2" height="15.0" fill="rgb(227,50,17)" rx="2" ry="2" />
<text  x="898.18" y="335.5" >r..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (33 samples, 0.06%)</title><rect x="992.7" y="341" width="0.7" height="15.0" fill="rgb(251,217,39)" rx="2" ry="2" />
<text  x="995.67" y="351.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (501 samples, 0.98%)</title><rect x="987.8" y="405" width="11.6" height="15.0" fill="rgb(218,92,14)" rx="2" ry="2" />
<text  x="990.83" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.03%)</title><rect x="177.4" y="437" width="0.3" height="15.0" fill="rgb(212,218,35)" rx="2" ry="2" />
<text  x="180.36" y="447.5" ></text>
</g>
<g >
<title>vfs_write (176 samples, 0.34%)</title><rect x="177.8" y="309" width="4.1" height="15.0" fill="rgb(252,139,21)" rx="2" ry="2" />
<text  x="180.82" y="319.5" ></text>
</g>
<g >
<title>NaClXMutexLock (22 samples, 0.04%)</title><rect x="1043.1" y="501" width="0.5" height="15.0" fill="rgb(231,11,52)" rx="2" ry="2" />
<text  x="1046.05" y="511.5" ></text>
</g>
<g >
<title>worker_thread (23 samples, 0.04%)</title><rect x="108.9" y="501" width="0.5" height="15.0" fill="rgb(210,29,15)" rx="2" ry="2" />
<text  x="111.89" y="511.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (17 samples, 0.03%)</title><rect x="995.3" y="245" width="0.4" height="15.0" fill="rgb(237,189,2)" rx="2" ry="2" />
<text  x="998.31" y="255.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="943.6" y="197" width="0.2" height="15.0" fill="rgb(211,120,1)" rx="2" ry="2" />
<text  x="946.64" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (240 samples, 0.47%)</title><rect x="793.9" y="357" width="5.6" height="15.0" fill="rgb(254,167,38)" rx="2" ry="2" />
<text  x="796.93" y="367.5" ></text>
</g>
<g >
<title>NaClLog (103 samples, 0.20%)</title><rect x="286.2" y="501" width="2.4" height="15.0" fill="rgb(217,63,36)" rx="2" ry="2" />
<text  x="289.25" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (14 samples, 0.03%)</title><rect x="998.0" y="277" width="0.3" height="15.0" fill="rgb(224,149,50)" rx="2" ry="2" />
<text  x="1001.03" y="287.5" ></text>
</g>
<g >
<title>lru_cache_add (11 samples, 0.02%)</title><rect x="1083.5" y="389" width="0.2" height="15.0" fill="rgb(218,207,23)" rx="2" ry="2" />
<text  x="1086.48" y="399.5" ></text>
</g>
<g >
<title>ion (179 samples, 0.35%)</title><rect x="177.8" y="405" width="4.1" height="15.0" fill="rgb(248,185,2)" rx="2" ry="2" />
<text  x="180.77" y="415.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (6 samples, 0.01%)</title><rect x="1181.6" y="341" width="0.1" height="15.0" fill="rgb(217,68,19)" rx="2" ry="2" />
<text  x="1184.56" y="351.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (6 samples, 0.01%)</title><rect x="137.0" y="421" width="0.1" height="15.0" fill="rgb(235,120,11)" rx="2" ry="2" />
<text  x="139.98" y="431.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (10 samples, 0.02%)</title><rect x="187.4" y="517" width="0.2" height="15.0" fill="rgb(231,168,18)" rx="2" ry="2" />
<text  x="190.36" y="527.5" ></text>
</g>
<g >
<title>llist_add_batch (10 samples, 0.02%)</title><rect x="1189.1" y="293" width="0.3" height="15.0" fill="rgb(208,123,0)" rx="2" ry="2" />
<text  x="1192.13" y="303.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (271 samples, 0.53%)</title><rect x="204.8" y="453" width="6.2" height="15.0" fill="rgb(239,86,9)" rx="2" ry="2" />
<text  x="207.80" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (33 samples, 0.06%)</title><rect x="325.0" y="341" width="0.7" height="15.0" fill="rgb(224,212,8)" rx="2" ry="2" />
<text  x="327.97" y="351.5" ></text>
</g>
<g >
<title>event_function_call (66 samples, 0.13%)</title><rect x="175.7" y="309" width="1.5" height="15.0" fill="rgb(212,13,51)" rx="2" ry="2" />
<text  x="178.70" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (8 samples, 0.02%)</title><rect x="1182.9" y="357" width="0.2" height="15.0" fill="rgb(245,19,4)" rx="2" ry="2" />
<text  x="1185.89" y="367.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (13 samples, 0.03%)</title><rect x="194.2" y="437" width="0.3" height="15.0" fill="rgb(240,57,48)" rx="2" ry="2" />
<text  x="197.24" y="447.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (6 samples, 0.01%)</title><rect x="184.7" y="517" width="0.1" height="15.0" fill="rgb(229,65,8)" rx="2" ry="2" />
<text  x="187.67" y="527.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (8 samples, 0.02%)</title><rect x="218.3" y="469" width="0.2" height="15.0" fill="rgb(210,64,7)" rx="2" ry="2" />
<text  x="221.31" y="479.5" ></text>
</g>
<g >
<title>napi_poll (57 samples, 0.11%)</title><rect x="111.0" y="309" width="1.3" height="15.0" fill="rgb(213,150,26)" rx="2" ry="2" />
<text  x="114.03" y="319.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (22 samples, 0.04%)</title><rect x="1103.8" y="485" width="0.5" height="15.0" fill="rgb(214,95,25)" rx="2" ry="2" />
<text  x="1106.79" y="495.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="218.3" y="485" width="0.2" height="15.0" fill="rgb(223,179,46)" rx="2" ry="2" />
<text  x="221.31" y="495.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7 samples, 0.01%)</title><rect x="1174.2" y="261" width="0.2" height="15.0" fill="rgb(217,139,36)" rx="2" ry="2" />
<text  x="1177.19" y="271.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (14 samples, 0.03%)</title><rect x="141.5" y="341" width="0.3" height="15.0" fill="rgb(215,219,6)" rx="2" ry="2" />
<text  x="144.51" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (45 samples, 0.09%)</title><rect x="1135.8" y="517" width="1.1" height="15.0" fill="rgb(208,49,17)" rx="2" ry="2" />
<text  x="1138.84" y="527.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (421 samples, 0.82%)</title><rect x="978.1" y="341" width="9.7" height="15.0" fill="rgb(232,110,45)" rx="2" ry="2" />
<text  x="981.15" y="351.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (14 samples, 0.03%)</title><rect x="977.6" y="325" width="0.3" height="15.0" fill="rgb(246,73,40)" rx="2" ry="2" />
<text  x="980.55" y="335.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (11,905 samples, 23.21%)</title><rect x="742.0" y="453" width="273.9" height="15.0" fill="rgb(239,72,40)" rx="2" ry="2" />
<text  x="744.98" y="463.5" >NaClHostDescWrite</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (43 samples, 0.08%)</title><rect x="998.4" y="325" width="1.0" height="15.0" fill="rgb(222,110,16)" rx="2" ry="2" />
<text  x="1001.37" y="335.5" ></text>
</g>
<g >
<title>cpuidle_reflect (5 samples, 0.01%)</title><rect x="134.0" y="453" width="0.1" height="15.0" fill="rgb(215,152,43)" rx="2" ry="2" />
<text  x="136.99" y="463.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (916 samples, 1.79%)</title><rect x="253.9" y="501" width="21.1" height="15.0" fill="rgb(250,46,17)" rx="2" ry="2" />
<text  x="256.90" y="511.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (8 samples, 0.02%)</title><rect x="177.4" y="389" width="0.1" height="15.0" fill="rgb(234,67,11)" rx="2" ry="2" />
<text  x="180.36" y="399.5" ></text>
</g>
<g >
<title>native_sched_clock (7 samples, 0.01%)</title><rect x="133.1" y="389" width="0.2" height="15.0" fill="rgb(243,42,4)" rx="2" ry="2" />
<text  x="136.11" y="399.5" ></text>
</g>
<g >
<title>vfs_write (8 samples, 0.02%)</title><rect x="182.0" y="469" width="0.2" height="15.0" fill="rgb(241,0,3)" rx="2" ry="2" />
<text  x="184.98" y="479.5" ></text>
</g>
<g >
<title>lru_cache_add (5 samples, 0.01%)</title><rect x="179.5" y="101" width="0.2" height="15.0" fill="rgb(211,57,51)" rx="2" ry="2" />
<text  x="182.54" y="111.5" ></text>
</g>
<g >
<title>__cmd_record (285 samples, 0.56%)</title><rect x="175.4" y="501" width="6.6" height="15.0" fill="rgb(236,169,41)" rx="2" ry="2" />
<text  x="178.42" y="511.5" ></text>
</g>
<g >
<title>[sel_ldr] (1,299 samples, 2.53%)</title><rect x="1051.7" y="517" width="29.9" height="15.0" fill="rgb(230,99,0)" rx="2" ry="2" />
<text  x="1054.73" y="527.5" >[s..</text>
</g>
<g >
<title>generic_write_end (46 samples, 0.09%)</title><rect x="180.4" y="149" width="1.1" height="15.0" fill="rgb(207,21,21)" rx="2" ry="2" />
<text  x="183.44" y="159.5" ></text>
</g>
<g >
<title>std::thread::panicking (13 samples, 0.03%)</title><rect x="999.4" y="357" width="0.3" height="15.0" fill="rgb(224,67,48)" rx="2" ry="2" />
<text  x="1002.36" y="367.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (13 samples, 0.03%)</title><rect x="999.4" y="373" width="0.3" height="15.0" fill="rgb(251,128,1)" rx="2" ry="2" />
<text  x="1002.36" y="383.5" ></text>
</g>
<g >
<title>sync_regs (11 samples, 0.02%)</title><rect x="1084.4" y="517" width="0.2" height="15.0" fill="rgb(245,166,3)" rx="2" ry="2" />
<text  x="1087.35" y="527.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (470 samples, 0.92%)</title><rect x="275.4" y="501" width="10.8" height="15.0" fill="rgb(221,111,11)" rx="2" ry="2" />
<text  x="278.44" y="511.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (14,599 samples, 28.46%)</title><rect x="707.2" y="501" width="335.9" height="15.0" fill="rgb(212,193,22)" rx="2" ry="2" />
<text  x="710.17" y="511.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (242 samples, 0.47%)</title><rect x="788.2" y="373" width="5.5" height="15.0" fill="rgb(219,188,41)" rx="2" ry="2" />
<text  x="791.15" y="383.5" ></text>
</g>
<g >
<title>idle_cpu (7 samples, 0.01%)</title><rect x="169.2" y="309" width="0.2" height="15.0" fill="rgb(231,184,44)" rx="2" ry="2" />
<text  x="172.23" y="319.5" ></text>
</g>
<g >
<title>start_kernel (331 samples, 0.65%)</title><rect x="1182.4" y="485" width="7.6" height="15.0" fill="rgb(221,148,11)" rx="2" ry="2" />
<text  x="1185.38" y="495.5" ></text>
</g>
<g >
<title>try_to_unmap (11 samples, 0.02%)</title><rect x="108.1" y="405" width="0.3" height="15.0" fill="rgb(232,50,8)" rx="2" ry="2" />
<text  x="111.13" y="415.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (640 samples, 1.25%)</title><rect x="770.3" y="373" width="14.8" height="15.0" fill="rgb(242,200,48)" rx="2" ry="2" />
<text  x="773.35" y="383.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (14 samples, 0.03%)</title><rect x="1083.0" y="341" width="0.3" height="15.0" fill="rgb(227,122,20)" rx="2" ry="2" />
<text  x="1085.99" y="351.5" ></text>
</g>
<g >
<title>_perf_event_enable (66 samples, 0.13%)</title><rect x="175.7" y="325" width="1.5" height="15.0" fill="rgb(226,121,13)" rx="2" ry="2" />
<text  x="178.70" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (14 samples, 0.03%)</title><rect x="1088.1" y="517" width="0.4" height="15.0" fill="rgb(207,16,41)" rx="2" ry="2" />
<text  x="1091.15" y="527.5" ></text>
</g>
<g >
<title>clear_page_erms (9 samples, 0.02%)</title><rect x="179.8" y="69" width="0.2" height="15.0" fill="rgb(223,11,29)" rx="2" ry="2" />
<text  x="182.77" y="79.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (32 samples, 0.06%)</title><rect x="324.2" y="325" width="0.8" height="15.0" fill="rgb(240,181,47)" rx="2" ry="2" />
<text  x="327.23" y="335.5" ></text>
</g>
<g >
<title>rcu_idle_exit (6 samples, 0.01%)</title><rect x="1186.5" y="357" width="0.1" height="15.0" fill="rgb(232,21,4)" rx="2" ry="2" />
<text  x="1189.48" y="367.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 0.16%)</title><rect x="175.4" y="469" width="1.9" height="15.0" fill="rgb(215,148,16)" rx="2" ry="2" />
<text  x="178.45" y="479.5" ></text>
</g>
<g >
<title>ext4_inode_csum (5 samples, 0.01%)</title><rect x="181.1" y="37" width="0.1" height="15.0" fill="rgb(229,159,24)" rx="2" ry="2" />
<text  x="184.13" y="47.5" ></text>
</g>
<g >
<title>clear_page_erms (29 samples, 0.06%)</title><rect x="1082.3" y="357" width="0.7" height="15.0" fill="rgb(219,103,44)" rx="2" ry="2" />
<text  x="1085.30" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18 samples, 0.04%)</title><rect x="146.0" y="357" width="0.4" height="15.0" fill="rgb(249,35,44)" rx="2" ry="2" />
<text  x="148.95" y="367.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (696 samples, 1.36%)</title><rect x="999.7" y="389" width="16.0" height="15.0" fill="rgb(219,95,4)" rx="2" ry="2" />
<text  x="1002.66" y="399.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (5 samples, 0.01%)</title><rect x="291.7" y="501" width="0.1" height="15.0" fill="rgb(254,40,37)" rx="2" ry="2" />
<text  x="294.72" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (25 samples, 0.05%)</title><rect x="890.9" y="309" width="0.6" height="15.0" fill="rgb(226,228,51)" rx="2" ry="2" />
<text  x="893.93" y="319.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (8 samples, 0.02%)</title><rect x="108.2" y="293" width="0.2" height="15.0" fill="rgb(211,203,22)" rx="2" ry="2" />
<text  x="111.20" y="303.5" ></text>
</g>
<g >
<title>common_interrupt (17 samples, 0.03%)</title><rect x="1174.0" y="405" width="0.4" height="15.0" fill="rgb(221,8,27)" rx="2" ry="2" />
<text  x="1176.99" y="415.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.06%)</title><rect x="945.6" y="261" width="0.7" height="15.0" fill="rgb(206,143,4)" rx="2" ry="2" />
<text  x="948.59" y="271.5" ></text>
</g>
<g >
<title>lind_exit (5 samples, 0.01%)</title><rect x="291.8" y="469" width="0.2" height="15.0" fill="rgb(242,141,31)" rx="2" ry="2" />
<text  x="294.84" y="479.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (20 samples, 0.04%)</title><rect x="725.9" y="485" width="0.4" height="15.0" fill="rgb(242,35,9)" rx="2" ry="2" />
<text  x="728.85" y="495.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (9 samples, 0.02%)</title><rect x="989.9" y="277" width="0.2" height="15.0" fill="rgb(231,155,27)" rx="2" ry="2" />
<text  x="992.93" y="287.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (19 samples, 0.04%)</title><rect x="1134.3" y="501" width="0.4" height="15.0" fill="rgb(248,0,24)" rx="2" ry="2" />
<text  x="1137.30" y="511.5" ></text>
</g>
<g >
<title>split_map_pages (10 samples, 0.02%)</title><rect x="108.6" y="389" width="0.2" height="15.0" fill="rgb(218,118,10)" rx="2" ry="2" />
<text  x="111.61" y="399.5" ></text>
</g>
<g >
<title>core::cmp::min_by (22 samples, 0.04%)</title><rect x="844.6" y="325" width="0.5" height="15.0" fill="rgb(221,90,25)" rx="2" ry="2" />
<text  x="847.59" y="335.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (5 samples, 0.01%)</title><rect x="179.5" y="85" width="0.2" height="15.0" fill="rgb(212,112,44)" rx="2" ry="2" />
<text  x="182.54" y="95.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (14 samples, 0.03%)</title><rect x="218.0" y="469" width="0.3" height="15.0" fill="rgb(206,71,41)" rx="2" ry="2" />
<text  x="220.99" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (18,033 samples, 35.16%)</title><rect x="292.0" y="389" width="414.9" height="15.0" fill="rgb(222,14,24)" rx="2" ry="2" />
<text  x="295.00" y="399.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposi..</text>
</g>
<g >
<title>[unknown] (2,179 samples, 4.25%)</title><rect x="1084.6" y="533" width="50.1" height="15.0" fill="rgb(228,58,11)" rx="2" ry="2" />
<text  x="1087.60" y="543.5" >[unkn..</text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (15 samples, 0.03%)</title><rect x="218.9" y="501" width="0.3" height="15.0" fill="rgb(223,154,53)" rx="2" ry="2" />
<text  x="221.86" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (6 samples, 0.01%)</title><rect x="998.8" y="277" width="0.1" height="15.0" fill="rgb(241,181,53)" rx="2" ry="2" />
<text  x="1001.79" y="287.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (5 samples, 0.01%)</title><rect x="291.8" y="405" width="0.2" height="15.0" fill="rgb(233,176,18)" rx="2" ry="2" />
<text  x="294.84" y="415.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (79 samples, 0.15%)</title><rect x="891.9" y="293" width="1.8" height="15.0" fill="rgb(209,110,31)" rx="2" ry="2" />
<text  x="894.87" y="303.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (32 samples, 0.06%)</title><rect x="222.1" y="517" width="0.7" height="15.0" fill="rgb(235,143,9)" rx="2" ry="2" />
<text  x="225.10" y="527.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (9,745 samples, 19.00%)</title><rect x="334.3" y="341" width="224.2" height="15.0" fill="rgb(214,170,36)" rx="2" ry="2" />
<text  x="337.31" y="351.5" >ringbuf::ring_buffer::RingBuf..</text>
</g>
<g >
<title>cpuidle_idle_call (283 samples, 0.55%)</title><rect x="1173.8" y="469" width="6.5" height="15.0" fill="rgb(220,9,7)" rx="2" ry="2" />
<text  x="1176.83" y="479.5" ></text>
</g>
<g >
<title>rmqueue (15 samples, 0.03%)</title><rect x="1083.0" y="357" width="0.3" height="15.0" fill="rgb(206,22,36)" rx="2" ry="2" />
<text  x="1085.97" y="367.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (16 samples, 0.03%)</title><rect x="185.8" y="517" width="0.4" height="15.0" fill="rgb(245,152,43)" rx="2" ry="2" />
<text  x="188.82" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (80 samples, 0.16%)</title><rect x="175.4" y="389" width="1.9" height="15.0" fill="rgb(252,167,7)" rx="2" ry="2" />
<text  x="178.45" y="399.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (7 samples, 0.01%)</title><rect x="181.3" y="69" width="0.2" height="15.0" fill="rgb(249,124,52)" rx="2" ry="2" />
<text  x="184.34" y="79.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (35 samples, 0.07%)</title><rect x="162.5" y="341" width="0.8" height="15.0" fill="rgb(230,180,47)" rx="2" ry="2" />
<text  x="165.54" y="351.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (12 samples, 0.02%)</title><rect x="709.0" y="485" width="0.3" height="15.0" fill="rgb(238,26,5)" rx="2" ry="2" />
<text  x="712.01" y="495.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (250 samples, 0.49%)</title><rect x="1174.0" y="437" width="5.7" height="15.0" fill="rgb(208,202,46)" rx="2" ry="2" />
<text  x="1176.96" y="447.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (54 samples, 0.11%)</title><rect x="991.4" y="277" width="1.3" height="15.0" fill="rgb(224,213,12)" rx="2" ry="2" />
<text  x="994.42" y="287.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (12 samples, 0.02%)</title><rect x="827.5" y="293" width="0.3" height="15.0" fill="rgb(209,47,21)" rx="2" ry="2" />
<text  x="830.52" y="303.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (389 samples, 0.76%)</title><rect x="929.5" y="293" width="8.9" height="15.0" fill="rgb(223,32,42)" rx="2" ry="2" />
<text  x="932.46" y="303.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (18 samples, 0.04%)</title><rect x="920.4" y="325" width="0.5" height="15.0" fill="rgb(215,98,34)" rx="2" ry="2" />
<text  x="923.45" y="335.5" ></text>
</g>
<g >
<title>std::thread::panicking (24 samples, 0.05%)</title><rect x="950.1" y="325" width="0.5" height="15.0" fill="rgb(224,96,5)" rx="2" ry="2" />
<text  x="953.06" y="335.5" ></text>
</g>
<g >
<title>lind_read (18,034 samples, 35.16%)</title><rect x="292.0" y="437" width="414.9" height="15.0" fill="rgb(221,206,8)" rx="2" ry="2" />
<text  x="295.00" y="447.5" >lind_read</text>
</g>
<g >
<title>cpuidle_idle_call (213 samples, 0.42%)</title><rect x="1182.6" y="405" width="4.9" height="15.0" fill="rgb(222,85,11)" rx="2" ry="2" />
<text  x="1185.59" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (781 samples, 1.52%)</title><rect x="603.8" y="293" width="18.0" height="15.0" fill="rgb(246,34,0)" rx="2" ry="2" />
<text  x="606.84" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (15 samples, 0.03%)</title><rect x="949.7" y="309" width="0.4" height="15.0" fill="rgb(213,98,6)" rx="2" ry="2" />
<text  x="952.71" y="319.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,353 samples, 2.64%)</title><rect x="144.2" y="437" width="31.1" height="15.0" fill="rgb(225,123,11)" rx="2" ry="2" />
<text  x="147.20" y="447.5" >cp..</text>
</g>
<g >
<title>alx_intr_msix_ring (24 samples, 0.05%)</title><rect x="110.4" y="325" width="0.6" height="15.0" fill="rgb(223,155,16)" rx="2" ry="2" />
<text  x="113.40" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (30 samples, 0.06%)</title><rect x="173.5" y="405" width="0.7" height="15.0" fill="rgb(242,53,47)" rx="2" ry="2" />
<text  x="176.54" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (13 samples, 0.03%)</title><rect x="845.6" y="293" width="0.3" height="15.0" fill="rgb(214,168,32)" rx="2" ry="2" />
<text  x="848.60" y="303.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (15 samples, 0.03%)</title><rect x="723.8" y="469" width="0.4" height="15.0" fill="rgb(254,75,24)" rx="2" ry="2" />
<text  x="726.83" y="479.5" ></text>
</g>
<g >
<title>read_tsc (7 samples, 0.01%)</title><rect x="173.3" y="389" width="0.1" height="15.0" fill="rgb(230,62,9)" rx="2" ry="2" />
<text  x="176.26" y="399.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (280 samples, 0.55%)</title><rect x="888.0" y="341" width="6.5" height="15.0" fill="rgb(222,3,54)" rx="2" ry="2" />
<text  x="891.03" y="351.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (19 samples, 0.04%)</title><rect x="1134.3" y="485" width="0.4" height="15.0" fill="rgb(212,81,42)" rx="2" ry="2" />
<text  x="1137.30" y="495.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (5 samples, 0.01%)</title><rect x="178.0" y="165" width="0.1" height="15.0" fill="rgb(230,95,17)" rx="2" ry="2" />
<text  x="180.95" y="175.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (330 samples, 0.64%)</title><rect x="920.9" y="341" width="7.6" height="15.0" fill="rgb(235,143,16)" rx="2" ry="2" />
<text  x="923.86" y="351.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (13 samples, 0.03%)</title><rect x="184.4" y="517" width="0.3" height="15.0" fill="rgb(235,27,26)" rx="2" ry="2" />
<text  x="187.37" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (92 samples, 0.18%)</title><rect x="936.3" y="245" width="2.1" height="15.0" fill="rgb(246,165,10)" rx="2" ry="2" />
<text  x="939.30" y="255.5" ></text>
</g>
<g >
<title>NaClXMutexLock (19 samples, 0.04%)</title><rect x="186.9" y="517" width="0.5" height="15.0" fill="rgb(252,102,29)" rx="2" ry="2" />
<text  x="189.93" y="527.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (18 samples, 0.04%)</title><rect x="288.6" y="501" width="0.4" height="15.0" fill="rgb(209,229,41)" rx="2" ry="2" />
<text  x="291.62" y="511.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (11 samples, 0.02%)</title><rect x="216.3" y="501" width="0.2" height="15.0" fill="rgb(236,182,19)" rx="2" ry="2" />
<text  x="219.28" y="511.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (18,035 samples, 35.16%)</title><rect x="292.0" y="501" width="414.9" height="15.0" fill="rgb(251,228,23)" rx="2" ry="2" />
<text  x="294.98" y="511.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>sched_clock_cpu (12 samples, 0.02%)</title><rect x="158.2" y="341" width="0.3" height="15.0" fill="rgb(253,122,10)" rx="2" ry="2" />
<text  x="161.24" y="351.5" ></text>
</g>
<g >
<title>NaClSysWrite (13,739 samples, 26.79%)</title><rect x="726.6" y="485" width="316.1" height="15.0" fill="rgb(238,6,53)" rx="2" ry="2" />
<text  x="729.56" y="495.5" >NaClSysWrite</text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (5 samples, 0.01%)</title><rect x="291.8" y="437" width="0.2" height="15.0" fill="rgb(229,202,7)" rx="2" ry="2" />
<text  x="294.84" y="447.5" ></text>
</g>
<g >
<title>free_unref_page_commit (5 samples, 0.01%)</title><rect x="1136.7" y="261" width="0.1" height="15.0" fill="rgb(214,173,50)" rx="2" ry="2" />
<text  x="1139.67" y="271.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (19 samples, 0.04%)</title><rect x="1134.3" y="469" width="0.4" height="15.0" fill="rgb(211,226,20)" rx="2" ry="2" />
<text  x="1137.30" y="479.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (2,865 samples, 5.59%)</title><rect x="109.4" y="533" width="65.9" height="15.0" fill="rgb(232,10,42)" rx="2" ry="2" />
<text  x="112.41" y="543.5" >seconda..</text>
</g>
<g >
<title>do_sys_poll (12 samples, 0.02%)</title><rect x="177.4" y="405" width="0.2" height="15.0" fill="rgb(227,140,22)" rx="2" ry="2" />
<text  x="180.36" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (171 samples, 0.33%)</title><rect x="586.6" y="277" width="3.9" height="15.0" fill="rgb(244,161,23)" rx="2" ry="2" />
<text  x="589.56" y="287.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (10 samples, 0.02%)</title><rect x="996.6" y="261" width="0.2" height="15.0" fill="rgb(222,147,50)" rx="2" ry="2" />
<text  x="999.55" y="271.5" ></text>
</g>
<g >
<title>lind_write (12 samples, 0.02%)</title><rect x="1015.9" y="453" width="0.3" height="15.0" fill="rgb(231,129,9)" rx="2" ry="2" />
<text  x="1018.88" y="463.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (35,625 samples, 69.46%)</title><rect x="223.9" y="517" width="819.7" height="15.0" fill="rgb(253,84,52)" rx="2" ry="2" />
<text  x="226.95" y="527.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>__softirqentry_text_start (58 samples, 0.11%)</title><rect x="111.0" y="341" width="1.3" height="15.0" fill="rgb(249,167,46)" rx="2" ry="2" />
<text  x="114.00" y="351.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (27 samples, 0.05%)</title><rect x="844.6" y="341" width="0.6" height="15.0" fill="rgb(219,190,29)" rx="2" ry="2" />
<text  x="847.59" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (27 samples, 0.05%)</title><rect x="948.5" y="245" width="0.7" height="15.0" fill="rgb(254,1,37)" rx="2" ry="2" />
<text  x="951.54" y="255.5" ></text>
</g>
<g >
<title>dispatcher (5 samples, 0.01%)</title><rect x="291.8" y="453" width="0.2" height="15.0" fill="rgb(212,132,43)" rx="2" ry="2" />
<text  x="294.84" y="463.5" ></text>
</g>
<g >
<title>std::panicking::panicking (24 samples, 0.05%)</title><rect x="950.1" y="309" width="0.5" height="15.0" fill="rgb(230,193,17)" rx="2" ry="2" />
<text  x="953.06" y="319.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (85 samples, 0.17%)</title><rect x="1040.7" y="469" width="2.0" height="15.0" fill="rgb(217,49,23)" rx="2" ry="2" />
<text  x="1043.71" y="479.5" ></text>
</g>
<g >
<title>end_page_writeback (5 samples, 0.01%)</title><rect x="108.9" y="405" width="0.1" height="15.0" fill="rgb(247,92,19)" rx="2" ry="2" />
<text  x="111.91" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (51 samples, 0.10%)</title><rect x="994.5" y="261" width="1.2" height="15.0" fill="rgb(237,197,35)" rx="2" ry="2" />
<text  x="997.53" y="271.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (10 samples, 0.02%)</title><rect x="159.3" y="341" width="0.2" height="15.0" fill="rgb(208,196,7)" rx="2" ry="2" />
<text  x="162.29" y="351.5" ></text>
</g>
<g >
<title>sched_clock_cpu (7 samples, 0.01%)</title><rect x="143.1" y="437" width="0.2" height="15.0" fill="rgb(213,170,14)" rx="2" ry="2" />
<text  x="146.14" y="447.5" ></text>
</g>
<g >
<title>std::sync::once::Once::is_completed (9 samples, 0.02%)</title><rect x="793.7" y="277" width="0.2" height="15.0" fill="rgb(242,28,10)" rx="2" ry="2" />
<text  x="796.72" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (8 samples, 0.02%)</title><rect x="1182.9" y="341" width="0.2" height="15.0" fill="rgb(205,62,26)" rx="2" ry="2" />
<text  x="1185.89" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (83 samples, 0.16%)</title><rect x="187.6" y="517" width="1.9" height="15.0" fill="rgb(229,210,41)" rx="2" ry="2" />
<text  x="190.59" y="527.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 0.12%)</title><rect x="175.7" y="197" width="1.5" height="15.0" fill="rgb(223,197,5)" rx="2" ry="2" />
<text  x="178.74" y="207.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (943 samples, 1.84%)</title><rect x="1104.8" y="517" width="21.7" height="15.0" fill="rgb(251,178,47)" rx="2" ry="2" />
<text  x="1107.78" y="527.5" >r..</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (19 samples, 0.04%)</title><rect x="998.9" y="261" width="0.5" height="15.0" fill="rgb(253,149,24)" rx="2" ry="2" />
<text  x="1001.92" y="271.5" ></text>
</g>
<g >
<title>__evlist__enable (80 samples, 0.16%)</title><rect x="175.4" y="485" width="1.9" height="15.0" fill="rgb(206,98,18)" rx="2" ry="2" />
<text  x="178.45" y="495.5" ></text>
</g>
<g >
<title>ksys_write (8 samples, 0.02%)</title><rect x="182.0" y="485" width="0.2" height="15.0" fill="rgb(221,141,4)" rx="2" ry="2" />
<text  x="184.98" y="495.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (28 samples, 0.05%)</title><rect x="180.9" y="101" width="0.6" height="15.0" fill="rgb(223,161,0)" rx="2" ry="2" />
<text  x="183.85" y="111.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,512 samples, 2.95%)</title><rect x="109.4" y="501" width="34.8" height="15.0" fill="rgb(240,186,33)" rx="2" ry="2" />
<text  x="112.41" y="511.5" >cp..</text>
</g>
<g >
<title>__libc_write (178 samples, 0.35%)</title><rect x="177.8" y="389" width="4.1" height="15.0" fill="rgb(254,31,53)" rx="2" ry="2" />
<text  x="180.77" y="399.5" ></text>
</g>
<g >
<title>exc_page_fault (113 samples, 0.22%)</title><rect x="1081.7" y="501" width="2.6" height="15.0" fill="rgb(236,168,33)" rx="2" ry="2" />
<text  x="1084.70" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (14 samples, 0.03%)</title><rect x="891.5" y="293" width="0.3" height="15.0" fill="rgb(231,114,14)" rx="2" ry="2" />
<text  x="894.50" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (8 samples, 0.02%)</title><rect x="1174.4" y="405" width="0.2" height="15.0" fill="rgb(231,159,32)" rx="2" ry="2" />
<text  x="1177.40" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (14 samples, 0.03%)</title><rect x="218.0" y="453" width="0.3" height="15.0" fill="rgb(207,14,0)" rx="2" ry="2" />
<text  x="220.99" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (924 samples, 1.80%)</title><rect x="928.5" y="341" width="21.2" height="15.0" fill="rgb(236,78,18)" rx="2" ry="2" />
<text  x="931.45" y="351.5" >h..</text>
</g>
<g >
<title>native_sched_clock (10 samples, 0.02%)</title><rect x="159.6" y="341" width="0.2" height="15.0" fill="rgb(221,42,18)" rx="2" ry="2" />
<text  x="162.59" y="351.5" ></text>
</g>
<g >
<title>sched_clock_cpu (17 samples, 0.03%)</title><rect x="172.5" y="357" width="0.4" height="15.0" fill="rgb(218,27,50)" rx="2" ry="2" />
<text  x="175.50" y="367.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (69 samples, 0.13%)</title><rect x="323.4" y="357" width="1.6" height="15.0" fill="rgb(229,47,15)" rx="2" ry="2" />
<text  x="326.38" y="367.5" ></text>
</g>
<g >
<title>__schedule (282 samples, 0.55%)</title><rect x="166.4" y="389" width="6.5" height="15.0" fill="rgb(238,63,16)" rx="2" ry="2" />
<text  x="169.40" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (593 samples, 1.16%)</title><rect x="799.5" y="373" width="13.6" height="15.0" fill="rgb(228,15,28)" rx="2" ry="2" />
<text  x="802.45" y="383.5" ></text>
</g>
<g >
<title>try_to_unmap_one (11 samples, 0.02%)</title><rect x="108.1" y="357" width="0.3" height="15.0" fill="rgb(205,46,3)" rx="2" ry="2" />
<text  x="111.13" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (14 samples, 0.03%)</title><rect x="977.6" y="309" width="0.3" height="15.0" fill="rgb(218,46,0)" rx="2" ry="2" />
<text  x="980.55" y="319.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (15 samples, 0.03%)</title><rect x="183.7" y="517" width="0.4" height="15.0" fill="rgb(233,20,19)" rx="2" ry="2" />
<text  x="186.71" y="527.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (709 samples, 1.38%)</title><rect x="999.4" y="405" width="16.3" height="15.0" fill="rgb(213,53,28)" rx="2" ry="2" />
<text  x="1002.36" y="415.5" ></text>
</g>
<g >
<title>do_anonymous_page (82 samples, 0.16%)</title><rect x="1082.2" y="421" width="1.9" height="15.0" fill="rgb(244,91,49)" rx="2" ry="2" />
<text  x="1085.16" y="431.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 0.12%)</title><rect x="175.7" y="229" width="1.5" height="15.0" fill="rgb(208,134,53)" rx="2" ry="2" />
<text  x="178.74" y="239.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1,353 samples, 2.64%)</title><rect x="144.2" y="501" width="31.1" height="15.0" fill="rgb(244,196,32)" rx="2" ry="2" />
<text  x="147.20" y="511.5" >x8..</text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::is_initialized (9 samples, 0.02%)</title><rect x="793.7" y="293" width="0.2" height="15.0" fill="rgb(244,187,50)" rx="2" ry="2" />
<text  x="796.72" y="303.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (94 samples, 0.18%)</title><rect x="556.4" y="325" width="2.1" height="15.0" fill="rgb(218,219,18)" rx="2" ry="2" />
<text  x="559.36" y="335.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (65 samples, 0.13%)</title><rect x="252.4" y="501" width="1.5" height="15.0" fill="rgb(226,133,51)" rx="2" ry="2" />
<text  x="255.41" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (19 samples, 0.04%)</title><rect x="996.1" y="261" width="0.5" height="15.0" fill="rgb(225,5,48)" rx="2" ry="2" />
<text  x="999.12" y="271.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (13 samples, 0.03%)</title><rect x="1133.6" y="501" width="0.3" height="15.0" fill="rgb(244,103,8)" rx="2" ry="2" />
<text  x="1136.63" y="511.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (16 samples, 0.03%)</title><rect x="725.0" y="485" width="0.4" height="15.0" fill="rgb(237,46,6)" rx="2" ry="2" />
<text  x="728.04" y="495.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (280 samples, 0.55%)</title><rect x="888.0" y="357" width="6.5" height="15.0" fill="rgb(210,216,27)" rx="2" ry="2" />
<text  x="891.03" y="367.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (31 samples, 0.06%)</title><rect x="247.0" y="485" width="0.7" height="15.0" fill="rgb(212,121,52)" rx="2" ry="2" />
<text  x="250.00" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (178 samples, 0.35%)</title><rect x="177.8" y="357" width="4.1" height="15.0" fill="rgb(223,121,12)" rx="2" ry="2" />
<text  x="180.77" y="367.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (168 samples, 0.33%)</title><rect x="940.1" y="277" width="3.9" height="15.0" fill="rgb(213,125,11)" rx="2" ry="2" />
<text  x="943.12" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (391 samples, 0.76%)</title><rect x="988.0" y="357" width="9.0" height="15.0" fill="rgb(224,133,21)" rx="2" ry="2" />
<text  x="991.04" y="367.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (5 samples, 0.01%)</title><rect x="289.0" y="501" width="0.1" height="15.0" fill="rgb(220,177,19)" rx="2" ry="2" />
<text  x="292.03" y="511.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (13 samples, 0.03%)</title><rect x="194.2" y="469" width="0.3" height="15.0" fill="rgb(206,40,17)" rx="2" ry="2" />
<text  x="197.24" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2,068 samples, 4.03%)</title><rect x="508.8" y="309" width="47.6" height="15.0" fill="rgb(253,39,17)" rx="2" ry="2" />
<text  x="511.78" y="319.5" >core..</text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.02%)</title><rect x="182.0" y="517" width="0.2" height="15.0" fill="rgb(233,188,38)" rx="2" ry="2" />
<text  x="184.98" y="527.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (9 samples, 0.02%)</title><rect x="993.2" y="293" width="0.2" height="15.0" fill="rgb(234,63,17)" rx="2" ry="2" />
<text  x="996.22" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_poll (12 samples, 0.02%)</title><rect x="177.4" y="421" width="0.2" height="15.0" fill="rgb(206,1,3)" rx="2" ry="2" />
<text  x="180.36" y="431.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (9 samples, 0.02%)</title><rect x="136.4" y="373" width="0.2" height="15.0" fill="rgb(209,156,4)" rx="2" ry="2" />
<text  x="139.38" y="383.5" ></text>
</g>
<g >
<title>tick_sched_handle (7 samples, 0.01%)</title><rect x="146.0" y="229" width="0.1" height="15.0" fill="rgb(219,50,6)" rx="2" ry="2" />
<text  x="148.97" y="239.5" ></text>
</g>
<g >
<title>common_interrupt (86 samples, 0.17%)</title><rect x="110.4" y="405" width="2.0" height="15.0" fill="rgb(225,203,48)" rx="2" ry="2" />
<text  x="113.38" y="415.5" ></text>
</g>
<g >
<title>generic_perform_write (8 samples, 0.02%)</title><rect x="182.0" y="341" width="0.2" height="15.0" fill="rgb(234,135,34)" rx="2" ry="2" />
<text  x="184.98" y="351.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7 samples, 0.01%)</title><rect x="1174.2" y="229" width="0.2" height="15.0" fill="rgb(221,30,26)" rx="2" ry="2" />
<text  x="1177.19" y="239.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (9 samples, 0.02%)</title><rect x="920.7" y="261" width="0.2" height="15.0" fill="rgb(213,9,5)" rx="2" ry="2" />
<text  x="923.65" y="271.5" ></text>
</g>
<g >
<title>_perf_ioctl (74 samples, 0.14%)</title><rect x="175.5" y="357" width="1.7" height="15.0" fill="rgb(226,39,20)" rx="2" ry="2" />
<text  x="178.51" y="367.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (180 samples, 0.35%)</title><rect x="247.7" y="485" width="4.2" height="15.0" fill="rgb(219,146,16)" rx="2" ry="2" />
<text  x="250.71" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (202 samples, 0.39%)</title><rect x="765.7" y="405" width="4.6" height="15.0" fill="rgb(227,62,10)" rx="2" ry="2" />
<text  x="768.70" y="415.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.08%)</title><rect x="997.4" y="325" width="1.0" height="15.0" fill="rgb(213,164,54)" rx="2" ry="2" />
<text  x="1000.43" y="335.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (7 samples, 0.01%)</title><rect x="1180.4" y="453" width="0.1" height="15.0" fill="rgb(209,135,52)" rx="2" ry="2" />
<text  x="1183.38" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (330 samples, 0.64%)</title><rect x="920.9" y="309" width="7.6" height="15.0" fill="rgb(246,147,23)" rx="2" ry="2" />
<text  x="923.86" y="319.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (373 samples, 0.73%)</title><rect x="1025.8" y="469" width="8.5" height="15.0" fill="rgb(231,225,19)" rx="2" ry="2" />
<text  x="1028.75" y="479.5" ></text>
</g>
<g >
<title>__buffer_migrate_page.part.0 (14 samples, 0.03%)</title><rect x="107.4" y="373" width="0.4" height="15.0" fill="rgb(245,145,6)" rx="2" ry="2" />
<text  x="110.44" y="383.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (46 samples, 0.09%)</title><rect x="195.3" y="517" width="1.0" height="15.0" fill="rgb(240,211,3)" rx="2" ry="2" />
<text  x="198.28" y="527.5" ></text>
</g>
<g >
<title>core::cmp::min_by (150 samples, 0.29%)</title><rect x="315.8" y="325" width="3.5" height="15.0" fill="rgb(223,113,11)" rx="2" ry="2" />
<text  x="318.81" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (98 samples, 0.19%)</title><rect x="1081.9" y="469" width="2.2" height="15.0" fill="rgb(205,65,36)" rx="2" ry="2" />
<text  x="1084.87" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.08%)</title><rect x="106.2" y="533" width="0.9" height="15.0" fill="rgb(250,49,13)" rx="2" ry="2" />
<text  x="109.22" y="543.5" ></text>
</g>
<g >
<title>menu_reflect (5 samples, 0.01%)</title><rect x="134.0" y="437" width="0.1" height="15.0" fill="rgb(240,172,13)" rx="2" ry="2" />
<text  x="136.99" y="447.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (42 samples, 0.08%)</title><rect x="1135.8" y="357" width="1.0" height="15.0" fill="rgb(238,114,2)" rx="2" ry="2" />
<text  x="1138.84" y="367.5" ></text>
</g>
<g >
<title>ip_list_rcv_finish.constprop.0 (8 samples, 0.02%)</title><rect x="111.9" y="181" width="0.2" height="15.0" fill="rgb(214,152,39)" rx="2" ry="2" />
<text  x="114.95" y="191.5" ></text>
</g>
<g >
<title>llist_add_batch (29 samples, 0.06%)</title><rect x="141.8" y="357" width="0.7" height="15.0" fill="rgb(251,78,1)" rx="2" ry="2" />
<text  x="144.83" y="367.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="998.8" y="245" width="0.1" height="15.0" fill="rgb(212,220,21)" rx="2" ry="2" />
<text  x="1001.79" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (14 samples, 0.03%)</title><rect x="218.0" y="501" width="0.3" height="15.0" fill="rgb(206,86,18)" rx="2" ry="2" />
<text  x="220.99" y="511.5" ></text>
</g>
<g >
<title>wb_do_writeback (16 samples, 0.03%)</title><rect x="109.0" y="453" width="0.4" height="15.0" fill="rgb(214,0,2)" rx="2" ry="2" />
<text  x="112.02" y="463.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (14 samples, 0.03%)</title><rect x="989.6" y="277" width="0.3" height="15.0" fill="rgb(210,138,4)" rx="2" ry="2" />
<text  x="992.61" y="287.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (172 samples, 0.34%)</title><rect x="177.9" y="229" width="4.0" height="15.0" fill="rgb(242,120,29)" rx="2" ry="2" />
<text  x="180.91" y="239.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (21 samples, 0.04%)</title><rect x="1104.3" y="485" width="0.5" height="15.0" fill="rgb(219,215,15)" rx="2" ry="2" />
<text  x="1107.30" y="495.5" ></text>
</g>
<g >
<title>cpuidle_enter (252 samples, 0.49%)</title><rect x="1173.9" y="453" width="5.8" height="15.0" fill="rgb(209,122,41)" rx="2" ry="2" />
<text  x="1176.92" y="463.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (5 samples, 0.01%)</title><rect x="1136.7" y="245" width="0.1" height="15.0" fill="rgb(234,48,22)" rx="2" ry="2" />
<text  x="1139.67" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.03%)</title><rect x="1173.3" y="533" width="0.4" height="15.0" fill="rgb(205,204,21)" rx="2" ry="2" />
<text  x="1176.27" y="543.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (5 samples, 0.01%)</title><rect x="135.7" y="389" width="0.1" height="15.0" fill="rgb(235,65,0)" rx="2" ry="2" />
<text  x="138.67" y="399.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (339 samples, 0.66%)</title><rect x="713.6" y="421" width="7.8" height="15.0" fill="rgb(228,190,51)" rx="2" ry="2" />
<text  x="716.61" y="431.5" ></text>
</g>
<g >
<title>llist_reverse_order (8 samples, 0.02%)</title><rect x="1180.5" y="453" width="0.2" height="15.0" fill="rgb(224,178,23)" rx="2" ry="2" />
<text  x="1183.54" y="463.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (12 samples, 0.02%)</title><rect x="178.4" y="85" width="0.2" height="15.0" fill="rgb(248,169,30)" rx="2" ry="2" />
<text  x="181.37" y="95.5" ></text>
</g>
<g >
<title>do_iter_write (173 samples, 0.34%)</title><rect x="177.9" y="245" width="4.0" height="15.0" fill="rgb(210,164,18)" rx="2" ry="2" />
<text  x="180.88" y="255.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (382 samples, 0.74%)</title><rect x="776.3" y="341" width="8.8" height="15.0" fill="rgb(231,70,10)" rx="2" ry="2" />
<text  x="779.28" y="351.5" ></text>
</g>
<g >
<title>smp_call_function_many_cond (7 samples, 0.01%)</title><rect x="107.8" y="309" width="0.1" height="15.0" fill="rgb(223,177,18)" rx="2" ry="2" />
<text  x="110.76" y="319.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (353 samples, 0.69%)</title><rect x="818.9" y="309" width="8.1" height="15.0" fill="rgb(219,144,36)" rx="2" ry="2" />
<text  x="821.87" y="319.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (86 samples, 0.17%)</title><rect x="744.1" y="437" width="2.0" height="15.0" fill="rgb(227,2,37)" rx="2" ry="2" />
<text  x="747.09" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (322 samples, 0.63%)</title><rect x="278.4" y="453" width="7.4" height="15.0" fill="rgb(238,134,53)" rx="2" ry="2" />
<text  x="281.38" y="463.5" ></text>
</g>
<g >
<title>std::thread::panicking (17 samples, 0.03%)</title><rect x="845.2" y="309" width="0.4" height="15.0" fill="rgb(241,218,25)" rx="2" ry="2" />
<text  x="848.21" y="319.5" ></text>
</g>
<g >
<title>generic_exec_single (64 samples, 0.12%)</title><rect x="175.7" y="277" width="1.5" height="15.0" fill="rgb(228,30,46)" rx="2" ry="2" />
<text  x="178.74" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (89 samples, 0.17%)</title><rect x="947.1" y="293" width="2.1" height="15.0" fill="rgb(232,45,49)" rx="2" ry="2" />
<text  x="950.11" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (5 samples, 0.01%)</title><rect x="1088.5" y="517" width="0.1" height="15.0" fill="rgb(245,26,40)" rx="2" ry="2" />
<text  x="1091.47" y="527.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (15 samples, 0.03%)</title><rect x="993.1" y="325" width="0.3" height="15.0" fill="rgb(224,174,30)" rx="2" ry="2" />
<text  x="996.08" y="335.5" ></text>
</g>
<g >
<title>proactive_compact_node (73 samples, 0.14%)</title><rect x="107.2" y="485" width="1.6" height="15.0" fill="rgb(238,180,41)" rx="2" ry="2" />
<text  x="110.16" y="495.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (32 samples, 0.06%)</title><rect x="324.2" y="293" width="0.8" height="15.0" fill="rgb(215,32,41)" rx="2" ry="2" />
<text  x="327.23" y="303.5" ></text>
</g>
<g >
<title>dev_gro_receive (7 samples, 0.01%)</title><rect x="111.3" y="245" width="0.2" height="15.0" fill="rgb(232,227,20)" rx="2" ry="2" />
<text  x="114.32" y="255.5" ></text>
</g>
<g >
<title>NaClLog (150 samples, 0.29%)</title><rect x="1037.3" y="469" width="3.4" height="15.0" fill="rgb(254,40,4)" rx="2" ry="2" />
<text  x="1040.25" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (16 samples, 0.03%)</title><rect x="989.2" y="277" width="0.4" height="15.0" fill="rgb(232,194,26)" rx="2" ry="2" />
<text  x="992.24" y="287.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (409 samples, 0.80%)</title><rect x="712.3" y="437" width="9.5" height="15.0" fill="rgb(225,99,18)" rx="2" ry="2" />
<text  x="715.34" y="447.5" ></text>
</g>
<g >
<title>NaClSysExit (5 samples, 0.01%)</title><rect x="291.8" y="485" width="0.2" height="15.0" fill="rgb(220,59,39)" rx="2" ry="2" />
<text  x="294.84" y="495.5" ></text>
</g>
<g >
<title>std::panicking::panicking (12 samples, 0.02%)</title><rect x="977.9" y="309" width="0.2" height="15.0" fill="rgb(233,79,21)" rx="2" ry="2" />
<text  x="980.87" y="319.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (18,033 samples, 35.16%)</title><rect x="292.0" y="405" width="414.9" height="15.0" fill="rgb(252,19,10)" rx="2" ry="2" />
<text  x="295.00" y="415.5" >rustposix::safeposix::dispatcher::dispatcher::{{closure}}</text>
</g>
<g >
<title>perf (294 samples, 0.57%)</title><rect x="175.4" y="549" width="6.8" height="15.0" fill="rgb(240,67,35)" rx="2" ry="2" />
<text  x="178.40" y="559.5" ></text>
</g>
<g >
<title>do_idle (370 samples, 0.72%)</title><rect x="1173.7" y="485" width="8.5" height="15.0" fill="rgb(224,214,18)" rx="2" ry="2" />
<text  x="1176.73" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (11 samples, 0.02%)</title><rect x="1083.7" y="405" width="0.3" height="15.0" fill="rgb(218,42,53)" rx="2" ry="2" />
<text  x="1086.73" y="415.5" ></text>
</g>
<g >
<title>isolate_migratepages_block (8 samples, 0.02%)</title><rect x="107.2" y="437" width="0.1" height="15.0" fill="rgb(226,87,49)" rx="2" ry="2" />
<text  x="110.16" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_restart (5 samples, 0.01%)</title><rect x="143.5" y="453" width="0.1" height="15.0" fill="rgb(251,143,14)" rx="2" ry="2" />
<text  x="146.49" y="463.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (52 samples, 0.10%)</title><rect x="289.5" y="501" width="1.2" height="15.0" fill="rgb(221,142,18)" rx="2" ry="2" />
<text  x="292.49" y="511.5" ></text>
</g>
<g >
<title>swapper (2,293 samples, 4.47%)</title><rect x="1137.2" y="549" width="52.8" height="15.0" fill="rgb(253,33,32)" rx="2" ry="2" />
<text  x="1140.24" y="559.5" >swapper</text>
</g>
<g >
<title>do_idle (1,306 samples, 2.55%)</title><rect x="144.2" y="421" width="30.0" height="15.0" fill="rgb(214,131,35)" rx="2" ry="2" />
<text  x="147.20" y="431.5" >do..</text>
</g>
<g >
<title>jbd2__journal_start (5 samples, 0.01%)</title><rect x="178.2" y="133" width="0.1" height="15.0" fill="rgb(233,133,2)" rx="2" ry="2" />
<text  x="181.18" y="143.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (6,448 samples, 12.57%)</title><rect x="558.5" y="357" width="148.4" height="15.0" fill="rgb(245,36,33)" rx="2" ry="2" />
<text  x="561.52" y="367.5" >ringbuf::consumer:..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (8 samples, 0.02%)</title><rect x="218.3" y="453" width="0.2" height="15.0" fill="rgb(239,69,19)" rx="2" ry="2" />
<text  x="221.31" y="463.5" ></text>
</g>
<g >
<title>poll_idle (68 samples, 0.13%)</title><rect x="1177.9" y="421" width="1.6" height="15.0" fill="rgb(247,46,22)" rx="2" ry="2" />
<text  x="1180.94" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (15 samples, 0.03%)</title><rect x="218.9" y="469" width="0.3" height="15.0" fill="rgb(226,88,46)" rx="2" ry="2" />
<text  x="221.86" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7 samples, 0.01%)</title><rect x="135.9" y="389" width="0.1" height="15.0" fill="rgb(213,43,39)" rx="2" ry="2" />
<text  x="138.85" y="399.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (126 samples, 0.25%)</title><rect x="1034.3" y="469" width="2.9" height="15.0" fill="rgb(217,50,49)" rx="2" ry="2" />
<text  x="1037.33" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (202 samples, 0.39%)</title><rect x="765.7" y="373" width="4.6" height="15.0" fill="rgb(244,52,52)" rx="2" ry="2" />
<text  x="768.70" y="383.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 0.12%)</title><rect x="175.7" y="213" width="1.5" height="15.0" fill="rgb(248,36,39)" rx="2" ry="2" />
<text  x="178.74" y="223.5" ></text>
</g>
<g >
<title>&lt;std::lazy::SyncLazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.02%)</title><rect x="793.7" y="373" width="0.2" height="15.0" fill="rgb(218,11,4)" rx="2" ry="2" />
<text  x="796.72" y="383.5" ></text>
</g>
<g >
<title>std::panicking::panicking (9 samples, 0.02%)</title><rect x="920.7" y="293" width="0.2" height="15.0" fill="rgb(249,21,15)" rx="2" ry="2" />
<text  x="923.65" y="303.5" ></text>
</g>
<g >
<title>hrtimer_cancel (5 samples, 0.01%)</title><rect x="143.5" y="437" width="0.1" height="15.0" fill="rgb(223,129,46)" rx="2" ry="2" />
<text  x="146.49" y="447.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (172 samples, 0.34%)</title><rect x="177.9" y="213" width="4.0" height="15.0" fill="rgb(227,30,51)" rx="2" ry="2" />
<text  x="180.91" y="223.5" ></text>
</g>
<g >
<title>NaClLog (16 samples, 0.03%)</title><rect x="223.3" y="517" width="0.3" height="15.0" fill="rgb(215,118,43)" rx="2" ry="2" />
<text  x="226.25" y="527.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (640 samples, 1.25%)</title><rect x="770.3" y="357" width="14.8" height="15.0" fill="rgb(220,125,21)" rx="2" ry="2" />
<text  x="773.35" y="367.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (57 samples, 0.11%)</title><rect x="178.9" y="149" width="1.4" height="15.0" fill="rgb(211,55,1)" rx="2" ry="2" />
<text  x="181.94" y="159.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (16 samples, 0.03%)</title><rect x="1087.8" y="517" width="0.3" height="15.0" fill="rgb(231,80,30)" rx="2" ry="2" />
<text  x="1090.78" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (88 samples, 0.17%)</title><rect x="190.8" y="517" width="2.1" height="15.0" fill="rgb(247,87,11)" rx="2" ry="2" />
<text  x="193.84" y="527.5" ></text>
</g>
<g >
<title>__run_hrtimer (8 samples, 0.02%)</title><rect x="146.0" y="261" width="0.1" height="15.0" fill="rgb(237,196,52)" rx="2" ry="2" />
<text  x="148.95" y="271.5" ></text>
</g>
<g >
<title>ext4_finish_bio (6 samples, 0.01%)</title><rect x="108.9" y="421" width="0.1" height="15.0" fill="rgb(253,211,34)" rx="2" ry="2" />
<text  x="111.89" y="431.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (444 samples, 0.87%)</title><rect x="711.5" y="453" width="10.3" height="15.0" fill="rgb(248,19,15)" rx="2" ry="2" />
<text  x="714.54" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.01%)</title><rect x="931.7" y="245" width="0.1" height="15.0" fill="rgb(210,152,18)" rx="2" ry="2" />
<text  x="934.67" y="255.5" ></text>
</g>
<g >
<title>handle_edge_irq (26 samples, 0.05%)</title><rect x="110.4" y="373" width="0.6" height="15.0" fill="rgb(211,92,19)" rx="2" ry="2" />
<text  x="113.38" y="383.5" ></text>
</g>
<g >
<title>native_sched_clock (5 samples, 0.01%)</title><rect x="142.7" y="405" width="0.1" height="15.0" fill="rgb(250,197,11)" rx="2" ry="2" />
<text  x="145.71" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (13 samples, 0.03%)</title><rect x="143.3" y="469" width="0.3" height="15.0" fill="rgb(219,50,30)" rx="2" ry="2" />
<text  x="146.30" y="479.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (19 samples, 0.04%)</title><rect x="998.9" y="229" width="0.5" height="15.0" fill="rgb(210,37,38)" rx="2" ry="2" />
<text  x="1001.92" y="239.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (11 samples, 0.02%)</title><rect x="109.1" y="325" width="0.2" height="15.0" fill="rgb(216,227,30)" rx="2" ry="2" />
<text  x="112.07" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (33 samples, 0.06%)</title><rect x="325.0" y="357" width="0.7" height="15.0" fill="rgb(250,76,11)" rx="2" ry="2" />
<text  x="327.97" y="367.5" ></text>
</g>
<g >
<title>move_to_new_page (25 samples, 0.05%)</title><rect x="107.4" y="405" width="0.6" height="15.0" fill="rgb(243,140,52)" rx="2" ry="2" />
<text  x="110.44" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::PIPE_TABLE (16 samples, 0.03%)</title><rect x="1136.9" y="533" width="0.3" height="15.0" fill="rgb(232,176,52)" rx="2" ry="2" />
<text  x="1139.88" y="543.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (14 samples, 0.03%)</title><rect x="184.1" y="517" width="0.3" height="15.0" fill="rgb(249,29,0)" rx="2" ry="2" />
<text  x="187.05" y="527.5" ></text>
</g>
<g >
<title>newidle_balance (124 samples, 0.24%)</title><rect x="139.6" y="421" width="2.9" height="15.0" fill="rgb(205,202,5)" rx="2" ry="2" />
<text  x="142.65" y="431.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (35 samples, 0.07%)</title><rect x="290.9" y="437" width="0.8" height="15.0" fill="rgb(211,80,9)" rx="2" ry="2" />
<text  x="293.90" y="447.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (9 samples, 0.02%)</title><rect x="146.0" y="309" width="0.2" height="15.0" fill="rgb(205,38,53)" rx="2" ry="2" />
<text  x="148.95" y="319.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (8 samples, 0.02%)</title><rect x="182.0" y="373" width="0.2" height="15.0" fill="rgb(213,169,30)" rx="2" ry="2" />
<text  x="184.98" y="383.5" ></text>
</g>
<g >
<title>handle_pte_fault (85 samples, 0.17%)</title><rect x="1082.1" y="437" width="2.0" height="15.0" fill="rgb(250,147,21)" rx="2" ry="2" />
<text  x="1085.10" y="447.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (27 samples, 0.05%)</title><rect x="1180.3" y="469" width="0.7" height="15.0" fill="rgb(249,42,29)" rx="2" ry="2" />
<text  x="1183.34" y="479.5" ></text>
</g>
<g >
<title>schedule_idle (296 samples, 0.58%)</title><rect x="166.3" y="405" width="6.8" height="15.0" fill="rgb(231,65,2)" rx="2" ry="2" />
<text  x="169.29" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (39 samples, 0.08%)</title><rect x="106.2" y="517" width="0.9" height="15.0" fill="rgb(220,187,20)" rx="2" ry="2" />
<text  x="109.22" y="527.5" ></text>
</g>
<g >
<title>zap_pte_range (42 samples, 0.08%)</title><rect x="1135.8" y="341" width="1.0" height="15.0" fill="rgb(207,85,11)" rx="2" ry="2" />
<text  x="1138.84" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (138 samples, 0.27%)</title><rect x="216.5" y="517" width="3.2" height="15.0" fill="rgb(232,147,25)" rx="2" ry="2" />
<text  x="219.54" y="527.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (38 samples, 0.07%)</title><rect x="146.4" y="357" width="0.9" height="15.0" fill="rgb(242,0,34)" rx="2" ry="2" />
<text  x="149.39" y="367.5" ></text>
</g>
<g >
<title>unmap_and_move (65 samples, 0.13%)</title><rect x="107.3" y="437" width="1.5" height="15.0" fill="rgb(206,108,22)" rx="2" ry="2" />
<text  x="110.34" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (696 samples, 1.36%)</title><rect x="999.7" y="373" width="16.0" height="15.0" fill="rgb(222,25,43)" rx="2" ry="2" />
<text  x="1002.66" y="383.5" ></text>
</g>
<g >
<title>llist_reverse_order (7 samples, 0.01%)</title><rect x="1187.8" y="389" width="0.1" height="15.0" fill="rgb(225,26,41)" rx="2" ry="2" />
<text  x="1190.77" y="399.5" ></text>
</g>
<g >
<title>kick_ilb (24 samples, 0.05%)</title><rect x="1188.8" y="325" width="0.6" height="15.0" fill="rgb(220,169,9)" rx="2" ry="2" />
<text  x="1191.80" y="335.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (6,391 samples, 12.46%)</title><rect x="559.8" y="341" width="147.1" height="15.0" fill="rgb(217,64,2)" rx="2" ry="2" />
<text  x="562.83" y="351.5" >ringbuf::consumer:..</text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (616 samples, 1.20%)</title><rect x="827.8" y="341" width="14.2" height="15.0" fill="rgb(243,218,40)" rx="2" ry="2" />
<text  x="830.80" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (6 samples, 0.01%)</title><rect x="112.7" y="261" width="0.1" height="15.0" fill="rgb(245,27,47)" rx="2" ry="2" />
<text  x="115.66" y="271.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (22 samples, 0.04%)</title><rect x="1103.8" y="501" width="0.5" height="15.0" fill="rgb(215,85,17)" rx="2" ry="2" />
<text  x="1106.79" y="511.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (9 samples, 0.02%)</title><rect x="920.7" y="277" width="0.2" height="15.0" fill="rgb(222,63,20)" rx="2" ry="2" />
<text  x="923.65" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (283 samples, 0.55%)</title><rect x="1009.2" y="341" width="6.5" height="15.0" fill="rgb(233,35,31)" rx="2" ry="2" />
<text  x="1012.16" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="218.3" y="501" width="0.2" height="15.0" fill="rgb(208,207,28)" rx="2" ry="2" />
<text  x="221.31" y="511.5" ></text>
</g>
<g >
<title>menu_update (13 samples, 0.03%)</title><rect x="135.2" y="421" width="0.3" height="15.0" fill="rgb(235,181,44)" rx="2" ry="2" />
<text  x="138.16" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (261 samples, 0.51%)</title><rect x="799.5" y="309" width="6.0" height="15.0" fill="rgb(249,189,54)" rx="2" ry="2" />
<text  x="802.45" y="319.5" ></text>
</g>
<g >
<title>ext4_da_write_end (53 samples, 0.10%)</title><rect x="180.3" y="165" width="1.2" height="15.0" fill="rgb(227,34,13)" rx="2" ry="2" />
<text  x="183.28" y="175.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (16 samples, 0.03%)</title><rect x="183.3" y="517" width="0.4" height="15.0" fill="rgb(235,38,40)" rx="2" ry="2" />
<text  x="186.34" y="527.5" ></text>
</g>
<g >
<title>do_futex (7 samples, 0.01%)</title><rect x="106.5" y="485" width="0.1" height="15.0" fill="rgb(245,147,22)" rx="2" ry="2" />
<text  x="109.47" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (132 samples, 0.26%)</title><rect x="993.7" y="277" width="3.1" height="15.0" fill="rgb(224,24,34)" rx="2" ry="2" />
<text  x="996.75" y="287.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (24 samples, 0.05%)</title><rect x="950.1" y="293" width="0.5" height="15.0" fill="rgb(234,82,18)" rx="2" ry="2" />
<text  x="953.06" y="303.5" ></text>
</g>
<g >
<title>lind_write (11,727 samples, 22.86%)</title><rect x="746.1" y="437" width="269.8" height="15.0" fill="rgb(239,144,23)" rx="2" ry="2" />
<text  x="749.07" y="447.5" >lind_write</text>
</g>
<g >
<title>sel_ldr (41,512 samples, 80.94%)</title><rect x="182.2" y="549" width="955.0" height="15.0" fill="rgb(216,145,1)" rx="2" ry="2" />
<text  x="185.16" y="559.5" >sel_ldr</text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1,171 samples, 2.28%)</title><rect x="950.6" y="357" width="27.0" height="15.0" fill="rgb(247,224,30)" rx="2" ry="2" />
<text  x="953.61" y="367.5" >s..</text>
</g>
<g >
<title>__x64_sys_poll (6 samples, 0.01%)</title><rect x="106.7" y="501" width="0.1" height="15.0" fill="rgb(241,202,21)" rx="2" ry="2" />
<text  x="109.70" y="511.5" ></text>
</g>
<g >
<title>get_typical_interval (20 samples, 0.04%)</title><rect x="160.7" y="357" width="0.5" height="15.0" fill="rgb(238,100,26)" rx="2" ry="2" />
<text  x="163.72" y="367.5" ></text>
</g>
<g >
<title>ext4_bio_write_page (9 samples, 0.02%)</title><rect x="109.1" y="293" width="0.2" height="15.0" fill="rgb(221,144,46)" rx="2" ry="2" />
<text  x="112.09" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (77 samples, 0.15%)</title><rect x="170.6" y="309" width="1.8" height="15.0" fill="rgb(235,64,14)" rx="2" ry="2" />
<text  x="173.61" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (240 samples, 0.47%)</title><rect x="813.3" y="293" width="5.6" height="15.0" fill="rgb(218,176,36)" rx="2" ry="2" />
<text  x="816.35" y="303.5" ></text>
</g>
<g >
<title>napi_gro_receive (7 samples, 0.01%)</title><rect x="111.3" y="261" width="0.2" height="15.0" fill="rgb(205,190,1)" rx="2" ry="2" />
<text  x="114.32" y="271.5" ></text>
</g>
<g >
<title>unmap_page_range (42 samples, 0.08%)</title><rect x="1135.8" y="373" width="1.0" height="15.0" fill="rgb(231,158,52)" rx="2" ry="2" />
<text  x="1138.84" y="383.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (9 samples, 0.02%)</title><rect x="692.7" y="293" width="0.2" height="15.0" fill="rgb(243,99,13)" rx="2" ry="2" />
<text  x="695.70" y="303.5" ></text>
</g>
<g >
<title>compaction_alloc (20 samples, 0.04%)</title><rect x="108.4" y="421" width="0.4" height="15.0" fill="rgb(217,207,14)" rx="2" ry="2" />
<text  x="111.38" y="431.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (93 samples, 0.18%)</title><rect x="178.1" y="165" width="2.2" height="15.0" fill="rgb(233,85,46)" rx="2" ry="2" />
<text  x="181.14" y="175.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (271 samples, 0.53%)</title><rect x="204.8" y="485" width="6.2" height="15.0" fill="rgb(221,105,41)" rx="2" ry="2" />
<text  x="207.80" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (43 samples, 0.08%)</title><rect x="998.4" y="293" width="1.0" height="15.0" fill="rgb(235,152,42)" rx="2" ry="2" />
<text  x="1001.37" y="303.5" ></text>
</g>
<g >
<title>__unmap_and_move (42 samples, 0.08%)</title><rect x="107.4" y="421" width="1.0" height="15.0" fill="rgb(219,113,40)" rx="2" ry="2" />
<text  x="110.41" y="431.5" ></text>
</g>
<g >
<title>cpuidle_select (148 samples, 0.29%)</title><rect x="160.2" y="389" width="3.4" height="15.0" fill="rgb(234,59,35)" rx="2" ry="2" />
<text  x="163.17" y="399.5" ></text>
</g>
<g >
<title>_start (5 samples, 0.01%)</title><rect x="1134.7" y="533" width="0.2" height="15.0" fill="rgb(226,10,46)" rx="2" ry="2" />
<text  x="1137.74" y="543.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (8 samples, 0.02%)</title><rect x="186.6" y="517" width="0.1" height="15.0" fill="rgb(232,46,17)" rx="2" ry="2" />
<text  x="189.56" y="527.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.03%)</title><rect x="1133.9" y="485" width="0.4" height="15.0" fill="rgb(252,60,50)" rx="2" ry="2" />
<text  x="1136.93" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (13 samples, 0.03%)</title><rect x="998.5" y="277" width="0.3" height="15.0" fill="rgb(230,132,44)" rx="2" ry="2" />
<text  x="1001.49" y="287.5" ></text>
</g>
<g >
<title>compact_zone (73 samples, 0.14%)</title><rect x="107.2" y="469" width="1.6" height="15.0" fill="rgb(251,13,44)" rx="2" ry="2" />
<text  x="110.16" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (202 samples, 0.39%)</title><rect x="765.7" y="389" width="4.6" height="15.0" fill="rgb(248,31,30)" rx="2" ry="2" />
<text  x="768.70" y="399.5" ></text>
</g>
<g >
<title>rest_init (1,353 samples, 2.64%)</title><rect x="144.2" y="453" width="31.1" height="15.0" fill="rgb(239,65,34)" rx="2" ry="2" />
<text  x="147.20" y="463.5" >re..</text>
</g>
<g >
<title>read_tsc (5 samples, 0.01%)</title><rect x="143.4" y="453" width="0.1" height="15.0" fill="rgb(221,125,18)" rx="2" ry="2" />
<text  x="146.37" y="463.5" ></text>
</g>
<g >
<title>generic_exec_single (6 samples, 0.01%)</title><rect x="1181.6" y="357" width="0.1" height="15.0" fill="rgb(224,55,3)" rx="2" ry="2" />
<text  x="1184.56" y="367.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (5 samples, 0.01%)</title><rect x="181.1" y="53" width="0.1" height="15.0" fill="rgb(212,165,25)" rx="2" ry="2" />
<text  x="184.13" y="63.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (12 samples, 0.02%)</title><rect x="212.2" y="453" width="0.3" height="15.0" fill="rgb(206,89,28)" rx="2" ry="2" />
<text  x="215.21" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (18 samples, 0.04%)</title><rect x="112.4" y="357" width="0.4" height="15.0" fill="rgb(217,105,41)" rx="2" ry="2" />
<text  x="115.38" y="367.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (593 samples, 1.16%)</title><rect x="799.5" y="357" width="13.6" height="15.0" fill="rgb(207,27,52)" rx="2" ry="2" />
<text  x="802.45" y="367.5" ></text>
</g>
<g >
<title>__schedule (44 samples, 0.09%)</title><rect x="1181.0" y="453" width="1.0" height="15.0" fill="rgb(242,156,3)" rx="2" ry="2" />
<text  x="1184.00" y="463.5" ></text>
</g>
<g >
<title>sched_clock_cpu (7 samples, 0.01%)</title><rect x="1189.4" y="357" width="0.2" height="15.0" fill="rgb(215,104,10)" rx="2" ry="2" />
<text  x="1192.40" y="367.5" ></text>
</g>
<g >
<title>clear_page_erms (10 samples, 0.02%)</title><rect x="108.6" y="357" width="0.2" height="15.0" fill="rgb(228,227,12)" rx="2" ry="2" />
<text  x="111.61" y="367.5" ></text>
</g>
<g >
<title>newidle_balance (52 samples, 0.10%)</title><rect x="1188.2" y="357" width="1.2" height="15.0" fill="rgb(216,136,1)" rx="2" ry="2" />
<text  x="1191.16" y="367.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (6 samples, 0.01%)</title><rect x="186.7" y="517" width="0.2" height="15.0" fill="rgb(246,137,45)" rx="2" ry="2" />
<text  x="189.74" y="527.5" ></text>
</g>
<g >
<title>do_exit (43 samples, 0.08%)</title><rect x="1135.8" y="469" width="1.0" height="15.0" fill="rgb(228,56,44)" rx="2" ry="2" />
<text  x="1138.84" y="479.5" ></text>
</g>
<g >
<title>get_typical_interval (5 samples, 0.01%)</title><rect x="1179.9" y="421" width="0.1" height="15.0" fill="rgb(241,59,50)" rx="2" ry="2" />
<text  x="1182.88" y="431.5" ></text>
</g>
<g >
<title>vfs_iter_write (173 samples, 0.34%)</title><rect x="177.9" y="261" width="4.0" height="15.0" fill="rgb(220,64,20)" rx="2" ry="2" />
<text  x="180.88" y="271.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (11 samples, 0.02%)</title><rect x="216.3" y="485" width="0.2" height="15.0" fill="rgb(253,91,34)" rx="2" ry="2" />
<text  x="219.28" y="495.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (5 samples, 0.01%)</title><rect x="178.5" y="69" width="0.1" height="15.0" fill="rgb(236,167,20)" rx="2" ry="2" />
<text  x="181.53" y="79.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (254 samples, 0.50%)</title><rect x="1127.3" y="517" width="5.9" height="15.0" fill="rgb(230,202,37)" rx="2" ry="2" />
<text  x="1130.33" y="527.5" ></text>
</g>
<g >
<title>llist_add_batch (42 samples, 0.08%)</title><rect x="171.4" y="293" width="1.0" height="15.0" fill="rgb(240,173,43)" rx="2" ry="2" />
<text  x="174.40" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (9 samples, 0.02%)</title><rect x="993.2" y="309" width="0.2" height="15.0" fill="rgb(254,63,49)" rx="2" ry="2" />
<text  x="996.22" y="319.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (593 samples, 1.16%)</title><rect x="813.3" y="341" width="13.7" height="15.0" fill="rgb(216,46,51)" rx="2" ry="2" />
<text  x="816.35" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (492 samples, 0.96%)</title><rect x="988.0" y="373" width="11.4" height="15.0" fill="rgb(228,38,26)" rx="2" ry="2" />
<text  x="991.04" y="383.5" ></text>
</g>
<g >
<title>napi_poll (11 samples, 0.02%)</title><rect x="1174.1" y="309" width="0.3" height="15.0" fill="rgb(232,147,43)" rx="2" ry="2" />
<text  x="1177.10" y="319.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (19 samples, 0.04%)</title><rect x="111.9" y="229" width="0.4" height="15.0" fill="rgb(225,123,31)" rx="2" ry="2" />
<text  x="114.90" y="239.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (16 samples, 0.03%)</title><rect x="109.0" y="421" width="0.4" height="15.0" fill="rgb(231,44,38)" rx="2" ry="2" />
<text  x="112.02" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (585 samples, 1.14%)</title><rect x="1089.3" y="517" width="13.4" height="15.0" fill="rgb(226,89,41)" rx="2" ry="2" />
<text  x="1092.27" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (38 samples, 0.07%)</title><rect x="724.2" y="469" width="0.8" height="15.0" fill="rgb(238,171,25)" rx="2" ry="2" />
<text  x="727.17" y="479.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (5 samples, 0.01%)</title><rect x="290.7" y="453" width="0.1" height="15.0" fill="rgb(254,160,48)" rx="2" ry="2" />
<text  x="293.71" y="463.5" ></text>
</g>
<g >
<title>NaClLog (59 samples, 0.12%)</title><rect x="1085.8" y="517" width="1.4" height="15.0" fill="rgb(243,221,44)" rx="2" ry="2" />
<text  x="1088.80" y="527.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get (9 samples, 0.02%)</title><rect x="793.7" y="309" width="0.2" height="15.0" fill="rgb(217,104,31)" rx="2" ry="2" />
<text  x="796.72" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (382 samples, 0.74%)</title><rect x="776.3" y="325" width="8.8" height="15.0" fill="rgb(249,205,42)" rx="2" ry="2" />
<text  x="779.28" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (258 samples, 0.50%)</title><rect x="770.3" y="325" width="6.0" height="15.0" fill="rgb(230,142,39)" rx="2" ry="2" />
<text  x="773.35" y="335.5" ></text>
</g>
<g >
<title>event_function (64 samples, 0.12%)</title><rect x="175.7" y="245" width="1.5" height="15.0" fill="rgb(218,48,16)" rx="2" ry="2" />
<text  x="178.74" y="255.5" ></text>
</g>
<g >
<title>fdarray__poll (16 samples, 0.03%)</title><rect x="177.3" y="485" width="0.4" height="15.0" fill="rgb(211,155,1)" rx="2" ry="2" />
<text  x="180.29" y="495.5" ></text>
</g>
<g >
<title>sched_clock_cpu (13 samples, 0.03%)</title><rect x="159.5" y="357" width="0.3" height="15.0" fill="rgb(252,136,18)" rx="2" ry="2" />
<text  x="162.52" y="367.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (421 samples, 0.82%)</title><rect x="978.1" y="357" width="9.7" height="15.0" fill="rgb(254,155,47)" rx="2" ry="2" />
<text  x="981.15" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (258 samples, 0.50%)</title><rect x="770.3" y="341" width="6.0" height="15.0" fill="rgb(249,131,11)" rx="2" ry="2" />
<text  x="773.35" y="351.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (44 samples, 0.09%)</title><rect x="290.7" y="501" width="1.0" height="15.0" fill="rgb(234,124,37)" rx="2" ry="2" />
<text  x="293.71" y="511.5" ></text>
</g>
<g >
<title>__schedule (66 samples, 0.13%)</title><rect x="1188.0" y="389" width="1.6" height="15.0" fill="rgb(242,207,50)" rx="2" ry="2" />
<text  x="1191.04" y="399.5" ></text>
</g>
<g >
<title>get_typical_interval (26 samples, 0.05%)</title><rect x="134.6" y="421" width="0.6" height="15.0" fill="rgb(230,60,37)" rx="2" ry="2" />
<text  x="137.56" y="431.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (331 samples, 0.65%)</title><rect x="1182.4" y="501" width="7.6" height="15.0" fill="rgb(237,134,48)" rx="2" ry="2" />
<text  x="1185.38" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1,171 samples, 2.28%)</title><rect x="950.6" y="341" width="27.0" height="15.0" fill="rgb(243,191,7)" rx="2" ry="2" />
<text  x="953.61" y="351.5" >s..</text>
</g>
<g >
<title>netif_receive_skb_list_internal (19 samples, 0.04%)</title><rect x="111.9" y="261" width="0.4" height="15.0" fill="rgb(235,80,38)" rx="2" ry="2" />
<text  x="114.90" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 0.16%)</title><rect x="175.4" y="405" width="1.9" height="15.0" fill="rgb(207,101,0)" rx="2" ry="2" />
<text  x="178.45" y="415.5" ></text>
</g>
<g >
<title>wb_writeback (16 samples, 0.03%)</title><rect x="109.0" y="437" width="0.4" height="15.0" fill="rgb(217,5,53)" rx="2" ry="2" />
<text  x="112.02" y="447.5" ></text>
</g>
<g >
<title>tick_sched_timer (7 samples, 0.01%)</title><rect x="146.0" y="245" width="0.1" height="15.0" fill="rgb(217,101,8)" rx="2" ry="2" />
<text  x="148.97" y="255.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (73 samples, 0.14%)</title><rect x="161.7" y="357" width="1.6" height="15.0" fill="rgb(234,210,37)" rx="2" ry="2" />
<text  x="164.66" y="367.5" ></text>
</g>
<g >
<title>native_sched_clock (9 samples, 0.02%)</title><rect x="158.3" y="325" width="0.2" height="15.0" fill="rgb(219,83,28)" rx="2" ry="2" />
<text  x="161.28" y="335.5" ></text>
</g>
<g >
<title>cpuidle_select (23 samples, 0.04%)</title><rect x="1179.7" y="453" width="0.6" height="15.0" fill="rgb(234,132,6)" rx="2" ry="2" />
<text  x="1182.74" y="463.5" ></text>
</g>
<g >
<title>on_each_cpu_cond (7 samples, 0.01%)</title><rect x="107.8" y="341" width="0.1" height="15.0" fill="rgb(232,107,15)" rx="2" ry="2" />
<text  x="110.76" y="351.5" ></text>
</g>
<g >
<title>asm_common_interrupt (86 samples, 0.17%)</title><rect x="110.4" y="421" width="2.0" height="15.0" fill="rgb(226,80,48)" rx="2" ry="2" />
<text  x="113.38" y="431.5" ></text>
</g>
<g >
<title>isolate_freepages_block (6 samples, 0.01%)</title><rect x="108.5" y="389" width="0.1" height="15.0" fill="rgb(220,59,24)" rx="2" ry="2" />
<text  x="111.47" y="399.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (24 samples, 0.05%)</title><rect x="140.4" y="389" width="0.5" height="15.0" fill="rgb(247,90,47)" rx="2" ry="2" />
<text  x="143.38" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (6 samples, 0.01%)</title><rect x="1182.1" y="469" width="0.1" height="15.0" fill="rgb(251,165,13)" rx="2" ry="2" />
<text  x="1185.11" y="479.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (20 samples, 0.04%)</title><rect x="285.8" y="453" width="0.4" height="15.0" fill="rgb(243,59,39)" rx="2" ry="2" />
<text  x="288.79" y="463.5" ></text>
</g>
<g >
<title>[perf-372273.map] (61 samples, 0.12%)</title><rect x="219.7" y="533" width="1.4" height="15.0" fill="rgb(236,180,4)" rx="2" ry="2" />
<text  x="222.71" y="543.5" ></text>
</g>
<g >
<title>start_kernel (1,353 samples, 2.64%)</title><rect x="144.2" y="485" width="31.1" height="15.0" fill="rgb(236,117,50)" rx="2" ry="2" />
<text  x="147.20" y="495.5" >st..</text>
</g>
<g >
<title>do_user_addr_fault (107 samples, 0.21%)</title><rect x="1081.8" y="485" width="2.4" height="15.0" fill="rgb(239,36,52)" rx="2" ry="2" />
<text  x="1084.75" y="495.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1,353 samples, 2.64%)</title><rect x="144.2" y="469" width="31.1" height="15.0" fill="rgb(244,97,27)" rx="2" ry="2" />
<text  x="147.20" y="479.5" >ar..</text>
</g>
<g >
<title>tick_nohz_get_sleep_length (50 samples, 0.10%)</title><rect x="135.5" y="421" width="1.2" height="15.0" fill="rgb(235,197,49)" rx="2" ry="2" />
<text  x="138.50" y="431.5" ></text>
</g>
<g >
<title>net_rx_action (58 samples, 0.11%)</title><rect x="111.0" y="325" width="1.3" height="15.0" fill="rgb(212,103,22)" rx="2" ry="2" />
<text  x="114.00" y="335.5" ></text>
</g>
<g >
<title>start_secondary (1,512 samples, 2.95%)</title><rect x="109.4" y="517" width="34.8" height="15.0" fill="rgb(207,190,27)" rx="2" ry="2" />
<text  x="112.41" y="527.5" >st..</text>
</g>
<g >
<title>cpu_startup_entry (377 samples, 0.74%)</title><rect x="1173.7" y="501" width="8.7" height="15.0" fill="rgb(243,2,26)" rx="2" ry="2" />
<text  x="1176.71" y="511.5" ></text>
</g>
<g >
<title>cpu_startup_entry (330 samples, 0.64%)</title><rect x="1182.4" y="437" width="7.6" height="15.0" fill="rgb(213,136,39)" rx="2" ry="2" />
<text  x="1185.38" y="447.5" ></text>
</g>
<g >
<title>rmap_walk (11 samples, 0.02%)</title><rect x="108.1" y="389" width="0.3" height="15.0" fill="rgb(214,158,30)" rx="2" ry="2" />
<text  x="111.13" y="399.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (323 samples, 0.63%)</title><rect x="692.9" y="309" width="7.4" height="15.0" fill="rgb(239,96,47)" rx="2" ry="2" />
<text  x="695.90" y="319.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (6 samples, 0.01%)</title><rect x="108.9" y="469" width="0.1" height="15.0" fill="rgb(221,2,18)" rx="2" ry="2" />
<text  x="111.89" y="479.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (17 samples, 0.03%)</title><rect x="135.6" y="405" width="0.4" height="15.0" fill="rgb(220,169,19)" rx="2" ry="2" />
<text  x="138.62" y="415.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (19 samples, 0.04%)</title><rect x="998.9" y="245" width="0.5" height="15.0" fill="rgb(219,221,32)" rx="2" ry="2" />
<text  x="1001.92" y="255.5" ></text>
</g>
<g >
<title>ipv6_list_rcv (5 samples, 0.01%)</title><rect x="112.2" y="213" width="0.1" height="15.0" fill="rgb(251,215,43)" rx="2" ry="2" />
<text  x="115.22" y="223.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (240 samples, 0.47%)</title><rect x="813.3" y="309" width="5.6" height="15.0" fill="rgb(238,4,38)" rx="2" ry="2" />
<text  x="816.35" y="319.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (68 samples, 0.13%)</title><rect x="1133.2" y="517" width="1.5" height="15.0" fill="rgb(236,84,43)" rx="2" ry="2" />
<text  x="1136.17" y="527.5" ></text>
</g>
<g >
<title>mpage_submit_page (11 samples, 0.02%)</title><rect x="109.1" y="309" width="0.2" height="15.0" fill="rgb(219,36,7)" rx="2" ry="2" />
<text  x="112.07" y="319.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (447 samples, 0.87%)</title><rect x="977.6" y="373" width="10.2" height="15.0" fill="rgb(216,208,40)" rx="2" ry="2" />
<text  x="980.55" y="383.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (1,129 samples, 2.20%)</title><rect x="894.5" y="341" width="25.9" height="15.0" fill="rgb(249,48,51)" rx="2" ry="2" />
<text  x="897.47" y="351.5" >r..</text>
</g>
<g >
<title>dispatcher (46 samples, 0.09%)</title><rect x="1102.7" y="517" width="1.1" height="15.0" fill="rgb(211,14,28)" rx="2" ry="2" />
<text  x="1105.73" y="527.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (10 samples, 0.02%)</title><rect x="741.7" y="453" width="0.3" height="15.0" fill="rgb(231,133,18)" rx="2" ry="2" />
<text  x="744.75" y="463.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (30 samples, 0.06%)</title><rect x="180.8" y="133" width="0.7" height="15.0" fill="rgb(240,112,19)" rx="2" ry="2" />
<text  x="183.81" y="143.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (14 samples, 0.03%)</title><rect x="180.5" y="117" width="0.3" height="15.0" fill="rgb(244,68,17)" rx="2" ry="2" />
<text  x="183.48" y="127.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (8,813 samples, 17.18%)</title><rect x="785.1" y="405" width="202.7" height="15.0" fill="rgb(246,218,13)" rx="2" ry="2" />
<text  x="788.07" y="415.5" >rustposix::safeposix::disp..</text>
</g>
<g >
<title>tick_nohz_idle_enter (17 samples, 0.03%)</title><rect x="173.1" y="405" width="0.4" height="15.0" fill="rgb(253,127,3)" rx="2" ry="2" />
<text  x="176.14" y="415.5" ></text>
</g>
<g >
<title>kick_ilb (65 samples, 0.13%)</title><rect x="141.0" y="389" width="1.5" height="15.0" fill="rgb(242,88,45)" rx="2" ry="2" />
<text  x="144.00" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (389 samples, 0.76%)</title><rect x="929.5" y="277" width="8.9" height="15.0" fill="rgb(214,42,13)" rx="2" ry="2" />
<text  x="932.46" y="287.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (10 samples, 0.02%)</title><rect x="1083.5" y="373" width="0.2" height="15.0" fill="rgb(210,97,36)" rx="2" ry="2" />
<text  x="1086.50" y="383.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (45 samples, 0.09%)</title><rect x="174.2" y="421" width="1.1" height="15.0" fill="rgb(229,4,43)" rx="2" ry="2" />
<text  x="177.25" y="431.5" ></text>
</g>
<g >
<title>std::panicking::panicking (12 samples, 0.02%)</title><rect x="827.5" y="309" width="0.3" height="15.0" fill="rgb(211,94,41)" rx="2" ry="2" />
<text  x="830.52" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (18 samples, 0.04%)</title><rect x="112.4" y="341" width="0.4" height="15.0" fill="rgb(234,3,10)" rx="2" ry="2" />
<text  x="115.38" y="351.5" ></text>
</g>
<g >
<title>llist_reverse_order (25 samples, 0.05%)</title><rect x="137.9" y="453" width="0.5" height="15.0" fill="rgb(231,88,8)" rx="2" ry="2" />
<text  x="140.87" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (20 samples, 0.04%)</title><rect x="194.5" y="501" width="0.5" height="15.0" fill="rgb(238,180,29)" rx="2" ry="2" />
<text  x="197.54" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (240 samples, 0.47%)</title><rect x="793.9" y="373" width="5.6" height="15.0" fill="rgb(217,93,38)" rx="2" ry="2" />
<text  x="796.93" y="383.5" ></text>
</g>
<g >
<title>poll_idle (123 samples, 0.24%)</title><rect x="1183.5" y="357" width="2.9" height="15.0" fill="rgb(229,146,24)" rx="2" ry="2" />
<text  x="1186.53" y="367.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (24 samples, 0.05%)</title><rect x="949.2" y="309" width="0.5" height="15.0" fill="rgb(238,220,53)" rx="2" ry="2" />
<text  x="952.16" y="319.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (12 samples, 0.02%)</title><rect x="827.5" y="341" width="0.3" height="15.0" fill="rgb(231,183,23)" rx="2" ry="2" />
<text  x="830.52" y="351.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (18 samples, 0.04%)</title><rect x="112.4" y="389" width="0.4" height="15.0" fill="rgb(210,126,39)" rx="2" ry="2" />
<text  x="115.38" y="399.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (241 samples, 0.47%)</title><rect x="590.5" y="277" width="5.5" height="15.0" fill="rgb(217,42,52)" rx="2" ry="2" />
<text  x="593.50" y="287.5" ></text>
</g>
<g >
<title>isolate_freepages (20 samples, 0.04%)</title><rect x="108.4" y="405" width="0.4" height="15.0" fill="rgb(244,138,13)" rx="2" ry="2" />
<text  x="111.38" y="415.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (22 samples, 0.04%)</title><rect x="1103.8" y="469" width="0.5" height="15.0" fill="rgb(205,138,22)" rx="2" ry="2" />
<text  x="1106.79" y="479.5" ></text>
</g>
<g >
<title>nohz_csd_func (35 samples, 0.07%)</title><rect x="165.4" y="389" width="0.8" height="15.0" fill="rgb(209,0,21)" rx="2" ry="2" />
<text  x="168.37" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.09%)</title><rect x="1135.8" y="533" width="1.1" height="15.0" fill="rgb(226,145,25)" rx="2" ry="2" />
<text  x="1138.84" y="543.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (640 samples, 1.25%)</title><rect x="770.3" y="389" width="14.8" height="15.0" fill="rgb(234,25,13)" rx="2" ry="2" />
<text  x="773.35" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (330 samples, 0.64%)</title><rect x="920.9" y="325" width="7.6" height="15.0" fill="rgb(240,38,11)" rx="2" ry="2" />
<text  x="923.86" y="335.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (53 samples, 0.10%)</title><rect x="168.2" y="325" width="1.2" height="15.0" fill="rgb(244,188,20)" rx="2" ry="2" />
<text  x="171.18" y="335.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 0.16%)</title><rect x="175.4" y="453" width="1.9" height="15.0" fill="rgb(253,106,42)" rx="2" ry="2" />
<text  x="178.45" y="463.5" ></text>
</g>
<g >
<title>llist_reverse_order (25 samples, 0.05%)</title><rect x="164.8" y="389" width="0.6" height="15.0" fill="rgb(231,168,36)" rx="2" ry="2" />
<text  x="167.79" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (25 samples, 0.05%)</title><rect x="112.4" y="421" width="0.5" height="15.0" fill="rgb(228,99,4)" rx="2" ry="2" />
<text  x="115.36" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (332 samples, 0.65%)</title><rect x="805.5" y="293" width="7.6" height="15.0" fill="rgb(239,104,38)" rx="2" ry="2" />
<text  x="808.46" y="303.5" ></text>
</g>
<g >
<title>dispatcher@plt (8 samples, 0.02%)</title><rect x="1015.7" y="421" width="0.2" height="15.0" fill="rgb(239,129,8)" rx="2" ry="2" />
<text  x="1018.70" y="431.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (69 samples, 0.13%)</title><rect x="323.4" y="341" width="1.6" height="15.0" fill="rgb(236,80,43)" rx="2" ry="2" />
<text  x="326.38" y="351.5" ></text>
</g>
<g >
<title>invalidate_bh_lrus (7 samples, 0.01%)</title><rect x="107.8" y="357" width="0.1" height="15.0" fill="rgb(219,36,16)" rx="2" ry="2" />
<text  x="110.76" y="367.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (15 samples, 0.03%)</title><rect x="721.4" y="421" width="0.4" height="15.0" fill="rgb(224,208,53)" rx="2" ry="2" />
<text  x="724.41" y="431.5" ></text>
</g>
<g >
<title>NaClLog (41 samples, 0.08%)</title><rect x="184.9" y="517" width="0.9" height="15.0" fill="rgb(226,117,54)" rx="2" ry="2" />
<text  x="187.88" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (6 samples, 0.01%)</title><rect x="1189.6" y="405" width="0.1" height="15.0" fill="rgb(239,146,37)" rx="2" ry="2" />
<text  x="1192.56" y="415.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (271 samples, 0.53%)</title><rect x="204.8" y="501" width="6.2" height="15.0" fill="rgb(242,177,44)" rx="2" ry="2" />
<text  x="207.80" y="511.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (5 samples, 0.01%)</title><rect x="163.4" y="373" width="0.1" height="15.0" fill="rgb(218,28,25)" rx="2" ry="2" />
<text  x="166.39" y="383.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (47 samples, 0.09%)</title><rect x="1188.3" y="341" width="1.1" height="15.0" fill="rgb(222,158,7)" rx="2" ry="2" />
<text  x="1191.27" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (5 samples, 0.01%)</title><rect x="1182.9" y="293" width="0.1" height="15.0" fill="rgb(219,196,25)" rx="2" ry="2" />
<text  x="1185.91" y="303.5" ></text>
</g>
<g >
<title>__run_hrtimer (18 samples, 0.04%)</title><rect x="112.4" y="325" width="0.4" height="15.0" fill="rgb(216,179,35)" rx="2" ry="2" />
<text  x="115.38" y="335.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (67 samples, 0.13%)</title><rect x="596.0" y="293" width="1.6" height="15.0" fill="rgb(208,115,39)" rx="2" ry="2" />
<text  x="599.04" y="303.5" ></text>
</g>
<g >
<title>NaClMutexLock (402 samples, 0.78%)</title><rect x="277.0" y="469" width="9.2" height="15.0" fill="rgb(218,208,44)" rx="2" ry="2" />
<text  x="280.00" y="479.5" ></text>
</g>
<g >
<title>ovl_write_iter (176 samples, 0.34%)</title><rect x="177.8" y="277" width="4.1" height="15.0" fill="rgb(212,119,9)" rx="2" ry="2" />
<text  x="180.82" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (240 samples, 0.47%)</title><rect x="793.9" y="325" width="5.6" height="15.0" fill="rgb(222,90,1)" rx="2" ry="2" />
<text  x="796.93" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (28 samples, 0.05%)</title><rect x="192.9" y="517" width="0.6" height="15.0" fill="rgb(242,85,4)" rx="2" ry="2" />
<text  x="195.86" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 0.03%)</title><rect x="218.5" y="469" width="0.4" height="15.0" fill="rgb(232,129,29)" rx="2" ry="2" />
<text  x="221.49" y="479.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (63 samples, 0.12%)</title><rect x="211.0" y="517" width="1.5" height="15.0" fill="rgb(208,66,18)" rx="2" ry="2" />
<text  x="214.04" y="527.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (7 samples, 0.01%)</title><rect x="170.4" y="293" width="0.2" height="15.0" fill="rgb(236,50,41)" rx="2" ry="2" />
<text  x="173.41" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (8 samples, 0.02%)</title><rect x="1189.7" y="405" width="0.2" height="15.0" fill="rgb(229,215,38)" rx="2" ry="2" />
<text  x="1192.70" y="415.5" ></text>
</g>
<g >
<title>buffer_migrate_page_norefs (7 samples, 0.01%)</title><rect x="107.8" y="389" width="0.1" height="15.0" fill="rgb(242,206,42)" rx="2" ry="2" />
<text  x="110.76" y="399.5" ></text>
</g>
<g >
<title>update_rq_clock (7 samples, 0.01%)</title><rect x="142.7" y="437" width="0.1" height="15.0" fill="rgb(240,48,15)" rx="2" ry="2" />
<text  x="145.66" y="447.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (15 samples, 0.03%)</title><rect x="162.9" y="325" width="0.4" height="15.0" fill="rgb(224,84,2)" rx="2" ry="2" />
<text  x="165.93" y="335.5" ></text>
</g>
<g >
<title>buffer_migrate_page (14 samples, 0.03%)</title><rect x="107.4" y="389" width="0.4" height="15.0" fill="rgb(222,12,14)" rx="2" ry="2" />
<text  x="110.44" y="399.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (256 samples, 0.50%)</title><rect x="888.0" y="325" width="5.9" height="15.0" fill="rgb(229,76,16)" rx="2" ry="2" />
<text  x="891.03" y="335.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (9 samples, 0.02%)</title><rect x="920.4" y="309" width="0.3" height="15.0" fill="rgb(208,46,16)" rx="2" ry="2" />
<text  x="923.45" y="319.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (17 samples, 0.03%)</title><rect x="1189.0" y="309" width="0.4" height="15.0" fill="rgb(225,209,40)" rx="2" ry="2" />
<text  x="1191.96" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (9 samples, 0.02%)</title><rect x="920.7" y="245" width="0.2" height="15.0" fill="rgb(225,153,42)" rx="2" ry="2" />
<text  x="923.65" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (6 samples, 0.01%)</title><rect x="137.0" y="405" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="139.98" y="415.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (649 samples, 1.27%)</title><rect x="929.1" y="325" width="14.9" height="15.0" fill="rgb(228,182,34)" rx="2" ry="2" />
<text  x="932.05" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (17 samples, 0.03%)</title><rect x="845.2" y="245" width="0.4" height="15.0" fill="rgb(236,96,8)" rx="2" ry="2" />
<text  x="848.21" y="255.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (16 samples, 0.03%)</title><rect x="1034.0" y="453" width="0.3" height="15.0" fill="rgb(219,135,2)" rx="2" ry="2" />
<text  x="1036.96" y="463.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (39 samples, 0.08%)</title><rect x="949.7" y="341" width="0.9" height="15.0" fill="rgb(242,12,16)" rx="2" ry="2" />
<text  x="952.71" y="351.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (13 samples, 0.03%)</title><rect x="1133.6" y="485" width="0.3" height="15.0" fill="rgb(206,203,49)" rx="2" ry="2" />
<text  x="1136.63" y="495.5" ></text>
</g>
<g >
<title>do_iter_write (8 samples, 0.02%)</title><rect x="182.0" y="405" width="0.2" height="15.0" fill="rgb(253,151,3)" rx="2" ry="2" />
<text  x="184.98" y="415.5" ></text>
</g>
<g >
<title>std::panicking::panicking (13 samples, 0.03%)</title><rect x="999.4" y="341" width="0.3" height="15.0" fill="rgb(230,75,26)" rx="2" ry="2" />
<text  x="1002.36" y="351.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (152 samples, 0.30%)</title><rect x="940.5" y="261" width="3.5" height="15.0" fill="rgb(250,35,9)" rx="2" ry="2" />
<text  x="943.49" y="271.5" ></text>
</g>
<g >
<title>get_page_from_freelist (21 samples, 0.04%)</title><rect x="179.7" y="85" width="0.5" height="15.0" fill="rgb(239,216,19)" rx="2" ry="2" />
<text  x="182.70" y="95.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (38 samples, 0.07%)</title><rect x="947.7" y="245" width="0.8" height="15.0" fill="rgb(253,155,35)" rx="2" ry="2" />
<text  x="950.66" y="255.5" ></text>
</g>
<g >
<title>__set_page_dirty (7 samples, 0.01%)</title><rect x="180.6" y="101" width="0.1" height="15.0" fill="rgb(241,77,36)" rx="2" ry="2" />
<text  x="183.58" y="111.5" ></text>
</g>
<g >
<title>rcu_idle_exit (37 samples, 0.07%)</title><rect x="158.7" y="357" width="0.8" height="15.0" fill="rgb(251,224,32)" rx="2" ry="2" />
<text  x="161.67" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (30 samples, 0.06%)</title><rect x="1088.6" y="517" width="0.7" height="15.0" fill="rgb(250,150,35)" rx="2" ry="2" />
<text  x="1091.58" y="527.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (15 samples, 0.03%)</title><rect x="949.7" y="325" width="0.4" height="15.0" fill="rgb(222,188,47)" rx="2" ry="2" />
<text  x="952.71" y="335.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (8 samples, 0.02%)</title><rect x="182.0" y="357" width="0.2" height="15.0" fill="rgb(242,35,2)" rx="2" ry="2" />
<text  x="184.98" y="367.5" ></text>
</g>
<g >
<title>std::thread::panicking (12 samples, 0.02%)</title><rect x="827.5" y="325" width="0.3" height="15.0" fill="rgb(248,172,5)" rx="2" ry="2" />
<text  x="830.52" y="335.5" ></text>
</g>
<g >
<title>try_charge (5 samples, 0.01%)</title><rect x="1083.9" y="389" width="0.1" height="15.0" fill="rgb(219,111,33)" rx="2" ry="2" />
<text  x="1086.87" y="399.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (15 samples, 0.03%)</title><rect x="181.5" y="149" width="0.4" height="15.0" fill="rgb(228,214,46)" rx="2" ry="2" />
<text  x="184.52" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.03%)</title><rect x="177.4" y="453" width="0.3" height="15.0" fill="rgb(254,37,32)" rx="2" ry="2" />
<text  x="180.36" y="463.5" ></text>
</g>
<g >
<title>alx_clean_tx_irq (9 samples, 0.02%)</title><rect x="111.5" y="277" width="0.2" height="15.0" fill="rgb(213,16,43)" rx="2" ry="2" />
<text  x="114.49" y="287.5" ></text>
</g>
<g >
<title>menu_select (22 samples, 0.04%)</title><rect x="1179.8" y="437" width="0.5" height="15.0" fill="rgb(232,211,12)" rx="2" ry="2" />
<text  x="1182.76" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (48 samples, 0.09%)</title><rect x="989.0" y="293" width="1.1" height="15.0" fill="rgb(241,112,20)" rx="2" ry="2" />
<text  x="992.03" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (71 samples, 0.14%)</title><rect x="942.3" y="213" width="1.7" height="15.0" fill="rgb(233,52,16)" rx="2" ry="2" />
<text  x="945.35" y="223.5" ></text>
</g>
<g >
<title>generic_exec_single (7 samples, 0.01%)</title><rect x="1189.0" y="293" width="0.1" height="15.0" fill="rgb(217,13,13)" rx="2" ry="2" />
<text  x="1191.96" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (242 samples, 0.47%)</title><rect x="788.2" y="357" width="5.5" height="15.0" fill="rgb(213,43,13)" rx="2" ry="2" />
<text  x="791.15" y="367.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (685 samples, 1.34%)</title><rect x="709.3" y="485" width="15.7" height="15.0" fill="rgb(247,208,6)" rx="2" ry="2" />
<text  x="712.28" y="495.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (11 samples, 0.02%)</title><rect x="1174.1" y="357" width="0.3" height="15.0" fill="rgb(207,25,12)" rx="2" ry="2" />
<text  x="1177.10" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (49 samples, 0.10%)</title><rect x="1082.2" y="389" width="1.1" height="15.0" fill="rgb(229,57,19)" rx="2" ry="2" />
<text  x="1085.21" y="399.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (183 samples, 0.36%)</title><rect x="988.5" y="341" width="4.2" height="15.0" fill="rgb(239,84,7)" rx="2" ry="2" />
<text  x="991.46" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (152 samples, 0.30%)</title><rect x="940.5" y="245" width="3.5" height="15.0" fill="rgb(205,38,42)" rx="2" ry="2" />
<text  x="943.49" y="255.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (58 samples, 0.11%)</title><rect x="111.0" y="357" width="1.3" height="15.0" fill="rgb(221,130,12)" rx="2" ry="2" />
<text  x="114.00" y="367.5" ></text>
</g>
<g >
<title>generic_perform_write (171 samples, 0.33%)</title><rect x="177.9" y="181" width="4.0" height="15.0" fill="rgb(246,95,33)" rx="2" ry="2" />
<text  x="180.93" y="191.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (24 samples, 0.05%)</title><rect x="930.6" y="245" width="0.5" height="15.0" fill="rgb(218,194,15)" rx="2" ry="2" />
<text  x="933.59" y="255.5" ></text>
</g>
<g >
<title>handle_irq_event (25 samples, 0.05%)</title><rect x="110.4" y="357" width="0.6" height="15.0" fill="rgb(233,172,22)" rx="2" ry="2" />
<text  x="113.40" y="367.5" ></text>
</g>
<g >
<title>record__mmap_read_all (187 samples, 0.36%)</title><rect x="177.7" y="485" width="4.3" height="15.0" fill="rgb(251,174,50)" rx="2" ry="2" />
<text  x="180.68" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (13 samples, 0.03%)</title><rect x="194.2" y="453" width="0.3" height="15.0" fill="rgb(208,218,36)" rx="2" ry="2" />
<text  x="197.24" y="463.5" ></text>
</g>
<g >
<title>newidle_balance (34 samples, 0.07%)</title><rect x="1181.1" y="421" width="0.8" height="15.0" fill="rgb(219,220,29)" rx="2" ry="2" />
<text  x="1184.07" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (183 samples, 0.36%)</title><rect x="988.5" y="309" width="4.2" height="15.0" fill="rgb(226,3,13)" rx="2" ry="2" />
<text  x="991.46" y="319.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (168 samples, 0.33%)</title><rect x="940.1" y="293" width="3.9" height="15.0" fill="rgb(229,31,6)" rx="2" ry="2" />
<text  x="943.12" y="303.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (284 samples, 0.55%)</title><rect x="700.3" y="325" width="6.6" height="15.0" fill="rgb(226,215,51)" rx="2" ry="2" />
<text  x="703.33" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (924 samples, 1.80%)</title><rect x="928.5" y="357" width="21.2" height="15.0" fill="rgb(234,71,0)" rx="2" ry="2" />
<text  x="931.45" y="367.5" >h..</text>
</g>
<g >
<title>send_call_function_single_ipi (6 samples, 0.01%)</title><rect x="1189.0" y="277" width="0.1" height="15.0" fill="rgb(207,209,41)" rx="2" ry="2" />
<text  x="1191.99" y="287.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (17 samples, 0.03%)</title><rect x="1042.7" y="485" width="0.4" height="15.0" fill="rgb(219,55,25)" rx="2" ry="2" />
<text  x="1045.66" y="495.5" ></text>
</g>
<g >
<title>perf_mmap__push (181 samples, 0.35%)</title><rect x="177.7" y="453" width="4.2" height="15.0" fill="rgb(238,78,52)" rx="2" ry="2" />
<text  x="180.72" y="463.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (1,129 samples, 2.20%)</title><rect x="894.5" y="357" width="25.9" height="15.0" fill="rgb(220,88,5)" rx="2" ry="2" />
<text  x="897.47" y="367.5" >r..</text>
</g>
<g >
<title>rcu_idle_exit (6 samples, 0.01%)</title><rect x="1179.5" y="421" width="0.1" height="15.0" fill="rgb(219,2,34)" rx="2" ry="2" />
<text  x="1182.51" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (388 samples, 0.76%)</title><rect x="1000.2" y="357" width="9.0" height="15.0" fill="rgb(223,196,47)" rx="2" ry="2" />
<text  x="1003.24" y="367.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (348 samples, 0.68%)</title><rect x="920.4" y="357" width="8.1" height="15.0" fill="rgb(236,108,30)" rx="2" ry="2" />
<text  x="923.45" y="367.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.02%)</title><rect x="996.8" y="277" width="0.2" height="15.0" fill="rgb(241,1,14)" rx="2" ry="2" />
<text  x="999.78" y="287.5" ></text>
</g>
<g >
<title>schedule_idle (45 samples, 0.09%)</title><rect x="1181.0" y="469" width="1.0" height="15.0" fill="rgb(220,27,52)" rx="2" ry="2" />
<text  x="1184.00" y="479.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (8 samples, 0.02%)</title><rect x="1083.5" y="357" width="0.2" height="15.0" fill="rgb(225,16,17)" rx="2" ry="2" />
<text  x="1086.50" y="367.5" ></text>
</g>
<g >
<title>[unknown]  (1,783 samples, 3.48%)</title><rect x="1043.6" y="533" width="41.0" height="15.0" fill="rgb(222,172,23)" rx="2" ry="2" />
<text  x="1046.58" y="543.5" >[un..</text>
</g>
<g >
<title>ext4_release_io_end (6 samples, 0.01%)</title><rect x="108.9" y="437" width="0.1" height="15.0" fill="rgb(224,193,35)" rx="2" ry="2" />
<text  x="111.89" y="447.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1,830 samples, 3.57%)</title><rect x="845.9" y="293" width="42.1" height="15.0" fill="rgb(254,164,36)" rx="2" ry="2" />
<text  x="848.90" y="303.5" >__p..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (616 samples, 1.20%)</title><rect x="827.8" y="325" width="14.2" height="15.0" fill="rgb(211,52,43)" rx="2" ry="2" />
<text  x="830.80" y="335.5" ></text>
</g>
<g >
<title>update_rq_clock (7 samples, 0.01%)</title><rect x="1189.4" y="373" width="0.2" height="15.0" fill="rgb(232,189,46)" rx="2" ry="2" />
<text  x="1192.40" y="383.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (15 samples, 0.03%)</title><rect x="289.1" y="501" width="0.4" height="15.0" fill="rgb(207,226,13)" rx="2" ry="2" />
<text  x="292.15" y="511.5" ></text>
</g>
<g >
<title>copy_page (8 samples, 0.02%)</title><rect x="107.5" y="357" width="0.2" height="15.0" fill="rgb(210,169,35)" rx="2" ry="2" />
<text  x="110.48" y="367.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (30 samples, 0.06%)</title><rect x="170.7" y="277" width="0.7" height="15.0" fill="rgb(240,177,44)" rx="2" ry="2" />
<text  x="173.71" y="287.5" ></text>
</g>
<g >
<title>start_secondary (377 samples, 0.74%)</title><rect x="1173.7" y="517" width="8.7" height="15.0" fill="rgb(232,150,4)" rx="2" ry="2" />
<text  x="1176.71" y="527.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (143 samples, 0.28%)</title><rect x="993.7" y="309" width="3.3" height="15.0" fill="rgb(216,216,45)" rx="2" ry="2" />
<text  x="996.75" y="319.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (12 samples, 0.02%)</title><rect x="136.3" y="389" width="0.3" height="15.0" fill="rgb(233,10,18)" rx="2" ry="2" />
<text  x="139.31" y="399.5" ></text>
</g>
<g >
<title>CompareAndSwap (33 samples, 0.06%)</title><rect x="1084.6" y="517" width="0.8" height="15.0" fill="rgb(205,139,9)" rx="2" ry="2" />
<text  x="1087.60" y="527.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (6 samples, 0.01%)</title><rect x="1182.9" y="309" width="0.1" height="15.0" fill="rgb(209,161,42)" rx="2" ry="2" />
<text  x="1185.89" y="319.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (651 samples, 1.27%)</title><rect x="827.0" y="357" width="15.0" height="15.0" fill="rgb(239,103,6)" rx="2" ry="2" />
<text  x="829.99" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (43 samples, 0.08%)</title><rect x="1135.8" y="501" width="1.0" height="15.0" fill="rgb(221,2,0)" rx="2" ry="2" />
<text  x="1138.84" y="511.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (9 samples, 0.02%)</title><rect x="181.3" y="85" width="0.2" height="15.0" fill="rgb(234,172,25)" rx="2" ry="2" />
<text  x="184.29" y="95.5" ></text>
</g>
<g >
<title>rcu_idle_enter (7 samples, 0.01%)</title><rect x="158.5" y="357" width="0.2" height="15.0" fill="rgb(244,41,54)" rx="2" ry="2" />
<text  x="161.51" y="367.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.01%)</title><rect x="597.4" y="245" width="0.2" height="15.0" fill="rgb(227,165,27)" rx="2" ry="2" />
<text  x="600.45" y="255.5" ></text>
</g>
<g >
<title>kthread (98 samples, 0.19%)</title><rect x="107.2" y="517" width="2.2" height="15.0" fill="rgb(208,180,3)" rx="2" ry="2" />
<text  x="110.16" y="527.5" ></text>
</g>
<g >
<title>pick_next_task_fair (234 samples, 0.46%)</title><rect x="167.0" y="373" width="5.4" height="15.0" fill="rgb(216,10,28)" rx="2" ry="2" />
<text  x="170.03" y="383.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (11 samples, 0.02%)</title><rect x="178.7" y="133" width="0.2" height="15.0" fill="rgb(210,29,32)" rx="2" ry="2" />
<text  x="181.69" y="143.5" ></text>
</g>
<g >
<title>std::thread::panicking (12 samples, 0.02%)</title><rect x="977.9" y="325" width="0.2" height="15.0" fill="rgb(250,27,6)" rx="2" ry="2" />
<text  x="980.87" y="335.5" ></text>
</g>
<g >
<title>try_to_wake_up (8 samples, 0.02%)</title><rect x="112.4" y="277" width="0.2" height="15.0" fill="rgb(217,2,41)" rx="2" ry="2" />
<text  x="115.43" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (580 samples, 1.13%)</title><rect x="907.0" y="293" width="13.4" height="15.0" fill="rgb(225,93,54)" rx="2" ry="2" />
<text  x="910.01" y="303.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (90 samples, 0.18%)</title><rect x="721.8" y="469" width="2.0" height="15.0" fill="rgb(220,199,25)" rx="2" ry="2" />
<text  x="724.75" y="479.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (271 samples, 0.53%)</title><rect x="204.8" y="469" width="6.2" height="15.0" fill="rgb(218,131,15)" rx="2" ry="2" />
<text  x="207.80" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (101 samples, 0.20%)</title><rect x="997.0" y="341" width="2.4" height="15.0" fill="rgb(206,190,27)" rx="2" ry="2" />
<text  x="1000.04" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (11 samples, 0.02%)</title><rect x="162.2" y="325" width="0.3" height="15.0" fill="rgb(210,155,22)" rx="2" ry="2" />
<text  x="165.24" y="335.5" ></text>
</g>
<g >
<title>perf_poll (5 samples, 0.01%)</title><rect x="177.4" y="373" width="0.1" height="15.0" fill="rgb(243,148,23)" rx="2" ry="2" />
<text  x="180.38" y="383.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (38 samples, 0.07%)</title><rect x="947.7" y="213" width="0.8" height="15.0" fill="rgb(245,128,43)" rx="2" ry="2" />
<text  x="950.66" y="223.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (112 samples, 0.22%)</title><rect x="139.9" y="405" width="2.6" height="15.0" fill="rgb(226,222,21)" rx="2" ry="2" />
<text  x="142.92" y="415.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (157 samples, 0.31%)</title><rect x="993.4" y="341" width="3.6" height="15.0" fill="rgb(254,37,48)" rx="2" ry="2" />
<text  x="996.43" y="351.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (16 samples, 0.03%)</title><rect x="181.5" y="165" width="0.4" height="15.0" fill="rgb(230,80,31)" rx="2" ry="2" />
<text  x="184.50" y="175.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (58 samples, 0.11%)</title><rect x="111.0" y="373" width="1.3" height="15.0" fill="rgb(206,3,13)" rx="2" ry="2" />
<text  x="114.00" y="383.5" ></text>
</g>
<g >
<title>migrate_pages (65 samples, 0.13%)</title><rect x="107.3" y="453" width="1.5" height="15.0" fill="rgb(231,11,15)" rx="2" ry="2" />
<text  x="110.34" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (43 samples, 0.08%)</title><rect x="998.4" y="309" width="1.0" height="15.0" fill="rgb(223,167,18)" rx="2" ry="2" />
<text  x="1001.37" y="319.5" ></text>
</g>
<g >
<title>menu_select (32 samples, 0.06%)</title><rect x="1186.8" y="373" width="0.7" height="15.0" fill="rgb(238,17,1)" rx="2" ry="2" />
<text  x="1189.76" y="383.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (6 samples, 0.01%)</title><rect x="1182.2" y="485" width="0.2" height="15.0" fill="rgb(235,20,11)" rx="2" ry="2" />
<text  x="1185.25" y="495.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (10 samples, 0.02%)</title><rect x="1025.5" y="453" width="0.3" height="15.0" fill="rgb(254,148,10)" rx="2" ry="2" />
<text  x="1028.52" y="463.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (168 samples, 0.33%)</title><rect x="940.1" y="309" width="3.9" height="15.0" fill="rgb(244,7,11)" rx="2" ry="2" />
<text  x="943.12" y="319.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (12 samples, 0.02%)</title><rect x="212.2" y="501" width="0.3" height="15.0" fill="rgb(210,147,1)" rx="2" ry="2" />
<text  x="215.21" y="511.5" ></text>
</g>
<g >
<title>isolate_migratepages (8 samples, 0.02%)</title><rect x="107.2" y="453" width="0.1" height="15.0" fill="rgb(225,19,28)" rx="2" ry="2" />
<text  x="110.16" y="463.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (16 samples, 0.03%)</title><rect x="1133.9" y="469" width="0.4" height="15.0" fill="rgb(224,214,22)" rx="2" ry="2" />
<text  x="1136.93" y="479.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (6 samples, 0.01%)</title><rect x="160.6" y="357" width="0.1" height="15.0" fill="rgb(249,203,16)" rx="2" ry="2" />
<text  x="163.58" y="367.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (624 samples, 1.22%)</title><rect x="145.5" y="373" width="14.4" height="15.0" fill="rgb(228,75,31)" rx="2" ry="2" />
<text  x="148.54" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (651 samples, 1.27%)</title><rect x="827.0" y="373" width="15.0" height="15.0" fill="rgb(210,115,27)" rx="2" ry="2" />
<text  x="829.99" y="383.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.04%)</title><rect x="995.7" y="261" width="0.4" height="15.0" fill="rgb(213,13,1)" rx="2" ry="2" />
<text  x="998.70" y="271.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (27 samples, 0.05%)</title><rect x="179.0" y="117" width="0.7" height="15.0" fill="rgb(249,170,6)" rx="2" ry="2" />
<text  x="182.03" y="127.5" ></text>
</g>
<g >
<title>cpuidle_enter (632 samples, 1.23%)</title><rect x="145.5" y="389" width="14.6" height="15.0" fill="rgb(253,137,25)" rx="2" ry="2" />
<text  x="148.51" y="399.5" ></text>
</g>
<g >
<title>std::thread::panicking (9 samples, 0.02%)</title><rect x="920.7" y="309" width="0.2" height="15.0" fill="rgb(211,228,36)" rx="2" ry="2" />
<text  x="923.65" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.02%)</title><rect x="182.0" y="533" width="0.2" height="15.0" fill="rgb(210,85,24)" rx="2" ry="2" />
<text  x="184.98" y="543.5" ></text>
</g>
<g >
<title>ext4_writepages (16 samples, 0.03%)</title><rect x="109.0" y="357" width="0.4" height="15.0" fill="rgb(222,49,25)" rx="2" ry="2" />
<text  x="112.02" y="367.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (187 samples, 0.36%)</title><rect x="177.7" y="469" width="4.3" height="15.0" fill="rgb(252,94,37)" rx="2" ry="2" />
<text  x="180.68" y="479.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (39 samples, 0.08%)</title><rect x="939.2" y="277" width="0.9" height="15.0" fill="rgb(242,48,39)" rx="2" ry="2" />
<text  x="942.22" y="287.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (11 samples, 0.02%)</title><rect x="894.9" y="325" width="0.3" height="15.0" fill="rgb(232,100,12)" rx="2" ry="2" />
<text  x="897.93" y="335.5" ></text>
</g>
<g >
<title>pick_next_task_fair (52 samples, 0.10%)</title><rect x="1188.2" y="373" width="1.2" height="15.0" fill="rgb(249,119,54)" rx="2" ry="2" />
<text  x="1191.16" y="383.5" ></text>
</g>
<g >
<title>ip6_list_rcv_finish.constprop.0 (5 samples, 0.01%)</title><rect x="112.2" y="181" width="0.1" height="15.0" fill="rgb(213,129,39)" rx="2" ry="2" />
<text  x="115.22" y="191.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (39 samples, 0.08%)</title><rect x="949.7" y="357" width="0.9" height="15.0" fill="rgb(244,162,12)" rx="2" ry="2" />
<text  x="952.71" y="367.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (13 samples, 0.03%)</title><rect x="999.4" y="389" width="0.3" height="15.0" fill="rgb(206,42,40)" rx="2" ry="2" />
<text  x="1002.36" y="399.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (29 samples, 0.06%)</title><rect x="180.8" y="117" width="0.7" height="15.0" fill="rgb(221,210,35)" rx="2" ry="2" />
<text  x="183.83" y="127.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (283 samples, 0.55%)</title><rect x="1009.2" y="357" width="6.5" height="15.0" fill="rgb(241,185,38)" rx="2" ry="2" />
<text  x="1012.16" y="367.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (6 samples, 0.01%)</title><rect x="180.3" y="149" width="0.1" height="15.0" fill="rgb(253,25,7)" rx="2" ry="2" />
<text  x="183.30" y="159.5" ></text>
</g>
<g >
<title>NaClXMutexLock (446 samples, 0.87%)</title><rect x="276.0" y="485" width="10.2" height="15.0" fill="rgb(218,141,52)" rx="2" ry="2" />
<text  x="278.99" y="495.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (24 samples, 0.05%)</title><rect x="110.4" y="341" width="0.6" height="15.0" fill="rgb(225,146,29)" rx="2" ry="2" />
<text  x="113.40" y="351.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (6,107 samples, 11.91%)</title><rect x="559.8" y="325" width="140.5" height="15.0" fill="rgb(254,48,25)" rx="2" ry="2" />
<text  x="562.83" y="335.5" >ringbuf::consumer..</text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (27 samples, 0.05%)</title><rect x="948.5" y="197" width="0.7" height="15.0" fill="rgb(215,184,29)" rx="2" ry="2" />
<text  x="951.54" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18 samples, 0.04%)</title><rect x="146.0" y="341" width="0.4" height="15.0" fill="rgb(219,193,20)" rx="2" ry="2" />
<text  x="148.95" y="351.5" ></text>
</g>
<g >
<title>perf_ioctl (77 samples, 0.15%)</title><rect x="175.5" y="373" width="1.7" height="15.0" fill="rgb(239,33,23)" rx="2" ry="2" />
<text  x="178.47" y="383.5" ></text>
</g>
<g >
<title>dispatcher (65 samples, 0.13%)</title><rect x="193.8" y="517" width="1.5" height="15.0" fill="rgb(240,5,5)" rx="2" ry="2" />
<text  x="196.78" y="527.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (270 samples, 0.53%)</title><rect x="597.6" y="309" width="6.2" height="15.0" fill="rgb(219,160,54)" rx="2" ry="2" />
<text  x="600.63" y="319.5" ></text>
</g>
<g >
<title>core::cmp::min (27 samples, 0.05%)</title><rect x="844.6" y="357" width="0.6" height="15.0" fill="rgb(236,107,27)" rx="2" ry="2" />
<text  x="847.59" y="367.5" ></text>
</g>
<g >
<title>free_unref_page_list (5 samples, 0.01%)</title><rect x="1136.7" y="277" width="0.1" height="15.0" fill="rgb(237,71,42)" rx="2" ry="2" />
<text  x="1139.67" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (8 samples, 0.02%)</title><rect x="146.0" y="277" width="0.1" height="15.0" fill="rgb(229,24,20)" rx="2" ry="2" />
<text  x="148.95" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (8 samples, 0.02%)</title><rect x="162.7" y="325" width="0.2" height="15.0" fill="rgb(215,191,16)" rx="2" ry="2" />
<text  x="165.75" y="335.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (19 samples, 0.04%)</title><rect x="725.4" y="485" width="0.5" height="15.0" fill="rgb(231,112,0)" rx="2" ry="2" />
<text  x="728.41" y="495.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (18 samples, 0.04%)</title><rect x="112.4" y="373" width="0.4" height="15.0" fill="rgb(217,149,0)" rx="2" ry="2" />
<text  x="115.38" y="383.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (708 samples, 1.38%)</title><rect x="1173.7" y="533" width="16.3" height="15.0" fill="rgb(223,104,12)" rx="2" ry="2" />
<text  x="1176.71" y="543.5" ></text>
</g>
<g >
<title>DynArrayGet (81 samples, 0.16%)</title><rect x="1035.4" y="453" width="1.8" height="15.0" fill="rgb(252,125,44)" rx="2" ry="2" />
<text  x="1038.37" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (598 samples, 1.17%)</title><rect x="828.2" y="293" width="13.8" height="15.0" fill="rgb(216,189,30)" rx="2" ry="2" />
<text  x="831.21" y="303.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (1,843 samples, 3.59%)</title><rect x="845.6" y="325" width="42.4" height="15.0" fill="rgb(233,210,2)" rx="2" ry="2" />
<text  x="848.60" y="335.5" >std..</text>
</g>
<g >
<title>rcu_idle_exit (12 samples, 0.02%)</title><rect x="133.4" y="421" width="0.3" height="15.0" fill="rgb(211,204,7)" rx="2" ry="2" />
<text  x="136.39" y="431.5" ></text>
</g>
<g >
<title>alloc_buffer_head (15 samples, 0.03%)</title><rect x="178.3" y="101" width="0.4" height="15.0" fill="rgb(210,45,29)" rx="2" ry="2" />
<text  x="181.34" y="111.5" ></text>
</g>
<g >
<title>tick_sched_timer (7 samples, 0.01%)</title><rect x="112.6" y="309" width="0.2" height="15.0" fill="rgb(233,91,30)" rx="2" ry="2" />
<text  x="115.64" y="319.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (37 samples, 0.07%)</title><rect x="1126.5" y="517" width="0.8" height="15.0" fill="rgb(231,70,21)" rx="2" ry="2" />
<text  x="1129.48" y="527.5" ></text>
</g>
<g >
<title>post_alloc_hook (10 samples, 0.02%)</title><rect x="108.6" y="373" width="0.2" height="15.0" fill="rgb(254,137,39)" rx="2" ry="2" />
<text  x="111.61" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (580 samples, 1.13%)</title><rect x="907.0" y="309" width="13.4" height="15.0" fill="rgb(219,129,21)" rx="2" ry="2" />
<text  x="910.01" y="319.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (19 samples, 0.04%)</title><rect x="1136.4" y="325" width="0.4" height="15.0" fill="rgb(231,107,29)" rx="2" ry="2" />
<text  x="1139.37" y="335.5" ></text>
</g>
<g >
<title>alx_mask_msix (9 samples, 0.02%)</title><rect x="111.7" y="277" width="0.2" height="15.0" fill="rgb(229,123,35)" rx="2" ry="2" />
<text  x="114.69" y="287.5" ></text>
</g>
<g >
<title>ttwu_do_activate (5 samples, 0.01%)</title><rect x="112.5" y="261" width="0.1" height="15.0" fill="rgb(243,136,16)" rx="2" ry="2" />
<text  x="115.50" y="271.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (5 samples, 0.01%)</title><rect x="291.8" y="501" width="0.2" height="15.0" fill="rgb(247,63,44)" rx="2" ry="2" />
<text  x="294.84" y="511.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (6 samples, 0.01%)</title><rect x="1180.1" y="421" width="0.2" height="15.0" fill="rgb(223,204,0)" rx="2" ry="2" />
<text  x="1183.13" y="431.5" ></text>
</g>
<g >
<title>exit_mmap (42 samples, 0.08%)</title><rect x="1135.8" y="421" width="1.0" height="15.0" fill="rgb(207,134,53)" rx="2" ry="2" />
<text  x="1138.84" y="431.5" ></text>
</g>
<g >
<title>NaClSysRead (18,035 samples, 35.16%)</title><rect x="292.0" y="485" width="414.9" height="15.0" fill="rgb(250,224,39)" rx="2" ry="2" />
<text  x="294.98" y="495.5" >NaClSysRead</text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (34 samples, 0.07%)</title><rect x="946.3" y="293" width="0.7" height="15.0" fill="rgb(246,194,12)" rx="2" ry="2" />
<text  x="949.26" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_many_cond (7 samples, 0.01%)</title><rect x="108.2" y="277" width="0.2" height="15.0" fill="rgb(214,98,42)" rx="2" ry="2" />
<text  x="111.22" y="287.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="218.0" y="485" width="0.3" height="15.0" fill="rgb(240,132,10)" rx="2" ry="2" />
<text  x="220.99" y="495.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (9 samples, 0.02%)</title><rect x="1087.6" y="517" width="0.2" height="15.0" fill="rgb(248,20,50)" rx="2" ry="2" />
<text  x="1090.57" y="527.5" ></text>
</g>
<g >
<title>[unknown] (286 samples, 0.56%)</title><rect x="175.4" y="533" width="6.6" height="15.0" fill="rgb(244,63,18)" rx="2" ry="2" />
<text  x="178.40" y="543.5" ></text>
</g>
<g >
<title>HandleStackContext (762 samples, 1.49%)</title><rect x="234.9" y="501" width="17.5" height="15.0" fill="rgb(240,142,16)" rx="2" ry="2" />
<text  x="237.87" y="511.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (8 samples, 0.02%)</title><rect x="182.0" y="389" width="0.2" height="15.0" fill="rgb(206,209,48)" rx="2" ry="2" />
<text  x="184.98" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (152 samples, 0.30%)</title><rect x="940.5" y="229" width="3.5" height="15.0" fill="rgb(246,91,43)" rx="2" ry="2" />
<text  x="943.49" y="239.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.02%)</title><rect x="195.0" y="501" width="0.3" height="15.0" fill="rgb(245,43,16)" rx="2" ry="2" />
<text  x="198.00" y="511.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (578 samples, 1.13%)</title><rect x="113.0" y="421" width="13.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="115.98" y="431.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (329 samples, 0.64%)</title><rect x="315.8" y="341" width="7.6" height="15.0" fill="rgb(244,146,33)" rx="2" ry="2" />
<text  x="318.81" y="351.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (35 samples, 0.07%)</title><rect x="290.9" y="421" width="0.8" height="15.0" fill="rgb(252,133,29)" rx="2" ry="2" />
<text  x="293.90" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.02%)</title><rect x="193.5" y="517" width="0.3" height="15.0" fill="rgb(253,218,53)" rx="2" ry="2" />
<text  x="196.51" y="527.5" ></text>
</g>
<g >
<title>rmap_walk_anon (11 samples, 0.02%)</title><rect x="108.1" y="373" width="0.3" height="15.0" fill="rgb(206,200,26)" rx="2" ry="2" />
<text  x="111.13" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (19 samples, 0.04%)</title><rect x="998.9" y="277" width="0.5" height="15.0" fill="rgb(232,7,37)" rx="2" ry="2" />
<text  x="1001.92" y="287.5" ></text>
</g>
<g >
<title>do_group_exit (43 samples, 0.08%)</title><rect x="1135.8" y="485" width="1.0" height="15.0" fill="rgb(229,136,22)" rx="2" ry="2" />
<text  x="1138.84" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (17 samples, 0.03%)</title><rect x="845.2" y="261" width="0.4" height="15.0" fill="rgb(217,174,3)" rx="2" ry="2" />
<text  x="848.21" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (16 samples, 0.03%)</title><rect x="947.3" y="245" width="0.4" height="15.0" fill="rgb(220,8,49)" rx="2" ry="2" />
<text  x="950.30" y="255.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (67 samples, 0.13%)</title><rect x="596.0" y="277" width="1.6" height="15.0" fill="rgb(216,25,6)" rx="2" ry="2" />
<text  x="599.04" y="287.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (8 samples, 0.02%)</title><rect x="112.4" y="309" width="0.2" height="15.0" fill="rgb(244,169,7)" rx="2" ry="2" />
<text  x="115.43" y="319.5" ></text>
</g>
<g >
<title>wb_workfn (16 samples, 0.03%)</title><rect x="109.0" y="469" width="0.4" height="15.0" fill="rgb(230,218,12)" rx="2" ry="2" />
<text  x="112.02" y="479.5" ></text>
</g>
<g >
<title>ext4_do_flush_completed_IO.isra.0 (6 samples, 0.01%)</title><rect x="108.9" y="453" width="0.1" height="15.0" fill="rgb(246,180,18)" rx="2" ry="2" />
<text  x="111.89" y="463.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (19 samples, 0.04%)</title><rect x="179.1" y="101" width="0.4" height="15.0" fill="rgb(244,12,8)" rx="2" ry="2" />
<text  x="182.08" y="111.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.01%)</title><rect x="597.4" y="229" width="0.2" height="15.0" fill="rgb(225,168,14)" rx="2" ry="2" />
<text  x="600.45" y="239.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (8 samples, 0.02%)</title><rect x="943.8" y="197" width="0.2" height="15.0" fill="rgb(228,115,22)" rx="2" ry="2" />
<text  x="946.80" y="207.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (332 samples, 0.65%)</title><rect x="805.5" y="309" width="7.6" height="15.0" fill="rgb(246,100,33)" rx="2" ry="2" />
<text  x="808.46" y="319.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (389 samples, 0.76%)</title><rect x="929.5" y="309" width="8.9" height="15.0" fill="rgb(252,178,23)" rx="2" ry="2" />
<text  x="932.46" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (261 samples, 0.51%)</title><rect x="799.5" y="293" width="6.0" height="15.0" fill="rgb(250,11,4)" rx="2" ry="2" />
<text  x="802.45" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock (6 samples, 0.01%)</title><rect x="172.9" y="389" width="0.1" height="15.0" fill="rgb(243,70,23)" rx="2" ry="2" />
<text  x="175.89" y="399.5" ></text>
</g>
<g >
<title>__buffer_migrate_page.part.0 (7 samples, 0.01%)</title><rect x="107.8" y="373" width="0.1" height="15.0" fill="rgb(239,12,1)" rx="2" ry="2" />
<text  x="110.76" y="383.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (12 samples, 0.02%)</title><rect x="212.2" y="469" width="0.3" height="15.0" fill="rgb(247,64,23)" rx="2" ry="2" />
<text  x="215.21" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (154 samples, 0.30%)</title><rect x="932.8" y="245" width="3.5" height="15.0" fill="rgb(233,226,0)" rx="2" ry="2" />
<text  x="935.76" y="255.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (21 samples, 0.04%)</title><rect x="1104.3" y="501" width="0.5" height="15.0" fill="rgb(221,74,28)" rx="2" ry="2" />
<text  x="1107.30" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (43 samples, 0.08%)</title><rect x="182.3" y="517" width="1.0" height="15.0" fill="rgb(218,183,0)" rx="2" ry="2" />
<text  x="185.35" y="527.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (22 samples, 0.04%)</title><rect x="844.1" y="357" width="0.5" height="15.0" fill="rgb(208,88,39)" rx="2" ry="2" />
<text  x="847.08" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (110 samples, 0.21%)</title><rect x="990.1" y="293" width="2.6" height="15.0" fill="rgb(236,215,10)" rx="2" ry="2" />
<text  x="993.14" y="303.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (474 samples, 0.92%)</title><rect x="710.8" y="469" width="11.0" height="15.0" fill="rgb(218,225,25)" rx="2" ry="2" />
<text  x="713.85" y="479.5" ></text>
</g>
<g >
<title>__schedule (157 samples, 0.31%)</title><rect x="139.2" y="453" width="3.6" height="15.0" fill="rgb(219,132,50)" rx="2" ry="2" />
<text  x="142.21" y="463.5" ></text>
</g>
<g >
<title>unmap_vmas (42 samples, 0.08%)</title><rect x="1135.8" y="405" width="1.0" height="15.0" fill="rgb(218,20,37)" rx="2" ry="2" />
<text  x="1138.84" y="415.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (13 samples, 0.03%)</title><rect x="181.0" y="69" width="0.3" height="15.0" fill="rgb(236,191,38)" rx="2" ry="2" />
<text  x="183.97" y="79.5" ></text>
</g>
<g >
<title>cpuidle_enter (168 samples, 0.33%)</title><rect x="1182.8" y="389" width="3.9" height="15.0" fill="rgb(216,226,43)" rx="2" ry="2" />
<text  x="1185.84" y="399.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (10 samples, 0.02%)</title><rect x="893.7" y="309" width="0.2" height="15.0" fill="rgb(228,180,27)" rx="2" ry="2" />
<text  x="896.69" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (353 samples, 0.69%)</title><rect x="818.9" y="293" width="8.1" height="15.0" fill="rgb(221,116,53)" rx="2" ry="2" />
<text  x="821.87" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (89 samples, 0.17%)</title><rect x="947.1" y="261" width="2.1" height="15.0" fill="rgb(208,79,11)" rx="2" ry="2" />
<text  x="950.11" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (101 samples, 0.20%)</title><rect x="997.0" y="357" width="2.4" height="15.0" fill="rgb(246,14,20)" rx="2" ry="2" />
<text  x="1000.04" y="367.5" ></text>
</g>
<g >
<title>ovl_write_iter (8 samples, 0.02%)</title><rect x="182.0" y="437" width="0.2" height="15.0" fill="rgb(241,174,8)" rx="2" ry="2" />
<text  x="184.98" y="447.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.12%)</title><rect x="944.8" y="277" width="1.5" height="15.0" fill="rgb(232,207,20)" rx="2" ry="2" />
<text  x="947.79" y="287.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (10,118 samples, 19.73%)</title><rect x="325.7" y="357" width="232.8" height="15.0" fill="rgb(225,189,18)" rx="2" ry="2" />
<text  x="328.73" y="367.5" >ringbuf::consumer::Consumer&lt;T&gt;..</text>
</g>
</g>
</svg>
