<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>intel_idle (4 samples, 3.12%)</title><rect x="1153.1" y="421" width="36.9" height="15.0" fill="rgb(247,110,4)" rx="2" ry="2" />
<text  x="1156.12" y="431.5" >int..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.78%)</title><rect x="1042.5" y="341" width="9.2" height="15.0" fill="rgb(221,163,28)" rx="2" ry="2" />
<text  x="1045.50" y="351.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 2.34%)</title><rect x="1024.1" y="405" width="27.6" height="15.0" fill="rgb(207,167,13)" rx="2" ry="2" />
<text  x="1027.06" y="415.5" >[..</text>
</g>
<g >
<title>NaClVmCopyEntry (6 samples, 4.69%)</title><rect x="738.3" y="229" width="55.3" height="15.0" fill="rgb(226,147,26)" rx="2" ry="2" />
<text  x="741.28" y="239.5" >NaClV..</text>
</g>
<g >
<title>sys_ioctl (64 samples, 50.00%)</title><rect x="19.2" y="437" width="590.0" height="15.0" fill="rgb(219,7,46)" rx="2" ry="2" />
<text  x="22.22" y="447.5" >sys_ioctl</text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (3 samples, 2.34%)</title><rect x="701.4" y="469" width="27.7" height="15.0" fill="rgb(218,202,18)" rx="2" ry="2" />
<text  x="704.41" y="479.5" >N..</text>
</g>
<g >
<title>page_fault (7 samples, 5.47%)</title><rect x="913.4" y="213" width="64.6" height="15.0" fill="rgb(249,112,43)" rx="2" ry="2" />
<text  x="916.44" y="223.5" >page_fa..</text>
</g>
<g >
<title>perf_mmap__push (1 samples, 0.78%)</title><rect x="609.2" y="485" width="9.2" height="15.0" fill="rgb(206,223,0)" rx="2" ry="2" />
<text  x="612.22" y="495.5" ></text>
</g>
<g >
<title>cmd_record (1 samples, 0.78%)</title><rect x="618.4" y="533" width="9.3" height="15.0" fill="rgb(229,115,50)" rx="2" ry="2" />
<text  x="621.44" y="543.5" ></text>
</g>
<g >
<title>link_path_walk (1 samples, 0.78%)</title><rect x="618.4" y="373" width="9.3" height="15.0" fill="rgb(253,201,25)" rx="2" ry="2" />
<text  x="621.44" y="383.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.78%)</title><rect x="968.8" y="133" width="9.2" height="15.0" fill="rgb(250,198,40)" rx="2" ry="2" />
<text  x="971.75" y="143.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.78%)</title><rect x="1042.5" y="277" width="9.2" height="15.0" fill="rgb(229,34,53)" rx="2" ry="2" />
<text  x="1045.50" y="287.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (1 samples, 0.78%)</title><rect x="1033.3" y="229" width="9.2" height="15.0" fill="rgb(252,138,54)" rx="2" ry="2" />
<text  x="1036.28" y="239.5" ></text>
</g>
<g >
<title>lind (1 samples, 0.78%)</title><rect x="10.0" y="597" width="9.2" height="15.0" fill="rgb(208,194,8)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>__GI___execve (1 samples, 0.78%)</title><rect x="618.4" y="501" width="9.3" height="15.0" fill="rgb(215,179,49)" rx="2" ry="2" />
<text  x="621.44" y="511.5" ></text>
</g>
<g >
<title>__do_fault (5 samples, 3.91%)</title><rect x="922.7" y="133" width="46.1" height="15.0" fill="rgb(208,121,37)" rx="2" ry="2" />
<text  x="925.66" y="143.5" >__do..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 50.00%)</title><rect x="19.2" y="469" width="590.0" height="15.0" fill="rgb(209,202,2)" rx="2" ry="2" />
<text  x="22.22" y="479.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>NaClPatchAddr (2 samples, 1.56%)</title><rect x="978.0" y="261" width="18.4" height="15.0" fill="rgb(231,84,40)" rx="2" ry="2" />
<text  x="980.97" y="271.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 50.00%)</title><rect x="19.2" y="389" width="590.0" height="15.0" fill="rgb(237,192,23)" rx="2" ry="2" />
<text  x="22.22" y="399.5" >perf_event_for_each_child</text>
</g>
<g >
<title>[unknown] (3 samples, 2.34%)</title><rect x="1024.1" y="565" width="27.6" height="15.0" fill="rgb(235,60,32)" rx="2" ry="2" />
<text  x="1027.06" y="575.5" >[..</text>
</g>
<g >
<title>ep_send_events_proc (1 samples, 0.78%)</title><rect x="1033.3" y="213" width="9.2" height="15.0" fill="rgb(254,195,36)" rx="2" ry="2" />
<text  x="1036.28" y="223.5" ></text>
</g>
<g >
<title>swapper (19 samples, 14.84%)</title><rect x="1014.8" y="597" width="175.2" height="15.0" fill="rgb(248,50,42)" rx="2" ry="2" />
<text  x="1017.84" y="607.5" >swapper</text>
</g>
<g >
<title>[unknown] (40 samples, 31.25%)</title><rect x="636.9" y="581" width="368.7" height="15.0" fill="rgb(234,82,44)" rx="2" ry="2" />
<text  x="639.88" y="591.5" >[unknown]</text>
</g>
<g >
<title>smp_call_function_single (64 samples, 50.00%)</title><rect x="19.2" y="341" width="590.0" height="15.0" fill="rgb(234,201,30)" rx="2" ry="2" />
<text  x="22.22" y="351.5" >smp_call_function_single</text>
</g>
<g >
<title>run_builtin (1 samples, 0.78%)</title><rect x="618.4" y="549" width="9.3" height="15.0" fill="rgb(210,174,18)" rx="2" ry="2" />
<text  x="621.44" y="559.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.78%)</title><rect x="618.4" y="437" width="9.3" height="15.0" fill="rgb(218,225,13)" rx="2" ry="2" />
<text  x="621.44" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.78%)</title><rect x="1143.9" y="517" width="9.2" height="15.0" fill="rgb(240,177,1)" rx="2" ry="2" />
<text  x="1146.91" y="527.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.78%)</title><rect x="1042.5" y="325" width="9.2" height="15.0" fill="rgb(225,1,36)" rx="2" ry="2" />
<text  x="1045.50" y="335.5" ></text>
</g>
<g >
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.78%)</title><rect x="1005.6" y="581" width="9.2" height="15.0" fill="rgb(215,100,4)" rx="2" ry="2" />
<text  x="1008.62" y="591.5" ></text>
</g>
<g >
<title>do_open_execat (1 samples, 0.78%)</title><rect x="618.4" y="421" width="9.3" height="15.0" fill="rgb(235,21,11)" rx="2" ry="2" />
<text  x="621.44" y="431.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.78%)</title><rect x="950.3" y="37" width="9.2" height="15.0" fill="rgb(211,173,16)" rx="2" ry="2" />
<text  x="953.31" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.78%)</title><rect x="1005.6" y="565" width="9.2" height="15.0" fill="rgb(223,46,33)" rx="2" ry="2" />
<text  x="1008.62" y="575.5" ></text>
</g>
<g >
<title>call_cpuidle (10 samples, 7.81%)</title><rect x="1051.7" y="517" width="92.2" height="15.0" fill="rgb(252,21,0)" rx="2" ry="2" />
<text  x="1054.72" y="527.5" >call_cpuidle</text>
</g>
<g >
<title>[unknown] (3 samples, 2.34%)</title><rect x="1024.1" y="485" width="27.6" height="15.0" fill="rgb(254,25,43)" rx="2" ry="2" />
<text  x="1027.06" y="495.5" >[..</text>
</g>
<g >
<title>[unknown] (3 samples, 2.34%)</title><rect x="1024.1" y="501" width="27.6" height="15.0" fill="rgb(217,36,47)" rx="2" ry="2" />
<text  x="1027.06" y="511.5" >[..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.78%)</title><rect x="1033.3" y="309" width="9.2" height="15.0" fill="rgb(210,212,10)" rx="2" ry="2" />
<text  x="1036.28" y="319.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.78%)</title><rect x="10.0" y="501" width="9.2" height="15.0" fill="rgb(232,144,29)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>main (65 samples, 50.78%)</title><rect x="19.2" y="549" width="599.2" height="15.0" fill="rgb(227,7,18)" rx="2" ry="2" />
<text  x="22.22" y="559.5" >main</text>
</g>
<g >
<title>[unknown] (3 samples, 2.34%)</title><rect x="1024.1" y="389" width="27.6" height="15.0" fill="rgb(221,12,4)" rx="2" ry="2" />
<text  x="1027.06" y="399.5" >[..</text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.78%)</title><rect x="1042.5" y="245" width="9.2" height="15.0" fill="rgb(224,220,8)" rx="2" ry="2" />
<text  x="1045.50" y="255.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.78%)</title><rect x="609.2" y="453" width="9.2" height="15.0" fill="rgb(212,223,25)" rx="2" ry="2" />
<text  x="612.22" y="463.5" ></text>
</g>
<g >
<title>NaClCopyDynamicText (26 samples, 20.31%)</title><rect x="738.3" y="261" width="239.7" height="15.0" fill="rgb(238,131,20)" rx="2" ry="2" />
<text  x="741.28" y="271.5" >NaClCopyDynamicText</text>
</g>
<g >
<title>sock_poll (1 samples, 0.78%)</title><rect x="1033.3" y="181" width="9.2" height="15.0" fill="rgb(218,53,14)" rx="2" ry="2" />
<text  x="1036.28" y="191.5" ></text>
</g>
<g >
<title>all (128 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(227,24,45)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>cpu_startup_entry (4 samples, 3.12%)</title><rect x="1153.1" y="501" width="36.9" height="15.0" fill="rgb(250,164,26)" rx="2" ry="2" />
<text  x="1156.12" y="511.5" >cpu..</text>
</g>
<g >
<title>clear_page_erms (2 samples, 1.56%)</title><rect x="922.7" y="101" width="18.4" height="15.0" fill="rgb(248,141,20)" rx="2" ry="2" />
<text  x="925.66" y="111.5" ></text>
</g>
<g >
<title>inode_permission (1 samples, 0.78%)</title><rect x="618.4" y="357" width="9.3" height="15.0" fill="rgb(209,80,26)" rx="2" ry="2" />
<text  x="621.44" y="367.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 2.34%)</title><rect x="1024.1" y="549" width="27.6" height="15.0" fill="rgb(254,51,54)" rx="2" ry="2" />
<text  x="1027.06" y="559.5" >[..</text>
</g>
<g >
<title>remote_function (64 samples, 50.00%)</title><rect x="19.2" y="309" width="590.0" height="15.0" fill="rgb(209,144,18)" rx="2" ry="2" />
<text  x="22.22" y="319.5" >remote_function</text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.78%)</title><rect x="1143.9" y="501" width="9.2" height="15.0" fill="rgb(252,1,36)" rx="2" ry="2" />
<text  x="1146.91" y="511.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.78%)</title><rect x="913.4" y="165" width="9.3" height="15.0" fill="rgb(226,6,27)" rx="2" ry="2" />
<text  x="916.44" y="175.5" ></text>
</g>
<g >
<title>NaClValidateCode (2 samples, 1.56%)</title><rect x="710.6" y="421" width="18.5" height="15.0" fill="rgb(223,76,10)" rx="2" ry="2" />
<text  x="713.62" y="431.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6 samples, 4.69%)</title><rect x="922.7" y="149" width="55.3" height="15.0" fill="rgb(246,162,27)" rx="2" ry="2" />
<text  x="925.66" y="159.5" >__han..</text>
</g>
<g >
<title>generic_exec_single (64 samples, 50.00%)</title><rect x="19.2" y="325" width="590.0" height="15.0" fill="rgb(232,106,49)" rx="2" ry="2" />
<text  x="22.22" y="335.5" >generic_exec_single</text>
</g>
<g >
<title>[unknown]  (28 samples, 21.88%)</title><rect x="738.3" y="469" width="258.1" height="15.0" fill="rgb(214,192,32)" rx="2" ry="2" />
<text  x="741.28" y="479.5" >[unknown] </text>
</g>
<g >
<title>shmem_getpage_gfp (3 samples, 2.34%)</title><rect x="941.1" y="101" width="27.7" height="15.0" fill="rgb(207,209,1)" rx="2" ry="2" />
<text  x="944.09" y="111.5" >s..</text>
</g>
<g >
<title>NaClTextDyncodeCreate (3 samples, 2.34%)</title><rect x="701.4" y="437" width="27.7" height="15.0" fill="rgb(248,171,48)" rx="2" ry="2" />
<text  x="704.41" y="447.5" >N..</text>
</g>
<g >
<title>x86_64_start_reservations (4 samples, 3.12%)</title><rect x="1153.1" y="549" width="36.9" height="15.0" fill="rgb(229,108,23)" rx="2" ry="2" />
<text  x="1156.12" y="559.5" >x86..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.78%)</title><rect x="683.0" y="549" width="9.2" height="15.0" fill="rgb(218,106,46)" rx="2" ry="2" />
<text  x="685.97" y="559.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 50.00%)</title><rect x="19.2" y="229" width="590.0" height="15.0" fill="rgb(252,166,13)" rx="2" ry="2" />
<text  x="22.22" y="239.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 0.78%)</title><rect x="729.1" y="421" width="9.2" height="15.0" fill="rgb(212,202,30)" rx="2" ry="2" />
<text  x="732.06" y="431.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 50.00%)</title><rect x="19.2" y="245" width="590.0" height="15.0" fill="rgb(249,126,37)" rx="2" ry="2" />
<text  x="22.22" y="255.5" >x86_pmu_enable</text>
</g>
<g >
<title>start_secondary (11 samples, 8.59%)</title><rect x="1051.7" y="565" width="101.4" height="15.0" fill="rgb(218,62,10)" rx="2" ry="2" />
<text  x="1054.72" y="575.5" >start_second..</text>
</g>
<g >
<title>perf (66 samples, 51.56%)</title><rect x="19.2" y="597" width="608.5" height="15.0" fill="rgb(251,202,33)" rx="2" ry="2" />
<text  x="22.22" y="607.5" >perf</text>
</g>
<g >
<title>secondary_startup_64 (15 samples, 11.72%)</title><rect x="1051.7" y="581" width="138.3" height="15.0" fill="rgb(248,124,37)" rx="2" ry="2" />
<text  x="1054.72" y="591.5" >secondary_startup..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.56%)</title><rect x="636.9" y="565" width="18.4" height="15.0" fill="rgb(234,43,28)" rx="2" ry="2" />
<text  x="639.88" y="575.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 2.34%)</title><rect x="1024.1" y="517" width="27.6" height="15.0" fill="rgb(243,222,14)" rx="2" ry="2" />
<text  x="1027.06" y="527.5" >[..</text>
</g>
<g >
<title>evlist__enable (64 samples, 50.00%)</title><rect x="19.2" y="501" width="590.0" height="15.0" fill="rgb(240,138,36)" rx="2" ry="2" />
<text  x="22.22" y="511.5" >evlist__enable</text>
</g>
<g >
<title>x86_64_start_kernel (4 samples, 3.12%)</title><rect x="1153.1" y="565" width="36.9" height="15.0" fill="rgb(229,8,40)" rx="2" ry="2" />
<text  x="1156.12" y="575.5" >x86..</text>
</g>
<g >
<title>[sel_ldr] (28 samples, 21.88%)</title><rect x="738.3" y="389" width="258.1" height="15.0" fill="rgb(229,14,18)" rx="2" ry="2" />
<text  x="741.28" y="399.5" >[sel_ldr]</text>
</g>
<g >
<title>ep_poll (1 samples, 0.78%)</title><rect x="1033.3" y="245" width="9.2" height="15.0" fill="rgb(224,87,50)" rx="2" ry="2" />
<text  x="1036.28" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (64 samples, 50.00%)</title><rect x="19.2" y="453" width="590.0" height="15.0" fill="rgb(247,88,7)" rx="2" ry="2" />
<text  x="22.22" y="463.5" >do_syscall_64</text>
</g>
<g >
<title>NaClVmmapVisit (26 samples, 20.31%)</title><rect x="738.3" y="245" width="239.7" height="15.0" fill="rgb(209,9,17)" rx="2" ry="2" />
<text  x="741.28" y="255.5" >NaClVmmapVisit</text>
</g>
<g >
<title>futex_wake (1 samples, 0.78%)</title><rect x="1042.5" y="293" width="9.2" height="15.0" fill="rgb(225,191,46)" rx="2" ry="2" />
<text  x="1045.50" y="303.5" ></text>
</g>
<g >
<title>__inode_permission (1 samples, 0.78%)</title><rect x="618.4" y="341" width="9.3" height="15.0" fill="rgb(239,46,2)" rx="2" ry="2" />
<text  x="621.44" y="351.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.78%)</title><rect x="1042.5" y="309" width="9.2" height="15.0" fill="rgb(205,36,35)" rx="2" ry="2" />
<text  x="1045.50" y="319.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.78%)</title><rect x="618.4" y="389" width="9.3" height="15.0" fill="rgb(237,72,13)" rx="2" ry="2" />
<text  x="621.44" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.78%)</title><rect x="10.0" y="549" width="9.2" height="15.0" fill="rgb(218,58,25)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>rest_init (4 samples, 3.12%)</title><rect x="1153.1" y="517" width="36.9" height="15.0" fill="rgb(229,219,47)" rx="2" ry="2" />
<text  x="1156.12" y="527.5" >res..</text>
</g>
<g >
<title>PyNumber_AsSsize_t (1 samples, 0.78%)</title><rect x="692.2" y="549" width="9.2" height="15.0" fill="rgb(225,40,7)" rx="2" ry="2" />
<text  x="695.19" y="559.5" ></text>
</g>
<g >
<title>default_do_nmi (1 samples, 0.78%)</title><rect x="19.2" y="197" width="9.2" height="15.0" fill="rgb(254,63,31)" rx="2" ry="2" />
<text  x="22.22" y="207.5" ></text>
</g>
<g >
<title>[perf-1621.map] (32 samples, 25.00%)</title><rect x="701.4" y="549" width="295.0" height="15.0" fill="rgb(217,80,54)" rx="2" ry="2" />
<text  x="704.41" y="559.5" >[perf-1621.map]</text>
</g>
<g >
<title>NaClValidateCode (1 samples, 0.78%)</title><rect x="729.1" y="437" width="9.2" height="15.0" fill="rgb(237,152,42)" rx="2" ry="2" />
<text  x="732.06" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.78%)</title><rect x="959.5" y="69" width="9.3" height="15.0" fill="rgb(230,120,11)" rx="2" ry="2" />
<text  x="962.53" y="79.5" ></text>
</g>
<g >
<title>[unknown]  (28 samples, 21.88%)</title><rect x="738.3" y="437" width="258.1" height="15.0" fill="rgb(253,47,30)" rx="2" ry="2" />
<text  x="741.28" y="447.5" >[unknown] </text>
</g>
<g >
<title>__get_user_8 (1 samples, 0.78%)</title><rect x="10.0" y="485" width="9.2" height="15.0" fill="rgb(217,99,25)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist.constprop.0 (1 samples, 0.78%)</title><rect x="609.2" y="501" width="9.2" height="15.0" fill="rgb(220,24,9)" rx="2" ry="2" />
<text  x="612.22" y="511.5" ></text>
</g>
<g >
<title>cmd_record (65 samples, 50.78%)</title><rect x="19.2" y="517" width="599.2" height="15.0" fill="rgb(239,165,22)" rx="2" ry="2" />
<text  x="22.22" y="527.5" >cmd_record</text>
</g>
<g >
<title>handle_mm_fault (6 samples, 4.69%)</title><rect x="922.7" y="165" width="55.3" height="15.0" fill="rgb(219,130,24)" rx="2" ry="2" />
<text  x="925.66" y="175.5" >handl..</text>
</g>
<g >
<title>CopyCodeSafelyInitial (1 samples, 0.78%)</title><rect x="701.4" y="421" width="9.2" height="15.0" fill="rgb(220,212,54)" rx="2" ry="2" />
<text  x="704.41" y="431.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 50.00%)</title><rect x="19.2" y="277" width="590.0" height="15.0" fill="rgb(207,161,48)" rx="2" ry="2" />
<text  x="22.22" y="287.5" >__perf_event_enable</text>
</g>
<g >
<title>do_filp_open (1 samples, 0.78%)</title><rect x="618.4" y="405" width="9.3" height="15.0" fill="rgb(242,97,30)" rx="2" ry="2" />
<text  x="621.44" y="415.5" ></text>
</g>
<g >
<title>perf_ioctl (64 samples, 50.00%)</title><rect x="19.2" y="405" width="590.0" height="15.0" fill="rgb(211,166,30)" rx="2" ry="2" />
<text  x="22.22" y="415.5" >perf_ioctl</text>
</g>
<g >
<title>sel_ldr (42 samples, 32.81%)</title><rect x="627.7" y="597" width="387.1" height="15.0" fill="rgb(227,134,44)" rx="2" ry="2" />
<text  x="630.66" y="607.5" >sel_ldr</text>
</g>
<g >
<title>lru_cache_add_anon (1 samples, 0.78%)</title><rect x="950.3" y="85" width="9.2" height="15.0" fill="rgb(213,66,23)" rx="2" ry="2" />
<text  x="953.31" y="95.5" ></text>
</g>
<g >
<title>cpu_startup_entry (11 samples, 8.59%)</title><rect x="1051.7" y="549" width="101.4" height="15.0" fill="rgb(207,116,40)" rx="2" ry="2" />
<text  x="1054.72" y="559.5" >cpu_startup_..</text>
</g>
<g >
<title>do_idle (4 samples, 3.12%)</title><rect x="1153.1" y="485" width="36.9" height="15.0" fill="rgb(217,151,28)" rx="2" ry="2" />
<text  x="1156.12" y="495.5" >do_..</text>
</g>
<g >
<title>vmacache_find (1 samples, 0.78%)</title><rect x="913.4" y="149" width="9.3" height="15.0" fill="rgb(253,99,43)" rx="2" ry="2" />
<text  x="916.44" y="159.5" ></text>
</g>
<g >
<title>[unknown]  (28 samples, 21.88%)</title><rect x="738.3" y="485" width="258.1" height="15.0" fill="rgb(242,212,6)" rx="2" ry="2" />
<text  x="741.28" y="495.5" >[unknown] </text>
</g>
<g >
<title>[unknown] (3 samples, 2.34%)</title><rect x="1024.1" y="533" width="27.6" height="15.0" fill="rgb(225,43,31)" rx="2" ry="2" />
<text  x="1027.06" y="543.5" >[..</text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.78%)</title><rect x="950.3" y="53" width="9.2" height="15.0" fill="rgb(211,224,11)" rx="2" ry="2" />
<text  x="953.31" y="63.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.78%)</title><rect x="618.4" y="485" width="9.3" height="15.0" fill="rgb(205,5,36)" rx="2" ry="2" />
<text  x="621.44" y="495.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.78%)</title><rect x="1042.5" y="229" width="9.2" height="15.0" fill="rgb(232,69,29)" rx="2" ry="2" />
<text  x="1045.50" y="239.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (2 samples, 1.56%)</title><rect x="710.6" y="405" width="18.5" height="15.0" fill="rgb(208,43,35)" rx="2" ry="2" />
<text  x="713.62" y="415.5" ></text>
</g>
<g >
<title>_perf_event_enable (64 samples, 50.00%)</title><rect x="19.2" y="373" width="590.0" height="15.0" fill="rgb(227,127,15)" rx="2" ry="2" />
<text  x="22.22" y="383.5" >_perf_event_enable</text>
</g>
<g >
<title>NaClForkThreadContextSetup (28 samples, 21.88%)</title><rect x="738.3" y="293" width="258.1" height="15.0" fill="rgb(243,147,20)" rx="2" ry="2" />
<text  x="741.28" y="303.5" >NaClForkThreadContextSetup</text>
</g>
<g >
<title>NaClTextDyncodeCreate (1 samples, 0.78%)</title><rect x="729.1" y="453" width="9.2" height="15.0" fill="rgb(231,100,47)" rx="2" ry="2" />
<text  x="732.06" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.78%)</title><rect x="10.0" y="533" width="9.2" height="15.0" fill="rgb(230,67,39)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>record__pushfn (1 samples, 0.78%)</title><rect x="609.2" y="469" width="9.2" height="15.0" fill="rgb(247,37,10)" rx="2" ry="2" />
<text  x="612.22" y="479.5" ></text>
</g>
<g >
<title>__GI___execve (1 samples, 0.78%)</title><rect x="10.0" y="565" width="9.2" height="15.0" fill="rgb(222,212,1)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.78%)</title><rect x="950.3" y="69" width="9.2" height="15.0" fill="rgb(224,129,50)" rx="2" ry="2" />
<text  x="953.31" y="79.5" ></text>
</g>
<g >
<title>do_page_fault (7 samples, 5.47%)</title><rect x="913.4" y="197" width="64.6" height="15.0" fill="rgb(216,142,36)" rx="2" ry="2" />
<text  x="916.44" y="207.5" >do_page..</text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.78%)</title><rect x="618.4" y="581" width="9.3" height="15.0" fill="rgb(219,172,54)" rx="2" ry="2" />
<text  x="621.44" y="591.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.78%)</title><rect x="729.1" y="405" width="9.2" height="15.0" fill="rgb(244,47,17)" rx="2" ry="2" />
<text  x="732.06" y="415.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (1 samples, 0.78%)</title><rect x="729.1" y="485" width="9.2" height="15.0" fill="rgb(237,187,5)" rx="2" ry="2" />
<text  x="732.06" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.78%)</title><rect x="10.0" y="581" width="9.2" height="15.0" fill="rgb(233,197,23)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (4 samples, 3.12%)</title><rect x="1153.1" y="437" width="36.9" height="15.0" fill="rgb(226,172,6)" rx="2" ry="2" />
<text  x="1156.12" y="447.5" >cpu..</text>
</g>
<g >
<title>do_vfs_ioctl (64 samples, 50.00%)</title><rect x="19.2" y="421" width="590.0" height="15.0" fill="rgb(240,197,43)" rx="2" ry="2" />
<text  x="22.22" y="431.5" >do_vfs_ioctl</text>
</g>
<g >
<title>[perf-1621.map] (3 samples, 2.34%)</title><rect x="701.4" y="517" width="27.7" height="15.0" fill="rgb(205,142,20)" rx="2" ry="2" />
<text  x="704.41" y="527.5" >[..</text>
</g>
<g >
<title>ep_item_poll.isra.12 (1 samples, 0.78%)</title><rect x="1033.3" y="197" width="9.2" height="15.0" fill="rgb(243,59,29)" rx="2" ry="2" />
<text  x="1036.28" y="207.5" ></text>
</g>
<g >
<title>call_cpuidle (4 samples, 3.12%)</title><rect x="1153.1" y="469" width="36.9" height="15.0" fill="rgb(207,42,10)" rx="2" ry="2" />
<text  x="1156.12" y="479.5" >cal..</text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.78%)</title><rect x="1042.5" y="261" width="9.2" height="15.0" fill="rgb(246,157,13)" rx="2" ry="2" />
<text  x="1045.50" y="271.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.78%)</title><rect x="885.8" y="197" width="9.2" height="15.0" fill="rgb(241,57,29)" rx="2" ry="2" />
<text  x="888.78" y="207.5" ></text>
</g>
<g >
<title>NaClPatchAddr (6 samples, 4.69%)</title><rect x="738.3" y="213" width="55.3" height="15.0" fill="rgb(239,121,41)" rx="2" ry="2" />
<text  x="741.28" y="223.5" >NaClP..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.78%)</title><rect x="1033.3" y="293" width="9.2" height="15.0" fill="rgb(206,156,33)" rx="2" ry="2" />
<text  x="1036.28" y="303.5" ></text>
</g>
<g >
<title>nmi_restore (15 samples, 11.72%)</title><rect x="470.9" y="197" width="138.3" height="15.0" fill="rgb(243,201,51)" rx="2" ry="2" />
<text  x="473.94" y="207.5" >nmi_restore</text>
</g>
<g >
<title>NaClCreateThread (28 samples, 21.88%)</title><rect x="738.3" y="325" width="258.1" height="15.0" fill="rgb(238,156,33)" rx="2" ry="2" />
<text  x="741.28" y="335.5" >NaClCreateThread</text>
</g>
<g >
<title>[unknown]  (28 samples, 21.88%)</title><rect x="738.3" y="517" width="258.1" height="15.0" fill="rgb(242,81,33)" rx="2" ry="2" />
<text  x="741.28" y="527.5" >[unknown] </text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.78%)</title><rect x="618.4" y="469" width="9.3" height="15.0" fill="rgb(219,114,21)" rx="2" ry="2" />
<text  x="621.44" y="479.5" ></text>
</g>
<g >
<title>sys_execve (1 samples, 0.78%)</title><rect x="10.0" y="517" width="9.2" height="15.0" fill="rgb(209,179,14)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>intel_idle (10 samples, 7.81%)</title><rect x="1051.7" y="469" width="92.2" height="15.0" fill="rgb(229,86,39)" rx="2" ry="2" />
<text  x="1054.72" y="479.5" >intel_idle</text>
</g>
<g >
<title>[unknown]  (28 samples, 21.88%)</title><rect x="738.3" y="421" width="258.1" height="15.0" fill="rgb(227,46,44)" rx="2" ry="2" />
<text  x="741.28" y="431.5" >[unknown] </text>
</g>
<g >
<title>NaClAppThreadSpawn (28 samples, 21.88%)</title><rect x="738.3" y="309" width="258.1" height="15.0" fill="rgb(211,180,27)" rx="2" ry="2" />
<text  x="741.28" y="319.5" >NaClAppThreadSpawn</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.78%)</title><rect x="1042.5" y="357" width="9.2" height="15.0" fill="rgb(216,65,52)" rx="2" ry="2" />
<text  x="1045.50" y="367.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (3 samples, 2.34%)</title><rect x="701.4" y="453" width="27.7" height="15.0" fill="rgb(211,158,13)" rx="2" ry="2" />
<text  x="704.41" y="463.5" >N..</text>
</g>
<g >
<title>[unknown] (3 samples, 2.34%)</title><rect x="1024.1" y="437" width="27.6" height="15.0" fill="rgb(216,125,27)" rx="2" ry="2" />
<text  x="1027.06" y="447.5" >[..</text>
</g>
<g >
<title>[unknown]  (28 samples, 21.88%)</title><rect x="738.3" y="453" width="258.1" height="15.0" fill="rgb(228,54,47)" rx="2" ry="2" />
<text  x="741.28" y="463.5" >[unknown] </text>
</g>
<g >
<title>[unknown] (65 samples, 50.78%)</title><rect x="19.2" y="581" width="599.2" height="15.0" fill="rgb(224,94,49)" rx="2" ry="2" />
<text  x="22.22" y="591.5" >[unknown]</text>
</g>
<g >
<title>[sel_ldr] (3 samples, 2.34%)</title><rect x="701.4" y="501" width="27.7" height="15.0" fill="rgb(210,29,50)" rx="2" ry="2" />
<text  x="704.41" y="511.5" >[..</text>
</g>
<g >
<title>cpuidle_enter (4 samples, 3.12%)</title><rect x="1153.1" y="453" width="36.9" height="15.0" fill="rgb(230,163,12)" rx="2" ry="2" />
<text  x="1156.12" y="463.5" >cpu..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.78%)</title><rect x="1033.3" y="341" width="9.2" height="15.0" fill="rgb(218,12,33)" rx="2" ry="2" />
<text  x="1036.28" y="351.5" ></text>
</g>
<g >
<title>[unknown] (35 samples, 27.34%)</title><rect x="683.0" y="565" width="322.6" height="15.0" fill="rgb(218,196,23)" rx="2" ry="2" />
<text  x="685.97" y="575.5" >[unknown]</text>
</g>
<g >
<title>__GI___ioctl (64 samples, 50.00%)</title><rect x="19.2" y="485" width="590.0" height="15.0" fill="rgb(252,41,14)" rx="2" ry="2" />
<text  x="22.22" y="495.5" >__GI___ioctl</text>
</g>
<g >
<title>[unknown] (3 samples, 2.34%)</title><rect x="1024.1" y="373" width="27.6" height="15.0" fill="rgb(229,8,14)" rx="2" ry="2" />
<text  x="1027.06" y="383.5" >[..</text>
</g>
<g >
<title>[unknown] (4 samples, 3.12%)</title><rect x="1014.8" y="581" width="36.9" height="15.0" fill="rgb(248,77,36)" rx="2" ry="2" />
<text  x="1017.84" y="591.5" >[un..</text>
</g>
<g >
<title>NaClSysFork (28 samples, 21.88%)</title><rect x="738.3" y="341" width="258.1" height="15.0" fill="rgb(254,45,4)" rx="2" ry="2" />
<text  x="741.28" y="351.5" >NaClSysFork</text>
</g>
<g >
<title>NaClSyscallCSegHook (1 samples, 0.78%)</title><rect x="729.1" y="501" width="9.2" height="15.0" fill="rgb(222,169,32)" rx="2" ry="2" />
<text  x="732.06" y="511.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (10 samples, 7.81%)</title><rect x="1051.7" y="485" width="92.2" height="15.0" fill="rgb(224,69,48)" rx="2" ry="2" />
<text  x="1054.72" y="495.5" >cpuidle_ent..</text>
</g>
<g >
<title>[unknown]  (28 samples, 21.88%)</title><rect x="738.3" y="501" width="258.1" height="15.0" fill="rgb(209,21,6)" rx="2" ry="2" />
<text  x="741.28" y="511.5" >[unknown] </text>
</g>
<g >
<title>NaClSysDyncodeCreate (1 samples, 0.78%)</title><rect x="729.1" y="469" width="9.2" height="15.0" fill="rgb(245,221,17)" rx="2" ry="2" />
<text  x="732.06" y="479.5" ></text>
</g>
<g >
<title>run_builtin (65 samples, 50.78%)</title><rect x="19.2" y="533" width="599.2" height="15.0" fill="rgb(227,203,54)" rx="2" ry="2" />
<text  x="22.22" y="543.5" >run_builtin</text>
</g>
<g >
<title>PyFrame_New (2 samples, 1.56%)</title><rect x="655.3" y="565" width="18.5" height="15.0" fill="rgb(237,99,32)" rx="2" ry="2" />
<text  x="658.31" y="575.5" ></text>
</g>
<g >
<title>[unknown]  (28 samples, 21.88%)</title><rect x="738.3" y="533" width="258.1" height="15.0" fill="rgb(216,174,50)" rx="2" ry="2" />
<text  x="741.28" y="543.5" >[unknown] </text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (20 samples, 15.62%)</title><rect x="793.6" y="229" width="184.4" height="15.0" fill="rgb(213,188,26)" rx="2" ry="2" />
<text  x="796.59" y="239.5" >__memmove_avx_unaligned_..</text>
</g>
<g >
<title>event_function_call (64 samples, 50.00%)</title><rect x="19.2" y="357" width="590.0" height="15.0" fill="rgb(207,197,48)" rx="2" ry="2" />
<text  x="22.22" y="367.5" >event_function_call</text>
</g>
<g >
<title>do_idle (11 samples, 8.59%)</title><rect x="1051.7" y="533" width="101.4" height="15.0" fill="rgb(230,20,2)" rx="2" ry="2" />
<text  x="1054.72" y="543.5" >do_idle</text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 1.56%)</title><rect x="710.6" y="389" width="18.5" height="15.0" fill="rgb(246,43,38)" rx="2" ry="2" />
<text  x="713.62" y="399.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.78%)</title><rect x="885.8" y="213" width="9.2" height="15.0" fill="rgb(209,209,46)" rx="2" ry="2" />
<text  x="888.78" y="223.5" ></text>
</g>
<g >
<title>shmem_fault (5 samples, 3.91%)</title><rect x="922.7" y="117" width="46.1" height="15.0" fill="rgb(216,135,45)" rx="2" ry="2" />
<text  x="925.66" y="127.5" >shme..</text>
</g>
<g >
<title>[unknown] (2 samples, 1.56%)</title><rect x="1024.1" y="357" width="18.4" height="15.0" fill="rgb(240,138,35)" rx="2" ry="2" />
<text  x="1027.06" y="367.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (28 samples, 21.88%)</title><rect x="738.3" y="373" width="258.1" height="15.0" fill="rgb(243,46,1)" rx="2" ry="2" />
<text  x="741.28" y="383.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>main (1 samples, 0.78%)</title><rect x="618.4" y="565" width="9.3" height="15.0" fill="rgb(213,150,54)" rx="2" ry="2" />
<text  x="621.44" y="575.5" ></text>
</g>
<g >
<title>cpuidle_enter (10 samples, 7.81%)</title><rect x="1051.7" y="501" width="92.2" height="15.0" fill="rgb(226,116,41)" rx="2" ry="2" />
<text  x="1054.72" y="511.5" >cpuidle_enter</text>
</g>
<g >
<title>sys_execve (1 samples, 0.78%)</title><rect x="618.4" y="453" width="9.3" height="15.0" fill="rgb(228,13,45)" rx="2" ry="2" />
<text  x="621.44" y="463.5" ></text>
</g>
<g >
<title>event_function (64 samples, 50.00%)</title><rect x="19.2" y="293" width="590.0" height="15.0" fill="rgb(244,70,50)" rx="2" ry="2" />
<text  x="22.22" y="303.5" >event_function</text>
</g>
<g >
<title>[unknown] (3 samples, 2.34%)</title><rect x="1024.1" y="421" width="27.6" height="15.0" fill="rgb(240,164,38)" rx="2" ry="2" />
<text  x="1027.06" y="431.5" >[..</text>
</g>
<g >
<title>[unknown] (3 samples, 2.34%)</title><rect x="1024.1" y="453" width="27.6" height="15.0" fill="rgb(228,123,8)" rx="2" ry="2" />
<text  x="1027.06" y="463.5" >[..</text>
</g>
<g >
<title>__do_page_fault (7 samples, 5.47%)</title><rect x="913.4" y="181" width="64.6" height="15.0" fill="rgb(223,112,6)" rx="2" ry="2" />
<text  x="916.44" y="191.5" >__do_pa..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.78%)</title><rect x="1033.3" y="277" width="9.2" height="15.0" fill="rgb(246,193,8)" rx="2" ry="2" />
<text  x="1036.28" y="287.5" ></text>
</g>
<g >
<title>[perf-1621.map] (4 samples, 3.12%)</title><rect x="701.4" y="533" width="36.9" height="15.0" fill="rgb(213,44,25)" rx="2" ry="2" />
<text  x="704.41" y="543.5" >[pe..</text>
</g>
<g >
<title>native_irq_return_iret (2 samples, 1.56%)</title><rect x="895.0" y="213" width="18.4" height="15.0" fill="rgb(212,52,37)" rx="2" ry="2" />
<text  x="898.00" y="223.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (28 samples, 21.88%)</title><rect x="738.3" y="277" width="258.1" height="15.0" fill="rgb(234,59,17)" rx="2" ry="2" />
<text  x="741.28" y="287.5" >NaClCopyExecutionContext</text>
</g>
<g >
<title>[sel_ldr] (1 samples, 0.78%)</title><rect x="729.1" y="517" width="9.2" height="15.0" fill="rgb(237,16,32)" rx="2" ry="2" />
<text  x="732.06" y="527.5" ></text>
</g>
<g >
<title>__libc_start_main (65 samples, 50.78%)</title><rect x="19.2" y="565" width="599.2" height="15.0" fill="rgb(241,119,54)" rx="2" ry="2" />
<text  x="22.22" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>shmem_add_to_page_cache (1 samples, 0.78%)</title><rect x="959.5" y="85" width="9.3" height="15.0" fill="rgb(233,22,45)" rx="2" ry="2" />
<text  x="962.53" y="95.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (28 samples, 21.88%)</title><rect x="738.3" y="357" width="258.1" height="15.0" fill="rgb(218,169,8)" rx="2" ry="2" />
<text  x="741.28" y="367.5" >NaClSysForkDecoder</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.78%)</title><rect x="627.7" y="581" width="9.2" height="15.0" fill="rgb(206,140,10)" rx="2" ry="2" />
<text  x="630.66" y="591.5" ></text>
</g>
<g >
<title>perf_evlist__prepare_workload (1 samples, 0.78%)</title><rect x="618.4" y="517" width="9.3" height="15.0" fill="rgb(207,8,46)" rx="2" ry="2" />
<text  x="621.44" y="527.5" ></text>
</g>
<g >
<title>start_kernel (4 samples, 3.12%)</title><rect x="1153.1" y="533" width="36.9" height="15.0" fill="rgb(229,162,2)" rx="2" ry="2" />
<text  x="1156.12" y="543.5" >sta..</text>
</g>
<g >
<title>PyString_FromStringAndSize (1 samples, 0.78%)</title><rect x="673.8" y="565" width="9.2" height="15.0" fill="rgb(206,203,2)" rx="2" ry="2" />
<text  x="676.75" y="575.5" ></text>
</g>
<g >
<title>tuplesubscript.lto_priv.0 (1 samples, 0.78%)</title><rect x="996.4" y="549" width="9.2" height="15.0" fill="rgb(210,228,36)" rx="2" ry="2" />
<text  x="999.41" y="559.5" ></text>
</g>
<g >
<title>[unknown]  (28 samples, 21.88%)</title><rect x="738.3" y="405" width="258.1" height="15.0" fill="rgb(236,227,52)" rx="2" ry="2" />
<text  x="741.28" y="415.5" >[unknown] </text>
</g>
<g >
<title>[unknown] (1 samples, 0.78%)</title><rect x="1033.3" y="325" width="9.2" height="15.0" fill="rgb(214,23,53)" rx="2" ry="2" />
<text  x="1036.28" y="335.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 2.34%)</title><rect x="1024.1" y="469" width="27.6" height="15.0" fill="rgb(207,62,2)" rx="2" ry="2" />
<text  x="1027.06" y="479.5" >[..</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (64 samples, 50.00%)</title><rect x="19.2" y="213" width="590.0" height="15.0" fill="rgb(246,178,17)" rx="2" ry="2" />
<text  x="22.22" y="223.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>ctx_resched (64 samples, 50.00%)</title><rect x="19.2" y="261" width="590.0" height="15.0" fill="rgb(217,64,46)" rx="2" ry="2" />
<text  x="22.22" y="271.5" >ctx_resched</text>
</g>
<g >
<title>sys_epoll_pwait (1 samples, 0.78%)</title><rect x="1033.3" y="261" width="9.2" height="15.0" fill="rgb(229,122,4)" rx="2" ry="2" />
<text  x="1036.28" y="271.5" ></text>
</g>
<g >
<title>CopyBundleTails (1 samples, 0.78%)</title><rect x="701.4" y="405" width="9.2" height="15.0" fill="rgb(212,152,43)" rx="2" ry="2" />
<text  x="704.41" y="415.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (3 samples, 2.34%)</title><rect x="701.4" y="485" width="27.7" height="15.0" fill="rgb(225,89,26)" rx="2" ry="2" />
<text  x="704.41" y="495.5" >N..</text>
</g>
<g >
<title>native_write_msr (48 samples, 37.50%)</title><rect x="28.4" y="197" width="442.5" height="15.0" fill="rgb(213,49,35)" rx="2" ry="2" />
<text  x="31.44" y="207.5" >native_write_msr</text>
</g>
</g>
</svg>
