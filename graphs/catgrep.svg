<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>cpuidle_enter_state (1 samples, 0.83%)</title><rect x="1180.2" y="421" width="9.8" height="15.0" fill="rgb(228,9,0)" rx="2" ry="2" />
<text  x="1183.25" y="431.5" ></text>
</g>
<g >
<title>shmem_fault (2 samples, 1.65%)</title><rect x="829.2" y="101" width="19.5" height="15.0" fill="rgb(252,158,2)" rx="2" ry="2" />
<text  x="832.17" y="111.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.83%)</title><rect x="995.0" y="405" width="9.7" height="15.0" fill="rgb(210,135,3)" rx="2" ry="2" />
<text  x="997.96" y="415.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (2 samples, 1.65%)</title><rect x="829.2" y="85" width="19.5" height="15.0" fill="rgb(252,129,7)" rx="2" ry="2" />
<text  x="832.17" y="95.5" ></text>
</g>
<g >
<title>start_kernel (1 samples, 0.83%)</title><rect x="1180.2" y="517" width="9.8" height="15.0" fill="rgb(239,155,37)" rx="2" ry="2" />
<text  x="1183.25" y="527.5" ></text>
</g>
<g >
<title>__do_page_fault (12 samples, 9.92%)</title><rect x="829.2" y="165" width="117.0" height="15.0" fill="rgb(249,225,3)" rx="2" ry="2" />
<text  x="832.17" y="175.5" >__do_page_fault</text>
</g>
<g >
<title>NaClCreateThread (27 samples, 22.31%)</title><rect x="692.6" y="309" width="263.4" height="15.0" fill="rgb(214,19,52)" rx="2" ry="2" />
<text  x="695.64" y="319.5" >NaClCreateThread</text>
</g>
<g >
<title>[unknown] (33 samples, 27.27%)</title><rect x="673.1" y="565" width="321.9" height="15.0" fill="rgb(241,101,23)" rx="2" ry="2" />
<text  x="676.14" y="575.5" >[unknown]</text>
</g>
<g >
<title>perf_event_for_each_child (63 samples, 52.07%)</title><rect x="39.3" y="373" width="614.3" height="15.0" fill="rgb(213,58,45)" rx="2" ry="2" />
<text  x="42.26" y="383.5" >perf_event_for_each_child</text>
</g>
<g >
<title>[unknown]  (27 samples, 22.31%)</title><rect x="692.6" y="389" width="263.4" height="15.0" fill="rgb(223,59,36)" rx="2" ry="2" />
<text  x="695.64" y="399.5" >[unknown] </text>
</g>
<g >
<title>__handle_mm_fault (12 samples, 9.92%)</title><rect x="829.2" y="133" width="117.0" height="15.0" fill="rgb(246,187,19)" rx="2" ry="2" />
<text  x="832.17" y="143.5" >__handle_mm_fa..</text>
</g>
<g >
<title>[unknown]  (27 samples, 22.31%)</title><rect x="692.6" y="485" width="263.4" height="15.0" fill="rgb(216,97,53)" rx="2" ry="2" />
<text  x="695.64" y="495.5" >[unknown] </text>
</g>
<g >
<title>call_cpuidle (1 samples, 0.83%)</title><rect x="1180.2" y="453" width="9.8" height="15.0" fill="rgb(211,122,37)" rx="2" ry="2" />
<text  x="1183.25" y="463.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.83%)</title><rect x="995.0" y="469" width="9.7" height="15.0" fill="rgb(250,146,38)" rx="2" ry="2" />
<text  x="997.96" y="479.5" ></text>
</g>
<g >
<title>swapper (18 samples, 14.88%)</title><rect x="1014.5" y="581" width="175.5" height="15.0" fill="rgb(251,79,9)" rx="2" ry="2" />
<text  x="1017.46" y="591.5" >swapper</text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.83%)</title><rect x="10.0" y="501" width="9.8" height="15.0" fill="rgb(216,5,47)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>do_page_fault (12 samples, 9.92%)</title><rect x="829.2" y="181" width="117.0" height="15.0" fill="rgb(238,226,5)" rx="2" ry="2" />
<text  x="832.17" y="191.5" >do_page_fault</text>
</g>
<g >
<title>page_fault (1 samples, 0.83%)</title><rect x="1004.7" y="517" width="9.8" height="15.0" fill="rgb(251,206,28)" rx="2" ry="2" />
<text  x="1007.71" y="527.5" ></text>
</g>
<g >
<title>NaClPatchAddr (7 samples, 5.79%)</title><rect x="692.6" y="197" width="68.3" height="15.0" fill="rgb(251,209,49)" rx="2" ry="2" />
<text  x="695.64" y="207.5" >NaClPat..</text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.83%)</title><rect x="936.4" y="101" width="9.8" height="15.0" fill="rgb(240,29,0)" rx="2" ry="2" />
<text  x="939.45" y="111.5" ></text>
</g>
<g >
<title>handle_mm_fault (12 samples, 9.92%)</title><rect x="829.2" y="149" width="117.0" height="15.0" fill="rgb(237,229,49)" rx="2" ry="2" />
<text  x="832.17" y="159.5" >handle_mm_fault</text>
</g>
<g >
<title>filemap_map_pages (6 samples, 4.96%)</title><rect x="877.9" y="117" width="58.5" height="15.0" fill="rgb(207,192,13)" rx="2" ry="2" />
<text  x="880.93" y="127.5" >filema..</text>
</g>
<g >
<title>__libc_fork (1 samples, 0.83%)</title><rect x="1004.7" y="565" width="9.8" height="15.0" fill="rgb(226,108,16)" rx="2" ry="2" />
<text  x="1007.71" y="575.5" ></text>
</g>
<g >
<title>run_builtin (63 samples, 52.07%)</title><rect x="39.3" y="517" width="614.3" height="15.0" fill="rgb(243,96,8)" rx="2" ry="2" />
<text  x="42.26" y="527.5" >run_builtin</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.83%)</title><rect x="995.0" y="421" width="9.7" height="15.0" fill="rgb(220,142,21)" rx="2" ry="2" />
<text  x="997.96" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.83%)</title><rect x="995.0" y="533" width="9.7" height="15.0" fill="rgb(235,163,4)" rx="2" ry="2" />
<text  x="997.96" y="543.5" ></text>
</g>
<g >
<title>policy_node (1 samples, 0.83%)</title><rect x="838.9" y="37" width="9.8" height="15.0" fill="rgb(236,213,46)" rx="2" ry="2" />
<text  x="841.93" y="47.5" ></text>
</g>
<g >
<title>page_add_file_rmap (1 samples, 0.83%)</title><rect x="10.0" y="437" width="9.8" height="15.0" fill="rgb(239,73,44)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>[unknown]  (27 samples, 22.31%)</title><rect x="692.6" y="453" width="263.4" height="15.0" fill="rgb(229,138,33)" rx="2" ry="2" />
<text  x="695.64" y="463.5" >[unknown] </text>
</g>
<g >
<title>do_wp_page (1 samples, 0.83%)</title><rect x="1004.7" y="437" width="9.8" height="15.0" fill="rgb(216,226,42)" rx="2" ry="2" />
<text  x="1007.71" y="447.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.83%)</title><rect x="10.0" y="533" width="9.8" height="15.0" fill="rgb(207,11,42)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (27 samples, 22.31%)</title><rect x="692.6" y="357" width="263.4" height="15.0" fill="rgb(213,201,49)" rx="2" ry="2" />
<text  x="695.64" y="367.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>tuplesubscript.lto_priv.0 (1 samples, 0.83%)</title><rect x="965.7" y="533" width="9.8" height="15.0" fill="rgb(217,146,8)" rx="2" ry="2" />
<text  x="968.70" y="543.5" ></text>
</g>
<g >
<title>PyObject_GetItem (1 samples, 0.83%)</title><rect x="682.9" y="549" width="9.7" height="15.0" fill="rgb(230,179,8)" rx="2" ry="2" />
<text  x="685.89" y="559.5" ></text>
</g>
<g >
<title>NaClVmCopyEntry (7 samples, 5.79%)</title><rect x="692.6" y="213" width="68.3" height="15.0" fill="rgb(250,66,28)" rx="2" ry="2" />
<text  x="695.64" y="223.5" >NaClVmC..</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.83%)</title><rect x="1004.7" y="389" width="9.8" height="15.0" fill="rgb(238,110,9)" rx="2" ry="2" />
<text  x="1007.71" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter (15 samples, 12.40%)</title><rect x="1034.0" y="485" width="146.2" height="15.0" fill="rgb(228,120,12)" rx="2" ry="2" />
<text  x="1036.97" y="495.5" >cpuidle_enter</text>
</g>
<g >
<title>cpuidle_enter_state (15 samples, 12.40%)</title><rect x="1034.0" y="469" width="146.2" height="15.0" fill="rgb(218,118,27)" rx="2" ry="2" />
<text  x="1036.97" y="479.5" >cpuidle_enter_state</text>
</g>
<g >
<title>_perf_event_enable (63 samples, 52.07%)</title><rect x="39.3" y="357" width="614.3" height="15.0" fill="rgb(231,209,16)" rx="2" ry="2" />
<text  x="42.26" y="367.5" >_perf_event_enable</text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.65%)</title><rect x="653.6" y="565" width="19.5" height="15.0" fill="rgb(227,21,21)" rx="2" ry="2" />
<text  x="656.64" y="575.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.83%)</title><rect x="10.0" y="485" width="9.8" height="15.0" fill="rgb(209,195,29)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.83%)</title><rect x="10.0" y="453" width="9.8" height="15.0" fill="rgb(236,47,26)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>__do_fault (2 samples, 1.65%)</title><rect x="829.2" y="117" width="19.5" height="15.0" fill="rgb(206,210,15)" rx="2" ry="2" />
<text  x="832.17" y="127.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (27 samples, 22.31%)</title><rect x="692.6" y="261" width="263.4" height="15.0" fill="rgb(207,136,5)" rx="2" ry="2" />
<text  x="695.64" y="271.5" >NaClCopyExecutionContext</text>
</g>
<g >
<title>native_write_msr (47 samples, 38.84%)</title><rect x="49.0" y="181" width="458.4" height="15.0" fill="rgb(208,151,16)" rx="2" ry="2" />
<text  x="52.01" y="191.5" >native_write_msr</text>
</g>
<g >
<title>NaClSysForkDecoder (27 samples, 22.31%)</title><rect x="692.6" y="341" width="263.4" height="15.0" fill="rgb(205,82,16)" rx="2" ry="2" />
<text  x="695.64" y="351.5" >NaClSysForkDecoder</text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.83%)</title><rect x="1004.7" y="453" width="9.8" height="15.0" fill="rgb(220,19,41)" rx="2" ry="2" />
<text  x="1007.71" y="463.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.83%)</title><rect x="926.7" y="101" width="9.7" height="15.0" fill="rgb(225,213,25)" rx="2" ry="2" />
<text  x="929.69" y="111.5" ></text>
</g>
<g >
<title>generic_exec_single (63 samples, 52.07%)</title><rect x="39.3" y="309" width="614.3" height="15.0" fill="rgb(239,175,9)" rx="2" ry="2" />
<text  x="42.26" y="319.5" >generic_exec_single</text>
</g>
<g >
<title>do_syscall_64 (63 samples, 52.07%)</title><rect x="39.3" y="437" width="614.3" height="15.0" fill="rgb(222,38,37)" rx="2" ry="2" />
<text  x="42.26" y="447.5" >do_syscall_64</text>
</g>
<g >
<title>x86_64_start_kernel (1 samples, 0.83%)</title><rect x="1180.2" y="549" width="9.8" height="15.0" fill="rgb(223,126,23)" rx="2" ry="2" />
<text  x="1183.25" y="559.5" ></text>
</g>
<g >
<title>type_call.lto_priv.0 (1 samples, 0.83%)</title><rect x="985.2" y="549" width="9.8" height="15.0" fill="rgb(250,74,29)" rx="2" ry="2" />
<text  x="988.21" y="559.5" ></text>
</g>
<g >
<title>__GI___ioctl (63 samples, 52.07%)</title><rect x="39.3" y="469" width="614.3" height="15.0" fill="rgb(245,103,39)" rx="2" ry="2" />
<text  x="42.26" y="479.5" >__GI___ioctl</text>
</g>
<g >
<title>cpu_startup_entry (15 samples, 12.40%)</title><rect x="1034.0" y="533" width="146.2" height="15.0" fill="rgb(205,102,4)" rx="2" ry="2" />
<text  x="1036.97" y="543.5" >cpu_startup_entry</text>
</g>
<g >
<title>do_futex (1 samples, 0.83%)</title><rect x="995.0" y="501" width="9.7" height="15.0" fill="rgb(234,217,2)" rx="2" ry="2" />
<text  x="997.96" y="511.5" ></text>
</g>
<g >
<title>call_cpuidle (15 samples, 12.40%)</title><rect x="1034.0" y="501" width="146.2" height="15.0" fill="rgb(251,100,26)" rx="2" ry="2" />
<text  x="1036.97" y="511.5" >call_cpuidle</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (63 samples, 52.07%)</title><rect x="39.3" y="197" width="614.3" height="15.0" fill="rgb(230,182,22)" rx="2" ry="2" />
<text  x="42.26" y="207.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>native_write_msr (1 samples, 0.83%)</title><rect x="1024.2" y="565" width="9.8" height="15.0" fill="rgb(251,179,50)" rx="2" ry="2" />
<text  x="1027.21" y="575.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.83%)</title><rect x="1004.7" y="549" width="9.8" height="15.0" fill="rgb(248,141,35)" rx="2" ry="2" />
<text  x="1007.71" y="559.5" ></text>
</g>
<g >
<title>nmi_restore (15 samples, 12.40%)</title><rect x="507.4" y="181" width="146.2" height="15.0" fill="rgb(237,61,49)" rx="2" ry="2" />
<text  x="510.36" y="191.5" >nmi_restore</text>
</g>
<g >
<title>__perf_event_enable (63 samples, 52.07%)</title><rect x="39.3" y="261" width="614.3" height="15.0" fill="rgb(216,13,46)" rx="2" ry="2" />
<text  x="42.26" y="271.5" >__perf_event_enable</text>
</g>
<g >
<title>finish_fault (1 samples, 0.83%)</title><rect x="936.4" y="117" width="9.8" height="15.0" fill="rgb(248,219,27)" rx="2" ry="2" />
<text  x="939.45" y="127.5" ></text>
</g>
<g >
<title>__task_rq_lock (1 samples, 0.83%)</title><rect x="995.0" y="437" width="9.7" height="15.0" fill="rgb(226,32,10)" rx="2" ry="2" />
<text  x="997.96" y="447.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 2.48%)</title><rect x="848.7" y="101" width="29.2" height="15.0" fill="rgb(213,70,18)" rx="2" ry="2" />
<text  x="851.68" y="111.5" >__..</text>
</g>
<g >
<title>intel_idle (15 samples, 12.40%)</title><rect x="1034.0" y="453" width="146.2" height="15.0" fill="rgb(213,172,47)" rx="2" ry="2" />
<text  x="1036.97" y="463.5" >intel_idle</text>
</g>
<g >
<title>radix_tree_next_chunk (2 samples, 1.65%)</title><rect x="907.2" y="101" width="19.5" height="15.0" fill="rgb(214,113,26)" rx="2" ry="2" />
<text  x="910.19" y="111.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1 samples, 0.83%)</title><rect x="1180.2" y="533" width="9.8" height="15.0" fill="rgb(233,20,34)" rx="2" ry="2" />
<text  x="1183.25" y="543.5" ></text>
</g>
<g >
<title>tuplesubscript.lto_priv.0 (1 samples, 0.83%)</title><rect x="975.5" y="549" width="9.7" height="15.0" fill="rgb(236,202,49)" rx="2" ry="2" />
<text  x="978.45" y="559.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (19 samples, 15.70%)</title><rect x="760.9" y="213" width="185.3" height="15.0" fill="rgb(213,179,31)" rx="2" ry="2" />
<text  x="763.91" y="223.5" >__memmove_avx_unaligned_..</text>
</g>
<g >
<title>do_idle (1 samples, 0.83%)</title><rect x="1180.2" y="469" width="9.8" height="15.0" fill="rgb(228,146,52)" rx="2" ry="2" />
<text  x="1183.25" y="479.5" ></text>
</g>
<g >
<title>page_fault (12 samples, 9.92%)</title><rect x="829.2" y="197" width="117.0" height="15.0" fill="rgb(251,13,14)" rx="2" ry="2" />
<text  x="832.17" y="207.5" >page_fault</text>
</g>
<g >
<title>[unknown]  (27 samples, 22.31%)</title><rect x="692.6" y="469" width="263.4" height="15.0" fill="rgb(207,30,21)" rx="2" ry="2" />
<text  x="695.64" y="479.5" >[unknown] </text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (63 samples, 52.07%)</title><rect x="39.3" y="453" width="614.3" height="15.0" fill="rgb(222,225,49)" rx="2" ry="2" />
<text  x="42.26" y="463.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>perf (65 samples, 53.72%)</title><rect x="19.8" y="581" width="633.8" height="15.0" fill="rgb(248,141,52)" rx="2" ry="2" />
<text  x="22.75" y="591.5" >perf</text>
</g>
<g >
<title>[sel_ldr] (27 samples, 22.31%)</title><rect x="692.6" y="373" width="263.4" height="15.0" fill="rgb(220,6,17)" rx="2" ry="2" />
<text  x="695.64" y="383.5" >[sel_ldr]</text>
</g>
<g >
<title>__put_user_4 (1 samples, 0.83%)</title><rect x="1004.7" y="533" width="9.8" height="15.0" fill="rgb(209,170,16)" rx="2" ry="2" />
<text  x="1007.71" y="543.5" ></text>
</g>
<g >
<title>[unknown]  (27 samples, 22.31%)</title><rect x="692.6" y="517" width="263.4" height="15.0" fill="rgb(223,118,7)" rx="2" ry="2" />
<text  x="695.64" y="527.5" >[unknown] </text>
</g>
<g >
<title>secondary_startup_64 (16 samples, 13.22%)</title><rect x="1034.0" y="565" width="156.0" height="15.0" fill="rgb(209,141,38)" rx="2" ry="2" />
<text  x="1036.97" y="575.5" >secondary_startup_64</text>
</g>
<g >
<title>[unknown] (29 samples, 23.97%)</title><rect x="692.6" y="549" width="282.9" height="15.0" fill="rgb(249,93,6)" rx="2" ry="2" />
<text  x="695.64" y="559.5" >[unknown]</text>
</g>
<g >
<title>rest_init (1 samples, 0.83%)</title><rect x="1180.2" y="501" width="9.8" height="15.0" fill="rgb(209,196,17)" rx="2" ry="2" />
<text  x="1183.25" y="511.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.83%)</title><rect x="1004.7" y="469" width="9.8" height="15.0" fill="rgb(239,223,35)" rx="2" ry="2" />
<text  x="1007.71" y="479.5" ></text>
</g>
<g >
<title>main (63 samples, 52.07%)</title><rect x="39.3" y="533" width="614.3" height="15.0" fill="rgb(244,186,20)" rx="2" ry="2" />
<text  x="42.26" y="543.5" >main</text>
</g>
<g >
<title>cmd_record (63 samples, 52.07%)</title><rect x="39.3" y="501" width="614.3" height="15.0" fill="rgb(243,87,37)" rx="2" ry="2" />
<text  x="42.26" y="511.5" >cmd_record</text>
</g>
<g >
<title>dict_length.lto_priv.0 (1 samples, 0.83%)</title><rect x="956.0" y="533" width="9.7" height="15.0" fill="rgb(252,155,47)" rx="2" ry="2" />
<text  x="958.95" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.83%)</title><rect x="1014.5" y="565" width="9.7" height="15.0" fill="rgb(233,204,32)" rx="2" ry="2" />
<text  x="1017.46" y="575.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 52.07%)</title><rect x="39.3" y="245" width="614.3" height="15.0" fill="rgb(244,191,1)" rx="2" ry="2" />
<text  x="42.26" y="255.5" >ctx_resched</text>
</g>
<g >
<title>[unknown]  (27 samples, 22.31%)</title><rect x="692.6" y="437" width="263.4" height="15.0" fill="rgb(223,117,42)" rx="2" ry="2" />
<text  x="695.64" y="447.5" >[unknown] </text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.83%)</title><rect x="1180.2" y="437" width="9.8" height="15.0" fill="rgb(235,184,27)" rx="2" ry="2" />
<text  x="1183.25" y="447.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.83%)</title><rect x="1004.7" y="485" width="9.8" height="15.0" fill="rgb(250,119,50)" rx="2" ry="2" />
<text  x="1007.71" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.83%)</title><rect x="995.0" y="549" width="9.7" height="15.0" fill="rgb(254,67,14)" rx="2" ry="2" />
<text  x="997.96" y="559.5" ></text>
</g>
<g >
<title>smp_call_function_single (63 samples, 52.07%)</title><rect x="39.3" y="325" width="614.3" height="15.0" fill="rgb(240,191,40)" rx="2" ry="2" />
<text  x="42.26" y="335.5" >smp_call_function_single</text>
</g>
<g >
<title>__libc_start_main (63 samples, 52.07%)</title><rect x="39.3" y="549" width="614.3" height="15.0" fill="rgb(207,2,34)" rx="2" ry="2" />
<text  x="42.26" y="559.5" >__libc_start_main</text>
</g>
<g >
<title>sh (1 samples, 0.83%)</title><rect x="1004.7" y="581" width="9.8" height="15.0" fill="rgb(239,17,46)" rx="2" ry="2" />
<text  x="1007.71" y="591.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.83%)</title><rect x="10.0" y="469" width="9.8" height="15.0" fill="rgb(225,141,20)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>event_function (63 samples, 52.07%)</title><rect x="39.3" y="277" width="614.3" height="15.0" fill="rgb(233,188,49)" rx="2" ry="2" />
<text  x="42.26" y="287.5" >event_function</text>
</g>
<g >
<title>event_function_call (63 samples, 52.07%)</title><rect x="39.3" y="341" width="614.3" height="15.0" fill="rgb(248,71,22)" rx="2" ry="2" />
<text  x="42.26" y="351.5" >event_function_call</text>
</g>
<g >
<title>NaClVmmapVisit (26 samples, 21.49%)</title><rect x="692.6" y="229" width="253.6" height="15.0" fill="rgb(224,59,15)" rx="2" ry="2" />
<text  x="695.64" y="239.5" >NaClVmmapVisit</text>
</g>
<g >
<title>do_vfs_ioctl (63 samples, 52.07%)</title><rect x="39.3" y="405" width="614.3" height="15.0" fill="rgb(242,223,37)" rx="2" ry="2" />
<text  x="42.26" y="415.5" >do_vfs_ioctl</text>
</g>
<g >
<title>[perf-415.map] (27 samples, 22.31%)</title><rect x="692.6" y="533" width="263.4" height="15.0" fill="rgb(231,96,3)" rx="2" ry="2" />
<text  x="695.64" y="543.5" >[perf-415.map]</text>
</g>
<g >
<title>wp_page_copy (1 samples, 0.83%)</title><rect x="1004.7" y="421" width="9.8" height="15.0" fill="rgb(232,148,0)" rx="2" ry="2" />
<text  x="1007.71" y="431.5" ></text>
</g>
<g >
<title>perf_ioctl (63 samples, 52.07%)</title><rect x="39.3" y="389" width="614.3" height="15.0" fill="rgb(230,117,30)" rx="2" ry="2" />
<text  x="42.26" y="399.5" >perf_ioctl</text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.83%)</title><rect x="838.9" y="53" width="9.8" height="15.0" fill="rgb(215,183,22)" rx="2" ry="2" />
<text  x="841.93" y="63.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.83%)</title><rect x="1004.7" y="501" width="9.8" height="15.0" fill="rgb(205,217,29)" rx="2" ry="2" />
<text  x="1007.71" y="511.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.83%)</title><rect x="995.0" y="485" width="9.7" height="15.0" fill="rgb(254,168,47)" rx="2" ry="2" />
<text  x="997.96" y="495.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 53.72%)</title><rect x="19.8" y="565" width="633.8" height="15.0" fill="rgb(216,88,22)" rx="2" ry="2" />
<text  x="22.75" y="575.5" >[unknown]</text>
</g>
<g >
<title>evlist__enable (63 samples, 52.07%)</title><rect x="39.3" y="485" width="614.3" height="15.0" fill="rgb(205,195,25)" rx="2" ry="2" />
<text  x="42.26" y="495.5" >evlist__enable</text>
</g>
<g >
<title>all (121 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(212,130,24)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>NaClAppThreadSpawn (27 samples, 22.31%)</title><rect x="692.6" y="293" width="263.4" height="15.0" fill="rgb(253,43,29)" rx="2" ry="2" />
<text  x="695.64" y="303.5" >NaClAppThreadSpawn</text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.83%)</title><rect x="838.9" y="69" width="9.8" height="15.0" fill="rgb(227,127,34)" rx="2" ry="2" />
<text  x="841.93" y="79.5" ></text>
</g>
<g >
<title>native_irq_return_iret (2 samples, 1.65%)</title><rect x="809.7" y="197" width="19.5" height="15.0" fill="rgb(212,42,54)" rx="2" ry="2" />
<text  x="812.67" y="207.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 2.48%)</title><rect x="848.7" y="117" width="29.2" height="15.0" fill="rgb(211,106,16)" rx="2" ry="2" />
<text  x="851.68" y="127.5" >al..</text>
</g>
<g >
<title>start_secondary (15 samples, 12.40%)</title><rect x="1034.0" y="549" width="146.2" height="15.0" fill="rgb(212,172,44)" rx="2" ry="2" />
<text  x="1036.97" y="559.5" >start_secondary</text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.83%)</title><rect x="1004.7" y="405" width="9.8" height="15.0" fill="rgb(245,63,23)" rx="2" ry="2" />
<text  x="1007.71" y="415.5" ></text>
</g>
<g >
<title>sel_ldr (36 samples, 29.75%)</title><rect x="653.6" y="581" width="351.1" height="15.0" fill="rgb(228,166,24)" rx="2" ry="2" />
<text  x="656.64" y="591.5" >sel_ldr</text>
</g>
<g >
<title>do_page_fault (1 samples, 0.83%)</title><rect x="10.0" y="517" width="9.8" height="15.0" fill="rgb(230,78,50)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>remote_function (63 samples, 52.07%)</title><rect x="39.3" y="293" width="614.3" height="15.0" fill="rgb(227,119,0)" rx="2" ry="2" />
<text  x="42.26" y="303.5" >remote_function</text>
</g>
<g >
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (1 samples, 0.83%)</title><rect x="995.0" y="565" width="9.7" height="15.0" fill="rgb(244,173,45)" rx="2" ry="2" />
<text  x="997.96" y="575.5" ></text>
</g>
<g >
<title>end_repeat_nmi (1 samples, 0.83%)</title><rect x="39.3" y="181" width="9.7" height="15.0" fill="rgb(208,127,38)" rx="2" ry="2" />
<text  x="42.26" y="191.5" ></text>
</g>
<g >
<title>[unknown]  (27 samples, 22.31%)</title><rect x="692.6" y="421" width="263.4" height="15.0" fill="rgb(236,92,11)" rx="2" ry="2" />
<text  x="695.64" y="431.5" >[unknown] </text>
</g>
<g >
<title>[unknown] (1 samples, 0.83%)</title><rect x="10.0" y="565" width="9.8" height="15.0" fill="rgb(219,148,51)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>NaClCopyDynamicText (26 samples, 21.49%)</title><rect x="692.6" y="245" width="253.6" height="15.0" fill="rgb(232,76,38)" rx="2" ry="2" />
<text  x="695.64" y="255.5" >NaClCopyDynamicText</text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 0.83%)</title><rect x="1180.2" y="485" width="9.8" height="15.0" fill="rgb(213,95,1)" rx="2" ry="2" />
<text  x="1183.25" y="495.5" ></text>
</g>
<g >
<title>intel_idle (1 samples, 0.83%)</title><rect x="1180.2" y="405" width="9.8" height="15.0" fill="rgb(241,69,11)" rx="2" ry="2" />
<text  x="1183.25" y="415.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 52.07%)</title><rect x="39.3" y="213" width="614.3" height="15.0" fill="rgb(228,57,0)" rx="2" ry="2" />
<text  x="42.26" y="223.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>NaClSysFork (27 samples, 22.31%)</title><rect x="692.6" y="325" width="263.4" height="15.0" fill="rgb(239,171,33)" rx="2" ry="2" />
<text  x="695.64" y="335.5" >NaClSysFork</text>
</g>
<g >
<title>sys_ioctl (63 samples, 52.07%)</title><rect x="39.3" y="421" width="614.3" height="15.0" fill="rgb(216,160,49)" rx="2" ry="2" />
<text  x="42.26" y="431.5" >sys_ioctl</text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 52.07%)</title><rect x="39.3" y="229" width="614.3" height="15.0" fill="rgb(226,75,7)" rx="2" ry="2" />
<text  x="42.26" y="239.5" >x86_pmu_enable</text>
</g>
<g >
<title>PyDict_GetItem (1 samples, 0.83%)</title><rect x="673.1" y="549" width="9.8" height="15.0" fill="rgb(240,188,43)" rx="2" ry="2" />
<text  x="676.14" y="559.5" ></text>
</g>
<g >
<title>NaClForkThreadContextSetup (27 samples, 22.31%)</title><rect x="692.6" y="277" width="263.4" height="15.0" fill="rgb(206,148,51)" rx="2" ry="2" />
<text  x="695.64" y="287.5" >NaClForkThreadContextSetup</text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.83%)</title><rect x="995.0" y="453" width="9.7" height="15.0" fill="rgb(252,160,19)" rx="2" ry="2" />
<text  x="997.96" y="463.5" ></text>
</g>
<g >
<title>do_idle (15 samples, 12.40%)</title><rect x="1034.0" y="517" width="146.2" height="15.0" fill="rgb(246,152,53)" rx="2" ry="2" />
<text  x="1036.97" y="527.5" >do_idle</text>
</g>
<g >
<title>lind (1 samples, 0.83%)</title><rect x="10.0" y="581" width="9.8" height="15.0" fill="rgb(212,124,45)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>NaClPatchAddr (1 samples, 0.83%)</title><rect x="946.2" y="245" width="9.8" height="15.0" fill="rgb(215,178,35)" rx="2" ry="2" />
<text  x="949.20" y="255.5" ></text>
</g>
<g >
<title>sh_closepipe (1 samples, 0.83%)</title><rect x="10.0" y="549" width="9.8" height="15.0" fill="rgb(233,145,24)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.83%)</title><rect x="995.0" y="517" width="9.7" height="15.0" fill="rgb(234,94,40)" rx="2" ry="2" />
<text  x="997.96" y="527.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 2.48%)</title><rect x="848.7" y="85" width="29.2" height="15.0" fill="rgb(212,39,40)" rx="2" ry="2" />
<text  x="851.68" y="95.5" >cl..</text>
</g>
<g >
<title>[unknown]  (27 samples, 22.31%)</title><rect x="692.6" y="501" width="263.4" height="15.0" fill="rgb(224,12,6)" rx="2" ry="2" />
<text  x="695.64" y="511.5" >[unknown] </text>
</g>
<g >
<title>[unknown]  (27 samples, 22.31%)</title><rect x="692.6" y="405" width="263.4" height="15.0" fill="rgb(254,134,13)" rx="2" ry="2" />
<text  x="695.64" y="415.5" >[unknown] </text>
</g>
</g>
</svg>
