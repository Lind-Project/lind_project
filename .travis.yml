language: c
cache: ccache
group: deprecated-2017Q4

matrix:
  include:
    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
      env:
        - MATRIX_EVAL="export PREFIX=~/.local CC=gcc-7 CXX=g++-7"
        - VIRTUALENVWRAPPER_PYTHON="/usr/bin/python2"
        - VIRTUALENVWRAPPER_VIRTUALENV="/usr/bin/virtualenv2"
        - LIND_PREFIX="$HOME"
        - LIND_BASE="$LIND_PREFIX/lind_project"
        - LIND_SRC="$LIND_BASE/lind"
        - LIND_MONITOR="$LIND_BASE/reference_monitor"
        - REPY_PATH="$LIND_SRC/repy"
        - NACL_SDK_ROOT="$REPY_PATH/sdk"
        - PYTHON="python2"
        - PNACLPYTHON="python2"
        - LD_LIBRARY_PATH="/lib/glibc"
        - PATH="$NACL_SDK_ROOT/toolchain/linux_x86_glibc/bin:$PATH"
        - PATH="$REPY_PATH/bin:$PATH"
        - PATH="$LIND_BASE:$PATH"
        - PATH="$HOME/.local/bin:$PATH"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
      env:
        - MATRIX_EVAL="export PREFIX=~/.local CC=gcc-6 CXX=g++-6"
        - VIRTUALENVWRAPPER_PYTHON="/usr/bin/python2"
        - VIRTUALENVWRAPPER_VIRTUALENV="/usr/bin/virtualenv2"
        - LIND_PREFIX="$HOME"
        - LIND_BASE="$LIND_PREFIX/lind_project"
        - LIND_SRC="$LIND_BASE/lind"
        - LIND_MONITOR="$LIND_BASE/reference_monitor"
        - REPY_PATH="$LIND_SRC/repy"
        - NACL_SDK_ROOT="$REPY_PATH/sdk"
        - PYTHON="python2"
        - PNACLPYTHON="python2"
        - LD_LIBRARY_PATH="/lib/glibc"
        - PATH="$NACL_SDK_ROOT/toolchain/linux_x86_glibc/bin:$PATH"
        - PATH="$REPY_PATH/bin:$PATH"
        - PATH="$LIND_BASE:$PATH"
        - PATH="$HOME/.local/bin:$PATH"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main"
          packages:
            - clang-5.0 lldb-5.0 lld-5.0
      env:
        - MATRIX_EVAL="export PREFIX=~/.local CC=clang-5.0 CXX=clang++-5.0"
        - VIRTUALENVWRAPPER_PYTHON="/usr/bin/python2"
        - VIRTUALENVWRAPPER_VIRTUALENV="/usr/bin/virtualenv2"
        - LIND_PREFIX="$HOME"
        - LIND_BASE="$LIND_PREFIX/lind_project"
        - LIND_SRC="$LIND_BASE/lind"
        - LIND_MONITOR="$LIND_BASE/reference_monitor"
        - REPY_PATH="$LIND_SRC/repy"
        - NACL_SDK_ROOT="$REPY_PATH/sdk"
        - PYTHON="python2"
        - PNACLPYTHON="python2"
        - LD_LIBRARY_PATH="/lib/glibc"
        - PATH="$NACL_SDK_ROOT/toolchain/linux_x86_glibc/bin:$PATH"
        - PATH="$REPY_PATH/bin:$PATH"
        - PATH="$LIND_BASE:$PATH"
        - PATH="$HOME/.local/bin:$PATH"

before_install:
  - eval "$MATRIX_EVAL"
  # - sudo apt-get install -qq --fix-missing
  - sudo apt-get install -qq --fix-missing elfutils libelf-dev libreadline-dev
  - sudo apt-get install -qq --fix-missing linux-headers-generic linux-libc-dev
  - sudo apt-get install -qq --fix-missing docker virtualenvwrapper npm help2man
  - printf '%s\n' 'prefix=${HOME}/.node_modules' >> "$HOME/.npmrc"
  - npm install -g yarn
  # generate the memfd.h header since one is missing on the Travis instance
  - sudo mkdir -p /usr/include/linux
  - printf "%s\n" \
            "/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */" \
            "#ifndef _LINUX_MEMFD_H" \
            "#define _LINUX_MEMFD_H" \
            "" \
            "#include <asm-generic/hugetlb_encode.h>" \
            "" \
            "/* flags for memfd_create(2) (unsigned int) */" \
            "#define MFD_CLOEXEC		0x0001U" \
            "#define MFD_ALLOW_SEALING	0x0002U" \
            "#define MFD_HUGETLB		0x0004U" \
            "" \
            "/*" \
            " * Huge page size encoding when MFD_HUGETLB is specified, and a huge page" \
            " * size other than the default is desired.  See hugetlb_encode.h." \
            " * All known huge page size encodings are provided here.  It is the" \
            " * responsibility of the application to know which sizes are supported on" \
            " * the running system.  See mmap(2) man page for details." \
            " */" \
            "#define MFD_HUGE_SHIFT	HUGETLB_FLAG_ENCODE_SHIFT" \
            "#define MFD_HUGE_MASK	HUGETLB_FLAG_ENCODE_MASK" \
            "" \
            "#define MFD_HUGE_64KB	HUGETLB_FLAG_ENCODE_64KB" \
            "#define MFD_HUGE_512KB	HUGETLB_FLAG_ENCODE_512KB" \
            "#define MFD_HUGE_1MB	HUGETLB_FLAG_ENCODE_1MB" \
            "#define MFD_HUGE_2MB	HUGETLB_FLAG_ENCODE_2MB" \
            "#define MFD_HUGE_8MB	HUGETLB_FLAG_ENCODE_8MB" \
            "#define MFD_HUGE_16MB	HUGETLB_FLAG_ENCODE_16MB" \
            "#define MFD_HUGE_256MB	HUGETLB_FLAG_ENCODE_256MB" \
            "#define MFD_HUGE_1GB	HUGETLB_FLAG_ENCODE_1GB" \
            "#define MFD_HUGE_2GB	HUGETLB_FLAG_ENCODE_2GB" \
            "#define MFD_HUGE_16GB	HUGETLB_FLAG_ENCODE_16GB" \
            "" \
            "#endif /* _LINUX_MEMFD_H */" \
        | sudo tee /usr/include/linux/memfd.h

script:
    - ln -Tsv "$PWD" "$LIND_BASE"
    - cd "$LIND_BASE"
    - cd "$LIND_BASE/docker/base/home/lind/build/make-3.82/src/make-3.82"
    - patch -p1 <../glob.patch
    - ./configure --prefix="$HOME/.local"
    - make install
    - cd "$LIND_BASE/docker/base/home/lind/build/texinfo-4.13/"
    - ./configure --prefix="$HOME/.local"
    - make install
    - ./mklind -e all
