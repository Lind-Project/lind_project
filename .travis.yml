language: c
cache: ccache
group: deprecated-2017Q4

matrix:
  include:
    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
      env:
        - MATRIX_EVAL="export PREFIX=~/.local CC=gcc-7 CXX=g++-7"
        - VIRTUALENVWRAPPER_PYTHON="/usr/bin/python2"
        - VIRTUALENVWRAPPER_VIRTUALENV="/usr/bin/virtualenv2"
        - LIND_PREFIX="$HOME"
        - LIND_BASE="$LIND_PREFIX/lind_project"
        - LIND_SRC="$LIND_BASE/lind"
        - LIND_MONITOR="$LIND_BASE/reference_monitor"
        - REPY_PATH="$LIND_SRC/repy"
        - NACL_SDK_ROOT="$REPY_PATH/sdk"
        - PYTHON="python2"
        - PNACLPYTHON="python2"
        - LD_LIBRARY_PATH="/lib/glibc"
        - PATH="$NACL_SDK_ROOT/toolchain/linux_x86_glibc/bin:$PATH"
        - PATH="$REPY_PATH/bin:$PATH"
        - PATH="$LIND_BASE:$PATH"
        - PATH="$HOME/.local/bin:$PATH"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
      env:
        - MATRIX_EVAL="export PREFIX=~/.local CC=gcc-6 CXX=g++-6"
        - VIRTUALENVWRAPPER_PYTHON="/usr/bin/python2"
        - VIRTUALENVWRAPPER_VIRTUALENV="/usr/bin/virtualenv2"
        - LIND_PREFIX="$HOME"
        - LIND_BASE="$LIND_PREFIX/lind_project"
        - LIND_SRC="$LIND_BASE/lind"
        - LIND_MONITOR="$LIND_BASE/reference_monitor"
        - REPY_PATH="$LIND_SRC/repy"
        - NACL_SDK_ROOT="$REPY_PATH/sdk"
        - PYTHON="python2"
        - PNACLPYTHON="python2"
        - LD_LIBRARY_PATH="/lib/glibc"
        - PATH="$NACL_SDK_ROOT/toolchain/linux_x86_glibc/bin:$PATH"
        - PATH="$REPY_PATH/bin:$PATH"
        - PATH="$LIND_BASE:$PATH"
        - PATH="$HOME/.local/bin:$PATH"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main"
          packages:
            - clang-5.0 lldb-5.0 lld-5.0
      env:
        - MATRIX_EVAL="export PREFIX=~/.local CC=clang-5.0 CXX=clang++-5.0"
        - VIRTUALENVWRAPPER_PYTHON="/usr/bin/python2"
        - VIRTUALENVWRAPPER_VIRTUALENV="/usr/bin/virtualenv2"
        - LIND_PREFIX="$HOME"
        - LIND_BASE="$LIND_PREFIX/lind_project"
        - LIND_SRC="$LIND_BASE/lind"
        - LIND_MONITOR="$LIND_BASE/reference_monitor"
        - REPY_PATH="$LIND_SRC/repy"
        - NACL_SDK_ROOT="$REPY_PATH/sdk"
        - PYTHON="python2"
        - PNACLPYTHON="python2"
        - LD_LIBRARY_PATH="/lib/glibc"
        - PATH="$NACL_SDK_ROOT/toolchain/linux_x86_glibc/bin:$PATH"
        - PATH="$REPY_PATH/bin:$PATH"
        - PATH="$LIND_BASE:$PATH"
        - PATH="$HOME/.local/bin:$PATH"

before_install:
    - eval "$MATRIX_EVAL"
    - sudo apt-get install -qq --fix-missing elfutils libelf-dev libreadline-dev
    - sudo apt-get install -qq --fix-missing linux-headers-generic linux-libc-dev
    - sudo apt-get install -qq --fix-missing docker virtualenvwrapper npm help2man
    # - sudo apt-get install -qq --fix-missing
    - printf "%s\n" 'prefix=${HOME}/.node_modules' | tee -a "$HOME/.npmrc"
    - npm install -g yarn
    - mkdir -pv "$HOME/bin/"
    - printf "%s\n" \
             "#!/bin/sh" \
             "" \
             "exec /usr/bin/help2man --no-discard-stderr \"$@\"" \
             | tee "$HOME/bin/help2man"
    - chmod +x "$HOME/bin/help2man"
    # generate the <linux/memfd.h> header since one is missing on the Travis instance
    - sudo mkdir -p /usr/include/linux
    - printf "%s\n" \
                "#ifndef _LINUX_MEMFD_H" \
                "#define _LINUX_MEMFD_H" \
                "" \
                "#define __NR_memfd_create 319" \
                "#define SYS_memfd_create __NR_memfd_create" \
                "" \
                "/* flags for memfd_create(2) (unsigned int) */" \
                "#define MFD_CLOEXEC 0x0001U" \
                "#define MFD_ALLOW_SEALING 0x0002U" \
                "" \
                "#endif /* _LINUX_MEMFD_H */" \
                | sudo tee /usr/include/linux/memfd.h

script:
    - ln -Tsfv "$PWD" "$LIND_BASE"
    - cd "$LIND_BASE/docker/base/home/lind/build/make-3.82/src/make-3.82/"
    - ./configure --prefix="$HOME/.local"
    - make install
    - cd "$LIND_BASE/docker/base/home/lind/build/texinfo-4.13/"
    - PREFIX="$HOME/.local" make install
    - cd "$LIND_BASE"
    - ./mklind download
    - ./mklind nacl
    - ./mklind repy
    - ./mklind glibc
    - ./mklind install
