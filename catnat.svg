<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="518.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="501" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="501" > </text>
<g id="frames">
<g >
<title>_raw_spin_lock_irq (2 samples, 0.37%)</title><rect x="204.1" y="117" width="4.4" height="15.0" fill="rgb(233,120,39)" rx="2" ry="2" />
<text  x="207.15" y="127.5" ></text>
</g>
<g >
<title>intel_idle (30 samples, 5.48%)</title><rect x="1114.5" y="325" width="64.7" height="15.0" fill="rgb(232,79,51)" rx="2" ry="2" />
<text  x="1117.50" y="335.5" >intel_i..</text>
</g>
<g >
<title>nf_conntrack_destroy (1 samples, 0.18%)</title><rect x="1067.0" y="341" width="2.2" height="15.0" fill="rgb(244,100,13)" rx="2" ry="2" />
<text  x="1070.04" y="351.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.18%)</title><rect x="872.9" y="213" width="2.1" height="15.0" fill="rgb(238,149,17)" rx="2" ry="2" />
<text  x="875.89" y="223.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (64 samples, 11.70%)</title><rect x="918.2" y="133" width="138.1" height="15.0" fill="rgb(206,70,31)" rx="2" ry="2" />
<text  x="921.19" y="143.5" >__intel_pmu_enabl..</text>
</g>
<g >
<title>__libc_read (1 samples, 0.18%)</title><rect x="883.7" y="405" width="2.1" height="15.0" fill="rgb(231,47,16)" rx="2" ry="2" />
<text  x="886.67" y="415.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.18%)</title><rect x="1064.9" y="373" width="2.1" height="15.0" fill="rgb(210,61,26)" rx="2" ry="2" />
<text  x="1067.88" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (133 samples, 24.31%)</title><rect x="573.0" y="341" width="286.9" height="15.0" fill="rgb(229,128,21)" rx="2" ry="2" />
<text  x="576.03" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>alloc_pages_current (32 samples, 5.85%)</title><rect x="124.3" y="133" width="69.1" height="15.0" fill="rgb(213,27,22)" rx="2" ry="2" />
<text  x="127.33" y="143.5" >alloc_p..</text>
</g>
<g >
<title>[cat] (395 samples, 72.21%)</title><rect x="10.0" y="389" width="852.1" height="15.0" fill="rgb(217,82,10)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >[cat]</text>
</g>
<g >
<title>__inc_node_page_state (1 samples, 0.18%)</title><rect x="199.8" y="117" width="2.2" height="15.0" fill="rgb(242,148,28)" rx="2" ry="2" />
<text  x="202.84" y="127.5" ></text>
</g>
<g >
<title>map_id_up (1 samples, 0.18%)</title><rect x="353.0" y="85" width="2.2" height="15.0" fill="rgb(247,26,14)" rx="2" ry="2" />
<text  x="356.00" y="95.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (2 samples, 0.37%)</title><rect x="115.7" y="149" width="4.3" height="15.0" fill="rgb(207,18,5)" rx="2" ry="2" />
<text  x="118.70" y="159.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (4 samples, 0.73%)</title><rect x="281.8" y="133" width="8.6" height="15.0" fill="rgb(215,13,34)" rx="2" ry="2" />
<text  x="284.81" y="143.5" ></text>
</g>
<g >
<title>ext4_es_insert_extent (4 samples, 0.73%)</title><rect x="107.1" y="149" width="8.6" height="15.0" fill="rgb(248,0,29)" rx="2" ry="2" />
<text  x="110.07" y="159.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 11.70%)</title><rect x="918.2" y="197" width="138.1" height="15.0" fill="rgb(221,87,17)" rx="2" ry="2" />
<text  x="921.19" y="207.5" >__perf_event_enable</text>
</g>
<g >
<title>__set_page_dirty (11 samples, 2.01%)</title><rect x="413.4" y="117" width="23.7" height="15.0" fill="rgb(252,193,13)" rx="2" ry="2" />
<text  x="416.40" y="127.5" >_..</text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.18%)</title><rect x="1062.7" y="373" width="2.2" height="15.0" fill="rgb(233,119,20)" rx="2" ry="2" />
<text  x="1065.72" y="383.5" ></text>
</g>
<g >
<title>__lru_cache_add (7 samples, 1.28%)</title><rect x="234.4" y="117" width="15.1" height="15.0" fill="rgb(229,48,2)" rx="2" ry="2" />
<text  x="237.35" y="127.5" ></text>
</g>
<g >
<title>seq_vprintf (1 samples, 0.18%)</title><rect x="883.7" y="245" width="2.1" height="15.0" fill="rgb(214,47,6)" rx="2" ry="2" />
<text  x="886.67" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.37%)</title><rect x="864.3" y="389" width="4.3" height="15.0" fill="rgb(254,210,18)" rx="2" ry="2" />
<text  x="867.26" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.18%)</title><rect x="883.7" y="373" width="2.1" height="15.0" fill="rgb(217,142,18)" rx="2" ry="2" />
<text  x="886.67" y="383.5" ></text>
</g>
<g >
<title>sys_ioctl (79 samples, 14.44%)</title><rect x="885.8" y="357" width="170.5" height="15.0" fill="rgb(212,176,3)" rx="2" ry="2" />
<text  x="888.83" y="367.5" >sys_ioctl</text>
</g>
<g >
<title>worker_thread (1 samples, 0.18%)</title><rect x="1067.0" y="405" width="2.2" height="15.0" fill="rgb(211,72,0)" rx="2" ry="2" />
<text  x="1070.04" y="415.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (79 samples, 14.44%)</title><rect x="885.8" y="421" width="170.5" height="15.0" fill="rgb(248,169,51)" rx="2" ry="2" />
<text  x="888.83" y="431.5" >perf_evsel__run_ioctl</text>
</g>
<g >
<title>event_function (64 samples, 11.70%)</title><rect x="918.2" y="213" width="138.1" height="15.0" fill="rgb(243,132,9)" rx="2" ry="2" />
<text  x="921.19" y="223.5" >event_function</text>
</g>
<g >
<title>load_balance (1 samples, 0.18%)</title><rect x="1064.9" y="341" width="2.1" height="15.0" fill="rgb(252,182,9)" rx="2" ry="2" />
<text  x="1067.88" y="351.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.18%)</title><rect x="210.6" y="101" width="2.2" height="15.0" fill="rgb(221,84,21)" rx="2" ry="2" />
<text  x="213.62" y="111.5" ></text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.18%)</title><rect x="1185.7" y="357" width="2.1" height="15.0" fill="rgb(206,47,42)" rx="2" ry="2" />
<text  x="1188.69" y="367.5" ></text>
</g>
<g >
<title>call_timer_fn (2 samples, 0.37%)</title><rect x="1105.9" y="245" width="4.3" height="15.0" fill="rgb(234,213,25)" rx="2" ry="2" />
<text  x="1108.87" y="255.5" ></text>
</g>
<g >
<title>ext4_es_can_be_merged (2 samples, 0.37%)</title><rect x="109.2" y="117" width="4.3" height="15.0" fill="rgb(248,97,6)" rx="2" ry="2" />
<text  x="112.23" y="127.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.18%)</title><rect x="1082.1" y="261" width="2.2" height="15.0" fill="rgb(229,95,25)" rx="2" ry="2" />
<text  x="1085.14" y="271.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (4 samples, 0.73%)</title><rect x="847.0" y="181" width="8.6" height="15.0" fill="rgb(248,141,51)" rx="2" ry="2" />
<text  x="850.00" y="191.5" ></text>
</g>
<g >
<title>__es_insert_extent (2 samples, 0.37%)</title><rect x="109.2" y="133" width="4.3" height="15.0" fill="rgb(252,31,50)" rx="2" ry="2" />
<text  x="112.23" y="143.5" ></text>
</g>
<g >
<title>cpu_startup_entry (56 samples, 10.24%)</title><rect x="1069.2" y="405" width="120.8" height="15.0" fill="rgb(251,179,37)" rx="2" ry="2" />
<text  x="1072.20" y="415.5" >cpu_startup_entry</text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.18%)</title><rect x="426.3" y="85" width="2.2" height="15.0" fill="rgb(248,131,15)" rx="2" ry="2" />
<text  x="429.34" y="95.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.18%)</title><rect x="130.8" y="101" width="2.2" height="15.0" fill="rgb(236,162,39)" rx="2" ry="2" />
<text  x="133.80" y="111.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (52 samples, 9.51%)</title><rect x="447.9" y="181" width="112.2" height="15.0" fill="rgb(240,63,35)" rx="2" ry="2" />
<text  x="450.92" y="191.5" >copy_user_enh..</text>
</g>
<g >
<title>sys_read (1 samples, 0.18%)</title><rect x="883.7" y="357" width="2.1" height="15.0" fill="rgb(234,221,37)" rx="2" ry="2" />
<text  x="886.67" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.18%)</title><rect x="208.5" y="117" width="2.1" height="15.0" fill="rgb(215,160,22)" rx="2" ry="2" />
<text  x="211.46" y="127.5" ></text>
</g>
<g >
<title>get_partial_node.isra.74 (1 samples, 0.18%)</title><rect x="230.0" y="37" width="2.2" height="15.0" fill="rgb(234,93,42)" rx="2" ry="2" />
<text  x="233.04" y="47.5" ></text>
</g>
<g >
<title>event_function_call (77 samples, 14.08%)</title><rect x="890.1" y="277" width="166.2" height="15.0" fill="rgb(230,85,20)" rx="2" ry="2" />
<text  x="893.15" y="287.5" >event_function_call</text>
</g>
<g >
<title>ext4_block_write_begin (30 samples, 5.48%)</title><rect x="55.3" y="181" width="64.7" height="15.0" fill="rgb(238,113,21)" rx="2" ry="2" />
<text  x="58.30" y="191.5" >ext4_bl..</text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.18%)</title><rect x="1187.8" y="341" width="2.2" height="15.0" fill="rgb(239,136,44)" rx="2" ry="2" />
<text  x="1190.84" y="351.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (38 samples, 6.95%)</title><rect x="299.1" y="133" width="81.9" height="15.0" fill="rgb(241,174,43)" rx="2" ry="2" />
<text  x="302.07" y="143.5" >ext4_mark..</text>
</g>
<g >
<title>perf_evsel__enable_cpu (79 samples, 14.44%)</title><rect x="885.8" y="437" width="170.5" height="15.0" fill="rgb(218,60,39)" rx="2" ry="2" />
<text  x="888.83" y="447.5" >perf_evsel__enable_cpu</text>
</g>
<g >
<title>__ext4_journal_start_sb (2 samples, 0.37%)</title><rect x="294.8" y="133" width="4.3" height="15.0" fill="rgb(239,136,7)" rx="2" ry="2" />
<text  x="297.75" y="143.5" ></text>
</g>
<g >
<title>ext4_da_write_end (84 samples, 15.36%)</title><rect x="262.4" y="197" width="181.2" height="15.0" fill="rgb(239,104,20)" rx="2" ry="2" />
<text  x="265.39" y="207.5" >ext4_da_write_end</text>
</g>
<g >
<title>clean_bdev_aliases (4 samples, 0.73%)</title><rect x="61.8" y="165" width="8.6" height="15.0" fill="rgb(221,151,29)" rx="2" ry="2" />
<text  x="64.77" y="175.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (16 samples, 2.93%)</title><rect x="85.5" y="165" width="34.5" height="15.0" fill="rgb(216,155,44)" rx="2" ry="2" />
<text  x="88.50" y="175.5" >ex..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.37%)</title><rect x="864.3" y="405" width="4.3" height="15.0" fill="rgb(244,149,35)" rx="2" ry="2" />
<text  x="867.26" y="415.5" ></text>
</g>
<g >
<title>[cat] (395 samples, 72.21%)</title><rect x="10.0" y="437" width="852.1" height="15.0" fill="rgb(222,189,41)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >[cat]</text>
</g>
<g >
<title>__inc_node_state (1 samples, 0.18%)</title><rect x="199.8" y="101" width="2.2" height="15.0" fill="rgb(219,49,47)" rx="2" ry="2" />
<text  x="202.84" y="111.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (14 samples, 2.56%)</title><rect x="264.6" y="181" width="30.2" height="15.0" fill="rgb(225,227,9)" rx="2" ry="2" />
<text  x="267.55" y="191.5" >__..</text>
</g>
<g >
<title>__GI___read (135 samples, 24.68%)</title><rect x="570.9" y="373" width="291.2" height="15.0" fill="rgb(240,227,47)" rx="2" ry="2" />
<text  x="573.88" y="383.5" >__GI___read</text>
</g>
<g >
<title>__fget (1 samples, 0.18%)</title><rect x="866.4" y="309" width="2.2" height="15.0" fill="rgb(237,211,38)" rx="2" ry="2" />
<text  x="869.42" y="319.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (78 samples, 14.26%)</title><rect x="888.0" y="309" width="168.3" height="15.0" fill="rgb(228,199,40)" rx="2" ry="2" />
<text  x="890.99" y="319.5" >perf_event_for_each_c..</text>
</g>
<g >
<title>[cat] (260 samples, 47.53%)</title><rect x="10.0" y="373" width="560.9" height="15.0" fill="rgb(223,37,42)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >[cat]</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.18%)</title><rect x="883.7" y="389" width="2.1" height="15.0" fill="rgb(250,79,19)" rx="2" ry="2" />
<text  x="886.67" y="399.5" ></text>
</g>
<g >
<title>generic_write_end (69 samples, 12.61%)</title><rect x="294.8" y="181" width="148.8" height="15.0" fill="rgb(228,35,12)" rx="2" ry="2" />
<text  x="297.75" y="191.5" >generic_write_end</text>
</g>
<g >
<title>seq_printf (1 samples, 0.18%)</title><rect x="883.7" y="261" width="2.1" height="15.0" fill="rgb(221,177,43)" rx="2" ry="2" />
<text  x="886.67" y="271.5" ></text>
</g>
<g >
<title>sys_read (132 samples, 24.13%)</title><rect x="575.2" y="325" width="284.7" height="15.0" fill="rgb(246,199,3)" rx="2" ry="2" />
<text  x="578.19" y="335.5" >sys_read</text>
</g>
<g >
<title>calc_wheel_index (1 samples, 0.18%)</title><rect x="1062.7" y="357" width="2.2" height="15.0" fill="rgb(230,87,47)" rx="2" ry="2" />
<text  x="1065.72" y="367.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.18%)</title><rect x="883.7" y="325" width="2.1" height="15.0" fill="rgb(212,76,37)" rx="2" ry="2" />
<text  x="886.67" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.37%)</title><rect x="286.1" y="117" width="4.3" height="15.0" fill="rgb(216,21,21)" rx="2" ry="2" />
<text  x="289.12" y="127.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.18%)</title><rect x="870.7" y="165" width="2.2" height="15.0" fill="rgb(206,155,39)" rx="2" ry="2" />
<text  x="873.73" y="175.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.18%)</title><rect x="870.7" y="229" width="2.2" height="15.0" fill="rgb(221,15,19)" rx="2" ry="2" />
<text  x="873.73" y="239.5" ></text>
</g>
<g >
<title>block_write_end (27 samples, 4.94%)</title><rect x="381.0" y="165" width="58.3" height="15.0" fill="rgb(246,115,33)" rx="2" ry="2" />
<text  x="384.04" y="175.5" >block_..</text>
</g>
<g >
<title>radix_tree_tag_set (3 samples, 0.55%)</title><rect x="430.7" y="101" width="6.4" height="15.0" fill="rgb(223,111,0)" rx="2" ry="2" />
<text  x="433.66" y="111.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (6 samples, 1.10%)</title><rect x="236.5" y="101" width="13.0" height="15.0" fill="rgb(230,140,6)" rx="2" ry="2" />
<text  x="239.51" y="111.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.18%)</title><rect x="883.7" y="341" width="2.1" height="15.0" fill="rgb(237,24,16)" rx="2" ry="2" />
<text  x="886.67" y="351.5" ></text>
</g>
<g >
<title>generic_perform_write (7 samples, 1.28%)</title><rect x="868.6" y="277" width="15.1" height="15.0" fill="rgb(231,191,39)" rx="2" ry="2" />
<text  x="871.57" y="287.5" ></text>
</g>
<g >
<title>lru_cache_add (7 samples, 1.28%)</title><rect x="234.4" y="133" width="15.1" height="15.0" fill="rgb(235,51,18)" rx="2" ry="2" />
<text  x="237.35" y="143.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.18%)</title><rect x="872.9" y="229" width="2.1" height="15.0" fill="rgb(206,217,26)" rx="2" ry="2" />
<text  x="875.89" y="239.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (53 samples, 9.69%)</title><rect x="445.8" y="197" width="114.3" height="15.0" fill="rgb(241,69,5)" rx="2" ry="2" />
<text  x="448.76" y="207.5" >iov_iter_copy_..</text>
</g>
<g >
<title>kthread (5 samples, 0.91%)</title><rect x="1058.4" y="421" width="10.8" height="15.0" fill="rgb(206,166,29)" rx="2" ry="2" />
<text  x="1061.41" y="431.5" ></text>
</g>
<g >
<title>ion (7 samples, 1.28%)</title><rect x="868.6" y="437" width="15.1" height="15.0" fill="rgb(212,81,6)" rx="2" ry="2" />
<text  x="871.57" y="447.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (1 samples, 0.18%)</title><rect x="378.9" y="85" width="2.1" height="15.0" fill="rgb(231,145,53)" rx="2" ry="2" />
<text  x="381.88" y="95.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (2 samples, 0.37%)</title><rect x="1183.5" y="373" width="4.3" height="15.0" fill="rgb(205,79,52)" rx="2" ry="2" />
<text  x="1186.53" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3 samples, 0.55%)</title><rect x="415.6" y="101" width="6.4" height="15.0" fill="rgb(254,121,10)" rx="2" ry="2" />
<text  x="418.56" y="111.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (63 samples, 11.52%)</title><rect x="122.2" y="181" width="135.9" height="15.0" fill="rgb(228,163,30)" rx="2" ry="2" />
<text  x="125.18" y="191.5" >grab_cache_page_w..</text>
</g>
<g >
<title>__inc_node_state (1 samples, 0.18%)</title><rect x="424.2" y="85" width="2.1" height="15.0" fill="rgb(249,165,21)" rx="2" ry="2" />
<text  x="427.19" y="95.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.18%)</title><rect x="79.0" y="101" width="2.2" height="15.0" fill="rgb(230,124,12)" rx="2" ry="2" />
<text  x="82.03" y="111.5" ></text>
</g>
<g >
<title>hrtick_update (1 samples, 0.18%)</title><rect x="1108.0" y="149" width="2.2" height="15.0" fill="rgb(249,84,47)" rx="2" ry="2" />
<text  x="1111.03" y="159.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.18%)</title><rect x="1067.0" y="389" width="2.2" height="15.0" fill="rgb(250,137,48)" rx="2" ry="2" />
<text  x="1070.04" y="399.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (2 samples, 0.37%)</title><rect x="243.0" y="69" width="4.3" height="15.0" fill="rgb(208,33,22)" rx="2" ry="2" />
<text  x="245.98" y="79.5" ></text>
</g>
<g >
<title>__tick_nohz_idle_enter (1 samples, 0.18%)</title><rect x="1112.3" y="261" width="2.2" height="15.0" fill="rgb(239,121,7)" rx="2" ry="2" />
<text  x="1115.34" y="271.5" ></text>
</g>
<g >
<title>replace_slot (1 samples, 0.18%)</title><rect x="232.2" y="101" width="2.2" height="15.0" fill="rgb(222,36,52)" rx="2" ry="2" />
<text  x="235.19" y="111.5" ></text>
</g>
<g >
<title>radix_tree_lookup_slot (4 samples, 0.73%)</title><rect x="249.5" y="133" width="8.6" height="15.0" fill="rgb(243,195,1)" rx="2" ry="2" />
<text  x="252.45" y="143.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.18%)</title><rect x="1187.8" y="373" width="2.2" height="15.0" fill="rgb(220,129,27)" rx="2" ry="2" />
<text  x="1190.84" y="383.5" ></text>
</g>
<g >
<title>ext4_da_write_end (2 samples, 0.37%)</title><rect x="872.9" y="261" width="4.3" height="15.0" fill="rgb(206,40,7)" rx="2" ry="2" />
<text  x="875.89" y="271.5" ></text>
</g>
<g >
<title>alloc_page_buffers (5 samples, 0.91%)</title><rect x="74.7" y="149" width="10.8" height="15.0" fill="rgb(216,120,6)" rx="2" ry="2" />
<text  x="77.72" y="159.5" ></text>
</g>
<g >
<title>irq_enter (1 samples, 0.18%)</title><rect x="1099.4" y="293" width="2.2" height="15.0" fill="rgb(235,136,49)" rx="2" ry="2" />
<text  x="1102.40" y="303.5" ></text>
</g>
<g >
<title>read (1 samples, 0.18%)</title><rect x="883.7" y="421" width="2.1" height="15.0" fill="rgb(253,75,39)" rx="2" ry="2" />
<text  x="886.67" y="431.5" ></text>
</g>
<g >
<title>new_sync_read (130 samples, 23.77%)</title><rect x="575.2" y="277" width="280.4" height="15.0" fill="rgb(247,224,46)" rx="2" ry="2" />
<text  x="578.19" y="287.5" >new_sync_read</text>
</g>
<g >
<title>account_page_dirtied (4 samples, 0.73%)</title><rect x="422.0" y="101" width="8.7" height="15.0" fill="rgb(245,82,2)" rx="2" ry="2" />
<text  x="425.03" y="111.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.18%)</title><rect x="1183.5" y="325" width="2.2" height="15.0" fill="rgb(218,105,14)" rx="2" ry="2" />
<text  x="1186.53" y="335.5" ></text>
</g>
<g >
<title>wake_up_process (2 samples, 0.37%)</title><rect x="1105.9" y="213" width="4.3" height="15.0" fill="rgb(211,146,41)" rx="2" ry="2" />
<text  x="1108.87" y="223.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (1 samples, 0.18%)</title><rect x="881.5" y="261" width="2.2" height="15.0" fill="rgb(219,67,3)" rx="2" ry="2" />
<text  x="884.52" y="271.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.18%)</title><rect x="1084.3" y="229" width="2.2" height="15.0" fill="rgb(207,126,38)" rx="2" ry="2" />
<text  x="1087.30" y="239.5" ></text>
</g>
<g >
<title>new_sync_write (258 samples, 47.17%)</title><rect x="10.0" y="261" width="556.6" height="15.0" fill="rgb(241,162,8)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >new_sync_write</text>
</g>
<g >
<title>page_cache_tree_insert (7 samples, 1.28%)</title><rect x="219.3" y="117" width="15.1" height="15.0" fill="rgb(211,17,43)" rx="2" ry="2" />
<text  x="222.25" y="127.5" ></text>
</g>
<g >
<title>__libc_start_main (395 samples, 72.21%)</title><rect x="10.0" y="421" width="852.1" height="15.0" fill="rgb(211,13,5)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >__libc_start_main</text>
</g>
<g >
<title>crc32c_pcl_intel_update (10 samples, 1.83%)</title><rect x="331.4" y="37" width="21.6" height="15.0" fill="rgb(234,54,43)" rx="2" ry="2" />
<text  x="334.43" y="47.5" >c..</text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.18%)</title><rect x="1181.4" y="373" width="2.1" height="15.0" fill="rgb(239,156,14)" rx="2" ry="2" />
<text  x="1184.37" y="383.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.18%)</title><rect x="870.7" y="197" width="2.2" height="15.0" fill="rgb(211,169,20)" rx="2" ry="2" />
<text  x="873.73" y="207.5" ></text>
</g>
<g >
<title>iov_iter_advance (1 samples, 0.18%)</title><rect x="443.6" y="197" width="2.2" height="15.0" fill="rgb(208,188,28)" rx="2" ry="2" />
<text  x="446.60" y="207.5" ></text>
</g>
<g >
<title>__set_page_dirty (1 samples, 0.18%)</title><rect x="406.9" y="133" width="2.2" height="15.0" fill="rgb(208,186,44)" rx="2" ry="2" />
<text  x="409.93" y="143.5" ></text>
</g>
<g >
<title>radix_tree_lookup_slot (4 samples, 0.73%)</title><rect x="847.0" y="197" width="8.6" height="15.0" fill="rgb(218,16,7)" rx="2" ry="2" />
<text  x="850.00" y="207.5" ></text>
</g>
<g >
<title>tick_irq_enter (1 samples, 0.18%)</title><rect x="1099.4" y="277" width="2.2" height="15.0" fill="rgb(220,24,17)" rx="2" ry="2" />
<text  x="1102.40" y="287.5" ></text>
</g>
<g >
<title>start_secondary (56 samples, 10.24%)</title><rect x="1069.2" y="421" width="120.8" height="15.0" fill="rgb(219,24,45)" rx="2" ry="2" />
<text  x="1072.20" y="431.5" >start_secondary</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.18%)</title><rect x="59.6" y="165" width="2.2" height="15.0" fill="rgb(235,91,49)" rx="2" ry="2" />
<text  x="62.62" y="175.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.18%)</title><rect x="883.7" y="309" width="2.1" height="15.0" fill="rgb(227,181,34)" rx="2" ry="2" />
<text  x="886.67" y="319.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.18%)</title><rect x="868.6" y="245" width="2.1" height="15.0" fill="rgb(248,135,10)" rx="2" ry="2" />
<text  x="871.57" y="255.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.18%)</title><rect x="799.5" y="213" width="2.2" height="15.0" fill="rgb(224,202,41)" rx="2" ry="2" />
<text  x="802.54" y="223.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.18%)</title><rect x="1183.5" y="293" width="2.2" height="15.0" fill="rgb(238,204,34)" rx="2" ry="2" />
<text  x="1186.53" y="303.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (258 samples, 47.17%)</title><rect x="10.0" y="229" width="556.6" height="15.0" fill="rgb(207,0,1)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >__generic_file_write_iter</text>
</g>
<g >
<title>unlock_page (2 samples, 0.37%)</title><rect x="258.1" y="181" width="4.3" height="15.0" fill="rgb(248,130,15)" rx="2" ry="2" />
<text  x="261.08" y="191.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.18%)</title><rect x="1064.9" y="357" width="2.1" height="15.0" fill="rgb(238,15,6)" rx="2" ry="2" />
<text  x="1067.88" y="367.5" ></text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.37%)</title><rect x="1105.9" y="261" width="4.3" height="15.0" fill="rgb(249,177,6)" rx="2" ry="2" />
<text  x="1108.87" y="271.5" ></text>
</g>
<g >
<title>nf_ct_gc_expired (1 samples, 0.18%)</title><rect x="1067.0" y="357" width="2.2" height="15.0" fill="rgb(229,25,45)" rx="2" ry="2" />
<text  x="1070.04" y="367.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.18%)</title><rect x="1069.2" y="389" width="2.2" height="15.0" fill="rgb(247,166,16)" rx="2" ry="2" />
<text  x="1072.20" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (50 samples, 9.14%)</title><rect x="1071.4" y="341" width="107.8" height="15.0" fill="rgb(251,186,54)" rx="2" ry="2" />
<text  x="1074.35" y="351.5" >cpuidle_enter..</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.18%)</title><rect x="122.2" y="133" width="2.1" height="15.0" fill="rgb(216,151,1)" rx="2" ry="2" />
<text  x="125.18" y="143.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.73%)</title><rect x="1101.6" y="277" width="8.6" height="15.0" fill="rgb(244,2,11)" rx="2" ry="2" />
<text  x="1104.55" y="287.5" ></text>
</g>
<g >
<title>radix_tree_next_chunk (1 samples, 0.18%)</title><rect x="68.2" y="117" width="2.2" height="15.0" fill="rgb(211,163,16)" rx="2" ry="2" />
<text  x="71.24" y="127.5" ></text>
</g>
<g >
<title>cat (395 samples, 72.21%)</title><rect x="10.0" y="453" width="852.1" height="15.0" fill="rgb(222,151,33)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >cat</text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.18%)</title><rect x="1064.9" y="325" width="2.1" height="15.0" fill="rgb(248,175,30)" rx="2" ry="2" />
<text  x="1067.88" y="335.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.56 (13 samples, 2.38%)</title><rect x="325.0" y="69" width="28.0" height="15.0" fill="rgb(232,189,52)" rx="2" ry="2" />
<text  x="327.95" y="79.5" >e..</text>
</g>
<g >
<title>from_kuid (1 samples, 0.18%)</title><rect x="359.5" y="101" width="2.1" height="15.0" fill="rgb(236,10,20)" rx="2" ry="2" />
<text  x="362.47" y="111.5" ></text>
</g>
<g >
<title>__wake_up (4 samples, 0.73%)</title><rect x="281.8" y="149" width="8.6" height="15.0" fill="rgb(241,97,9)" rx="2" ry="2" />
<text  x="284.81" y="159.5" ></text>
</g>
<g >
<title>nmi_restore (1 samples, 0.18%)</title><rect x="1054.1" y="117" width="2.2" height="15.0" fill="rgb(206,162,31)" rx="2" ry="2" />
<text  x="1057.10" y="127.5" ></text>
</g>
<g >
<title>vfs_read (132 samples, 24.13%)</title><rect x="575.2" y="309" width="284.7" height="15.0" fill="rgb(219,100,26)" rx="2" ry="2" />
<text  x="578.19" y="319.5" >vfs_read</text>
</g>
<g >
<title>rw_verify_area (2 samples, 0.37%)</title><rect x="855.6" y="293" width="4.3" height="15.0" fill="rgb(212,167,23)" rx="2" ry="2" />
<text  x="858.63" y="303.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (22 samples, 4.02%)</title><rect x="307.7" y="101" width="47.5" height="15.0" fill="rgb(214,139,42)" rx="2" ry="2" />
<text  x="310.70" y="111.5" >ext4..</text>
</g>
<g >
<title>gc_worker (1 samples, 0.18%)</title><rect x="1067.0" y="373" width="2.2" height="15.0" fill="rgb(251,69,34)" rx="2" ry="2" />
<text  x="1070.04" y="383.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.18%)</title><rect x="866.4" y="325" width="2.2" height="15.0" fill="rgb(240,36,21)" rx="2" ry="2" />
<text  x="869.42" y="335.5" ></text>
</g>
<g >
<title>[cat] (395 samples, 72.21%)</title><rect x="10.0" y="405" width="852.1" height="15.0" fill="rgb(207,160,45)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >[cat]</text>
</g>
<g >
<title>ext4_claim_free_clusters (1 samples, 0.18%)</title><rect x="104.9" y="149" width="2.2" height="15.0" fill="rgb(215,160,46)" rx="2" ry="2" />
<text  x="107.92" y="159.5" ></text>
</g>
<g >
<title>native_write_msr (48 samples, 8.78%)</title><rect x="950.5" y="117" width="103.6" height="15.0" fill="rgb(209,55,16)" rx="2" ry="2" />
<text  x="953.55" y="127.5" >native_write..</text>
</g>
<g >
<title>apic_timer_interrupt (18 samples, 3.29%)</title><rect x="1075.7" y="325" width="38.8" height="15.0" fill="rgb(238,119,7)" rx="2" ry="2" />
<text  x="1078.67" y="335.5" >api..</text>
</g>
<g >
<title>find_get_entry (4 samples, 0.73%)</title><rect x="249.5" y="149" width="8.6" height="15.0" fill="rgb(246,129,45)" rx="2" ry="2" />
<text  x="252.45" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_write (260 samples, 47.53%)</title><rect x="10.0" y="357" width="560.9" height="15.0" fill="rgb(229,31,11)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >__GI___libc_write</text>
</g>
<g >
<title>sys_write (258 samples, 47.17%)</title><rect x="10.0" y="309" width="556.6" height="15.0" fill="rgb(246,223,12)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >sys_write</text>
</g>
<g >
<title>ext4_file_read_iter (129 samples, 23.58%)</title><rect x="577.3" y="261" width="278.3" height="15.0" fill="rgb(217,99,49)" rx="2" ry="2" />
<text  x="580.35" y="271.5" >ext4_file_read_iter</text>
</g>
<g >
<title>sys_write (7 samples, 1.28%)</title><rect x="868.6" y="373" width="15.1" height="15.0" fill="rgb(226,212,28)" rx="2" ry="2" />
<text  x="871.57" y="383.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.18%)</title><rect x="1187.8" y="325" width="2.2" height="15.0" fill="rgb(211,50,15)" rx="2" ry="2" />
<text  x="1190.84" y="335.5" ></text>
</g>
<g >
<title>schedule_timeout (3 samples, 0.55%)</title><rect x="1058.4" y="389" width="6.5" height="15.0" fill="rgb(238,61,52)" rx="2" ry="2" />
<text  x="1061.41" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (9 samples, 1.65%)</title><rect x="1080.0" y="293" width="19.4" height="15.0" fill="rgb(216,24,24)" rx="2" ry="2" />
<text  x="1082.98" y="303.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 11.70%)</title><rect x="918.2" y="229" width="138.1" height="15.0" fill="rgb(230,22,30)" rx="2" ry="2" />
<text  x="921.19" y="239.5" >remote_function</text>
</g>
<g >
<title>fdarray__poll (2 samples, 0.37%)</title><rect x="864.3" y="437" width="4.3" height="15.0" fill="rgb(244,161,52)" rx="2" ry="2" />
<text  x="867.26" y="447.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.37%)</title><rect x="1105.9" y="197" width="4.3" height="15.0" fill="rgb(252,69,13)" rx="2" ry="2" />
<text  x="1108.87" y="207.5" ></text>
</g>
<g >
<title>find_get_pages_range (2 samples, 0.37%)</title><rect x="66.1" y="133" width="4.3" height="15.0" fill="rgb(205,148,34)" rx="2" ry="2" />
<text  x="69.09" y="143.5" ></text>
</g>
<g >
<title>scheduler_tick (3 samples, 0.55%)</title><rect x="1092.9" y="213" width="6.5" height="15.0" fill="rgb(211,46,20)" rx="2" ry="2" />
<text  x="1095.93" y="223.5" ></text>
</g>
<g >
<title>update_process_times (5 samples, 0.91%)</title><rect x="1088.6" y="229" width="10.8" height="15.0" fill="rgb(242,36,50)" rx="2" ry="2" />
<text  x="1091.61" y="239.5" ></text>
</g>
<g >
<title>create_empty_buffers (7 samples, 1.28%)</title><rect x="70.4" y="165" width="15.1" height="15.0" fill="rgb(248,53,15)" rx="2" ry="2" />
<text  x="73.40" y="175.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.37%)</title><rect x="566.6" y="341" width="4.3" height="15.0" fill="rgb(219,109,11)" rx="2" ry="2" />
<text  x="569.56" y="351.5" ></text>
</g>
<g >
<title>generic_perform_write (257 samples, 46.98%)</title><rect x="12.2" y="213" width="554.4" height="15.0" fill="rgb(209,20,27)" rx="2" ry="2" />
<text  x="15.16" y="223.5" >generic_perform_write</text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 11.70%)</title><rect x="918.2" y="149" width="138.1" height="15.0" fill="rgb(232,115,1)" rx="2" ry="2" />
<text  x="921.19" y="159.5" >intel_pmu_enable_..</text>
</g>
<g >
<title>mark_buffer_dirty (14 samples, 2.56%)</title><rect x="409.1" y="133" width="30.2" height="15.0" fill="rgb(216,134,16)" rx="2" ry="2" />
<text  x="412.09" y="143.5" >ma..</text>
</g>
<g >
<title>rcu_irq_exit (1 samples, 0.18%)</title><rect x="1110.2" y="277" width="2.1" height="15.0" fill="rgb(232,175,35)" rx="2" ry="2" />
<text  x="1113.18" y="287.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (97 samples, 17.73%)</title><rect x="588.1" y="213" width="209.3" height="15.0" fill="rgb(254,60,37)" rx="2" ry="2" />
<text  x="591.14" y="223.5" >copy_user_enhanced_fast_str..</text>
</g>
<g >
<title>ext4_reserve_inode_write (9 samples, 1.65%)</title><rect x="361.6" y="117" width="19.4" height="15.0" fill="rgb(208,143,13)" rx="2" ry="2" />
<text  x="364.63" y="127.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.37%)</title><rect x="290.4" y="149" width="4.4" height="15.0" fill="rgb(230,169,10)" rx="2" ry="2" />
<text  x="293.44" y="159.5" ></text>
</g>
<g >
<title>vfs_write (258 samples, 47.17%)</title><rect x="10.0" y="293" width="556.6" height="15.0" fill="rgb(236,143,54)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >vfs_write</text>
</g>
<g >
<title>schedule (1 samples, 0.18%)</title><rect x="1064.9" y="389" width="2.1" height="15.0" fill="rgb(222,229,54)" rx="2" ry="2" />
<text  x="1067.88" y="399.5" ></text>
</g>
<g >
<title>__tick_nohz_idle_enter (1 samples, 0.18%)</title><rect x="1183.5" y="357" width="2.2" height="15.0" fill="rgb(216,6,37)" rx="2" ry="2" />
<text  x="1186.53" y="367.5" ></text>
</g>
<g >
<title>perf_event_task_tick (3 samples, 0.55%)</title><rect x="1092.9" y="197" width="6.5" height="15.0" fill="rgb(243,30,10)" rx="2" ry="2" />
<text  x="1095.93" y="207.5" ></text>
</g>
<g >
<title>ret_from_fork (5 samples, 0.91%)</title><rect x="1058.4" y="437" width="10.8" height="15.0" fill="rgb(227,101,53)" rx="2" ry="2" />
<text  x="1061.41" y="447.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.18%)</title><rect x="870.7" y="213" width="2.2" height="15.0" fill="rgb(214,70,2)" rx="2" ry="2" />
<text  x="873.73" y="223.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (2 samples, 0.37%)</title><rect x="320.6" y="85" width="4.4" height="15.0" fill="rgb(224,162,25)" rx="2" ry="2" />
<text  x="323.64" y="95.5" ></text>
</g>
<g >
<title>find_busiest_group (2 samples, 0.37%)</title><rect x="1101.6" y="213" width="4.3" height="15.0" fill="rgb(213,216,54)" rx="2" ry="2" />
<text  x="1104.55" y="223.5" ></text>
</g>
<g >
<title>perf (90 samples, 16.45%)</title><rect x="862.1" y="453" width="194.2" height="15.0" fill="rgb(213,227,7)" rx="2" ry="2" />
<text  x="865.10" y="463.5" >perf</text>
</g>
<g >
<title>pagecache_get_page (25 samples, 4.57%)</title><rect x="801.7" y="229" width="53.9" height="15.0" fill="rgb(245,0,49)" rx="2" ry="2" />
<text  x="804.70" y="239.5" >pagec..</text>
</g>
<g >
<title>generic_file_read_iter (129 samples, 23.58%)</title><rect x="577.3" y="245" width="278.3" height="15.0" fill="rgb(219,79,43)" rx="2" ry="2" />
<text  x="580.35" y="255.5" >generic_file_read_iter</text>
</g>
<g >
<title>copy_page_to_iter (100 samples, 18.28%)</title><rect x="586.0" y="229" width="215.7" height="15.0" fill="rgb(254,196,44)" rx="2" ry="2" />
<text  x="588.98" y="239.5" >copy_page_to_iter</text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.18%)</title><rect x="428.5" y="85" width="2.2" height="15.0" fill="rgb(231,190,42)" rx="2" ry="2" />
<text  x="431.50" y="95.5" ></text>
</g>
<g >
<title>block_write_end (1 samples, 0.18%)</title><rect x="875.0" y="229" width="2.2" height="15.0" fill="rgb(229,73,13)" rx="2" ry="2" />
<text  x="878.05" y="239.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.18%)</title><rect x="870.7" y="181" width="2.2" height="15.0" fill="rgb(235,114,25)" rx="2" ry="2" />
<text  x="873.73" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (5 samples, 0.91%)</title><rect x="1088.6" y="245" width="10.8" height="15.0" fill="rgb(206,74,24)" rx="2" ry="2" />
<text  x="1091.61" y="255.5" ></text>
</g>
<g >
<title>radix_tree_node_alloc.constprop.19 (1 samples, 0.18%)</title><rect x="230.0" y="85" width="2.2" height="15.0" fill="rgb(230,217,22)" rx="2" ry="2" />
<text  x="233.04" y="95.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (14 samples, 2.56%)</title><rect x="918.2" y="117" width="30.2" height="15.0" fill="rgb(244,109,44)" rx="2" ry="2" />
<text  x="921.19" y="127.5" >__..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (258 samples, 47.17%)</title><rect x="10.0" y="341" width="556.6" height="15.0" fill="rgb(250,138,42)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>call_cpuidle (50 samples, 9.14%)</title><rect x="1071.4" y="373" width="107.8" height="15.0" fill="rgb(221,69,0)" rx="2" ry="2" />
<text  x="1074.35" y="383.5" >call_cpuidle</text>
</g>
<g >
<title>__page_cache_alloc (33 samples, 6.03%)</title><rect x="122.2" y="149" width="71.2" height="15.0" fill="rgb(211,34,41)" rx="2" ry="2" />
<text  x="125.18" y="159.5" >__page_c..</text>
</g>
<g >
<title>find_get_entry (25 samples, 4.57%)</title><rect x="801.7" y="213" width="53.9" height="15.0" fill="rgb(207,68,16)" rx="2" ry="2" />
<text  x="804.70" y="223.5" >find_..</text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.18%)</title><rect x="948.4" y="117" width="2.1" height="15.0" fill="rgb(240,165,49)" rx="2" ry="2" />
<text  x="951.39" y="127.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.18%)</title><rect x="1179.2" y="357" width="2.2" height="15.0" fill="rgb(234,73,44)" rx="2" ry="2" />
<text  x="1182.21" y="367.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (40 samples, 7.31%)</title><rect x="294.8" y="165" width="86.2" height="15.0" fill="rgb(243,117,44)" rx="2" ry="2" />
<text  x="297.75" y="175.5" >__mark_ino..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.37%)</title><rect x="877.2" y="245" width="4.3" height="15.0" fill="rgb(206,105,37)" rx="2" ry="2" />
<text  x="880.20" y="255.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.55%)</title><rect x="212.8" y="101" width="6.5" height="15.0" fill="rgb(218,113,42)" rx="2" ry="2" />
<text  x="215.78" y="111.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (1 samples, 0.18%)</title><rect x="868.6" y="229" width="2.1" height="15.0" fill="rgb(250,227,32)" rx="2" ry="2" />
<text  x="871.57" y="239.5" ></text>
</g>
<g >
<title>cpuidle_enter (50 samples, 9.14%)</title><rect x="1071.4" y="357" width="107.8" height="15.0" fill="rgb(229,29,14)" rx="2" ry="2" />
<text  x="1074.35" y="367.5" >cpuidle_enter</text>
</g>
<g >
<title>__ioctl (79 samples, 14.44%)</title><rect x="885.8" y="405" width="170.5" height="15.0" fill="rgb(218,202,11)" rx="2" ry="2" />
<text  x="888.83" y="415.5" >__ioctl</text>
</g>
<g >
<title>add_to_page_cache_lru (26 samples, 4.75%)</title><rect x="193.4" y="149" width="56.1" height="15.0" fill="rgb(238,140,40)" rx="2" ry="2" />
<text  x="196.36" y="159.5" >add_t..</text>
</g>
<g >
<title>__vfs_write (7 samples, 1.28%)</title><rect x="868.6" y="341" width="15.1" height="15.0" fill="rgb(244,213,6)" rx="2" ry="2" />
<text  x="871.57" y="351.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (258 samples, 47.17%)</title><rect x="10.0" y="245" width="556.6" height="15.0" fill="rgb(250,86,37)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >ext4_file_write_iter</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.28%)</title><rect x="868.6" y="405" width="15.1" height="15.0" fill="rgb(227,216,35)" rx="2" ry="2" />
<text  x="871.57" y="415.5" ></text>
</g>
<g >
<title>secondary_startup_64 (56 samples, 10.24%)</title><rect x="1069.2" y="437" width="120.8" height="15.0" fill="rgb(219,42,43)" rx="2" ry="2" />
<text  x="1072.20" y="447.5" >secondary_start..</text>
</g>
<g >
<title>release_pages (1 samples, 0.18%)</title><rect x="247.3" y="85" width="2.2" height="15.0" fill="rgb(228,160,22)" rx="2" ry="2" />
<text  x="250.29" y="95.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.18%)</title><rect x="1183.5" y="341" width="2.2" height="15.0" fill="rgb(227,163,45)" rx="2" ry="2" />
<text  x="1186.53" y="351.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.18%)</title><rect x="1064.9" y="405" width="2.1" height="15.0" fill="rgb(241,3,54)" rx="2" ry="2" />
<text  x="1067.88" y="415.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.34 (1 samples, 0.18%)</title><rect x="875.0" y="213" width="2.2" height="15.0" fill="rgb(227,208,7)" rx="2" ry="2" />
<text  x="878.05" y="223.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.18%)</title><rect x="883.7" y="229" width="2.1" height="15.0" fill="rgb(230,12,28)" rx="2" ry="2" />
<text  x="886.67" y="239.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.18%)</title><rect x="411.2" y="117" width="2.2" height="15.0" fill="rgb(219,2,1)" rx="2" ry="2" />
<text  x="414.24" y="127.5" ></text>
</g>
<g >
<title>ext4_has_free_clusters (1 samples, 0.18%)</title><rect x="104.9" y="133" width="2.2" height="15.0" fill="rgb(252,44,38)" rx="2" ry="2" />
<text  x="107.92" y="143.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (1 samples, 0.18%)</title><rect x="868.6" y="213" width="2.1" height="15.0" fill="rgb(214,106,15)" rx="2" ry="2" />
<text  x="871.57" y="223.5" ></text>
</g>
<g >
<title>proc_single_show (1 samples, 0.18%)</title><rect x="883.7" y="293" width="2.1" height="15.0" fill="rgb(205,200,36)" rx="2" ry="2" />
<text  x="886.67" y="303.5" ></text>
</g>
<g >
<title>perf_ioctl (78 samples, 14.26%)</title><rect x="888.0" y="325" width="168.3" height="15.0" fill="rgb(214,105,1)" rx="2" ry="2" />
<text  x="890.99" y="335.5" >perf_ioctl</text>
</g>
<g >
<title>proc_pid_status (1 samples, 0.18%)</title><rect x="883.7" y="277" width="2.1" height="15.0" fill="rgb(211,48,30)" rx="2" ry="2" />
<text  x="886.67" y="287.5" ></text>
</g>
<g >
<title>vfs_write (7 samples, 1.28%)</title><rect x="868.6" y="357" width="15.1" height="15.0" fill="rgb(229,174,42)" rx="2" ry="2" />
<text  x="871.57" y="367.5" ></text>
</g>
<g >
<title>pagecache_get_page (63 samples, 11.52%)</title><rect x="122.2" y="165" width="135.9" height="15.0" fill="rgb(253,126,38)" rx="2" ry="2" />
<text  x="125.18" y="175.5" >pagecache_get_page</text>
</g>
<g >
<title>__GI___poll (2 samples, 0.37%)</title><rect x="864.3" y="421" width="4.3" height="15.0" fill="rgb(227,175,44)" rx="2" ry="2" />
<text  x="867.26" y="431.5" ></text>
</g>
<g >
<title>__vfs_write (258 samples, 47.17%)</title><rect x="10.0" y="277" width="556.6" height="15.0" fill="rgb(221,163,44)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >__vfs_write</text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.18%)</title><rect x="1084.3" y="261" width="2.2" height="15.0" fill="rgb(234,101,37)" rx="2" ry="2" />
<text  x="1087.30" y="271.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (2 samples, 0.37%)</title><rect x="868.6" y="261" width="4.3" height="15.0" fill="rgb(214,183,33)" rx="2" ry="2" />
<text  x="871.57" y="271.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.18%)</title><rect x="859.9" y="357" width="2.2" height="15.0" fill="rgb(212,177,22)" rx="2" ry="2" />
<text  x="862.95" y="367.5" ></text>
</g>
<g >
<title>sys_poll (2 samples, 0.37%)</title><rect x="864.3" y="373" width="4.3" height="15.0" fill="rgb(217,47,17)" rx="2" ry="2" />
<text  x="867.26" y="383.5" ></text>
</g>
<g >
<title>memset_erms (2 samples, 0.37%)</title><rect x="81.2" y="117" width="4.3" height="15.0" fill="rgb(208,131,13)" rx="2" ry="2" />
<text  x="84.19" y="127.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.18%)</title><rect x="883.7" y="437" width="2.1" height="15.0" fill="rgb(222,53,23)" rx="2" ry="2" />
<text  x="886.67" y="447.5" ></text>
</g>
<g >
<title>process_timeout (2 samples, 0.37%)</title><rect x="1105.9" y="229" width="4.3" height="15.0" fill="rgb(208,176,6)" rx="2" ry="2" />
<text  x="1108.87" y="239.5" ></text>
</g>
<g >
<title>smp_call_function_single (68 samples, 12.43%)</title><rect x="909.6" y="261" width="146.7" height="15.0" fill="rgb(233,35,36)" rx="2" ry="2" />
<text  x="912.56" y="271.5" >smp_call_function_..</text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.37%)</title><rect x="1101.6" y="261" width="4.3" height="15.0" fill="rgb(232,99,12)" rx="2" ry="2" />
<text  x="1104.55" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (258 samples, 47.17%)</title><rect x="10.0" y="325" width="556.6" height="15.0" fill="rgb(210,66,49)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >do_syscall_64</text>
</g>
<g >
<title>smp_apic_timer_interrupt (17 samples, 3.11%)</title><rect x="1077.8" y="309" width="36.7" height="15.0" fill="rgb(215,87,49)" rx="2" ry="2" />
<text  x="1080.82" y="319.5" >smp..</text>
</g>
<g >
<title>__dquot_alloc_space (2 samples, 0.37%)</title><rect x="96.3" y="149" width="4.3" height="15.0" fill="rgb(219,223,46)" rx="2" ry="2" />
<text  x="99.29" y="159.5" ></text>
</g>
<g >
<title>all (547 samples, 100%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(233,132,4)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (1 samples, 0.18%)</title><rect x="872.9" y="197" width="2.1" height="15.0" fill="rgb(235,37,4)" rx="2" ry="2" />
<text  x="875.89" y="207.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (13 samples, 2.38%)</title><rect x="325.0" y="85" width="28.0" height="15.0" fill="rgb(244,42,44)" rx="2" ry="2" />
<text  x="327.95" y="95.5" >e..</text>
</g>
<g >
<title>crypto_shash_update (13 samples, 2.38%)</title><rect x="325.0" y="53" width="28.0" height="15.0" fill="rgb(216,19,20)" rx="2" ry="2" />
<text  x="327.95" y="63.5" >c..</text>
</g>
<g >
<title>new_sync_write (7 samples, 1.28%)</title><rect x="868.6" y="325" width="15.1" height="15.0" fill="rgb(236,37,53)" rx="2" ry="2" />
<text  x="871.57" y="335.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.34 (27 samples, 4.94%)</title><rect x="381.0" y="149" width="58.3" height="15.0" fill="rgb(242,228,48)" rx="2" ry="2" />
<text  x="384.04" y="159.5" >__bloc..</text>
</g>
<g >
<title>__libc_write (7 samples, 1.28%)</title><rect x="868.6" y="421" width="15.1" height="15.0" fill="rgb(214,211,51)" rx="2" ry="2" />
<text  x="871.57" y="431.5" ></text>
</g>
<g >
<title>ext4_nonda_switch (1 samples, 0.18%)</title><rect x="120.0" y="181" width="2.2" height="15.0" fill="rgb(238,109,44)" rx="2" ry="2" />
<text  x="123.02" y="191.5" ></text>
</g>
<g >
<title>load_balance (2 samples, 0.37%)</title><rect x="1101.6" y="229" width="4.3" height="15.0" fill="rgb(234,55,10)" rx="2" ry="2" />
<text  x="1104.55" y="239.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.18%)</title><rect x="10.0" y="213" width="2.2" height="15.0" fill="rgb(225,86,16)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (4 samples, 0.73%)</title><rect x="249.5" y="117" width="8.6" height="15.0" fill="rgb(241,171,5)" rx="2" ry="2" />
<text  x="252.45" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (79 samples, 14.44%)</title><rect x="885.8" y="373" width="170.5" height="15.0" fill="rgb(233,50,7)" rx="2" ry="2" />
<text  x="888.83" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>from_kgid (1 samples, 0.18%)</title><rect x="355.2" y="101" width="2.1" height="15.0" fill="rgb(205,132,31)" rx="2" ry="2" />
<text  x="358.16" y="111.5" ></text>
</g>
<g >
<title>copyout (1 samples, 0.18%)</title><rect x="797.4" y="213" width="2.1" height="15.0" fill="rgb(212,226,31)" rx="2" ry="2" />
<text  x="800.39" y="223.5" ></text>
</g>
<g >
<title>get_page_from_freelist (27 samples, 4.94%)</title><rect x="133.0" y="101" width="58.2" height="15.0" fill="rgb(241,226,45)" rx="2" ry="2" />
<text  x="135.96" y="111.5" >get_pa..</text>
</g>
<g >
<title>unlock_page (2 samples, 0.37%)</title><rect x="439.3" y="165" width="4.3" height="15.0" fill="rgb(250,207,52)" rx="2" ry="2" />
<text  x="442.29" y="175.5" ></text>
</g>
<g >
<title>__unlock_page_memcg (1 samples, 0.18%)</title><rect x="437.1" y="117" width="2.2" height="15.0" fill="rgb(245,40,43)" rx="2" ry="2" />
<text  x="440.13" y="127.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (8 samples, 1.46%)</title><rect x="1082.1" y="277" width="17.3" height="15.0" fill="rgb(252,214,3)" rx="2" ry="2" />
<text  x="1085.14" y="287.5" ></text>
</g>
<g >
<title>__radix_tree_create (3 samples, 0.55%)</title><rect x="225.7" y="101" width="6.5" height="15.0" fill="rgb(243,113,29)" rx="2" ry="2" />
<text  x="228.72" y="111.5" ></text>
</g>
<g >
<title>rcu_check_callbacks (2 samples, 0.37%)</title><rect x="1088.6" y="213" width="4.3" height="15.0" fill="rgb(233,164,16)" rx="2" ry="2" />
<text  x="1091.61" y="223.5" ></text>
</g>
<g >
<title>add_transaction_credits (2 samples, 0.37%)</title><rect x="51.0" y="133" width="4.3" height="15.0" fill="rgb(229,13,7)" rx="2" ry="2" />
<text  x="53.99" y="143.5" ></text>
</g>
<g >
<title>irq_exit (6 samples, 1.10%)</title><rect x="1101.6" y="293" width="12.9" height="15.0" fill="rgb(229,123,8)" rx="2" ry="2" />
<text  x="1104.55" y="303.5" ></text>
</g>
<g >
<title>_perf_event_enable (77 samples, 14.08%)</title><rect x="890.1" y="293" width="166.2" height="15.0" fill="rgb(248,223,13)" rx="2" ry="2" />
<text  x="893.15" y="303.5" >_perf_event_enable</text>
</g>
<g >
<title>rcu_eqs_enter_common.constprop.71 (1 samples, 0.18%)</title><rect x="1110.2" y="261" width="2.1" height="15.0" fill="rgb(216,160,39)" rx="2" ry="2" />
<text  x="1113.18" y="271.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (19 samples, 3.47%)</title><rect x="193.4" y="133" width="41.0" height="15.0" fill="rgb(239,115,40)" rx="2" ry="2" />
<text  x="196.36" y="143.5" >__a..</text>
</g>
<g >
<title>start_this_handle (13 samples, 2.38%)</title><rect x="27.3" y="149" width="28.0" height="15.0" fill="rgb(238,199,36)" rx="2" ry="2" />
<text  x="30.26" y="159.5" >s..</text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.18%)</title><rect x="1187.8" y="357" width="2.2" height="15.0" fill="rgb(206,137,0)" rx="2" ry="2" />
<text  x="1190.84" y="367.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (7 samples, 1.28%)</title><rect x="365.9" y="101" width="15.1" height="15.0" fill="rgb(214,217,46)" rx="2" ry="2" />
<text  x="368.94" y="111.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 11.70%)</title><rect x="918.2" y="181" width="138.1" height="15.0" fill="rgb(237,227,50)" rx="2" ry="2" />
<text  x="921.19" y="191.5" >ctx_resched</text>
</g>
<g >
<title>__fdget (1 samples, 0.18%)</title><rect x="866.4" y="341" width="2.2" height="15.0" fill="rgb(248,33,10)" rx="2" ry="2" />
<text  x="869.42" y="351.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 11.70%)</title><rect x="918.2" y="165" width="138.1" height="15.0" fill="rgb(209,211,47)" rx="2" ry="2" />
<text  x="921.19" y="175.5" >x86_pmu_enable</text>
</g>
<g >
<title>__es_remove_extent (1 samples, 0.18%)</title><rect x="113.5" y="133" width="2.2" height="15.0" fill="rgb(215,59,31)" rx="2" ry="2" />
<text  x="116.55" y="143.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.18%)</title><rect x="1097.2" y="181" width="2.2" height="15.0" fill="rgb(234,46,41)" rx="2" ry="2" />
<text  x="1100.24" y="191.5" ></text>
</g>
<g >
<title>node_page_state (1 samples, 0.18%)</title><rect x="182.6" y="69" width="2.1" height="15.0" fill="rgb(249,201,54)" rx="2" ry="2" />
<text  x="185.58" y="79.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.18%)</title><rect x="1108.0" y="165" width="2.2" height="15.0" fill="rgb(253,139,33)" rx="2" ry="2" />
<text  x="1111.03" y="175.5" ></text>
</g>
<g >
<title>generic_write_end (2 samples, 0.37%)</title><rect x="872.9" y="245" width="4.3" height="15.0" fill="rgb(238,65,41)" rx="2" ry="2" />
<text  x="875.89" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.55%)</title><rect x="18.6" y="149" width="6.5" height="15.0" fill="rgb(229,203,44)" rx="2" ry="2" />
<text  x="21.63" y="159.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.18%)</title><rect x="1082.1" y="245" width="2.2" height="15.0" fill="rgb(249,174,54)" rx="2" ry="2" />
<text  x="1085.14" y="255.5" ></text>
</g>
<g >
<title>tick_nohz_irq_exit (1 samples, 0.18%)</title><rect x="1112.3" y="277" width="2.2" height="15.0" fill="rgb(247,6,8)" rx="2" ry="2" />
<text  x="1115.34" y="287.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.18%)</title><rect x="1099.4" y="261" width="2.2" height="15.0" fill="rgb(218,3,50)" rx="2" ry="2" />
<text  x="1102.40" y="271.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.18%)</title><rect x="1105.9" y="181" width="2.1" height="15.0" fill="rgb(239,29,43)" rx="2" ry="2" />
<text  x="1108.87" y="191.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (3 samples, 0.55%)</title><rect x="560.1" y="197" width="6.5" height="15.0" fill="rgb(240,222,46)" rx="2" ry="2" />
<text  x="563.09" y="207.5" ></text>
</g>
<g >
<title>swapper (62 samples, 11.33%)</title><rect x="1056.3" y="453" width="133.7" height="15.0" fill="rgb(219,155,16)" rx="2" ry="2" />
<text  x="1059.25" y="463.5" >swapper</text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.18%)</title><rect x="117.9" y="133" width="2.1" height="15.0" fill="rgb(228,121,49)" rx="2" ry="2" />
<text  x="120.86" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 1.28%)</title><rect x="868.6" y="389" width="15.1" height="15.0" fill="rgb(223,128,9)" rx="2" ry="2" />
<text  x="871.57" y="399.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (13 samples, 2.38%)</title><rect x="266.7" y="165" width="28.1" height="15.0" fill="rgb(213,25,24)" rx="2" ry="2" />
<text  x="269.71" y="175.5" >j..</text>
</g>
<g >
<title>node_dirty_ok (5 samples, 0.91%)</title><rect x="173.9" y="85" width="10.8" height="15.0" fill="rgb(219,197,7)" rx="2" ry="2" />
<text  x="176.95" y="95.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (3 samples, 0.55%)</title><rect x="1058.4" y="405" width="6.5" height="15.0" fill="rgb(208,45,39)" rx="2" ry="2" />
<text  x="1061.41" y="415.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.18%)</title><rect x="1179.2" y="373" width="2.2" height="15.0" fill="rgb(241,205,20)" rx="2" ry="2" />
<text  x="1182.21" y="383.5" ></text>
</g>
<g >
<title>__vfs_read (130 samples, 23.77%)</title><rect x="575.2" y="293" width="280.4" height="15.0" fill="rgb(230,89,35)" rx="2" ry="2" />
<text  x="578.19" y="303.5" >__vfs_read</text>
</g>
<g >
<title>from_kprojid (1 samples, 0.18%)</title><rect x="357.3" y="101" width="2.2" height="15.0" fill="rgb(238,101,52)" rx="2" ry="2" />
<text  x="360.31" y="111.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (113 samples, 20.66%)</title><rect x="18.6" y="197" width="243.8" height="15.0" fill="rgb(229,190,46)" rx="2" ry="2" />
<text  x="21.63" y="207.5" >ext4_da_write_begin</text>
</g>
<g >
<title>do_vfs_ioctl (78 samples, 14.26%)</title><rect x="888.0" y="341" width="168.3" height="15.0" fill="rgb(222,218,5)" rx="2" ry="2" />
<text  x="890.99" y="351.5" >do_vfs_ioctl</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (133 samples, 24.31%)</title><rect x="573.0" y="357" width="286.9" height="15.0" fill="rgb(231,124,17)" rx="2" ry="2" />
<text  x="576.03" y="367.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__set_page_dirty (1 samples, 0.18%)</title><rect x="875.0" y="197" width="2.2" height="15.0" fill="rgb(205,226,33)" rx="2" ry="2" />
<text  x="878.05" y="207.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (31 samples, 5.67%)</title><rect x="124.3" y="117" width="66.9" height="15.0" fill="rgb(246,172,35)" rx="2" ry="2" />
<text  x="127.33" y="127.5" >__alloc..</text>
</g>
<g >
<title>__inc_node_state (1 samples, 0.18%)</title><rect x="202.0" y="117" width="2.1" height="15.0" fill="rgb(252,202,36)" rx="2" ry="2" />
<text  x="204.99" y="127.5" ></text>
</g>
<g >
<title>generic_exec_single (65 samples, 11.88%)</title><rect x="916.0" y="245" width="140.3" height="15.0" fill="rgb(245,3,28)" rx="2" ry="2" />
<text  x="919.03" y="255.5" >generic_exec_single</text>
</g>
<g >
<title>tick_sched_timer (5 samples, 0.91%)</title><rect x="1088.6" y="261" width="10.8" height="15.0" fill="rgb(233,166,26)" rx="2" ry="2" />
<text  x="1091.61" y="271.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (28 samples, 5.12%)</title><rect x="301.2" y="117" width="60.4" height="15.0" fill="rgb(250,80,5)" rx="2" ry="2" />
<text  x="304.22" y="127.5" >ext4_m..</text>
</g>
<g >
<title>memset_erms (1 samples, 0.18%)</title><rect x="25.1" y="149" width="2.2" height="15.0" fill="rgb(244,93,25)" rx="2" ry="2" />
<text  x="28.10" y="159.5" ></text>
</g>
<g >
<title>destroy_conntrack (1 samples, 0.18%)</title><rect x="1067.0" y="325" width="2.2" height="15.0" fill="rgb(215,91,23)" rx="2" ry="2" />
<text  x="1070.04" y="335.5" ></text>
</g>
<g >
<title>alloc_buffer_head (5 samples, 0.91%)</title><rect x="74.7" y="133" width="10.8" height="15.0" fill="rgb(254,194,50)" rx="2" ry="2" />
<text  x="77.72" y="143.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.18%)</title><rect x="1108.0" y="181" width="2.2" height="15.0" fill="rgb(247,141,30)" rx="2" ry="2" />
<text  x="1111.03" y="191.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (7 samples, 1.28%)</title><rect x="868.6" y="293" width="15.1" height="15.0" fill="rgb(245,51,38)" rx="2" ry="2" />
<text  x="871.57" y="303.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.18%)</title><rect x="230.0" y="53" width="2.2" height="15.0" fill="rgb(212,69,43)" rx="2" ry="2" />
<text  x="233.04" y="63.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.37%)</title><rect x="100.6" y="149" width="4.3" height="15.0" fill="rgb(252,184,49)" rx="2" ry="2" />
<text  x="103.60" y="159.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.55%)</title><rect x="74.7" y="117" width="6.5" height="15.0" fill="rgb(239,48,41)" rx="2" ry="2" />
<text  x="77.72" y="127.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.18%)</title><rect x="1084.3" y="245" width="2.2" height="15.0" fill="rgb(233,65,36)" rx="2" ry="2" />
<text  x="1087.30" y="255.5" ></text>
</g>
<g >
<title>rebalance_domains (2 samples, 0.37%)</title><rect x="1101.6" y="245" width="4.3" height="15.0" fill="rgb(247,50,43)" rx="2" ry="2" />
<text  x="1104.55" y="255.5" ></text>
</g>
<g >
<title>do_sys_poll (2 samples, 0.37%)</title><rect x="864.3" y="357" width="4.3" height="15.0" fill="rgb(215,136,29)" rx="2" ry="2" />
<text  x="867.26" y="367.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (2 samples, 0.37%)</title><rect x="877.2" y="261" width="4.3" height="15.0" fill="rgb(249,196,19)" rx="2" ry="2" />
<text  x="880.20" y="271.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.18%)</title><rect x="1075.7" y="309" width="2.1" height="15.0" fill="rgb(237,110,10)" rx="2" ry="2" />
<text  x="1078.67" y="319.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.18%)</title><rect x="79.0" y="85" width="2.2" height="15.0" fill="rgb(208,116,51)" rx="2" ry="2" />
<text  x="82.03" y="95.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.18%)</title><rect x="230.0" y="69" width="2.2" height="15.0" fill="rgb(209,13,43)" rx="2" ry="2" />
<text  x="233.04" y="79.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.18%)</title><rect x="1183.5" y="309" width="2.2" height="15.0" fill="rgb(238,198,17)" rx="2" ry="2" />
<text  x="1186.53" y="319.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (17 samples, 3.11%)</title><rect x="18.6" y="181" width="36.7" height="15.0" fill="rgb(234,210,36)" rx="2" ry="2" />
<text  x="21.63" y="191.5" >__e..</text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (3 samples, 0.55%)</title><rect x="12.2" y="197" width="6.4" height="15.0" fill="rgb(242,82,28)" rx="2" ry="2" />
<text  x="15.16" y="207.5" ></text>
</g>
<g >
<title>pagevec_lookup_range (3 samples, 0.55%)</title><rect x="63.9" y="149" width="6.5" height="15.0" fill="rgb(236,41,14)" rx="2" ry="2" />
<text  x="66.93" y="159.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (7 samples, 1.28%)</title><rect x="868.6" y="309" width="15.1" height="15.0" fill="rgb(213,39,17)" rx="2" ry="2" />
<text  x="871.57" y="319.5" ></text>
</g>
<g >
<title>do_idle (55 samples, 10.05%)</title><rect x="1071.4" y="389" width="118.6" height="15.0" fill="rgb(219,53,45)" rx="2" ry="2" />
<text  x="1074.35" y="399.5" >do_idle</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (79 samples, 14.44%)</title><rect x="885.8" y="389" width="170.5" height="15.0" fill="rgb(229,59,53)" rx="2" ry="2" />
<text  x="888.83" y="399.5" >entry_SYSCALL_64_after..</text>
</g>
<g >
<title>ext4_dirty_inode (40 samples, 7.31%)</title><rect x="294.8" y="149" width="86.2" height="15.0" fill="rgb(250,148,50)" rx="2" ry="2" />
<text  x="297.75" y="159.5" >ext4_dirty..</text>
</g>
<g >
<title>nf_conntrack_free (1 samples, 0.18%)</title><rect x="1067.0" y="309" width="2.2" height="15.0" fill="rgb(230,136,2)" rx="2" ry="2" />
<text  x="1070.04" y="319.5" ></text>
</g>
<g >
<title>jbd2__journal_start (17 samples, 3.11%)</title><rect x="18.6" y="165" width="36.7" height="15.0" fill="rgb(233,223,39)" rx="2" ry="2" />
<text  x="21.63" y="175.5" >jbd..</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.18%)</title><rect x="191.2" y="117" width="2.2" height="15.0" fill="rgb(250,94,24)" rx="2" ry="2" />
<text  x="194.21" y="127.5" ></text>
</g>
<g >
<title>format_decode (1 samples, 0.18%)</title><rect x="883.7" y="213" width="2.1" height="15.0" fill="rgb(229,99,18)" rx="2" ry="2" />
<text  x="886.67" y="223.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.18%)</title><rect x="870.7" y="245" width="2.2" height="15.0" fill="rgb(236,168,40)" rx="2" ry="2" />
<text  x="873.73" y="255.5" ></text>
</g>
<g >
<title>node_page_state (3 samples, 0.55%)</title><rect x="184.7" y="85" width="6.5" height="15.0" fill="rgb(220,167,29)" rx="2" ry="2" />
<text  x="187.73" y="95.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.73%)</title><rect x="210.6" y="117" width="8.7" height="15.0" fill="rgb(235,26,47)" rx="2" ry="2" />
<text  x="213.62" y="127.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (5 samples, 0.91%)</title><rect x="236.5" y="85" width="10.8" height="15.0" fill="rgb(240,92,47)" rx="2" ry="2" />
<text  x="239.51" y="95.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.18%)</title><rect x="1086.5" y="261" width="2.1" height="15.0" fill="rgb(231,140,10)" rx="2" ry="2" />
<text  x="1089.45" y="271.5" ></text>
</g>
</g>
</svg>
