<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="774.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="757" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="757" > </text>
<g id="frames">
<g >
<title>load_elf_binary (202,282,892 samples, 3.40%)</title><rect x="469.7" y="469" width="40.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="472.68" y="479.5" >loa..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (2,778,149,227 samples, 46.63%)</title><rect x="639.7" y="693" width="550.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="642.75" y="703.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>syscall_exit_to_user_mode (51,509,360 samples, 0.86%)</title><rect x="251.7" y="645" width="10.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="254.71" y="655.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (5,565,722 samples, 0.09%)</title><rect x="509.7" y="629" width="1.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="512.75" y="639.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (101,531,522 samples, 1.70%)</title><rect x="1153.9" y="597" width="20.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1156.87" y="607.5" ></text>
</g>
<g >
<title>do_read_fault (163,763,797 samples, 2.75%)</title><rect x="437.2" y="565" width="32.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="440.25" y="575.5" >do..</text>
</g>
<g >
<title>balance_dirty_pages_ratelimited_flags (215,405,816 samples, 3.62%)</title><rect x="510.8" y="325" width="42.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="513.85" y="335.5" >bala..</text>
</g>
<g >
<title>asm_exc_page_fault (163,763,797 samples, 2.75%)</title><rect x="437.2" y="677" width="32.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="440.25" y="687.5" >as..</text>
</g>
<g >
<title>napi_consume_skb (35,842,300 samples, 0.60%)</title><rect x="373.0" y="277" width="7.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="376.03" y="287.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (40,622,024 samples, 0.68%)</title><rect x="1181.9" y="565" width="8.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1184.87" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (119,973,620 samples, 2.01%)</title><rect x="1038.2" y="581" width="23.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1041.21" y="591.5" >t..</text>
</g>
<g >
<title>read_tsc (41,600,187 samples, 0.70%)</title><rect x="234.6" y="501" width="8.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="237.59" y="511.5" ></text>
</g>
<g >
<title>__schedule (281,541,648 samples, 4.73%)</title><rect x="63.0" y="469" width="55.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="66.05" y="479.5" >__sch..</text>
</g>
<g >
<title>remote_function (5,565,722 samples, 0.09%)</title><rect x="509.7" y="405" width="1.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="512.75" y="415.5" ></text>
</g>
<g >
<title>tcp_write_xmit (347,161,726 samples, 5.83%)</title><rect x="319.5" y="517" width="68.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="322.46" y="527.5" >tcp_wri..</text>
</g>
<g >
<title>menu_select (50,692,309 samples, 0.85%)</title><rect x="1062.0" y="613" width="10.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1064.97" y="623.5" ></text>
</g>
<g >
<title>cpu_startup_entry (80,871,015 samples, 1.36%)</title><rect x="1174.0" y="597" width="16.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1176.98" y="607.5" ></text>
</g>
<g >
<title>run_rebalance_domains (160,068,745 samples, 2.69%)</title><rect x="710.1" y="485" width="31.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="713.06" y="495.5" >ru..</text>
</g>
<g >
<title>do_flush_stats (215,405,816 samples, 3.62%)</title><rect x="510.8" y="277" width="42.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="513.85" y="287.5" >do_f..</text>
</g>
<g >
<title>tick_sched_handle (137,909,693 samples, 2.31%)</title><rect x="682.7" y="469" width="27.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="685.75" y="479.5" >t..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,220,343,728 samples, 20.48%)</title><rect x="10.0" y="677" width="241.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__GI_execve (202,282,892 samples, 3.40%)</title><rect x="469.7" y="629" width="40.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="472.68" y="639.5" >__G..</text>
</g>
<g >
<title>__ip_queue_xmit (347,161,726 samples, 5.83%)</title><rect x="319.5" y="469" width="68.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="322.46" y="479.5" >__ip_qu..</text>
</g>
<g >
<title>mem_cgroup_wb_stats (215,405,816 samples, 3.62%)</title><rect x="510.8" y="293" width="42.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="513.85" y="303.5" >mem_..</text>
</g>
<g >
<title>balance_dirty_pages (215,405,816 samples, 3.62%)</title><rect x="510.8" y="309" width="42.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="513.85" y="319.5" >bala..</text>
</g>
<g >
<title>_perf_event_enable (5,565,722 samples, 0.09%)</title><rect x="509.7" y="469" width="1.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="512.75" y="479.5" ></text>
</g>
<g >
<title>psi_group_change (58,999,135 samples, 0.99%)</title><rect x="1142.2" y="581" width="11.7" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1145.19" y="591.5" ></text>
</g>
<g >
<title>ovl_write_iter (215,405,816 samples, 3.62%)</title><rect x="510.8" y="453" width="42.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="513.85" y="463.5" >ovl_..</text>
</g>
<g >
<title>do_syscall_64 (5,565,722 samples, 0.09%)</title><rect x="509.7" y="565" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="512.75" y="575.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (40,622,024 samples, 0.68%)</title><rect x="1181.9" y="517" width="8.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1184.87" y="527.5" ></text>
</g>
<g >
<title>dequeue_entity (47,509,569 samples, 0.80%)</title><rect x="74.8" y="421" width="9.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="77.83" y="431.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (51,692,045 samples, 0.87%)</title><rect x="352.7" y="53" width="10.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="355.75" y="63.5" ></text>
</g>
<g >
<title>update_load_avg (40,850,025 samples, 0.69%)</title><rect x="1092.9" y="517" width="8.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1095.90" y="527.5" ></text>
</g>
<g >
<title>x64_sys_call (215,405,816 samples, 3.62%)</title><rect x="510.8" y="517" width="42.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="513.85" y="527.5" >x64_..</text>
</g>
<g >
<title>__sk_mem_raise_allocated (39,071,130 samples, 0.66%)</title><rect x="429.5" y="517" width="7.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="432.51" y="527.5" ></text>
</g>
<g >
<title>[unknown] (202,282,892 samples, 3.40%)</title><rect x="469.7" y="693" width="40.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="472.68" y="703.5" >[un..</text>
</g>
<g >
<title>mem_cgroup_css_rstat_flush (215,405,816 samples, 3.62%)</title><rect x="510.8" y="229" width="42.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="513.85" y="239.5" >mem_..</text>
</g>
<g >
<title>sched_clock_noinstr (51,768,210 samples, 0.87%)</title><rect x="1113.5" y="533" width="10.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1116.49" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (408,966,903 samples, 6.86%)</title><rect x="660.8" y="565" width="81.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="663.77" y="575.5" >asm_sysve..</text>
</g>
<g >
<title>__raw_spin_lock_irqsave (51,646,431 samples, 0.87%)</title><rect x="1051.7" y="501" width="10.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1054.74" y="511.5" ></text>
</g>
<g >
<title>mod_memcg_state (39,071,130 samples, 0.66%)</title><rect x="429.5" y="485" width="7.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="432.51" y="495.5" ></text>
</g>
<g >
<title>handle_mm_fault (163,763,797 samples, 2.75%)</title><rect x="437.2" y="629" width="32.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="440.25" y="639.5" >ha..</text>
</g>
<g >
<title>sock_recvmsg (1,176,439,648 samples, 19.75%)</title><rect x="18.7" y="597" width="233.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="21.70" y="607.5" >sock_recvmsg</text>
</g>
<g >
<title>perf_ioctl (5,565,722 samples, 0.09%)</title><rect x="509.7" y="517" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="512.75" y="527.5" ></text>
</g>
<g >
<title>pick_next_task (51,658,786 samples, 0.87%)</title><rect x="84.2" y="453" width="10.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="87.24" y="463.5" ></text>
</g>
<g >
<title>loopback (2,320,873,507 samples, 38.96%)</title><rect x="10.0" y="709" width="459.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >loopback</text>
</g>
<g >
<title>__netif_receive_skb (228,822,505 samples, 3.84%)</title><rect x="327.7" y="245" width="45.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="330.71" y="255.5" >__ne..</text>
</g>
<g >
<title>__x64_sys_execve (202,282,892 samples, 3.40%)</title><rect x="469.7" y="565" width="40.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="472.68" y="575.5" >__x..</text>
</g>
<g >
<title>perf_evsel__enable_cpu (5,565,722 samples, 0.09%)</title><rect x="509.7" y="645" width="1.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="512.75" y="655.5" ></text>
</g>
<g >
<title>alloc_pages (83,705,656 samples, 1.41%)</title><rect x="272.0" y="517" width="16.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="275.03" y="527.5" ></text>
</g>
<g >
<title>do_filp_open (202,282,892 samples, 3.40%)</title><rect x="469.7" y="421" width="40.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="472.68" y="431.5" >do_..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (51,509,360 samples, 0.86%)</title><rect x="251.7" y="613" width="10.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="254.71" y="623.5" ></text>
</g>
<g >
<title>cpuidle_select (210,224,652 samples, 3.53%)</title><rect x="1020.3" y="613" width="41.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1023.33" y="623.5" >cpu..</text>
</g>
<g >
<title>sched_clock_cpu (51,768,210 samples, 0.87%)</title><rect x="1113.5" y="565" width="10.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1116.49" y="575.5" ></text>
</g>
<g >
<title>ttwu_do_activate (103,938,738 samples, 1.74%)</title><rect x="1092.9" y="581" width="20.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1095.90" y="591.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (145,264,259 samples, 2.44%)</title><rect x="344.3" y="133" width="28.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="347.26" y="143.5" >tc..</text>
</g>
<g >
<title>__alloc_skb (91,145,804 samples, 1.53%)</title><rect x="403.0" y="533" width="18.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="406.03" y="543.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (306,322,490 samples, 5.14%)</title><rect x="319.5" y="341" width="60.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="322.46" y="351.5" >__loca..</text>
</g>
<g >
<title>ip_finish_output (347,161,726 samples, 5.83%)</title><rect x="319.5" y="421" width="68.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="322.46" y="431.5" >ip_fini..</text>
</g>
<g >
<title>__check_object_size.part.0 (56,443,676 samples, 0.95%)</title><rect x="288.6" y="517" width="11.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="291.61" y="527.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (389,326,691 samples, 6.53%)</title><rect x="118.8" y="533" width="77.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="121.81" y="543.5" >skb_copy..</text>
</g>
<g >
<title>memchr_inv (105,480,626 samples, 1.77%)</title><rect x="1072.0" y="565" width="20.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1075.01" y="575.5" ></text>
</g>
<g >
<title>update_blocked_averages (160,068,745 samples, 2.69%)</title><rect x="710.1" y="469" width="31.7" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="713.06" y="479.5" >up..</text>
</g>
<g >
<title>perf_event_for_each_child (5,565,722 samples, 0.09%)</title><rect x="509.7" y="485" width="1.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="512.75" y="495.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (155,706,948 samples, 2.61%)</title><rect x="1092.9" y="613" width="30.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1095.90" y="623.5" >__..</text>
</g>
<g >
<title>update_load_avg (63,088,713 samples, 1.06%)</title><rect x="1101.0" y="533" width="12.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1103.99" y="543.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,697,278,212 samples, 45.27%)</title><rect x="639.7" y="661" width="534.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="642.75" y="671.5" >cpu_startup_entry</text>
</g>
<g >
<title>tcp_recvmsg_locked (1,084,998,836 samples, 18.21%)</title><rect x="27.9" y="549" width="214.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="30.93" y="559.5" >tcp_recvmsg_locked</text>
</g>
<g >
<title>sock_def_readable (51,692,045 samples, 0.87%)</title><rect x="352.7" y="69" width="10.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="355.75" y="79.5" ></text>
</g>
<g >
<title>x64_sys_call (202,282,892 samples, 3.40%)</title><rect x="469.7" y="581" width="40.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="472.68" y="591.5" >x64..</text>
</g>
<g >
<title>_perf_ioctl (5,565,722 samples, 0.09%)</title><rect x="509.7" y="501" width="1.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="512.75" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (51,646,431 samples, 0.87%)</title><rect x="1051.7" y="517" width="10.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1054.74" y="527.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (347,161,726 samples, 5.83%)</title><rect x="319.5" y="533" width="68.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="322.46" y="543.5" >__tcp_p..</text>
</g>
<g >
<title>native_write_msr (5,565,722 samples, 0.09%)</title><rect x="509.7" y="293" width="1.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="512.75" y="303.5" ></text>
</g>
<g >
<title>event_function_call (5,565,722 samples, 0.09%)</title><rect x="509.7" y="453" width="1.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="512.75" y="463.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5,565,722 samples, 0.09%)</title><rect x="509.7" y="309" width="1.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="512.75" y="319.5" ></text>
</g>
<g >
<title>schedule (281,541,648 samples, 4.73%)</title><rect x="63.0" y="485" width="55.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.05" y="495.5" >sched..</text>
</g>
<g >
<title>neigh_hh_output (347,161,726 samples, 5.83%)</title><rect x="319.5" y="373" width="68.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="322.46" y="383.5" >neigh_h..</text>
</g>
<g >
<title>tcp_sendmsg_locked (834,162,644 samples, 14.00%)</title><rect x="272.0" y="565" width="165.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="275.03" y="575.5" >tcp_sendmsg_locked</text>
</g>
<g >
<title>__sys_sendto (885,256,622 samples, 14.86%)</title><rect x="261.9" y="613" width="175.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="264.91" y="623.5" >__sys_sendto</text>
</g>
<g >
<title>__netif_receive_skb_one_core (228,822,505 samples, 3.84%)</title><rect x="327.7" y="229" width="45.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="330.71" y="239.5" >__ne..</text>
</g>
<g >
<title>x64_sys_call (5,565,722 samples, 0.09%)</title><rect x="509.7" y="549" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="512.75" y="559.5" ></text>
</g>
<g >
<title>__switch_to_asm (94,294,797 samples, 1.58%)</title><rect x="611.1" y="693" width="18.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="614.13" y="703.5" ></text>
</g>
<g >
<title>tcp_skb_entail (38,756,324 samples, 0.65%)</title><rect x="388.2" y="549" width="7.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="391.22" y="559.5" ></text>
</g>
<g >
<title>start_kernel (80,871,015 samples, 1.36%)</title><rect x="1174.0" y="645" width="16.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1176.98" y="655.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (202,282,892 samples, 3.40%)</title><rect x="469.7" y="389" width="40.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="472.68" y="399.5" >lin..</text>
</g>
<g >
<title>__tcp_transmit_skb (347,161,726 samples, 5.83%)</title><rect x="319.5" y="501" width="68.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="322.46" y="511.5" >__tcp_t..</text>
</g>
<g >
<title>__dev_queue_xmit (347,161,726 samples, 5.83%)</title><rect x="319.5" y="357" width="68.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="322.46" y="367.5" >__dev_q..</text>
</g>
<g >
<title>sched_clock (160,068,745 samples, 2.69%)</title><rect x="710.1" y="437" width="31.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="713.06" y="447.5" >sc..</text>
</g>
<g >
<title>__handle_mm_fault (163,763,797 samples, 2.75%)</title><rect x="437.2" y="613" width="32.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="440.25" y="623.5" >__..</text>
</g>
<g >
<title>ct_idle_exit (47,895,755 samples, 0.80%)</title><rect x="741.8" y="565" width="9.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="744.77" y="575.5" ></text>
</g>
<g >
<title>generic_perform_write (215,405,816 samples, 3.62%)</title><rect x="510.8" y="357" width="42.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="513.85" y="367.5" >gene..</text>
</g>
<g >
<title>__sys_recvfrom (1,176,439,648 samples, 19.75%)</title><rect x="18.7" y="613" width="233.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="21.70" y="623.5" >__sys_recvfrom</text>
</g>
<g >
<title>update_rq_clock (51,768,210 samples, 0.87%)</title><rect x="1113.5" y="581" width="10.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1116.49" y="591.5" ></text>
</g>
<g >
<title>next_uptodate_page (163,763,797 samples, 2.75%)</title><rect x="437.2" y="533" width="32.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="440.25" y="543.5" >ne..</text>
</g>
<g >
<title>perf_mmap__push (215,405,816 samples, 3.62%)</title><rect x="510.8" y="629" width="42.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="513.85" y="639.5" >perf..</text>
</g>
<g >
<title>filemap_map_pages (163,763,797 samples, 2.75%)</title><rect x="437.2" y="549" width="32.5" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="440.25" y="559.5" >fi..</text>
</g>
<g >
<title>_copy_from_iter (99,314,185 samples, 1.67%)</title><rect x="299.8" y="533" width="19.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="302.79" y="543.5" ></text>
</g>
<g >
<title>exec_binprm (202,282,892 samples, 3.40%)</title><rect x="469.7" y="501" width="40.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="472.68" y="511.5" >exe..</text>
</g>
<g >
<title>simple_get_link (202,282,892 samples, 3.40%)</title><rect x="469.7" y="309" width="40.0" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="472.68" y="319.5" >sim..</text>
</g>
<g >
<title>tcp_data_ready (51,692,045 samples, 0.87%)</title><rect x="352.7" y="85" width="10.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="355.75" y="95.5" ></text>
</g>
<g >
<title>__check_object_size (56,443,676 samples, 0.95%)</title><rect x="288.6" y="533" width="11.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="291.61" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (101,531,522 samples, 1.70%)</title><rect x="1153.9" y="629" width="20.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1156.87" y="639.5" ></text>
</g>
<g >
<title>call_cpuidle (1,921,511,398 samples, 32.25%)</title><rect x="639.7" y="613" width="380.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="642.75" y="623.5" >call_cpuidle</text>
</g>
<g >
<title>[unknown] (220,971,538 samples, 3.71%)</title><rect x="509.7" y="693" width="43.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="512.75" y="703.5" >[unk..</text>
</g>
<g >
<title>x86_pmu_enable (5,565,722 samples, 0.09%)</title><rect x="509.7" y="325" width="1.1" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="512.75" y="335.5" ></text>
</g>
<g >
<title>all (5,957,678,346 samples, 100%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>__cmd_record.constprop.54 (202,282,892 samples, 3.40%)</title><rect x="469.7" y="677" width="40.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="472.68" y="687.5" >__c..</text>
</g>
<g >
<title>call_cpuidle (40,622,024 samples, 0.68%)</title><rect x="1181.9" y="549" width="8.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1184.87" y="559.5" ></text>
</g>
<g >
<title>ip_local_deliver (228,822,505 samples, 3.84%)</title><rect x="327.7" y="197" width="45.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="330.71" y="207.5" >ip_l..</text>
</g>
<g >
<title>llist_reverse_order (41,077,538 samples, 0.69%)</title><rect x="1123.7" y="613" width="8.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1126.74" y="623.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (51,509,360 samples, 0.86%)</title><rect x="251.7" y="629" width="10.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="254.71" y="639.5" ></text>
</g>
<g >
<title>ip_finish_output2 (347,161,726 samples, 5.83%)</title><rect x="319.5" y="389" width="68.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="322.46" y="399.5" >ip_fini..</text>
</g>
<g >
<title>__sk_mem_schedule (39,071,130 samples, 0.66%)</title><rect x="429.5" y="533" width="7.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="432.51" y="543.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (196,784,486 samples, 3.30%)</title><rect x="1092.9" y="629" width="39.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1095.90" y="639.5" >flu..</text>
</g>
<g >
<title>tcp_push (347,161,726 samples, 5.83%)</title><rect x="319.5" y="549" width="68.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="322.46" y="559.5" >tcp_push</text>
</g>
<g >
<title>start_secondary (2,697,278,212 samples, 45.27%)</title><rect x="639.7" y="677" width="534.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="642.75" y="687.5" >start_secondary</text>
</g>
<g >
<title>__ip_finish_output (347,161,726 samples, 5.83%)</title><rect x="319.5" y="405" width="68.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="322.46" y="415.5" >__ip_fi..</text>
</g>
<g >
<title>pick_link (202,282,892 samples, 3.40%)</title><rect x="469.7" y="341" width="40.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="472.68" y="351.5" >pic..</text>
</g>
<g >
<title>native_sched_clock (51,768,210 samples, 0.87%)</title><rect x="1113.5" y="517" width="10.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1116.49" y="527.5" ></text>
</g>
<g >
<title>perf-exec (202,282,892 samples, 3.40%)</title><rect x="469.7" y="709" width="40.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="472.68" y="719.5" >per..</text>
</g>
<g >
<title>cpuidle_enter (1,921,511,398 samples, 32.25%)</title><rect x="639.7" y="597" width="380.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="642.75" y="607.5" >cpuidle_enter</text>
</g>
<g >
<title>skb_release_data (35,842,300 samples, 0.60%)</title><rect x="373.0" y="261" width="7.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="376.03" y="271.5" ></text>
</g>
<g >
<title>local_touch_nmi (52,054,084 samples, 0.87%)</title><rect x="1131.9" y="629" width="10.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1134.88" y="639.5" ></text>
</g>
<g >
<title>__schedule (58,999,135 samples, 0.99%)</title><rect x="1142.2" y="613" width="11.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1145.19" y="623.5" ></text>
</g>
<g >
<title>rest_init (80,871,015 samples, 1.36%)</title><rect x="1174.0" y="613" width="16.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1176.98" y="623.5" ></text>
</g>
<g >
<title>do_idle (2,697,278,212 samples, 45.27%)</title><rect x="639.7" y="645" width="534.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="642.75" y="655.5" >do_idle</text>
</g>
<g >
<title>__mod_memcg_state (39,071,130 samples, 0.66%)</title><rect x="429.5" y="469" width="7.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="432.51" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (105,480,626 samples, 1.77%)</title><rect x="1072.0" y="613" width="20.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1075.01" y="623.5" ></text>
</g>
<g >
<title>vfs_iter_write (215,405,816 samples, 3.62%)</title><rect x="510.8" y="437" width="42.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="513.85" y="447.5" >vfs_..</text>
</g>
<g >
<title>inet_recvmsg (1,176,439,648 samples, 19.75%)</title><rect x="18.7" y="581" width="233.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="21.70" y="591.5" >inet_recvmsg</text>
</g>
<g >
<title>copyin (99,314,185 samples, 1.67%)</title><rect x="299.8" y="517" width="19.7" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="302.79" y="527.5" ></text>
</g>
<g >
<title>psi_group_change (51,667,508 samples, 0.87%)</title><rect x="94.5" y="437" width="10.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="97.48" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (248,898,158 samples, 4.18%)</title><rect x="660.8" y="501" width="49.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="663.77" y="511.5" >__hr..</text>
</g>
<g >
<title>psi_task_switch (51,667,508 samples, 0.87%)</title><rect x="94.5" y="453" width="10.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="97.48" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (936,765,982 samples, 15.72%)</title><rect x="251.7" y="677" width="185.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="254.71" y="687.5" >entry_SYSCALL_64_after_h..</text>
</g>
<g >
<title>__perf_event_enable (5,565,722 samples, 0.09%)</title><rect x="509.7" y="373" width="1.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="512.75" y="383.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (68,327,189 samples, 1.15%)</title><rect x="1038.2" y="565" width="13.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1041.21" y="575.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (83,705,656 samples, 1.41%)</title><rect x="272.0" y="549" width="16.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="275.03" y="559.5" ></text>
</g>
<g >
<title>__libc_write (215,405,816 samples, 3.62%)</title><rect x="510.8" y="565" width="42.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="513.85" y="575.5" >__li..</text>
</g>
<g >
<title>tcp_v4_rcv (228,822,505 samples, 3.84%)</title><rect x="327.7" y="149" width="45.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="330.71" y="159.5" >tcp_..</text>
</g>
<g >
<title>ext4_buffered_write_iter (215,405,816 samples, 3.62%)</title><rect x="510.8" y="373" width="42.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="513.85" y="383.5" >ext4..</text>
</g>
<g >
<title>x86_64_start_kernel (80,871,015 samples, 1.36%)</title><rect x="1174.0" y="677" width="16.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1176.98" y="687.5" ></text>
</g>
<g >
<title>evlist__enable (5,565,722 samples, 0.09%)</title><rect x="509.7" y="661" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="512.75" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_write (215,405,816 samples, 3.62%)</title><rect x="510.8" y="501" width="42.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="513.85" y="511.5" >__x6..</text>
</g>
<g >
<title>writen (215,405,816 samples, 3.62%)</title><rect x="510.8" y="597" width="42.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="513.85" y="607.5" >writen</text>
</g>
<g >
<title>event_function (5,565,722 samples, 0.09%)</title><rect x="509.7" y="389" width="1.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="512.75" y="399.5" ></text>
</g>
<g >
<title>quiet_vmstat (105,480,626 samples, 1.77%)</title><rect x="1072.0" y="581" width="20.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1075.01" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (5,565,722 samples, 0.09%)</title><rect x="509.7" y="533" width="1.1" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="512.75" y="543.5" ></text>
</g>
<g >
<title>perf_ctx_enable (5,565,722 samples, 0.09%)</title><rect x="509.7" y="341" width="1.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="512.75" y="351.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (236,814,966 samples, 3.97%)</title><rect x="195.9" y="533" width="46.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="198.92" y="543.5" >tcp_..</text>
</g>
<g >
<title>validate_xmit_skb (40,839,236 samples, 0.69%)</title><rect x="380.1" y="341" width="8.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="383.13" y="351.5" ></text>
</g>
<g >
<title>x64_sys_call (1,176,439,648 samples, 19.75%)</title><rect x="18.7" y="645" width="233.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="21.70" y="655.5" >x64_sys_call</text>
</g>
<g >
<title>walk_component (202,282,892 samples, 3.40%)</title><rect x="469.7" y="373" width="40.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="472.68" y="383.5" >wal..</text>
</g>
<g >
<title>do_fault (163,763,797 samples, 2.75%)</title><rect x="437.2" y="581" width="32.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="440.25" y="591.5" >do..</text>
</g>
<g >
<title>mem_cgroup_charge_skmem (39,071,130 samples, 0.66%)</title><rect x="429.5" y="501" width="7.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="432.51" y="511.5" ></text>
</g>
<g >
<title>do_open_execat (202,282,892 samples, 3.40%)</title><rect x="469.7" y="437" width="40.0" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="472.68" y="447.5" >do_..</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (228,822,505 samples, 3.84%)</title><rect x="327.7" y="165" width="45.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="330.71" y="175.5" >ip_p..</text>
</g>
<g >
<title>cpuidle_idle_call (2,287,908,985 samples, 38.40%)</title><rect x="639.7" y="629" width="453.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="642.75" y="639.5" >cpuidle_idle_call</text>
</g>
<g >
<title>__x64_sys_sendto (885,256,622 samples, 14.86%)</title><rect x="261.9" y="629" width="175.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="264.91" y="639.5" >__x64_sys_sendto</text>
</g>
<g >
<title>tcp_rcv_established (145,264,259 samples, 2.44%)</title><rect x="344.3" y="117" width="28.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="347.26" y="127.5" >tc..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (202,282,892 samples, 3.40%)</title><rect x="469.7" y="613" width="40.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="472.68" y="623.5" >ent..</text>
</g>
<g >
<title>step_into (202,282,892 samples, 3.40%)</title><rect x="469.7" y="357" width="40.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="472.68" y="367.5" >ste..</text>
</g>
<g >
<title>tick_nohz_stop_tick (105,480,626 samples, 1.77%)</title><rect x="1072.0" y="597" width="20.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1075.01" y="607.5" ></text>
</g>
<g >
<title>poll_idle (881,029,582 samples, 14.79%)</title><rect x="845.8" y="565" width="174.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="848.83" y="575.5" >poll_idle</text>
</g>
<g >
<title>get_page_from_freelist (83,705,656 samples, 1.41%)</title><rect x="272.0" y="485" width="16.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="275.03" y="495.5" ></text>
</g>
<g >
<title>tcp_wmem_schedule (39,071,130 samples, 0.66%)</title><rect x="429.5" y="549" width="7.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="432.51" y="559.5" ></text>
</g>
<g >
<title>record__mmap_read_all (215,405,816 samples, 3.62%)</title><rect x="510.8" y="661" width="42.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="513.85" y="671.5" >reco..</text>
</g>
<g >
<title>ct_kernel_exit_state (47,895,755 samples, 0.80%)</title><rect x="741.8" y="549" width="9.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="744.77" y="559.5" ></text>
</g>
<g >
<title>wait_woken (281,541,648 samples, 4.73%)</title><rect x="63.0" y="517" width="55.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="66.05" y="527.5" >wait_..</text>
</g>
<g >
<title>do_idle (80,871,015 samples, 1.36%)</title><rect x="1174.0" y="581" width="16.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1176.98" y="591.5" ></text>
</g>
<g >
<title>enqueue_task_fair (103,938,738 samples, 1.74%)</title><rect x="1092.9" y="549" width="20.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1095.90" y="559.5" ></text>
</g>
<g >
<title>remove_wait_queue (80,988,742 samples, 1.36%)</title><rect x="47.0" y="517" width="16.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="50.01" y="527.5" ></text>
</g>
<g >
<title>_copy_to_iter (389,326,691 samples, 6.53%)</title><rect x="118.8" y="485" width="77.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="121.81" y="495.5" >_copy_to..</text>
</g>
<g >
<title>net_rx_action (306,322,490 samples, 5.14%)</title><rect x="319.5" y="293" width="60.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="322.46" y="303.5" >net_rx..</text>
</g>
<g >
<title>irq_exit_rcu (160,068,745 samples, 2.69%)</title><rect x="710.1" y="533" width="31.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="713.06" y="543.5" >ir..</text>
</g>
<g >
<title>path_openat (202,282,892 samples, 3.40%)</title><rect x="469.7" y="405" width="40.0" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="472.68" y="415.5" >pat..</text>
</g>
<g >
<title>ip_output (347,161,726 samples, 5.83%)</title><rect x="319.5" y="437" width="68.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="322.46" y="447.5" >ip_output</text>
</g>
<g >
<title>simple_copy_to_iter (389,326,691 samples, 6.53%)</title><rect x="118.8" y="501" width="77.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="121.81" y="511.5" >simple_c..</text>
</g>
<g >
<title>tcp_mstamp_refresh (41,600,187 samples, 0.70%)</title><rect x="234.6" y="517" width="8.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="237.59" y="527.5" ></text>
</g>
<g >
<title>add_wait_queue (57,050,901 samples, 0.96%)</title><rect x="35.7" y="517" width="11.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="38.71" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_stop_idle (101,531,522 samples, 1.70%)</title><rect x="1153.9" y="613" width="20.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1156.87" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (215,405,816 samples, 3.62%)</title><rect x="510.8" y="549" width="42.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="513.85" y="559.5" >entr..</text>
</g>
<g >
<title>_dl_runtime_resolve_xsavec (163,763,797 samples, 2.75%)</title><rect x="437.2" y="693" width="32.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="440.25" y="703.5" >_d..</text>
</g>
<g >
<title>record__pushfn (215,405,816 samples, 3.62%)</title><rect x="510.8" y="613" width="42.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="513.85" y="623.5" >reco..</text>
</g>
<g >
<title>__switch_to (59,496,667 samples, 1.00%)</title><rect x="63.0" y="453" width="11.8" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="66.05" y="463.5" ></text>
</g>
<g >
<title>perf (220,971,538 samples, 3.71%)</title><rect x="509.7" y="709" width="43.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="512.75" y="719.5" >perf</text>
</g>
<g >
<title>do_iter_write (215,405,816 samples, 3.62%)</title><rect x="510.8" y="421" width="42.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="513.85" y="431.5" >do_i..</text>
</g>
<g >
<title>__wake_up_common_lock (51,692,045 samples, 0.87%)</title><rect x="352.7" y="37" width="10.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="355.75" y="47.5" ></text>
</g>
<g >
<title>do_syscall_64 (215,405,816 samples, 3.62%)</title><rect x="510.8" y="533" width="42.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="513.85" y="543.5" >do_s..</text>
</g>
<g >
<title>schedule_idle (58,999,135 samples, 0.99%)</title><rect x="1142.2" y="629" width="11.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1145.19" y="639.5" ></text>
</g>
<g >
<title>search_binary_handler (202,282,892 samples, 3.40%)</title><rect x="469.7" y="485" width="40.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="472.68" y="495.5" >sea..</text>
</g>
<g >
<title>do_syscall_64 (936,765,982 samples, 15.72%)</title><rect x="251.7" y="661" width="185.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="254.71" y="671.5" >do_syscall_64</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,565,722 samples, 0.09%)</title><rect x="509.7" y="581" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="512.75" y="591.5" ></text>
</g>
<g >
<title>exc_page_fault (163,763,797 samples, 2.75%)</title><rect x="437.2" y="661" width="32.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="440.25" y="671.5" >ex..</text>
</g>
<g >
<title>__cmd_record.constprop.54 (220,971,538 samples, 3.71%)</title><rect x="509.7" y="677" width="43.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="512.75" y="687.5" >__cm..</text>
</g>
<g >
<title>psi_task_switch (58,999,135 samples, 0.99%)</title><rect x="1142.2" y="597" width="11.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1145.19" y="607.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (80,988,742 samples, 1.36%)</title><rect x="47.0" y="501" width="16.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="50.01" y="511.5" ></text>
</g>
<g >
<title>update_rq_clock (160,068,745 samples, 2.69%)</title><rect x="710.1" y="453" width="31.7" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="713.06" y="463.5" >up..</text>
</g>
<g >
<title>tcp_data_queue (51,692,045 samples, 0.87%)</title><rect x="352.7" y="101" width="10.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="355.75" y="111.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (202,282,892 samples, 3.40%)</title><rect x="469.7" y="549" width="40.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="472.68" y="559.5" >do_..</text>
</g>
<g >
<title>enqueue_task (103,938,738 samples, 1.74%)</title><rect x="1092.9" y="565" width="20.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1095.90" y="575.5" ></text>
</g>
<g >
<title>vfs_write (215,405,816 samples, 3.62%)</title><rect x="510.8" y="469" width="42.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="513.85" y="479.5" >vfs_..</text>
</g>
<g >
<title>ion (215,405,816 samples, 3.62%)</title><rect x="510.8" y="581" width="42.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="513.85" y="591.5" >ion</text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (215,405,816 samples, 3.62%)</title><rect x="510.8" y="341" width="42.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="513.85" y="351.5" >bala..</text>
</g>
<g >
<title>__execvpe (202,282,892 samples, 3.40%)</title><rect x="469.7" y="645" width="40.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="472.68" y="655.5" >__e..</text>
</g>
<g >
<title>check_heap_object (56,443,676 samples, 0.95%)</title><rect x="288.6" y="501" width="11.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="291.61" y="511.5" ></text>
</g>
<g >
<title>ip_rcv (228,822,505 samples, 3.84%)</title><rect x="327.7" y="213" width="45.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="330.71" y="223.5" >ip_rcv</text>
</g>
<g >
<title>schedule_timeout (281,541,648 samples, 4.73%)</title><rect x="63.0" y="501" width="55.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="66.05" y="511.5" >sched..</text>
</g>
<g >
<title>skb_page_frag_refill (83,705,656 samples, 1.41%)</title><rect x="272.0" y="533" width="16.6" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="275.03" y="543.5" ></text>
</g>
<g >
<title>clear_page_erms (41,184,227 samples, 0.69%)</title><rect x="272.0" y="469" width="8.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="275.03" y="479.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (110,988,465 samples, 1.86%)</title><rect x="660.8" y="485" width="21.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="663.77" y="495.5" >e..</text>
</g>
<g >
<title>__do_softirq (160,068,745 samples, 2.69%)</title><rect x="710.1" y="501" width="31.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="713.06" y="511.5" >__..</text>
</g>
<g >
<title>update_rq_clock (71,209,118 samples, 1.20%)</title><rect x="104.7" y="453" width="14.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="107.71" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,220,343,728 samples, 20.48%)</title><rect x="10.0" y="661" width="241.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >do_syscall_64</text>
</g>
<g >
<title>inet_sendmsg (885,256,622 samples, 14.86%)</title><rect x="261.9" y="597" width="175.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="264.91" y="607.5" >inet_sendmsg</text>
</g>
<g >
<title>__raw_spin_lock_irqsave (57,050,901 samples, 0.96%)</title><rect x="35.7" y="485" width="11.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="38.71" y="495.5" ></text>
</g>
<g >
<title>ksys_write (215,405,816 samples, 3.62%)</title><rect x="510.8" y="485" width="42.7" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="513.85" y="495.5" >ksys..</text>
</g>
<g >
<title>_raw_spin_lock_bh (39,275,888 samples, 0.66%)</title><rect x="27.9" y="533" width="7.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="30.93" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (43,904,080 samples, 0.74%)</title><rect x="10.0" y="645" width="8.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>menu_select (210,224,652 samples, 3.53%)</title><rect x="1020.3" y="597" width="41.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1023.33" y="607.5" >men..</text>
</g>
<g >
<title>cpuidle_enter (40,622,024 samples, 0.68%)</title><rect x="1181.9" y="533" width="8.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1184.87" y="543.5" ></text>
</g>
<g >
<title>x64_sys_call (885,256,622 samples, 14.86%)</title><rect x="261.9" y="645" width="175.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="264.91" y="655.5" >x64_sys_call</text>
</g>
<g >
<title>dequeue_task_fair (47,509,569 samples, 0.80%)</title><rect x="74.8" y="437" width="9.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="77.83" y="447.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush (215,405,816 samples, 3.62%)</title><rect x="510.8" y="261" width="42.7" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="513.85" y="271.5" >cgro..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (106,106,381 samples, 1.78%)</title><rect x="639.7" y="581" width="21.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="642.75" y="591.5" ></text>
</g>
<g >
<title>open_exec (202,282,892 samples, 3.40%)</title><rect x="469.7" y="453" width="40.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="472.68" y="463.5" >ope..</text>
</g>
<g >
<title>bprm_execve (202,282,892 samples, 3.40%)</title><rect x="469.7" y="533" width="40.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="472.68" y="543.5" >bpr..</text>
</g>
<g >
<title>dequeue_task (47,509,569 samples, 0.80%)</title><rect x="74.8" y="453" width="9.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="77.83" y="463.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (80,988,742 samples, 1.36%)</title><rect x="47.0" y="485" width="16.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="50.01" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (42,538,670 samples, 0.71%)</title><rect x="421.1" y="517" width="8.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="424.08" y="527.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (215,405,816 samples, 3.62%)</title><rect x="510.8" y="389" width="42.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="513.85" y="399.5" >ext4..</text>
</g>
<g >
<title>tcp_stream_alloc_skb (169,709,947 samples, 2.85%)</title><rect x="395.9" y="549" width="33.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="398.89" y="559.5" >tc..</text>
</g>
<g >
<title>enqueue_entity (40,850,025 samples, 0.69%)</title><rect x="1092.9" y="533" width="8.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1095.90" y="543.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (155,757,861 samples, 2.61%)</title><rect x="288.6" y="549" width="30.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="291.61" y="559.5" >sk..</text>
</g>
<g >
<title>__irq_exit_rcu (160,068,745 samples, 2.69%)</title><rect x="710.1" y="517" width="31.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="713.06" y="527.5" >__..</text>
</g>
<g >
<title>ctx_resched (5,565,722 samples, 0.09%)</title><rect x="509.7" y="357" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="512.75" y="367.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_locked (215,405,816 samples, 3.62%)</title><rect x="510.8" y="245" width="42.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="513.85" y="255.5" >cgro..</text>
</g>
<g >
<title>__build_skb_around (51,975,478 samples, 0.87%)</title><rect x="410.8" y="517" width="10.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="413.79" y="527.5" ></text>
</g>
<g >
<title>ip_queue_xmit (347,161,726 samples, 5.83%)</title><rect x="319.5" y="485" width="68.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="322.46" y="495.5" >ip_queu..</text>
</g>
<g >
<title>ip_local_out (347,161,726 samples, 5.83%)</title><rect x="319.5" y="453" width="68.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="322.46" y="463.5" >ip_loca..</text>
</g>
<g >
<title>post_alloc_hook (42,521,429 samples, 0.71%)</title><rect x="280.2" y="469" width="8.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="283.18" y="479.5" ></text>
</g>
<g >
<title>sk_wait_data (419,581,291 samples, 7.04%)</title><rect x="35.7" y="533" width="83.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="38.71" y="543.5" >sk_wait_d..</text>
</g>
<g >
<title>cpuidle_enter_state (1,815,405,017 samples, 30.47%)</title><rect x="660.8" y="581" width="359.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="663.77" y="591.5" >cpuidle_enter_state</text>
</g>
<g >
<title>tick_sched_timer (137,909,693 samples, 2.31%)</title><rect x="682.7" y="485" width="27.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="685.75" y="495.5" >t..</text>
</g>
<g >
<title>perf_evsel__ioctl (5,565,722 samples, 0.09%)</title><rect x="509.7" y="613" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="512.75" y="623.5" ></text>
</g>
<g >
<title>handle_pte_fault (163,763,797 samples, 2.75%)</title><rect x="437.2" y="597" width="32.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="440.25" y="607.5" >ha..</text>
</g>
<g >
<title>hrtimer_interrupt (248,898,158 samples, 4.18%)</title><rect x="660.8" y="517" width="49.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="663.77" y="527.5" >hrti..</text>
</g>
<g >
<title>arch_call_rest_init (80,871,015 samples, 1.36%)</title><rect x="1174.0" y="629" width="16.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1176.98" y="639.5" ></text>
</g>
<g >
<title>do_user_addr_fault (163,763,797 samples, 2.75%)</title><rect x="437.2" y="645" width="32.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="440.25" y="655.5" >do..</text>
</g>
<g >
<title>poll_idle (40,622,024 samples, 0.68%)</title><rect x="1181.9" y="501" width="8.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1184.87" y="511.5" ></text>
</g>
<g >
<title>intel_idle (477,512,777 samples, 8.02%)</title><rect x="751.3" y="565" width="94.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="754.25" y="575.5" >intel_idle</text>
</g>
<g >
<title>check_cfs_rq_runtime (51,658,786 samples, 0.87%)</title><rect x="84.2" y="421" width="10.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="87.24" y="431.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (44,818,808 samples, 0.75%)</title><rect x="242.8" y="565" width="8.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="245.83" y="575.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (248,898,158 samples, 4.18%)</title><rect x="660.8" y="533" width="49.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="663.77" y="543.5" >__sy..</text>
</g>
<g >
<title>inet_ehashfn (36,680,637 samples, 0.62%)</title><rect x="337.0" y="133" width="7.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="339.99" y="143.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1,131,620,840 samples, 18.99%)</title><rect x="18.7" y="565" width="224.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.70" y="575.5" >tcp_recvmsg</text>
</g>
<g >
<title>__ioctl (5,565,722 samples, 0.09%)</title><rect x="509.7" y="597" width="1.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="512.75" y="607.5" ></text>
</g>
<g >
<title>ovl_get_link (202,282,892 samples, 3.40%)</title><rect x="469.7" y="325" width="40.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="472.68" y="335.5" >ovl..</text>
</g>
<g >
<title>ip_local_deliver_finish (228,822,505 samples, 3.84%)</title><rect x="327.7" y="181" width="45.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="330.71" y="191.5" >ip_l..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (57,050,901 samples, 0.96%)</title><rect x="35.7" y="501" width="11.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="38.71" y="511.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (50,179,384 samples, 0.84%)</title><rect x="629.8" y="693" width="9.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="632.81" y="703.5" ></text>
</g>
<g >
<title>tcp_rack_update_reo_wnd (50,707,177 samples, 0.85%)</title><rect x="363.0" y="101" width="10.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="365.99" y="111.5" ></text>
</g>
<g >
<title>put_prev_task_fair (51,658,786 samples, 0.87%)</title><rect x="84.2" y="437" width="10.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="87.24" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (202,282,892 samples, 3.40%)</title><rect x="469.7" y="597" width="40.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="472.68" y="607.5" >do_..</text>
</g>
<g >
<title>smp_call_function_single (5,565,722 samples, 0.09%)</title><rect x="509.7" y="437" width="1.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="512.75" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (1,176,439,648 samples, 19.75%)</title><rect x="18.7" y="629" width="233.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="21.70" y="639.5" >__x64_sys_recvfrom</text>
</g>
<g >
<title>sched_clock (51,768,210 samples, 0.87%)</title><rect x="1113.5" y="549" width="10.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1116.49" y="559.5" ></text>
</g>
<g >
<title>update_curr (47,509,569 samples, 0.80%)</title><rect x="74.8" y="405" width="9.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="77.83" y="415.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (215,405,816 samples, 3.62%)</title><rect x="510.8" y="645" width="42.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="513.85" y="655.5" >reco..</text>
</g>
<g >
<title>__do_softirq (306,322,490 samples, 5.14%)</title><rect x="319.5" y="309" width="60.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="322.46" y="319.5" >__do_s..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (408,966,903 samples, 6.86%)</title><rect x="660.8" y="549" width="81.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="663.77" y="559.5" >sysvec_ap..</text>
</g>
<g >
<title>copyout (389,326,691 samples, 6.53%)</title><rect x="118.8" y="469" width="77.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="121.81" y="479.5" >copyout</text>
</g>
<g >
<title>tick_nohz_next_event (51,646,431 samples, 0.87%)</title><rect x="1051.7" y="565" width="10.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1054.74" y="575.5" ></text>
</g>
<g >
<title>timerqueue_add (110,988,465 samples, 1.86%)</title><rect x="660.8" y="469" width="21.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="663.77" y="479.5" >t..</text>
</g>
<g >
<title>__skb_datagram_iter (389,326,691 samples, 6.53%)</title><rect x="118.8" y="517" width="77.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="121.81" y="527.5" >__skb_da..</text>
</g>
<g >
<title>sk_forced_mem_schedule (42,538,670 samples, 0.71%)</title><rect x="421.1" y="533" width="8.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="424.08" y="543.5" ></text>
</g>
<g >
<title>mod_memcg_state (42,538,670 samples, 0.71%)</title><rect x="421.1" y="501" width="8.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="424.08" y="511.5" ></text>
</g>
<g >
<title>swapper (3,213,550,409 samples, 53.94%)</title><rect x="553.5" y="709" width="636.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="556.51" y="719.5" >swapper</text>
</g>
<g >
<title>__libc_recv (1,220,343,728 samples, 20.48%)</title><rect x="10.0" y="693" width="241.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >__libc_recv</text>
</g>
<g >
<title>evlist__prepare_workload (202,282,892 samples, 3.40%)</title><rect x="469.7" y="661" width="40.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="472.68" y="671.5" >evl..</text>
</g>
<g >
<title>do_iter_readv_writev (215,405,816 samples, 3.62%)</title><rect x="510.8" y="405" width="42.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="513.85" y="415.5" >do_i..</text>
</g>
<g >
<title>hrtimer_get_next_event (51,646,431 samples, 0.87%)</title><rect x="1051.7" y="533" width="10.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1054.74" y="543.5" ></text>
</g>
<g >
<title>__libc_send (936,765,982 samples, 15.72%)</title><rect x="251.7" y="693" width="185.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="254.71" y="703.5" >__libc_send</text>
</g>
<g >
<title>__napi_poll (228,822,505 samples, 3.84%)</title><rect x="327.7" y="277" width="45.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="330.71" y="287.5" >__na..</text>
</g>
<g >
<title>run_posix_cpu_timers (137,909,693 samples, 2.31%)</title><rect x="682.7" y="453" width="27.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="685.75" y="463.5" >r..</text>
</g>
<g >
<title>get_next_timer_interrupt (51,646,431 samples, 0.87%)</title><rect x="1051.7" y="549" width="10.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1054.74" y="559.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (306,322,490 samples, 5.14%)</title><rect x="319.5" y="325" width="60.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="322.46" y="335.5" >do_sof..</text>
</g>
<g >
<title>tcp_sendmsg (834,162,644 samples, 14.00%)</title><rect x="272.0" y="581" width="165.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="275.03" y="591.5" >tcp_sendmsg</text>
</g>
<g >
<title>__alloc_pages (83,705,656 samples, 1.41%)</title><rect x="272.0" y="501" width="16.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="275.03" y="511.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (202,282,892 samples, 3.40%)</title><rect x="469.7" y="517" width="40.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="472.68" y="527.5" >bpr..</text>
</g>
<g >
<title>generic_exec_single (5,565,722 samples, 0.09%)</title><rect x="509.7" y="421" width="1.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="512.75" y="431.5" ></text>
</g>
<g >
<title>skb_network_protocol (40,839,236 samples, 0.69%)</title><rect x="380.1" y="325" width="8.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="383.13" y="335.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (80,871,015 samples, 1.36%)</title><rect x="1174.0" y="661" width="16.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1176.98" y="671.5" ></text>
</g>
<g >
<title>process_backlog (228,822,505 samples, 3.84%)</title><rect x="327.7" y="261" width="45.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="330.71" y="271.5" >proc..</text>
</g>
<g >
<title>sched_ttwu_pending (155,706,948 samples, 2.61%)</title><rect x="1092.9" y="597" width="30.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1095.90" y="607.5" >sc..</text>
</g>
<g >
<title>sk_forced_mem_schedule (42,865,037 samples, 0.72%)</title><rect x="344.3" y="101" width="8.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="347.26" y="111.5" ></text>
</g>
</g>
</svg>
