@node getopt_long_only
@subsection @code{getopt_long_only}
@findex getopt_long_only

Gnulib module: getopt-gnu

Portability problems fixed by Gnulib:
@itemize
@item
The function @code{getopt_long_only} does not obey the combination of
@samp{+} and @samp{:} flags in the options string on some platforms:
glibc 2.11.
@item
The use of @samp{W;} in the optstring argument to does not always
allow @code{-W foo} to behave synonymously with @code{--foo}:
glibc 2.11.
@item
The function @code{getopt_long_only} does not support the @samp{+}
flag in the options string on some platforms:
Mac OS X 10.5, AIX 5.2, OSF/1 5.1, Solaris 10.
@item
The value of @code{optind} after a missing required argument is wrong
on some platforms:
Mac OS X 10.5.
@item
The function @code{getopt_long_only} does not obey the @samp{-} flag
in the options string when @env{POSIXLY_CORRECT} is set on some platforms:
Cygwin 1.7.0.
@item
Some implementations fail to reset state, including re-checking
@env{POSIXLY_CORRECT}, when @code{optind} is set to @samp{0}:
NetBSD, Cygwin 1.7.0.
@item
The function @code{getopt_long_only} does not support options with
optional arguments on some platforms:
Mac OS X 10.5, OpenBSD 4.0, AIX 5.2, Solaris 11 2010-11, Cygwin 1.5.x.
@item
This function is missing on some platforms:
Mac OS X 10.3, FreeBSD 5.2.1, NetBSD 5.0, Minix 3.1.8, AIX 5.1, HP-UX 11, IRIX 6.5,
OSF/1 5.1, mingw, MSVC 14, Interix 3.5.
@item
This function crashes if the option string includes @code{W;} but
there are no long options, on some platforms:
glibc 2.14.
@end itemize

Portability problems not fixed by Gnulib:
@itemize
@item
Some implementations return success instead of reporting an ambiguity
if user's option is a prefix of two long options with the same outcome:
FreeBSD.
@item
The GNU Coding Standards discourage the use of @code{getopt_long_only}
in new programs.
@end itemize
