## DO NOT EDIT! GENERATED AUTOMATICALLY!
## Process this file with automake to produce Makefile.in.
# Copyright (C) 2002-2018 Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file.  If not, see <https://www.gnu.org/licenses/>.
#
# As a special exception to the GNU General Public License,
# this file may be distributed as part of a program that
# contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.

AUTOMAKE_OPTIONS = 1.9.6 foreign

SUBDIRS = .
TESTS =
XFAIL_TESTS =
TESTS_ENVIRONMENT =
noinst_PROGRAMS =
check_PROGRAMS =
EXTRA_PROGRAMS =
noinst_HEADERS =
noinst_LIBRARIES =
check_LIBRARIES = libtests.a
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES = core *.stackdump
MOSTLYCLEANDIRS =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =

AM_CPPFLAGS = \
  -D@gltests_WITNESS@=1 \
  -I. -I$(srcdir) \
  -I.. -I$(srcdir)/.. \
  -I../lib -I$(srcdir)/../lib

LDADD = libtests.a ../lib/libsed.a libtests.a $(LIBTESTS_LIBDEPS)

libtests_a_SOURCES =
libtests_a_LIBADD = $(gltests_LIBOBJS)
libtests_a_DEPENDENCIES = $(gltests_LIBOBJS)
EXTRA_libtests_a_SOURCES =
AM_LIBTOOLFLAGS = --preserve-dup-deps

TESTS_ENVIRONMENT += EXEEXT='@EXEEXT@' srcdir='$(srcdir)'

## begin gnulib module accept


EXTRA_DIST += accept.c w32sock.h

EXTRA_libtests_a_SOURCES += accept.c

## end   gnulib module accept

## begin gnulib module accept-tests

TESTS += test-accept
check_PROGRAMS += test-accept
test_accept_LDADD = $(LDADD) @LIBSOCKET@
EXTRA_DIST += test-accept.c signature.h macros.h

## end   gnulib module accept-tests

## begin gnulib module acl-tests

TESTS += \
  test-set-mode-acl.sh test-set-mode-acl-1.sh test-set-mode-acl-2.sh \
  test-copy-acl.sh test-copy-acl-1.sh test-copy-acl-2.sh
TESTS_ENVIRONMENT += USE_ACL=$(USE_ACL)
check_PROGRAMS += test-set-mode-acl test-copy-acl test-sameacls
test_set_mode_acl_LDADD = $(LDADD) $(LIB_ACL) @LIBINTL@
test_copy_acl_LDADD = $(LDADD) $(LIB_ACL) @LIBINTL@
test_sameacls_LDADD = $(LDADD) $(LIB_ACL) @LIBINTL@
EXTRA_DIST += test-set-mode-acl.sh test-set-mode-acl-1.sh test-set-mode-acl-2.sh test-copy-acl.sh test-copy-acl-1.sh test-copy-acl-2.sh test-set-mode-acl.c test-copy-acl.c test-sameacls.c macros.h

## end   gnulib module acl-tests

## begin gnulib module alignof-tests

TESTS += test-alignof
check_PROGRAMS += test-alignof

EXTRA_DIST += test-alignof.c

## end   gnulib module alignof-tests

## begin gnulib module alloca-opt-tests

TESTS += test-alloca-opt
check_PROGRAMS += test-alloca-opt

EXTRA_DIST += test-alloca-opt.c

## end   gnulib module alloca-opt-tests

## begin gnulib module arpa_inet

BUILT_SOURCES += arpa/inet.h

# We need the following in order to create <arpa/inet.h> when the system
# doesn't have one.
arpa/inet.h: arpa_inet.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(WARN_ON_USE_H) $(ARG_NONNULL_H)
	$(AM_V_at)$(MKDIR_P) arpa
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''HAVE_FEATURES_H''@|$(HAVE_FEATURES_H)|g' \
	      -e 's|@''NEXT_ARPA_INET_H''@|$(NEXT_ARPA_INET_H)|g' \
	      -e 's|@''HAVE_ARPA_INET_H''@|$(HAVE_ARPA_INET_H)|g' \
	      -e 's/@''GNULIB_INET_NTOP''@/$(GNULIB_INET_NTOP)/g' \
	      -e 's/@''GNULIB_INET_PTON''@/$(GNULIB_INET_PTON)/g' \
	      -e 's|@''HAVE_DECL_INET_NTOP''@|$(HAVE_DECL_INET_NTOP)|g' \
	      -e 's|@''HAVE_DECL_INET_PTON''@|$(HAVE_DECL_INET_PTON)|g' \
	      -e 's|@''REPLACE_INET_NTOP''@|$(REPLACE_INET_NTOP)|g' \
	      -e 's|@''REPLACE_INET_PTON''@|$(REPLACE_INET_PTON)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_ARG_NONNULL/r $(ARG_NONNULL_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      < $(srcdir)/arpa_inet.in.h; \
	} > $@-t && \
	mv $@-t $@
MOSTLYCLEANFILES += arpa/inet.h arpa/inet.h-t
MOSTLYCLEANDIRS += arpa

EXTRA_DIST += arpa_inet.in.h

## end   gnulib module arpa_inet

## begin gnulib module arpa_inet-tests

TESTS += test-arpa_inet
check_PROGRAMS += test-arpa_inet
EXTRA_DIST += test-arpa_inet.c

## end   gnulib module arpa_inet-tests

## begin gnulib module binary-io

libtests_a_SOURCES += binary-io.h binary-io.c

## end   gnulib module binary-io

## begin gnulib module binary-io-tests

TESTS += test-binary-io.sh
check_PROGRAMS += test-binary-io

EXTRA_DIST += test-binary-io.sh test-binary-io.c macros.h

## end   gnulib module binary-io-tests

## begin gnulib module bind


EXTRA_DIST += bind.c w32sock.h

EXTRA_libtests_a_SOURCES += bind.c

## end   gnulib module bind

## begin gnulib module bind-tests

TESTS += test-bind
check_PROGRAMS += test-bind
test_bind_LDADD = $(LDADD) @LIBSOCKET@ $(INET_PTON_LIB)
EXTRA_DIST += test-bind.c signature.h macros.h

## end   gnulib module bind-tests

## begin gnulib module btowc-tests

TESTS += test-btowc1.sh test-btowc2.sh
TESTS_ENVIRONMENT += LOCALE_FR='@LOCALE_FR@' LOCALE_FR_UTF8='@LOCALE_FR_UTF8@'
check_PROGRAMS += test-btowc

EXTRA_DIST += test-btowc1.sh test-btowc2.sh test-btowc.c signature.h macros.h

## end   gnulib module btowc-tests

## begin gnulib module c-ctype-tests

TESTS += test-c-ctype
check_PROGRAMS += test-c-ctype
EXTRA_DIST += test-c-ctype.c macros.h

## end   gnulib module c-ctype-tests

## begin gnulib module c-strcase-tests

TESTS += test-c-strcase.sh
TESTS_ENVIRONMENT += LOCALE_FR='@LOCALE_FR@' LOCALE_TR_UTF8='@LOCALE_TR_UTF8@'
check_PROGRAMS += test-c-strcasecmp test-c-strncasecmp
EXTRA_DIST += test-c-strcase.sh test-c-strcasecmp.c test-c-strncasecmp.c macros.h

## end   gnulib module c-strcase-tests

## begin gnulib module canonicalize-lgpl-tests

TESTS += test-canonicalize-lgpl
check_PROGRAMS += test-canonicalize-lgpl
EXTRA_DIST += test-canonicalize-lgpl.c signature.h null-ptr.h macros.h

## end   gnulib module canonicalize-lgpl-tests

## begin gnulib module chdir-tests

TESTS += test-chdir
check_PROGRAMS += test-chdir
EXTRA_DIST += test-chdir.c signature.h macros.h

## end   gnulib module chdir-tests

## begin gnulib module cloexec

libtests_a_SOURCES += cloexec.c

EXTRA_DIST += cloexec.h

## end   gnulib module cloexec

## begin gnulib module cloexec-tests

TESTS += test-cloexec
check_PROGRAMS += test-cloexec
EXTRA_DIST += test-cloexec.c macros.h

## end   gnulib module cloexec-tests

## begin gnulib module close


EXTRA_DIST += close.c

EXTRA_libtests_a_SOURCES += close.c

## end   gnulib module close

## begin gnulib module close-tests

TESTS += test-close
check_PROGRAMS += test-close
EXTRA_DIST += test-close.c signature.h macros.h

## end   gnulib module close-tests

## begin gnulib module closedir


EXTRA_DIST += closedir.c dirent-private.h

EXTRA_libtests_a_SOURCES += closedir.c

## end   gnulib module closedir

## begin gnulib module connect


EXTRA_DIST += connect.c w32sock.h

EXTRA_libtests_a_SOURCES += connect.c

## end   gnulib module connect

## begin gnulib module connect-tests

TESTS += test-connect
check_PROGRAMS += test-connect
test_connect_LDADD = $(LDADD) @LIBSOCKET@ $(INET_PTON_LIB)
EXTRA_DIST += test-connect.c signature.h macros.h

## end   gnulib module connect-tests

## begin gnulib module ctype-tests

TESTS += test-ctype
check_PROGRAMS += test-ctype
EXTRA_DIST += test-ctype.c

## end   gnulib module ctype-tests

## begin gnulib module dfa-tests

TESTS +=			\
  dfa-invalid-char-class.sh	\
  dfa-match.sh

check_PROGRAMS += dfa-match-aux
dfa_match_aux_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += dfa-match.sh dfa-match-aux.c dfa-invalid-char-class.sh

## end   gnulib module dfa-tests

## begin gnulib module dirent

BUILT_SOURCES += dirent.h

# We need the following in order to create <dirent.h> when the system
# doesn't have one that works with the given compiler.
dirent.h: dirent.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(ARG_NONNULL_H) $(WARN_ON_USE_H)
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''HAVE_DIRENT_H''@|$(HAVE_DIRENT_H)|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_DIRENT_H''@|$(NEXT_DIRENT_H)|g' \
	      -e 's/@''GNULIB_OPENDIR''@/$(GNULIB_OPENDIR)/g' \
	      -e 's/@''GNULIB_READDIR''@/$(GNULIB_READDIR)/g' \
	      -e 's/@''GNULIB_REWINDDIR''@/$(GNULIB_REWINDDIR)/g' \
	      -e 's/@''GNULIB_CLOSEDIR''@/$(GNULIB_CLOSEDIR)/g' \
	      -e 's/@''GNULIB_DIRFD''@/$(GNULIB_DIRFD)/g' \
	      -e 's/@''GNULIB_FDOPENDIR''@/$(GNULIB_FDOPENDIR)/g' \
	      -e 's/@''GNULIB_SCANDIR''@/$(GNULIB_SCANDIR)/g' \
	      -e 's/@''GNULIB_ALPHASORT''@/$(GNULIB_ALPHASORT)/g' \
	      -e 's/@''HAVE_OPENDIR''@/$(HAVE_OPENDIR)/g' \
	      -e 's/@''HAVE_READDIR''@/$(HAVE_READDIR)/g' \
	      -e 's/@''HAVE_REWINDDIR''@/$(HAVE_REWINDDIR)/g' \
	      -e 's/@''HAVE_CLOSEDIR''@/$(HAVE_CLOSEDIR)/g' \
	      -e 's|@''HAVE_DECL_DIRFD''@|$(HAVE_DECL_DIRFD)|g' \
	      -e 's|@''HAVE_DECL_FDOPENDIR''@|$(HAVE_DECL_FDOPENDIR)|g' \
	      -e 's|@''HAVE_FDOPENDIR''@|$(HAVE_FDOPENDIR)|g' \
	      -e 's|@''HAVE_SCANDIR''@|$(HAVE_SCANDIR)|g' \
	      -e 's|@''HAVE_ALPHASORT''@|$(HAVE_ALPHASORT)|g' \
	      -e 's|@''REPLACE_OPENDIR''@|$(REPLACE_OPENDIR)|g' \
	      -e 's|@''REPLACE_CLOSEDIR''@|$(REPLACE_CLOSEDIR)|g' \
	      -e 's|@''REPLACE_DIRFD''@|$(REPLACE_DIRFD)|g' \
	      -e 's|@''REPLACE_FDOPENDIR''@|$(REPLACE_FDOPENDIR)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_ARG_NONNULL/r $(ARG_NONNULL_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      < $(srcdir)/dirent.in.h; \
	} > $@-t && \
	mv $@-t $@
MOSTLYCLEANFILES += dirent.h dirent.h-t

EXTRA_DIST += dirent.in.h

## end   gnulib module dirent

## begin gnulib module dirent-tests

TESTS += test-dirent
check_PROGRAMS += test-dirent
EXTRA_DIST += test-dirent.c

## end   gnulib module dirent-tests

## begin gnulib module dirfd


EXTRA_DIST += dirfd.c

EXTRA_libtests_a_SOURCES += dirfd.c

## end   gnulib module dirfd

## begin gnulib module dup2


EXTRA_DIST += dup2.c

EXTRA_libtests_a_SOURCES += dup2.c

## end   gnulib module dup2

## begin gnulib module dup2-tests

TESTS += test-dup2
check_PROGRAMS += test-dup2
EXTRA_DIST += test-dup2.c signature.h macros.h

## end   gnulib module dup2-tests

## begin gnulib module environ-tests

TESTS += test-environ
check_PROGRAMS += test-environ

EXTRA_DIST += test-environ.c

## end   gnulib module environ-tests

## begin gnulib module errno-tests

TESTS += test-errno
check_PROGRAMS += test-errno

EXTRA_DIST += test-errno.c

## end   gnulib module errno-tests

## begin gnulib module fcntl


EXTRA_DIST += fcntl.c

EXTRA_libtests_a_SOURCES += fcntl.c

## end   gnulib module fcntl

## begin gnulib module fcntl-h-tests

TESTS += test-fcntl-h
check_PROGRAMS += test-fcntl-h
EXTRA_DIST += test-fcntl-h.c

## end   gnulib module fcntl-h-tests

## begin gnulib module fcntl-tests

TESTS += test-fcntl
check_PROGRAMS += test-fcntl
EXTRA_DIST += test-fcntl.c signature.h macros.h

## end   gnulib module fcntl-tests

## begin gnulib module fd-hook

libtests_a_SOURCES += fd-hook.c

EXTRA_DIST += fd-hook.h

## end   gnulib module fd-hook

## begin gnulib module fdopen


EXTRA_DIST += fdopen.c

EXTRA_libtests_a_SOURCES += fdopen.c

## end   gnulib module fdopen

## begin gnulib module fdopen-tests

TESTS += test-fdopen
check_PROGRAMS += test-fdopen
EXTRA_DIST += test-fdopen.c signature.h macros.h

## end   gnulib module fdopen-tests

## begin gnulib module fflush


EXTRA_DIST += fflush.c stdio-impl.h

EXTRA_libtests_a_SOURCES += fflush.c

## end   gnulib module fflush

## begin gnulib module fflush-tests

TESTS += test-fflush test-fflush2.sh
check_PROGRAMS += test-fflush test-fflush2
MOSTLYCLEANFILES += test-fflush.txt
EXTRA_DIST += test-fflush.c test-fflush2.sh test-fflush2.c signature.h macros.h

## end   gnulib module fflush-tests

## begin gnulib module fgetc-tests

TESTS += test-fgetc
check_PROGRAMS += test-fgetc
EXTRA_DIST += test-fgetc.c signature.h macros.h

## end   gnulib module fgetc-tests

## begin gnulib module file-has-acl

libtests_a_SOURCES += file-has-acl.c

## end   gnulib module file-has-acl

## begin gnulib module file-has-acl-tests

TESTS += \
  test-file-has-acl.sh test-file-has-acl-1.sh test-file-has-acl-2.sh
TESTS_ENVIRONMENT += USE_ACL=$(USE_ACL)
check_PROGRAMS += test-file-has-acl
test_file_has_acl_LDADD = $(LDADD) $(LIB_HAS_ACL)
EXTRA_DIST += test-file-has-acl.sh test-file-has-acl-1.sh test-file-has-acl-2.sh test-file-has-acl.c macros.h

## end   gnulib module file-has-acl-tests

## begin gnulib module flexmember


EXTRA_DIST += flexmember.h

## end   gnulib module flexmember

## begin gnulib module fpending-tests

TESTS += test-fpending.sh
check_PROGRAMS += test-fpending
MOSTLYCLEANFILES += test-fpending.t
EXTRA_DIST += test-fpending.c test-fpending.sh macros.h

## end   gnulib module fpending-tests

## begin gnulib module fpurge


EXTRA_DIST += fpurge.c stdio-impl.h

EXTRA_libtests_a_SOURCES += fpurge.c

## end   gnulib module fpurge

## begin gnulib module fpurge-tests

TESTS += test-fpurge
check_PROGRAMS += test-fpurge
MOSTLYCLEANFILES += t-fpurge.tmp
EXTRA_DIST += test-fpurge.c macros.h

## end   gnulib module fpurge-tests

## begin gnulib module fputc-tests

TESTS += test-fputc
check_PROGRAMS += test-fputc
EXTRA_DIST += test-fputc.c signature.h macros.h

## end   gnulib module fputc-tests

## begin gnulib module fread-tests

TESTS += test-fread
check_PROGRAMS += test-fread
EXTRA_DIST += test-fread.c signature.h macros.h

## end   gnulib module fread-tests

## begin gnulib module freading

libtests_a_SOURCES += freading.c

EXTRA_DIST += freading.h stdio-impl.h

## end   gnulib module freading

## begin gnulib module freading-tests

TESTS += test-freading
check_PROGRAMS += test-freading
MOSTLYCLEANFILES += t-freading.tmp
EXTRA_DIST += test-freading.c macros.h

## end   gnulib module freading-tests

## begin gnulib module fseek


EXTRA_DIST += fseek.c

EXTRA_libtests_a_SOURCES += fseek.c

## end   gnulib module fseek

## begin gnulib module fseek-tests

TESTS += test-fseek.sh test-fseek2.sh
check_PROGRAMS += test-fseek
EXTRA_DIST += test-fseek.c test-fseek.sh test-fseek2.sh signature.h macros.h

## end   gnulib module fseek-tests

## begin gnulib module fseeko


EXTRA_DIST += fseeko.c stdio-impl.h

EXTRA_libtests_a_SOURCES += fseeko.c

## end   gnulib module fseeko

## begin gnulib module fseeko-tests

TESTS += test-fseeko.sh test-fseeko2.sh test-fseeko3.sh test-fseeko4.sh
check_PROGRAMS += test-fseeko test-fseeko3 test-fseeko4
EXTRA_DIST += test-fseeko.c test-fseeko.sh test-fseeko2.sh test-fseeko3.c test-fseeko3.sh test-fseeko4.c test-fseeko4.sh signature.h macros.h

## end   gnulib module fseeko-tests

## begin gnulib module fstat-tests

TESTS += test-fstat
check_PROGRAMS += test-fstat
EXTRA_DIST += test-fstat.c signature.h macros.h

## end   gnulib module fstat-tests

## begin gnulib module ftell


EXTRA_DIST += ftell.c

EXTRA_libtests_a_SOURCES += ftell.c

## end   gnulib module ftell

## begin gnulib module ftell-tests

TESTS += test-ftell.sh test-ftell2.sh test-ftell3
check_PROGRAMS += test-ftell test-ftell3
MOSTLYCLEANFILES += t-ftell3.tmp
EXTRA_DIST += test-ftell.c test-ftell.sh test-ftell2.sh test-ftell3.c signature.h macros.h

## end   gnulib module ftell-tests

## begin gnulib module ftello


EXTRA_DIST += ftello.c stdio-impl.h

EXTRA_libtests_a_SOURCES += ftello.c

## end   gnulib module ftello

## begin gnulib module ftello-tests

TESTS += test-ftello.sh test-ftello2.sh test-ftello3 test-ftello4.sh
check_PROGRAMS += test-ftello test-ftello3 test-ftello4
MOSTLYCLEANFILES += t-ftello3.tmp
EXTRA_DIST += test-ftello.c test-ftello.sh test-ftello2.sh test-ftello3.c test-ftello4.c test-ftello4.sh signature.h macros.h

## end   gnulib module ftello-tests

## begin gnulib module ftruncate


EXTRA_DIST += ftruncate.c

EXTRA_libtests_a_SOURCES += ftruncate.c

## end   gnulib module ftruncate

## begin gnulib module ftruncate-tests

TESTS += test-ftruncate.sh
check_PROGRAMS += test-ftruncate
EXTRA_DIST += test-ftruncate.c test-ftruncate.sh signature.h macros.h

## end   gnulib module ftruncate-tests

## begin gnulib module fwrite-tests

TESTS += test-fwrite
check_PROGRAMS += test-fwrite
EXTRA_DIST += test-fwrite.c signature.h macros.h

## end   gnulib module fwrite-tests

## begin gnulib module fwriting-tests

TESTS += test-fwriting
check_PROGRAMS += test-fwriting
MOSTLYCLEANFILES += t-fwriting.tmp
EXTRA_DIST += test-fwriting.c macros.h

## end   gnulib module fwriting-tests

## begin gnulib module getcwd-lgpl


EXTRA_DIST += getcwd-lgpl.c

EXTRA_libtests_a_SOURCES += getcwd-lgpl.c

## end   gnulib module getcwd-lgpl

## begin gnulib module getcwd-lgpl-tests

TESTS += test-getcwd-lgpl
check_PROGRAMS += test-getcwd-lgpl
test_getcwd_lgpl_LDADD = $(LDADD) $(LIBINTL)
EXTRA_DIST += test-getcwd-lgpl.c signature.h macros.h

## end   gnulib module getcwd-lgpl-tests

## begin gnulib module getdelim-tests

TESTS += test-getdelim
check_PROGRAMS += test-getdelim
MOSTLYCLEANFILES += test-getdelim.txt
EXTRA_DIST += test-getdelim.c signature.h macros.h

## end   gnulib module getdelim-tests

## begin gnulib module getdtablesize


EXTRA_DIST += getdtablesize.c

EXTRA_libtests_a_SOURCES += getdtablesize.c

## end   gnulib module getdtablesize

## begin gnulib module getdtablesize-tests

TESTS += test-getdtablesize
check_PROGRAMS += test-getdtablesize
EXTRA_DIST += test-getdtablesize.c signature.h macros.h

## end   gnulib module getdtablesize-tests

## begin gnulib module getopt-gnu-tests

TESTS += test-getopt-gnu
check_PROGRAMS += test-getopt-gnu
test_getopt_gnu_LDADD = $(LDADD) $(LIBINTL)
EXTRA_DIST += macros.h signature.h test-getopt-gnu.c test-getopt-main.h test-getopt.h test-getopt_long.h

## end   gnulib module getopt-gnu-tests

## begin gnulib module getopt-posix-tests

TESTS += test-getopt-posix
check_PROGRAMS += test-getopt-posix
test_getopt_posix_LDADD = $(LDADD) $(LIBINTL)
EXTRA_DIST += macros.h signature.h test-getopt-posix.c test-getopt-main.h test-getopt.h

## end   gnulib module getopt-posix-tests

## begin gnulib module getpagesize


EXTRA_DIST += getpagesize.c

EXTRA_libtests_a_SOURCES += getpagesize.c

## end   gnulib module getpagesize

## begin gnulib module getprogname-tests

DEFS += -DEXEEXT=\"@EXEEXT@\"
TESTS += test-getprogname
check_PROGRAMS += test-getprogname
test_getprogname_LDADD = $(LDADD)
EXTRA_DIST += test-getprogname.c

## end   gnulib module getprogname-tests

## begin gnulib module gettimeofday-tests

TESTS += test-gettimeofday
check_PROGRAMS += test-gettimeofday

EXTRA_DIST += signature.h test-gettimeofday.c

## end   gnulib module gettimeofday-tests

## begin gnulib module ignore-value-tests

TESTS += test-ignore-value
check_PROGRAMS += test-ignore-value
EXTRA_DIST += test-ignore-value.c

## end   gnulib module ignore-value-tests

## begin gnulib module inet_pton


EXTRA_DIST += inet_pton.c

EXTRA_libtests_a_SOURCES += inet_pton.c

## end   gnulib module inet_pton

## begin gnulib module inet_pton-tests

TESTS += test-inet_pton
check_PROGRAMS += test-inet_pton
test_inet_pton_LDADD = $(LDADD) @INET_PTON_LIB@
EXTRA_DIST += test-inet_pton.c signature.h macros.h

## end   gnulib module inet_pton-tests

## begin gnulib module intprops-tests

TESTS += test-intprops
check_PROGRAMS += test-intprops
EXTRA_DIST += test-intprops.c macros.h

## end   gnulib module intprops-tests

## begin gnulib module inttypes-incomplete

BUILT_SOURCES += inttypes.h

# We need the following in order to create <inttypes.h> when the system
# doesn't have one that works with the given compiler.
inttypes.h: inttypes.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(WARN_ON_USE_H) $(ARG_NONNULL_H)
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's/@''HAVE_INTTYPES_H''@/$(HAVE_INTTYPES_H)/g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_INTTYPES_H''@|$(NEXT_INTTYPES_H)|g' \
	      -e 's/@''PRI_MACROS_BROKEN''@/$(PRI_MACROS_BROKEN)/g' \
	      -e 's/@''APPLE_UNIVERSAL_BUILD''@/$(APPLE_UNIVERSAL_BUILD)/g' \
	      -e 's/@''HAVE_LONG_LONG_INT''@/$(HAVE_LONG_LONG_INT)/g' \
	      -e 's/@''HAVE_UNSIGNED_LONG_LONG_INT''@/$(HAVE_UNSIGNED_LONG_LONG_INT)/g' \
	      -e 's/@''PRIPTR_PREFIX''@/$(PRIPTR_PREFIX)/g' \
	      -e 's/@''GNULIB_IMAXABS''@/$(GNULIB_IMAXABS)/g' \
	      -e 's/@''GNULIB_IMAXDIV''@/$(GNULIB_IMAXDIV)/g' \
	      -e 's/@''GNULIB_STRTOIMAX''@/$(GNULIB_STRTOIMAX)/g' \
	      -e 's/@''GNULIB_STRTOUMAX''@/$(GNULIB_STRTOUMAX)/g' \
	      -e 's/@''HAVE_DECL_IMAXABS''@/$(HAVE_DECL_IMAXABS)/g' \
	      -e 's/@''HAVE_DECL_IMAXDIV''@/$(HAVE_DECL_IMAXDIV)/g' \
	      -e 's/@''HAVE_DECL_STRTOIMAX''@/$(HAVE_DECL_STRTOIMAX)/g' \
	      -e 's/@''HAVE_DECL_STRTOUMAX''@/$(HAVE_DECL_STRTOUMAX)/g' \
	      -e 's/@''REPLACE_STRTOIMAX''@/$(REPLACE_STRTOIMAX)/g' \
	      -e 's/@''REPLACE_STRTOUMAX''@/$(REPLACE_STRTOUMAX)/g' \
	      -e 's/@''INT32_MAX_LT_INTMAX_MAX''@/$(INT32_MAX_LT_INTMAX_MAX)/g' \
	      -e 's/@''INT64_MAX_EQ_LONG_MAX''@/$(INT64_MAX_EQ_LONG_MAX)/g' \
	      -e 's/@''UINT32_MAX_LT_UINTMAX_MAX''@/$(UINT32_MAX_LT_UINTMAX_MAX)/g' \
	      -e 's/@''UINT64_MAX_EQ_ULONG_MAX''@/$(UINT64_MAX_EQ_ULONG_MAX)/g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_ARG_NONNULL/r $(ARG_NONNULL_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      < $(srcdir)/inttypes.in.h; \
	} > $@-t && \
	mv $@-t $@
MOSTLYCLEANFILES += inttypes.h inttypes.h-t

EXTRA_DIST += inttypes.in.h

## end   gnulib module inttypes-incomplete

## begin gnulib module inttypes-tests

TESTS += test-inttypes
check_PROGRAMS += test-inttypes
EXTRA_DIST += test-inttypes.c

## end   gnulib module inttypes-tests

## begin gnulib module ioctl


EXTRA_DIST += ioctl.c w32sock.h

EXTRA_libtests_a_SOURCES += ioctl.c

## end   gnulib module ioctl

## begin gnulib module ioctl-tests

TESTS += test-ioctl
check_PROGRAMS += test-ioctl
EXTRA_DIST += test-ioctl.c signature.h macros.h

## end   gnulib module ioctl-tests

## begin gnulib module isblank-tests

TESTS += test-isblank
check_PROGRAMS += test-isblank
EXTRA_DIST += test-isblank.c signature.h macros.h

## end   gnulib module isblank-tests

## begin gnulib module langinfo-tests

TESTS += test-langinfo
check_PROGRAMS += test-langinfo
EXTRA_DIST += test-langinfo.c

## end   gnulib module langinfo-tests

## begin gnulib module limits-h-tests

TESTS += test-limits-h
check_PROGRAMS += test-limits-h
EXTRA_DIST += test-limits-h.c

## end   gnulib module limits-h-tests

## begin gnulib module link


EXTRA_DIST += link.c

EXTRA_libtests_a_SOURCES += link.c

## end   gnulib module link

## begin gnulib module link-tests

TESTS += test-link
check_PROGRAMS += test-link
EXTRA_DIST += test-link.h test-link.c signature.h macros.h

## end   gnulib module link-tests

## begin gnulib module listen


EXTRA_DIST += listen.c w32sock.h

EXTRA_libtests_a_SOURCES += listen.c

## end   gnulib module listen

## begin gnulib module listen-tests

TESTS += test-listen
check_PROGRAMS += test-listen
test_listen_LDADD = $(LDADD) @LIBSOCKET@
EXTRA_DIST += test-listen.c signature.h macros.h

## end   gnulib module listen-tests

## begin gnulib module locale-tests

TESTS += test-locale
check_PROGRAMS += test-locale
EXTRA_DIST += test-locale.c

## end   gnulib module locale-tests

## begin gnulib module localeconv-tests

TESTS += test-localeconv
check_PROGRAMS += test-localeconv
EXTRA_DIST += test-localeconv.c signature.h macros.h

## end   gnulib module localeconv-tests

## begin gnulib module localename

libtests_a_SOURCES += localename.c

EXTRA_DIST += localename.h

## end   gnulib module localename

## begin gnulib module localename-tests

TESTS += test-localename
check_PROGRAMS += test-localename
test_localename_LDADD = $(LDADD) @INTL_MACOSX_LIBS@ $(LIBTHREAD)

EXTRA_DIST += test-localename.c macros.h

## end   gnulib module localename-tests

## begin gnulib module lseek


EXTRA_DIST += lseek.c

EXTRA_libtests_a_SOURCES += lseek.c

## end   gnulib module lseek

## begin gnulib module lseek-tests

TESTS += test-lseek.sh
check_PROGRAMS += test-lseek
EXTRA_DIST += test-lseek.c test-lseek.sh signature.h macros.h

## end   gnulib module lseek-tests

## begin gnulib module lstat-tests

TESTS += test-lstat
check_PROGRAMS += test-lstat
EXTRA_DIST += test-lstat.h test-lstat.c signature.h macros.h

## end   gnulib module lstat-tests

## begin gnulib module malloca-tests

TESTS += test-malloca
check_PROGRAMS += test-malloca

EXTRA_DIST += test-malloca.c

## end   gnulib module malloca-tests

## begin gnulib module mbrtowc-tests

TESTS += \
  test-mbrtowc1.sh test-mbrtowc2.sh test-mbrtowc3.sh test-mbrtowc4.sh \
  test-mbrtowc5.sh \
  test-mbrtowc-w32-1.sh test-mbrtowc-w32-2.sh test-mbrtowc-w32-3.sh \
  test-mbrtowc-w32-4.sh test-mbrtowc-w32-5.sh
TESTS_ENVIRONMENT += \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-mbrtowc test-mbrtowc-w32
EXTRA_DIST += test-mbrtowc1.sh test-mbrtowc2.sh test-mbrtowc3.sh test-mbrtowc4.sh test-mbrtowc5.sh test-mbrtowc.c test-mbrtowc-w32-1.sh test-mbrtowc-w32-2.sh test-mbrtowc-w32-3.sh test-mbrtowc-w32-4.sh test-mbrtowc-w32-5.sh test-mbrtowc-w32.c signature.h macros.h

## end   gnulib module mbrtowc-tests

## begin gnulib module mbsinit-tests

TESTS += test-mbsinit.sh
TESTS_ENVIRONMENT += LOCALE_FR_UTF8='@LOCALE_FR_UTF8@'
check_PROGRAMS += test-mbsinit

EXTRA_DIST += test-mbsinit.sh test-mbsinit.c signature.h macros.h

## end   gnulib module mbsinit-tests

## begin gnulib module memchr-tests

TESTS += test-memchr
check_PROGRAMS += test-memchr
EXTRA_DIST += test-memchr.c zerosize-ptr.h signature.h macros.h

## end   gnulib module memchr-tests

## begin gnulib module memrchr-tests

TESTS += test-memrchr
check_PROGRAMS += test-memrchr
EXTRA_DIST += test-memrchr.c zerosize-ptr.h signature.h macros.h

## end   gnulib module memrchr-tests

## begin gnulib module nanosleep


EXTRA_DIST += nanosleep.c

EXTRA_libtests_a_SOURCES += nanosleep.c

## end   gnulib module nanosleep

## begin gnulib module nanosleep-tests

TESTS += test-nanosleep
check_PROGRAMS += test-nanosleep
test_nanosleep_LDADD = $(LDADD) $(LIB_NANOSLEEP)
EXTRA_DIST += test-nanosleep.c signature.h macros.h

## end   gnulib module nanosleep-tests

## begin gnulib module netinet_in

BUILT_SOURCES += $(NETINET_IN_H)

# We need the following in order to create <netinet/in.h> when the system
# doesn't have one.
if GL_GENERATE_NETINET_IN_H
netinet/in.h: netinet_in.in.h $(top_builddir)/config.status
	$(AM_V_at)$(MKDIR_P) netinet
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_NETINET_IN_H''@|$(NEXT_NETINET_IN_H)|g' \
	      -e 's|@''HAVE_NETINET_IN_H''@|$(HAVE_NETINET_IN_H)|g' \
	      < $(srcdir)/netinet_in.in.h; \
	} > $@-t && \
	mv $@-t $@
else
netinet/in.h: $(top_builddir)/config.status
	rm -f $@
endif
MOSTLYCLEANFILES += netinet/in.h netinet/in.h-t
MOSTLYCLEANDIRS += netinet

EXTRA_DIST += netinet_in.in.h

## end   gnulib module netinet_in

## begin gnulib module netinet_in-tests

TESTS += test-netinet_in
check_PROGRAMS += test-netinet_in
EXTRA_DIST += test-netinet_in.c

## end   gnulib module netinet_in-tests

## begin gnulib module nl_langinfo-tests

TESTS += test-nl_langinfo.sh
TESTS_ENVIRONMENT += LOCALE_FR='@LOCALE_FR@' LOCALE_FR_UTF8='@LOCALE_FR_UTF8@'
check_PROGRAMS += test-nl_langinfo
EXTRA_DIST += test-nl_langinfo.sh test-nl_langinfo.c signature.h macros.h

## end   gnulib module nl_langinfo-tests

## begin gnulib module open


EXTRA_DIST += open.c

EXTRA_libtests_a_SOURCES += open.c

## end   gnulib module open

## begin gnulib module open-tests

TESTS += test-open
check_PROGRAMS += test-open
EXTRA_DIST += test-open.h test-open.c signature.h macros.h

## end   gnulib module open-tests

## begin gnulib module opendir


EXTRA_DIST += dirent-private.h opendir.c

EXTRA_libtests_a_SOURCES += opendir.c

## end   gnulib module opendir

## begin gnulib module pathmax-tests

TESTS += test-pathmax
check_PROGRAMS += test-pathmax
EXTRA_DIST += test-pathmax.c

## end   gnulib module pathmax-tests

## begin gnulib module perror


EXTRA_DIST += perror.c

EXTRA_libtests_a_SOURCES += perror.c

## end   gnulib module perror

## begin gnulib module perror-tests

TESTS += test-perror.sh test-perror2
check_PROGRAMS += test-perror test-perror2
EXTRA_DIST += macros.h signature.h test-perror.c test-perror2.c test-perror.sh

## end   gnulib module perror-tests

## begin gnulib module pipe-posix


EXTRA_DIST += pipe.c

EXTRA_libtests_a_SOURCES += pipe.c

## end   gnulib module pipe-posix

## begin gnulib module pipe-posix-tests

TESTS += test-pipe
check_PROGRAMS += test-pipe
EXTRA_DIST += test-pipe.c signature.h macros.h

## end   gnulib module pipe-posix-tests

## begin gnulib module putenv


EXTRA_DIST += putenv.c

EXTRA_libtests_a_SOURCES += putenv.c

## end   gnulib module putenv

## begin gnulib module quotearg-simple-tests

TESTS += test-quotearg-simple
check_PROGRAMS += test-quotearg-simple
test_quotearg_simple_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-quotearg-simple.c test-quotearg.h macros.h zerosize-ptr.h

## end   gnulib module quotearg-simple-tests

## begin gnulib module raise


EXTRA_DIST += raise.c

EXTRA_libtests_a_SOURCES += raise.c

## end   gnulib module raise

## begin gnulib module raise-tests

TESTS += test-raise
check_PROGRAMS += test-raise
EXTRA_DIST += test-raise.c signature.h macros.h

## end   gnulib module raise-tests

## begin gnulib module read-file

libtests_a_SOURCES += read-file.c

EXTRA_DIST += read-file.h

## end   gnulib module read-file

## begin gnulib module read-file-tests

TESTS += test-read-file
check_PROGRAMS += test-read-file
EXTRA_DIST += test-read-file.c

## end   gnulib module read-file-tests

## begin gnulib module readdir


EXTRA_DIST += dirent-private.h readdir.c

EXTRA_libtests_a_SOURCES += readdir.c

## end   gnulib module readdir

## begin gnulib module readlink-tests

TESTS += test-readlink
check_PROGRAMS += test-readlink
EXTRA_DIST += test-readlink.h test-readlink.c signature.h macros.h

## end   gnulib module readlink-tests

## begin gnulib module realloc-posix


EXTRA_DIST += realloc.c

EXTRA_libtests_a_SOURCES += realloc.c

## end   gnulib module realloc-posix

## begin gnulib module regex-tests

TESTS += test-regex
check_PROGRAMS += test-regex
test_regex_LDADD = $(LDADD) @LIBINTL@ $(LIBTHREAD) $(LIB_PTHREAD)
EXTRA_DIST += test-regex.c macros.h

## end   gnulib module regex-tests

## begin gnulib module rename-tests

TESTS += test-rename
check_PROGRAMS += test-rename
EXTRA_DIST += test-rename.h test-rename.c signature.h macros.h

## end   gnulib module rename-tests

## begin gnulib module rmdir-tests

TESTS += test-rmdir
check_PROGRAMS += test-rmdir
EXTRA_DIST += test-rmdir.h test-rmdir.c signature.h macros.h

## end   gnulib module rmdir-tests

## begin gnulib module select


EXTRA_DIST += select.c

EXTRA_libtests_a_SOURCES += select.c

## end   gnulib module select

## begin gnulib module select-tests

TESTS += test-select test-select-in.sh test-select-out.sh
# test-select-stdin has to be run by hand.
check_PROGRAMS += test-select test-select-fd test-select-stdin
test_select_LDADD = $(LDADD) @LIB_SELECT@ @LIBSOCKET@ $(INET_PTON_LIB)
test_select_fd_LDADD = $(LDADD) @LIB_SELECT@
test_select_stdin_LDADD = $(LDADD) @LIB_SELECT@
EXTRA_DIST += macros.h signature.h test-select.c test-select.h test-select-fd.c test-select-in.sh test-select-out.sh test-select-stdin.c

## end   gnulib module select-tests

## begin gnulib module setenv


EXTRA_DIST += setenv.c

EXTRA_libtests_a_SOURCES += setenv.c

## end   gnulib module setenv

## begin gnulib module setenv-tests

TESTS += test-setenv
check_PROGRAMS += test-setenv
EXTRA_DIST += test-setenv.c signature.h macros.h

## end   gnulib module setenv-tests

## begin gnulib module setlocale


EXTRA_DIST += setlocale.c

EXTRA_libtests_a_SOURCES += setlocale.c

## end   gnulib module setlocale

## begin gnulib module setlocale-tests

TESTS += test-setlocale1.sh test-setlocale2.sh
TESTS_ENVIRONMENT += \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-setlocale1 test-setlocale2
EXTRA_DIST += test-setlocale1.sh test-setlocale1.c test-setlocale2.sh test-setlocale2.c signature.h macros.h

## end   gnulib module setlocale-tests

## begin gnulib module setsockopt


EXTRA_DIST += setsockopt.c w32sock.h

EXTRA_libtests_a_SOURCES += setsockopt.c

## end   gnulib module setsockopt

## begin gnulib module setsockopt-tests

TESTS += test-setsockopt
check_PROGRAMS += test-setsockopt
test_setsockopt_LDADD = $(LDADD) @LIBSOCKET@
EXTRA_DIST += test-setsockopt.c signature.h macros.h

## end   gnulib module setsockopt-tests

## begin gnulib module sigaction

libtests_a_SOURCES += sig-handler.c

EXTRA_DIST += sig-handler.h sigaction.c

EXTRA_libtests_a_SOURCES += sigaction.c

## end   gnulib module sigaction

## begin gnulib module sigaction-tests

TESTS += test-sigaction
check_PROGRAMS += test-sigaction
EXTRA_DIST += test-sigaction.c signature.h macros.h

## end   gnulib module sigaction-tests

## begin gnulib module signal-h

BUILT_SOURCES += signal.h

# We need the following in order to create <signal.h> when the system
# doesn't have a complete one.
signal.h: signal.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(ARG_NONNULL_H) $(WARN_ON_USE_H)
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */' && \
	  sed -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SIGNAL_H''@|$(NEXT_SIGNAL_H)|g' \
	      -e 's/@''GNULIB_PTHREAD_SIGMASK''@/$(GNULIB_PTHREAD_SIGMASK)/g' \
	      -e 's/@''GNULIB_RAISE''@/$(GNULIB_RAISE)/g' \
	      -e 's/@''GNULIB_SIGNAL_H_SIGPIPE''@/$(GNULIB_SIGNAL_H_SIGPIPE)/g' \
	      -e 's/@''GNULIB_SIGPROCMASK''@/$(GNULIB_SIGPROCMASK)/g' \
	      -e 's/@''GNULIB_SIGACTION''@/$(GNULIB_SIGACTION)/g' \
	      -e 's|@''HAVE_POSIX_SIGNALBLOCKING''@|$(HAVE_POSIX_SIGNALBLOCKING)|g' \
	      -e 's|@''HAVE_PTHREAD_SIGMASK''@|$(HAVE_PTHREAD_SIGMASK)|g' \
	      -e 's|@''HAVE_RAISE''@|$(HAVE_RAISE)|g' \
	      -e 's|@''HAVE_SIGSET_T''@|$(HAVE_SIGSET_T)|g' \
	      -e 's|@''HAVE_SIGINFO_T''@|$(HAVE_SIGINFO_T)|g' \
	      -e 's|@''HAVE_SIGACTION''@|$(HAVE_SIGACTION)|g' \
	      -e 's|@''HAVE_STRUCT_SIGACTION_SA_SIGACTION''@|$(HAVE_STRUCT_SIGACTION_SA_SIGACTION)|g' \
	      -e 's|@''HAVE_TYPE_VOLATILE_SIG_ATOMIC_T''@|$(HAVE_TYPE_VOLATILE_SIG_ATOMIC_T)|g' \
	      -e 's|@''HAVE_SIGHANDLER_T''@|$(HAVE_SIGHANDLER_T)|g' \
	      -e 's|@''REPLACE_PTHREAD_SIGMASK''@|$(REPLACE_PTHREAD_SIGMASK)|g' \
	      -e 's|@''REPLACE_RAISE''@|$(REPLACE_RAISE)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_ARG_NONNULL/r $(ARG_NONNULL_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      < $(srcdir)/signal.in.h; \
	} > $@-t && \
	mv $@-t $@
MOSTLYCLEANFILES += signal.h signal.h-t

EXTRA_DIST += signal.in.h

## end   gnulib module signal-h

## begin gnulib module signal-h-tests

TESTS += test-signal-h
check_PROGRAMS += test-signal-h
EXTRA_DIST += test-signal-h.c

## end   gnulib module signal-h-tests

## begin gnulib module sigprocmask


EXTRA_DIST += sigprocmask.c

EXTRA_libtests_a_SOURCES += sigprocmask.c

## end   gnulib module sigprocmask

## begin gnulib module sigprocmask-tests

TESTS += test-sigprocmask
check_PROGRAMS += test-sigprocmask
EXTRA_DIST += test-sigprocmask.c signature.h macros.h

## end   gnulib module sigprocmask-tests

## begin gnulib module sleep


EXTRA_DIST += sleep.c

EXTRA_libtests_a_SOURCES += sleep.c

## end   gnulib module sleep

## begin gnulib module sleep-tests

TESTS += test-sleep
check_PROGRAMS += test-sleep
EXTRA_DIST += test-sleep.c signature.h macros.h

## end   gnulib module sleep-tests

## begin gnulib module snippet/_Noreturn

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

_NORETURN_H=$(srcdir)/_Noreturn.h

EXTRA_DIST += _Noreturn.h

## end   gnulib module snippet/_Noreturn

## begin gnulib module snippet/arg-nonnull

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

ARG_NONNULL_H=$(srcdir)/arg-nonnull.h

EXTRA_DIST += arg-nonnull.h

## end   gnulib module snippet/arg-nonnull

## begin gnulib module snippet/c++defs

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

CXXDEFS_H=$(srcdir)/c++defs.h

EXTRA_DIST += c++defs.h

## end   gnulib module snippet/c++defs

## begin gnulib module snippet/unused-parameter

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

UNUSED_PARAMETER_H=$(srcdir)/unused-parameter.h

EXTRA_DIST += unused-parameter.h

## end   gnulib module snippet/unused-parameter

## begin gnulib module snippet/warn-on-use

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

WARN_ON_USE_H=$(srcdir)/warn-on-use.h

EXTRA_DIST += warn-on-use.h

## end   gnulib module snippet/warn-on-use

## begin gnulib module socket


EXTRA_DIST += socket.c w32sock.h

EXTRA_libtests_a_SOURCES += socket.c

## end   gnulib module socket

## begin gnulib module sockets

libtests_a_SOURCES += sockets.h sockets.c

EXTRA_DIST += w32sock.h

## end   gnulib module sockets

## begin gnulib module sockets-tests

TESTS += test-sockets
check_PROGRAMS += test-sockets
test_sockets_LDADD = $(LDADD) @LIBSOCKET@
EXTRA_DIST += test-sockets.c

## end   gnulib module sockets-tests

## begin gnulib module stat-tests

TESTS += test-stat
check_PROGRAMS += test-stat
test_stat_LDADD = $(LDADD) $(LIBINTL)
EXTRA_DIST += test-stat.h test-stat.c signature.h macros.h

## end   gnulib module stat-tests

## begin gnulib module stat-time-tests

TESTS += test-stat-time
check_PROGRAMS += test-stat-time
test_stat_time_LDADD = $(LDADD) $(LIB_NANOSLEEP)
EXTRA_DIST += test-stat-time.c macros.h nap.h

## end   gnulib module stat-time-tests

## begin gnulib module stdalign-tests

TESTS += test-stdalign
check_PROGRAMS += test-stdalign
EXTRA_DIST += test-stdalign.c macros.h

## end   gnulib module stdalign-tests

## begin gnulib module stdbool-tests

TESTS += test-stdbool
check_PROGRAMS += test-stdbool
EXTRA_DIST += test-stdbool.c

## end   gnulib module stdbool-tests

## begin gnulib module stddef-tests

TESTS += test-stddef
check_PROGRAMS += test-stddef
EXTRA_DIST += test-stddef.c

## end   gnulib module stddef-tests

## begin gnulib module stdint-tests

TESTS += test-stdint
check_PROGRAMS += test-stdint
EXTRA_DIST += test-stdint.c

## end   gnulib module stdint-tests

## begin gnulib module stdio-tests

TESTS += test-stdio
check_PROGRAMS += test-stdio
EXTRA_DIST += test-stdio.c

## end   gnulib module stdio-tests

## begin gnulib module stdlib-tests

TESTS += test-stdlib
check_PROGRAMS += test-stdlib
EXTRA_DIST += test-stdlib.c test-sys_wait.h

## end   gnulib module stdlib-tests

## begin gnulib module strdup-posix


EXTRA_DIST += strdup.c

EXTRA_libtests_a_SOURCES += strdup.c

## end   gnulib module strdup-posix

## begin gnulib module strerror-tests

TESTS += test-strerror
check_PROGRAMS += test-strerror
EXTRA_DIST += test-strerror.c signature.h macros.h

## end   gnulib module strerror-tests

## begin gnulib module strerror_r-posix


EXTRA_DIST += strerror_r.c

EXTRA_libtests_a_SOURCES += strerror_r.c

## end   gnulib module strerror_r-posix

## begin gnulib module strerror_r-posix-tests

TESTS += test-strerror_r
check_PROGRAMS += test-strerror_r
EXTRA_DIST += test-strerror_r.c signature.h macros.h

## end   gnulib module strerror_r-posix-tests

## begin gnulib module string-tests

TESTS += test-string
check_PROGRAMS += test-string
EXTRA_DIST += test-string.c

## end   gnulib module string-tests

## begin gnulib module strverscmp-tests

TESTS += test-strverscmp
check_PROGRAMS += test-strverscmp
EXTRA_DIST += test-strverscmp.c signature.h macros.h

## end   gnulib module strverscmp-tests

## begin gnulib module symlink


EXTRA_DIST += symlink.c

EXTRA_libtests_a_SOURCES += symlink.c

## end   gnulib module symlink

## begin gnulib module symlink-tests

TESTS += test-symlink
check_PROGRAMS += test-symlink
EXTRA_DIST += test-symlink.h test-symlink.c signature.h macros.h

## end   gnulib module symlink-tests

## begin gnulib module sys_ioctl

BUILT_SOURCES += sys/ioctl.h

# We need the following in order to create <sys/ioctl.h> when the system
# does not have a complete one.
sys/ioctl.h: sys_ioctl.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(WARN_ON_USE_H)
	$(AM_V_at)$(MKDIR_P) sys
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''HAVE_SYS_IOCTL_H''@|$(HAVE_SYS_IOCTL_H)|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SYS_IOCTL_H''@|$(NEXT_SYS_IOCTL_H)|g' \
	      -e 's/@''GNULIB_IOCTL''@/$(GNULIB_IOCTL)/g' \
	      -e 's|@''SYS_IOCTL_H_HAVE_WINSOCK2_H''@|$(SYS_IOCTL_H_HAVE_WINSOCK2_H)|g' \
	      -e 's|@''SYS_IOCTL_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS''@|$(SYS_IOCTL_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS)|g' \
	      -e 's|@''REPLACE_IOCTL''@|$(REPLACE_IOCTL)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      < $(srcdir)/sys_ioctl.in.h; \
	} > $@-t && \
	mv $@-t $@
MOSTLYCLEANFILES += sys/ioctl.h sys/ioctl.h-t
MOSTLYCLEANDIRS += sys

EXTRA_DIST += sys_ioctl.in.h

## end   gnulib module sys_ioctl

## begin gnulib module sys_ioctl-tests

TESTS += test-sys_ioctl
check_PROGRAMS += test-sys_ioctl
EXTRA_DIST += test-sys_ioctl.c

## end   gnulib module sys_ioctl-tests

## begin gnulib module sys_select

BUILT_SOURCES += sys/select.h

# We need the following in order to create <sys/select.h> when the system
# doesn't have one that works with the given compiler.
sys/select.h: sys_select.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(WARN_ON_USE_H)
	$(AM_V_at)$(MKDIR_P) sys
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SYS_SELECT_H''@|$(NEXT_SYS_SELECT_H)|g' \
	      -e 's|@''HAVE_SYS_SELECT_H''@|$(HAVE_SYS_SELECT_H)|g' \
	      -e 's/@''GNULIB_PSELECT''@/$(GNULIB_PSELECT)/g' \
	      -e 's/@''GNULIB_SELECT''@/$(GNULIB_SELECT)/g' \
	      -e 's|@''HAVE_WINSOCK2_H''@|$(HAVE_WINSOCK2_H)|g' \
	      -e 's|@''HAVE_PSELECT''@|$(HAVE_PSELECT)|g' \
	      -e 's|@''REPLACE_PSELECT''@|$(REPLACE_PSELECT)|g' \
	      -e 's|@''REPLACE_SELECT''@|$(REPLACE_SELECT)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      < $(srcdir)/sys_select.in.h; \
	} > $@-t && \
	mv $@-t $@
MOSTLYCLEANFILES += sys/select.h sys/select.h-t
MOSTLYCLEANDIRS += sys

EXTRA_DIST += sys_select.in.h

## end   gnulib module sys_select

## begin gnulib module sys_select-tests

TESTS += test-sys_select
check_PROGRAMS += test-sys_select
EXTRA_DIST += test-sys_select.c signature.h

## end   gnulib module sys_select-tests

## begin gnulib module sys_socket

BUILT_SOURCES += sys/socket.h
libtests_a_SOURCES += sys_socket.c

# We need the following in order to create <sys/socket.h> when the system
# doesn't have one that works with the given compiler.
sys/socket.h: sys_socket.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(WARN_ON_USE_H) $(ARG_NONNULL_H)
	$(AM_V_at)$(MKDIR_P) sys
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SYS_SOCKET_H''@|$(NEXT_SYS_SOCKET_H)|g' \
	      -e 's|@''HAVE_SYS_SOCKET_H''@|$(HAVE_SYS_SOCKET_H)|g' \
	      -e 's/@''GNULIB_CLOSE''@/$(GNULIB_CLOSE)/g' \
	      -e 's/@''GNULIB_SOCKET''@/$(GNULIB_SOCKET)/g' \
	      -e 's/@''GNULIB_CONNECT''@/$(GNULIB_CONNECT)/g' \
	      -e 's/@''GNULIB_ACCEPT''@/$(GNULIB_ACCEPT)/g' \
	      -e 's/@''GNULIB_BIND''@/$(GNULIB_BIND)/g' \
	      -e 's/@''GNULIB_GETPEERNAME''@/$(GNULIB_GETPEERNAME)/g' \
	      -e 's/@''GNULIB_GETSOCKNAME''@/$(GNULIB_GETSOCKNAME)/g' \
	      -e 's/@''GNULIB_GETSOCKOPT''@/$(GNULIB_GETSOCKOPT)/g' \
	      -e 's/@''GNULIB_LISTEN''@/$(GNULIB_LISTEN)/g' \
	      -e 's/@''GNULIB_RECV''@/$(GNULIB_RECV)/g' \
	      -e 's/@''GNULIB_SEND''@/$(GNULIB_SEND)/g' \
	      -e 's/@''GNULIB_RECVFROM''@/$(GNULIB_RECVFROM)/g' \
	      -e 's/@''GNULIB_SENDTO''@/$(GNULIB_SENDTO)/g' \
	      -e 's/@''GNULIB_SETSOCKOPT''@/$(GNULIB_SETSOCKOPT)/g' \
	      -e 's/@''GNULIB_SHUTDOWN''@/$(GNULIB_SHUTDOWN)/g' \
	      -e 's/@''GNULIB_ACCEPT4''@/$(GNULIB_ACCEPT4)/g' \
	      -e 's|@''HAVE_WINSOCK2_H''@|$(HAVE_WINSOCK2_H)|g' \
	      -e 's|@''HAVE_WS2TCPIP_H''@|$(HAVE_WS2TCPIP_H)|g' \
	      -e 's|@''HAVE_STRUCT_SOCKADDR_STORAGE''@|$(HAVE_STRUCT_SOCKADDR_STORAGE)|g' \
	      -e 's|@''HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY''@|$(HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY)|g' \
	      -e 's|@''HAVE_SA_FAMILY_T''@|$(HAVE_SA_FAMILY_T)|g' \
	      -e 's|@''HAVE_ACCEPT4''@|$(HAVE_ACCEPT4)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_ARG_NONNULL/r $(ARG_NONNULL_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      < $(srcdir)/sys_socket.in.h; \
	} > $@-t && \
	mv -f $@-t $@
MOSTLYCLEANFILES += sys/socket.h sys/socket.h-t
MOSTLYCLEANDIRS += sys

EXTRA_DIST += sys_socket.in.h

## end   gnulib module sys_socket

## begin gnulib module sys_socket-tests

TESTS += test-sys_socket
check_PROGRAMS += test-sys_socket
EXTRA_DIST += test-sys_socket.c

## end   gnulib module sys_socket-tests

## begin gnulib module sys_stat-tests

TESTS += test-sys_stat
check_PROGRAMS += test-sys_stat
EXTRA_DIST += test-sys_stat.c

## end   gnulib module sys_stat-tests

## begin gnulib module sys_time-tests

TESTS += test-sys_time
check_PROGRAMS += test-sys_time
EXTRA_DIST += test-sys_time.c

## end   gnulib module sys_time-tests

## begin gnulib module sys_types-tests

TESTS += test-sys_types
check_PROGRAMS += test-sys_types
EXTRA_DIST += test-sys_types.c

## end   gnulib module sys_types-tests

## begin gnulib module sys_uio

BUILT_SOURCES += sys/uio.h

# We need the following in order to create <sys/uio.h> when the system
# doesn't have one that works with the given compiler.
sys/uio.h: sys_uio.in.h $(top_builddir)/config.status
	$(AM_V_at)$(MKDIR_P) sys
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SYS_UIO_H''@|$(NEXT_SYS_UIO_H)|g' \
	      -e 's|@''HAVE_SYS_UIO_H''@|$(HAVE_SYS_UIO_H)|g' \
	      < $(srcdir)/sys_uio.in.h; \
	} > $@-t && \
	mv -f $@-t $@
MOSTLYCLEANFILES += sys/uio.h sys/uio.h-t
MOSTLYCLEANDIRS += sys

EXTRA_DIST += sys_uio.in.h

## end   gnulib module sys_uio

## begin gnulib module sys_uio-tests

TESTS += test-sys_uio
check_PROGRAMS += test-sys_uio
EXTRA_DIST += test-sys_uio.c

## end   gnulib module sys_uio-tests

## begin gnulib module test-framework-sh-tests

TESTS += test-init.sh
EXTRA_DIST += init.sh
EXTRA_DIST += test-init.sh

## end   gnulib module test-framework-sh-tests

## begin gnulib module time-tests

TESTS += test-time
check_PROGRAMS += test-time
EXTRA_DIST += test-time.c

## end   gnulib module time-tests

## begin gnulib module unistd-tests

TESTS += test-unistd
check_PROGRAMS += test-unistd
EXTRA_DIST += test-unistd.c

## end   gnulib module unistd-tests

## begin gnulib module unsetenv


EXTRA_DIST += unsetenv.c

EXTRA_libtests_a_SOURCES += unsetenv.c

## end   gnulib module unsetenv

## begin gnulib module unsetenv-tests

TESTS += test-unsetenv
check_PROGRAMS += test-unsetenv
EXTRA_DIST += test-unsetenv.c signature.h macros.h

## end   gnulib module unsetenv-tests

## begin gnulib module update-copyright-tests

TESTS += test-update-copyright.sh
TESTS_ENVIRONMENT += abs_aux_dir='$(abs_aux_dir)'
EXTRA_DIST += test-update-copyright.sh

## end   gnulib module update-copyright-tests

## begin gnulib module vc-list-files-tests

TESTS += test-vc-list-files-git.sh
TESTS += test-vc-list-files-cvs.sh
TESTS_ENVIRONMENT += abs_aux_dir='$(abs_aux_dir)'
EXTRA_DIST += test-vc-list-files-git.sh test-vc-list-files-cvs.sh

## end   gnulib module vc-list-files-tests

## begin gnulib module verify-tests

TESTS_ENVIRONMENT += MAKE='$(MAKE)'
TESTS += test-verify test-verify.sh
check_PROGRAMS += test-verify
# test-verify-try is never built, but test-verify.sh needs a rule to
# build test-verify-try.o.
EXTRA_PROGRAMS += test-verify-try

# This test expects compilation of test-verify-try.c to fail, and
# each time it fails, the makefile rule does not perform the usual
#  "mv -f $name.Tpo $name.po, so tell make clean to remove that file.
MOSTLYCLEANFILES += .deps/test-verify-try.Tpo
EXTRA_DIST += test-verify.c test-verify-try.c test-verify.sh

## end   gnulib module verify-tests

## begin gnulib module version-etc-tests

TESTS += test-version-etc.sh
check_PROGRAMS += test-version-etc
test_version_etc_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-version-etc.c test-version-etc.sh

## end   gnulib module version-etc-tests

## begin gnulib module wchar-tests

TESTS += test-wchar
check_PROGRAMS += test-wchar
EXTRA_DIST += test-wchar.c

## end   gnulib module wchar-tests

## begin gnulib module wcrtomb-tests

TESTS += \
  test-wcrtomb.sh \
  test-wcrtomb-w32-1.sh test-wcrtomb-w32-2.sh test-wcrtomb-w32-3.sh \
  test-wcrtomb-w32-4.sh test-wcrtomb-w32-5.sh
TESTS_ENVIRONMENT += \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-wcrtomb test-wcrtomb-w32

EXTRA_DIST += test-wcrtomb.sh test-wcrtomb.c test-wcrtomb-w32-1.sh test-wcrtomb-w32-2.sh test-wcrtomb-w32-3.sh test-wcrtomb-w32-4.sh test-wcrtomb-w32-5.sh test-wcrtomb-w32.c signature.h macros.h

## end   gnulib module wcrtomb-tests

## begin gnulib module wctype-h-tests

TESTS += test-wctype-h
check_PROGRAMS += test-wctype-h
EXTRA_DIST += test-wctype-h.c macros.h

## end   gnulib module wctype-h-tests

## begin gnulib module xalloc-die-tests

TESTS += test-xalloc-die.sh
check_PROGRAMS += test-xalloc-die
test_xalloc_die_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-xalloc-die.c test-xalloc-die.sh

## end   gnulib module xalloc-die-tests

# Clean up after Solaris cc.
clean-local:
	rm -rf SunWS_cache

mostlyclean-local: mostlyclean-generic
	@for dir in '' $(MOSTLYCLEANDIRS); do \
	  if test -n "$$dir" && test -d $$dir; then \
	    echo "rmdir $$dir"; rmdir $$dir; \
	  fi; \
	done; \
	:
