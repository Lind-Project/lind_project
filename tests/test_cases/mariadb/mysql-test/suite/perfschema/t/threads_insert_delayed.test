
# Tests for special content of performance_schema.threads
#
# The feature INSERT DELAYED (supported by MyISAM,MEMORY,ARCHIVE,BLACKHOLE)
#    causes that a "delayed_insert" thread shows up as soon as the first
#    INSERT DELAYED was issued.

--source include/not_embedded.inc
--source include/have_perfschema.inc

--disable_warnings
DROP TABLE IF EXISTS t1;
DROP TEMPORARY TABLE IF EXISTS t2;
--enable_warnings
CREATE TABLE t1 (f1 BIGINT) ENGINE = MyISAM;
CREATE TEMPORARY TABLE t2 AS
SELECT thread_id FROM performance_schema.threads WHERE 1 = 2;

# Reveal that the delayed_insert thread does not exist.
# Note(mleich): This expectation is probably not all time true.
SELECT COUNT(*) = 0 AS expect_1 FROM performance_schema.threads
WHERE name = 'thread/sql/delayed_insert';

INSERT INTO t2 SELECT thread_id
FROM performance_schema.threads;

let $wait_condition= SELECT COUNT(*) = 1 AS expect_0 FROM performance_schema.threads
WHERE name = 'thread/sql/delayed_insert';
INSERT DELAYED INTO t1 SET f1 = SLEEP(3);
--source include/wait_condition.inc

# Expect to get
# thread/sql/delayed_insert	FOREGROUND	YES	root	localhost
SELECT name, type, instrumented, processlist_user, processlist_host
FROM performance_schema.threads
WHERE thread_id NOT IN (SELECT thread_id FROM t2);

DROP TABLE t1;
DROP TEMPORARY TABLE t2;

