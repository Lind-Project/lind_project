<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1686.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1669" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1669" > </text>
<g id="frames">
<g >
<title>[unknown] (44,882,240,942 samples, 1.69%)</title><rect x="43.7" y="1605" width="19.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="46.71" y="1615.5" ></text>
</g>
<g >
<title>do_madvise.part.0 (296,123,597 samples, 0.01%)</title><rect x="75.9" y="1541" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="78.91" y="1551.5" ></text>
</g>
<g >
<title>rcu_core (327,337,263 samples, 0.01%)</title><rect x="1187.1" y="1509" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1190.08" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (2,655,902,536 samples, 0.10%)</title><rect x="109.0" y="1557" width="1.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="112.01" y="1567.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (14,329,379,405 samples, 0.54%)</title><rect x="977.3" y="1477" width="6.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="980.26" y="1487.5" ></text>
</g>
<g >
<title>__handle_mm_fault (368,445,666 samples, 0.01%)</title><rect x="1145.9" y="1397" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1148.92" y="1407.5" ></text>
</g>
<g >
<title>dequeue_entity (979,822,862 samples, 0.04%)</title><rect x="1047.6" y="1269" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1050.59" y="1279.5" ></text>
</g>
<g >
<title>msvc::path_utf8::split_path (1,182,851,782 samples, 0.04%)</title><rect x="139.8" y="1445" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="142.81" y="1455.5" ></text>
</g>
<g >
<title>NaClLog (737,565,367 samples, 0.03%)</title><rect x="1003.3" y="1541" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1006.30" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1477" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="1487.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (590,514,527 samples, 0.02%)</title><rect x="119.8" y="1397" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="122.76" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,087,611,536 samples, 0.12%)</title><rect x="162.1" y="997" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.07" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,999,628,511 samples, 0.15%)</title><rect x="1044.6" y="1429" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1047.64" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="645" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (475,731,535 samples, 0.02%)</title><rect x="1145.6" y="1509" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1148.60" y="1519.5" ></text>
</g>
<g >
<title>msvc::path_utf8::split_path (5,169,948,696 samples, 0.19%)</title><rect x="144.2" y="1445" width="2.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="147.20" y="1455.5" ></text>
</g>
<g >
<title>__d_alloc (1,779,204,299 samples, 0.07%)</title><rect x="1057.6" y="1317" width="0.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1060.60" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="677" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="687.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (604,010,419 samples, 0.02%)</title><rect x="1181.4" y="1445" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1184.43" y="1455.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (3,763,864,202 samples, 0.14%)</title><rect x="175.5" y="1573" width="1.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="178.48" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (2,329,164,629 samples, 0.09%)</title><rect x="167.7" y="1605" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="170.73" y="1615.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (647,444,930 samples, 0.02%)</title><rect x="1049.4" y="1381" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1052.37" y="1391.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,214,329,077 samples, 0.05%)</title><rect x="1187.5" y="1477" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1190.52" y="1487.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (14,329,379,405 samples, 0.54%)</title><rect x="977.3" y="1461" width="6.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="980.26" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="693" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="703.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (412,922,590 samples, 0.02%)</title><rect x="194.9" y="1493" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="197.90" y="1503.5" ></text>
</g>
<g >
<title>get_meta (295,851,566 samples, 0.01%)</title><rect x="153.7" y="1509" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="156.70" y="1519.5" ></text>
</g>
<g >
<title>mmput (471,781,894 samples, 0.02%)</title><rect x="167.3" y="1429" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="170.30" y="1439.5" ></text>
</g>
<g >
<title>filename_lookup (2,215,173,191 samples, 0.08%)</title><rect x="56.4" y="1477" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="59.38" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1445" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (246,481,922 samples, 0.01%)</title><rect x="143.0" y="1413" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="146.02" y="1423.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (1,799,025,792 samples, 0.07%)</title><rect x="148.2" y="1397" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="151.15" y="1407.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (229,185,688 samples, 0.01%)</title><rect x="161.2" y="1493" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="164.19" y="1503.5" ></text>
</g>
<g >
<title>getPageNormal (444,178,668 samples, 0.02%)</title><rect x="123.9" y="1365" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="126.88" y="1375.5" ></text>
</g>
<g >
<title>NaClSysMmapIntern (773,422,437 samples, 0.03%)</title><rect x="329.5" y="1541" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="332.46" y="1551.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1493" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1004.48" y="1503.5" ></text>
</g>
<g >
<title>call_filldir (246,438,332 samples, 0.01%)</title><rect x="58.8" y="1429" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="61.78" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1285" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="469" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (230,242,911 samples, 0.01%)</title><rect x="163.4" y="1013" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="166.44" y="1023.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (1,080,149,226 samples, 0.04%)</title><rect x="57.5" y="1477" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="60.50" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,493,801,851 samples, 0.17%)</title><rect x="162.0" y="1429" width="2.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.01" y="1439.5" ></text>
</g>
<g >
<title>code_store::store_t::start_transaction (442,886,086 samples, 0.02%)</title><rect x="149.0" y="1429" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="152.00" y="1439.5" ></text>
</g>
<g >
<title>code_store::generate_files_query_string (541,923,624 samples, 0.02%)</title><rect x="137.8" y="1413" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="140.85" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (345,430,202 samples, 0.01%)</title><rect x="146.5" y="1445" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="149.51" y="1455.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (1,342,630,132 samples, 0.05%)</title><rect x="168.2" y="1557" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="171.16" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,087,611,536 samples, 0.12%)</title><rect x="162.1" y="981" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.07" y="991.5" ></text>
</g>
<g >
<title>[libc.so.6] (317,926,318 samples, 0.01%)</title><rect x="164.8" y="69" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="167.80" y="79.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (2,172,216,123 samples, 0.08%)</title><rect x="303.8" y="1541" width="0.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="306.75" y="1551.5" ></text>
</g>
<g >
<title>msvc::path_utf8::path_utf8 (1,833,416,262 samples, 0.07%)</title><rect x="152.8" y="1461" width="0.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="155.77" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17,270,848,873 samples, 0.65%)</title><rect x="1063.5" y="1413" width="7.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1066.48" y="1423.5" ></text>
</g>
<g >
<title>fsnotify (333,775,257 samples, 0.01%)</title><rect x="168.2" y="1365" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="171.22" y="1375.5" ></text>
</g>
<g >
<title>restore_fpregs_from_fpstate (842,059,371 samples, 0.03%)</title><rect x="1070.7" y="1333" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1073.72" y="1343.5" ></text>
</g>
<g >
<title>generic_permission (304,851,148 samples, 0.01%)</title><rect x="60.1" y="1413" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="63.07" y="1423.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::sleep (19,984,794,534 samples, 0.75%)</title><rect x="1062.7" y="1461" width="8.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1065.65" y="1471.5" ></text>
</g>
<g >
<title>NaClSysSelect (71,954,467,117 samples, 2.70%)</title><rect x="1039.8" y="1557" width="31.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1042.75" y="1567.5" >Na..</text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (1,234,191,725 samples, 0.05%)</title><rect x="314.3" y="1493" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="317.30" y="1503.5" ></text>
</g>
<g >
<title>cpptools_context::handle_parse_file (74,544,394,620 samples, 2.80%)</title><rect x="120.8" y="1541" width="33.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="123.79" y="1551.5" >cp..</text>
</g>
<g >
<title>sqlite3_prepare_v3 (5,010,634,315 samples, 0.19%)</title><rect x="50.7" y="1461" width="2.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="53.71" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,873,641,544 samples, 0.07%)</title><rect x="162.1" y="741" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.11" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="709" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="719.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (492,806,453 samples, 0.02%)</title><rect x="1148.8" y="1589" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1151.84" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="693" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new::thread_start (280,270,610 samples, 0.01%)</title><rect x="1168.3" y="1573" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1171.34" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (271,465,696 samples, 0.01%)</title><rect x="40.7" y="1589" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="43.69" y="1599.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (256,036,707 samples, 0.01%)</title><rect x="1071.5" y="1445" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1074.54" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,311,513,332 samples, 0.05%)</title><rect x="164.8" y="133" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="143.5" ></text>
</g>
<g >
<title>dequeue_entity (3,023,807,740 samples, 0.11%)</title><rect x="1065.7" y="1253" width="1.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1068.74" y="1263.5" ></text>
</g>
<g >
<title>kworker/u48:6 (5,993,709,622 samples, 0.23%)</title><rect x="157.7" y="1621" width="2.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="160.74" y="1631.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (331,248,326 samples, 0.01%)</title><rect x="1060.3" y="1301" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1063.28" y="1311.5" ></text>
</g>
<g >
<title>walk_component (246,642,841 samples, 0.01%)</title><rect x="61.1" y="1461" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="64.10" y="1471.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (594,186,349 samples, 0.02%)</title><rect x="330.5" y="1541" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="333.48" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (345,371,332 samples, 0.01%)</title><rect x="75.9" y="1589" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="78.88" y="1599.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (244,156,139 samples, 0.01%)</title><rect x="1146.1" y="1589" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1149.09" y="1599.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (134,151,492,542 samples, 5.04%)</title><rect x="914.1" y="1477" width="59.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="917.09" y="1487.5" >std::t..</text>
</g>
<g >
<title>sched_ttwu_pending (300,877,562 samples, 0.01%)</title><rect x="157.3" y="1509" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="160.26" y="1519.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1237" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1004.48" y="1247.5" ></text>
</g>
<g >
<title>moveToRoot (394,863,494 samples, 0.01%)</title><rect x="136.4" y="1333" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.38" y="1343.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (9,727,264,861 samples, 0.37%)</title><rect x="178.8" y="1493" width="4.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="181.76" y="1503.5" ></text>
</g>
<g >
<title>msvc::directory_utf8_entry::directory_utf8_entry (1,981,196,130 samples, 0.07%)</title><rect x="54.7" y="1557" width="0.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="57.67" y="1567.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (297,363,456 samples, 0.01%)</title><rect x="1061.2" y="1205" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1064.18" y="1215.5" ></text>
</g>
<g >
<title>net_rx_action (623,287,393 samples, 0.02%)</title><rect x="1181.1" y="1413" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1184.11" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="741" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="751.5" ></text>
</g>
<g >
<title>sqlite3WalkSelect.part.0 (2,018,528,622 samples, 0.08%)</title><rect x="51.3" y="1365" width="0.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="54.30" y="1375.5" ></text>
</g>
<g >
<title>code_store::results_statement_t&lt;code_store::files_set_t, code_store::schema::files::read_statement_t, code_store::files_set&gt;::move_next (21,679,348,678 samples, 0.81%)</title><rect x="128.1" y="1429" width="9.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="131.15" y="1439.5" ></text>
</g>
<g >
<title>syscall (2,320,175,521 samples, 0.09%)</title><rect x="1050.2" y="1461" width="1.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1053.19" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,425,226,629 samples, 0.05%)</title><rect x="58.6" y="1573" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="61.59" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (901,802,358 samples, 0.03%)</title><rect x="167.8" y="1541" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="170.76" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="309" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="319.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (5,011,021,475 samples, 0.19%)</title><rect x="161.8" y="1541" width="2.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="164.81" y="1551.5" ></text>
</g>
<g >
<title>filename_lookup (1,083,736,671 samples, 0.04%)</title><rect x="110.4" y="1493" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="113.41" y="1503.5" ></text>
</g>
<g >
<title>exec_binprm (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1509" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="170.51" y="1519.5" ></text>
</g>
<g >
<title>getPageNormal (677,592,227 samples, 0.03%)</title><rect x="148.4" y="1349" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="151.37" y="1359.5" ></text>
</g>
<g >
<title>process_vm_rw (475,731,535 samples, 0.02%)</title><rect x="1145.6" y="1493" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1148.60" y="1503.5" ></text>
</g>
<g >
<title>handle_mm_fault (237,811,854 samples, 0.01%)</title><rect x="1145.7" y="1397" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1148.70" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="565" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="213" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_rt_sigprocmask (515,054,977 samples, 0.02%)</title><rect x="1168.1" y="1541" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1171.11" y="1551.5" ></text>
</g>
<g >
<title>__nanosleep (266,193,934 samples, 0.01%)</title><rect x="1168.3" y="1445" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1171.35" y="1455.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (257,922,284 samples, 0.01%)</title><rect x="1187.9" y="1445" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1190.93" y="1455.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1589" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="167.37" y="1599.5" ></text>
</g>
<g >
<title>iterate_dir (296,021,538 samples, 0.01%)</title><rect x="58.6" y="1493" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="61.63" y="1503.5" ></text>
</g>
<g >
<title>newidle_balance (1,142,782,829 samples, 0.04%)</title><rect x="1067.8" y="1253" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1070.76" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="613" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="623.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (242,772,255 samples, 0.01%)</title><rect x="168.4" y="1269" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="171.45" y="1279.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (296,123,597 samples, 0.01%)</title><rect x="75.9" y="1557" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="78.91" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1221" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1231.5" ></text>
</g>
<g >
<title>__switch_to (277,155,293 samples, 0.01%)</title><rect x="197.6" y="1509" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="200.58" y="1519.5" ></text>
</g>
<g >
<title>rcu_core_si (327,337,263 samples, 0.01%)</title><rect x="1187.1" y="1525" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1190.08" y="1535.5" ></text>
</g>
<g >
<title>update_curr (716,737,301 samples, 0.03%)</title><rect x="1066.3" y="1237" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1069.32" y="1247.5" ></text>
</g>
<g >
<title>rcu_core_si (2,651,226,946 samples, 0.10%)</title><rect x="175.7" y="1525" width="1.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="178.69" y="1535.5" ></text>
</g>
<g >
<title>rcu_core_si (1,326,595,013 samples, 0.05%)</title><rect x="182.1" y="1413" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="185.14" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="821" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="831.5" ></text>
</g>
<g >
<title>thread_pool::do_work (74,544,394,620 samples, 2.80%)</title><rect x="120.8" y="1573" width="33.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="123.79" y="1583.5" >th..</text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (3,742,186,190 samples, 0.14%)</title><rect x="1176.1" y="1605" width="1.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1179.05" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="949" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="959.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (107,818,867,298 samples, 4.05%)</title><rect x="925.8" y="1429" width="47.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="928.77" y="1439.5" >std:..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (273,442,215 samples, 0.01%)</title><rect x="1069.7" y="1349" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1072.68" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="421" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (325,282,904 samples, 0.01%)</title><rect x="164.0" y="1509" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="167.03" y="1519.5" ></text>
</g>
<g >
<title>code_store::statement_t::prepare (3,345,369,366 samples, 0.13%)</title><rect x="53.2" y="1493" width="1.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="56.19" y="1503.5" ></text>
</g>
<g >
<title>____fput (4,920,933,040 samples, 0.18%)</title><rect x="1060.1" y="1349" width="2.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1063.10" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1301" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="997" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1205" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1215.5" ></text>
</g>
<g >
<title>resolveSelectStep (1,221,604,921 samples, 0.05%)</title><rect x="50.0" y="1397" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="53.03" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1397" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1407.5" ></text>
</g>
<g >
<title>parking_lot::raw_mutex::RawMutex::lock_slow (246,597,286 samples, 0.01%)</title><rect x="1163.7" y="1573" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1166.71" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="885" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (687,658,680 samples, 0.03%)</title><rect x="42.4" y="1589" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="45.37" y="1599.5" ></text>
</g>
<g >
<title>pick_next_task (249,004,622 samples, 0.01%)</title><rect x="1189.7" y="1509" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1192.67" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_select (3,029,102,302 samples, 0.11%)</title><rect x="193.8" y="1525" width="1.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="196.77" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1061" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1071.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (982,406,799 samples, 0.04%)</title><rect x="61.2" y="1477" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="64.23" y="1487.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2,014,148,640 samples, 0.08%)</title><rect x="547.8" y="1445" width="0.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="550.81" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="709" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1189" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1199.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (3,400,412,293 samples, 0.13%)</title><rect x="414.8" y="1413" width="1.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="417.82" y="1423.5" ></text>
</g>
<g >
<title>moveToChild (641,364,736 samples, 0.02%)</title><rect x="131.3" y="1349" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="134.26" y="1359.5" ></text>
</g>
<g >
<title>pcache1Unpin (246,791,336 samples, 0.01%)</title><rect x="136.4" y="1317" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="139.40" y="1327.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1,730,024,708 samples, 0.06%)</title><rect x="198.0" y="1493" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="201.04" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1045" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1055.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (3,741,015,171 samples, 0.14%)</title><rect x="1051.3" y="1461" width="1.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1054.27" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="405" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::sub_timespec (1,930,166,409 samples, 0.07%)</title><rect x="1165.2" y="1589" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1168.19" y="1599.5" ></text>
</g>
<g >
<title>user_path_at_empty (4,831,638,880 samples, 0.18%)</title><rect x="59.5" y="1509" width="2.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="62.55" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (2,888,272,403 samples, 0.11%)</title><rect x="118.8" y="1557" width="1.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="121.85" y="1567.5" ></text>
</g>
<g >
<title>__entry_text_start (444,132,927 samples, 0.02%)</title><rect x="108.8" y="1589" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="111.82" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="213" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="869" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="879.5" ></text>
</g>
<g >
<title>do_anonymous_page (276,531,635 samples, 0.01%)</title><rect x="1145.9" y="1365" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1148.94" y="1375.5" ></text>
</g>
<g >
<title>__madvise (345,371,332 samples, 0.01%)</title><rect x="75.9" y="1605" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="78.88" y="1615.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (6,574,336,869 samples, 0.25%)</title><rect x="214.5" y="1589" width="3.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="217.54" y="1599.5" ></text>
</g>
<g >
<title>sqlite3WhereEnd (245,014,045 samples, 0.01%)</title><rect x="52.8" y="1381" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="55.80" y="1391.5" ></text>
</g>
<g >
<title>process_one_work (910,261,023 samples, 0.03%)</title><rect x="1180.6" y="1557" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1183.65" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="453" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1429" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="163.40" y="1439.5" ></text>
</g>
<g >
<title>try_to_wake_up (367,815,065 samples, 0.01%)</title><rect x="156.2" y="1381" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="159.18" y="1391.5" ></text>
</g>
<g >
<title>pick_next_task (1,777,605,114 samples, 0.07%)</title><rect x="1045.2" y="1333" width="0.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1048.18" y="1343.5" ></text>
</g>
<g >
<title>load_balance (364,443,995 samples, 0.01%)</title><rect x="176.9" y="1461" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="179.94" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,945,615,947 samples, 0.15%)</title><rect x="162.0" y="1269" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.03" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,524,712,671 samples, 0.17%)</title><rect x="56.0" y="1557" width="2.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="58.99" y="1567.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (860,293,619 samples, 0.03%)</title><rect x="1187.5" y="1461" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1190.53" y="1471.5" ></text>
</g>
<g >
<title>clock_gettime@plt (444,318,626 samples, 0.02%)</title><rect x="312.9" y="1509" width="0.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="315.90" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (269,131,036 samples, 0.01%)</title><rect x="160.7" y="1573" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="163.71" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="421" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="431.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1461" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1004.48" y="1471.5" ></text>
</g>
<g >
<title>sched_clock (26,351,760,222 samples, 0.99%)</title><rect x="524.5" y="1349" width="11.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="527.52" y="1359.5" ></text>
</g>
<g >
<title>mas_store_prealloc (295,931,697 samples, 0.01%)</title><rect x="92.2" y="1445" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="95.21" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,475,477 samples, 0.02%)</title><rect x="162.2" y="341" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.16" y="351.5" ></text>
</g>
<g >
<title>msvc::path_utf8::split_path (1,297,398,285 samples, 0.05%)</title><rect x="55.0" y="1525" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="57.96" y="1535.5" ></text>
</g>
<g >
<title>process_vm_writev (475,731,535 samples, 0.02%)</title><rect x="1145.6" y="1557" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1148.60" y="1567.5" ></text>
</g>
<g >
<title>record__write (1,113,591,711 samples, 0.04%)</title><rect x="168.2" y="1509" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="171.20" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="981" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="991.5" ></text>
</g>
<g >
<title>sqlite3SelectPrep (1,221,604,921 samples, 0.05%)</title><rect x="50.0" y="1429" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="53.03" y="1439.5" ></text>
</g>
<g >
<title>do_sched_yield (327,164,752,606 samples, 12.29%)</title><rect x="398.4" y="1429" width="145.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="401.39" y="1439.5" >do_sched_yield</text>
</g>
<g >
<title>sqlite3Prepare (2,410,367,410 samples, 0.09%)</title><rect x="49.0" y="1413" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="51.97" y="1423.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::checked_sub_instant (19,004,324,998 samples, 0.71%)</title><rect x="916.4" y="1413" width="8.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="919.36" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="597" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="607.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (5,609,836,097 samples, 0.21%)</title><rect x="161.7" y="1573" width="2.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="164.74" y="1583.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (708,727,120 samples, 0.03%)</title><rect x="1181.4" y="1493" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1184.39" y="1503.5" ></text>
</g>
<g >
<title>enqueue_task (363,814,577 samples, 0.01%)</title><rect x="1189.4" y="1477" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1192.36" y="1487.5" ></text>
</g>
<g >
<title>clock_gettime (98,965,273,456 samples, 3.72%)</title><rect x="870.2" y="1461" width="43.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="873.23" y="1471.5" >cloc..</text>
</g>
<g >
<title>sqlite3Prepare (1,819,235,088 samples, 0.07%)</title><rect x="48.2" y="1461" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="51.16" y="1471.5" ></text>
</g>
<g >
<title>memcpy@plt (246,839,042 samples, 0.01%)</title><rect x="315.2" y="1509" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="318.17" y="1519.5" ></text>
</g>
<g >
<title>sqlite3WalkSelect.part.0 (1,221,604,921 samples, 0.05%)</title><rect x="50.0" y="1413" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="53.03" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1541" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="1551.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (6,221,271,342 samples, 0.23%)</title><rect x="1059.6" y="1413" width="2.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1062.64" y="1423.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (246,804,747 samples, 0.01%)</title><rect x="1038.9" y="1429" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1041.90" y="1439.5" ></text>
</g>
<g >
<title>recvfrom (31,726,692,437 samples, 1.19%)</title><rect x="1025.3" y="1461" width="14.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1028.32" y="1471.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1269" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1004.48" y="1279.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (676,545,250 samples, 0.03%)</title><rect x="1049.4" y="1397" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1052.36" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (345,396,487 samples, 0.01%)</title><rect x="40.5" y="1589" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="43.53" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="341" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="351.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (666,349,028 samples, 0.03%)</title><rect x="168.4" y="1333" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="171.38" y="1343.5" ></text>
</g>
<g >
<title>[cpptools] (591,691,339 samples, 0.02%)</title><rect x="43.4" y="1605" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="46.44" y="1615.5" ></text>
</g>
<g >
<title>browse_engine::parse_file (3,345,369,366 samples, 0.13%)</title><rect x="53.2" y="1573" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="56.19" y="1583.5" ></text>
</g>
<g >
<title>generic_permission (295,861,153 samples, 0.01%)</title><rect x="60.3" y="1397" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="63.29" y="1407.5" ></text>
</g>
<g >
<title>kmem_cache_free (506,409,555 samples, 0.02%)</title><rect x="1060.5" y="1269" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1063.52" y="1279.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (4,146,592,912 samples, 0.16%)</title><rect x="316.6" y="1557" width="1.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="319.59" y="1567.5" ></text>
</g>
<g >
<title>reader_loop (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1541" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="163.40" y="1551.5" ></text>
</g>
<g >
<title>sqlite3Select (1,517,300,993 samples, 0.06%)</title><rect x="50.0" y="1445" width="0.7" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="53.03" y="1455.5" ></text>
</g>
<g >
<title>pick_next_task (1,112,011,819 samples, 0.04%)</title><rect x="1048.2" y="1301" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1051.24" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="309" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="789" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="725" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="735.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1,277,372,623 samples, 0.05%)</title><rect x="1067.7" y="1269" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1070.70" y="1279.5" ></text>
</g>
<g >
<title>sqlite3_prepare_v3 (1,517,300,993 samples, 0.06%)</title><rect x="50.0" y="1509" width="0.7" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="53.03" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="325" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1077" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="1087.5" ></text>
</g>
<g >
<title>ext4_htree_store_dirent (241,837,626 samples, 0.01%)</title><rect x="59.0" y="1397" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="62.00" y="1407.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7,174,931,160 samples, 0.27%)</title><rect x="178.8" y="1461" width="3.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="181.78" y="1471.5" ></text>
</g>
<g >
<title>security_inode_getattr (296,067,232 samples, 0.01%)</title><rect x="57.8" y="1429" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="60.78" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="805" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="357" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="367.5" ></text>
</g>
<g >
<title>std::thread::sleep (19,984,794,534 samples, 0.75%)</title><rect x="1062.7" y="1477" width="8.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1065.65" y="1487.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (23,346,907,826 samples, 0.88%)</title><rect x="305.3" y="1541" width="10.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="308.33" y="1551.5" ></text>
</g>
<g >
<title>ct_idle_exit (387,232,273 samples, 0.01%)</title><rect x="183.2" y="1493" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="186.21" y="1503.5" ></text>
</g>
<g >
<title>do_idle (3,809,450,682 samples, 0.14%)</title><rect x="156.0" y="1557" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="159.04" y="1567.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run (359,171,908 samples, 0.01%)</title><rect x="166.3" y="1557" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="169.27" y="1567.5" ></text>
</g>
<g >
<title>tick_irq_enter (237,532,868 samples, 0.01%)</title><rect x="182.0" y="1445" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="185.00" y="1455.5" ></text>
</g>
<g >
<title>llist_reverse_order (454,770,895 samples, 0.02%)</title><rect x="197.0" y="1525" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="200.03" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (3,503,254,520 samples, 0.13%)</title><rect x="1044.7" y="1397" width="1.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1047.72" y="1407.5" ></text>
</g>
<g >
<title>posix_lock_inode (1,031,514,219 samples, 0.04%)</title><rect x="109.4" y="1493" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="112.38" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="469" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="479.5" ></text>
</g>
<g >
<title>CExtStore::GetCodeItems (1,517,300,993 samples, 0.06%)</title><rect x="50.0" y="1557" width="0.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="53.03" y="1567.5" ></text>
</g>
<g >
<title>[[vdso]] (238,665,489 samples, 0.01%)</title><rect x="1071.5" y="1397" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1074.54" y="1407.5" ></text>
</g>
<g >
<title>psi_group_change (376,148,264 samples, 0.01%)</title><rect x="1048.8" y="1285" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1051.83" y="1295.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,733,091,207 samples, 0.07%)</title><rect x="1038.0" y="1397" width="0.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1040.98" y="1407.5" ></text>
</g>
<g >
<title>bprm_execve (471,781,894 samples, 0.02%)</title><rect x="167.3" y="1541" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="170.30" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1493" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1503.5" ></text>
</g>
<g >
<title>__napi_poll (623,287,393 samples, 0.02%)</title><rect x="1181.1" y="1397" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1184.11" y="1407.5" ></text>
</g>
<g >
<title>schedule_idle (6,878,484,672 samples, 0.26%)</title><rect x="197.3" y="1541" width="3.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="200.34" y="1551.5" ></text>
</g>
<g >
<title>core::time::Duration::new (2,167,207,327 samples, 0.08%)</title><rect x="982.7" y="1397" width="0.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="985.65" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,087,611,536 samples, 0.12%)</title><rect x="162.1" y="965" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.07" y="975.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (13,149,590,211 samples, 0.49%)</title><rect x="1063.8" y="1349" width="5.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1066.79" y="1359.5" ></text>
</g>
<g >
<title>security_inode_getattr (295,353,953 samples, 0.01%)</title><rect x="57.4" y="1477" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="60.36" y="1487.5" ></text>
</g>
<g >
<title>sqlite3_step (20,990,892,755 samples, 0.79%)</title><rect x="128.4" y="1397" width="9.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="131.41" y="1407.5" ></text>
</g>
<g >
<title>sqlite3WhereBegin (295,696,072 samples, 0.01%)</title><rect x="50.6" y="1429" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="53.58" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="373" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (367,629,282 samples, 0.01%)</title><rect x="728.7" y="1461" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="731.68" y="1471.5" ></text>
</g>
<g >
<title>clockevents_program_event (669,296,940 samples, 0.03%)</title><rect x="181.7" y="1413" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="184.65" y="1423.5" ></text>
</g>
<g >
<title>__sched_yield (4,766,908,511 samples, 0.18%)</title><rect x="1044.3" y="1445" width="2.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1047.33" y="1455.5" ></text>
</g>
<g >
<title>handle_mm_fault (246,481,811 samples, 0.01%)</title><rect x="104.3" y="1541" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="107.35" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,495,850,774 samples, 0.09%)</title><rect x="162.1" y="949" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.07" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1381" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="1391.5" ></text>
</g>
<g >
<title>ttwu_do_activate (364,038,842 samples, 0.01%)</title><rect x="1189.4" y="1493" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1192.36" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1173" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1183.5" ></text>
</g>
<g >
<title>NaClSysSemWait (3,056,061,841 samples, 0.11%)</title><rect x="1073.0" y="1557" width="1.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1075.96" y="1567.5" ></text>
</g>
<g >
<title>resolveExprStep (739,988,239 samples, 0.03%)</title><rect x="51.4" y="1301" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="54.38" y="1311.5" ></text>
</g>
<g >
<title>__clone (2,274,799,709 samples, 0.09%)</title><rect x="166.3" y="1605" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="169.27" y="1615.5" ></text>
</g>
<g >
<title>ttwu_do_activate (3,260,293,996 samples, 0.12%)</title><rect x="179.7" y="1365" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="182.67" y="1375.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,694,115,771 samples, 0.06%)</title><rect x="182.1" y="1445" width="0.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="185.10" y="1455.5" ></text>
</g>
<g >
<title>search_binary_handler (471,781,894 samples, 0.02%)</title><rect x="167.3" y="1493" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="170.30" y="1503.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (246,829,742 samples, 0.01%)</title><rect x="1073.8" y="1477" width="0.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1076.84" y="1487.5" ></text>
</g>
<g >
<title>run_rebalance_domains (594,338,027 samples, 0.02%)</title><rect x="1181.4" y="1413" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1184.43" y="1423.5" ></text>
</g>
<g >
<title>vfs_iter_read (2,345,676,868 samples, 0.09%)</title><rect x="119.0" y="1509" width="1.0" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="122.00" y="1519.5" ></text>
</g>
<g >
<title>ovl_write_iter (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1317" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1004.48" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="517" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="527.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2,579,042,141 samples, 0.10%)</title><rect x="1070.0" y="1365" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1072.96" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (1,081,298,423 samples, 0.04%)</title><rect x="564.9" y="1477" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="567.87" y="1487.5" ></text>
</g>
<g >
<title>do_sys_poll (262,138,236 samples, 0.01%)</title><rect x="166.3" y="1461" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="169.30" y="1471.5" ></text>
</g>
<g >
<title>sqlite3Select (5,010,634,315 samples, 0.19%)</title><rect x="50.7" y="1397" width="2.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="53.71" y="1407.5" ></text>
</g>
<g >
<title>_Fork (228,226,979 samples, 0.01%)</title><rect x="161.2" y="1461" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="164.19" y="1471.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1,429,304,937 samples, 0.05%)</title><rect x="1002.0" y="1557" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1005.03" y="1567.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1,662,713,512 samples, 0.06%)</title><rect x="972.8" y="1397" width="0.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="975.82" y="1407.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (444,106,021 samples, 0.02%)</title><rect x="296.3" y="1573" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="299.27" y="1583.5" ></text>
</g>
<g >
<title>__xstat64 (330,040,473 samples, 0.01%)</title><rect x="164.0" y="1541" width="0.2" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="167.03" y="1551.5" ></text>
</g>
<g >
<title>ion (1,110,615,940 samples, 0.04%)</title><rect x="168.2" y="1493" width="0.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="171.20" y="1503.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1,769,697,337 samples, 0.07%)</title><rect x="330.1" y="1557" width="0.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="333.13" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="933" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="943.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (5,932,077,353 samples, 0.22%)</title><rect x="161.7" y="1589" width="2.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="164.74" y="1599.5" ></text>
</g>
<g >
<title>sched_clock (1,861,370,529 samples, 0.07%)</title><rect x="521.5" y="1365" width="0.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="524.48" y="1375.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (231,251,172 samples, 0.01%)</title><rect x="1059.9" y="1349" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1062.90" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="485" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="495.5" ></text>
</g>
<g >
<title>execute_command (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1525" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="163.40" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="373" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="981" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="991.5" ></text>
</g>
<g >
<title>sched_clock_cpu (31,348,406,263 samples, 1.18%)</title><rect x="522.3" y="1365" width="13.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="525.30" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,568,953,958 samples, 0.13%)</title><rect x="162.0" y="1141" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.04" y="1151.5" ></text>
</g>
<g >
<title>CExtStore::GetFile (2,044,978,580 samples, 0.08%)</title><rect x="148.0" y="1477" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="151.05" y="1487.5" ></text>
</g>
<g >
<title>code_store::statement_t::prepare (2,410,367,410 samples, 0.09%)</title><rect x="49.0" y="1461" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="51.97" y="1471.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (319,499,547 samples, 0.01%)</title><rect x="193.2" y="1445" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="196.23" y="1455.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (1,130,814,379 samples, 0.04%)</title><rect x="56.5" y="1445" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="59.47" y="1455.5" ></text>
</g>
<g >
<title>ext4_release_io_end (782,269,116 samples, 0.03%)</title><rect x="1180.7" y="1525" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1183.65" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1109" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1119.5" ></text>
</g>
<g >
<title>check_cfs_rq_runtime (3,401,280,888 samples, 0.13%)</title><rect x="448.1" y="1365" width="1.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="451.07" y="1375.5" ></text>
</g>
<g >
<title>sched_clock_cpu (337,014,298 samples, 0.01%)</title><rect x="193.5" y="1493" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="196.46" y="1503.5" ></text>
</g>
<g >
<title>inet_accept (889,115,060 samples, 0.03%)</title><rect x="1053.6" y="1365" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1056.60" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="693" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="789" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="799.5" ></text>
</g>
<g >
<title>vfs_getattr (491,389,699 samples, 0.02%)</title><rect x="57.8" y="1445" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="60.76" y="1455.5" ></text>
</g>
<g >
<title>[unknown]  (156,004,511,701 samples, 5.86%)</title><rect x="1074.5" y="1605" width="69.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1077.49" y="1615.5" >[unknow..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (471,781,894 samples, 0.02%)</title><rect x="167.3" y="1557" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="170.30" y="1567.5" ></text>
</g>
<g >
<title>unmap_region (284,758,548 samples, 0.01%)</title><rect x="92.6" y="1493" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="95.58" y="1503.5" ></text>
</g>
<g >
<title>pick_next_entity (3,624,635,116 samples, 0.14%)</title><rect x="449.6" y="1365" width="1.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="452.58" y="1375.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1,360,498,801 samples, 0.05%)</title><rect x="119.2" y="1397" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="122.16" y="1407.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (384,313,399 samples, 0.01%)</title><rect x="1037.6" y="1413" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1040.64" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (881,332,244 samples, 0.03%)</title><rect x="145.5" y="1429" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="148.53" y="1439.5" ></text>
</g>
<g >
<title>clock_gettime (3,649,317,384 samples, 0.14%)</title><rect x="1154.9" y="1589" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1157.88" y="1599.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::pwrite_syscall (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1509" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1004.48" y="1519.5" ></text>
</g>
<g >
<title>unmap_page_range (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1349" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="170.51" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,673,543,680 samples, 0.10%)</title><rect x="156.1" y="1541" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="159.07" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (1,525,557,428 samples, 0.06%)</title><rect x="1057.7" y="1301" width="0.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1060.66" y="1311.5" ></text>
</g>
<g >
<title>update_load_avg (938,903,409 samples, 0.04%)</title><rect x="1066.6" y="1237" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1069.64" y="1247.5" ></text>
</g>
<g >
<title>revert_creds (344,181,807 samples, 0.01%)</title><rect x="60.6" y="1429" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="63.60" y="1439.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (3,626,029,456 samples, 0.14%)</title><rect x="509.7" y="1381" width="1.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="512.72" y="1391.5" ></text>
</g>
<g >
<title>fcntl_setlk (1,965,214,984 samples, 0.07%)</title><rect x="109.3" y="1525" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="112.28" y="1535.5" ></text>
</g>
<g >
<title>msvc::log (833,002,226 samples, 0.03%)</title><rect x="37.9" y="1589" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="40.87" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1061" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="1071.5" ></text>
</g>
<g >
<title>NaClSysPwrite (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1557" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1004.48" y="1567.5" ></text>
</g>
<g >
<title>CompareAndSwap (1,184,757,521 samples, 0.04%)</title><rect x="1143.7" y="1589" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1146.68" y="1599.5" ></text>
</g>
<g >
<title>path_lookupat (228,335,363 samples, 0.01%)</title><rect x="164.1" y="1413" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="167.06" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="389" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="741" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="751.5" ></text>
</g>
<g >
<title>__munmap (292,172,204 samples, 0.01%)</title><rect x="10.1" y="1605" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.12" y="1615.5" ></text>
</g>
<g >
<title>dispatcher (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1525" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1004.48" y="1535.5" ></text>
</g>
<g >
<title>i_callback (281,165,286 samples, 0.01%)</title><rect x="182.4" y="1365" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="185.42" y="1375.5" ></text>
</g>
<g >
<title>browse_engine::query_include_files (29,180,817,713 samples, 1.10%)</title><rect x="126.5" y="1461" width="12.9" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="129.46" y="1471.5" ></text>
</g>
<g >
<title>sock_alloc (4,410,841,457 samples, 0.17%)</title><rect x="1054.1" y="1365" width="1.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1057.07" y="1375.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::checked_sub_instant (13,372,648,159 samples, 0.50%)</title><rect x="977.7" y="1429" width="5.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="980.68" y="1439.5" ></text>
</g>
<g >
<title>path_lookupat (2,215,173,191 samples, 0.08%)</title><rect x="56.4" y="1461" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="59.38" y="1471.5" ></text>
</g>
<g >
<title>[[vdso]] (27,613,732,212 samples, 1.04%)</title><rect x="989.1" y="1397" width="12.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="992.09" y="1407.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (476,662,814 samples, 0.02%)</title><rect x="1070.4" y="1317" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1073.36" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1509" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1519.5" ></text>
</g>
<g >
<title>glob_matcher::matches_internal (394,261,698 samples, 0.01%)</title><rect x="43.4" y="1589" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="46.44" y="1599.5" ></text>
</g>
<g >
<title>__switch_to_asm (398,407,853 samples, 0.01%)</title><rect x="1063.2" y="1413" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1066.23" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="725" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="735.5" ></text>
</g>
<g >
<title>CExtStore::GetCodeItems (1,819,235,088 samples, 0.07%)</title><rect x="48.2" y="1541" width="0.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="51.16" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="261" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="271.5" ></text>
</g>
<g >
<title>pick_next_task (140,270,624,369 samples, 5.27%)</title><rect x="445.5" y="1381" width="62.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="448.46" y="1391.5" >pick_n..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (344,180,113 samples, 0.01%)</title><rect x="1038.8" y="1397" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1041.75" y="1407.5" ></text>
</g>
<g >
<title>__libc_free (296,078,222 samples, 0.01%)</title><rect x="14.9" y="1589" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="17.89" y="1599.5" ></text>
</g>
<g >
<title>__get_user_pages (368,445,666 samples, 0.01%)</title><rect x="1145.9" y="1429" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1148.92" y="1439.5" ></text>
</g>
<g >
<title>rcu_core (1,326,595,013 samples, 0.05%)</title><rect x="182.1" y="1397" width="0.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="185.14" y="1407.5" ></text>
</g>
<g >
<title>NaClLog (1,269,371,588 samples, 0.05%)</title><rect x="1146.4" y="1589" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1149.44" y="1599.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (523,279,660 samples, 0.02%)</title><rect x="1145.6" y="1573" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1148.58" y="1583.5" ></text>
</g>
<g >
<title>irq_enter_rcu (309,726,019 samples, 0.01%)</title><rect x="182.0" y="1461" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="184.97" y="1471.5" ></text>
</g>
<g >
<title>__do_sys_newstat (4,475,379,643 samples, 0.17%)</title><rect x="56.0" y="1525" width="2.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="58.99" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (39,535,835,384 samples, 1.49%)</title><rect x="177.7" y="1541" width="17.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="180.65" y="1551.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (283,655,376 samples, 0.01%)</title><rect x="1061.4" y="1173" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1064.37" y="1183.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (312,168,474 samples, 0.01%)</title><rect x="193.2" y="1429" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="196.24" y="1439.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (540,294,557 samples, 0.02%)</title><rect x="204.5" y="1589" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="207.49" y="1599.5" ></text>
</g>
<g >
<title>sqlite3WalkSelect.part.0 (493,461,318 samples, 0.02%)</title><rect x="48.4" y="1397" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="51.42" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="757" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1141" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="1151.5" ></text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (279,844,423 samples, 0.01%)</title><rect x="168.2" y="1333" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="171.24" y="1343.5" ></text>
</g>
<g >
<title>std::time::Instant::now (537,534,515 samples, 0.02%)</title><rect x="218.4" y="1573" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="221.39" y="1583.5" ></text>
</g>
<g >
<title>inotify_handle_inode_event (262,131,384 samples, 0.01%)</title><rect x="168.2" y="1317" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="171.24" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="853" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="863.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (310,659,569 samples, 0.01%)</title><rect x="1071.5" y="1477" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1074.51" y="1487.5" ></text>
</g>
<g >
<title>unmap_vmas (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1381" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="170.51" y="1391.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap_or_default (1,378,046,147 samples, 0.05%)</title><rect x="915.8" y="1429" width="0.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="918.75" y="1439.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (267,407,140 samples, 0.01%)</title><rect x="1057.4" y="1269" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1060.41" y="1279.5" ></text>
</g>
<g >
<title>[sel_ldr] (1,851,054,201,609 samples, 69.53%)</title><rect x="254.0" y="1605" width="820.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="256.99" y="1615.5" >[sel_ldr]</text>
</g>
<g >
<title>vfs_statx (3,590,676,370 samples, 0.13%)</title><rect x="56.4" y="1493" width="1.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="59.38" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (296,123,597 samples, 0.01%)</title><rect x="75.9" y="1573" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="78.91" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,314,471,494 samples, 0.09%)</title><rect x="162.1" y="837" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.08" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,482,123,481 samples, 0.06%)</title><rect x="162.1" y="629" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.13" y="639.5" ></text>
</g>
<g >
<title>fcntl (3,346,805,691 samples, 0.13%)</title><rect x="108.8" y="1605" width="1.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="111.77" y="1615.5" ></text>
</g>
<g >
<title>do_futex (898,681,201 samples, 0.03%)</title><rect x="166.6" y="1461" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="169.61" y="1471.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,061,810,224 samples, 0.08%)</title><rect x="564.0" y="1461" width="0.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="566.96" y="1471.5" ></text>
</g>
<g >
<title>__mmput (471,781,894 samples, 0.02%)</title><rect x="167.3" y="1413" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="170.30" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (5,325,177,327 samples, 0.20%)</title><rect x="59.3" y="1541" width="2.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="62.35" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_futex (5,506,413,695 samples, 0.21%)</title><rect x="1046.9" y="1397" width="2.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1049.90" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1285" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1295.5" ></text>
</g>
<g >
<title>sqlite3RunParser (3,345,369,366 samples, 0.13%)</title><rect x="53.2" y="1429" width="1.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="56.19" y="1439.5" ></text>
</g>
<g >
<title>alloc_slot (16,638,888,453 samples, 0.63%)</title><rect x="97.1" y="1605" width="7.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="100.12" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,492,804,542 samples, 0.06%)</title><rect x="164.7" y="1573" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.74" y="1583.5" ></text>
</g>
<g >
<title>update_cfs_group (364,195,300 samples, 0.01%)</title><rect x="180.0" y="1301" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="183.05" y="1311.5" ></text>
</g>
<g >
<title>start_secondary (3,843,958,589 samples, 0.14%)</title><rect x="156.0" y="1589" width="1.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="159.04" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="163.40" y="1583.5" ></text>
</g>
<g >
<title>pick_next_task (521,375,728 samples, 0.02%)</title><rect x="176.9" y="1525" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="179.90" y="1535.5" ></text>
</g>
<g >
<title>kmem_cache_free (244,232,455 samples, 0.01%)</title><rect x="182.3" y="1349" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="185.30" y="1359.5" ></text>
</g>
<g >
<title>schedule (282,159,894,289 samples, 10.60%)</title><rect x="416.3" y="1413" width="125.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="419.32" y="1423.5" >schedule</text>
</g>
<g >
<title>ttwu_do_activate (240,982,057 samples, 0.01%)</title><rect x="156.2" y="1365" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="159.23" y="1375.5" ></text>
</g>
<g >
<title>sccp (3,186,334,460 samples, 0.12%)</title><rect x="118.8" y="1605" width="1.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="121.76" y="1615.5" ></text>
</g>
<g >
<title>nontrivial_free (2,071,560,213 samples, 0.08%)</title><rect x="117.5" y="1605" width="0.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="120.47" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (740,521,394 samples, 0.03%)</title><rect x="314.8" y="1509" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="317.85" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="469" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="479.5" ></text>
</g>
<g >
<title>call_rcu (241,742,116 samples, 0.01%)</title><rect x="1061.5" y="1221" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1064.51" y="1231.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (497,423,118 samples, 0.02%)</title><rect x="197.8" y="1509" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="200.78" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,112,951,538 samples, 0.15%)</title><rect x="162.0" y="1285" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.03" y="1295.5" ></text>
</g>
<g >
<title>lookup_fast (246,542,506 samples, 0.01%)</title><rect x="60.9" y="1429" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="63.86" y="1439.5" ></text>
</g>
<g >
<title>operator new (245,119,017 samples, 0.01%)</title><rect x="165.9" y="53" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="168.92" y="63.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (245,234,312 samples, 0.01%)</title><rect x="193.2" y="1397" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="196.25" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (444,173,090 samples, 0.02%)</title><rect x="1002.5" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1005.47" y="1551.5" ></text>
</g>
<g >
<title>__get_user_8 (326,759,262 samples, 0.01%)</title><rect x="1070.4" y="1301" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1073.40" y="1311.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (413,549,803 samples, 0.02%)</title><rect x="156.2" y="1429" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="159.17" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="325" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="421" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="431.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (2,296,321,878 samples, 0.09%)</title><rect x="119.0" y="1477" width="1.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="122.00" y="1487.5" ></text>
</g>
<g >
<title>do_sched_yield (246,680,735 samples, 0.01%)</title><rect x="869.2" y="1381" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="872.16" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1061" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1071.5" ></text>
</g>
<g >
<title>walkExpr (344,566,196 samples, 0.01%)</title><rect x="43.3" y="1589" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="46.27" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (574,918,056 samples, 0.02%)</title><rect x="1053.6" y="1333" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1056.64" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (240,654,002 samples, 0.01%)</title><rect x="1168.4" y="1397" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1171.36" y="1407.5" ></text>
</g>
<g >
<title>NaClLog (1,332,881,151 samples, 0.05%)</title><rect x="328.9" y="1541" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="331.86" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1125" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1135.5" ></text>
</g>
<g >
<title>generic_file_read_iter (2,246,968,757 samples, 0.08%)</title><rect x="119.0" y="1445" width="1.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="122.02" y="1455.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (268,475,576 samples, 0.01%)</title><rect x="177.0" y="1413" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="179.97" y="1423.5" ></text>
</g>
<g >
<title>sqlite3VdbeFinishMoveto (443,767,304 samples, 0.02%)</title><rect x="148.8" y="1381" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="151.76" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="357" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="437" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="447.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (815,180,008 samples, 0.03%)</title><rect x="91.7" y="1541" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="94.72" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="245" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="255.5" ></text>
</g>
<g >
<title>CCodeStoreManager::request (295,933,634 samples, 0.01%)</title><rect x="138.5" y="1413" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="141.46" y="1423.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (1,887,910,445 samples, 0.07%)</title><rect x="1057.6" y="1333" width="0.8" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1060.60" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (329,242,254 samples, 0.01%)</title><rect x="162.2" y="309" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.17" y="319.5" ></text>
</g>
<g >
<title>std::time::Instant::now (256,036,707 samples, 0.01%)</title><rect x="1071.5" y="1461" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1074.54" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (876,760,041 samples, 0.03%)</title><rect x="162.2" y="421" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.15" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="773" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="783.5" ></text>
</g>
<g >
<title>sqlite3_prepare_v3 (1,819,235,088 samples, 0.07%)</title><rect x="48.2" y="1493" width="0.8" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="51.16" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="789" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1477" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="501" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="511.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (405,525,661 samples, 0.02%)</title><rect x="161.2" y="1589" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="164.19" y="1599.5" ></text>
</g>
<g >
<title>schedule (4,225,547,161 samples, 0.16%)</title><rect x="1047.2" y="1333" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1050.24" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock (22,316,868,841 samples, 0.84%)</title><rect x="434.7" y="1381" width="9.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="437.66" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="549" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="559.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1397" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="163.40" y="1407.5" ></text>
</g>
<g >
<title>rcu_do_batch (1,267,150,456 samples, 0.05%)</title><rect x="182.2" y="1381" width="0.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="185.17" y="1391.5" ></text>
</g>
<g >
<title>code_store::store_request_t::store_request_t (345,211,464 samples, 0.01%)</title><rect x="138.4" y="1429" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="141.44" y="1439.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (345,199,514 samples, 0.01%)</title><rect x="104.3" y="1589" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="107.32" y="1599.5" ></text>
</g>
<g >
<title>enframe (542,901,730 samples, 0.02%)</title><rect x="37.2" y="1589" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="40.15" y="1599.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1,412,909,994 samples, 0.05%)</title><rect x="1034.1" y="1349" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1037.13" y="1359.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,838,459,368 samples, 0.14%)</title><rect x="156.0" y="1573" width="1.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="159.04" y="1583.5" ></text>
</g>
<g >
<title>begin_new_exec (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1461" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="170.51" y="1471.5" ></text>
</g>
<g >
<title>kworker/dying (7,158,490,657 samples, 0.27%)</title><rect x="154.6" y="1621" width="3.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="157.57" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (264,718,200 samples, 0.01%)</title><rect x="164.4" y="197" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="207.5" ></text>
</g>
<g >
<title>NaClVmmapFindMapSpaceAboveHint (668,611,808 samples, 0.03%)</title><rect x="329.5" y="1525" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="332.46" y="1535.5" ></text>
</g>
<g >
<title>update_load_avg (319,107,392 samples, 0.01%)</title><rect x="1047.9" y="1253" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1050.87" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="517" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,614,632,570 samples, 0.06%)</title><rect x="165.4" y="85" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="95.5" ></text>
</g>
<g >
<title>parking_lot::raw_mutex::RawMutex::lock_slow (56,974,243,687 samples, 2.14%)</title><rect x="844.1" y="1461" width="25.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="847.10" y="1471.5" >p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="149" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="159.5" ></text>
</g>
<g >
<title>__calc_delta (23,387,222,301 samples, 0.88%)</title><rect x="482.6" y="1333" width="10.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="485.55" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,574,070,861 samples, 0.17%)</title><rect x="56.0" y="1573" width="2.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="58.97" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,040,221,725 samples, 0.08%)</title><rect x="162.1" y="773" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.11" y="783.5" ></text>
</g>
<g >
<title>decl_routine (2,278,614,956 samples, 0.09%)</title><rect x="10.5" y="1605" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="13.54" y="1615.5" ></text>
</g>
<g >
<title>vfs_fstatat (312,779,978 samples, 0.01%)</title><rect x="164.0" y="1461" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="167.04" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (342,024,467 samples, 0.01%)</title><rect x="41.3" y="1589" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="44.26" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1413" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="581" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="591.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (5,241,666,286 samples, 0.20%)</title><rect x="179.0" y="1413" width="2.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="182.01" y="1423.5" ></text>
</g>
<g >
<title>igc_poll (623,287,393 samples, 0.02%)</title><rect x="1181.1" y="1381" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1184.11" y="1391.5" ></text>
</g>
<g >
<title>iterate_dir (1,326,526,664 samples, 0.05%)</title><rect x="58.6" y="1525" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="61.59" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="229" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,324,220,605 samples, 0.12%)</title><rect x="162.1" y="1029" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.07" y="1039.5" ></text>
</g>
<g >
<title>__lock (542,309,236 samples, 0.02%)</title><rect x="15.1" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="18.11" y="1599.5" ></text>
</g>
<g >
<title>NaClSysSemPost (2,267,853,737 samples, 0.09%)</title><rect x="1071.8" y="1557" width="1.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1074.80" y="1567.5" ></text>
</g>
<g >
<title>moveToChild (726,949,877 samples, 0.03%)</title><rect x="148.3" y="1365" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="151.35" y="1375.5" ></text>
</g>
<g >
<title>psi_group_change (1,210,726,357 samples, 0.05%)</title><rect x="1068.8" y="1269" width="0.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1071.75" y="1279.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (422,984,796 samples, 0.02%)</title><rect x="1048.1" y="1301" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1051.06" y="1311.5" ></text>
</g>
<g >
<title>update_cfs_group (225,918,771 samples, 0.01%)</title><rect x="195.8" y="1429" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="198.85" y="1439.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1,401,867,671 samples, 0.05%)</title><rect x="1056.4" y="1285" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1059.40" y="1295.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (849,534,329 samples, 0.03%)</title><rect x="1070.2" y="1333" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1073.20" y="1343.5" ></text>
</g>
<g >
<title>walkExpr (295,940,060 samples, 0.01%)</title><rect x="51.8" y="1301" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="54.76" y="1311.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once{{vtable.shim}} (280,270,610 samples, 0.01%)</title><rect x="1168.3" y="1525" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1171.34" y="1535.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (246,762,138 samples, 0.01%)</title><rect x="61.6" y="1429" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="64.56" y="1439.5" ></text>
</g>
<g >
<title>handle_pte_fault (368,445,666 samples, 0.01%)</title><rect x="1145.9" y="1381" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1148.92" y="1391.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (2,101,589,797 samples, 0.08%)</title><rect x="539.1" y="1397" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="542.11" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="693" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="629" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="639.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (40,909,822,732 samples, 1.54%)</title><rect x="278.1" y="1573" width="18.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="281.13" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1493" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1503.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (537,534,515 samples, 0.02%)</title><rect x="218.4" y="1557" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="221.39" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (815,180,008 samples, 0.03%)</title><rect x="91.7" y="1573" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="94.72" y="1583.5" ></text>
</g>
<g >
<title>CExtResults&lt;CExtFileResults, CStoreFile, code_store::files_set, IResults&lt;CStoreFile&gt; &gt;::MoveNext (21,724,602,557 samples, 0.82%)</title><rect x="128.1" y="1445" width="9.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="131.13" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,177,151,247 samples, 0.04%)</title><rect x="166.6" y="1509" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="169.58" y="1519.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (547,031,563 samples, 0.02%)</title><rect x="159.4" y="1493" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="162.39" y="1503.5" ></text>
</g>
<g >
<title>futex_wait (5,222,441,073 samples, 0.20%)</title><rect x="1047.0" y="1365" width="2.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1050.00" y="1375.5" ></text>
</g>
<g >
<title>exit_mmap (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1397" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="170.51" y="1407.5" ></text>
</g>
<g >
<title>sqlite3ExprCodeTarget (244,115,087 samples, 0.01%)</title><rect x="50.9" y="1349" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="53.86" y="1359.5" ></text>
</g>
<g >
<title>mmap_region (420,441,253 samples, 0.02%)</title><rect x="91.9" y="1493" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="94.85" y="1503.5" ></text>
</g>
<g >
<title>msvc::path_utf8::folder (6,548,964,697 samples, 0.25%)</title><rect x="140.4" y="1461" width="2.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="143.38" y="1471.5" ></text>
</g>
<g >
<title>fput (885,602,154 samples, 0.03%)</title><rect x="1036.7" y="1397" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1039.68" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="373" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="383.5" ></text>
</g>
<g >
<title>__libc_malloc_impl (5,696,705,561 samples, 0.21%)</title><rect x="69.8" y="1605" width="2.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="72.82" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1445" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1455.5" ></text>
</g>
<g >
<title>__entry_text_start (4,878,018,292 samples, 0.18%)</title><rect x="1027.0" y="1445" width="2.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1029.95" y="1455.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_duration_since (19,004,324,998 samples, 0.71%)</title><rect x="916.4" y="1429" width="8.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="919.36" y="1439.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (6,664,557,609 samples, 0.25%)</title><rect x="492.9" y="1333" width="3.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="495.92" y="1343.5" ></text>
</g>
<g >
<title>aa_sk_perm (1,228,311,610 samples, 0.05%)</title><rect x="1034.2" y="1333" width="0.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1037.21" y="1343.5" ></text>
</g>
<g >
<title>build_il_search_index (433,861,804 samples, 0.02%)</title><rect x="10.3" y="1605" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="13.34" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1301" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1311.5" ></text>
</g>
<g >
<title>worker_thread (912,101,636 samples, 0.03%)</title><rect x="1180.6" y="1573" width="0.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1183.65" y="1583.5" ></text>
</g>
<g >
<title>__rcu_read_lock (295,622,174 samples, 0.01%)</title><rect x="1036.5" y="1349" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1039.50" y="1359.5" ></text>
</g>
<g >
<title>iterate_dir (389,909,290 samples, 0.01%)</title><rect x="59.0" y="1477" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="61.98" y="1487.5" ></text>
</g>
<g >
<title>start_secondary (3,703,919,760 samples, 0.14%)</title><rect x="1181.1" y="1589" width="1.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1184.05" y="1599.5" ></text>
</g>
<g >
<title>psi_task_change (1,014,338,810 samples, 0.04%)</title><rect x="180.6" y="1333" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="183.60" y="1343.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,646,443,291 samples, 0.10%)</title><rect x="1069.9" y="1381" width="1.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1072.94" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_futex (962,751,686 samples, 0.04%)</title><rect x="166.6" y="1477" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="169.60" y="1487.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::sub_timespec (11,710,029,108 samples, 0.44%)</title><rect x="978.4" y="1413" width="5.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="981.42" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (7,424,005,628 samples, 0.28%)</title><rect x="1169.8" y="1605" width="3.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1172.77" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1157" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="1167.5" ></text>
</g>
<g >
<title>CExtResults&lt;CExtFullCodeItemResults, CFullCodeItem, code_store::full_code_items_set, IResults&lt;CFullCodeItem&gt; &gt;::MoveNext (8,411,935,330 samples, 0.32%)</title><rect x="121.7" y="1477" width="3.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="124.75" y="1487.5" ></text>
</g>
<g >
<title>__entry_text_start (246,400,956 samples, 0.01%)</title><rect x="1053.1" y="1445" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1056.13" y="1455.5" ></text>
</g>
<g >
<title>update_load_avg (876,981,488 samples, 0.03%)</title><rect x="196.0" y="1429" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="198.97" y="1439.5" ></text>
</g>
<g >
<title>browse_engine::query_cik_in_file (10,482,669,557 samples, 0.39%)</title><rect x="121.5" y="1493" width="4.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="124.49" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1125" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="709" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="719.5" ></text>
</g>
<g >
<title>__mmput (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1413" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="170.51" y="1423.5" ></text>
</g>
<g >
<title>__vm_munmap (1,517,423,302 samples, 0.06%)</title><rect x="92.1" y="1541" width="0.7" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="95.08" y="1551.5" ></text>
</g>
<g >
<title>timerqueue_add (245,852,095 samples, 0.01%)</title><rect x="1064.4" y="1269" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1067.37" y="1279.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (53,815,091,853 samples, 2.02%)</title><rect x="177.2" y="1605" width="23.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="180.19" y="1615.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1333" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1349" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1359.5" ></text>
</g>
<g >
<title>schedule (602,157,389 samples, 0.02%)</title><rect x="166.7" y="1413" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.68" y="1423.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1,922,940,250 samples, 0.07%)</title><rect x="179.7" y="1333" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="182.73" y="1343.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,126,887,638 samples, 0.04%)</title><rect x="1050.7" y="1349" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1053.66" y="1359.5" ></text>
</g>
<g >
<title>[ls] (269,131,036 samples, 0.01%)</title><rect x="160.7" y="1605" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="163.71" y="1615.5" ></text>
</g>
<g >
<title>readdir64 (1,425,226,629 samples, 0.05%)</title><rect x="58.6" y="1589" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="61.59" y="1599.5" ></text>
</g>
<g >
<title>try_to_wake_up (289,532,581 samples, 0.01%)</title><rect x="159.4" y="1381" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="162.40" y="1391.5" ></text>
</g>
<g >
<title>__fget_light (1,138,573,341 samples, 0.04%)</title><rect x="1051.9" y="1365" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1054.85" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="853" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="863.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1,777,221,956 samples, 0.07%)</title><rect x="317.3" y="1541" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="320.33" y="1551.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (884,172,910 samples, 0.03%)</title><rect x="1147.7" y="1589" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1150.72" y="1599.5" ></text>
</g>
<g >
<title>zap_pte_range (387,575,945 samples, 0.01%)</title><rect x="167.3" y="1317" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="170.33" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_poll (881,467,589 samples, 0.03%)</title><rect x="167.8" y="1509" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="170.76" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,281,882,574 samples, 0.16%)</title><rect x="162.0" y="1349" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.03" y="1359.5" ></text>
</g>
<g >
<title>CExtStore::GetFiles (5,010,634,315 samples, 0.19%)</title><rect x="50.7" y="1525" width="2.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="53.71" y="1535.5" ></text>
</g>
<g >
<title>NaClSysRecv (83,377,573,912 samples, 3.13%)</title><rect x="1002.7" y="1557" width="37.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1005.71" y="1567.5" >NaC..</text>
</g>
<g >
<title>uv_spawn (237,333,762 samples, 0.01%)</title><rect x="161.2" y="1525" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="164.19" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (296,091,045 samples, 0.01%)</title><rect x="1032.9" y="1317" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1035.92" y="1327.5" ></text>
</g>
<g >
<title>sqlite3BtreeIndexMoveto (1,108,865,291 samples, 0.04%)</title><rect x="148.3" y="1381" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="151.26" y="1391.5" ></text>
</g>
<g >
<title>inode_permission (2,128,964,632 samples, 0.08%)</title><rect x="59.8" y="1445" width="1.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="62.81" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (471,781,894 samples, 0.02%)</title><rect x="167.3" y="1589" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="170.30" y="1599.5" ></text>
</g>
<g >
<title>CExtStore::GetCodeItems (838,575,066 samples, 0.03%)</title><rect x="125.5" y="1477" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="128.48" y="1487.5" ></text>
</g>
<g >
<title>__entry_text_start (403,955,939 samples, 0.02%)</title><rect x="1051.5" y="1429" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1054.49" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (1,474,888,167 samples, 0.06%)</title><rect x="415.7" y="1397" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="418.67" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (603,300,730 samples, 0.02%)</title><rect x="161.5" y="197" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="164.47" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (296,157,638 samples, 0.01%)</title><rect x="55.4" y="1509" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="58.40" y="1519.5" ></text>
</g>
<g >
<title>enqueue_task (3,076,538,315 samples, 0.12%)</title><rect x="179.7" y="1349" width="1.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="182.69" y="1359.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (839,192,245 samples, 0.03%)</title><rect x="298.9" y="1573" width="0.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="301.87" y="1583.5" ></text>
</g>
<g >
<title>clock_gettime (38,909,112,718 samples, 1.46%)</title><rect x="984.1" y="1429" width="17.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="987.15" y="1439.5" ></text>
</g>
<g >
<title>sqlite3BtreeIndexMoveto (1,278,088,659 samples, 0.05%)</title><rect x="123.6" y="1397" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="126.58" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="597" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="607.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::checked_add (1,167,736,852 samples, 0.04%)</title><rect x="924.3" y="1365" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="927.27" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,117,837,819 samples, 0.15%)</title><rect x="162.0" y="1317" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.03" y="1327.5" ></text>
</g>
<g >
<title>CompareAndSwap (26,902,956,595 samples, 1.01%)</title><rect x="284.3" y="1557" width="12.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="287.34" y="1567.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (658,952,086 samples, 0.02%)</title><rect x="1148.1" y="1589" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1151.11" y="1599.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (468,964,297 samples, 0.02%)</title><rect x="156.2" y="1461" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="159.17" y="1471.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::check_select_read (2,425,856,666 samples, 0.09%)</title><rect x="1156.8" y="1589" width="1.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1159.79" y="1599.5" ></text>
</g>
<g >
<title>browse_engine::parse_file (74,544,394,620 samples, 2.80%)</title><rect x="120.8" y="1525" width="33.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="123.79" y="1535.5" >br..</text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (391,307,822 samples, 0.01%)</title><rect x="147.7" y="1461" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="150.72" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="949" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="959.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (641,781,652 samples, 0.02%)</title><rect x="274.9" y="1557" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="277.92" y="1567.5" ></text>
</g>
<g >
<title>wake_up_process (245,234,312 samples, 0.01%)</title><rect x="193.2" y="1381" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="196.25" y="1391.5" ></text>
</g>
<g >
<title>__calc_delta (301,855,343 samples, 0.01%)</title><rect x="1045.6" y="1285" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1048.59" y="1295.5" ></text>
</g>
<g >
<title>__pthread_rwlock_tryrdlock (443,534,593 samples, 0.02%)</title><rect x="93.0" y="1605" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="96.02" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1253" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1263.5" ></text>
</g>
<g >
<title>code_store::results_statement_t&lt;code_store::files_set_t, code_store::schema::files::read_statement_t, code_store::files_set&gt;::create_statement (444,055,321 samples, 0.02%)</title><rect x="138.1" y="1413" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="141.09" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,038,265,634 samples, 0.11%)</title><rect x="118.8" y="1589" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="121.83" y="1599.5" ></text>
</g>
<g >
<title>sqlite3VdbeMemSetStr (345,491,786 samples, 0.01%)</title><rect x="51.1" y="1365" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="54.08" y="1375.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (237,333,762 samples, 0.01%)</title><rect x="161.2" y="1541" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="164.19" y="1551.5" ></text>
</g>
<g >
<title>memcg_list_lru_alloc (324,135,639 samples, 0.01%)</title><rect x="1058.1" y="1269" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1061.15" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1557" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1567.5" ></text>
</g>
<g >
<title>sqlite3GetVarint (394,066,523 samples, 0.01%)</title><rect x="125.0" y="1365" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="128.02" y="1375.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::unlock_exclusive_slow (3,078,019,209 samples, 0.12%)</title><rect x="1049.9" y="1477" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1052.85" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1269" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1279.5" ></text>
</g>
<g >
<title>lind (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1621" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="163.40" y="1631.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (283,962,490 samples, 0.01%)</title><rect x="155.9" y="1573" width="0.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="158.91" y="1583.5" ></text>
</g>
<g >
<title>canonicalize_file_leaf[abi:cxx11] (592,039,229 samples, 0.02%)</title><rect x="139.4" y="1461" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="142.40" y="1471.5" ></text>
</g>
<g >
<title>__vm_munmap (292,172,204 samples, 0.01%)</title><rect x="10.1" y="1541" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.12" y="1551.5" ></text>
</g>
<g >
<title>ovl_dir_read_merged (493,208,002 samples, 0.02%)</title><rect x="58.8" y="1493" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="61.76" y="1503.5" ></text>
</g>
<g >
<title>malloc (245,119,017 samples, 0.01%)</title><rect x="165.9" y="37" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="168.92" y="47.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (317,846,141 samples, 0.01%)</title><rect x="177.0" y="1429" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="179.95" y="1439.5" ></text>
</g>
<g >
<title>NaClLog (1,036,197,323 samples, 0.04%)</title><rect x="255.3" y="1589" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="258.30" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="293" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="303.5" ></text>
</g>
<g >
<title>do_idle (53,186,519,280 samples, 2.00%)</title><rect x="177.2" y="1557" width="23.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="180.25" y="1567.5" >d..</text>
</g>
<g >
<title>msvc::log (296,003,220 samples, 0.01%)</title><rect x="140.0" y="1429" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="142.96" y="1439.5" ></text>
</g>
<g >
<title>__do_sys_newstat (319,082,434 samples, 0.01%)</title><rect x="164.0" y="1477" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="167.03" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,216,903,853 samples, 0.05%)</title><rect x="162.1" y="533" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.15" y="543.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,472,129,821 samples, 0.09%)</title><rect x="1037.8" y="1413" width="1.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1040.81" y="1423.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (40,118,716,741 samples, 1.51%)</title><rect x="983.6" y="1461" width="17.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="986.61" y="1471.5" ></text>
</g>
<g >
<title>[ls] (269,131,036 samples, 0.01%)</title><rect x="160.7" y="1557" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="163.71" y="1567.5" ></text>
</g>
<g >
<title>__munmap (1,566,785,069 samples, 0.06%)</title><rect x="92.1" y="1605" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="95.08" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,530,054,852 samples, 0.06%)</title><rect x="165.4" y="69" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="168.43" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1301" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (245,536,404 samples, 0.01%)</title><rect x="143.2" y="1429" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="146.17" y="1439.5" ></text>
</g>
<g >
<title>browse_engine::parse_file (73,952,548,412 samples, 2.78%)</title><rect x="120.9" y="1509" width="32.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="123.87" y="1519.5" >br..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1525" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,340,609,551 samples, 0.13%)</title><rect x="162.1" y="1061" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.06" y="1071.5" ></text>
</g>
<g >
<title>get_all_targets (932,129,387 samples, 0.04%)</title><rect x="138.7" y="1445" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="141.74" y="1455.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::checked_sub_instant (961,266,405 samples, 0.04%)</title><rect x="1166.8" y="1525" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1169.77" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (17,112,260,485 samples, 0.64%)</title><rect x="1029.9" y="1413" width="7.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1032.94" y="1423.5" ></text>
</g>
<g >
<title>wake_up_process (622,968,458 samples, 0.02%)</title><rect x="1187.6" y="1397" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1190.56" y="1407.5" ></text>
</g>
<g >
<title>do_mmap (716,564,324 samples, 0.03%)</title><rect x="91.7" y="1509" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="94.72" y="1519.5" ></text>
</g>
<g >
<title>sqlite3Prepare (3,345,369,366 samples, 0.13%)</title><rect x="53.2" y="1445" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="56.19" y="1455.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (24,433,140,186 samples, 0.92%)</title><rect x="318.6" y="1557" width="10.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="321.62" y="1567.5" ></text>
</g>
<g >
<title>browse_engine::query_include_path_suggestions_impl (49,092,610,782 samples, 1.84%)</title><rect x="126.1" y="1477" width="21.8" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="129.13" y="1487.5" >b..</text>
</g>
<g >
<title>cpu_startup_entry (53,478,228,564 samples, 2.01%)</title><rect x="177.2" y="1573" width="23.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="180.19" y="1583.5" >c..</text>
</g>
<g >
<title>msvc::path_utf8::path_utf8 (7,833,029,918 samples, 0.29%)</title><rect x="143.3" y="1461" width="3.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="146.28" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="965" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="975.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (326,162,459 samples, 0.01%)</title><rect x="161.2" y="1573" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="164.19" y="1583.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1,906,408,417 samples, 0.07%)</title><rect x="1033.9" y="1365" width="0.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1036.91" y="1375.5" ></text>
</g>
<g >
<title>update_rq_clock (41,538,544,288 samples, 1.56%)</title><rect x="517.8" y="1381" width="18.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="520.79" y="1391.5" ></text>
</g>
<g >
<title>HandleStackContext (28,171,531,486 samples, 1.06%)</title><rect x="265.2" y="1573" width="12.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="268.21" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1509" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1519.5" ></text>
</g>
<g >
<title>mmput (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1429" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="170.51" y="1439.5" ></text>
</g>
<g >
<title>__nanosleep (19,618,216,918 samples, 0.74%)</title><rect x="1062.8" y="1445" width="8.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1065.82" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="261" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="271.5" ></text>
</g>
<g >
<title>update_rq_clock (275,319,087 samples, 0.01%)</title><rect x="196.9" y="1493" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="199.89" y="1503.5" ></text>
</g>
<g >
<title>get_timespec64 (398,971,611 samples, 0.01%)</title><rect x="1069.6" y="1365" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1072.62" y="1375.5" ></text>
</g>
<g >
<title>__switch_to (282,144,454 samples, 0.01%)</title><rect x="174.9" y="1605" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="177.92" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="245" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="581" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="591.5" ></text>
</g>
<g >
<title>try_to_wake_up (607,928,930 samples, 0.02%)</title><rect x="1187.6" y="1381" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1190.57" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,936,200,272 samples, 0.15%)</title><rect x="162.0" y="1237" width="1.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.04" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="773" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="783.5" ></text>
</g>
<g >
<title>__libc_start_main (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1589" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="163.40" y="1599.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (295,426,934 samples, 0.01%)</title><rect x="1031.1" y="1365" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1034.10" y="1375.5" ></text>
</g>
<g >
<title>resolveSelectStep (246,782,078 samples, 0.01%)</title><rect x="48.4" y="1381" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="51.44" y="1391.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1,813,611,634 samples, 0.07%)</title><rect x="562.2" y="1429" width="0.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="565.18" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1397" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1407.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (1,845,423,048,866 samples, 69.32%)</title><rect x="256.5" y="1589" width="818.0" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="259.48" y="1599.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>cpuidle_enter (3,956,326,904 samples, 0.15%)</title><rect x="1187.4" y="1525" width="1.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1190.40" y="1535.5" ></text>
</g>
<g >
<title>pick_next_task (1,953,290,484 samples, 0.07%)</title><rect x="536.2" y="1397" width="0.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="539.20" y="1407.5" ></text>
</g>
<g >
<title>aa_dfa_leftmatch (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1285" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="163.40" y="1295.5" ></text>
</g>
<g >
<title>__libc_fork (228,691,483 samples, 0.01%)</title><rect x="161.2" y="1477" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="164.19" y="1487.5" ></text>
</g>
<g >
<title>alloc_inode (3,632,216,121 samples, 0.14%)</title><rect x="1054.4" y="1333" width="1.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1057.40" y="1343.5" ></text>
</g>
<g >
<title>CompareAndSwap (1,086,069,712 samples, 0.04%)</title><rect x="264.7" y="1573" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="267.73" y="1583.5" ></text>
</g>
<g >
<title>code_store::statement_t::step (1,799,025,792 samples, 0.07%)</title><rect x="148.2" y="1429" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="151.15" y="1439.5" ></text>
</g>
<g >
<title>__calc_delta (6,545,157,852 samples, 0.25%)</title><rect x="461.3" y="1349" width="2.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="464.32" y="1359.5" ></text>
</g>
<g >
<title>code_store::store_t::get_code_items (690,513,323 samples, 0.03%)</title><rect x="125.5" y="1461" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="128.54" y="1471.5" ></text>
</g>
<g >
<title>NaClSysMmap (773,422,437 samples, 0.03%)</title><rect x="329.5" y="1557" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="332.46" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1445" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="1455.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (394,840,738 samples, 0.01%)</title><rect x="1039.2" y="1445" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1042.21" y="1455.5" ></text>
</g>
<g >
<title>tick_sched_handle (273,051,216 samples, 0.01%)</title><rect x="728.7" y="1381" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="731.68" y="1391.5" ></text>
</g>
<g >
<title>__entry_text_start (373,257,474 samples, 0.01%)</title><rect x="1044.4" y="1429" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1047.45" y="1439.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (456,925,051 samples, 0.02%)</title><rect x="1189.3" y="1509" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1192.34" y="1519.5" ></text>
</g>
<g >
<title>sqlite3LockAndPrepare (3,345,369,366 samples, 0.13%)</title><rect x="53.2" y="1461" width="1.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="56.19" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,727,342,786 samples, 0.10%)</title><rect x="1051.7" y="1429" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1054.68" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="437" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1189" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="1199.5" ></text>
</g>
<g >
<title>[anon] (632,178,275 samples, 0.02%)</title><rect x="160.9" y="1605" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="163.87" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="645" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="655.5" ></text>
</g>
<g >
<title>import_single_range (744,531,912 samples, 0.03%)</title><rect x="1037.1" y="1397" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1040.07" y="1407.5" ></text>
</g>
<g >
<title>get_meta (8,623,617,660 samples, 0.32%)</title><rect x="111.3" y="1605" width="3.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="114.28" y="1615.5" ></text>
</g>
<g >
<title>code_store::statement_t::prepare (1,819,235,088 samples, 0.07%)</title><rect x="48.2" y="1509" width="0.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="51.16" y="1519.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (2,504,972,492 samples, 0.09%)</title><rect x="159.3" y="1605" width="1.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="162.29" y="1615.5" ></text>
</g>
<g >
<title>msvc::path_utf8::filename (246,787,129 samples, 0.01%)</title><rect x="54.8" y="1541" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="57.76" y="1551.5" ></text>
</g>
<g >
<title>security_inode_getattr (342,060,363 samples, 0.01%)</title><rect x="56.2" y="1493" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="59.23" y="1503.5" ></text>
</g>
<g >
<title>enqueue_entity (1,609,980,150 samples, 0.06%)</title><rect x="195.6" y="1445" width="0.8" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="198.64" y="1455.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait (1,433,509,101 samples, 0.05%)</title><rect x="166.5" y="1541" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="169.49" y="1551.5" ></text>
</g>
<g >
<title>glob_matcher::match (9,522,011,975 samples, 0.36%)</title><rect x="149.4" y="1477" width="4.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="152.37" y="1487.5" ></text>
</g>
<g >
<title>getPageNormal (246,641,787 samples, 0.01%)</title><rect x="124.8" y="1349" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="127.76" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="533" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="543.5" ></text>
</g>
<g >
<title>dentry_free (556,602,984 samples, 0.02%)</title><rect x="1060.5" y="1285" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1063.51" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;char const*, std::allocator&lt;std::__cxx11::sub_match&lt;char const*&gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (881,813,829 samples, 0.03%)</title><rect x="41.8" y="1589" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="44.77" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,074,476,672 samples, 0.04%)</title><rect x="162.2" y="501" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.15" y="511.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,703,919,760 samples, 0.14%)</title><rect x="1181.1" y="1573" width="1.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1184.05" y="1583.5" ></text>
</g>
<g >
<title>sqlite3GenerateColumnNames (542,928,598 samples, 0.02%)</title><rect x="51.0" y="1381" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="53.99" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,159,978,666 samples, 0.04%)</title><rect x="166.6" y="1493" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="169.59" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="453" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (38,120,131,038 samples, 1.43%)</title><rect x="1022.7" y="1477" width="16.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1025.73" y="1487.5" ></text>
</g>
<g >
<title>__cmd_record (2,305,895,099 samples, 0.09%)</title><rect x="167.7" y="1589" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.73" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1461" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1471.5" ></text>
</g>
<g >
<title>code_store::statement_t::step1 (1,799,025,792 samples, 0.07%)</title><rect x="148.2" y="1445" width="0.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="151.15" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="309" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="319.5" ></text>
</g>
<g >
<title>ksys_write (1,102,754,361 samples, 0.04%)</title><rect x="168.2" y="1413" width="0.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="171.20" y="1423.5" ></text>
</g>
<g >
<title>do_futex (5,352,983,843 samples, 0.20%)</title><rect x="1047.0" y="1381" width="2.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1049.96" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1525" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1535.5" ></text>
</g>
<g >
<title>sock_close (285,315,996 samples, 0.01%)</title><rect x="1062.1" y="1317" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1065.11" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="341" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (325,923,395 samples, 0.01%)</title><rect x="159.4" y="1429" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="162.39" y="1439.5" ></text>
</g>
<g >
<title>sock_recvmsg (8,896,258,312 samples, 0.33%)</title><rect x="1030.9" y="1381" width="3.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1033.88" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1365" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (345,156,252 samples, 0.01%)</title><rect x="125.7" y="1445" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="128.69" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="261" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="271.5" ></text>
</g>
<g >
<title>walk_component (345,179,102 samples, 0.01%)</title><rect x="60.8" y="1445" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="63.84" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="805" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="815.5" ></text>
</g>
<g >
<title>NaClSysSemPostDecoder (2,613,383,811 samples, 0.10%)</title><rect x="1071.6" y="1573" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1074.65" y="1583.5" ></text>
</g>
<g >
<title>sched_clock_cpu (234,865,040 samples, 0.01%)</title><rect x="1182.5" y="1493" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1185.47" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="917" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="927.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (2,817,517,318 samples, 0.11%)</title><rect x="59.7" y="1461" width="1.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="62.74" y="1471.5" ></text>
</g>
<g >
<title>update_rq_clock (3,047,605,364 samples, 0.11%)</title><rect x="540.0" y="1397" width="1.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="543.04" y="1407.5" ></text>
</g>
<g >
<title>ext4_finish_bio (782,269,116 samples, 0.03%)</title><rect x="1180.7" y="1509" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1183.65" y="1519.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1445" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1004.48" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1189" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="1199.5" ></text>
</g>
<g >
<title>msvc::string_to_guid (1,147,100,564 samples, 0.04%)</title><rect x="127.0" y="1413" width="0.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="130.03" y="1423.5" ></text>
</g>
<g >
<title>inet_recvmsg (6,050,366,360 samples, 0.23%)</title><rect x="1031.2" y="1365" width="2.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1034.23" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="597" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,473,257,133 samples, 0.21%)</title><rect x="59.3" y="1573" width="2.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="62.35" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="181" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="191.5" ></text>
</g>
<g >
<title>security_inode_getattr (539,575,867 samples, 0.02%)</title><rect x="57.5" y="1445" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="60.52" y="1455.5" ></text>
</g>
<g >
<title>memset_erms (293,241,471 samples, 0.01%)</title><rect x="61.3" y="1461" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="64.34" y="1471.5" ></text>
</g>
<g >
<title>kthread (597,983,249 samples, 0.02%)</title><rect x="1187.0" y="1589" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1190.05" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="549" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1,776,793,550 samples, 0.07%)</title><rect x="1033.1" y="1333" width="0.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1036.08" y="1343.5" ></text>
</g>
<g >
<title>do_fcntl (2,310,688,178 samples, 0.09%)</title><rect x="109.1" y="1541" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="112.14" y="1551.5" ></text>
</g>
<g >
<title>pick_next_task_fair (121,187,796,756 samples, 4.55%)</title><rect x="451.2" y="1365" width="53.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="454.19" y="1375.5" >pick_..</text>
</g>
<g >
<title>NaClLog (5,425,718,979 samples, 0.20%)</title><rect x="296.5" y="1573" width="2.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="299.46" y="1583.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (287,140,499 samples, 0.01%)</title><rect x="1066.8" y="1221" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1069.82" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="437" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="757" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="767.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,698,571,288 samples, 0.06%)</title><rect x="182.1" y="1461" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="185.10" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (334,202,285,717 samples, 12.55%)</title><rect x="398.1" y="1445" width="148.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="401.06" y="1455.5" >__x64_sys_sched_yi..</text>
</g>
<g >
<title>bprm_execve (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1381" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="163.40" y="1391.5" ></text>
</g>
<g >
<title>process_vm_writev (493,481,263 samples, 0.02%)</title><rect x="1145.9" y="1573" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1148.87" y="1583.5" ></text>
</g>
<g >
<title>pcache1Fetch (295,960,951 samples, 0.01%)</title><rect x="124.6" y="1333" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="127.58" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="981" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (246,478,223 samples, 0.01%)</title><rect x="1168.4" y="1413" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1171.36" y="1423.5" ></text>
</g>
<g >
<title>sqlite3ResolveExprListNames (739,988,239 samples, 0.03%)</title><rect x="51.4" y="1333" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="54.38" y="1343.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (1,592,149,337 samples, 0.06%)</title><rect x="1058.8" y="1381" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1061.81" y="1391.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::lock_exclusive_slow (16,856,476,353 samples, 0.63%)</title><rect x="1042.3" y="1461" width="7.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1045.30" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (264,718,200 samples, 0.01%)</title><rect x="164.4" y="181" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="191.5" ></text>
</g>
<g >
<title>unmap_page_range (429,647,513 samples, 0.02%)</title><rect x="167.3" y="1349" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="170.31" y="1359.5" ></text>
</g>
<g >
<title>moveToChild (390,595,667 samples, 0.01%)</title><rect x="124.6" y="1365" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="127.56" y="1375.5" ></text>
</g>
<g >
<title>iterate_dir (394,486,238 samples, 0.01%)</title><rect x="58.8" y="1477" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="61.78" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_execve (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1573" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="170.51" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="725" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="735.5" ></text>
</g>
<g >
<title>__do_sys_newstat (1,923,115,019 samples, 0.07%)</title><rect x="110.4" y="1541" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="113.39" y="1551.5" ></text>
</g>
<g >
<title>core::cmp::PartialOrd::ge (1,773,185,779 samples, 0.07%)</title><rect x="981.9" y="1381" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="984.86" y="1391.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (666,653,237 samples, 0.03%)</title><rect x="1057.1" y="1269" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1060.10" y="1279.5" ></text>
</g>
<g >
<title>__schedule (799,226,869 samples, 0.03%)</title><rect x="1189.6" y="1525" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1192.58" y="1535.5" ></text>
</g>
<g >
<title>sock_free_inode (528,281,429 samples, 0.02%)</title><rect x="176.2" y="1461" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="179.19" y="1471.5" ></text>
</g>
<g >
<title>do_readlinkat (5,275,823,257 samples, 0.20%)</title><rect x="59.3" y="1525" width="2.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="62.35" y="1535.5" ></text>
</g>
<g >
<title>ext4_readdir (394,486,238 samples, 0.01%)</title><rect x="58.8" y="1461" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="61.78" y="1471.5" ></text>
</g>
<g >
<title>[bash] (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1493" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="163.40" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock (237,681,006 samples, 0.01%)</title><rect x="1044.8" y="1365" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1047.79" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="229" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="239.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (4,244,656,585 samples, 0.16%)</title><rect x="565.4" y="1477" width="1.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="568.35" y="1487.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (955,983,168 samples, 0.04%)</title><rect x="1067.2" y="1285" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1070.22" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_poll (275,390,968 samples, 0.01%)</title><rect x="166.3" y="1477" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="169.30" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="485" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (301,229,398 samples, 0.01%)</title><rect x="139.2" y="1445" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="142.16" y="1455.5" ></text>
</g>
<g >
<title>[[vdso]] (94,656,953,878 samples, 3.56%)</title><rect x="871.2" y="1445" width="41.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="874.16" y="1455.5" >[[v..</text>
</g>
<g >
<title>__skb_recv_udp (1,857,005,989 samples, 0.07%)</title><rect x="1032.2" y="1333" width="0.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1035.23" y="1343.5" ></text>
</g>
<g >
<title>NaClSysClockGetTime (24,482,324,962 samples, 0.92%)</title><rect x="304.8" y="1557" width="10.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="307.83" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1589" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="170.51" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1349" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1359.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (71,954,467,117 samples, 2.70%)</title><rect x="1039.8" y="1493" width="31.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1042.75" y="1503.5" >ru..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,117,837,819 samples, 0.15%)</title><rect x="162.0" y="1333" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.03" y="1343.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (490,618,651 samples, 0.02%)</title><rect x="1030.7" y="1381" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1033.66" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,785,821,651 samples, 0.10%)</title><rect x="1168.5" y="1605" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1171.53" y="1615.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (5,075,641,061 samples, 0.19%)</title><rect x="548.7" y="1445" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="551.70" y="1455.5" ></text>
</g>
<g >
<title>code_store::statement_t::prepare (1,517,300,993 samples, 0.06%)</title><rect x="50.0" y="1525" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="53.03" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,311,513,332 samples, 0.05%)</title><rect x="164.8" y="165" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="175.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (2,813,931,149 samples, 0.11%)</title><rect x="313.6" y="1509" width="1.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="316.60" y="1519.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (20,892,184,904 samples, 0.78%)</title><rect x="128.5" y="1381" width="9.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="131.46" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="885" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="895.5" ></text>
</g>
<g >
<title>futex_wake (1,969,585,635 samples, 0.07%)</title><rect x="1050.3" y="1381" width="0.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1053.29" y="1391.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::checked_add (937,486,212 samples, 0.04%)</title><rect x="983.2" y="1381" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="986.20" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,109,144,364 samples, 0.04%)</title><rect x="168.2" y="1461" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="171.20" y="1471.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (281,024,154 samples, 0.01%)</title><rect x="1055.9" y="1269" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1058.85" y="1279.5" ></text>
</g>
<g >
<title>Glob::isIgnored (4,976,987,137 samples, 0.19%)</title><rect x="161.8" y="1525" width="2.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="164.82" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="773" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="783.5" ></text>
</g>
<g >
<title>glob_matcher::match (7,590,070,039 samples, 0.29%)</title><rect x="149.4" y="1461" width="3.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="152.41" y="1471.5" ></text>
</g>
<g >
<title>[[vdso]] (10,514,518,008 samples, 0.39%)</title><rect x="324.1" y="1509" width="4.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="327.09" y="1519.5" ></text>
</g>
<g >
<title>NaClIsValidClockId (493,688,666 samples, 0.02%)</title><rect x="315.3" y="1525" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="318.28" y="1535.5" ></text>
</g>
<g >
<title>lind_select (71,954,467,117 samples, 2.70%)</title><rect x="1039.8" y="1541" width="31.8" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1042.75" y="1551.5" >li..</text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::ok (2,754,968,681 samples, 0.10%)</title><rect x="916.4" y="1397" width="1.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="919.36" y="1407.5" ></text>
</g>
<g >
<title>browse_engine::query_include_path_suggestions (2,410,367,410 samples, 0.09%)</title><rect x="49.0" y="1557" width="1.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="51.97" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1,132,720,896 samples, 0.04%)</title><rect x="146.0" y="1429" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="148.99" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,480,048,180 samples, 0.17%)</title><rect x="162.0" y="1413" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.02" y="1423.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (340,549,250 samples, 0.01%)</title><rect x="59.0" y="1429" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="61.98" y="1439.5" ></text>
</g>
<g >
<title>sock_alloc_file (6,112,554,413 samples, 0.23%)</title><rect x="1056.0" y="1365" width="2.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1059.02" y="1375.5" ></text>
</g>
<g >
<title>sqlite3LockAndPrepare (1,517,300,993 samples, 0.06%)</title><rect x="50.0" y="1493" width="0.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="53.03" y="1503.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (21,929,815,868 samples, 0.82%)</title><rect x="552.5" y="1429" width="9.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="555.46" y="1439.5" ></text>
</g>
<g >
<title>do_iter_write (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1285" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1004.48" y="1295.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::check_select_read (289,739,826 samples, 0.01%)</title><rect x="1062.5" y="1477" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1065.45" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (4,407,027,387 samples, 0.17%)</title><rect x="1187.4" y="1541" width="1.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1190.38" y="1551.5" ></text>
</g>
<g >
<title>madvise_walk_vmas (246,764,625 samples, 0.01%)</title><rect x="75.9" y="1525" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="78.93" y="1535.5" ></text>
</g>
<g >
<title>__skb_try_recv_from_queue (245,324,272 samples, 0.01%)</title><rect x="1032.8" y="1317" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1035.81" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2,078,369,713 samples, 0.08%)</title><rect x="1050.2" y="1413" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1053.25" y="1423.5" ></text>
</g>
<g >
<title>realpath (246,766,238 samples, 0.01%)</title><rect x="61.8" y="1589" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="64.77" y="1599.5" ></text>
</g>
<g >
<title>HandleStackContext (691,122,275 samples, 0.03%)</title><rect x="1144.2" y="1589" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1147.20" y="1599.5" ></text>
</g>
<g >
<title>std::time::Instant::now (2,030,800,147 samples, 0.08%)</title><rect x="1167.2" y="1573" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1170.19" y="1583.5" ></text>
</g>
<g >
<title>enframe (542,602,799 samples, 0.02%)</title><rect x="55.6" y="1589" width="0.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="58.64" y="1599.5" ></text>
</g>
<g >
<title>___slab_alloc (386,001,847 samples, 0.01%)</title><rect x="1055.1" y="1285" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1058.05" y="1295.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (1,145,703,942 samples, 0.04%)</title><rect x="1145.6" y="1589" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1148.58" y="1599.5" ></text>
</g>
<g >
<title>__libc_start_main (269,131,036 samples, 0.01%)</title><rect x="160.7" y="1589" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="163.71" y="1599.5" ></text>
</g>
<g >
<title>__do_softirq (1,617,897,030 samples, 0.06%)</title><rect x="182.1" y="1429" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="185.13" y="1439.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (260,533,544 samples, 0.01%)</title><rect x="1049.5" y="1349" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1052.49" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1013" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1023.5" ></text>
</g>
<g >
<title>security_inode_getattr (246,606,744 samples, 0.01%)</title><rect x="110.9" y="1493" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="113.89" y="1503.5" ></text>
</g>
<g >
<title>update_load_avg (507,040,969 samples, 0.02%)</title><rect x="180.2" y="1301" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="183.24" y="1311.5" ></text>
</g>
<g >
<title>browse_engine::query_include_files (2,410,367,410 samples, 0.09%)</title><rect x="49.0" y="1525" width="1.0" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="51.97" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="965" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="975.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,900,550,550 samples, 0.15%)</title><rect x="1181.1" y="1605" width="1.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1184.05" y="1615.5" ></text>
</g>
<g >
<title>__dentry_kill (2,963,608,644 samples, 0.11%)</title><rect x="1060.5" y="1301" width="1.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1063.46" y="1311.5" ></text>
</g>
<g >
<title>dispatcher (46,845,135,532 samples, 1.76%)</title><rect x="1018.9" y="1525" width="20.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1021.86" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,475,477 samples, 0.02%)</title><rect x="162.2" y="357" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.16" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (667,333,321 samples, 0.03%)</title><rect x="1180.7" y="1493" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1183.66" y="1503.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (12,846,805,858 samples, 0.48%)</title><rect x="511.3" y="1381" width="5.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="514.33" y="1391.5" ></text>
</g>
<g >
<title>[[vdso]] (64,014,846,945 samples, 2.40%)</title><rect x="884.7" y="1429" width="28.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="887.74" y="1439.5" >[[..</text>
</g>
<g >
<title>ovl_write_iter (716,070,461 samples, 0.03%)</title><rect x="168.4" y="1381" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="171.36" y="1391.5" ></text>
</g>
<g >
<title>__do_softirq (604,010,419 samples, 0.02%)</title><rect x="1181.4" y="1429" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1184.43" y="1439.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (937,982,935 samples, 0.04%)</title><rect x="255.8" y="1589" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="258.76" y="1599.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (1,579,293,579 samples, 0.06%)</title><rect x="320.5" y="1509" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="323.55" y="1519.5" ></text>
</g>
<g >
<title>os_xsave (496,184,221 samples, 0.02%)</title><rect x="1071.2" y="1413" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1074.16" y="1423.5" ></text>
</g>
<g >
<title>__sched_yield (3,895,143,489 samples, 0.15%)</title><rect x="1153.1" y="1589" width="1.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1156.14" y="1599.5" ></text>
</g>
<g >
<title>native_sched_clock (1,375,640,347 samples, 0.05%)</title><rect x="523.9" y="1349" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="526.91" y="1359.5" ></text>
</g>
<g >
<title>readlink (5,767,779,719 samples, 0.22%)</title><rect x="59.2" y="1589" width="2.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="62.22" y="1599.5" ></text>
</g>
<g >
<title>tick_program_event (381,922,061 samples, 0.01%)</title><rect x="1064.7" y="1285" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1067.72" y="1295.5" ></text>
</g>
<g >
<title>__vma_adjust (591,805,039 samples, 0.02%)</title><rect x="92.1" y="1477" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="95.08" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,892,784,566 samples, 0.07%)</title><rect x="159.3" y="1541" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="162.32" y="1551.5" ></text>
</g>
<g >
<title>NaClSysPwriteDecoder (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1573" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1004.48" y="1583.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (782,269,116 samples, 0.03%)</title><rect x="1180.7" y="1541" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1183.65" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="821" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (1,941,829,290 samples, 0.07%)</title><rect x="1051.8" y="1397" width="0.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1054.78" y="1407.5" ></text>
</g>
<g >
<title>cpuacct_charge (3,201,616,401 samples, 0.12%)</title><rect x="497.2" y="1333" width="1.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="500.18" y="1343.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (736,942,103 samples, 0.03%)</title><rect x="1144.5" y="1589" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1147.51" y="1599.5" ></text>
</g>
<g >
<title>psi_task_change (857,198,841 samples, 0.03%)</title><rect x="196.5" y="1461" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="199.45" y="1471.5" ></text>
</g>
<g >
<title>perf (2,330,941,652 samples, 0.09%)</title><rect x="167.7" y="1621" width="1.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="170.73" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,550,455,137 samples, 0.13%)</title><rect x="162.1" y="1093" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.05" y="1103.5" ></text>
</g>
<g >
<title>sqlite3GetVarint (1,922,468,625 samples, 0.07%)</title><rect x="136.6" y="1333" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="139.56" y="1343.5" ></text>
</g>
<g >
<title>mod_objcg_state (281,464,060 samples, 0.01%)</title><rect x="1055.4" y="1269" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1058.43" y="1279.5" ></text>
</g>
<g >
<title>dispatcher (1,922,291,769 samples, 0.07%)</title><rect x="1072.0" y="1525" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1074.96" y="1535.5" ></text>
</g>
<g >
<title>enqueue_task (229,857,402 samples, 0.01%)</title><rect x="156.2" y="1349" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="159.23" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="869" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="879.5" ></text>
</g>
<g >
<title>udp_recvmsg (4,670,503,327 samples, 0.18%)</title><rect x="1031.8" y="1349" width="2.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1034.84" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="517" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (515,054,977 samples, 0.02%)</title><rect x="1168.1" y="1557" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1171.11" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,112,951,538 samples, 0.15%)</title><rect x="162.0" y="1301" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.03" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1173" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1183.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common (246,712,934 samples, 0.01%)</title><rect x="214.3" y="1589" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="217.28" y="1599.5" ></text>
</g>
<g >
<title>exec_mmap (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1445" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="170.51" y="1455.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap_or_default (956,731,246 samples, 0.04%)</title><rect x="977.3" y="1445" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="980.26" y="1455.5" ></text>
</g>
<g >
<title>code_store::store_t::get_code_items (3,345,369,366 samples, 0.13%)</title><rect x="53.2" y="1509" width="1.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="56.19" y="1519.5" ></text>
</g>
<g >
<title>poll_idle (637,942,741 samples, 0.02%)</title><rect x="156.9" y="1493" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="159.86" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1029" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1039.5" ></text>
</g>
<g >
<title>sqlite3_step (8,313,225,172 samples, 0.31%)</title><rect x="121.8" y="1429" width="3.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="124.79" y="1439.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (394,783,233 samples, 0.01%)</title><rect x="39.9" y="1589" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="42.92" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,425,226,629 samples, 0.05%)</title><rect x="58.6" y="1557" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="61.59" y="1567.5" ></text>
</g>
<g >
<title>__update_load_avg_se (246,718,476 samples, 0.01%)</title><rect x="1066.9" y="1221" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1069.95" y="1231.5" ></text>
</g>
<g >
<title>futex_wait_setup (453,944,982 samples, 0.02%)</title><rect x="1049.1" y="1349" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1052.11" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="501" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="511.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (397,042,886 samples, 0.01%)</title><rect x="1064.7" y="1301" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1067.71" y="1311.5" ></text>
</g>
<g >
<title>do_fault (232,834,959 samples, 0.01%)</title><rect x="1145.7" y="1349" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1148.70" y="1359.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (2,030,800,147 samples, 0.08%)</title><rect x="1167.2" y="1557" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1170.19" y="1567.5" ></text>
</g>
<g >
<title>security_bprm_creds_for_exec (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1349" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="163.40" y="1359.5" ></text>
</g>
<g >
<title>kmem_cache_free (295,918,535 samples, 0.01%)</title><rect x="109.6" y="1477" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="112.65" y="1487.5" ></text>
</g>
<g >
<title>try_to_wake_up (245,234,312 samples, 0.01%)</title><rect x="193.2" y="1365" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="196.25" y="1375.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (789,310,545 samples, 0.03%)</title><rect x="200.0" y="1509" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="202.97" y="1519.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (986,083,007 samples, 0.04%)</title><rect x="277.7" y="1573" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="280.70" y="1583.5" ></text>
</g>
<g >
<title>[[vdso]] (68,632,245,074 samples, 2.58%)</title><rect x="942.4" y="1381" width="30.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="945.38" y="1391.5" >[[..</text>
</g>
<g >
<title>code_store::statement_t::step (8,313,225,172 samples, 0.31%)</title><rect x="121.8" y="1445" width="3.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="124.79" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,314,471,494 samples, 0.09%)</title><rect x="162.1" y="853" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.08" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1429" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,374,804,202 samples, 0.05%)</title><rect x="164.7" y="1557" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.74" y="1567.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (1,997,949,750 samples, 0.08%)</title><rect x="166.3" y="1573" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="169.27" y="1583.5" ></text>
</g>
<g >
<title>do_idle (6,000,573,455 samples, 0.23%)</title><rect x="1187.3" y="1557" width="2.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1190.32" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (22,523,906,752 samples, 0.85%)</title><rect x="1029.2" y="1445" width="10.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1032.18" y="1455.5" ></text>
</g>
<g >
<title>update_min_vruntime (10,086,402,543 samples, 0.38%)</title><rect x="500.4" y="1349" width="4.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="503.43" y="1359.5" ></text>
</g>
<g >
<title>find_busiest_group (760,835,726 samples, 0.03%)</title><rect x="1067.9" y="1221" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1070.89" y="1231.5" ></text>
</g>
<g >
<title>ovl_read_iter (2,592,205,988 samples, 0.10%)</title><rect x="118.9" y="1525" width="1.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="121.89" y="1535.5" ></text>
</g>
<g >
<title>sqlite3BtreeTableMoveto (493,023,549 samples, 0.02%)</title><rect x="39.5" y="1589" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="42.51" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="533" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (253,437,874 samples, 0.01%)</title><rect x="1071.5" y="1429" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1074.54" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="789" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="357" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="367.5" ></text>
</g>
<g >
<title>NaClMaskRestore (934,486,920 samples, 0.04%)</title><rect x="1147.0" y="1589" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1150.00" y="1599.5" ></text>
</g>
<g >
<title>fstatat64 (2,169,701,879 samples, 0.08%)</title><rect x="110.3" y="1605" width="1.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="113.32" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,863,760,653 samples, 0.07%)</title><rect x="162.1" y="709" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.12" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="613" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,556,648,612 samples, 0.13%)</title><rect x="162.0" y="1109" width="1.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.05" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1317" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (9,421,836,672 samples, 0.35%)</title><rect x="1182.8" y="1605" width="4.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.78" y="1615.5" ></text>
</g>
<g >
<title>__do_softirq (254,066,539 samples, 0.01%)</title><rect x="1187.9" y="1429" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1190.93" y="1439.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (4,733,471,749 samples, 0.18%)</title><rect x="275.2" y="1557" width="2.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="278.21" y="1567.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (367,629,282 samples, 0.01%)</title><rect x="728.7" y="1477" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="731.68" y="1487.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (5,637,342,824 samples, 0.21%)</title><rect x="331.5" y="1525" width="2.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="334.49" y="1535.5" ></text>
</g>
<g >
<title>sqlite3ResolveExprNames (394,598,416 samples, 0.01%)</title><rect x="51.7" y="1333" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="54.71" y="1343.5" ></text>
</g>
<g >
<title>clock_nanosleep (19,386,628,014 samples, 0.73%)</title><rect x="1062.9" y="1429" width="8.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1065.92" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock (427,826,957 samples, 0.02%)</title><rect x="1059.2" y="1365" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1062.23" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (820,591,937 samples, 0.03%)</title><rect x="1168.1" y="1589" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1171.10" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1141" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1151.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (1,131,633,243 samples, 0.04%)</title><rect x="923.0" y="1349" width="0.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="925.98" y="1359.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (56,603,712,228 samples, 2.13%)</title><rect x="976.3" y="1493" width="25.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="979.30" y="1503.5" >s..</text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1541" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="167.37" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1381" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1004.48" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;char const*, std::allocator&lt;std::__cxx11::sub_match&lt;char const*&gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,167,400,608 samples, 0.08%)</title><rect x="150.3" y="1397" width="1.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="153.33" y="1407.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (295,093,308 samples, 0.01%)</title><rect x="109.9" y="1509" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="112.91" y="1519.5" ></text>
</g>
<g >
<title>__destroy_inode (784,740,656 samples, 0.03%)</title><rect x="1061.2" y="1221" width="0.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1064.16" y="1231.5" ></text>
</g>
<g >
<title>perf_mmap__push (1,176,878,137 samples, 0.04%)</title><rect x="168.2" y="1541" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="171.17" y="1551.5" ></text>
</g>
<g >
<title>do_user_addr_fault (295,841,315 samples, 0.01%)</title><rect x="104.3" y="1557" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="107.35" y="1567.5" ></text>
</g>
<g >
<title>__unlock (8,477,441,186 samples, 0.32%)</title><rect x="93.4" y="1605" width="3.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="96.37" y="1615.5" ></text>
</g>
<g >
<title>CCodeStoreManager::release (344,778,554 samples, 0.01%)</title><rect x="138.6" y="1413" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="141.59" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="629" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="639.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (296,067,232 samples, 0.01%)</title><rect x="57.8" y="1413" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="60.78" y="1423.5" ></text>
</g>
<g >
<title>msvc::path_utf8::filename (1,621,962,080 samples, 0.06%)</title><rect x="139.7" y="1461" width="0.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="142.66" y="1471.5" ></text>
</g>
<g >
<title>getPageNormal (3,840,809,401 samples, 0.14%)</title><rect x="134.7" y="1317" width="1.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="137.68" y="1327.5" ></text>
</g>
<g >
<title>ovl_iterate_real (438,585,717 samples, 0.02%)</title><rect x="59.0" y="1493" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="61.98" y="1503.5" ></text>
</g>
<g >
<title>msvc::path_utf8::path_utf8 (1,537,232,122 samples, 0.06%)</title><rect x="54.9" y="1541" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="57.87" y="1551.5" ></text>
</g>
<g >
<title>enqueue_task (3,156,057,043 samples, 0.12%)</title><rect x="195.4" y="1477" width="1.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="198.44" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (241,348,881 samples, 0.01%)</title><rect x="145.8" y="1413" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="148.82" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (17,015,364,532 samples, 0.64%)</title><rect x="1063.6" y="1397" width="7.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1066.57" y="1407.5" ></text>
</g>
<g >
<title>ls (395,928,211 samples, 0.01%)</title><rect x="160.7" y="1621" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="163.66" y="1631.5" ></text>
</g>
<g >
<title>inet_csk_accept (839,752,028 samples, 0.03%)</title><rect x="1053.6" y="1349" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1056.61" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,458,412,479 samples, 0.05%)</title><rect x="162.1" y="581" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.14" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="309" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="319.5" ></text>
</g>
<g >
<title>sqlite3_step (1,799,025,792 samples, 0.07%)</title><rect x="148.2" y="1413" width="0.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="151.15" y="1423.5" ></text>
</g>
<g >
<title>msvc::path_utf8::split_path (4,684,247,073 samples, 0.18%)</title><rect x="141.1" y="1445" width="2.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="144.05" y="1455.5" ></text>
</g>
<g >
<title>CExtFullCodeItemResults::GetData (590,907,954 samples, 0.02%)</title><rect x="121.5" y="1477" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="124.49" y="1487.5" ></text>
</g>
<g >
<title>resolveSelectStep (1,183,937,097 samples, 0.04%)</title><rect x="51.4" y="1349" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="54.36" y="1359.5" ></text>
</g>
<g >
<title>msvc::thread_helper_t::thread_entry (74,544,394,620 samples, 2.80%)</title><rect x="120.8" y="1589" width="33.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="123.79" y="1599.5" >ms..</text>
</g>
<g >
<title>prepare_task_switch (277,481,077 samples, 0.01%)</title><rect x="1068.5" y="1285" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1071.45" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1077" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1445" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="1455.5" ></text>
</g>
<g >
<title>[[vdso]] (15,006,920,118 samples, 0.56%)</title><rect x="322.1" y="1525" width="6.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="325.10" y="1535.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (393,161,729 samples, 0.01%)</title><rect x="200.6" y="1541" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="203.62" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="997" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (325,282,904 samples, 0.01%)</title><rect x="164.0" y="1493" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="167.03" y="1503.5" ></text>
</g>
<g >
<title>psi_group_change (636,385,221 samples, 0.02%)</title><rect x="196.5" y="1445" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="199.50" y="1455.5" ></text>
</g>
<g >
<title>sqlite3RunParser (2,410,367,410 samples, 0.09%)</title><rect x="49.0" y="1397" width="1.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="51.97" y="1407.5" ></text>
</g>
<g >
<title>[[vdso]] (9,080,895,290 samples, 0.34%)</title><rect x="308.9" y="1477" width="4.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="311.85" y="1487.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (2,053,008,033 samples, 0.08%)</title><rect x="973.6" y="1461" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="976.56" y="1471.5" ></text>
</g>
<g >
<title>allocate_slab (241,226,044 samples, 0.01%)</title><rect x="1055.1" y="1253" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1058.12" y="1263.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (268,152,498 samples, 0.01%)</title><rect x="193.2" y="1413" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="196.24" y="1423.5" ></text>
</g>
<g >
<title>futex_wait_queue (4,363,369,049 samples, 0.16%)</title><rect x="1047.2" y="1349" width="1.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1050.18" y="1359.5" ></text>
</g>
<g >
<title>sock_free_inode (275,713,033 samples, 0.01%)</title><rect x="182.4" y="1349" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="185.42" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1029" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="1039.5" ></text>
</g>
<g >
<title>__memcpy_fwd (246,783,974 samples, 0.01%)</title><rect x="72.2" y="1589" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="75.22" y="1599.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1365" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="163.40" y="1375.5" ></text>
</g>
<g >
<title>clock_gettime (4,110,127,335 samples, 0.15%)</title><rect x="974.5" y="1477" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="977.48" y="1487.5" ></text>
</g>
<g >
<title>strncpy_from_user (443,863,022 samples, 0.02%)</title><rect x="61.5" y="1461" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="64.47" y="1471.5" ></text>
</g>
<g >
<title>dispatcher (394,420,972 samples, 0.01%)</title><rect x="209.0" y="1589" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="211.97" y="1599.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1,116,691,204 samples, 0.04%)</title><rect x="1047.6" y="1285" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1050.55" y="1295.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (245,302,306 samples, 0.01%)</title><rect x="61.2" y="1461" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="64.23" y="1471.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,297,162,769 samples, 0.05%)</title><rect x="1188.1" y="1493" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1191.09" y="1503.5" ></text>
</g>
<g >
<title>schedule (2,992,088,148 samples, 0.11%)</title><rect x="1044.9" y="1365" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1047.92" y="1375.5" ></text>
</g>
<g >
<title>__entry_text_start (39,886,012,320 samples, 1.50%)</title><rect x="371.9" y="1477" width="17.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="374.94" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="917" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="927.5" ></text>
</g>
<g >
<title>operator new (648,012,742 samples, 0.02%)</title><rect x="164.9" y="85" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="167.94" y="95.5" ></text>
</g>
<g >
<title>[sel_ldr] (74,977,374,558 samples, 2.82%)</title><rect x="220.8" y="1589" width="33.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="223.75" y="1599.5" >[s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1237" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1247.5" ></text>
</g>
<g >
<title>__schedule (246,680,735 samples, 0.01%)</title><rect x="869.2" y="1349" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="872.16" y="1359.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (743,087,007 samples, 0.03%)</title><rect x="1058.0" y="1285" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1061.01" y="1295.5" ></text>
</g>
<g >
<title>select_task_rq_fair (652,519,576 samples, 0.02%)</title><rect x="179.3" y="1365" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="182.32" y="1375.5" ></text>
</g>
<g >
<title>__schedule (2,885,452,797 samples, 0.11%)</title><rect x="1044.9" y="1349" width="1.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1047.93" y="1359.5" ></text>
</g>
<g >
<title>do_futex (2,054,414,436 samples, 0.08%)</title><rect x="1050.3" y="1397" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1053.26" y="1407.5" ></text>
</g>
<g >
<title>__schedule (6,624,550,954 samples, 0.25%)</title><rect x="197.4" y="1525" width="2.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="200.38" y="1535.5" ></text>
</g>
<g >
<title>__switch_to_asm (504,323,634 samples, 0.02%)</title><rect x="175.0" y="1605" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="178.05" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;char const*, std::allocator&lt;std::__cxx11::sub_match&lt;char const*&gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (390,986,594 samples, 0.01%)</title><rect x="151.1" y="1365" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="154.12" y="1375.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (295,855,411 samples, 0.01%)</title><rect x="125.7" y="1413" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="128.69" y="1423.5" ></text>
</g>
<g >
<title>irq_exit_rcu (604,010,419 samples, 0.02%)</title><rect x="1181.4" y="1461" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1184.43" y="1471.5" ></text>
</g>
<g >
<title>igc_clean_tx_irq (623,287,393 samples, 0.02%)</title><rect x="1181.1" y="1365" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1184.11" y="1375.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (345,576,873 samples, 0.01%)</title><rect x="204.2" y="1589" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="207.16" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1493" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1503.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,355,418,891 samples, 0.09%)</title><rect x="156.1" y="1509" width="1.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="159.11" y="1519.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (2,207,010,508 samples, 0.08%)</title><rect x="563.0" y="1461" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="565.98" y="1471.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (229,185,688 samples, 0.01%)</title><rect x="161.2" y="1509" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="164.19" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,698,336,382 samples, 0.06%)</title><rect x="162.1" y="693" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.12" y="703.5" ></text>
</g>
<g >
<title>__schedule (1,615,717,033 samples, 0.06%)</title><rect x="404.2" y="1413" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="407.18" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,314,471,494 samples, 0.09%)</title><rect x="162.1" y="869" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.08" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,351,895,459 samples, 0.13%)</title><rect x="162.1" y="1077" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.06" y="1087.5" ></text>
</g>
<g >
<title>cpuidle_enter (35,654,386,856 samples, 1.34%)</title><rect x="177.9" y="1525" width="15.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="180.91" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,485,802,409 samples, 0.24%)</title><rect x="1046.8" y="1429" width="2.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1049.80" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (292,172,204 samples, 0.01%)</title><rect x="10.1" y="1589" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.12" y="1599.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (280,270,610 samples, 0.01%)</title><rect x="1168.3" y="1541" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1171.34" y="1551.5" ></text>
</g>
<g >
<title>update_min_vruntime (4,137,233,380 samples, 0.16%)</title><rect x="498.6" y="1333" width="1.8" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="501.60" y="1343.5" ></text>
</g>
<g >
<title>do_nftw (2,178,637,563 samples, 0.08%)</title><rect x="54.7" y="1589" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="57.67" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (10,873,557,917 samples, 0.41%)</title><rect x="161.5" y="1605" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="164.45" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="933" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1381" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1221" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1231.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,803,968,154 samples, 0.11%)</title><rect x="109.0" y="1573" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="112.01" y="1583.5" ></text>
</g>
<g >
<title>inode_permission (689,869,225 samples, 0.03%)</title><rect x="110.4" y="1445" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="113.43" y="1455.5" ></text>
</g>
<g >
<title>get_stride (2,363,182,644 samples, 0.09%)</title><rect x="115.1" y="1605" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="118.11" y="1615.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1333" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="170.51" y="1343.5" ></text>
</g>
<g >
<title>enqueue_task_fair (2,171,545,599 samples, 0.08%)</title><rect x="195.5" y="1461" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="198.47" y="1471.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (5,986,510,844 samples, 0.22%)</title><rect x="1056.1" y="1349" width="2.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1059.05" y="1359.5" ></text>
</g>
<g >
<title>vfs_read (2,789,558,482 samples, 0.10%)</title><rect x="118.9" y="1541" width="1.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="121.89" y="1551.5" ></text>
</g>
<g >
<title>NaClSysClockGetTimeDecoder (31,936,743,341 samples, 1.20%)</title><rect x="301.5" y="1573" width="14.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="304.52" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,566,785,069 samples, 0.06%)</title><rect x="92.1" y="1589" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="95.08" y="1599.5" ></text>
</g>
<g >
<title>wake_up_process (376,322,348 samples, 0.01%)</title><rect x="156.2" y="1397" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="159.18" y="1407.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (368,445,666 samples, 0.01%)</title><rect x="1145.9" y="1461" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1148.92" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (295,762,358 samples, 0.01%)</title><rect x="149.8" y="1429" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="152.80" y="1439.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::sleep (270,353,490 samples, 0.01%)</title><rect x="1168.3" y="1461" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1171.35" y="1471.5" ></text>
</g>
<g >
<title>task_work_run (5,247,470,863 samples, 0.20%)</title><rect x="1060.0" y="1365" width="2.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1063.05" y="1375.5" ></text>
</g>
<g >
<title>pick_next_task (1,781,119,475 samples, 0.07%)</title><rect x="1067.6" y="1285" width="0.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1070.65" y="1295.5" ></text>
</g>
<g >
<title>schedule (246,680,735 samples, 0.01%)</title><rect x="869.2" y="1365" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="872.16" y="1375.5" ></text>
</g>
<g >
<title>ext4_da_write_end (262,546,663 samples, 0.01%)</title><rect x="168.6" y="1269" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="171.55" y="1279.5" ></text>
</g>
<g >
<title>ovl_permission (443,276,222 samples, 0.02%)</title><rect x="110.5" y="1429" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="113.47" y="1439.5" ></text>
</g>
<g >
<title>code_store::statement_t::prepare (5,010,634,315 samples, 0.19%)</title><rect x="50.7" y="1477" width="2.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="53.71" y="1487.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (2,422,386,417 samples, 0.09%)</title><rect x="508.6" y="1381" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="511.65" y="1391.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (840,354,759 samples, 0.03%)</title><rect x="1187.5" y="1445" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1190.54" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="629" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="639.5" ></text>
</g>
<g >
<title>clock_gettime (13,078,881,541 samples, 0.49%)</title><rect x="307.1" y="1509" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="310.10" y="1519.5" ></text>
</g>
<g >
<title>native_sched_clock (286,972,969 samples, 0.01%)</title><rect x="193.5" y="1461" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="196.48" y="1471.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::nonblock_accept (25,324,128,205 samples, 0.95%)</title><rect x="1051.2" y="1477" width="11.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1054.23" y="1487.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (356,633,640 samples, 0.01%)</title><rect x="157.3" y="1541" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="160.25" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1013" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,074,476,672 samples, 0.04%)</title><rect x="162.2" y="485" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.15" y="495.5" ></text>
</g>
<g >
<title>alloc_file (3,278,803,248 samples, 0.12%)</title><rect x="1056.1" y="1333" width="1.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1059.15" y="1343.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (837,777,776 samples, 0.03%)</title><rect x="57.0" y="1413" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="59.99" y="1423.5" ></text>
</g>
<g >
<title>getPageNormal (390,595,667 samples, 0.01%)</title><rect x="124.6" y="1349" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="127.56" y="1359.5" ></text>
</g>
<g >
<title>update_curr (66,875,085,377 samples, 2.51%)</title><rect x="470.8" y="1349" width="29.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="473.79" y="1359.5" >up..</text>
</g>
<g >
<title>walk_entry_and_subtree (1,979,704,804 samples, 0.07%)</title><rect x="12.2" y="1605" width="0.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="15.20" y="1615.5" ></text>
</g>
<g >
<title>msvc::recursive_directory_iterator_utf8::on_ftw (2,178,637,563 samples, 0.08%)</title><rect x="54.7" y="1573" width="0.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="57.67" y="1583.5" ></text>
</g>
<g >
<title>sqlite3RunParser (5,010,634,315 samples, 0.19%)</title><rect x="50.7" y="1413" width="2.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="53.71" y="1423.5" ></text>
</g>
<g >
<title>rustposix::interface::timer::IntervalTimer::tick (279,751,409 samples, 0.01%)</title><rect x="1168.3" y="1493" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1171.34" y="1503.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (493,481,263 samples, 0.02%)</title><rect x="1145.9" y="1477" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1148.87" y="1487.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (246,735,033 samples, 0.01%)</title><rect x="1032.9" y="1301" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1035.95" y="1311.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1589" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="164.46" y="1599.5" ></text>
</g>
<g >
<title>CExtFileResults::GetData (3,266,678,529 samples, 0.12%)</title><rect x="126.7" y="1445" width="1.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="129.68" y="1455.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,843,958,589 samples, 0.14%)</title><rect x="156.0" y="1605" width="1.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="159.04" y="1615.5" ></text>
</g>
<g >
<title>code_store::store_t::get_files (5,010,634,315 samples, 0.19%)</title><rect x="50.7" y="1509" width="2.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="53.71" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="517" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="527.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (110,031,573,298 samples, 4.13%)</title><rect x="924.8" y="1445" width="48.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="927.79" y="1455.5" >std:..</text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (326,162,459 samples, 0.01%)</title><rect x="161.2" y="1557" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="164.19" y="1567.5" ></text>
</g>
<g >
<title>__get_user_pages (266,088,911 samples, 0.01%)</title><rect x="1145.7" y="1413" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1148.69" y="1423.5" ></text>
</g>
<g >
<title>core::cmp::PartialOrd::ge (2,015,536,493 samples, 0.08%)</title><rect x="922.6" y="1365" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="925.59" y="1375.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (245,317,853 samples, 0.01%)</title><rect x="1037.5" y="1413" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1040.53" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="853" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="837" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="847.5" ></text>
</g>
<g >
<title>sqlite3SelectPrep (2,018,528,622 samples, 0.08%)</title><rect x="51.3" y="1381" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="54.30" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (325,282,904 samples, 0.01%)</title><rect x="164.0" y="1525" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="167.03" y="1535.5" ></text>
</g>
<g >
<title>browse_engine::query_cik_in_file (1,819,235,088 samples, 0.07%)</title><rect x="48.2" y="1557" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="51.16" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="469" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1301" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1311.5" ></text>
</g>
<g >
<title>sqlite3LockAndPrepare (2,410,367,410 samples, 0.09%)</title><rect x="49.0" y="1429" width="1.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="51.97" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;code_store::record_id_t&lt;code_store::file_tag_t&gt;, std::pair&lt;code_store::record_id_t&lt;code_store::file_tag_t&gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;code_store::record_id_t&lt;code_store::file_tag_t&gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;code_store::record_id_t&lt;code_store::file_tag_t&gt; &gt;, std::allocator&lt;std::pair&lt;code_store::record_id_t&lt;code_store::file_tag_t&gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_emplace_unique&lt;code_store::record_id_t&lt;code_store::file_tag_t&gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (690,693,011 samples, 0.03%)</title><rect x="147.2" y="1461" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="150.15" y="1471.5" ></text>
</g>
<g >
<title>__memcpy_fwd (8,672,335,178 samples, 0.33%)</title><rect x="44.1" y="1589" width="3.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="47.12" y="1599.5" ></text>
</g>
<g >
<title>getCellInfo (238,497,176 samples, 0.01%)</title><rect x="123.5" y="1397" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="126.45" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (858,307,729 samples, 0.03%)</title><rect x="162.2" y="405" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.16" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1061" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="1071.5" ></text>
</g>
<g >
<title>dequeue_task (1,159,886,686 samples, 0.04%)</title><rect x="1047.5" y="1301" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1050.54" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1045" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1055.5" ></text>
</g>
<g >
<title>poll_idle (10,000,463,525 samples, 0.38%)</title><rect x="189.0" y="1493" width="4.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="192.02" y="1503.5" ></text>
</g>
<g >
<title>NaClSysSelectDecoder (71,954,467,117 samples, 2.70%)</title><rect x="1039.8" y="1573" width="31.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1042.75" y="1583.5" >Na..</text>
</g>
<g >
<title>load_balance (610,916,799 samples, 0.02%)</title><rect x="1048.3" y="1253" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1051.34" y="1263.5" ></text>
</g>
<g >
<title>kthread (912,859,144 samples, 0.03%)</title><rect x="1180.6" y="1589" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1183.65" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1397" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="1407.5" ></text>
</g>
<g >
<title>sqlite3VdbeFinishMoveto (2,359,995,483 samples, 0.09%)</title><rect x="124.1" y="1397" width="1.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="127.15" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,336,844,155 samples, 0.24%)</title><rect x="1046.9" y="1413" width="2.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1049.85" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,474,145,591 samples, 0.09%)</title><rect x="162.1" y="917" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.08" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="341" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="351.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (944,142,650 samples, 0.04%)</title><rect x="1055.6" y="1285" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1058.57" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,723,259,551 samples, 0.14%)</title><rect x="162.0" y="1189" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.04" y="1199.5" ></text>
</g>
<g >
<title>__check_object_size (246,762,138 samples, 0.01%)</title><rect x="61.6" y="1445" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="64.56" y="1455.5" ></text>
</g>
<g >
<title>msvc::log (345,408,821 samples, 0.01%)</title><rect x="149.6" y="1429" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="152.56" y="1439.5" ></text>
</g>
<g >
<title>get_meta (641,210,555 samples, 0.02%)</title><rect x="37.5" y="1589" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="40.48" y="1599.5" ></text>
</g>
<g >
<title>browse_engine::query_include_path_suggestions (49,092,610,782 samples, 1.84%)</title><rect x="126.1" y="1493" width="21.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="129.13" y="1503.5" >b..</text>
</g>
<g >
<title>dput (3,174,585,705 samples, 0.12%)</title><rect x="1060.4" y="1317" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1063.43" y="1327.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (2,665,850,197 samples, 0.10%)</title><rect x="543.4" y="1429" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="546.40" y="1439.5" ></text>
</g>
<g >
<title>_copy_from_user (515,054,977 samples, 0.02%)</title><rect x="1168.1" y="1525" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1171.11" y="1535.5" ></text>
</g>
<g >
<title>ttwu_do_activate (228,023,642 samples, 0.01%)</title><rect x="157.3" y="1493" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="160.27" y="1503.5" ></text>
</g>
<g >
<title>put_prev_task_balance (471,122,508 samples, 0.02%)</title><rect x="176.9" y="1509" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="179.92" y="1519.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (273,051,216 samples, 0.01%)</title><rect x="728.7" y="1429" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="731.68" y="1439.5" ></text>
</g>
<g >
<title>memcg_list_lru_alloc (237,487,485 samples, 0.01%)</title><rect x="1055.7" y="1269" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1058.75" y="1279.5" ></text>
</g>
<g >
<title>lookup_fast (837,777,776 samples, 0.03%)</title><rect x="57.0" y="1429" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="59.99" y="1439.5" ></text>
</g>
<g >
<title>update_curr (6,169,343,619 samples, 0.23%)</title><rect x="504.9" y="1365" width="2.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="507.91" y="1375.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (677,925,151 samples, 0.03%)</title><rect x="156.2" y="1493" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="159.16" y="1503.5" ></text>
</g>
<g >
<title>update_curr (266,192,583 samples, 0.01%)</title><rect x="1047.8" y="1253" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1050.75" y="1263.5" ></text>
</g>
<g >
<title>ct_idle_enter (242,502,749 samples, 0.01%)</title><rect x="183.1" y="1493" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="186.10" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (317,968,707 samples, 0.01%)</title><rect x="162.2" y="261" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.17" y="271.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (638,882,085 samples, 0.02%)</title><rect x="335.7" y="1509" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="338.71" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (290,258,120 samples, 0.01%)</title><rect x="166.3" y="1493" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="169.30" y="1503.5" ></text>
</g>
<g >
<title>cpptools-srv (10,528,165,340 samples, 0.40%)</title><rect x="10.1" y="1621" width="4.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="13.10" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="565" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::checked_sub_instant (828,599,197 samples, 0.03%)</title><rect x="218.0" y="1525" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="221.02" y="1535.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (279,751,409 samples, 0.01%)</title><rect x="1168.3" y="1509" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1171.34" y="1519.5" ></text>
</g>
<g >
<title>vfs_fstatat (1,923,115,019 samples, 0.07%)</title><rect x="110.4" y="1525" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="113.39" y="1535.5" ></text>
</g>
<g >
<title>find_attach (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1301" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="163.40" y="1311.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (2,118,053,448 samples, 0.08%)</title><rect x="464.2" y="1349" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="467.22" y="1359.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (542,253,921 samples, 0.02%)</title><rect x="111.0" y="1493" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="114.00" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,228,622,038 samples, 0.05%)</title><rect x="162.1" y="565" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.14" y="575.5" ></text>
</g>
<g >
<title>call_rcu (361,156,696 samples, 0.01%)</title><rect x="1060.3" y="1317" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1063.27" y="1327.5" ></text>
</g>
<g >
<title>cpu_startup_entry (6,031,750,590 samples, 0.23%)</title><rect x="1187.3" y="1573" width="2.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1190.31" y="1583.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (2,102,573,400 samples, 0.08%)</title><rect x="413.9" y="1413" width="0.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="416.88" y="1423.5" ></text>
</g>
<g >
<title>filemap_read (2,197,623,196 samples, 0.08%)</title><rect x="119.0" y="1429" width="1.0" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="122.05" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,473,257,133 samples, 0.21%)</title><rect x="59.3" y="1557" width="2.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="62.35" y="1567.5" ></text>
</g>
<g >
<title>lind_recv (48,572,105,463 samples, 1.82%)</title><rect x="1018.1" y="1541" width="21.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1021.14" y="1551.5" >l..</text>
</g>
<g >
<title>Watcher::isIgnored (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1557" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="164.46" y="1567.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (246,593,020 samples, 0.01%)</title><rect x="56.1" y="1477" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="59.10" y="1487.5" ></text>
</g>
<g >
<title>workspace_folder_context::is_file_excluded (9,670,008,783 samples, 0.36%)</title><rect x="149.4" y="1493" width="4.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="152.37" y="1503.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (20,382,371,145 samples, 0.77%)</title><rect x="915.8" y="1445" width="9.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="918.75" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,972,379,177 samples, 0.07%)</title><rect x="110.4" y="1589" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="113.39" y="1599.5" ></text>
</g>
<g >
<title>inode_permission (493,291,033 samples, 0.02%)</title><rect x="60.2" y="1413" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="63.21" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,314,471,494 samples, 0.09%)</title><rect x="162.1" y="885" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.08" y="895.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (544,295,651 samples, 0.02%)</title><rect x="1055.3" y="1285" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1058.31" y="1295.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1,722,920,736 samples, 0.06%)</title><rect x="517.0" y="1381" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="520.02" y="1391.5" ></text>
</g>
<g >
<title>record__mmap_read_all (1,342,630,132 samples, 0.05%)</title><rect x="168.2" y="1573" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="171.16" y="1583.5" ></text>
</g>
<g >
<title>ext4_readdir (389,909,290 samples, 0.01%)</title><rect x="59.0" y="1461" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="61.98" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (1,279,680,940 samples, 0.05%)</title><rect x="413.3" y="1413" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="416.32" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1429" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="821" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="831.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (27,145,826,916 samples, 1.02%)</title><rect x="550.9" y="1445" width="12.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="553.95" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,424,340,489 samples, 0.09%)</title><rect x="156.1" y="1525" width="1.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="159.09" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (246,680,735 samples, 0.01%)</title><rect x="869.2" y="1413" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="872.16" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,863,760,653 samples, 0.07%)</title><rect x="162.1" y="725" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.12" y="735.5" ></text>
</g>
<g >
<title>common_nsleep (13,206,888,569 samples, 0.50%)</title><rect x="1063.8" y="1365" width="5.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1066.77" y="1375.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (671,750,609 samples, 0.03%)</title><rect x="156.2" y="1477" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="159.17" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1349" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1359.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1573" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="167.37" y="1583.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (246,359,727 samples, 0.01%)</title><rect x="118.4" y="1605" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="121.39" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (648,012,742 samples, 0.02%)</title><rect x="164.9" y="53" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="167.94" y="63.5" ></text>
</g>
<g >
<title>sqlite3LockAndPrepare (5,010,634,315 samples, 0.19%)</title><rect x="50.7" y="1445" width="2.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="53.71" y="1455.5" ></text>
</g>
<g >
<title>enframe (9,147,909,111 samples, 0.34%)</title><rect x="104.7" y="1605" width="4.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="107.70" y="1615.5" ></text>
</g>
<g >
<title>generic_perform_write (639,369,630 samples, 0.02%)</title><rect x="168.4" y="1285" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="171.39" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="581" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="591.5" ></text>
</g>
<g >
<title>native_sched_clock (25,562,162,432 samples, 0.96%)</title><rect x="524.9" y="1333" width="11.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="527.87" y="1343.5" ></text>
</g>
<g >
<title>moveToLeftmost (295,999,421 samples, 0.01%)</title><rect x="124.7" y="1365" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="127.73" y="1375.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1,036,687,157 samples, 0.04%)</title><rect x="254.8" y="1589" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="257.84" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1397" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1407.5" ></text>
</g>
<g >
<title>active_load_balance_cpu_stop (393,941,883 samples, 0.01%)</title><rect x="175.5" y="1541" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="178.50" y="1551.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (20,382,371,145 samples, 0.77%)</title><rect x="915.8" y="1461" width="9.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="918.75" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="677" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="687.5" ></text>
</g>
<g >
<title>menu_select (343,689,770 samples, 0.01%)</title><rect x="1189.2" y="1509" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1192.16" y="1519.5" ></text>
</g>
<g >
<title>cpptools (314,863,196,313 samples, 11.83%)</title><rect x="14.8" y="1621" width="139.5" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="17.76" y="1631.5" >cpptools</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="901" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="911.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (926,559,544 samples, 0.03%)</title><rect x="1058.8" y="1365" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1061.82" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="613" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="623.5" ></text>
</g>
<g >
<title>code_store::store_t::get_file (2,044,978,580 samples, 0.08%)</title><rect x="148.0" y="1461" width="1.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="151.05" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="949" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="959.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1,773,185,779 samples, 0.07%)</title><rect x="981.9" y="1397" width="0.8" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="984.86" y="1407.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (12,602,022,707 samples, 0.47%)</title><rect x="183.4" y="1493" width="5.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="186.43" y="1503.5" ></text>
</g>
<g >
<title>__sys_recvfrom (15,186,134,659 samples, 0.57%)</title><rect x="1029.9" y="1397" width="6.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1032.94" y="1407.5" ></text>
</g>
<g >
<title>dispatcher (246,737,039 samples, 0.01%)</title><rect x="1156.6" y="1589" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1159.57" y="1599.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,502,939,471 samples, 0.13%)</title><rect x="1181.1" y="1541" width="1.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1184.05" y="1551.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (815,180,008 samples, 0.03%)</title><rect x="91.7" y="1525" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="94.72" y="1535.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (2,860,451,091 samples, 0.11%)</title><rect x="320.0" y="1525" width="1.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="322.98" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="917" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="453" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="463.5" ></text>
</g>
<g >
<title>NaCl_trampoline_code_end (394,949,919 samples, 0.01%)</title><rect x="315.5" y="1525" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="318.50" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="405" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="415.5" ></text>
</g>
<g >
<title>NaClClockGetTime (15,448,530,111 samples, 0.58%)</title><rect x="306.2" y="1525" width="6.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="309.25" y="1535.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (392,367,542 samples, 0.01%)</title><rect x="159.4" y="1461" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="162.39" y="1471.5" ></text>
</g>
<g >
<title>asm_common_interrupt (683,358,803 samples, 0.03%)</title><rect x="1181.1" y="1493" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1184.09" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="965" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="975.5" ></text>
</g>
<g >
<title>sqlite3_column_double (442,386,589 samples, 0.02%)</title><rect x="127.6" y="1413" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="130.61" y="1423.5" ></text>
</g>
<g >
<title>enqueue_entity (1,463,844,883 samples, 0.05%)</title><rect x="179.8" y="1317" width="0.7" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="182.82" y="1327.5" ></text>
</g>
<g >
<title>__memcpy_fwd (43,480,487,258 samples, 1.63%)</title><rect x="15.3" y="1589" width="19.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="18.35" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,690,332,037 samples, 0.06%)</title><rect x="162.1" y="677" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.12" y="687.5" ></text>
</g>
<g >
<title>schedule (628,249,626 samples, 0.02%)</title><rect x="176.9" y="1557" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.87" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="661" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,564,124,943 samples, 0.13%)</title><rect x="162.0" y="1125" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.05" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1237" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1247.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (4,176,624,285 samples, 0.16%)</title><rect x="1034.8" y="1381" width="1.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1037.82" y="1391.5" ></text>
</g>
<g >
<title>NaClSysMmapDecoder (773,422,437 samples, 0.03%)</title><rect x="329.5" y="1573" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="332.46" y="1583.5" ></text>
</g>
<g >
<title>resolveExprStep (1,024,183,585 samples, 0.04%)</title><rect x="50.0" y="1349" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="53.03" y="1359.5" ></text>
</g>
<g >
<title>ovl_iterate (1,326,526,664 samples, 0.05%)</title><rect x="58.6" y="1509" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="61.59" y="1519.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (246,710,990 samples, 0.01%)</title><rect x="214.4" y="1589" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="217.39" y="1599.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (289,532,581 samples, 0.01%)</title><rect x="159.4" y="1413" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="162.40" y="1423.5" ></text>
</g>
<g >
<title>sqlite3ResolveExprListNames (246,782,078 samples, 0.01%)</title><rect x="48.4" y="1365" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="51.44" y="1375.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (617,821,607 samples, 0.02%)</title><rect x="167.8" y="1477" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="170.77" y="1487.5" ></text>
</g>
<g >
<title>execve (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1461" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="163.40" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="261" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="271.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (246,761,255 samples, 0.01%)</title><rect x="1158.0" y="1589" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1160.97" y="1599.5" ></text>
</g>
<g >
<title>getname_flags (246,593,020 samples, 0.01%)</title><rect x="56.1" y="1493" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="59.10" y="1503.5" ></text>
</g>
<g >
<title>msvc::split_string&lt;char, std::back_insert_iterator&lt;std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (4,682,413,003 samples, 0.18%)</title><rect x="150.0" y="1429" width="2.0" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="152.96" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1333" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="565" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="575.5" ></text>
</g>
<g >
<title>code_store::store_t::get_files (1,231,512,420 samples, 0.05%)</title><rect x="137.8" y="1429" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="140.83" y="1439.5" ></text>
</g>
<g >
<title>run_ksoftirqd (327,337,263 samples, 0.01%)</title><rect x="1187.1" y="1557" width="0.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1190.08" y="1567.5" ></text>
</g>
<g >
<title>do_sched_yield (3,444,919,158 samples, 0.13%)</title><rect x="1044.7" y="1381" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1047.72" y="1391.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (749,084,569 samples, 0.03%)</title><rect x="1064.2" y="1301" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1067.24" y="1311.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1,517,423,302 samples, 0.06%)</title><rect x="92.1" y="1557" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="95.08" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,566,785,069 samples, 0.06%)</title><rect x="92.1" y="1573" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="95.08" y="1583.5" ></text>
</g>
<g >
<title>psi_task_switch (1,907,757,686 samples, 0.07%)</title><rect x="199.1" y="1509" width="0.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="202.08" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_select (371,692,044 samples, 0.01%)</title><rect x="1189.2" y="1525" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1192.16" y="1535.5" ></text>
</g>
<g >
<title>futex_wake_mark (249,945,188 samples, 0.01%)</title><rect x="1050.5" y="1365" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1053.52" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="277" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (7,086,713,835 samples, 0.27%)</title><rect x="178.8" y="1445" width="3.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="181.81" y="1455.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (246,563,743 samples, 0.01%)</title><rect x="1072.9" y="1557" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1075.85" y="1567.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (5,134,132,310 samples, 0.19%)</title><rect x="302.5" y="1557" width="2.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="305.53" y="1567.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (340,549,250 samples, 0.01%)</title><rect x="59.0" y="1413" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="61.98" y="1423.5" ></text>
</g>
<g >
<title>rustposix::interface::errnos::Errno::from_discriminant (391,699,264 samples, 0.01%)</title><rect x="1039.4" y="1461" width="0.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1042.38" y="1471.5" ></text>
</g>
<g >
<title>dispatcher (71,954,467,117 samples, 2.70%)</title><rect x="1039.8" y="1525" width="31.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1042.75" y="1535.5" >di..</text>
</g>
<g >
<title>sqlite3VdbeSerialGet (444,078,413 samples, 0.02%)</title><rect x="137.5" y="1365" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="140.52" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (20,589,792,725 samples, 0.77%)</title><rect x="1053.3" y="1429" width="9.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1056.27" y="1439.5" ></text>
</g>
<g >
<title>ttwu_do_activate (3,309,459,300 samples, 0.12%)</title><rect x="195.4" y="1493" width="1.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="198.42" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="213" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (876,760,041 samples, 0.03%)</title><rect x="162.2" y="437" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.15" y="447.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2,015,536,493 samples, 0.08%)</title><rect x="922.6" y="1381" width="0.9" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="925.59" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1285" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1295.5" ></text>
</g>
<g >
<title>msvc::recursive_directory_iterator_utf8::enumerate_files_non_recursive (246,795,134 samples, 0.01%)</title><rect x="147.0" y="1445" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="150.02" y="1455.5" ></text>
</g>
<g >
<title>xa_load (244,521,313 samples, 0.01%)</title><rect x="1058.2" y="1253" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1061.17" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (392,231,088,833 samples, 14.73%)</title><rect x="391.0" y="1477" width="173.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="394.01" y="1487.5" >entry_SYSCALL_64_after..</text>
</g>
<g >
<title>code_store::files_set_t::get_data (393,189,603 samples, 0.01%)</title><rect x="36.6" y="1589" width="0.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="39.56" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1413" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1423.5" ></text>
</g>
<g >
<title>cp_new_stat (246,788,542 samples, 0.01%)</title><rect x="56.0" y="1509" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="58.99" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1157" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1167.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (470,362,079 samples, 0.02%)</title><rect x="200.4" y="1541" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="203.41" y="1551.5" ></text>
</g>
<g >
<title>sqlite3SelectPrep (493,461,318 samples, 0.02%)</title><rect x="48.4" y="1413" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="51.42" y="1423.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (4,984,503,973 samples, 0.19%)</title><rect x="299.2" y="1573" width="2.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="302.24" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,614,632,570 samples, 0.06%)</title><rect x="165.4" y="117" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="127.5" ></text>
</g>
<g >
<title>_raw_spin_lock (19,006,111,197 samples, 0.71%)</title><rect x="404.9" y="1413" width="8.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="407.89" y="1423.5" ></text>
</g>
<g >
<title>filename_lookup (228,335,363 samples, 0.01%)</title><rect x="164.1" y="1429" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="167.06" y="1439.5" ></text>
</g>
<g >
<title>browse_engine::parse_file (10,757,537,806 samples, 0.40%)</title><rect x="48.2" y="1589" width="4.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="51.16" y="1599.5" ></text>
</g>
<g >
<title>vfs_statx (1,873,773,262 samples, 0.07%)</title><rect x="110.4" y="1509" width="0.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="113.41" y="1519.5" ></text>
</g>
<g >
<title>ovl_getattr (542,253,921 samples, 0.02%)</title><rect x="111.0" y="1477" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="114.00" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1605" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="170.51" y="1615.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (4,140,376,309 samples, 0.16%)</title><rect x="974.5" y="1493" width="1.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="977.47" y="1503.5" ></text>
</g>
<g >
<title>process_vm_rw (493,481,263 samples, 0.02%)</title><rect x="1145.9" y="1509" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1148.87" y="1519.5" ></text>
</g>
<g >
<title>bprm_execve (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1541" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="170.51" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,929,278,859 samples, 0.15%)</title><rect x="162.0" y="1221" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.04" y="1231.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (345,246,294 samples, 0.01%)</title><rect x="137.8" y="1397" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.85" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,215,485,922 samples, 0.12%)</title><rect x="164.7" y="1589" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.70" y="1599.5" ></text>
</g>
<g >
<title>browse_engine::parse_file (3,345,369,366 samples, 0.13%)</title><rect x="53.2" y="1557" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="56.19" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,660,383,057 samples, 0.06%)</title><rect x="159.4" y="1509" width="0.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="162.35" y="1519.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (787,975,612 samples, 0.03%)</title><rect x="1002.1" y="1541" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1005.12" y="1551.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (2,897,213,241 samples, 0.11%)</title><rect x="537.1" y="1397" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="540.07" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="901" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="911.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (344,891,148 samples, 0.01%)</title><rect x="1072.7" y="1477" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1075.65" y="1487.5" ></text>
</g>
<g >
<title>exec_binprm (471,781,894 samples, 0.02%)</title><rect x="167.3" y="1509" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="170.30" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1093" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="709" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1509" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="1519.5" ></text>
</g>
<g >
<title>__schedule (266,077,213,806 samples, 10.00%)</title><rect x="418.3" y="1397" width="117.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="421.26" y="1407.5" >__schedule</text>
</g>
<g >
<title>core::time::Duration::new (2,941,215,211 samples, 0.11%)</title><rect x="923.5" y="1381" width="1.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="926.48" y="1391.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (422,338,656 samples, 0.02%)</title><rect x="175.5" y="1557" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="178.49" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,815,112,081 samples, 0.14%)</title><rect x="1044.7" y="1413" width="1.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1047.69" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (229,790,441 samples, 0.01%)</title><rect x="162.7" y="565" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="165.68" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="389" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="399.5" ></text>
</g>
<g >
<title>switch_fpu_return (1,038,636,116 samples, 0.04%)</title><rect x="1070.6" y="1349" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1073.64" y="1359.5" ></text>
</g>
<g >
<title>[[vdso]] (38,317,956,205 samples, 1.44%)</title><rect x="984.3" y="1413" width="17.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="987.34" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,324,220,605 samples, 0.12%)</title><rect x="162.1" y="1045" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.07" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1477" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,220,199,842 samples, 0.05%)</title><rect x="164.8" y="101" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="167.80" y="111.5" ></text>
</g>
<g >
<title>security_inode_free (383,355,545 samples, 0.01%)</title><rect x="1061.3" y="1205" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1064.34" y="1215.5" ></text>
</g>
<g >
<title>cfree (317,926,318 samples, 0.01%)</title><rect x="164.8" y="85" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="167.80" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1509" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1519.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (457,797,893 samples, 0.02%)</title><rect x="1051.0" y="1333" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1053.96" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="725" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (4,475,379,643 samples, 0.17%)</title><rect x="56.0" y="1541" width="2.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="58.99" y="1551.5" ></text>
</g>
<g >
<title>balance_fair (457,060,963 samples, 0.02%)</title><rect x="176.9" y="1493" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="179.92" y="1503.5" ></text>
</g>
<g >
<title>common_interrupt (683,358,803 samples, 0.03%)</title><rect x="1181.1" y="1477" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1184.09" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="661" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="671.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (295,353,953 samples, 0.01%)</title><rect x="57.4" y="1461" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="60.36" y="1471.5" ></text>
</g>
<g >
<title>execute_command_internal (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1509" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="163.40" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,476,896,922 samples, 0.06%)</title><rect x="162.1" y="613" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.13" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="965" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1333" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1253" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1461" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1471.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (697,863,252 samples, 0.03%)</title><rect x="177.9" y="1509" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="180.93" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_free (251,159,451 samples, 0.01%)</title><rect x="182.4" y="1333" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="185.43" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="821" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="831.5" ></text>
</g>
<g >
<title>clockevents_program_event (367,318,627 samples, 0.01%)</title><rect x="1064.7" y="1269" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1067.72" y="1279.5" ></text>
</g>
<g >
<title>pcache1Fetch (493,549,170 samples, 0.02%)</title><rect x="131.3" y="1317" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="134.33" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="997" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (1,923,115,019 samples, 0.07%)</title><rect x="110.4" y="1557" width="0.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="113.39" y="1567.5" ></text>
</g>
<g >
<title>sqlite3RunParser (1,819,235,088 samples, 0.07%)</title><rect x="48.2" y="1445" width="0.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="51.16" y="1455.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (273,051,216 samples, 0.01%)</title><rect x="728.7" y="1445" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="731.68" y="1455.5" ></text>
</g>
<g >
<title>ret_from_fork (295,572,666 samples, 0.01%)</title><rect x="155.9" y="1605" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="158.91" y="1615.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,525,829,739 samples, 0.06%)</title><rect x="1181.7" y="1493" width="0.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1184.71" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (858,307,729 samples, 0.03%)</title><rect x="162.2" y="389" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.16" y="399.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (551,163,555 samples, 0.02%)</title><rect x="159.6" y="1493" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="162.65" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1541" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1551.5" ></text>
</g>
<g >
<title>filename_lookup (3,750,528,067 samples, 0.14%)</title><rect x="59.6" y="1493" width="1.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="62.57" y="1503.5" ></text>
</g>
<g >
<title>pick_next_task_fair (950,865,248 samples, 0.04%)</title><rect x="1048.3" y="1285" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1051.26" y="1295.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (71,954,467,117 samples, 2.70%)</title><rect x="1039.8" y="1509" width="31.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1042.75" y="1519.5" >ru..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1237" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1247.5" ></text>
</g>
<g >
<title>inode_permission (884,139,280 samples, 0.03%)</title><rect x="56.5" y="1429" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="59.47" y="1439.5" ></text>
</g>
<g >
<title>sock_alloc_inode (2,393,034,437 samples, 0.09%)</title><rect x="1055.0" y="1317" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1057.95" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1397" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1004.48" y="1407.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (273,051,216 samples, 0.01%)</title><rect x="728.7" y="1413" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="731.68" y="1423.5" ></text>
</g>
<g >
<title>[[vdso]] (12,782,667,580 samples, 0.48%)</title><rect x="307.2" y="1493" width="5.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="310.21" y="1503.5" ></text>
</g>
<g >
<title>pick_next_entity (12,649,540,750 samples, 0.48%)</title><rect x="465.2" y="1349" width="5.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="468.18" y="1359.5" ></text>
</g>
<g >
<title>do_iter_read (2,296,321,878 samples, 0.09%)</title><rect x="119.0" y="1493" width="1.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="122.00" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="901" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="911.5" ></text>
</g>
<g >
<title>wake_up_process (289,532,581 samples, 0.01%)</title><rect x="159.4" y="1397" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="162.40" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1461" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1471.5" ></text>
</g>
<g >
<title>write (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1413" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1004.48" y="1423.5" ></text>
</g>
<g >
<title>complete_walk (246,571,135 samples, 0.01%)</title><rect x="59.6" y="1461" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="62.63" y="1471.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_duration_since (828,599,197 samples, 0.03%)</title><rect x="218.0" y="1541" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="221.02" y="1551.5" ></text>
</g>
<g >
<title>prepare_task_switch (426,482,228 samples, 0.02%)</title><rect x="198.8" y="1509" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="201.85" y="1519.5" ></text>
</g>
<g >
<title>strchr (493,410,249 samples, 0.02%)</title><rect x="42.8" y="1589" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="45.81" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="421" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="431.5" ></text>
</g>
<g >
<title>[[vdso]] (2,777,544,421 samples, 0.10%)</title><rect x="975.1" y="1445" width="1.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="978.07" y="1455.5" ></text>
</g>
<g >
<title>d_instantiate (480,876,497 samples, 0.02%)</title><rect x="1058.4" y="1333" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1061.44" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1429" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1413" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1423.5" ></text>
</g>
<g >
<title>sqlite3WhereBegin (1,368,309,261 samples, 0.05%)</title><rect x="52.2" y="1381" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="55.19" y="1391.5" ></text>
</g>
<g >
<title>walkExpr (394,598,416 samples, 0.01%)</title><rect x="51.7" y="1317" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="54.71" y="1327.5" ></text>
</g>
<g >
<title>__schedule (619,878,417 samples, 0.02%)</title><rect x="157.4" y="1525" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="160.42" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1237" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (377,072,090,642 samples, 14.16%)</title><rect x="395.8" y="1461" width="167.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="398.84" y="1471.5" >do_syscall_64</text>
</g>
<g >
<title>hrtimer_interrupt (387,620,930 samples, 0.01%)</title><rect x="159.4" y="1445" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="162.39" y="1455.5" ></text>
</g>
<g >
<title>start_secondary (2,504,972,492 samples, 0.09%)</title><rect x="159.3" y="1589" width="1.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="162.29" y="1599.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (1,045,926,953 samples, 0.04%)</title><rect x="544.6" y="1429" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="547.59" y="1439.5" ></text>
</g>
<g >
<title>swapper (8,687,804,944 samples, 0.33%)</title><rect x="1178.9" y="1621" width="3.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1181.93" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,474,145,591 samples, 0.09%)</title><rect x="162.1" y="901" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.08" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (264,718,200 samples, 0.01%)</title><rect x="164.4" y="213" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="645" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,614,632,570 samples, 0.06%)</title><rect x="165.4" y="133" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="143.5" ></text>
</g>
<g >
<title>browse_engine::query_include_path_suggestions_impl (2,410,367,410 samples, 0.09%)</title><rect x="49.0" y="1541" width="1.0" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="51.97" y="1551.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (295,855,411 samples, 0.01%)</title><rect x="125.7" y="1429" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="128.69" y="1439.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get_mut (592,218,637 samples, 0.02%)</title><rect x="1073.7" y="1493" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1076.73" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="885" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="895.5" ></text>
</g>
<g >
<title>menu_select (2,921,079,813 samples, 0.11%)</title><rect x="193.8" y="1509" width="1.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="196.79" y="1519.5" ></text>
</g>
<g >
<title>[perf-2965834.map] (79,761,358,001 samples, 3.00%)</title><rect x="218.6" y="1605" width="35.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="221.63" y="1615.5" >[p..</text>
</g>
<g >
<title>__schedule (580,268,929 samples, 0.02%)</title><rect x="166.7" y="1397" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="169.68" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (1,375,880,973 samples, 0.05%)</title><rect x="58.6" y="1541" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="61.59" y="1551.5" ></text>
</g>
<g >
<title>reweight_entity (225,769,017 samples, 0.01%)</title><rect x="1066.2" y="1221" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1069.22" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1205" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="1215.5" ></text>
</g>
<g >
<title>send_to_group (317,151,458 samples, 0.01%)</title><rect x="168.2" y="1349" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="171.22" y="1359.5" ></text>
</g>
<g >
<title>sqlite3GenerateColumnNames (437,521,333 samples, 0.02%)</title><rect x="48.2" y="1413" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="51.20" y="1423.5" ></text>
</g>
<g >
<title>__do_softirq (632,072,819 samples, 0.02%)</title><rect x="1181.1" y="1429" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1184.11" y="1439.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (3,643,315,650 samples, 0.14%)</title><rect x="494.3" y="1317" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="497.26" y="1327.5" ></text>
</g>
<g >
<title>enqueue_task (357,817,225 samples, 0.01%)</title><rect x="1187.7" y="1349" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1190.66" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="165" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="175.5" ></text>
</g>
<g >
<title>rcu_core (2,640,832,329 samples, 0.10%)</title><rect x="175.7" y="1509" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="178.69" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="933" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="943.5" ></text>
</g>
<g >
<title>security_file_alloc (1,098,356,651 samples, 0.04%)</title><rect x="1057.1" y="1285" width="0.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1060.08" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="501" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="511.5" ></text>
</g>
<g >
<title>dispatcher (2,661,161,896 samples, 0.10%)</title><rect x="1073.1" y="1525" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1076.14" y="1535.5" ></text>
</g>
<g >
<title>vfs_write (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1333" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1004.48" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;CStoreFile, std::allocator&lt;CStoreFile&gt; &gt;::_M_realloc_insert&lt;CStoreFile&gt; (246,208,110 samples, 0.01%)</title><rect x="139.3" y="1445" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="142.29" y="1455.5" ></text>
</g>
<g >
<title>__schedule (4,067,822,837 samples, 0.15%)</title><rect x="1047.3" y="1317" width="1.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1050.28" y="1327.5" ></text>
</g>
<g >
<title>__poll (350,248,526 samples, 0.01%)</title><rect x="166.3" y="1525" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="169.28" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1525" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="164.46" y="1535.5" ></text>
</g>
<g >
<title>do_mas_munmap (1,468,065,030 samples, 0.06%)</title><rect x="92.1" y="1525" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="95.08" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1173" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1183.5" ></text>
</g>
<g >
<title>whereLoopAddBtree (246,343,263 samples, 0.01%)</title><rect x="50.6" y="1413" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="53.60" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1493" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1503.5" ></text>
</g>
<g >
<title>tar (16,265,508,230 samples, 0.61%)</title><rect x="1182.8" y="1621" width="7.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1185.78" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,311,513,332 samples, 0.05%)</title><rect x="164.8" y="149" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="159.5" ></text>
</g>
<g >
<title>exec_mmap (471,781,894 samples, 0.02%)</title><rect x="167.3" y="1445" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="170.30" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (571,547,413 samples, 0.02%)</title><rect x="161.5" y="165" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="164.47" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,936,200,272 samples, 0.15%)</title><rect x="162.0" y="1253" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.04" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (290,258,120 samples, 0.01%)</title><rect x="166.3" y="1509" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="169.30" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1109" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1119.5" ></text>
</g>
<g >
<title>exit_mmap (471,781,894 samples, 0.02%)</title><rect x="167.3" y="1397" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="170.30" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1429" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1439.5" ></text>
</g>
<g >
<title>apparmor_bprm_creds_for_exec (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1333" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="163.40" y="1343.5" ></text>
</g>
<g >
<title>poll_idle (419,234,300 samples, 0.02%)</title><rect x="159.9" y="1493" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="162.89" y="1503.5" ></text>
</g>
<g >
<title>unmap_single_vma (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1365" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="170.51" y="1375.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (475,731,535 samples, 0.02%)</title><rect x="1145.6" y="1477" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1148.60" y="1487.5" ></text>
</g>
<g >
<title>glob_matcher::matches_internal (591,875,888 samples, 0.02%)</title><rect x="149.5" y="1445" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="152.45" y="1455.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (491,819,909 samples, 0.02%)</title><rect x="1149.1" y="1589" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1152.06" y="1599.5" ></text>
</g>
<g >
<title>ret_from_fork (912,859,144 samples, 0.03%)</title><rect x="1180.6" y="1605" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1183.65" y="1615.5" ></text>
</g>
<g >
<title>do_fcntl (431,997,290 samples, 0.02%)</title><rect x="1052.4" y="1381" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1055.42" y="1391.5" ></text>
</g>
<g >
<title>[[vdso]] (3,837,571,854 samples, 0.14%)</title><rect x="1149.5" y="1589" width="1.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1152.50" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="661" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="671.5" ></text>
</g>
<g >
<title>NaClSysSemWaitDecoder (3,401,326,931 samples, 0.13%)</title><rect x="1072.8" y="1573" width="1.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1075.81" y="1583.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1,565,784,826 samples, 0.06%)</title><rect x="1045.2" y="1317" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1048.24" y="1327.5" ></text>
</g>
<g >
<title>security_inode_alloc (678,347,541 samples, 0.03%)</title><rect x="1054.6" y="1301" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1057.63" y="1311.5" ></text>
</g>
<g >
<title>sqlite3VdbeMemSetStr (291,097,313 samples, 0.01%)</title><rect x="48.2" y="1397" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="51.25" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="597" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="607.5" ></text>
</g>
<g >
<title>sel_ldr (2,205,547,730,459 samples, 82.85%)</title><rect x="201.1" y="1621" width="977.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="204.07" y="1631.5" >sel_ldr</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1349" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="1359.5" ></text>
</g>
<g >
<title>futex_wait_queue (649,683,686 samples, 0.02%)</title><rect x="166.7" y="1429" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="169.66" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,573,610,294 samples, 0.17%)</title><rect x="162.0" y="1445" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.98" y="1455.5" ></text>
</g>
<g >
<title>[perf-2033377.map] (637,585,316 samples, 0.02%)</title><rect x="161.2" y="1605" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="164.16" y="1615.5" ></text>
</g>
<g >
<title>clock_nanosleep (266,193,934 samples, 0.01%)</title><rect x="1168.3" y="1429" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1171.35" y="1439.5" ></text>
</g>
<g >
<title>clock_gettime (246,844,508 samples, 0.01%)</title><rect x="315.6" y="1509" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="318.57" y="1519.5" ></text>
</g>
<g >
<title>cfree (571,547,413 samples, 0.02%)</title><rect x="161.5" y="181" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="164.47" y="191.5" ></text>
</g>
<g >
<title>vma_mas_store (295,931,697 samples, 0.01%)</title><rect x="92.2" y="1461" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="95.21" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1125" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="1135.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (394,850,124 samples, 0.01%)</title><rect x="92.8" y="1605" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="95.80" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (394,706,621 samples, 0.01%)</title><rect x="153.2" y="1429" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="156.24" y="1439.5" ></text>
</g>
<g >
<title>load_elf_binary (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1477" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="170.51" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="197" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,211,061,201 samples, 0.08%)</title><rect x="1050.2" y="1445" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1053.24" y="1455.5" ></text>
</g>
<g >
<title>irq_exit_rcu (632,072,819 samples, 0.02%)</title><rect x="1181.1" y="1461" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1184.11" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1173" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1093" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1381" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1391.5" ></text>
</g>
<g >
<title>pick_next_task_fair (238,511,764 samples, 0.01%)</title><rect x="1189.7" y="1493" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1192.68" y="1503.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (664,966,381 samples, 0.02%)</title><rect x="168.4" y="1301" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="171.38" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1573" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="1583.5" ></text>
</g>
<g >
<title>lind_poll (1,505,753,755,154 samples, 56.56%)</title><rect x="334.0" y="1541" width="667.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="337.04" y="1551.5" >lind_poll</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (541,812,742 samples, 0.02%)</title><rect x="1048.4" y="1221" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1051.36" y="1231.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (6,156,059,072 samples, 0.23%)</title><rect x="1059.7" y="1397" width="2.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1062.66" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (591,760,762 samples, 0.02%)</title><rect x="163.2" y="949" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="166.18" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,224,056,251 samples, 0.05%)</title><rect x="162.1" y="549" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.14" y="559.5" ></text>
</g>
<g >
<title>InotifyBackend::start (359,171,908 samples, 0.01%)</title><rect x="166.3" y="1541" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="169.27" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (261,206,521 samples, 0.01%)</title><rect x="55.2" y="1509" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="58.22" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="933" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator= (246,651,328 samples, 0.01%)</title><rect x="147.6" y="1461" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="150.61" y="1471.5" ></text>
</g>
<g >
<title>code_store::store_request_t::store_request_t (541,461,880 samples, 0.02%)</title><rect x="149.0" y="1461" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="151.97" y="1471.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::sem_post_syscall (1,626,126,312 samples, 0.06%)</title><rect x="1072.1" y="1509" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1075.09" y="1519.5" ></text>
</g>
<g >
<title>tick_sched_timer (273,051,216 samples, 0.01%)</title><rect x="728.7" y="1397" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="731.68" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,074,990,342 samples, 0.08%)</title><rect x="162.1" y="821" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.10" y="831.5" ></text>
</g>
<g >
<title>memcmp (2,828,861,624 samples, 0.11%)</title><rect x="116.2" y="1605" width="1.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="119.20" y="1615.5" ></text>
</g>
<g >
<title>begin_new_exec (471,781,894 samples, 0.02%)</title><rect x="167.3" y="1461" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="170.30" y="1471.5" ></text>
</g>
<g >
<title>futex_wait (871,864,628 samples, 0.03%)</title><rect x="166.6" y="1445" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="169.62" y="1455.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (427,181,984 samples, 0.02%)</title><rect x="1048.4" y="1205" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1051.41" y="1215.5" ></text>
</g>
<g >
<title>code_store::store_t::get_files (2,410,367,410 samples, 0.09%)</title><rect x="49.0" y="1493" width="1.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="51.97" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="949" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="959.5" ></text>
</g>
<g >
<title>vfs_fstatat (4,228,591,101 samples, 0.16%)</title><rect x="56.1" y="1509" width="1.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="59.10" y="1519.5" ></text>
</g>
<g >
<title>sqlite3_prepare_v3 (3,345,369,366 samples, 0.13%)</title><rect x="53.2" y="1477" width="1.5" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="56.19" y="1487.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (43,912,265,078 samples, 1.65%)</title><rect x="1020.2" y="1509" width="19.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1023.16" y="1519.5" ></text>
</g>
<g >
<title>code_store::files_set_t::get_data (3,266,678,529 samples, 0.12%)</title><rect x="126.7" y="1429" width="1.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="129.68" y="1439.5" ></text>
</g>
<g >
<title>CExtStore::GetCodeItems (3,345,369,366 samples, 0.13%)</title><rect x="53.2" y="1525" width="1.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="56.19" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (634,265,447 samples, 0.02%)</title><rect x="162.2" y="373" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.16" y="383.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (985,809,805 samples, 0.04%)</title><rect x="110.4" y="1461" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="113.41" y="1471.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::RustSemaphore::lock (737,054,253 samples, 0.03%)</title><rect x="1074.0" y="1493" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1076.99" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1093" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1103.5" ></text>
</g>
<g >
<title>do_idle (3,702,473,881 samples, 0.14%)</title><rect x="1181.1" y="1557" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1184.05" y="1567.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (74,544,394,620 samples, 2.80%)</title><rect x="120.8" y="1557" width="33.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="123.79" y="1567.5" >st..</text>
</g>
<g >
<title>btreeParseCellPtr (493,204,813 samples, 0.02%)</title><rect x="124.3" y="1365" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="127.30" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="837" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="245" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="255.5" ></text>
</g>
<g >
<title>generic_perform_write (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1221" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1004.48" y="1231.5" ></text>
</g>
<g >
<title>rcu_do_batch (2,492,735,606 samples, 0.09%)</title><rect x="175.8" y="1493" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="178.75" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (329,242,254 samples, 0.01%)</title><rect x="162.2" y="293" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.17" y="303.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2,182,849,460 samples, 0.08%)</title><rect x="507.6" y="1381" width="1.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="510.64" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="645" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="655.5" ></text>
</g>
<g >
<title>generic_write_end (257,387,642 samples, 0.01%)</title><rect x="168.6" y="1253" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="171.56" y="1263.5" ></text>
</g>
<g >
<title>run_ksoftirqd (2,690,331,791 samples, 0.10%)</title><rect x="175.7" y="1557" width="1.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="178.68" y="1567.5" ></text>
</g>
<g >
<title>filemap_get_pages (590,514,527 samples, 0.02%)</title><rect x="119.8" y="1413" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="122.76" y="1423.5" ></text>
</g>
<g >
<title>rdlock (443,001,695 samples, 0.02%)</title><rect x="118.6" y="1605" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="121.57" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1285" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="1295.5" ></text>
</g>
<g >
<title>NaClIsValidClockId (444,300,701 samples, 0.02%)</title><rect x="1146.2" y="1589" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1149.24" y="1599.5" ></text>
</g>
<g >
<title>record__pushfn (1,113,591,711 samples, 0.04%)</title><rect x="168.2" y="1525" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="171.20" y="1535.5" ></text>
</g>
<g >
<title>select_idle_sibling (471,952,006 samples, 0.02%)</title><rect x="179.4" y="1349" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="182.40" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="389" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,666,857,865 samples, 0.18%)</title><rect x="161.9" y="1493" width="2.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.93" y="1503.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::check_select_read (345,458,644 samples, 0.01%)</title><rect x="1173.3" y="1605" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1176.28" y="1615.5" ></text>
</g>
<g >
<title>NaClSysPoll (1,512,798,296,866 samples, 56.83%)</title><rect x="330.9" y="1557" width="670.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="333.91" y="1567.5" >NaClSysPoll</text>
</g>
<g >
<title>syscall_return_via_sysret (2,224,583,804 samples, 0.08%)</title><rect x="1177.7" y="1605" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1180.71" y="1615.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (961,266,405 samples, 0.04%)</title><rect x="1166.8" y="1573" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1169.77" y="1583.5" ></text>
</g>
<g >
<title>try_to_wake_up (5,148,433,975 samples, 0.19%)</title><rect x="179.0" y="1381" width="2.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="182.04" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1381" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="1391.5" ></text>
</g>
<g >
<title>perf-exec (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1621" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="170.51" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="901" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1461" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="1471.5" ></text>
</g>
<g >
<title>perf_poll (366,215,544 samples, 0.01%)</title><rect x="167.9" y="1461" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="170.86" y="1471.5" ></text>
</g>
<g >
<title>getPageNormal (493,549,170 samples, 0.02%)</title><rect x="131.3" y="1333" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="134.33" y="1343.5" ></text>
</g>
<g >
<title>Glob::isIgnored (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1557" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="167.37" y="1567.5" ></text>
</g>
<g >
<title>schedule_idle (632,839,459 samples, 0.02%)</title><rect x="157.4" y="1541" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="160.42" y="1551.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1557" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="170.51" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1317" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1327.5" ></text>
</g>
<g >
<title>__lock (7,980,433,257 samples, 0.30%)</title><rect x="72.3" y="1605" width="3.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="75.35" y="1615.5" ></text>
</g>
<g >
<title>schedule (10,580,521,332 samples, 0.40%)</title><rect x="1064.9" y="1317" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1067.89" y="1327.5" ></text>
</g>
<g >
<title>selectExpander (587,936,493 samples, 0.02%)</title><rect x="51.9" y="1349" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="54.89" y="1359.5" ></text>
</g>
<g >
<title>ext4_readdir (296,021,538 samples, 0.01%)</title><rect x="58.6" y="1477" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="61.63" y="1487.5" ></text>
</g>
<g >
<title>alloc_empty_file (3,146,268,741 samples, 0.12%)</title><rect x="1056.2" y="1317" width="1.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1059.21" y="1327.5" ></text>
</g>
<g >
<title>sqlite3VdbeRecordCompareWithSkip (493,258,630 samples, 0.02%)</title><rect x="125.2" y="1397" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="128.21" y="1407.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (31,956,181,116 samples, 1.20%)</title><rect x="1004.0" y="1525" width="14.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1006.95" y="1535.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (786,757,883 samples, 0.03%)</title><rect x="982.3" y="1365" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="985.30" y="1375.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (415,133,437 samples, 0.02%)</title><rect x="1056.7" y="1269" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1059.75" y="1279.5" ></text>
</g>
<g >
<title>exc_page_fault (295,841,315 samples, 0.01%)</title><rect x="104.3" y="1573" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="107.35" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1109" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1141" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1151.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (641,570,318 samples, 0.02%)</title><rect x="256.2" y="1589" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="259.18" y="1599.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1573" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="164.46" y="1583.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (708,727,120 samples, 0.03%)</title><rect x="1181.4" y="1477" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1184.39" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,625,247,479 samples, 0.17%)</title><rect x="162.0" y="1477" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.95" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (4,970,873,248 samples, 0.19%)</title><rect x="161.8" y="1509" width="2.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="164.82" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1365" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (493,481,263 samples, 0.02%)</title><rect x="1145.9" y="1541" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1148.87" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,096,234,798 samples, 0.12%)</title><rect x="389.6" y="1477" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="392.64" y="1487.5" ></text>
</g>
<g >
<title>ovl_permission (493,255,523 samples, 0.02%)</title><rect x="56.6" y="1413" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="59.58" y="1423.5" ></text>
</g>
<g >
<title>msvc::path_utf8::split_path (1,689,623,092 samples, 0.06%)</title><rect x="38.4" y="1589" width="0.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="41.36" y="1599.5" ></text>
</g>
<g >
<title>__skb_recv_udp (246,795,032 samples, 0.01%)</title><rect x="1031.7" y="1349" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1034.73" y="1359.5" ></text>
</g>
<g >
<title>lind_pwrite (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1541" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1004.48" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,716,422,465 samples, 0.14%)</title><rect x="162.0" y="1173" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.04" y="1183.5" ></text>
</g>
<g >
<title>recvfrom (346,569,853 samples, 0.01%)</title><rect x="209.1" y="1589" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="212.15" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (475,731,535 samples, 0.02%)</title><rect x="1145.6" y="1541" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1148.60" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="997" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1365" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1375.5" ></text>
</g>
<g >
<title>update_cfs_group (612,592,683 samples, 0.02%)</title><rect x="1066.1" y="1237" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1069.05" y="1247.5" ></text>
</g>
<g >
<title>load_balance (821,766,839 samples, 0.03%)</title><rect x="1067.9" y="1237" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1070.86" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,303,478,064 samples, 0.16%)</title><rect x="162.0" y="1397" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.02" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (246,607,094 samples, 0.01%)</title><rect x="147.3" y="1445" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="150.28" y="1455.5" ></text>
</g>
<g >
<title>operator new (542,895,164 samples, 0.02%)</title><rect x="39.2" y="1589" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="42.22" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,281,882,574 samples, 0.16%)</title><rect x="162.0" y="1365" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.03" y="1375.5" ></text>
</g>
<g >
<title>msvc::recursive_directory_iterator_utf8::recursive_directory_iterator_utf8 (246,795,134 samples, 0.01%)</title><rect x="147.0" y="1461" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="150.02" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_clock_nanosleep (13,947,226,004 samples, 0.52%)</title><rect x="1063.6" y="1381" width="6.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1066.63" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="837" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="847.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (9,719,278,166 samples, 0.37%)</title><rect x="178.8" y="1477" width="4.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="181.76" y="1487.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (245,585,298 samples, 0.01%)</title><rect x="149.1" y="1381" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="152.06" y="1391.5" ></text>
</g>
<g >
<title>update_rq_clock (232,999,845 samples, 0.01%)</title><rect x="181.2" y="1365" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="184.22" y="1375.5" ></text>
</g>
<g >
<title>update_load_avg (752,471,954 samples, 0.03%)</title><rect x="198.4" y="1461" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="201.45" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,579,567,906 samples, 0.17%)</title><rect x="162.0" y="1461" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.97" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,489,070,069 samples, 0.09%)</title><rect x="162.1" y="933" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.08" y="943.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (6,040,980,571 samples, 0.23%)</title><rect x="1187.3" y="1605" width="2.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1190.31" y="1615.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (17,408,382,955 samples, 0.65%)</title><rect x="1042.1" y="1477" width="7.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1045.06" y="1487.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (476,398,220 samples, 0.02%)</title><rect x="193.2" y="1477" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="196.23" y="1487.5" ></text>
</g>
<g >
<title>CStoreRequest::CStoreRequest (590,819,070 samples, 0.02%)</title><rect x="149.0" y="1477" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="151.95" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,523,052,921 samples, 0.09%)</title><rect x="1051.7" y="1413" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1054.74" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1013" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="565" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="575.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1525" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="170.51" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="805" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1029" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1039.5" ></text>
</g>
<g >
<title>NaClLog (246,841,396 samples, 0.01%)</title><rect x="204.4" y="1589" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="207.38" y="1599.5" ></text>
</g>
<g >
<title>whereLoopAddBtree (441,626,171 samples, 0.02%)</title><rect x="52.6" y="1365" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="55.58" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="741" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="751.5" ></text>
</g>
<g >
<title>code_store::store_request_t::release (344,778,554 samples, 0.01%)</title><rect x="138.6" y="1429" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="141.59" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="373" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::poll_syscall (8,357,943,472 samples, 0.31%)</title><rect x="210.6" y="1589" width="3.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="213.58" y="1599.5" ></text>
</g>
<g >
<title>__do_softirq (327,337,263 samples, 0.01%)</title><rect x="1187.1" y="1541" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1190.08" y="1551.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1429" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1004.48" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1013" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1023.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_duration_since (13,372,648,159 samples, 0.50%)</title><rect x="977.7" y="1445" width="5.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="980.68" y="1455.5" ></text>
</g>
<g >
<title>sqlite3VdbeMemFromBtreeZeroOffset (246,722,644 samples, 0.01%)</title><rect x="40.1" y="1589" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="43.10" y="1599.5" ></text>
</g>
<g >
<title>vfs_statx (252,927,575 samples, 0.01%)</title><rect x="164.1" y="1445" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="167.06" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="757" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="767.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (2,296,321,878 samples, 0.09%)</title><rect x="119.0" y="1461" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="122.00" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,700,834,368 samples, 0.06%)</title><rect x="159.3" y="1525" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="162.33" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="677" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="533" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="543.5" ></text>
</g>
<g >
<title>call_rcu (305,245,035 samples, 0.01%)</title><rect x="1061.4" y="1189" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1064.37" y="1199.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (2,606,909,612 samples, 0.10%)</title><rect x="217.5" y="1589" width="1.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="220.47" y="1599.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (2,953,712,430 samples, 0.11%)</title><rect x="495.9" y="1333" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="498.87" y="1343.5" ></text>
</g>
<g >
<title>__memcpy_fwd (35,333,555,904 samples, 1.33%)</title><rect x="76.1" y="1605" width="15.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="79.06" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1413" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (295,814,600 samples, 0.01%)</title><rect x="153.4" y="1429" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="156.43" y="1439.5" ></text>
</g>
<g >
<title>parking_lot::raw_mutex::RawMutex::lock_slow (478,347,645 samples, 0.02%)</title><rect x="1173.1" y="1605" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1176.06" y="1615.5" ></text>
</g>
<g >
<title>code_store::schema::code_items::read_statement_t::get_data (295,899,963 samples, 0.01%)</title><rect x="121.6" y="1461" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="124.57" y="1471.5" ></text>
</g>
<g >
<title>start (74,544,394,620 samples, 2.80%)</title><rect x="120.8" y="1605" width="33.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="123.79" y="1615.5" >st..</text>
</g>
<g >
<title>sqlite3GetToken (246,763,592 samples, 0.01%)</title><rect x="49.8" y="1381" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="52.77" y="1391.5" ></text>
</g>
<g >
<title>__libc_free (14,033,614,447 samples, 0.53%)</title><rect x="63.6" y="1605" width="6.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="66.60" y="1615.5" ></text>
</g>
<g >
<title>__x64_sys_execve (471,781,894 samples, 0.02%)</title><rect x="167.3" y="1573" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="170.30" y="1583.5" ></text>
</g>
<g >
<title>runc:[1:CHILD] (72,823,420,087 samples, 2.74%)</title><rect x="168.8" y="1621" width="32.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="171.77" y="1631.5" >ru..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::check_select_read (2,228,845,095 samples, 0.08%)</title><rect x="209.5" y="1589" width="1.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="212.48" y="1599.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Write&gt;::write (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1477" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1004.48" y="1487.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (525,292,870 samples, 0.02%)</title><rect x="1187.0" y="1573" width="0.3" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1190.05" y="1583.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Debounce::Debounce (1,638,777,842 samples, 0.06%)</title><rect x="166.4" y="1557" width="0.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="169.43" y="1567.5" ></text>
</g>
<g >
<title>inode_init_always (1,024,070,474 samples, 0.04%)</title><rect x="1054.5" y="1317" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1057.48" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,803,968,154 samples, 0.11%)</title><rect x="109.0" y="1589" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="112.01" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1253" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="1263.5" ></text>
</g>
<g >
<title>newidle_balance (457,060,963 samples, 0.02%)</title><rect x="176.9" y="1477" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="179.92" y="1487.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (622,968,458 samples, 0.02%)</title><rect x="1187.6" y="1413" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1190.56" y="1423.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (961,266,405 samples, 0.04%)</title><rect x="1166.8" y="1557" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1169.77" y="1567.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (493,481,263 samples, 0.02%)</title><rect x="1145.9" y="1493" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1148.87" y="1503.5" ></text>
</g>
<g >
<title>poll_idle (1,000,674,047 samples, 0.04%)</title><rect x="1188.7" y="1493" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1191.67" y="1503.5" ></text>
</g>
<g >
<title>CStoreRequest::CStoreRequest (394,570,912 samples, 0.01%)</title><rect x="138.4" y="1445" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="141.41" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (296,012,180 samples, 0.01%)</title><rect x="152.5" y="1429" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="155.51" y="1439.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (666,349,028 samples, 0.03%)</title><rect x="168.4" y="1317" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="171.38" y="1327.5" ></text>
</g>
<g >
<title>moveToChild (444,178,668 samples, 0.02%)</title><rect x="123.9" y="1381" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="126.88" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (3,833,669,357 samples, 0.14%)</title><rect x="1187.4" y="1509" width="1.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1190.44" y="1519.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (589,302,993 samples, 0.02%)</title><rect x="1067.9" y="1189" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1070.94" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="277" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="287.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (429,647,513 samples, 0.02%)</title><rect x="167.3" y="1333" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="170.31" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (901,802,358 samples, 0.03%)</title><rect x="167.8" y="1525" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="170.76" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,274,799,709 samples, 0.09%)</title><rect x="166.3" y="1589" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="169.27" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="917" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="927.5" ></text>
</g>
<g >
<title>pcache1Fetch (444,178,668 samples, 0.02%)</title><rect x="123.9" y="1349" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="126.88" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,475,477 samples, 0.02%)</title><rect x="162.2" y="325" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.16" y="335.5" ></text>
</g>
<g >
<title>sqlite3_step (294,826,368 samples, 0.01%)</title><rect x="149.0" y="1397" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="152.04" y="1407.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (2,326,558,456 samples, 0.09%)</title><rect x="1055.0" y="1301" width="1.0" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1057.96" y="1311.5" ></text>
</g>
<g >
<title>browse_engine::parse_file (4,229,602,498 samples, 0.16%)</title><rect x="48.2" y="1573" width="1.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="51.16" y="1583.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::overflowing_add (1,167,736,852 samples, 0.04%)</title><rect x="924.3" y="1349" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="927.27" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1445" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="163.40" y="1455.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (3,090,293,285 samples, 0.12%)</title><rect x="1163.8" y="1589" width="1.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1166.82" y="1599.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (6,572,584,999 samples, 0.25%)</title><rect x="331.1" y="1541" width="2.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="334.10" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,675,452,476 samples, 0.06%)</title><rect x="162.1" y="645" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.13" y="655.5" ></text>
</g>
<g >
<title>futex_unqueue (226,324,633 samples, 0.01%)</title><rect x="1047.1" y="1349" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1050.08" y="1359.5" ></text>
</g>
<g >
<title>__lock (389,409,661 samples, 0.01%)</title><rect x="43.9" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="46.95" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_accept (14,279,468,735 samples, 0.54%)</title><rect x="1053.3" y="1413" width="6.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1056.29" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="837" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="847.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::overflowing_add (937,486,212 samples, 0.04%)</title><rect x="983.2" y="1365" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="986.20" y="1375.5" ></text>
</g>
<g >
<title>do_lock_file_wait (1,374,131,700 samples, 0.05%)</title><rect x="109.3" y="1509" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="112.30" y="1519.5" ></text>
</g>
<g >
<title>__gup_longterm_locked (270,647,970 samples, 0.01%)</title><rect x="1145.7" y="1429" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1148.69" y="1439.5" ></text>
</g>
<g >
<title>file_free_rcu (831,318,765 samples, 0.03%)</title><rect x="175.8" y="1477" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="178.82" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="197" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="207.5" ></text>
</g>
<g >
<title>sqlite3_prepare_v3 (2,410,367,410 samples, 0.09%)</title><rect x="49.0" y="1445" width="1.0" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="51.97" y="1455.5" ></text>
</g>
<g >
<title>ovl_getattr (1,080,149,226 samples, 0.04%)</title><rect x="57.5" y="1461" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="60.50" y="1471.5" ></text>
</g>
<g >
<title>do_mas_munmap (292,172,204 samples, 0.01%)</title><rect x="10.1" y="1525" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="13.12" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (292,172,204 samples, 0.01%)</title><rect x="10.1" y="1573" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.12" y="1583.5" ></text>
</g>
<g >
<title>selectInnerLoop (539,903,260 samples, 0.02%)</title><rect x="50.8" y="1381" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="53.75" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (3,367,022,197 samples, 0.13%)</title><rect x="1181.1" y="1509" width="1.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1184.08" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,038,265,634 samples, 0.11%)</title><rect x="118.8" y="1573" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="121.83" y="1583.5" ></text>
</g>
<g >
<title>malloc (648,012,742 samples, 0.02%)</title><rect x="164.9" y="69" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="167.94" y="79.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (510,581,114 samples, 0.02%)</title><rect x="1059.8" y="1365" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1062.78" y="1375.5" ></text>
</g>
<g >
<title>code_store::results_statement_t&lt;code_store::files_set_t, code_store::schema::files::read_statement_t, code_store::files_set&gt;::create_statement (2,410,367,410 samples, 0.09%)</title><rect x="49.0" y="1477" width="1.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="51.97" y="1487.5" ></text>
</g>
<g >
<title>sqlite3ResolveExprListNames (1,024,183,585 samples, 0.04%)</title><rect x="50.0" y="1381" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="53.03" y="1391.5" ></text>
</g>
<g >
<title>__sched_yield (473,186,473,736 samples, 17.78%)</title><rect x="357.5" y="1493" width="209.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="360.49" y="1503.5" >__sched_yield</text>
</g>
<g >
<title>std::thread::sleep (270,353,490 samples, 0.01%)</title><rect x="1168.3" y="1477" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1171.35" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,972,379,177 samples, 0.07%)</title><rect x="110.4" y="1573" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="113.39" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (440,606,829 samples, 0.02%)</title><rect x="40.8" y="1589" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="43.83" y="1599.5" ></text>
</g>
<g >
<title>security_inode_getattr (344,907,074 samples, 0.01%)</title><rect x="111.0" y="1461" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="114.02" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="341" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="351.5" ></text>
</g>
<g >
<title>sqlite3Prepare (1,517,300,993 samples, 0.06%)</title><rect x="50.0" y="1477" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="53.03" y="1487.5" ></text>
</g>
<g >
<title>__sys_recvfrom (342,119,511 samples, 0.01%)</title><rect x="1029.8" y="1413" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1032.79" y="1423.5" ></text>
</g>
<g >
<title>msvc::path_utf8::get_part_of_path_under (493,629,092 samples, 0.02%)</title><rect x="149.7" y="1445" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="152.72" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (293,534,310 samples, 0.01%)</title><rect x="162.3" y="309" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="165.31" y="319.5" ></text>
</g>
<g >
<title>walkExpr (739,988,239 samples, 0.03%)</title><rect x="51.4" y="1317" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="54.38" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (2,002,960,983 samples, 0.08%)</title><rect x="510.4" y="1365" width="0.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="513.44" y="1375.5" ></text>
</g>
<g >
<title>security_file_free (301,977,348 samples, 0.01%)</title><rect x="1062.0" y="1317" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1064.98" y="1327.5" ></text>
</g>
<g >
<title>msvc::path_utf8::~path_utf8 (599,426,357 samples, 0.02%)</title><rect x="146.8" y="1461" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="149.75" y="1471.5" ></text>
</g>
<g >
<title>[[vdso]] (101,496,312,891 samples, 3.81%)</title><rect x="927.8" y="1397" width="45.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="930.83" y="1407.5" >[[vd..</text>
</g>
<g >
<title>cpuidle_enter_state (34,675,968,874 samples, 1.30%)</title><rect x="178.2" y="1509" width="15.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="181.24" y="1519.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (376,322,348 samples, 0.01%)</title><rect x="156.2" y="1413" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="159.18" y="1423.5" ></text>
</g>
<g >
<title>tick_sched_timer (230,317,085 samples, 0.01%)</title><rect x="181.3" y="1413" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="184.34" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,294,102,828 samples, 0.16%)</title><rect x="162.0" y="1381" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.02" y="1391.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (238,323,471 samples, 0.01%)</title><rect x="1061.5" y="1205" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1064.51" y="1215.5" ></text>
</g>
<g >
<title>__sys_accept4 (14,190,994,085 samples, 0.53%)</title><rect x="1053.3" y="1397" width="6.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1056.29" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_write (1,102,754,361 samples, 0.04%)</title><rect x="168.2" y="1429" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="171.20" y="1439.5" ></text>
</g>
<g >
<title>node (15,034,130,782 samples, 0.56%)</title><rect x="160.8" y="1621" width="6.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="163.85" y="1631.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (465,321,635 samples, 0.02%)</title><rect x="156.2" y="1445" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="159.17" y="1455.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (344,800,292 samples, 0.01%)</title><rect x="1039.0" y="1429" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1042.01" y="1439.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (474,298,207 samples, 0.02%)</title><rect x="1054.7" y="1285" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1057.66" y="1295.5" ></text>
</g>
<g >
<title>pcache1Fetch (677,592,227 samples, 0.03%)</title><rect x="148.4" y="1333" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="151.37" y="1343.5" ></text>
</g>
<g >
<title>NaClMaskRestore (2,319,881,438 samples, 0.09%)</title><rect x="300.4" y="1557" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="303.42" y="1567.5" ></text>
</g>
<g >
<title>new_slab (241,226,044 samples, 0.01%)</title><rect x="1055.1" y="1269" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1058.12" y="1279.5" ></text>
</g>
<g >
<title>sqlite3Prepare (5,010,634,315 samples, 0.19%)</title><rect x="50.7" y="1429" width="2.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="53.71" y="1439.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (471,669,733 samples, 0.02%)</title><rect x="1145.6" y="1461" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1148.60" y="1471.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (280,270,610 samples, 0.01%)</title><rect x="1168.3" y="1557" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1171.34" y="1567.5" ></text>
</g>
<g >
<title>cpptools_context::handle_parse_file (3,345,369,366 samples, 0.13%)</title><rect x="53.2" y="1589" width="1.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="56.19" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,665,898,995 samples, 0.78%)</title><rect x="1053.2" y="1445" width="9.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1056.25" y="1455.5" ></text>
</g>
<g >
<title>msvc::path_utf8::split_path (1,488,270,710 samples, 0.06%)</title><rect x="152.9" y="1445" width="0.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="155.91" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,880,359,142 samples, 0.07%)</title><rect x="162.1" y="757" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.11" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="501" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;char const*, unsigned long&gt; (490,294,054 samples, 0.02%)</title><rect x="152.0" y="1429" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="155.03" y="1439.5" ></text>
</g>
<g >
<title>browse_engine::query_cik_in_file (1,517,300,993 samples, 0.06%)</title><rect x="50.0" y="1573" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="53.03" y="1583.5" ></text>
</g>
<g >
<title>load_elf_binary (471,781,894 samples, 0.02%)</title><rect x="167.3" y="1477" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="170.30" y="1487.5" ></text>
</g>
<g >
<title>msvc::recursive_directory_iterator_utf8::enumerate_files_non_recursive (246,795,134 samples, 0.01%)</title><rect x="147.0" y="1429" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="150.02" y="1439.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (356,572,620 samples, 0.01%)</title><rect x="1064.3" y="1285" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1067.32" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="293" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (493,307,391 samples, 0.02%)</title><rect x="62.8" y="1589" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="65.76" y="1599.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (3,841,975,013 samples, 0.14%)</title><rect x="195.3" y="1509" width="1.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="198.31" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1077" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1087.5" ></text>
</g>
<g >
<title>browse_engine::query_include_path_suggestions_impl (246,781,484 samples, 0.01%)</title><rect x="36.4" y="1589" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="39.41" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="405" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="415.5" ></text>
</g>
<g >
<title>write (1,110,615,940 samples, 0.04%)</title><rect x="168.2" y="1477" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="171.20" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (641,663,228 samples, 0.02%)</title><rect x="318.1" y="1541" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="321.12" y="1551.5" ></text>
</g>
<g >
<title>lind_sem_post (2,169,129,868 samples, 0.08%)</title><rect x="1071.8" y="1541" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1074.85" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="677" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="687.5" ></text>
</g>
<g >
<title>update_process_times (273,051,216 samples, 0.01%)</title><rect x="728.7" y="1365" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="731.68" y="1375.5" ></text>
</g>
<g >
<title>__sched_yield (295,528,903 samples, 0.01%)</title><rect x="869.1" y="1445" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="872.14" y="1455.5" ></text>
</g>
<g >
<title>pick_next_task (1,890,705,724 samples, 0.07%)</title><rect x="198.0" y="1509" width="0.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="201.01" y="1519.5" ></text>
</g>
<g >
<title>i_callback (528,281,429 samples, 0.02%)</title><rect x="176.2" y="1477" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="179.19" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="277" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="287.5" ></text>
</g>
<g >
<title>ext4_dx_readdir (340,549,250 samples, 0.01%)</title><rect x="59.0" y="1445" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="61.98" y="1455.5" ></text>
</g>
<g >
<title>source_file_for_seq (364,824,871 samples, 0.01%)</title><rect x="12.0" y="1605" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="15.00" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1317" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="1327.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1,431,218,880 samples, 0.05%)</title><rect x="1144.8" y="1589" width="0.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1147.83" y="1599.5" ></text>
</g>
<g >
<title>__fput (4,796,434,089 samples, 0.18%)</title><rect x="1060.1" y="1333" width="2.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1063.11" y="1343.5" ></text>
</g>
<g >
<title>_start (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1605" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="163.40" y="1615.5" ></text>
</g>
<g >
<title>find_busiest_group (329,066,391 samples, 0.01%)</title><rect x="177.0" y="1445" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="179.95" y="1455.5" ></text>
</g>
<g >
<title>path_lookupat (3,602,562,365 samples, 0.14%)</title><rect x="59.6" y="1477" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="62.61" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1157" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1167.5" ></text>
</g>
<g >
<title>clock_gettime (3,371,356,320 samples, 0.13%)</title><rect x="207.4" y="1589" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="210.41" y="1599.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::sub_timespec (16,249,356,317 samples, 0.61%)</title><rect x="917.6" y="1397" width="7.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="920.58" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="885" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (815,180,008 samples, 0.03%)</title><rect x="91.7" y="1557" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="94.72" y="1567.5" ></text>
</g>
<g >
<title>iput (2,151,385,015 samples, 0.08%)</title><rect x="1060.8" y="1269" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1063.81" y="1279.5" ></text>
</g>
<g >
<title>set_next_entity (1,156,330,739 samples, 0.04%)</title><rect x="198.3" y="1477" width="0.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="201.27" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (292,172,204 samples, 0.01%)</title><rect x="10.1" y="1557" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="13.12" y="1567.5" ></text>
</g>
<g >
<title>[[vdso]] (3,912,664,555 samples, 0.15%)</title><rect x="974.6" y="1461" width="1.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="977.57" y="1471.5" ></text>
</g>
<g >
<title>__schedule (10,299,888,874 samples, 0.39%)</title><rect x="1065.0" y="1301" width="4.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1067.96" y="1311.5" ></text>
</g>
<g >
<title>sh (353,868,316 samples, 0.01%)</title><rect x="1178.7" y="1621" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1181.70" y="1631.5" ></text>
</g>
<g >
<title>get_meta (246,772,600 samples, 0.01%)</title><rect x="58.1" y="1589" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="61.11" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,069,239,872 samples, 0.04%)</title><rect x="162.2" y="469" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.15" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::poll_syscall (1,501,245,612,429 samples, 56.39%)</title><rect x="336.0" y="1509" width="665.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="338.99" y="1519.5" >rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::poll_sy..</text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (32,745,768,131 samples, 1.23%)</title><rect x="1003.6" y="1541" width="14.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1006.62" y="1551.5" ></text>
</g>
<g >
<title>walkExpr (1,024,183,585 samples, 0.04%)</title><rect x="50.0" y="1365" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="53.03" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,458,412,479 samples, 0.05%)</title><rect x="162.1" y="597" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.14" y="607.5" ></text>
</g>
<g >
<title>unmap_single_vma (429,647,513 samples, 0.02%)</title><rect x="167.3" y="1365" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="170.31" y="1375.5" ></text>
</g>
<g >
<title>path_lookupat (1,083,736,671 samples, 0.04%)</title><rect x="110.4" y="1477" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="113.41" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_write (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1365" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1004.48" y="1375.5" ></text>
</g>
<g >
<title>Glob::isIgnored (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1541" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="164.46" y="1551.5" ></text>
</g>
<g >
<title>update_curr (965,752,650 samples, 0.04%)</title><rect x="1045.5" y="1301" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1048.46" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="453" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="463.5" ></text>
</g>
<g >
<title>do_idle (2,488,971,897 samples, 0.09%)</title><rect x="159.3" y="1557" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="162.29" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (475,731,535 samples, 0.02%)</title><rect x="1145.6" y="1525" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1148.60" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (1,962,326,423 samples, 0.07%)</title><rect x="444.5" y="1381" width="0.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="447.55" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (984,330,870 samples, 0.04%)</title><rect x="142.7" y="1429" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="145.69" y="1439.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (4,936,415,693 samples, 0.19%)</title><rect x="313.1" y="1525" width="2.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="316.10" y="1535.5" ></text>
</g>
<g >
<title>start_secondary (6,040,980,571 samples, 0.23%)</title><rect x="1187.3" y="1589" width="2.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1190.31" y="1599.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (387,091,291 samples, 0.01%)</title><rect x="182.9" y="1461" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="185.90" y="1471.5" ></text>
</g>
<g >
<title>sqlite3ExprCodeExprList.isra.0 (342,829,465 samples, 0.01%)</title><rect x="50.8" y="1365" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="53.82" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (493,307,717 samples, 0.02%)</title><rect x="142.4" y="1429" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="145.39" y="1439.5" ></text>
</g>
<g >
<title>browse_engine::query_include_path_suggestions (5,010,634,315 samples, 0.19%)</title><rect x="50.7" y="1573" width="2.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="53.71" y="1583.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (918,719,932,840 samples, 34.51%)</title><rect x="567.2" y="1493" width="407.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="570.24" y="1503.5" >rustposix::safeposix::syscalls::net_calls::&lt;impl rustpo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="181" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="191.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (354,151,349 samples, 0.01%)</title><rect x="1057.8" y="1285" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1060.83" y="1295.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (12,941,491,501 samples, 0.49%)</title><rect x="1158.1" y="1589" width="5.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1161.08" y="1599.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDayDecoder (296,201,376 samples, 0.01%)</title><rect x="1148.6" y="1589" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1151.64" y="1599.5" ></text>
</g>
<g >
<title>syscall (7,132,263,121 samples, 0.27%)</title><rect x="1046.6" y="1445" width="3.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1049.61" y="1455.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::ok (1,662,619,051 samples, 0.06%)</title><rect x="977.7" y="1413" width="0.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="980.68" y="1423.5" ></text>
</g>
<g >
<title>schedule (691,937,348 samples, 0.03%)</title><rect x="545.1" y="1429" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="548.05" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1157" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1167.5" ></text>
</g>
<g >
<title>clock_gettime (2,220,652,032 samples, 0.08%)</title><rect x="202.7" y="1589" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="205.71" y="1599.5" ></text>
</g>
<g >
<title>NaClVmmapMakeSorted (246,826,418 samples, 0.01%)</title><rect x="1018.0" y="1509" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1021.01" y="1519.5" ></text>
</g>
<g >
<title>all (2,662,083,623,351 samples, 100%)</title><rect x="10.0" y="1637" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" ></text>
</g>
<g >
<title>file_free_rcu (472,758,096 samples, 0.02%)</title><rect x="182.2" y="1365" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="185.21" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_execve (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1413" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="163.40" y="1423.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1,595,325,379 samples, 0.06%)</title><rect x="1064.2" y="1317" width="0.7" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1067.18" y="1327.5" ></text>
</g>
<g >
<title>sched_clock (298,612,263 samples, 0.01%)</title><rect x="193.5" y="1477" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="196.48" y="1487.5" ></text>
</g>
<g >
<title>new_inode_pseudo (3,707,437,891 samples, 0.14%)</title><rect x="1054.4" y="1349" width="1.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1057.38" y="1359.5" ></text>
</g>
<g >
<title>[anon] (64,656,432,607 samples, 2.43%)</title><rect x="14.8" y="1605" width="28.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="17.78" y="1615.5" >[a..</text>
</g>
<g >
<title>kthread (295,572,666 samples, 0.01%)</title><rect x="155.9" y="1589" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="158.91" y="1599.5" ></text>
</g>
<g >
<title>msvc::log (394,755,916 samples, 0.01%)</title><rect x="58.3" y="1589" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="61.30" y="1599.5" ></text>
</g>
<g >
<title>ttwu_do_activate (385,563,519 samples, 0.01%)</title><rect x="1187.7" y="1365" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1190.65" y="1375.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (16,635,967,288 samples, 0.62%)</title><rect x="321.5" y="1541" width="7.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="324.49" y="1551.5" ></text>
</g>
<g >
<title>msvc::log (641,126,762 samples, 0.02%)</title><rect x="145.2" y="1429" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="148.25" y="1439.5" ></text>
</g>
<g >
<title>std::time::Instant::now (2,053,008,033 samples, 0.08%)</title><rect x="973.6" y="1477" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="976.56" y="1487.5" ></text>
</g>
<g >
<title>code_store::store_t::get_code_items (1,819,235,088 samples, 0.07%)</title><rect x="48.2" y="1525" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="51.16" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_enter (3,410,629,420 samples, 0.13%)</title><rect x="1181.1" y="1525" width="1.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1184.06" y="1535.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4,538,717,131 samples, 0.17%)</title><rect x="195.2" y="1541" width="2.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="198.23" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1077" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1317" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,109,144,364 samples, 0.04%)</title><rect x="168.2" y="1445" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="171.20" y="1455.5" ></text>
</g>
<g >
<title>parking_lot_core::word_lock::WordLock::lock_slow (237,136,540 samples, 0.01%)</title><rect x="1046.5" y="1445" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1049.50" y="1455.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common (43,768,051,834 samples, 1.64%)</title><rect x="1020.2" y="1493" width="19.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1023.22" y="1503.5" ></text>
</g>
<g >
<title>__mmap (815,180,008 samples, 0.03%)</title><rect x="91.7" y="1605" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="94.72" y="1615.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1,350,038,542 samples, 0.05%)</title><rect x="1070.0" y="1349" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1073.03" y="1359.5" ></text>
</g>
<g >
<title>std::time::Instant::now (40,118,716,741 samples, 1.51%)</title><rect x="983.6" y="1477" width="17.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="986.61" y="1487.5" ></text>
</g>
<g >
<title>find_busiest_group (575,858,546 samples, 0.02%)</title><rect x="1048.4" y="1237" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1051.35" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (264,718,200 samples, 0.01%)</title><rect x="164.4" y="165" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="175.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (694,759,297 samples, 0.03%)</title><rect x="1067.9" y="1205" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1070.90" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="485" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="495.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (3,969,335,704 samples, 0.15%)</title><rect x="195.3" y="1525" width="1.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="198.25" y="1535.5" ></text>
</g>
<g >
<title>do_sys_poll (877,633,766 samples, 0.03%)</title><rect x="167.8" y="1493" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="170.76" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1365" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1375.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (5,515,248,859 samples, 0.21%)</title><rect x="161.7" y="1557" width="2.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="164.75" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="869" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="325" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="335.5" ></text>
</g>
<g >
<title>[anon] (33,688,087,838 samples, 1.27%)</title><rect x="203.7" y="1605" width="14.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="206.70" y="1615.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (937,993,915 samples, 0.04%)</title><rect x="203.7" y="1589" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="206.74" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (789,466,040 samples, 0.03%)</title><rect x="152.4" y="1445" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="155.42" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1269" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,723,259,551 samples, 0.14%)</title><rect x="162.0" y="1205" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.04" y="1215.5" ></text>
</g>
<g >
<title>default_malloc (344,533,078 samples, 0.01%)</title><rect x="104.5" y="1605" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="107.54" y="1615.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (828,599,197 samples, 0.03%)</title><rect x="218.0" y="1557" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="221.02" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1093" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1221" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1231.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (100,822,272,380 samples, 3.79%)</title><rect x="869.4" y="1477" width="44.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="872.40" y="1487.5" >std:..</text>
</g>
<g >
<title>parser::update_file_if_needed (2,882,563,567 samples, 0.11%)</title><rect x="148.0" y="1493" width="1.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="151.00" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="437" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="447.5" ></text>
</g>
<g >
<title>dispatcher (1,504,433,564,002 samples, 56.51%)</title><rect x="334.6" y="1525" width="666.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="337.58" y="1535.5" >dispatcher</text>
</g>
<g >
<title>fdarray__poll (927,138,678 samples, 0.03%)</title><rect x="167.7" y="1573" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="170.75" y="1583.5" ></text>
</g>
<g >
<title>[[vdso]] (4,457,842,252 samples, 0.17%)</title><rect x="201.7" y="1605" width="2.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="204.72" y="1615.5" ></text>
</g>
<g >
<title>kmem_cache_free (423,319,434 samples, 0.02%)</title><rect x="176.0" y="1461" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="178.99" y="1471.5" ></text>
</g>
<g >
<title>msvc::split_string&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (5,222,063,264 samples, 0.20%)</title><rect x="149.9" y="1445" width="2.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="152.94" y="1455.5" ></text>
</g>
<g >
<title>rcu_do_batch (316,687,769 samples, 0.01%)</title><rect x="1187.1" y="1493" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1190.09" y="1503.5" ></text>
</g>
<g >
<title>NaClSysRecvDecoder (85,790,775,405 samples, 3.22%)</title><rect x="1001.7" y="1573" width="38.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1004.73" y="1583.5" >NaC..</text>
</g>
<g >
<title>walkExpr (246,776,478 samples, 0.01%)</title><rect x="51.8" y="1285" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="54.78" y="1295.5" ></text>
</g>
<g >
<title>__fdget_raw (1,247,943,954 samples, 0.05%)</title><rect x="1051.8" y="1381" width="0.6" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1054.83" y="1391.5" ></text>
</g>
<g >
<title>CExtStore::GetFiles (1,478,304,078 samples, 0.06%)</title><rect x="137.8" y="1445" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="140.76" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (471,781,894 samples, 0.02%)</title><rect x="167.3" y="1605" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="170.30" y="1615.5" ></text>
</g>
<g >
<title>strlen (272,886,473 samples, 0.01%)</title><rect x="63.4" y="1589" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="66.37" y="1599.5" ></text>
</g>
<g >
<title>code_store::results_statement_t&lt;code_store::files_set_t, code_store::schema::files::read_statement_t, code_store::files_set&gt;::create_statement (5,010,634,315 samples, 0.19%)</title><rect x="50.7" y="1493" width="2.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="53.71" y="1503.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (242,836,064 samples, 0.01%)</title><rect x="10.1" y="1509" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.12" y="1519.5" ></text>
</g>
<g >
<title>schedule_idle (305,322,860 samples, 0.01%)</title><rect x="160.2" y="1541" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="163.24" y="1551.5" ></text>
</g>
<g >
<title>unmap_vmas (429,647,513 samples, 0.02%)</title><rect x="167.3" y="1381" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="170.31" y="1391.5" ></text>
</g>
<g >
<title>ret_from_fork (597,983,249 samples, 0.02%)</title><rect x="1187.0" y="1605" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1190.05" y="1615.5" ></text>
</g>
<g >
<title>handle_mm_fault (368,445,666 samples, 0.01%)</title><rect x="1145.9" y="1413" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1148.92" y="1423.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::check_select_read (317,111,117,099 samples, 11.91%)</title><rect x="728.8" y="1477" width="140.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="731.84" y="1487.5" >rustposix::interf..</text>
</g>
<g >
<title>code_store::store_t::get_code_items (1,517,300,993 samples, 0.06%)</title><rect x="50.0" y="1541" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="53.03" y="1551.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_duration_since (961,266,405 samples, 0.04%)</title><rect x="1166.8" y="1541" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1169.77" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="869" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1221" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="1231.5" ></text>
</g>
<g >
<title>NaClClockGetTime (246,844,739 samples, 0.01%)</title><rect x="1145.5" y="1589" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1148.47" y="1599.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDayDecoder (30,603,750,742 samples, 1.15%)</title><rect x="315.9" y="1573" width="13.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="318.89" y="1583.5" ></text>
</g>
<g >
<title>do_accept (11,938,768,348 samples, 0.45%)</title><rect x="1053.5" y="1381" width="5.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1056.49" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (394,951,358 samples, 0.01%)</title><rect x="321.2" y="1525" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="324.25" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (2,161,111,969 samples, 0.08%)</title><rect x="394.9" y="1461" width="0.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="397.88" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,382,823,386 samples, 0.05%)</title><rect x="166.5" y="1525" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="169.50" y="1535.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (1,418,879,042 samples, 0.05%)</title><rect x="92.1" y="1509" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="95.08" y="1519.5" ></text>
</g>
<g >
<title>psi_group_change (711,642,047 samples, 0.03%)</title><rect x="180.7" y="1317" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="183.65" y="1327.5" ></text>
</g>
<g >
<title>profile_transition (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1317" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="163.40" y="1327.5" ></text>
</g>
<g >
<title>do_iter_write (672,356,424 samples, 0.03%)</title><rect x="168.4" y="1349" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="171.38" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,614,632,570 samples, 0.06%)</title><rect x="165.4" y="101" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,658,504,206 samples, 0.14%)</title><rect x="1051.3" y="1445" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1054.31" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (815,180,008 samples, 0.03%)</title><rect x="91.7" y="1589" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="94.72" y="1599.5" ></text>
</g>
<g >
<title>msvc::log (542,755,189 samples, 0.02%)</title><rect x="142.1" y="1429" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="145.15" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (329,242,254 samples, 0.01%)</title><rect x="162.2" y="277" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.17" y="287.5" ></text>
</g>
<g >
<title>tokenExpr (295,913,866 samples, 0.01%)</title><rect x="54.5" y="1413" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="57.54" y="1423.5" ></text>
</g>
<g >
<title>wake_up_q (1,175,188,262 samples, 0.04%)</title><rect x="1050.6" y="1365" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1053.65" y="1375.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,503,511,809 samples, 0.09%)</title><rect x="159.3" y="1573" width="1.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="162.29" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="613" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="623.5" ></text>
</g>
<g >
<title>ext4_dx_readdir (394,486,238 samples, 0.01%)</title><rect x="58.8" y="1445" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="61.78" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,311,513,332 samples, 0.05%)</title><rect x="164.8" y="117" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="127.5" ></text>
</g>
<g >
<title>___slab_alloc (261,110,365 samples, 0.01%)</title><rect x="1056.5" y="1269" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1059.51" y="1279.5" ></text>
</g>
<g >
<title>clock_gettime (105,269,026,339 samples, 3.95%)</title><rect x="926.9" y="1413" width="46.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="929.90" y="1423.5" >cloc..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,069,239,872 samples, 0.04%)</title><rect x="162.2" y="453" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.15" y="463.5" ></text>
</g>
<g >
<title>do_sched_yield (2,552,510,999 samples, 0.10%)</title><rect x="546.7" y="1445" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="549.68" y="1455.5" ></text>
</g>
<g >
<title>sqlite3GetToken (542,771,372 samples, 0.02%)</title><rect x="54.3" y="1413" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="57.26" y="1423.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (1,719,385,718 samples, 0.06%)</title><rect x="538.4" y="1397" width="0.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="541.35" y="1407.5" ></text>
</g>
<g >
<title>sqlite3Select (1,819,235,088 samples, 0.07%)</title><rect x="48.2" y="1429" width="0.8" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="51.16" y="1439.5" ></text>
</g>
<g >
<title>vfs_write (1,096,800,276 samples, 0.04%)</title><rect x="168.2" y="1397" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="171.21" y="1407.5" ></text>
</g>
<g >
<title>main (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1557" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="163.40" y="1567.5" ></text>
</g>
<g >
<title>amd_clear_divider (1,075,888,723 samples, 0.04%)</title><rect x="546.2" y="1445" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="549.20" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="853" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="863.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (632,072,819 samples, 0.02%)</title><rect x="1181.1" y="1445" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1184.11" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1253" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (20,802,910,976 samples, 0.78%)</title><rect x="1029.7" y="1429" width="9.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1032.68" y="1439.5" ></text>
</g>
<g >
<title>std::time::Instant::now (110,031,573,298 samples, 4.13%)</title><rect x="924.8" y="1461" width="48.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="927.79" y="1471.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,716,422,465 samples, 0.14%)</title><rect x="162.0" y="1157" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.04" y="1167.5" ></text>
</g>
<g >
<title>sqlite3WhereBegin (493,400,774 samples, 0.02%)</title><rect x="48.6" y="1413" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="51.64" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1269" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1279.5" ></text>
</g>
<g >
<title>[[vdso]] (5,238,275,533 samples, 0.20%)</title><rect x="205.0" y="1589" width="2.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="208.03" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (868,709,359 samples, 0.03%)</title><rect x="1151.2" y="1589" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.20" y="1599.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (246,817,753 samples, 0.01%)</title><rect x="1149.3" y="1589" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1152.28" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,093,977,694 samples, 0.12%)</title><rect x="162.1" y="1013" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.07" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="325" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="335.5" ></text>
</g>
<g >
<title>sqlite3BtreeTableMoveto (443,767,304 samples, 0.02%)</title><rect x="148.8" y="1365" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="151.76" y="1375.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (5,926,298,458 samples, 0.22%)</title><rect x="178.8" y="1429" width="2.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="181.84" y="1439.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (747,753,046 samples, 0.03%)</title><rect x="176.5" y="1477" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="179.50" y="1487.5" ></text>
</g>
<g >
<title>shell_execve (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1477" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="163.40" y="1487.5" ></text>
</g>
<g >
<title>sqlite3VdbeFinishMoveto (12,926,502,505 samples, 0.49%)</title><rect x="131.7" y="1365" width="5.7" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="134.68" y="1375.5" ></text>
</g>
<g >
<title>__fget_light (3,539,944,161 samples, 0.13%)</title><rect x="1034.9" y="1349" width="1.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1037.93" y="1359.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (2,274,882,530 samples, 0.09%)</title><rect x="1060.8" y="1285" width="1.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1063.75" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (542,706,491 samples, 0.02%)</title><rect x="41.0" y="1589" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="44.02" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1109" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="485" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="495.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (471,781,894 samples, 0.02%)</title><rect x="167.3" y="1525" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="170.30" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="757" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="767.5" ></text>
</g>
<g >
<title>moveToChild (4,186,262,012 samples, 0.16%)</title><rect x="134.5" y="1333" width="1.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="137.53" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="741" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="357" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="805" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="815.5" ></text>
</g>
<g >
<title>[unknown] (55,191,962,134 samples, 2.07%)</title><rect x="1143.6" y="1605" width="24.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1146.64" y="1615.5" >[..</text>
</g>
<g >
<title>do_nanosleep (12,634,601,879 samples, 0.47%)</title><rect x="1064.0" y="1333" width="5.6" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1066.98" y="1343.5" ></text>
</g>
<g >
<title>ksys_write (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1349" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1004.48" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="389" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="399.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (276,751,964 samples, 0.01%)</title><rect x="1061.2" y="1189" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1064.18" y="1199.5" ></text>
</g>
<g >
<title>code_store::results_statement_t&lt;code_store::full_code_items_set_t, code_store::schema::code_items::read_statement_t, code_store::full_code_items_set&gt;::move_next (8,362,582,076 samples, 0.31%)</title><rect x="121.8" y="1461" width="3.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="124.77" y="1471.5" ></text>
</g>
<g >
<title>pcache1Fetch (3,544,672,657 samples, 0.13%)</title><rect x="134.8" y="1301" width="1.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="137.81" y="1311.5" ></text>
</g>
<g >
<title>__split_vma (788,920,034 samples, 0.03%)</title><rect x="92.1" y="1493" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="95.08" y="1503.5" ></text>
</g>
<g >
<title>browse_engine::query_include_files (5,010,634,315 samples, 0.19%)</title><rect x="50.7" y="1541" width="2.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="53.71" y="1551.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (39,427,901,684 samples, 1.48%)</title><rect x="983.9" y="1445" width="17.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="986.92" y="1455.5" ></text>
</g>
<g >
<title>start_secondary (53,606,315,343 samples, 2.01%)</title><rect x="177.2" y="1589" width="23.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="180.19" y="1599.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="549" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="559.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (394,845,720 samples, 0.01%)</title><rect x="62.3" y="1589" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="65.28" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;char const*, std::allocator&lt;std::__cxx11::sub_match&lt;char const*&gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,328,498,539 samples, 0.05%)</title><rect x="150.7" y="1381" width="0.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="153.70" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1333" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1343.5" ></text>
</g>
<g >
<title>code_store::statement_t::last_error (345,417,448 samples, 0.01%)</title><rect x="126.9" y="1413" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="129.88" y="1423.5" ></text>
</g>
<g >
<title>zap_pte_range (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1317" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="170.51" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="229" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="239.5" ></text>
</g>
<g >
<title>schedule_idle (845,972,010 samples, 0.03%)</title><rect x="1189.6" y="1541" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1192.57" y="1551.5" ></text>
</g>
<g >
<title>yield_task_fair (4,535,372,524 samples, 0.17%)</title><rect x="541.4" y="1413" width="2.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="544.39" y="1423.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2,210,835,584 samples, 0.08%)</title><rect x="913.1" y="1445" width="1.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="916.11" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="405" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="415.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (828,599,197 samples, 0.03%)</title><rect x="218.0" y="1573" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="221.02" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,071,070,022 samples, 0.08%)</title><rect x="162.1" y="805" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.10" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (493,481,263 samples, 0.02%)</title><rect x="1145.9" y="1557" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1148.87" y="1567.5" ></text>
</g>
<g >
<title>__gup_longterm_locked (368,445,666 samples, 0.01%)</title><rect x="1145.9" y="1445" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1148.92" y="1455.5" ></text>
</g>
<g >
<title>browse_engine::query_include_path_suggestions_impl (5,010,634,315 samples, 0.19%)</title><rect x="50.7" y="1557" width="2.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="53.71" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="773" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.76" y="783.5" ></text>
</g>
<g >
<title>update_rq_clock (305,110,697 samples, 0.01%)</title><rect x="1046.1" y="1333" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1049.07" y="1343.5" ></text>
</g>
<g >
<title>psi_task_switch (536,887,483 samples, 0.02%)</title><rect x="1048.8" y="1301" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1051.80" y="1311.5" ></text>
</g>
<g >
<title>__schedule (299,224,407 samples, 0.01%)</title><rect x="160.2" y="1525" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="163.24" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (295,927,993 samples, 0.01%)</title><rect x="146.4" y="1413" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="149.36" y="1423.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (688,966,610 samples, 0.03%)</title><rect x="204.7" y="1589" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="207.73" y="1599.5" ></text>
</g>
<g >
<title>__fsnotify_parent (345,318,661 samples, 0.01%)</title><rect x="168.2" y="1381" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="171.21" y="1391.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,223,573,280 samples, 0.05%)</title><rect x="1187.5" y="1493" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1190.52" y="1503.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (540,924,827 samples, 0.02%)</title><rect x="159.4" y="1477" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="162.39" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="661" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1205" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,048,551,947 samples, 0.08%)</title><rect x="162.1" y="789" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.11" y="799.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;char const*, std::allocator&lt;std::__cxx11::sub_match&lt;char const*&gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (338,740,340 samples, 0.01%)</title><rect x="42.2" y="1589" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="45.18" y="1599.5" ></text>
</g>
<g >
<title>vfs_iter_write (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1301" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1004.48" y="1311.5" ></text>
</g>
<g >
<title>__clone (820,591,937 samples, 0.03%)</title><rect x="1168.1" y="1605" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1171.10" y="1615.5" ></text>
</g>
<g >
<title>whereLoopAddBtreeIndex (295,362,802 samples, 0.01%)</title><rect x="52.6" y="1349" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="55.64" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1525" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1535.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (854,609,057 samples, 0.03%)</title><rect x="156.5" y="1493" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="159.48" y="1503.5" ></text>
</g>
<g >
<title>sqlite3FinishCoding (231,889,184 samples, 0.01%)</title><rect x="49.7" y="1381" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="52.67" y="1391.5" ></text>
</g>
<g >
<title>evict (1,767,273,430 samples, 0.07%)</title><rect x="1061.0" y="1253" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1063.96" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,176,970,055 samples, 0.08%)</title><rect x="1050.2" y="1429" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1053.24" y="1439.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (4,508,165,621 samples, 0.17%)</title><rect x="1166.1" y="1589" width="2.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1169.09" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1269" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.37" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="533" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="543.5" ></text>
</g>
<g >
<title>walk_il_subtree (3,647,288,160 samples, 0.14%)</title><rect x="13.1" y="1605" width="1.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="16.08" y="1615.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (691,082,268 samples, 0.03%)</title><rect x="1147.4" y="1589" width="0.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1150.41" y="1599.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (246,221,244 samples, 0.01%)</title><rect x="1001.5" y="1253" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1004.48" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1205" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1215.5" ></text>
</g>
<g >
<title>__handle_mm_fault (232,834,959 samples, 0.01%)</title><rect x="1145.7" y="1381" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1148.70" y="1391.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (703,252,628 samples, 0.03%)</title><rect x="1187.5" y="1429" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.54" y="1439.5" ></text>
</g>
<g >
<title>psi_group_change (1,346,830,589 samples, 0.05%)</title><rect x="199.2" y="1493" width="0.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="202.22" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="981" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="581" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (342,396,088 samples, 0.01%)</title><rect x="330.7" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="333.74" y="1551.5" ></text>
</g>
<g >
<title>select_task_rq_fair (378,716,474 samples, 0.01%)</title><rect x="1050.8" y="1333" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1053.78" y="1343.5" ></text>
</g>
<g >
<title>enframe (270,636,809 samples, 0.01%)</title><rect x="11.5" y="1605" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="14.55" y="1615.5" ></text>
</g>
<g >
<title>browse_engine::query_cik_in_file (3,345,369,366 samples, 0.13%)</title><rect x="53.2" y="1541" width="1.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="56.19" y="1551.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (270,647,970 samples, 0.01%)</title><rect x="1145.7" y="1445" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1148.69" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="293" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="303.5" ></text>
</g>
<g >
<title>__alloc_file (3,052,382,450 samples, 0.11%)</title><rect x="1056.2" y="1301" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1059.22" y="1311.5" ></text>
</g>
<g >
<title>lind_sem_wait (2,957,326,446 samples, 0.11%)</title><rect x="1073.0" y="1541" width="1.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1076.00" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1125" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1135.5" ></text>
</g>
<g >
<title>psi_task_switch (1,713,009,367 samples, 0.06%)</title><rect x="1068.6" y="1285" width="0.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1071.63" y="1295.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (509,727,978 samples, 0.02%)</title><rect x="1189.3" y="1541" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.34" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1029" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1039.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (493,481,263 samples, 0.02%)</title><rect x="1145.9" y="1525" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1148.87" y="1535.5" ></text>
</g>
<g >
<title>ovl_permission (1,340,795,850 samples, 0.05%)</title><rect x="60.0" y="1429" width="0.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="63.00" y="1439.5" ></text>
</g>
<g >
<title>__schedule (622,914,615 samples, 0.02%)</title><rect x="176.9" y="1541" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="179.87" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1045" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1055.5" ></text>
</g>
<g >
<title>sqlite3BtreeTableMoveto (12,926,502,505 samples, 0.49%)</title><rect x="131.7" y="1349" width="5.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="134.68" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="245" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;char const*, std::allocator&lt;std::__cxx11::sub_match&lt;char const*&gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (4,534,345,940 samples, 0.17%)</title><rect x="150.0" y="1413" width="2.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="153.00" y="1423.5" ></text>
</g>
<g >
<title>dequeue_task (3,730,832,518 samples, 0.14%)</title><rect x="1065.6" y="1285" width="1.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1068.56" y="1295.5" ></text>
</g>
<g >
<title>wake_up_process (5,232,293,545 samples, 0.20%)</title><rect x="179.0" y="1397" width="2.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="182.02" y="1407.5" ></text>
</g>
<g >
<title>fstatat64 (4,722,089,677 samples, 0.18%)</title><rect x="55.9" y="1589" width="2.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="58.92" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (515,054,977 samples, 0.02%)</title><rect x="1168.1" y="1573" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1171.11" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="1477" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="168.40" y="1487.5" ></text>
</g>
<g >
<title>walk_component (837,777,776 samples, 0.03%)</title><rect x="57.0" y="1445" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="59.99" y="1455.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get_mut (640,894,545 samples, 0.02%)</title><rect x="1072.5" y="1493" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1075.52" y="1503.5" ></text>
</g>
<g >
<title>kthread (3,913,603,457 samples, 0.15%)</title><rect x="175.5" y="1589" width="1.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="178.45" y="1599.5" ></text>
</g>
<g >
<title>destroy_inode (1,094,844,566 samples, 0.04%)</title><rect x="1061.1" y="1237" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1064.14" y="1247.5" ></text>
</g>
<g >
<title>sqlite3LockAndPrepare (1,819,235,088 samples, 0.07%)</title><rect x="48.2" y="1477" width="0.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="51.16" y="1487.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1,922,986,257 samples, 0.07%)</title><rect x="561.3" y="1413" width="0.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="564.33" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (296,012,180 samples, 0.01%)</title><rect x="152.5" y="1413" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="155.51" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="277" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="287.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (888,111,123 samples, 0.03%)</title><rect x="277.3" y="1557" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="280.30" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (344,255,523 samples, 0.01%)</title><rect x="143.1" y="1445" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="146.13" y="1455.5" ></text>
</g>
<g >
<title>sqlite3RunParser (1,517,300,993 samples, 0.06%)</title><rect x="50.0" y="1461" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="53.03" y="1471.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (467,148,077 samples, 0.02%)</title><rect x="1189.3" y="1525" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1192.34" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="629" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="639.5" ></text>
</g>
<g >
<title>strlen (787,179,453 samples, 0.03%)</title><rect x="153.9" y="1605" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="156.89" y="1615.5" ></text>
</g>
<g >
<title>getname_flags (982,406,799 samples, 0.04%)</title><rect x="61.2" y="1493" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="64.23" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,634,521,268 samples, 0.06%)</title><rect x="165.4" y="549" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="168.40" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (246,680,735 samples, 0.01%)</title><rect x="869.2" y="1429" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="872.16" y="1439.5" ></text>
</g>
<g >
<title>code_store::statement_t::log_stmt_error_impl (246,776,585 samples, 0.01%)</title><rect x="36.9" y="1589" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="39.89" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="1045" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="1055.5" ></text>
</g>
<g >
<title>get_unmapped_area (246,765,927 samples, 0.01%)</title><rect x="91.7" y="1493" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="94.74" y="1503.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (476,398,220 samples, 0.02%)</title><rect x="193.2" y="1461" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="196.23" y="1471.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (6,024,836,798 samples, 0.23%)</title><rect x="1059.7" y="1381" width="2.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1062.70" y="1391.5" ></text>
</g>
<g >
<title>handle_pte_fault (232,834,959 samples, 0.01%)</title><rect x="1145.7" y="1365" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1148.70" y="1375.5" ></text>
</g>
<g >
<title>ret_from_fork (3,913,603,457 samples, 0.15%)</title><rect x="175.5" y="1605" width="1.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="178.45" y="1615.5" ></text>
</g>
<g >
<title>strlen (542,875,535 samples, 0.02%)</title><rect x="43.0" y="1589" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="46.03" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,325,169,364 samples, 0.05%)</title><rect x="164.8" y="1189" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.76" y="1199.5" ></text>
</g>
<g >
<title>CStoreRequest::~CStoreRequest (344,778,554 samples, 0.01%)</title><rect x="138.6" y="1445" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="141.59" y="1455.5" ></text>
</g>
<g >
<title>__entry_text_start (245,163,543 samples, 0.01%)</title><rect x="59.2" y="1573" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="62.24" y="1583.5" ></text>
</g>
<g >
<title>code_store::statement_t::step (21,040,251,623 samples, 0.79%)</title><rect x="128.4" y="1413" width="9.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="131.39" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (246,680,735 samples, 0.01%)</title><rect x="869.2" y="1397" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="872.16" y="1407.5" ></text>
</g>
<g >
<title>code_store::statement_t::step (294,826,368 samples, 0.01%)</title><rect x="149.0" y="1413" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="152.04" y="1423.5" ></text>
</g>
<g >
<title>tick_program_event (705,438,145 samples, 0.03%)</title><rect x="181.6" y="1429" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="184.64" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (612,235,191 samples, 0.02%)</title><rect x="161.5" y="1141" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="164.46" y="1151.5" ></text>
</g>
<g >
<title>__strchrnul (3,935,220,329 samples, 0.15%)</title><rect x="34.7" y="1589" width="1.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="37.67" y="1599.5" ></text>
</g>
<g >
<title>sqlite3BtreeTableMoveto (2,310,646,139 samples, 0.09%)</title><rect x="124.2" y="1381" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="127.17" y="1391.5" ></text>
</g>
<g >
<title>yield_task_fair (1,898,579,693 samples, 0.07%)</title><rect x="545.4" y="1429" width="0.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="548.36" y="1439.5" ></text>
</g>
<g >
<title>clock_gettime (249,690,526 samples, 0.01%)</title><rect x="1071.5" y="1413" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.54" y="1423.5" ></text>
</g>
<g >
<title>accept (21,369,264,687 samples, 0.80%)</title><rect x="1053.0" y="1461" width="9.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1055.95" y="1471.5" ></text>
</g>
<g >
<title>sqlite3BtreeIndexMoveto (1,675,378,888 samples, 0.06%)</title><rect x="130.9" y="1365" width="0.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="133.92" y="1375.5" ></text>
</g>
<g >
<title>CExtStore::GetFiles (2,410,367,410 samples, 0.09%)</title><rect x="49.0" y="1509" width="1.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="51.97" y="1519.5" ></text>
</g>
<g >
<title>search_binary_handler (496,151,218 samples, 0.02%)</title><rect x="167.5" y="1493" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="170.51" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,681,560,987 samples, 0.06%)</title><rect x="162.1" y="661" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="165.13" y="671.5" ></text>
</g>
<g >
<title>kmem_cache_free (472,559,664 samples, 0.02%)</title><rect x="176.2" y="1445" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="179.21" y="1455.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (667,333,321 samples, 0.03%)</title><rect x="1180.7" y="1477" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1183.66" y="1487.5" ></text>
</g>
<g >
<title>__fdget (3,884,861,759 samples, 0.15%)</title><rect x="1034.9" y="1365" width="1.7" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1037.91" y="1375.5" ></text>
</g>
<g >
<title>vfs_iter_write (672,356,424 samples, 0.03%)</title><rect x="168.4" y="1365" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="171.38" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;char const*&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;char const*&gt; &gt; &gt;::operator= (1,432,155,359 samples, 0.05%)</title><rect x="151.4" y="1397" width="0.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="154.38" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,419,622 samples, 0.01%)</title><rect x="164.4" y="293" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.37" y="303.5" ></text>
</g>
<g >
<title>NaClSysPollDecoder (1,515,107,882,301 samples, 56.91%)</title><rect x="329.9" y="1573" width="671.6" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="332.89" y="1583.5" >NaClSysPollDecoder</text>
</g>
<g >
<title>update_blocked_averages (579,563,679 samples, 0.02%)</title><rect x="1181.4" y="1397" width="0.3" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1184.44" y="1407.5" ></text>
</g>
<g >
<title>irq_exit_rcu (257,922,284 samples, 0.01%)</title><rect x="1187.9" y="1461" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1190.93" y="1471.5" ></text>
</g>
<g >
<title>CCodeStoreManager::request (541,461,880 samples, 0.02%)</title><rect x="149.0" y="1445" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="151.97" y="1455.5" ></text>
</g>
<g >
<title>dequeue_task_fair (3,630,650,854 samples, 0.14%)</title><rect x="1065.6" y="1269" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1068.60" y="1279.5" ></text>
</g>
<g >
<title>size_to_class (1,378,469,583 samples, 0.05%)</title><rect x="120.2" y="1605" width="0.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="123.17" y="1615.5" ></text>
</g>
<g >
<title>newidle_balance (867,503,402 samples, 0.03%)</title><rect x="1048.3" y="1269" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1051.29" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (612,235,191 samples, 0.02%)</title><rect x="161.5" y="229" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.46" y="239.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (321,771,237 samples, 0.01%)</title><rect x="157.3" y="1525" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="160.25" y="1535.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (5,922,929,848 samples, 0.22%)</title><rect x="1173.4" y="1605" width="2.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1176.43" y="1615.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1,360,498,801 samples, 0.05%)</title><rect x="119.2" y="1413" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="122.16" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::sem_wait_syscall (2,118,735,728 samples, 0.08%)</title><rect x="1073.4" y="1509" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1076.38" y="1519.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (8,313,225,172 samples, 0.31%)</title><rect x="121.8" y="1413" width="3.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="124.79" y="1423.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (327,750,987 samples, 0.01%)</title><rect x="182.6" y="1365" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="185.58" y="1375.5" ></text>
</g>
<g >
<title>leftmatch_fb (527,700,114 samples, 0.02%)</title><rect x="160.4" y="1269" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="163.40" y="1279.5" ></text>
</g>
<g >
<title>native_write_msr (302,162,420 samples, 0.01%)</title><rect x="181.8" y="1397" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="184.77" y="1407.5" ></text>
</g>
<g >
<title>__do_softirq (2,680,319,897 samples, 0.10%)</title><rect x="175.7" y="1541" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="178.68" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,210,678,656 samples, 0.05%)</title><rect x="162.1" y="517" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.15" y="527.5" ></text>
</g>
<g >
<title>[sel_ldr] (3,513,222,694 samples, 0.13%)</title><rect x="1151.6" y="1589" width="1.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1154.58" y="1599.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (460,193,190 samples, 0.02%)</title><rect x="1049.4" y="1365" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1052.40" y="1375.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (4,193,404,954 samples, 0.16%)</title><rect x="319.6" y="1541" width="1.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="322.63" y="1551.5" ></text>
</g>
<g >
<title>__poll (927,138,678 samples, 0.03%)</title><rect x="167.7" y="1557" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="170.75" y="1567.5" ></text>
</g>
</g>
</svg>
