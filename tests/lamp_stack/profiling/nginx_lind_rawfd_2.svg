<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1702" onload="init(evt)" viewBox="0 0 1200 1702" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1702.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1685" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1685" > </text>
<g id="frames">
<g >
<title>[sel_ldr] (137,217,948,810 samples, 15.11%)</title><rect x="613.5" y="1621" width="178.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="616.50" y="1631.5" >[sel_ldr]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="293" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="303.5" >std..</text>
</g>
<g >
<title>__libc_start_main (329,725,266 samples, 0.04%)</title><rect x="855.6" y="1605" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="858.58" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (381,568,102 samples, 0.04%)</title><rect x="337.8" y="1365" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="340.79" y="1375.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (111,938,906 samples, 0.01%)</title><rect x="786.7" y="1493" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="789.69" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="405" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="415.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (3,871,923,019 samples, 0.43%)</title><rect x="767.6" y="1557" width="5.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="770.61" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="869" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1349" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="1359.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (98,739,849 samples, 0.01%)</title><rect x="602.6" y="1621" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="605.64" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="981" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="991.5" >std..</text>
</g>
<g >
<title>cfree (244,793,651 samples, 0.03%)</title><rect x="391.2" y="85" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="394.22" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="517" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="527.5" >std..</text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (144,893,285 samples, 0.02%)</title><rect x="228.4" y="373" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="231.42" y="383.5" ></text>
</g>
<g >
<title>i_callback (142,750,938 samples, 0.02%)</title><rect x="590.0" y="1477" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="592.95" y="1487.5" ></text>
</g>
<g >
<title>rcu_core (322,940,778 samples, 0.04%)</title><rect x="591.2" y="1397" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="594.16" y="1407.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (111,029,269 samples, 0.01%)</title><rect x="1171.1" y="1621" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1174.06" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more@plt (89,325,875 samples, 0.01%)</title><rect x="469.4" y="69" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="472.37" y="79.5" ></text>
</g>
<g >
<title>malloc (1,014,443,072 samples, 0.11%)</title><rect x="268.3" y="741" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="271.31" y="751.5" ></text>
</g>
<g >
<title>xas_start (83,879,203 samples, 0.01%)</title><rect x="68.4" y="1397" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="71.42" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1125" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1135.5" ></text>
</g>
<g >
<title>sched_clock (91,400,857 samples, 0.01%)</title><rect x="77.1" y="1477" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="80.06" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="853" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="863.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (117,003,105 samples, 0.01%)</title><rect x="1131.2" y="1413" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1134.16" y="1423.5" ></text>
</g>
<g >
<title>cfree (818,119,340 samples, 0.09%)</title><rect x="251.4" y="629" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="254.45" y="639.5" ></text>
</g>
<g >
<title>__unfreeze_partials (146,261,267 samples, 0.02%)</title><rect x="852.8" y="933" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="855.82" y="943.5" ></text>
</g>
<g >
<title>rcu_do_batch (307,939,614 samples, 0.03%)</title><rect x="1181.9" y="1381" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1184.88" y="1391.5" ></text>
</g>
<g >
<title>init_file (262,190,765 samples, 0.03%)</title><rect x="579.5" y="1477" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="582.54" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (276,532,398 samples, 0.03%)</title><rect x="475.1" y="85" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.13" y="95.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,560,302,478 samples, 0.17%)</title><rect x="730.4" y="1157" width="2.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="733.43" y="1167.5" ></text>
</g>
<g >
<title>cfree (1,405,641,154 samples, 0.15%)</title><rect x="313.7" y="1205" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="316.73" y="1215.5" ></text>
</g>
<g >
<title>mod_lruvec_page_state (97,787,912 samples, 0.01%)</title><rect x="1080.9" y="1317" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1083.92" y="1327.5" ></text>
</g>
<g >
<title>cfree (96,671,239 samples, 0.01%)</title><rect x="341.5" y="1541" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="344.49" y="1551.5" ></text>
</g>
<g >
<title>futex_wait_setup (923,808,065 samples, 0.10%)</title><rect x="1056.7" y="1541" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1059.66" y="1551.5" ></text>
</g>
<g >
<title>execute_command (236,977,313 samples, 0.03%)</title><rect x="854.8" y="1493" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="857.83" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,135,630,471 samples, 0.13%)</title><rect x="306.0" y="1125" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="308.99" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (96,065,755 samples, 0.01%)</title><rect x="170.1" y="117" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="173.09" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1141" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1151.5" ></text>
</g>
<g >
<title>read (90,308,389 samples, 0.01%)</title><rect x="1170.6" y="1509" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1173.61" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1365" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1375.5" >std..</text>
</g>
<g >
<title>malloc (854,065,806 samples, 0.09%)</title><rect x="331.0" y="1317" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="333.98" y="1327.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (430,352,148 samples, 0.05%)</title><rect x="533.3" y="1557" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="536.28" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="645" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="655.5" >std..</text>
</g>
<g >
<title>rcu_core_si (381,760,065 samples, 0.04%)</title><rect x="1180.9" y="1525" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1183.86" y="1535.5" ></text>
</g>
<g >
<title>Glob::isIgnored (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1573" width="6.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="374.25" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (77,754,104 samples, 0.01%)</title><rect x="209.8" y="181" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="212.80" y="191.5" ></text>
</g>
<g >
<title>aeMain (204,523,681 samples, 0.02%)</title><rect x="1170.5" y="1573" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1173.54" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (370,257,367 samples, 0.04%)</title><rect x="170.4" y="197" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (37,736,319,679 samples, 4.16%)</title><rect x="200.0" y="613" width="49.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="203.01" y="623.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1509" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1519.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (700,532,856 samples, 0.08%)</title><rect x="1080.6" y="1493" width="0.9" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1083.63" y="1503.5" ></text>
</g>
<g >
<title>dequeue_task_fair (232,734,198 samples, 0.03%)</title><rect x="1175.6" y="1477" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1178.56" y="1487.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (140,362,377 samples, 0.02%)</title><rect x="1073.3" y="1365" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1076.30" y="1375.5" ></text>
</g>
<g >
<title>operator new (218,899,912 samples, 0.02%)</title><rect x="376.9" y="133" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="379.85" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1445" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="1455.5" ></text>
</g>
<g >
<title>update_curr (98,595,133 samples, 0.01%)</title><rect x="72.5" y="1429" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="75.49" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (33,043,071,917 samples, 3.64%)</title><rect x="1033.9" y="1605" width="43.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1036.95" y="1615.5" >do_s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="613" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="623.5" ></text>
</g>
<g >
<title>sendto (350,607,832 samples, 0.04%)</title><rect x="787.1" y="1509" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="790.06" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="613" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="623.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (229,916,305 samples, 0.03%)</title><rect x="652.4" y="1589" width="0.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="655.42" y="1599.5" ></text>
</g>
<g >
<title>thread_main (204,523,681 samples, 0.02%)</title><rect x="1170.5" y="1589" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1173.54" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (329,725,266 samples, 0.04%)</title><rect x="855.6" y="1589" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="858.58" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="821" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_futex (9,814,516,644 samples, 1.08%)</title><rect x="1048.9" y="1589" width="12.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1051.88" y="1599.5" ></text>
</g>
<g >
<title>psi_task_switch (174,530,972 samples, 0.02%)</title><rect x="145.9" y="1525" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="148.91" y="1535.5" ></text>
</g>
<g >
<title>call_rcu (97,410,792 samples, 0.01%)</title><rect x="1179.9" y="1365" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1182.88" y="1375.5" ></text>
</g>
<g >
<title>cpu_startup_entry (37,834,416,738 samples, 4.17%)</title><rect x="1081.6" y="1589" width="49.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1084.56" y="1599.5" >cpu_..</text>
</g>
<g >
<title>cfree (134,088,120 samples, 0.01%)</title><rect x="379.9" y="101" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="382.94" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1477" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1487.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="437" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="447.5" >std..</text>
</g>
<g >
<title>pick_next_task (158,231,402 samples, 0.02%)</title><rect x="583.7" y="1493" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="586.71" y="1503.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (158,205,289 samples, 0.02%)</title><rect x="1124.8" y="1525" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1127.80" y="1535.5" ></text>
</g>
<g >
<title>operator new (603,511,619 samples, 0.07%)</title><rect x="391.5" y="85" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="394.54" y="95.5" ></text>
</g>
<g >
<title>__kmem_cache_free (203,522,947 samples, 0.02%)</title><rect x="852.7" y="981" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="855.75" y="991.5" ></text>
</g>
<g >
<title>xas_descend (98,423,680 samples, 0.01%)</title><rect x="743.4" y="1093" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="746.41" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="309" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1061" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1071.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (183,860,756 samples, 0.02%)</title><rect x="502.5" y="1525" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="505.46" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="773" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="783.5" >std..</text>
</g>
<g >
<title>cpuidle_enter_state (4,313,035,371 samples, 0.48%)</title><rect x="591.0" y="1509" width="5.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="593.98" y="1519.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (137,913,155 samples, 0.02%)</title><rect x="1076.9" y="1605" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1079.90" y="1615.5" ></text>
</g>
<g >
<title>_start (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1621" width="11.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="845.66" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,806,911 samples, 0.02%)</title><rect x="423.8" y="101" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="426.77" y="111.5" ></text>
</g>
<g >
<title>malloc (735,234,129 samples, 0.08%)</title><rect x="288.0" y="933" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="290.97" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="677" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (194,469,077 samples, 0.02%)</title><rect x="855.7" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="858.66" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_execve (192,085,965 samples, 0.02%)</title><rect x="503.2" y="1589" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="506.17" y="1599.5" ></text>
</g>
<g >
<title>restore_fpregs_from_fpstate (247,074,112 samples, 0.03%)</title><rect x="80.8" y="1525" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="83.80" y="1535.5" ></text>
</g>
<g >
<title>futex_wait (2,040,156,607 samples, 0.22%)</title><rect x="71.4" y="1541" width="2.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="74.35" y="1551.5" ></text>
</g>
<g >
<title>__calc_delta (220,406,901 samples, 0.02%)</title><rect x="1064.7" y="1477" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1067.66" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,385,192 samples, 0.03%)</title><rect x="295.1" y="997" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="298.08" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="645" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="655.5" ></text>
</g>
<g >
<title>rcu_core_si (185,393,407 samples, 0.02%)</title><rect x="531.1" y="1413" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="534.07" y="1423.5" ></text>
</g>
<g >
<title>kmem_cache_free (77,399,163 samples, 0.01%)</title><rect x="1179.6" y="1445" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1182.60" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="645" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="655.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (89,814,705 samples, 0.01%)</title><rect x="740.1" y="1157" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="743.14" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="917" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="927.5" ></text>
</g>
<g >
<title>poll_idle (446,254,019 samples, 0.05%)</title><rect x="105.4" y="1429" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="108.39" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="757" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="767.5" ></text>
</g>
<g >
<title>ext4_invalidate_folio (3,927,672,694 samples, 0.43%)</title><rect x="849.3" y="1221" width="5.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="852.28" y="1231.5" ></text>
</g>
<g >
<title>new_inode_pseudo (2,406,717,307 samples, 0.27%)</title><rect x="1037.0" y="1525" width="3.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1040.03" y="1535.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (851,371,872 samples, 0.09%)</title><rect x="838.7" y="1605" width="1.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="841.70" y="1615.5" ></text>
</g>
<g >
<title>lookup_fast (461,344,204 samples, 0.05%)</title><rect x="349.2" y="1381" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="352.23" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="853" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1173" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="597" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="757" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="767.5" ></text>
</g>
<g >
<title>do_idle (243,869,909 samples, 0.03%)</title><rect x="534.5" y="1509" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="537.51" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="981" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="991.5" ></text>
</g>
<g >
<title>poll_freewait (654,641,227 samples, 0.07%)</title><rect x="494.8" y="1461" width="0.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="497.78" y="1471.5" ></text>
</g>
<g >
<title>mpage_prepare_extent_to_map (183,122,043 samples, 0.02%)</title><rect x="83.8" y="1397" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="86.83" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1141" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="1151.5" ></text>
</g>
<g >
<title>update_curr (107,961,783 samples, 0.01%)</title><rect x="528.7" y="1493" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="531.69" y="1503.5" ></text>
</g>
<g >
<title>rcu_core_si (544,516,363 samples, 0.06%)</title><rect x="589.6" y="1525" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="592.63" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="821" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="831.5" ></text>
</g>
<g >
<title>rcu_core_si (246,522,547 samples, 0.03%)</title><rect x="1136.5" y="1413" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1139.50" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="277" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="287.5" ></text>
</g>
<g >
<title>psi_task_change (652,944,867 samples, 0.07%)</title><rect x="1119.9" y="1477" width="0.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1122.89" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1429" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (668,774,333 samples, 0.07%)</title><rect x="239.5" y="485" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="242.48" y="495.5" ></text>
</g>
<g >
<title>alloc_file (633,315,087 samples, 0.07%)</title><rect x="579.4" y="1509" width="0.9" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="582.44" y="1519.5" ></text>
</g>
<g >
<title>hrtimer_init_sleeper (120,612,850 samples, 0.01%)</title><rect x="488.1" y="1413" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="491.09" y="1423.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDayDecoder (124,885,296 samples, 0.01%)</title><rect x="605.0" y="1621" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="608.00" y="1631.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (298,952,579 samples, 0.03%)</title><rect x="140.3" y="1477" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="143.27" y="1487.5" ></text>
</g>
<g >
<title>try_to_wake_up (115,489,478 samples, 0.01%)</title><rect x="1135.8" y="1525" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1138.81" y="1535.5" ></text>
</g>
<g >
<title>inotify_handle_inode_event (3,487,584,672 samples, 0.38%)</title><rect x="728.1" y="1269" width="4.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="731.14" y="1279.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (115,067,265 samples, 0.01%)</title><rect x="175.5" y="1541" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="178.49" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="661" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="671.5" ></text>
</g>
<g >
<title>sock_alloc (363,008,451 samples, 0.04%)</title><rect x="525.4" y="1541" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="528.40" y="1551.5" ></text>
</g>
<g >
<title>folio_clear_dirty_for_io (169,643,160 samples, 0.02%)</title><rect x="1081.2" y="1349" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1084.18" y="1359.5" ></text>
</g>
<g >
<title>__destroy_inode (456,431,463 samples, 0.05%)</title><rect x="1073.3" y="1397" width="0.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1076.27" y="1407.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Debounce::Debounce (92,085,987 samples, 0.01%)</title><rect x="503.5" y="1621" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="506.52" y="1631.5" ></text>
</g>
<g >
<title>find_busiest_group (171,486,089 samples, 0.02%)</title><rect x="1135.6" y="1429" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1138.59" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (424,689,475 samples, 0.05%)</title><rect x="263.4" y="693" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="266.44" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,557,263,614 samples, 0.39%)</title><rect x="210.0" y="261" width="4.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="213.02" y="271.5" ></text>
</g>
<g >
<title>pick_next_task (214,605,271 samples, 0.02%)</title><rect x="599.5" y="1525" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="602.51" y="1535.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (173,374,958 samples, 0.02%)</title><rect x="1130.3" y="1573" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1133.35" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (244,188,374 samples, 0.03%)</title><rect x="169.5" y="133" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="143.5" ></text>
</g>
<g >
<title>do_fcntl (83,987,572 samples, 0.01%)</title><rect x="71.0" y="1557" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="74.04" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="213" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="223.5" ></text>
</g>
<g >
<title>__slab_free (146,261,267 samples, 0.02%)</title><rect x="852.8" y="965" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="855.82" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (292,678,066 samples, 0.03%)</title><rect x="1066.6" y="1589" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1069.57" y="1599.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (112,742,087 samples, 0.01%)</title><rect x="1136.7" y="1365" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1139.67" y="1375.5" ></text>
</g>
<g >
<title>operator new (796,119,034 samples, 0.09%)</title><rect x="422.6" y="85" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="425.55" y="95.5" ></text>
</g>
<g >
<title>_raw_spin_lock (78,271,948 samples, 0.01%)</title><rect x="1177.4" y="1557" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1180.45" y="1567.5" ></text>
</g>
<g >
<title>__schedule (324,490,864 samples, 0.04%)</title><rect x="527.2" y="1509" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="530.25" y="1519.5" ></text>
</g>
<g >
<title>rw_verify_area (98,740,223 samples, 0.01%)</title><rect x="744.7" y="1333" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="747.71" y="1343.5" ></text>
</g>
<g >
<title>malloc (389,544,034 samples, 0.04%)</title><rect x="300.7" y="1061" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="303.70" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="869" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="879.5" ></text>
</g>
<g >
<title>apparmor_file_permission (221,896,035 samples, 0.02%)</title><rect x="370.7" y="1461" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="373.73" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (112,293,316 samples, 0.01%)</title><rect x="195.7" y="933" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="198.72" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="725" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="735.5" ></text>
</g>
<g >
<title>kmem_cache_free (225,329,768 samples, 0.02%)</title><rect x="82.5" y="1445" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="85.48" y="1455.5" ></text>
</g>
<g >
<title>do_iter_write (8,341,287,829 samples, 0.92%)</title><rect x="733.7" y="1301" width="10.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="736.74" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (626,302,494 samples, 0.07%)</title><rect x="205.0" y="197" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="208.04" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="805" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (139,655,916 samples, 0.02%)</title><rect x="205.6" y="165" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="208.60" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (81,773,295 samples, 0.01%)</title><rect x="377.8" y="85" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.84" y="95.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (246,522,547 samples, 0.03%)</title><rect x="1136.5" y="1557" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1139.50" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1381" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="533" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="543.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="997" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1007.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1093" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1103.5" ></text>
</g>
<g >
<title>___slab_alloc (127,162,361 samples, 0.01%)</title><rect x="1042.0" y="1461" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1044.96" y="1471.5" ></text>
</g>
<g >
<title>execute_command_internal (92,908,823 samples, 0.01%)</title><rect x="854.8" y="1333" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="857.83" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1509" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1519.5" ></text>
</g>
<g >
<title>security_file_free (101,064,989 samples, 0.01%)</title><rect x="80.4" y="1477" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="83.36" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1349" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="1359.5" ></text>
</g>
<g >
<title>uv__io_poll (221,706,375 samples, 0.02%)</title><rect x="479.7" y="1605" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="482.71" y="1615.5" ></text>
</g>
<g >
<title>new_inode_pseudo (556,408,274 samples, 0.06%)</title><rect x="1172.6" y="1525" width="0.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1175.64" y="1535.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (8,094,466,719 samples, 0.89%)</title><rect x="733.9" y="1253" width="10.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="736.87" y="1263.5" ></text>
</g>
<g >
<title>rseq_get_rseq_cs (105,263,312 samples, 0.01%)</title><rect x="497.1" y="1413" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="500.13" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="421" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="431.5" >std..</text>
</g>
<g >
<title>gettimens (5,674,862,167 samples, 0.63%)</title><rect x="779.2" y="1557" width="7.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="782.17" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (99,020,918 samples, 0.01%)</title><rect x="471.5" y="53" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="474.46" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1205" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1215.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,033,956,195 samples, 0.33%)</title><rect x="140.1" y="1557" width="4.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="143.13" y="1567.5" ></text>
</g>
<g >
<title>__fget_light (224,043,620 samples, 0.02%)</title><rect x="70.7" y="1541" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="73.71" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1317" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (519,607,040 samples, 0.06%)</title><rect x="325.4" y="1269" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="328.43" y="1279.5" ></text>
</g>
<g >
<title>call_cpuidle (384,099,998 samples, 0.04%)</title><rect x="1189.0" y="1477" width="0.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1192.04" y="1487.5" ></text>
</g>
<g >
<title>__free_one_page (384,138,143 samples, 0.04%)</title><rect x="843.7" y="1157" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="846.68" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (431,365,102 samples, 0.05%)</title><rect x="468.9" y="149" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="471.93" y="159.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (98,480,388 samples, 0.01%)</title><rect x="853.9" y="1061" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="856.90" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1525" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,781,042,281 samples, 0.31%)</title><rect x="140.2" y="1509" width="3.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="143.22" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="533" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="543.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (1,180,189,501 samples, 0.13%)</title><rect x="738.8" y="1189" width="1.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="741.79" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,320,693,153 samples, 3.45%)</title><rect x="428.2" y="101" width="40.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="111.5" >std..</text>
</g>
<g >
<title>vfs_iter_write (8,341,287,829 samples, 0.92%)</title><rect x="733.7" y="1317" width="10.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="736.74" y="1327.5" ></text>
</g>
<g >
<title>__slab_free (91,830,694 samples, 0.01%)</title><rect x="1084.0" y="1333" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1087.04" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (98,479,201,967 samples, 10.85%)</title><rect x="190.9" y="1285" width="128.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="193.90" y="1295.5" >std::__detail::_..</text>
</g>
<g >
<title>override_creds (79,630,886 samples, 0.01%)</title><rect x="351.7" y="1397" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="354.65" y="1407.5" ></text>
</g>
<g >
<title>schedule (569,054,473 samples, 0.06%)</title><rect x="136.9" y="1557" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.86" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="437" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="837" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (160,317,196 samples, 0.02%)</title><rect x="377.2" y="149" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="380.18" y="159.5" ></text>
</g>
<g >
<title>[bash] (92,908,823 samples, 0.01%)</title><rect x="854.8" y="1317" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="857.83" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1061" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,799,621,294 samples, 0.97%)</title><rect x="203.3" y="325" width="11.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="206.26" y="335.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1,682,243,920 samples, 0.19%)</title><rect x="1077.8" y="1573" width="2.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1080.85" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="725" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (331,869,245 samples, 0.04%)</title><rect x="408.7" y="69" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="411.75" y="79.5" ></text>
</g>
<g >
<title>rcu_core_si (107,845,135 samples, 0.01%)</title><rect x="1185.9" y="1397" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1188.92" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_lock (96,278,811 samples, 0.01%)</title><rect x="729.1" y="1253" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="732.10" y="1263.5" ></text>
</g>
<g >
<title>NaCl_trampoline_code_end (197,452,121 samples, 0.02%)</title><rect x="745.2" y="1541" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="748.23" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="293" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="303.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (174,786,371 samples, 0.02%)</title><rect x="526.2" y="1509" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="529.16" y="1519.5" ></text>
</g>
<g >
<title>malloc (603,511,619 samples, 0.07%)</title><rect x="391.5" y="69" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="394.54" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="325" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="335.5" ></text>
</g>
<g >
<title>clock_gettime (5,487,979,427 samples, 0.60%)</title><rect x="779.3" y="1541" width="7.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="782.29" y="1551.5" ></text>
</g>
<g >
<title>__update_load_avg_se (215,529,842 samples, 0.02%)</title><rect x="1119.2" y="1429" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1122.22" y="1439.5" ></text>
</g>
<g >
<title>start_secondary (246,522,547 samples, 0.03%)</title><rect x="1136.5" y="1605" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1139.50" y="1615.5" ></text>
</g>
<g >
<title>kmem_cache_free (94,129,857 samples, 0.01%)</title><rect x="591.4" y="1333" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="594.38" y="1343.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (357,411,681 samples, 0.04%)</title><rect x="1061.1" y="1509" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1064.13" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1125" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="421" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="431.5" ></text>
</g>
<g >
<title>alloc_inode (471,796,277 samples, 0.05%)</title><rect x="578.8" y="1509" width="0.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="581.78" y="1519.5" ></text>
</g>
<g >
<title>wb_do_writeback (573,167,647 samples, 0.06%)</title><rect x="83.3" y="1525" width="0.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="86.33" y="1535.5" ></text>
</g>
<g >
<title>_IO_file_open (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1493" width="11.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="845.66" y="1503.5" ></text>
</g>
<g >
<title>try_to_wake_up (435,885,451 samples, 0.05%)</title><rect x="584.9" y="1525" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="587.88" y="1535.5" ></text>
</g>
<g >
<title>get_page_from_freelist (516,149,819 samples, 0.06%)</title><rect x="737.1" y="1125" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="740.10" y="1135.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (237,230,126 samples, 0.03%)</title><rect x="168.5" y="1589" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="171.53" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1029" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1039.5" >st..</text>
</g>
<g >
<title>___slab_alloc (84,222,782 samples, 0.01%)</title><rect x="133.0" y="1461" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="135.96" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (127,354,905 samples, 0.01%)</title><rect x="487.2" y="1397" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="490.20" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,122,493,415 samples, 1.23%)</title><rect x="483.0" y="1509" width="14.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="485.98" y="1519.5" ></text>
</g>
<g >
<title>do_accept (2,204,758,597 samples, 0.24%)</title><rect x="578.1" y="1557" width="2.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="581.13" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1189" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="1199.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1,370,930,201 samples, 0.15%)</title><rect x="741.2" y="1157" width="1.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="744.22" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,275,756,710 samples, 0.47%)</title><rect x="469.5" y="149" width="5.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="159.5" ></text>
</g>
<g >
<title>psi_group_change (122,883,082 samples, 0.01%)</title><rect x="73.4" y="1461" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="76.36" y="1471.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (727,754,243 samples, 0.08%)</title><rect x="1189.0" y="1589" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1191.98" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (87,806,840 samples, 0.01%)</title><rect x="1172.4" y="1509" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1175.38" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1573" width="3.7" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="380.61" y="1583.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (686,806,990 samples, 0.08%)</title><rect x="741.5" y="1125" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="744.52" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="341" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1301" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1311.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (127,899,573,727 samples, 14.09%)</title><rect x="175.6" y="1557" width="166.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="178.64" y="1567.5" >Watcher::isIgnored</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1429" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1557" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1567.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1429" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1439.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="693" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="703.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1557" width="11.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="845.66" y="1567.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (1,005,829,447 samples, 0.11%)</title><rect x="1043.0" y="1509" width="1.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1045.97" y="1519.5" ></text>
</g>
<g >
<title>enqueue_task_fair (266,369,591 samples, 0.03%)</title><rect x="144.4" y="1477" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="147.42" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (103,004,829 samples, 0.01%)</title><rect x="855.4" y="1621" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="858.44" y="1631.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (171,853,156 samples, 0.02%)</title><rect x="1083.3" y="1461" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1086.31" y="1471.5" ></text>
</g>
<g >
<title>futex_q_lock (142,760,605 samples, 0.02%)</title><rect x="73.8" y="1509" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="76.80" y="1519.5" ></text>
</g>
<g >
<title>malloc (195,317,886 samples, 0.02%)</title><rect x="263.7" y="661" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="266.70" y="671.5" ></text>
</g>
<g >
<title>psi_group_change (524,502,160 samples, 0.06%)</title><rect x="1120.0" y="1461" width="0.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1122.95" y="1471.5" ></text>
</g>
<g >
<title>vfs_getattr (850,345,582 samples, 0.09%)</title><rect x="352.0" y="1413" width="1.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="355.02" y="1423.5" ></text>
</g>
<g >
<title>filemap_add_folio (1,862,536,200 samples, 0.21%)</title><rect x="734.6" y="1189" width="2.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="737.62" y="1199.5" ></text>
</g>
<g >
<title>__schedule (279,636,124 samples, 0.03%)</title><rect x="1133.6" y="1477" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1136.62" y="1487.5" ></text>
</g>
<g >
<title>available_idle_cpu (243,884,353 samples, 0.03%)</title><rect x="1060.8" y="1477" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1063.76" y="1487.5" ></text>
</g>
<g >
<title>sock_close (209,444,879 samples, 0.02%)</title><rect x="1075.3" y="1493" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1078.29" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1317" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1327.5" ></text>
</g>
<g >
<title>operator new (826,927,572 samples, 0.09%)</title><rect x="375.1" y="149" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="378.06" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (1,785,822,020 samples, 0.20%)</title><rect x="420.2" y="101" width="2.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="423.23" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="949" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="959.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,486,592,726 samples, 1.60%)</title><rect x="726.1" y="1413" width="18.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="729.14" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="741" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_lock (215,296,185 samples, 0.02%)</title><rect x="1045.8" y="1541" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1048.81" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,925,151,887 samples, 0.65%)</title><rect x="228.6" y="453" width="7.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="231.65" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1493" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1077" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1087.5" ></text>
</g>
<g >
<title>call_rcu (138,720,667 samples, 0.02%)</title><rect x="78.9" y="1477" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="81.93" y="1487.5" ></text>
</g>
<g >
<title>__poll (13,492,885,369 samples, 1.49%)</title><rect x="480.6" y="1541" width="17.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="483.62" y="1551.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (246,522,547 samples, 0.03%)</title><rect x="1136.5" y="1509" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1139.50" y="1519.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (331,377,393 samples, 0.04%)</title><rect x="580.3" y="1509" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="583.27" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="693" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (272,544,866 samples, 0.03%)</title><rect x="855.6" y="1493" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="858.58" y="1503.5" ></text>
</g>
<g >
<title>security_inode_free (259,827,808 samples, 0.03%)</title><rect x="1073.5" y="1381" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1076.53" y="1391.5" ></text>
</g>
<g >
<title>call_cpuidle (2,847,574,258 samples, 0.31%)</title><rect x="140.1" y="1541" width="3.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="143.14" y="1551.5" ></text>
</g>
<g >
<title>ext4_finish_bio (443,730,988 samples, 0.05%)</title><rect x="1080.0" y="1509" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1083.03" y="1519.5" ></text>
</g>
<g >
<title>ksys_write (638,528,824 samples, 0.07%)</title><rect x="503.8" y="1429" width="0.9" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="506.84" y="1439.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (99,876,428 samples, 0.01%)</title><rect x="1174.4" y="1541" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1177.37" y="1551.5" ></text>
</g>
<g >
<title>sock_alloc (614,423,389 samples, 0.07%)</title><rect x="1172.6" y="1541" width="0.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1175.56" y="1551.5" ></text>
</g>
<g >
<title>do_futex (2,647,009,846 samples, 0.29%)</title><rect x="582.0" y="1573" width="3.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="585.01" y="1583.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (185,304,288 samples, 0.02%)</title><rect x="1122.7" y="1557" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1125.72" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="245" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (109,622,134 samples, 0.01%)</title><rect x="134.1" y="1477" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="137.13" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (421,771,625 samples, 0.05%)</title><rect x="255.2" y="629" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="258.16" y="639.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (655,399,428 samples, 0.07%)</title><rect x="503.8" y="1573" width="0.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="506.83" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1093" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1103.5" >std..</text>
</g>
<g >
<title>__dev_queue_xmit (77,612,723 samples, 0.01%)</title><rect x="1066.7" y="1317" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1069.74" y="1327.5" ></text>
</g>
<g >
<title>pick_next_task (1,168,242,865 samples, 0.13%)</title><rect x="1125.0" y="1525" width="1.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1128.04" y="1535.5" ></text>
</g>
<g >
<title>new_slab (98,420,893 samples, 0.01%)</title><rect x="738.4" y="1093" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="741.36" y="1103.5" ></text>
</g>
<g >
<title>__d_alloc (308,793,198 samples, 0.03%)</title><rect x="580.3" y="1493" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="583.27" y="1503.5" ></text>
</g>
<g >
<title>ksys_read (116,916,135 samples, 0.01%)</title><rect x="1061.7" y="1573" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1064.75" y="1583.5" ></text>
</g>
<g >
<title>start_secondary (38,023,450,441 samples, 4.19%)</title><rect x="1081.6" y="1605" width="49.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1084.56" y="1615.5" >star..</text>
</g>
<g >
<title>futex_wake_mark (147,872,019 samples, 0.02%)</title><rect x="74.3" y="1525" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="77.25" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1157" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="1167.5" ></text>
</g>
<g >
<title>psi_group_change (180,525,334 samples, 0.02%)</title><rect x="599.9" y="1509" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="602.94" y="1519.5" ></text>
</g>
<g >
<title>[ls] (480,440,684 samples, 0.05%)</title><rect x="147.3" y="1621" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="150.26" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="373" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,239,585,924 samples, 1.24%)</title><rect x="66.6" y="1589" width="14.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="69.56" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1397" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1407.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (337,999,950 samples, 0.04%)</title><rect x="591.2" y="1445" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="594.16" y="1455.5" ></text>
</g>
<g >
<title>security_file_alloc (127,663,682 samples, 0.01%)</title><rect x="1173.6" y="1461" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1176.56" y="1471.5" ></text>
</g>
<g >
<title>std::string::_M_mutate (190,936,873 samples, 0.02%)</title><rect x="353.9" y="1541" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="356.89" y="1551.5" ></text>
</g>
<g >
<title>iput (1,565,447,238 samples, 0.17%)</title><rect x="1072.6" y="1445" width="2.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1075.60" y="1455.5" ></text>
</g>
<g >
<title>malloc (123,930,183 samples, 0.01%)</title><rect x="255.5" y="597" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="258.47" y="607.5" ></text>
</g>
<g >
<title>tcp_write_xmit (77,612,723 samples, 0.01%)</title><rect x="1066.7" y="1477" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1069.74" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1109" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1541" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (77,111,480 samples, 0.01%)</title><rect x="377.5" y="181" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.46" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="773" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="309" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (480,440,684 samples, 0.05%)</title><rect x="147.3" y="1589" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="150.26" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (812,011,846 samples, 0.09%)</title><rect x="308.0" y="1109" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="310.99" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,686,574,700 samples, 0.30%)</title><rect x="471.6" y="101" width="3.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="474.59" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (67,797,213,977 samples, 7.47%)</title><rect x="195.5" y="949" width="88.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="198.53" y="959.5" >std::__det..</text>
</g>
<g >
<title>add_wait_queue (128,539,387 samples, 0.01%)</title><rect x="487.2" y="1413" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="490.20" y="1423.5" ></text>
</g>
<g >
<title>cpu_startup_entry (273,228,048 samples, 0.03%)</title><rect x="534.5" y="1525" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="537.51" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="149" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="159.5" ></text>
</g>
<g >
<title>ktime_get (79,884,395 samples, 0.01%)</title><rect x="1129.1" y="1541" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1132.06" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (78,916,655,980 samples, 8.69%)</title><rect x="193.6" y="1093" width="102.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="196.63" y="1103.5" >std::__detai..</text>
</g>
<g >
<title>operator new (87,831,110 samples, 0.01%)</title><rect x="277.4" y="805" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="280.39" y="815.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,145,174,638 samples, 0.13%)</title><rect x="299.0" y="1061" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="301.98" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1125" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1135.5" ></text>
</g>
<g >
<title>ip_queue_xmit (77,565,045 samples, 0.01%)</title><rect x="529.0" y="1445" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="532.03" y="1455.5" ></text>
</g>
<g >
<title>__schedule (1,355,013,611 samples, 0.15%)</title><rect x="71.9" y="1493" width="1.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="74.85" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1157" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1167.5" ></text>
</g>
<g >
<title>operator delete (124,200,157 samples, 0.01%)</title><rect x="225.3" y="373" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="228.32" y="383.5" ></text>
</g>
<g >
<title>__fput (713,031,366 samples, 0.08%)</title><rect x="1179.4" y="1509" width="1.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1182.45" y="1519.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (332,338,279 samples, 0.04%)</title><rect x="70.2" y="1541" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="73.18" y="1551.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (867,062,596 samples, 0.10%)</title><rect x="741.3" y="1141" width="1.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="744.28" y="1151.5" ></text>
</g>
<g >
<title>inet_csk_accept (103,617,636 samples, 0.01%)</title><rect x="1172.4" y="1525" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1175.36" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,550,954 samples, 0.01%)</title><rect x="198.7" y="661" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="201.69" y="671.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (382,374,099 samples, 0.04%)</title><rect x="83.3" y="1397" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="86.34" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="549" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock (87,462,941 samples, 0.01%)</title><rect x="357.4" y="1445" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="360.39" y="1455.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (113,349,380 samples, 0.01%)</title><rect x="1189.6" y="1461" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1192.61" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1317" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1327.5" >std..</text>
</g>
<g >
<title>[libc.so.6] (717,616,327 samples, 0.08%)</title><rect x="477.9" y="117" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="480.91" y="127.5" ></text>
</g>
<g >
<title>do_idle (37,422,706,360 samples, 4.12%)</title><rect x="1081.7" y="1573" width="48.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1084.71" y="1583.5" >do_i..</text>
</g>
<g >
<title>evict (191,141,203 samples, 0.02%)</title><rect x="530.0" y="1429" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="533.00" y="1439.5" ></text>
</g>
<g >
<title>operator new (689,877,290 samples, 0.08%)</title><rect x="293.9" y="1013" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="296.93" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (244,188,374 samples, 0.03%)</title><rect x="169.5" y="101" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="293" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="303.5" ></text>
</g>
<g >
<title>newidle_balance (171,486,089 samples, 0.02%)</title><rect x="1135.6" y="1461" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1138.59" y="1471.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (107,097,551 samples, 0.01%)</title><rect x="1177.0" y="1509" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1180.03" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,346,587,783 samples, 0.48%)</title><rect x="357.4" y="1493" width="5.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="360.37" y="1503.5" ></text>
</g>
<g >
<title>inet_csk_accept (150,562,634 samples, 0.02%)</title><rect x="578.3" y="1525" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="581.31" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (383,488,063 samples, 0.04%)</title><rect x="479.2" y="117" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="482.18" y="127.5" ></text>
</g>
<g >
<title>[expr] (138,538,026 samples, 0.02%)</title><rect x="106.7" y="1573" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="109.74" y="1583.5" ></text>
</g>
<g >
<title>intel_idle (1,110,132,431 samples, 0.12%)</title><rect x="140.8" y="1493" width="1.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="143.76" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (839,560,674 samples, 0.09%)</title><rect x="1043.1" y="1477" width="1.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1046.13" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (199,546,765 samples, 0.02%)</title><rect x="188.3" y="1429" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="191.29" y="1439.5" ></text>
</g>
<g >
<title>folio_alloc_buffers (380,443,959 samples, 0.04%)</title><rect x="738.3" y="1157" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="741.29" y="1167.5" ></text>
</g>
<g >
<title>wb_workfn (573,167,647 samples, 0.06%)</title><rect x="83.3" y="1541" width="0.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="86.33" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,419,542,909 samples, 0.16%)</title><rect x="134.9" y="1589" width="1.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="137.92" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="821" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="831.5" >std..</text>
</g>
<g >
<title>cpuidle_enter (457,859,195 samples, 0.05%)</title><rect x="601.1" y="1461" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="604.11" y="1471.5" ></text>
</g>
<g >
<title>tick_nohz_idle_got_tick (218,812,571 samples, 0.02%)</title><rect x="1186.1" y="1525" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1189.07" y="1535.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (90,522,550 samples, 0.01%)</title><rect x="85.3" y="1365" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="88.34" y="1375.5" ></text>
</g>
<g >
<title>ext4_file_getattr (387,405,942 samples, 0.04%)</title><rect x="352.6" y="1381" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="355.59" y="1391.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (92,458,828 samples, 0.01%)</title><rect x="1173.8" y="1461" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1176.82" y="1471.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (362,262,285 samples, 0.04%)</title><rect x="1172.9" y="1477" width="0.5" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1175.88" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (318,072,483 samples, 0.04%)</title><rect x="475.1" y="149" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.08" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="453" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="463.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="357" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="367.5" ></text>
</g>
<g >
<title>operator new (929,169,865 samples, 0.10%)</title><rect x="260.7" y="693" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="263.67" y="703.5" ></text>
</g>
<g >
<title>alloc_pages (119,267,148 samples, 0.01%)</title><rect x="1038.3" y="1413" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1041.26" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1445" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1455.5" ></text>
</g>
<g >
<title>psi_group_change (107,181,387 samples, 0.01%)</title><rect x="144.8" y="1461" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="147.83" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="885" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="895.5" ></text>
</g>
<g >
<title>block_invalidate_folio (3,597,275,485 samples, 0.40%)</title><rect x="849.7" y="1205" width="4.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="852.67" y="1215.5" ></text>
</g>
<g >
<title>std::__condvar::notify_all (4,976,004,413 samples, 0.55%)</title><rect x="356.6" y="1557" width="6.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="359.63" y="1567.5" ></text>
</g>
<g >
<title>ksys_read (182,194,971 samples, 0.02%)</title><rect x="528.0" y="1573" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="531.01" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="949" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="959.5" ></text>
</g>
<g >
<title>call_cpuidle (130,707,023 samples, 0.01%)</title><rect x="1136.8" y="1477" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1139.82" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (377,595,393 samples, 0.04%)</title><rect x="339.3" y="1397" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="342.32" y="1407.5" ></text>
</g>
<g >
<title>call_function_single_prep_ipi (113,966,709 samples, 0.01%)</title><rect x="1061.3" y="1477" width="0.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1064.26" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1237" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1301" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,894,300,056 samples, 6.27%)</title><rect x="197.1" y="821" width="74.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="200.13" y="831.5" >std::__d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="293" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="581" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="591.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (87,735,959 samples, 0.01%)</title><rect x="106.1" y="1461" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="109.06" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_enter (246,522,547 samples, 0.03%)</title><rect x="1136.5" y="1525" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1139.50" y="1535.5" ></text>
</g>
<g >
<title>malloc (671,971,947 samples, 0.07%)</title><rect x="240.5" y="485" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="243.49" y="495.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2,506,291,028 samples, 0.28%)</title><rect x="729.4" y="1221" width="3.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="732.41" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1077" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1087.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (359,698,090 samples, 0.04%)</title><rect x="602.8" y="1621" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="605.77" y="1631.5" ></text>
</g>
<g >
<title>pipe_poll (218,840,281 samples, 0.02%)</title><rect x="487.5" y="1445" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="490.52" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1077" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="1087.5" ></text>
</g>
<g >
<title>do_iter_write (586,122,077 samples, 0.06%)</title><rect x="503.9" y="1365" width="0.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="506.90" y="1375.5" ></text>
</g>
<g >
<title>schedule (623,150,167 samples, 0.07%)</title><rect x="135.1" y="1525" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.11" y="1535.5" ></text>
</g>
<g >
<title>futex_wait_setup (197,401,672 samples, 0.02%)</title><rect x="584.2" y="1541" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="587.20" y="1551.5" ></text>
</g>
<g >
<title>kernel_clone (222,500,485 samples, 0.02%)</title><rect x="168.6" y="1397" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="171.55" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,526,863,011 samples, 0.72%)</title><rect x="1172.1" y="1605" width="8.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1175.15" y="1615.5" ></text>
</g>
<g >
<title>irq_exit_rcu (129,577,680 samples, 0.01%)</title><rect x="596.4" y="1445" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="599.41" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (80,882,864 samples, 0.01%)</title><rect x="425.7" y="37" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="428.72" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="917" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="927.5" >std..</text>
</g>
<g >
<title>sock_alloc_file (772,877,752 samples, 0.09%)</title><rect x="133.4" y="1541" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="136.41" y="1551.5" ></text>
</g>
<g >
<title>dispatcher (137,730,973 samples, 0.02%)</title><rect x="786.7" y="1541" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="789.67" y="1551.5" ></text>
</g>
<g >
<title>__schedule (596,688,268 samples, 0.07%)</title><rect x="1187.9" y="1541" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1190.88" y="1551.5" ></text>
</g>
<g >
<title>xa_load (129,961,146 samples, 0.01%)</title><rect x="1039.7" y="1429" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1042.70" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="901" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="911.5" ></text>
</g>
<g >
<title>operator new (160,317,196 samples, 0.02%)</title><rect x="377.2" y="133" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="380.18" y="143.5" ></text>
</g>
<g >
<title>update_load_avg (103,419,621 samples, 0.01%)</title><rect x="101.8" y="1445" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="104.82" y="1455.5" ></text>
</g>
<g >
<title>ext4_writepages (700,532,856 samples, 0.08%)</title><rect x="1080.6" y="1429" width="0.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1083.63" y="1439.5" ></text>
</g>
<g >
<title>__do_softirq (283,550,996 samples, 0.03%)</title><rect x="140.3" y="1429" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="143.28" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="309" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1445" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="389" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="399.5" >std..</text>
</g>
<g >
<title>Glob::isIgnored (126,650,751,106 samples, 13.95%)</title><rect x="176.8" y="1541" width="164.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="179.83" y="1551.5" >Glob::isIgnored</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="677" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,343,984,581 samples, 3.01%)</title><rect x="200.9" y="517" width="35.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="203.91" y="527.5" >std..</text>
</g>
<g >
<title>run_ksoftirqd (1,629,375,662 samples, 0.18%)</title><rect x="1077.8" y="1557" width="2.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1080.85" y="1567.5" ></text>
</g>
<g >
<title>dentry_free (147,624,407 samples, 0.02%)</title><rect x="587.9" y="1461" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="590.90" y="1471.5" ></text>
</g>
<g >
<title>malloc (639,746,426 samples, 0.07%)</title><rect x="337.5" y="1381" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="340.46" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (318,072,483 samples, 0.04%)</title><rect x="475.1" y="101" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.08" y="111.5" ></text>
</g>
<g >
<title>psi_task_switch (971,000,727 samples, 0.11%)</title><rect x="1126.8" y="1525" width="1.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1129.77" y="1535.5" ></text>
</g>
<g >
<title>sock_alloc_inode (1,645,089,193 samples, 0.18%)</title><rect x="1038.0" y="1493" width="2.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1041.00" y="1503.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (178,287,265 samples, 0.02%)</title><rect x="502.2" y="1557" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="505.23" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (138,538,026 samples, 0.02%)</title><rect x="106.7" y="1589" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="109.74" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="261" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,481,134,120 samples, 0.38%)</title><rect x="415.7" y="101" width="4.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="418.71" y="111.5" ></text>
</g>
<g >
<title>filemap_add_folio (152,346,637 samples, 0.02%)</title><rect x="504.1" y="1253" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="507.12" y="1263.5" ></text>
</g>
<g >
<title>ret_from_fork (149,200,336 samples, 0.02%)</title><rect x="530.6" y="1605" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="533.62" y="1615.5" ></text>
</g>
<g >
<title>psi_group_change (184,613,971 samples, 0.02%)</title><rect x="104.3" y="1509" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="107.28" y="1519.5" ></text>
</g>
<g >
<title>rcu_do_batch (107,845,135 samples, 0.01%)</title><rect x="1185.9" y="1365" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1188.92" y="1375.5" ></text>
</g>
<g >
<title>[[vdso]] (98,741,988 samples, 0.01%)</title><rect x="606.1" y="1605" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="609.05" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,485,946,379 samples, 3.58%)</title><rect x="200.8" y="533" width="42.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="203.75" y="543.5" >std..</text>
</g>
<g >
<title>dequeue_task (285,115,339 samples, 0.03%)</title><rect x="135.2" y="1493" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="138.24" y="1503.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (193,638,728 samples, 0.02%)</title><rect x="1136.2" y="1621" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1139.25" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (68,070,714,748 samples, 7.50%)</title><rect x="195.2" y="965" width="88.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="198.17" y="975.5" >std::__det..</text>
</g>
<g >
<title>malloc (1,152,628,369 samples, 0.13%)</title><rect x="252.6" y="613" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="255.59" y="623.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (130,707,023 samples, 0.01%)</title><rect x="1136.8" y="1493" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1139.82" y="1503.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (809,291,598 samples, 0.09%)</title><rect x="342.9" y="1445" width="1.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="345.88" y="1455.5" ></text>
</g>
<g >
<title>enqueue_task_fair (184,935,932 samples, 0.02%)</title><rect x="533.3" y="1477" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="536.34" y="1487.5" ></text>
</g>
<g >
<title>enqueue_entity (87,256,328 samples, 0.01%)</title><rect x="1116.5" y="1477" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1119.52" y="1487.5" ></text>
</g>
<g >
<title>dentry_free (116,952,128 samples, 0.01%)</title><rect x="138.5" y="1461" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="141.45" y="1471.5" ></text>
</g>
<g >
<title>enqueue_task (3,337,701,445 samples, 0.37%)</title><rect x="1116.4" y="1493" width="4.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1119.44" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="965" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="975.5" >st..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (543,684,108 samples, 0.06%)</title><rect x="491.2" y="1381" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="494.16" y="1391.5" ></text>
</g>
<g >
<title>alloc_file (546,694,414 samples, 0.06%)</title><rect x="68.7" y="1493" width="0.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="71.71" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,673,982,290 samples, 3.16%)</title><rect x="390.9" y="1589" width="37.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1599.5" >std..</text>
</g>
<g >
<title>_copy_to_user (141,549,040 samples, 0.02%)</title><rect x="342.5" y="1461" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="345.53" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="469" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="479.5" ></text>
</g>
<g >
<title>InotifyBackend::start (13,968,670,010 samples, 1.54%)</title><rect x="480.0" y="1557" width="18.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="483.00" y="1567.5" ></text>
</g>
<g >
<title>kmem_cache_free (466,118,230 samples, 0.05%)</title><rect x="1071.9" y="1445" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1074.90" y="1455.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (175,553,477 samples, 0.02%)</title><rect x="1074.3" y="1413" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1077.28" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1349" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1359.5" ></text>
</g>
<g >
<title>inet_accept (156,467,561 samples, 0.02%)</title><rect x="578.3" y="1541" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="581.31" y="1551.5" ></text>
</g>
<g >
<title>switch_fpu_return (444,143,811 samples, 0.05%)</title><rect x="1076.2" y="1557" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1079.17" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,264,772,537 samples, 0.58%)</title><rect x="364.4" y="1573" width="6.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="367.41" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1365" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (639,797,567 samples, 0.07%)</title><rect x="1135.4" y="1605" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1138.41" y="1615.5" ></text>
</g>
<g >
<title>__x64_sys_write (638,528,824 samples, 0.07%)</title><rect x="503.8" y="1445" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="506.84" y="1455.5" ></text>
</g>
<g >
<title>update_min_vruntime (90,144,300 samples, 0.01%)</title><rect x="1053.8" y="1445" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1056.78" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1525" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1535.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (127,354,905 samples, 0.01%)</title><rect x="487.2" y="1381" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="490.20" y="1391.5" ></text>
</g>
<g >
<title>llist_reverse_order (105,708,336 samples, 0.01%)</title><rect x="533.7" y="1541" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="536.70" y="1551.5" ></text>
</g>
<g >
<title>path_lookupat (4,691,531,153 samples, 0.52%)</title><rect x="344.7" y="1429" width="6.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="347.65" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,511,481,015 samples, 0.17%)</title><rect x="426.0" y="117" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="428.96" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;Watcher*, Watcher*, std::allocator&lt;Watcher*&gt;, std::__detail::_Identity, std::equal_to&lt;Watcher*&gt;, std::hash&lt;Watcher*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (201,934,034 samples, 0.02%)</title><rect x="354.4" y="1573" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="357.35" y="1583.5" ></text>
</g>
<g >
<title>CompareAndSwap (400,236,081 samples, 0.04%)</title><rect x="623.3" y="1589" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="626.26" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1253" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="453" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1301" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="485" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="495.5" ></text>
</g>
<g >
<title>std::string::append (99,730,775 samples, 0.01%)</title><rect x="353.7" y="1557" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="356.75" y="1567.5" ></text>
</g>
<g >
<title>run_rebalance_domains (90,832,407 samples, 0.01%)</title><rect x="1085.2" y="1413" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1088.21" y="1423.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (222,500,485 samples, 0.02%)</title><rect x="168.6" y="1557" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="171.55" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,511,481,015 samples, 0.17%)</title><rect x="426.0" y="133" width="1.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="428.96" y="143.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (12,247,377,086 samples, 1.35%)</title><rect x="633.4" y="1589" width="16.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="636.44" y="1599.5" ></text>
</g>
<g >
<title>irq_exit_rcu (418,288,345 samples, 0.05%)</title><rect x="85.0" y="1461" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="88.01" y="1471.5" ></text>
</g>
<g >
<title>__slab_free (716,390,725 samples, 0.08%)</title><rect x="852.4" y="1093" width="0.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="855.36" y="1103.5" ></text>
</g>
<g >
<title>NaClStraceClockGetCommon (55,706,212,167 samples, 6.14%)</title><rect x="672.8" y="1541" width="72.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="675.82" y="1551.5" >NaClStra..</text>
</g>
<g >
<title>__x64_sys_sched_yield (1,314,095,138 samples, 0.14%)</title><rect x="75.5" y="1573" width="1.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="78.53" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1493" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1503.5" ></text>
</g>
<g >
<title>operator new (727,224,941 samples, 0.08%)</title><rect x="274.9" y="821" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="277.86" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1477" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1487.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="917" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="927.5" >st..</text>
</g>
<g >
<title>call_cpuidle (457,859,195 samples, 0.05%)</title><rect x="601.1" y="1477" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="604.11" y="1487.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (364,257,136 samples, 0.04%)</title><rect x="370.0" y="1445" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="373.02" y="1455.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (4,523,426,320 samples, 0.50%)</title><rect x="487.9" y="1429" width="5.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="490.92" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (145,381,491 samples, 0.02%)</title><rect x="264.0" y="693" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="267.01" y="703.5" ></text>
</g>
<g >
<title>sock_write_iter (85,394,765 samples, 0.01%)</title><rect x="1067.0" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1070.01" y="1551.5" ></text>
</g>
<g >
<title>__libc_fork (222,500,485 samples, 0.02%)</title><rect x="168.6" y="1493" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="171.55" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock (95,476,484 samples, 0.01%)</title><rect x="739.7" y="1141" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="742.73" y="1151.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (115,489,478 samples, 0.01%)</title><rect x="1135.8" y="1509" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1138.81" y="1519.5" ></text>
</g>
<g >
<title>[bash] (115,507,221 samples, 0.01%)</title><rect x="854.7" y="1493" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="857.68" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="709" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="719.5" ></text>
</g>
<g >
<title>malloc (131,825,159 samples, 0.01%)</title><rect x="228.2" y="341" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="231.20" y="351.5" ></text>
</g>
<g >
<title>try_to_wake_up (534,980,109 samples, 0.06%)</title><rect x="74.6" y="1509" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="77.60" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="997" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1205" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="1215.5" >std..</text>
</g>
<g >
<title>futex_wait_setup (266,188,453 samples, 0.03%)</title><rect x="501.2" y="1445" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="504.17" y="1455.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (119,772,117 samples, 0.01%)</title><rect x="1173.2" y="1461" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1176.20" y="1471.5" ></text>
</g>
<g >
<title>malloc (3,550,907,714 samples, 0.39%)</title><rect x="458.2" y="53" width="4.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="461.22" y="63.5" ></text>
</g>
<g >
<title>dequeue_entity (1,147,028,164 samples, 0.13%)</title><rect x="1052.4" y="1461" width="1.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1055.41" y="1471.5" ></text>
</g>
<g >
<title>notify_change (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1301" width="11.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="845.66" y="1311.5" ></text>
</g>
<g >
<title>get_page_from_freelist (79,801,756 samples, 0.01%)</title><rect x="67.8" y="1365" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="70.78" y="1375.5" ></text>
</g>
<g >
<title>native_load_tls (118,665,451 samples, 0.01%)</title><rect x="1077.4" y="1621" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1080.35" y="1631.5" ></text>
</g>
<g >
<title>setfl (139,245,879 samples, 0.02%)</title><rect x="1048.7" y="1557" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1051.66" y="1567.5" ></text>
</g>
<g >
<title>update_curr (366,868,725 samples, 0.04%)</title><rect x="76.2" y="1477" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="79.23" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="405" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="415.5" ></text>
</g>
<g >
<title>operator new (671,971,947 samples, 0.07%)</title><rect x="240.5" y="501" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="243.49" y="511.5" ></text>
</g>
<g >
<title>allocate_slab (175,502,290 samples, 0.02%)</title><rect x="67.8" y="1413" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="70.78" y="1423.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (660,430,882 samples, 0.07%)</title><rect x="1186.7" y="1525" width="0.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1189.75" y="1535.5" ></text>
</g>
<g >
<title>operator new (190,141,155 samples, 0.02%)</title><rect x="221.1" y="293" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="224.11" y="303.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (98,750,304 samples, 0.01%)</title><rect x="734.0" y="1221" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="737.04" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (545,566,313 samples, 0.06%)</title><rect x="324.7" y="1269" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="327.72" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1509" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,129,817,626 samples, 0.23%)</title><rect x="392.8" y="117" width="2.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="127.5" ></text>
</g>
<g >
<title>__schedule (570,689,878 samples, 0.06%)</title><rect x="1177.6" y="1541" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1180.60" y="1551.5" ></text>
</g>
<g >
<title>malloc (475,597,775 samples, 0.05%)</title><rect x="380.2" y="85" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="383.21" y="95.5" ></text>
</g>
<g >
<title>[sel_ldr] (22,528,476,071 samples, 2.48%)</title><rect x="804.7" y="1605" width="29.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="807.73" y="1615.5" >[s..</text>
</g>
<g >
<title>ext4_da_write_end (3,085,707,388 samples, 0.34%)</title><rect x="740.3" y="1221" width="4.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="743.32" y="1231.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (129,828,543 samples, 0.01%)</title><rect x="529.0" y="1525" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="532.02" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (137,337,723 samples, 0.02%)</title><rect x="247.6" y="533" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="250.63" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="453" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1413" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1423.5" ></text>
</g>
<g >
<title>destroy_inode (208,460,966 samples, 0.02%)</title><rect x="1179.8" y="1413" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1182.83" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="629" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="639.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1,679,095,144 samples, 0.18%)</title><rect x="844.9" y="1173" width="2.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="847.89" y="1183.5" ></text>
</g>
<g >
<title>__fget_light (116,711,353 samples, 0.01%)</title><rect x="726.2" y="1333" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="729.21" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1045" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1055.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1,231,822,314 samples, 0.14%)</title><rect x="489.6" y="1365" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="492.56" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="933" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="677" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="687.5" >st..</text>
</g>
<g >
<title>_raw_spin_lock_bh (476,505,756 samples, 0.05%)</title><rect x="1035.4" y="1509" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1038.40" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (81,607,676 samples, 0.01%)</title><rect x="269.5" y="709" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="272.52" y="719.5" ></text>
</g>
<g >
<title>node (273,575,730,092 samples, 30.13%)</title><rect x="148.1" y="1637" width="355.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="151.15" y="1647.5" >node</text>
</g>
<g >
<title>do_syscall_64 (8,384,735,467 samples, 0.92%)</title><rect x="342.4" y="1525" width="10.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="345.39" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1477" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1487.5" ></text>
</g>
<g >
<title>shuffle_freelist (83,168,922 samples, 0.01%)</title><rect x="67.9" y="1397" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="70.90" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (759,171,893 samples, 0.08%)</title><rect x="245.1" y="549" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="248.11" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="693" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="703.5" ></text>
</g>
<g >
<title>ovl_real_fdget (143,186,555 samples, 0.02%)</title><rect x="733.5" y="1317" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="736.49" y="1327.5" ></text>
</g>
<g >
<title>xas_store (297,881,902 samples, 0.03%)</title><rect x="847.9" y="1221" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="850.91" y="1231.5" ></text>
</g>
<g >
<title>____fput (508,307,561 samples, 0.06%)</title><rect x="529.8" y="1525" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="532.76" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="325" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="335.5" ></text>
</g>
<g >
<title>[bash] (124,500,596 samples, 0.01%)</title><rect x="854.8" y="1365" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="857.83" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1061" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="1071.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,394,530,113 samples, 0.15%)</title><rect x="1178.8" y="1589" width="1.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1181.82" y="1599.5" ></text>
</g>
<g >
<title>dput (660,387,309 samples, 0.07%)</title><rect x="587.9" y="1493" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="590.85" y="1503.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (124,923,967 samples, 0.01%)</title><rect x="525.7" y="1461" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="528.71" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="309" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="319.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1525" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="629" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="639.5" >std..</text>
</g>
<g >
<title>__raw_spin_lock_irqsave (82,486,241 samples, 0.01%)</title><rect x="488.5" y="1381" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="491.46" y="1391.5" ></text>
</g>
<g >
<title>operator new (611,184,041 samples, 0.07%)</title><rect x="281.3" y="885" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="284.30" y="895.5" ></text>
</g>
<g >
<title>operator new (690,280,821 samples, 0.08%)</title><rect x="225.5" y="373" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="228.48" y="383.5" ></text>
</g>
<g >
<title>malloc (399,875,146 samples, 0.04%)</title><rect x="171.8" y="181" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="174.82" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (92,857,382 samples, 0.01%)</title><rect x="241.8" y="469" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="244.82" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1013" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1023.5" >st..</text>
</g>
<g >
<title>alloc_empty_file (492,697,522 samples, 0.05%)</title><rect x="133.5" y="1493" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="136.49" y="1503.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (197,464,115 samples, 0.02%)</title><rect x="731.1" y="1125" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="734.07" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="725" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="389" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="399.5" ></text>
</g>
<g >
<title>update_load_avg (91,691,953 samples, 0.01%)</title><rect x="500.3" y="1349" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="503.27" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="453" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="463.5" ></text>
</g>
<g >
<title>tcp_sendmsg (129,828,543 samples, 0.01%)</title><rect x="529.0" y="1541" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="532.02" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (119,054,341 samples, 0.01%)</title><rect x="106.7" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="109.74" y="1487.5" ></text>
</g>
<g >
<title>shell_glob_filename (77,284,657 samples, 0.01%)</title><rect x="854.7" y="1445" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="857.71" y="1455.5" ></text>
</g>
<g >
<title>security_d_instantiate (98,268,773 samples, 0.01%)</title><rect x="70.0" y="1477" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="72.98" y="1487.5" ></text>
</g>
<g >
<title>uv_spawn (222,500,485 samples, 0.02%)</title><rect x="168.6" y="1541" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="171.55" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1189" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1199.5" ></text>
</g>
<g >
<title>cpuidle_enter (96,556,084 samples, 0.01%)</title><rect x="146.6" y="1461" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="149.57" y="1471.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (143,536,847 samples, 0.02%)</title><rect x="786.2" y="1525" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="789.23" y="1535.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (2,074,271,762 samples, 0.23%)</title><rect x="78.0" y="1541" width="2.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="81.02" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (94,491,539 samples, 0.01%)</title><rect x="332.5" y="1301" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="335.46" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock (248,704,788 samples, 0.03%)</title><rect x="1062.2" y="1557" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1065.23" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,481,134,120 samples, 0.38%)</title><rect x="415.7" y="85" width="4.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="418.71" y="95.5" ></text>
</g>
<g >
<title>sock_alloc_inode (312,209,129 samples, 0.03%)</title><rect x="579.0" y="1493" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="581.99" y="1503.5" ></text>
</g>
<g >
<title>nd_jump_root (100,179,979 samples, 0.01%)</title><rect x="350.1" y="1397" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="353.08" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="261" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="271.5" >std..</text>
</g>
<g >
<title>xa_load (112,638,306 samples, 0.01%)</title><rect x="68.4" y="1413" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="71.38" y="1423.5" ></text>
</g>
<g >
<title>dput (279,700,811 samples, 0.03%)</title><rect x="529.9" y="1493" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="532.89" y="1503.5" ></text>
</g>
<g >
<title>dequeue_task (457,781,970 samples, 0.05%)</title><rect x="72.2" y="1477" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="75.24" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (357,677,702 samples, 0.04%)</title><rect x="269.6" y="757" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="272.63" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="901" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="911.5" ></text>
</g>
<g >
<title>__switch_to (80,263,442 samples, 0.01%)</title><rect x="582.6" y="1493" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="585.64" y="1503.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (91,644,466 samples, 0.01%)</title><rect x="1080.9" y="1301" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1083.93" y="1311.5" ></text>
</g>
<g >
<title>available_idle_cpu (254,129,526 samples, 0.03%)</title><rect x="361.3" y="1365" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="364.30" y="1375.5" ></text>
</g>
<g >
<title>update_curr (84,274,048 samples, 0.01%)</title><rect x="1065.4" y="1509" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1068.36" y="1519.5" ></text>
</g>
<g >
<title>main (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1573" width="11.8" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="845.66" y="1583.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (99,348,496 samples, 0.01%)</title><rect x="488.3" y="1381" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="491.28" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="613" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (77,111,480 samples, 0.01%)</title><rect x="377.5" y="213" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.46" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="437" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="447.5" >st..</text>
</g>
<g >
<title>[libc.so.6] (224,402,411 samples, 0.02%)</title><rect x="300.9" y="1045" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="303.92" y="1055.5" ></text>
</g>
<g >
<title>docker (162,719,014 samples, 0.02%)</title><rect x="106.5" y="1637" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="109.48" y="1647.5" ></text>
</g>
<g >
<title>__fput (675,868,648 samples, 0.07%)</title><rect x="138.3" y="1509" width="0.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="141.29" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,732,437 samples, 0.02%)</title><rect x="391.0" y="69" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="394.01" y="79.5" ></text>
</g>
<g >
<title>security_inode_alloc (79,062,911 samples, 0.01%)</title><rect x="578.9" y="1477" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="581.87" y="1487.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (923,849,425 samples, 0.10%)</title><rect x="105.1" y="1605" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="108.09" y="1615.5" ></text>
</g>
<g >
<title>available_idle_cpu (114,478,797 samples, 0.01%)</title><rect x="75.0" y="1461" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="77.98" y="1471.5" ></text>
</g>
<g >
<title>do_open (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1365" width="11.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="845.66" y="1375.5" ></text>
</g>
<g >
<title>call_rcu (108,748,580 samples, 0.01%)</title><rect x="80.0" y="1381" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="82.98" y="1391.5" ></text>
</g>
<g >
<title>NaClSysPreadDecoder (197,179,272 samples, 0.02%)</title><rect x="786.6" y="1589" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="789.60" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (105,870,595 samples, 0.01%)</title><rect x="578.3" y="1509" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="581.33" y="1519.5" ></text>
</g>
<g >
<title>malloc (135,975,169 samples, 0.01%)</title><rect x="339.6" y="1365" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="342.64" y="1375.5" ></text>
</g>
<g >
<title>kthread (407,890,461 samples, 0.04%)</title><rect x="139.5" y="1589" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="142.49" y="1599.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (109,365,620 samples, 0.01%)</title><rect x="761.6" y="1525" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="764.61" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (14,388,016,006 samples, 1.58%)</title><rect x="726.1" y="1397" width="18.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="729.14" y="1407.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (4,438,156,592 samples, 0.49%)</title><rect x="734.6" y="1221" width="5.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="737.55" y="1231.5" ></text>
</g>
<g >
<title>update_cfs_group (183,615,068 samples, 0.02%)</title><rect x="490.0" y="1333" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="493.01" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (110,720,192,936 samples, 12.20%)</title><rect x="189.5" y="1381" width="143.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="192.49" y="1391.5" >std::__detail::_Ex..</text>
</g>
<g >
<title>setlocale (328,801,619 samples, 0.04%)</title><rect x="855.6" y="1557" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="858.58" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1221" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1231.5" ></text>
</g>
<g >
<title>malloc (139,335,739 samples, 0.02%)</title><rect x="214.3" y="213" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="217.34" y="223.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,913,185,572 samples, 0.43%)</title><rect x="1181.6" y="1557" width="5.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1184.58" y="1567.5" ></text>
</g>
<g >
<title>vfs_read (125,137,069 samples, 0.01%)</title><rect x="502.8" y="1461" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="505.82" y="1471.5" ></text>
</g>
<g >
<title>malloc (120,566,828 samples, 0.01%)</title><rect x="256.1" y="597" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="259.12" y="607.5" ></text>
</g>
<g >
<title>____fput (3,648,977,170 samples, 0.40%)</title><rect x="1071.0" y="1525" width="4.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1074.01" y="1535.5" ></text>
</g>
<g >
<title>operator new (854,065,806 samples, 0.09%)</title><rect x="331.0" y="1333" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="333.98" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1349" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1359.5" >st..</text>
</g>
<g >
<title>ret_from_fork_asm (399,396,586 samples, 0.04%)</title><rect x="1180.9" y="1621" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1183.85" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (362,928,931 samples, 0.04%)</title><rect x="363.9" y="1573" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="366.94" y="1583.5" ></text>
</g>
<g >
<title>filemap_get_entry (197,377,438 samples, 0.02%)</title><rect x="737.8" y="1189" width="0.3" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="740.84" y="1199.5" ></text>
</g>
<g >
<title>[bash] (365,804,671 samples, 0.04%)</title><rect x="854.7" y="1557" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="857.68" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,774,258,325 samples, 0.53%)</title><rect x="371.3" y="197" width="6.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (224,620,615 samples, 0.02%)</title><rect x="531.1" y="1493" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="534.07" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (91,693,496,921 samples, 10.10%)</title><rect x="192.1" y="1205" width="119.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="195.12" y="1215.5" >std::__detail:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1141" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1151.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1381" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1391.5" >std..</text>
</g>
<g >
<title>uv__spawn_and_init_child (222,500,485 samples, 0.02%)</title><rect x="168.6" y="1525" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="171.55" y="1535.5" ></text>
</g>
<g >
<title>load_elf_binary (192,085,965 samples, 0.02%)</title><rect x="503.2" y="1493" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="506.17" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1317" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (125,137,069 samples, 0.01%)</title><rect x="502.8" y="1525" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="505.82" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,613,586,945 samples, 0.29%)</title><rect x="377.9" y="117" width="3.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="380.95" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1413" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1423.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,060,719,343 samples, 0.67%)</title><rect x="303.3" y="1157" width="7.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="306.31" y="1167.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (311,270,361 samples, 0.03%)</title><rect x="68.2" y="1445" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="71.25" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="517" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="527.5" ></text>
</g>
<g >
<title>security_file_free (226,205,163 samples, 0.02%)</title><rect x="1075.0" y="1493" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1077.99" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="757" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="661" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (207,652,824 samples, 0.02%)</title><rect x="192.2" y="1189" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="195.17" y="1199.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (98,739,640 samples, 0.01%)</title><rect x="761.8" y="1589" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="764.85" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3,199,651,587 samples, 0.35%)</title><rect x="71.2" y="1573" width="4.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="74.15" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (17,747,739,561 samples, 1.95%)</title><rect x="480.0" y="1605" width="23.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="483.00" y="1615.5" >[..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (91,703,555 samples, 0.01%)</title><rect x="371.1" y="1541" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="374.09" y="1551.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (538,656,139 samples, 0.06%)</title><rect x="1045.1" y="1541" width="0.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1048.11" y="1551.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (92,987,586 samples, 0.01%)</title><rect x="1036.3" y="1525" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1039.35" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (880,638,571 samples, 0.10%)</title><rect x="187.5" y="1445" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="190.46" y="1455.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1,370,788,103 samples, 0.15%)</title><rect x="1052.2" y="1477" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1055.24" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (684,353,459 samples, 0.08%)</title><rect x="268.7" y="725" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="271.74" y="735.5" ></text>
</g>
<g >
<title>do_accept (7,834,375,778 samples, 0.86%)</title><rect x="1034.8" y="1557" width="10.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1037.79" y="1567.5" ></text>
</g>
<g >
<title>schedule_idle (4,599,448,103 samples, 0.51%)</title><rect x="1123.0" y="1557" width="5.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1125.96" y="1567.5" ></text>
</g>
<g >
<title>cfree (388,132,575 samples, 0.04%)</title><rect x="471.6" y="85" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="474.59" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (148,106,266 samples, 0.02%)</title><rect x="725.9" y="1413" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="728.95" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,148,398,526 samples, 0.24%)</title><rect x="499.2" y="1525" width="2.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="502.21" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (684,157,682 samples, 0.08%)</title><rect x="374.1" y="133" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="377.10" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="741" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="751.5" ></text>
</g>
<g >
<title>[bash] (352,484,534 samples, 0.04%)</title><rect x="854.7" y="1509" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="857.68" y="1519.5" ></text>
</g>
<g >
<title>sock_alloc_file (3,661,988,611 samples, 0.40%)</title><rect x="1040.2" y="1541" width="4.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1043.16" y="1551.5" ></text>
</g>
<g >
<title>__d_alloc (948,277,929 samples, 0.10%)</title><rect x="1043.0" y="1493" width="1.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1045.98" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="373" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="383.5" ></text>
</g>
<g >
<title>rcu_core (260,437,292 samples, 0.03%)</title><rect x="140.3" y="1397" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="143.28" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="469" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="479.5" >std..</text>
</g>
<g >
<title>destroy_inode (218,743,865 samples, 0.02%)</title><rect x="1136.0" y="1413" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1138.96" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock (78,548,759 samples, 0.01%)</title><rect x="1071.1" y="1493" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1074.11" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,465,512,709 samples, 0.93%)</title><rect x="203.7" y="309" width="11.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="206.69" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1349" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,593,367,833 samples, 4.91%)</title><rect x="198.3" y="709" width="58.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="201.33" y="719.5" >std::_..</text>
</g>
<g >
<title>charge_memcg (409,666,032 samples, 0.05%)</title><rect x="735.4" y="1141" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="738.37" y="1151.5" ></text>
</g>
<g >
<title>do_idle (649,343,478 samples, 0.07%)</title><rect x="601.1" y="1509" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="604.11" y="1519.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (574,492,737 samples, 0.06%)</title><rect x="503.9" y="1349" width="0.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="506.91" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,498,635,442 samples, 0.17%)</title><rect x="424.0" y="85" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="95.5" ></text>
</g>
<g >
<title>__fput (1,432,832,728 samples, 0.16%)</title><rect x="78.8" y="1493" width="1.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="81.80" y="1503.5" ></text>
</g>
<g >
<title>restore_fpregs_from_fpstate (118,106,906 samples, 0.01%)</title><rect x="589.1" y="1541" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="592.06" y="1551.5" ></text>
</g>
<g >
<title>arch_call_rest_init (923,849,425 samples, 0.10%)</title><rect x="105.1" y="1557" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="108.09" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="869" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="879.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (99,056,133 samples, 0.01%)</title><rect x="854.1" y="1093" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="857.09" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1525" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="1535.5" >std..</text>
</g>
<g >
<title>read (143,182,398 samples, 0.02%)</title><rect x="502.8" y="1541" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="505.80" y="1551.5" ></text>
</g>
<g >
<title>path_put (299,688,093 samples, 0.03%)</title><rect x="350.8" y="1445" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="353.76" y="1455.5" ></text>
</g>
<g >
<title>NaClXlateSysRet (246,114,937 samples, 0.03%)</title><rect x="605.7" y="1605" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="608.73" y="1615.5" ></text>
</g>
<g >
<title>malloc (802,254,804 samples, 0.09%)</title><rect x="315.8" y="1189" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="318.81" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (222,680,253 samples, 0.02%)</title><rect x="427.9" y="117" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="430.93" y="127.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (146,549,942 samples, 0.02%)</title><rect x="1126.2" y="1461" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1129.19" y="1471.5" ></text>
</g>
<g >
<title>do_truncate (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1349" width="11.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="845.66" y="1359.5" ></text>
</g>
<g >
<title>dput (218,743,865 samples, 0.02%)</title><rect x="1136.0" y="1493" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1138.96" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (739,627,240 samples, 0.08%)</title><rect x="254.2" y="613" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="257.20" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1429" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1439.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (136,437,585 samples, 0.02%)</title><rect x="146.1" y="1525" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="149.15" y="1535.5" ></text>
</g>
<g >
<title>operator new (2,356,095,822 samples, 0.26%)</title><rect x="385.4" y="1605" width="3.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="388.43" y="1615.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (622,668,864 samples, 0.07%)</title><rect x="731.6" y="1141" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="734.64" y="1151.5" ></text>
</g>
<g >
<title>parse_and_execute (352,484,534 samples, 0.04%)</title><rect x="854.7" y="1541" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="857.68" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (337,011,644 samples, 0.04%)</title><rect x="294.4" y="981" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="297.39" y="991.5" ></text>
</g>
<g >
<title>available_idle_cpu (148,034,105 samples, 0.02%)</title><rect x="731.4" y="1109" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="734.39" y="1119.5" ></text>
</g>
<g >
<title>__file_remove_privs (198,956,586 samples, 0.02%)</title><rect x="733.1" y="1301" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="736.09" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (223,429,176 samples, 0.02%)</title><rect x="290.5" y="949" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="293.51" y="959.5" ></text>
</g>
<g >
<title>Watcher::notify (5,958,397,636 samples, 0.66%)</title><rect x="355.4" y="1589" width="7.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="358.35" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1109" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1119.5" ></text>
</g>
<g >
<title>_IO_file_fopen (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1509" width="11.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="845.66" y="1519.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (106,297,730 samples, 0.01%)</title><rect x="1064.9" y="1477" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1067.95" y="1487.5" ></text>
</g>
<g >
<title>rcu_do_batch (300,627,700 samples, 0.03%)</title><rect x="591.2" y="1381" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="594.19" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2,709,436,463 samples, 0.30%)</title><rect x="581.9" y="1589" width="3.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="584.93" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (370,257,367 samples, 0.04%)</title><rect x="170.4" y="213" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="223.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (23,595,668,125 samples, 2.60%)</title><rect x="1082.9" y="1509" width="30.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1085.87" y="1519.5" >cp..</text>
</g>
<g >
<title>vfs_iter_read (108,287,144 samples, 0.01%)</title><rect x="786.7" y="1317" width="0.1" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="789.69" y="1327.5" ></text>
</g>
<g >
<title>sock_alloc_inode (256,467,541 samples, 0.03%)</title><rect x="525.5" y="1493" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="528.54" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="485" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,556,751,202 samples, 0.61%)</title><rect x="249.1" y="645" width="7.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="252.05" y="655.5" ></text>
</g>
<g >
<title>__dentry_kill (413,414,704 samples, 0.05%)</title><rect x="138.4" y="1477" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="141.44" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1125" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1135.5" >std..</text>
</g>
<g >
<title>__x64_sys_sched_yield (557,519,985 samples, 0.06%)</title><rect x="528.3" y="1589" width="0.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="531.29" y="1599.5" ></text>
</g>
<g >
<title>update_curr (190,946,875 samples, 0.02%)</title><rect x="1053.1" y="1445" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1056.10" y="1455.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (77,612,723 samples, 0.01%)</title><rect x="1066.7" y="1461" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1069.74" y="1471.5" ></text>
</g>
<g >
<title>malloc (1,928,953,239 samples, 0.21%)</title><rect x="157.9" y="1605" width="2.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="160.87" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (607,952,017 samples, 0.07%)</title><rect x="226.6" y="357" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="229.58" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (798,231,236 samples, 0.09%)</title><rect x="338.3" y="1397" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="341.29" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1541" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1221" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="1231.5" ></text>
</g>
<g >
<title>setlocale (329,742,415 samples, 0.04%)</title><rect x="147.5" y="1557" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="150.45" y="1567.5" ></text>
</g>
<g >
<title>[ls] (150,698,269 samples, 0.02%)</title><rect x="147.3" y="1557" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="150.26" y="1567.5" ></text>
</g>
<g >
<title>__schedule (1,143,335,870 samples, 0.13%)</title><rect x="103.1" y="1541" width="1.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="106.12" y="1551.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (270,705,217 samples, 0.03%)</title><rect x="587.2" y="1541" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="590.24" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="629" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="639.5" ></text>
</g>
<g >
<title>operator delete (81,861,169 samples, 0.01%)</title><rect x="300.5" y="1077" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="303.49" y="1087.5" ></text>
</g>
<g >
<title>copy_page_from_iter_atomic (296,217,665 samples, 0.03%)</title><rect x="734.2" y="1221" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="737.17" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="805" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="815.5" >st..</text>
</g>
<g >
<title>[libc.so.6] (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1589" width="11.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="845.66" y="1599.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (103,387,224 samples, 0.01%)</title><rect x="1128.7" y="1541" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1131.66" y="1551.5" ></text>
</g>
<g >
<title>init_file (250,698,976 samples, 0.03%)</title><rect x="133.5" y="1477" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="136.52" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1365" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,934,707,320 samples, 1.65%)</title><rect x="202.5" y="389" width="19.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="205.47" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,912,906,387 samples, 0.43%)</title><rect x="148.5" y="1605" width="5.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="151.46" y="1615.5" ></text>
</g>
<g >
<title>__check_object_size (401,480,336 samples, 0.04%)</title><rect x="343.4" y="1413" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="346.41" y="1423.5" ></text>
</g>
<g >
<title>do_fcntl (392,267,438 samples, 0.04%)</title><rect x="1048.3" y="1573" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1051.33" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (578,468,921 samples, 0.06%)</title><rect x="462.9" y="69" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="465.90" y="79.5" ></text>
</g>
<g >
<title>dequeue_task_fair (397,585,866 samples, 0.04%)</title><rect x="500.0" y="1381" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="503.03" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="325" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="693" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="703.5" >std..</text>
</g>
<g >
<title>__dentry_kill (625,888,619 samples, 0.07%)</title><rect x="587.9" y="1477" width="0.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="590.86" y="1487.5" ></text>
</g>
<g >
<title>__do_softirq (107,845,135 samples, 0.01%)</title><rect x="1185.9" y="1413" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1188.92" y="1423.5" ></text>
</g>
<g >
<title>xa_load (106,881,342 samples, 0.01%)</title><rect x="1044.0" y="1429" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1047.01" y="1439.5" ></text>
</g>
<g >
<title>tick_sched_handle (104,229,966 samples, 0.01%)</title><rect x="1083.4" y="1397" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1086.37" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1253" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="1263.5" ></text>
</g>
<g >
<title>NaClLog (2,103,178,304 samples, 0.23%)</title><rect x="649.7" y="1589" width="2.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="652.68" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1493" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1503.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (82,974,415 samples, 0.01%)</title><rect x="1174.1" y="1461" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1177.13" y="1471.5" ></text>
</g>
<g >
<title>start_kernel (130,707,023 samples, 0.01%)</title><rect x="1136.8" y="1573" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1139.82" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="597" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="565" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="575.5" >std..</text>
</g>
<g >
<title>rustposix::interface::comm::Socket::sendto (350,607,832 samples, 0.04%)</title><rect x="787.1" y="1525" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="790.06" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1029" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1039.5" ></text>
</g>
<g >
<title>memcg_list_lru_alloc (130,656,656 samples, 0.01%)</title><rect x="68.4" y="1429" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="71.36" y="1439.5" ></text>
</g>
<g >
<title>vfs_fstatat (7,940,989,864 samples, 0.87%)</title><rect x="342.9" y="1477" width="10.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="345.86" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="197" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="207.5" >st..</text>
</g>
<g >
<title>exec_binprm (192,085,965 samples, 0.02%)</title><rect x="503.2" y="1525" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="506.17" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="629" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1189" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1461" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1471.5" ></text>
</g>
<g >
<title>__schedule (946,614,690 samples, 0.10%)</title><rect x="599.2" y="1541" width="1.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="602.20" y="1551.5" ></text>
</g>
<g >
<title>llist_reverse_order (613,407,824 samples, 0.07%)</title><rect x="1121.9" y="1541" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1124.90" y="1551.5" ></text>
</g>
<g >
<title>free_unref_page_commit (501,414,307 samples, 0.06%)</title><rect x="843.6" y="1189" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="846.59" y="1199.5" ></text>
</g>
<g >
<title>cfree (1,407,293,199 samples, 0.16%)</title><rect x="258.7" y="693" width="1.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="261.71" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_futex (744,476,940 samples, 0.08%)</title><rect x="527.0" y="1589" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="530.03" y="1599.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (168,108,009 samples, 0.02%)</title><rect x="600.6" y="1557" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="603.58" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (97,768,854,178 samples, 10.77%)</title><rect x="191.7" y="1237" width="127.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="194.67" y="1247.5" >std::__detail::..</text>
</g>
<g >
<title>futex_wait_queue (4,722,698,872 samples, 0.52%)</title><rect x="1050.5" y="1541" width="6.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1053.52" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,774,258,325 samples, 0.53%)</title><rect x="371.3" y="181" width="6.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="191.5" ></text>
</g>
<g >
<title>add_wait_queue (104,102,335 samples, 0.01%)</title><rect x="487.7" y="1413" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="490.66" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="581" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1205" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="917" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="927.5" ></text>
</g>
<g >
<title>ovl_write_iter (588,804,460 samples, 0.06%)</title><rect x="503.9" y="1397" width="0.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="506.90" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="293" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="303.5" ></text>
</g>
<g >
<title>__update_load_avg_se (113,727,234 samples, 0.01%)</title><rect x="1053.6" y="1429" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1056.63" y="1439.5" ></text>
</g>
<g >
<title>tcp_push (106,034,255 samples, 0.01%)</title><rect x="529.0" y="1509" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="532.03" y="1519.5" ></text>
</g>
<g >
<title>ksys_read (111,938,906 samples, 0.01%)</title><rect x="786.7" y="1365" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="789.69" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,021,191,726 samples, 0.55%)</title><rect x="236.5" y="517" width="6.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="239.45" y="527.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1605" width="3.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="173.40" y="1615.5" ></text>
</g>
<g >
<title>pick_next_task_fair (90,851,508 samples, 0.01%)</title><rect x="491.9" y="1365" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="494.92" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (721,285,325 samples, 0.08%)</title><rect x="170.9" y="181" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="173.88" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,084,271,538 samples, 0.45%)</title><rect x="204.7" y="245" width="5.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="207.71" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="997" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1007.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1093" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1103.5" ></text>
</g>
<g >
<title>setlocale (89,139,854 samples, 0.01%)</title><rect x="855.2" y="1541" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="858.15" y="1551.5" ></text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (3,635,688,760 samples, 0.40%)</title><rect x="728.1" y="1285" width="4.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="731.07" y="1295.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (3,852,261,804 samples, 0.42%)</title><rect x="345.0" y="1413" width="5.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="348.00" y="1423.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (77,565,045 samples, 0.01%)</title><rect x="529.0" y="1317" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="532.03" y="1327.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (1,121,805,783 samples, 0.12%)</title><rect x="68.7" y="1509" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="71.66" y="1519.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (80,049,737 samples, 0.01%)</title><rect x="80.0" y="1349" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="83.01" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (693,087,676 samples, 0.08%)</title><rect x="253.2" y="597" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="256.18" y="607.5" ></text>
</g>
<g >
<title>cfree (1,181,707,246 samples, 0.13%)</title><rect x="180.6" y="1509" width="1.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="183.63" y="1519.5" ></text>
</g>
<g >
<title>__sock_release (119,183,297 samples, 0.01%)</title><rect x="80.5" y="1461" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="83.49" y="1471.5" ></text>
</g>
<g >
<title>uv__fs_read (143,182,398 samples, 0.02%)</title><rect x="502.8" y="1557" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="505.80" y="1567.5" ></text>
</g>
<g >
<title>__switch_to (228,871,826 samples, 0.03%)</title><rect x="481.3" y="1525" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="484.32" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1013" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1023.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (208,223,810 samples, 0.02%)</title><rect x="1130.1" y="1525" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1133.06" y="1535.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (158,835,866 samples, 0.02%)</title><rect x="742.5" y="1109" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="745.48" y="1119.5" ></text>
</g>
<g >
<title>[[vdso]] (3,619,738,346 samples, 0.40%)</title><rect x="773.4" y="1541" width="4.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="776.42" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (118,228,538,196 samples, 13.02%)</title><rect x="186.7" y="1461" width="153.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="189.74" y="1471.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>vfs_read (111,938,906 samples, 0.01%)</title><rect x="786.7" y="1349" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="789.69" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::_M_default_append (233,275,097 samples, 0.03%)</title><rect x="340.5" y="1509" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="343.50" y="1519.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (130,707,023 samples, 0.01%)</title><rect x="1136.8" y="1589" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1139.82" y="1599.5" ></text>
</g>
<g >
<title>operator new (1,180,137,533 samples, 0.13%)</title><rect x="307.5" y="1141" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="310.55" y="1151.5" ></text>
</g>
<g >
<title>operator new (147,695,444 samples, 0.02%)</title><rect x="332.8" y="1317" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="335.77" y="1327.5" ></text>
</g>
<g >
<title>release_pages (3,315,253,076 samples, 0.37%)</title><rect x="842.8" y="1221" width="4.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="845.79" y="1231.5" ></text>
</g>
<g >
<title>malloc (220,538,724 samples, 0.02%)</title><rect x="209.1" y="165" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="212.06" y="175.5" ></text>
</g>
<g >
<title>__do_softirq (544,516,363 samples, 0.06%)</title><rect x="589.6" y="1541" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="592.63" y="1551.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (2,460,403,747 samples, 0.27%)</title><rect x="1131.0" y="1605" width="3.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1133.98" y="1615.5" ></text>
</g>
<g >
<title>aeProcessEvents.part.0 (204,523,681 samples, 0.02%)</title><rect x="1170.5" y="1557" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1173.54" y="1567.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (119,410,952 samples, 0.01%)</title><rect x="587.3" y="1525" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="590.33" y="1535.5" ></text>
</g>
<g >
<title>mmput (192,085,965 samples, 0.02%)</title><rect x="503.2" y="1445" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="506.17" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (498,326,992 samples, 0.05%)</title><rect x="248.0" y="565" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="250.96" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="885" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="895.5" >st..</text>
</g>
<g >
<title>malloc (1,152,111,588 samples, 0.13%)</title><rect x="307.5" y="1125" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="310.55" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1397" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1407.5" ></text>
</g>
<g >
<title>do_accept (2,524,453,552 samples, 0.28%)</title><rect x="66.9" y="1541" width="3.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="69.89" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (312,209,129 samples, 0.03%)</title><rect x="579.0" y="1477" width="0.4" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="581.99" y="1487.5" ></text>
</g>
<g >
<title>sock_alloc (535,313,307 samples, 0.06%)</title><rect x="132.7" y="1541" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="135.72" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (335,313,375 samples, 0.04%)</title><rect x="332.6" y="1333" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="335.58" y="1343.5" ></text>
</g>
<g >
<title>__fget_light (955,600,916 samples, 0.11%)</title><rect x="1047.0" y="1557" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1049.95" y="1567.5" ></text>
</g>
<g >
<title>inet_sendmsg (127,830,406 samples, 0.01%)</title><rect x="77.2" y="1541" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="80.24" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,655,758,127 samples, 0.29%)</title><rect x="498.7" y="1541" width="3.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="501.66" y="1551.5" ></text>
</g>
<g >
<title>kfree (203,522,947 samples, 0.02%)</title><rect x="852.7" y="997" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="855.75" y="1007.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (2,460,403,747 samples, 0.27%)</title><rect x="1131.0" y="1589" width="3.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1133.98" y="1599.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (1,495,129,557 samples, 0.16%)</title><rect x="100.8" y="1541" width="2.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="103.83" y="1551.5" ></text>
</g>
<g >
<title>dequeue_entity (377,153,641 samples, 0.04%)</title><rect x="72.3" y="1445" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="75.32" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (253,671,318 samples, 0.03%)</title><rect x="248.6" y="565" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="251.60" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,102,741,965 samples, 0.23%)</title><rect x="499.3" y="1509" width="2.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="502.26" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (101,765,518 samples, 0.01%)</title><rect x="202.0" y="421" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="204.99" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="421" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="431.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDayDecoder (18,905,999,181 samples, 2.08%)</title><rect x="762.0" y="1589" width="24.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="764.97" y="1599.5" >N..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, DirEntry&gt;, std::allocator&lt;std::pair&lt;std::string const, DirEntry&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (114,058,661 samples, 0.01%)</title><rect x="175.3" y="1525" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="178.29" y="1535.5" ></text>
</g>
<g >
<title>security_file_alloc (160,288,410 samples, 0.02%)</title><rect x="579.7" y="1461" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="582.67" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="485" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="495.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (608,163,415 samples, 0.07%)</title><rect x="428.2" y="53" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="629" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="639.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (77,565,045 samples, 0.01%)</title><rect x="529.0" y="1429" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="532.03" y="1439.5" ></text>
</g>
<g >
<title>__destroy_inode (90,225,448 samples, 0.01%)</title><rect x="138.8" y="1397" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="141.77" y="1407.5" ></text>
</g>
<g >
<title>pick_next_task (283,585,708 samples, 0.03%)</title><rect x="137.1" y="1525" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="140.07" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1381" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1509" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (524,609,691 samples, 0.06%)</title><rect x="601.1" y="1493" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="604.11" y="1503.5" ></text>
</g>
<g >
<title>_copy_to_user (450,743,429 samples, 0.05%)</title><rect x="367.9" y="1461" width="0.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="370.95" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="581" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="591.5" ></text>
</g>
<g >
<title>inode_free_by_rcu (170,831,895 samples, 0.02%)</title><rect x="1084.7" y="1365" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1087.73" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (683,209,549 samples, 0.08%)</title><rect x="247.1" y="565" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="250.07" y="575.5" ></text>
</g>
<g >
<title>kmem_cache_free (324,817,392 samples, 0.04%)</title><rect x="1078.4" y="1461" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1081.38" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1477" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1487.5" ></text>
</g>
<g >
<title>ext4_release_folio (3,028,374,648 samples, 0.33%)</title><rect x="850.4" y="1173" width="3.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="853.41" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,573,039,874 samples, 2.27%)</title><rect x="201.9" y="437" width="26.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="204.88" y="447.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1141" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1151.5" ></text>
</g>
<g >
<title>schedule (368,538,145 samples, 0.04%)</title><rect x="527.2" y="1525" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="530.20" y="1535.5" ></text>
</g>
<g >
<title>ip_output (77,612,723 samples, 0.01%)</title><rect x="1066.7" y="1397" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1069.74" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (86,032,278 samples, 0.01%)</title><rect x="167.9" y="1605" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="170.91" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1605" width="4.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="478.49" y="1615.5" ></text>
</g>
<g >
<title>call_cpuidle (145,834,777 samples, 0.02%)</title><rect x="534.5" y="1477" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="537.51" y="1487.5" ></text>
</g>
<g >
<title>psi_group_change (100,485,343 samples, 0.01%)</title><rect x="534.1" y="1509" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="537.09" y="1519.5" ></text>
</g>
<g >
<title>malloc (183,315,280 samples, 0.02%)</title><rect x="376.9" y="117" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="379.85" y="127.5" ></text>
</g>
<g >
<title>reweight_entity (108,719,460 samples, 0.01%)</title><rect x="490.1" y="1317" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="493.11" y="1327.5" ></text>
</g>
<g >
<title>sock_alloc (664,564,802 samples, 0.07%)</title><rect x="578.5" y="1541" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="581.53" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="901" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="911.5" >std..</text>
</g>
<g >
<title>flush_smp_call_function_queue (112,024,428 samples, 0.01%)</title><rect x="600.8" y="1573" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="603.80" y="1583.5" ></text>
</g>
<g >
<title>__fput (218,743,865 samples, 0.02%)</title><rect x="1136.0" y="1509" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1138.96" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="373" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="383.5" ></text>
</g>
<g >
<title>DirTree::update (366,322,264 samples, 0.04%)</title><rect x="175.2" y="1557" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="178.16" y="1567.5" ></text>
</g>
<g >
<title>update_rq_clock (506,417,398 samples, 0.06%)</title><rect x="1065.7" y="1525" width="0.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1068.69" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="933" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,857,206,628 samples, 0.20%)</title><rect x="475.5" y="117" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="127.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (457,859,195 samples, 0.05%)</title><rect x="601.1" y="1445" width="0.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="604.11" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1477" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1487.5" ></text>
</g>
<g >
<title>init_file (812,916,751 samples, 0.09%)</title><rect x="1040.7" y="1477" width="1.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1043.73" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="773" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="783.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (231,464,464 samples, 0.03%)</title><rect x="580.3" y="1477" width="0.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="583.34" y="1487.5" ></text>
</g>
<g >
<title>clock_gettime (1,025,082,046 samples, 0.11%)</title><rect x="839.8" y="1605" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="842.81" y="1615.5" ></text>
</g>
<g >
<title>cfree (10,472,551,985 samples, 1.15%)</title><rect x="395.6" y="101" width="13.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="398.58" y="111.5" ></text>
</g>
<g >
<title>__get_user_8 (197,350,479 samples, 0.02%)</title><rect x="496.9" y="1413" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="499.87" y="1423.5" ></text>
</g>
<g >
<title>xas_clear_mark (95,232,201 samples, 0.01%)</title><rect x="848.1" y="1205" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="851.11" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1269" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1279.5" ></text>
</g>
<g >
<title>__calc_delta (118,774,767 samples, 0.01%)</title><rect x="76.3" y="1461" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="79.31" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="837" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1493" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1503.5" ></text>
</g>
<g >
<title>__schedule (4,194,209,857 samples, 0.46%)</title><rect x="1051.1" y="1509" width="5.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1054.08" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (283,992,252 samples, 0.03%)</title><rect x="579.9" y="1477" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="582.88" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1573" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1445" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1455.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (478,811,021 samples, 0.05%)</title><rect x="241.4" y="501" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="244.36" y="511.5" ></text>
</g>
<g >
<title>_IO_file_write (14,930,584,689 samples, 1.64%)</title><rect x="725.6" y="1445" width="19.4" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="728.56" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="917" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="927.5" ></text>
</g>
<g >
<title>cfree (860,851,312 samples, 0.09%)</title><rect x="292.7" y="1013" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="295.68" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="533" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="543.5" ></text>
</g>
<g >
<title>ttwu_do_activate (246,459,980 samples, 0.03%)</title><rect x="533.3" y="1509" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="536.31" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (232,474,267 samples, 0.03%)</title><rect x="526.7" y="1589" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="529.73" y="1599.5" ></text>
</g>
<g >
<title>tcp_push (77,612,723 samples, 0.01%)</title><rect x="1066.7" y="1509" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1069.74" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,773,005,659 samples, 1.63%)</title><rect x="202.7" y="373" width="19.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="205.65" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,295,952 samples, 0.05%)</title><rect x="294.8" y="1013" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="297.82" y="1023.5" ></text>
</g>
<g >
<title>operator new (172,143,585 samples, 0.02%)</title><rect x="228.2" y="357" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="231.20" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1493" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1503.5" ></text>
</g>
<g >
<title>file_free_rcu (114,842,129 samples, 0.01%)</title><rect x="140.3" y="1365" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="143.30" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="565" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="575.5" ></text>
</g>
<g >
<title>cfree (1,266,844,145 samples, 0.14%)</title><rect x="321.6" y="1269" width="1.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="324.57" y="1279.5" ></text>
</g>
<g >
<title>intel_idle (194,502,737 samples, 0.02%)</title><rect x="105.1" y="1429" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="108.14" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,320,693,153 samples, 3.45%)</title><rect x="428.2" y="133" width="40.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="143.5" >std..</text>
</g>
<g >
<title>[expr] (138,538,026 samples, 0.02%)</title><rect x="106.7" y="1621" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="109.74" y="1631.5" ></text>
</g>
<g >
<title>ion (644,834,462 samples, 0.07%)</title><rect x="503.8" y="1509" width="0.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="506.83" y="1519.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,558,090,071 samples, 0.17%)</title><rect x="1083.3" y="1493" width="2.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1086.30" y="1503.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (80,097,141 samples, 0.01%)</title><rect x="82.9" y="1477" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="85.86" y="1487.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (248,151,665 samples, 0.03%)</title><rect x="604.6" y="1621" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="607.61" y="1631.5" ></text>
</g>
<g >
<title>destroy_inode (80,510,532 samples, 0.01%)</title><rect x="530.1" y="1413" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="533.09" y="1423.5" ></text>
</g>
<g >
<title>check_heap_object (198,652,657 samples, 0.02%)</title><rect x="343.5" y="1381" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="346.53" y="1391.5" ></text>
</g>
<g >
<title>enqueue_task_fair (122,883,449 samples, 0.01%)</title><rect x="1133.1" y="1413" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1136.12" y="1423.5" ></text>
</g>
<g >
<title>__schedule (467,163,909 samples, 0.05%)</title><rect x="528.4" y="1541" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="531.36" y="1551.5" ></text>
</g>
<g >
<title>clock_gettime (172,184,546 samples, 0.02%)</title><rect x="502.2" y="1541" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="505.23" y="1551.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (2,009,792,674 samples, 0.22%)</title><rect x="740.4" y="1189" width="2.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="743.39" y="1199.5" ></text>
</g>
<g >
<title>rcu_core_si (260,437,292 samples, 0.03%)</title><rect x="140.3" y="1413" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="143.28" y="1423.5" ></text>
</g>
<g >
<title>remove_wait_queue (93,833,333 samples, 0.01%)</title><rect x="495.6" y="1461" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="498.63" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1093" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="1103.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (94,012,363 samples, 0.01%)</title><rect x="100.6" y="1509" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="103.59" y="1519.5" ></text>
</g>
<g >
<title>security_inode_free (110,601,867 samples, 0.01%)</title><rect x="1179.9" y="1381" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1182.87" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,365,102 samples, 0.05%)</title><rect x="468.9" y="117" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="471.93" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,121,545,876 samples, 0.45%)</title><rect x="525.2" y="1605" width="5.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="528.17" y="1615.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (197,070,115 samples, 0.02%)</title><rect x="1073.6" y="1333" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1076.61" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="805" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1253" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="325" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (83,030,597 samples, 0.01%)</title><rect x="658.0" y="1557" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="660.95" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1317" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1327.5" ></text>
</g>
<g >
<title>operator new (192,443,242 samples, 0.02%)</title><rect x="302.7" y="1061" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="305.67" y="1071.5" ></text>
</g>
<g >
<title>rcu_do_batch (108,120,366 samples, 0.01%)</title><rect x="596.4" y="1365" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="599.41" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,701,816,294 samples, 2.28%)</title><rect x="201.7" y="453" width="26.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="204.73" y="463.5" >s..</text>
</g>
<g >
<title>(otd-news) (366,417,520 samples, 0.04%)</title><rect x="10.0" y="1637" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,377,190,358 samples, 0.15%)</title><rect x="1083.5" y="1461" width="1.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1086.54" y="1471.5" ></text>
</g>
<g >
<title>[[vdso]] (11,351,437,034 samples, 1.25%)</title><rect x="746.5" y="1509" width="14.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="749.46" y="1519.5" ></text>
</g>
<g >
<title>worker_thread (1,163,478,167 samples, 0.13%)</title><rect x="1080.0" y="1573" width="1.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1083.03" y="1583.5" ></text>
</g>
<g >
<title>reweight_entity (87,903,746 samples, 0.01%)</title><rect x="1118.4" y="1429" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1121.39" y="1439.5" ></text>
</g>
<g >
<title>psi_task_switch (901,273,222 samples, 0.10%)</title><rect x="492.4" y="1381" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="495.37" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (329,194,163 samples, 0.04%)</title><rect x="270.5" y="757" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="273.53" y="767.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,833,646,225 samples, 0.31%)</title><rect x="530.8" y="1589" width="3.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="533.83" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (224,511,920 samples, 0.02%)</title><rect x="277.2" y="821" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="280.21" y="831.5" ></text>
</g>
<g >
<title>enqueue_entity (407,464,030 samples, 0.04%)</title><rect x="101.4" y="1461" width="0.6" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="104.43" y="1471.5" ></text>
</g>
<g >
<title>crypto_shash_update (148,089,955 samples, 0.02%)</title><rect x="742.0" y="1077" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="744.97" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (97,934,672,165 samples, 10.79%)</title><rect x="191.6" y="1253" width="127.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="194.56" y="1263.5" >std::__detail::..</text>
</g>
<g >
<title>execute_command (124,500,596 samples, 0.01%)</title><rect x="854.8" y="1397" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="857.83" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,523,050,572 samples, 0.17%)</title><rect x="1131.1" y="1493" width="1.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1134.06" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,552,842,054 samples, 0.17%)</title><rect x="787.5" y="1605" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="790.52" y="1615.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (313,363,097 samples, 0.03%)</title><rect x="581.0" y="1557" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="584.01" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_accept (134,078,135 samples, 0.01%)</title><rect x="1135.4" y="1589" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1138.41" y="1599.5" ></text>
</g>
<g >
<title>__libc_start_main (480,440,684 samples, 0.05%)</title><rect x="147.3" y="1605" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="150.26" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1109" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1381" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="453" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="357" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (119,911,186 samples, 0.01%)</title><rect x="1052.1" y="1493" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1055.06" y="1503.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (1,329,002,125 samples, 0.15%)</title><rect x="597.2" y="1541" width="1.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="600.20" y="1551.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (107,845,135 samples, 0.01%)</title><rect x="1185.9" y="1429" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1188.92" y="1439.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (304,181,839 samples, 0.03%)</title><rect x="1133.1" y="1461" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1136.10" y="1471.5" ></text>
</g>
<g >
<title>file_free_rcu (177,431,314 samples, 0.02%)</title><rect x="1180.9" y="1477" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1183.86" y="1487.5" ></text>
</g>
<g >
<title>open64 (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1477" width="11.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="845.66" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1029" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1039.5" ></text>
</g>
<g >
<title>_raw_spin_lock (155,058,308 samples, 0.02%)</title><rect x="1036.8" y="1525" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1039.78" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (78,560,713,158 samples, 8.65%)</title><rect x="194.1" y="1061" width="102.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="197.09" y="1071.5" >std::__detai..</text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (240,334,370 samples, 0.03%)</title><rect x="502.5" y="1589" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="505.46" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="469" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="693" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="703.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (93,831,180 samples, 0.01%)</title><rect x="733.6" y="1301" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="736.56" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="277" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="287.5" >std..</text>
</g>
<g >
<title>[libc.so.6] (757,837,701 samples, 0.08%)</title><rect x="273.8" y="805" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="276.83" y="815.5" ></text>
</g>
<g >
<title>sock_free_inode (557,055,265 samples, 0.06%)</title><rect x="1078.8" y="1461" width="0.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1081.80" y="1471.5" ></text>
</g>
<g >
<title>__sys_sendto (109,463,095 samples, 0.01%)</title><rect x="1178.4" y="1573" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1181.39" y="1583.5" ></text>
</g>
<g >
<title>unmap_single_vma (87,505,302 samples, 0.01%)</title><rect x="503.3" y="1381" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="506.30" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1157" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="1167.5" ></text>
</g>
<g >
<title>HandleStackContext (7,167,378,550 samples, 0.79%)</title><rect x="623.8" y="1589" width="9.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="626.78" y="1599.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5,652,705,588 samples, 0.62%)</title><rect x="1115.4" y="1557" width="7.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1118.37" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (441,679,879 samples, 0.05%)</title><rect x="366.3" y="1461" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="369.30" y="1471.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (297,231,721 samples, 0.03%)</title><rect x="1134.2" y="1621" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1137.18" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1541" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="933" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (638,528,824 samples, 0.07%)</title><rect x="503.8" y="1477" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="506.84" y="1487.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (204,040,653 samples, 0.02%)</title><rect x="69.1" y="1461" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="72.10" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,680,582,848 samples, 2.61%)</title><rect x="392.8" y="181" width="30.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="191.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (91,321,956,369 samples, 10.06%)</title><rect x="192.6" y="1173" width="118.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="195.57" y="1183.5" >std::__detail:..</text>
</g>
<g >
<title>malloc (258,007,956 samples, 0.03%)</title><rect x="478.8" y="117" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="481.84" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="181" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="191.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1,010,993,504 samples, 0.11%)</title><rect x="1125.2" y="1509" width="1.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1128.15" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="213" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="223.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (106,034,255 samples, 0.01%)</title><rect x="529.0" y="1493" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="532.03" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1509" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_free (119,599,144 samples, 0.01%)</title><rect x="590.0" y="1445" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="592.98" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (245,006,902 samples, 0.03%)</title><rect x="173.0" y="197" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="176.02" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (108,819,149 samples, 0.01%)</title><rect x="295.9" y="1013" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="298.91" y="1023.5" ></text>
</g>
<g >
<title>ret_from_fork (407,890,461 samples, 0.04%)</title><rect x="139.5" y="1605" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="142.49" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="581" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="591.5" ></text>
</g>
<g >
<title>rcu_core (544,516,363 samples, 0.06%)</title><rect x="589.6" y="1509" width="0.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="592.63" y="1519.5" ></text>
</g>
<g >
<title>inet_accept (120,437,631 samples, 0.01%)</title><rect x="1172.4" y="1541" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1175.35" y="1551.5" ></text>
</g>
<g >
<title>malloc (110,403,022 samples, 0.01%)</title><rect x="248.4" y="533" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="251.44" y="543.5" ></text>
</g>
<g >
<title>[[vdso]] (5,245,705,070 samples, 0.58%)</title><rect x="779.4" y="1525" width="6.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="782.42" y="1535.5" ></text>
</g>
<g >
<title>vfs_write (118,390,697 samples, 0.01%)</title><rect x="1067.0" y="1557" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1069.96" y="1567.5" ></text>
</g>
<g >
<title>start_secondary (2,833,646,225 samples, 0.31%)</title><rect x="530.8" y="1605" width="3.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="533.83" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="341" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (108,350,916 samples, 0.01%)</title><rect x="220.4" y="277" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="223.36" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,267,422,138 samples, 0.47%)</title><rect x="525.0" y="1621" width="5.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="527.99" y="1631.5" ></text>
</g>
<g >
<title>_raw_spin_lock (92,688,309 samples, 0.01%)</title><rect x="365.0" y="1493" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="367.96" y="1503.5" ></text>
</g>
<g >
<title>inode_permission (697,922,351 samples, 0.08%)</title><rect x="346.4" y="1365" width="0.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="349.44" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="405" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (110,594,785,395 samples, 12.18%)</title><rect x="189.7" y="1365" width="143.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="192.66" y="1375.5" >std::__detail::_Ex..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (51,022,836,165 samples, 5.62%)</title><rect x="197.9" y="741" width="66.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="200.94" y="751.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,859,268,694 samples, 2.96%)</title><rect x="201.5" y="485" width="35.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="204.54" y="495.5" >st..</text>
</g>
<g >
<title>smpboot_thread_fn (342,602,192 samples, 0.04%)</title><rect x="139.5" y="1573" width="0.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="142.49" y="1583.5" ></text>
</g>
<g >
<title>sock_free_inode (142,750,938 samples, 0.02%)</title><rect x="590.0" y="1461" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="592.95" y="1471.5" ></text>
</g>
<g >
<title>operator delete (164,665,428 samples, 0.02%)</title><rect x="457.5" y="69" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="460.52" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,498,635,442 samples, 0.17%)</title><rect x="424.0" y="69" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="79.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (95,645,903 samples, 0.01%)</title><rect x="855.4" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="858.44" y="1583.5" ></text>
</g>
<g >
<title>task_work_run (3,845,354,300 samples, 0.42%)</title><rect x="1071.0" y="1541" width="5.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1073.96" y="1551.5" ></text>
</g>
<g >
<title>NaClClockGetTime (197,469,089 samples, 0.02%)</title><rect x="834.8" y="1605" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="837.77" y="1615.5" ></text>
</g>
<g >
<title>cfree (980,688,514 samples, 0.11%)</title><rect x="273.5" y="821" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="276.54" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1045" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1055.5" ></text>
</g>
<g >
<title>__sys_sendto (164,396,170 samples, 0.02%)</title><rect x="77.2" y="1557" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="80.24" y="1567.5" ></text>
</g>
<g >
<title>tick_nohz_stop_idle (89,127,571 samples, 0.01%)</title><rect x="104.9" y="1541" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="107.88" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="549" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="559.5" >st..</text>
</g>
<g >
<title>alloc_file_pseudo (745,257,215 samples, 0.08%)</title><rect x="1173.4" y="1525" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1176.38" y="1535.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,558,090,071 samples, 0.17%)</title><rect x="1083.3" y="1477" width="2.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1086.30" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1381" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="1391.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (77,612,723 samples, 0.01%)</title><rect x="1066.7" y="1493" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1069.74" y="1503.5" ></text>
</g>
<g >
<title>[bash] (112,476,717 samples, 0.01%)</title><rect x="855.0" y="1397" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="857.99" y="1407.5" ></text>
</g>
<g >
<title>rcu_do_batch (254,973,883 samples, 0.03%)</title><rect x="140.3" y="1381" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="143.29" y="1391.5" ></text>
</g>
<g >
<title>____fput (1,448,235,407 samples, 0.16%)</title><rect x="78.8" y="1509" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="81.78" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,441,109,491 samples, 0.16%)</title><rect x="476.0" y="85" width="1.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="478.99" y="95.5" ></text>
</g>
<g >
<title>sched_clock (170,348,208 samples, 0.02%)</title><rect x="1129.5" y="1509" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1132.45" y="1519.5" ></text>
</g>
<g >
<title>ip_finish_output (77,612,723 samples, 0.01%)</title><rect x="1066.7" y="1381" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1069.74" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="661" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (315,039,819 samples, 0.03%)</title><rect x="221.4" y="309" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="224.38" y="319.5" ></text>
</g>
<g >
<title>pick_next_task (123,799,160 samples, 0.01%)</title><rect x="1188.3" y="1525" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1191.27" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (677,857,048 samples, 0.07%)</title><rect x="371.3" y="149" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="159.5" ></text>
</g>
<g >
<title>operator new@plt (100,766,208 samples, 0.01%)</title><rect x="466.7" y="53" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="469.73" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="325" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_poll (9,827,593,273 samples, 1.08%)</title><rect x="483.2" y="1493" width="12.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="486.21" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1189" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1199.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (122,551,334 samples, 0.01%)</title><rect x="761.6" y="1589" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="764.61" y="1599.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (151,713,710 samples, 0.02%)</title><rect x="1083.3" y="1429" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1086.31" y="1439.5" ></text>
</g>
<g >
<title>copy_event_to_user (1,274,119,675 samples, 0.14%)</title><rect x="366.9" y="1477" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="369.88" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (435,162,992 samples, 0.05%)</title><rect x="255.7" y="629" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="258.71" y="639.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (125,836,545 samples, 0.01%)</title><rect x="1129.5" y="1493" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1132.51" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1349" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1285" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (408,449,764 samples, 0.04%)</title><rect x="480.7" y="1525" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="483.73" y="1535.5" ></text>
</g>
<g >
<title>enqueue_task_fair (398,074,439 samples, 0.04%)</title><rect x="1186.8" y="1477" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1189.84" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (99,170,507 samples, 0.01%)</title><rect x="202.8" y="357" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="205.78" y="367.5" ></text>
</g>
<g >
<title>__clone (17,747,739,561 samples, 1.95%)</title><rect x="480.0" y="1621" width="23.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="483.00" y="1631.5" >_..</text>
</g>
<g >
<title>vfs_read (182,194,971 samples, 0.02%)</title><rect x="528.0" y="1557" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="531.01" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (222,500,485 samples, 0.02%)</title><rect x="168.6" y="1461" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="171.55" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="693" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="703.5" ></text>
</g>
<g >
<title>fsnotify_destroy_event (1,076,043,513 samples, 0.12%)</title><rect x="368.5" y="1477" width="1.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="371.53" y="1487.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (612,394,911 samples, 0.07%)</title><rect x="355.8" y="1573" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="358.79" y="1583.5" ></text>
</g>
<g >
<title>__switch_to (165,255,059 samples, 0.02%)</title><rect x="489.3" y="1381" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="492.30" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="261" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="271.5" ></text>
</g>
<g >
<title>ext4_finish_bio (193,638,728 samples, 0.02%)</title><rect x="1136.2" y="1509" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1139.25" y="1519.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (246,833,398 samples, 0.03%)</title><rect x="649.4" y="1589" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="652.36" y="1599.5" ></text>
</g>
<g >
<title>__alloc_pages (119,267,148 samples, 0.01%)</title><rect x="1038.3" y="1397" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1041.26" y="1407.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (109,671,622 samples, 0.01%)</title><rect x="1131.2" y="1381" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1134.17" y="1391.5" ></text>
</g>
<g >
<title>do_idle (98,878,304 samples, 0.01%)</title><rect x="601.0" y="1589" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="603.98" y="1599.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,674,279,283 samples, 0.29%)</title><rect x="77.7" y="1573" width="3.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="80.70" y="1583.5" ></text>
</g>
<g >
<title>cfree (165,419,986 samples, 0.02%)</title><rect x="208.7" y="181" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="211.71" y="191.5" ></text>
</g>
<g >
<title>pick_next_task (179,004,407 samples, 0.02%)</title><rect x="103.7" y="1525" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="106.70" y="1535.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (98,736,814 samples, 0.01%)</title><rect x="835.1" y="1605" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="838.11" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (116,547,839,623 samples, 12.84%)</title><rect x="188.9" y="1429" width="151.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="191.92" y="1439.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1205" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="1215.5" ></text>
</g>
<g >
<title>futex_wait (6,415,530,293 samples, 0.71%)</title><rect x="1049.5" y="1557" width="8.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1052.53" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1493" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="1503.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="613" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="517" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="527.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1077" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1087.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="229" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="239.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (100,915,518 samples, 0.01%)</title><rect x="1134.0" y="1493" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1137.04" y="1503.5" ></text>
</g>
<g >
<title>pick_next_task_fair (123,799,160 samples, 0.01%)</title><rect x="1188.3" y="1509" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1191.27" y="1519.5" ></text>
</g>
<g >
<title>__unfreeze_partials (251,976,321 samples, 0.03%)</title><rect x="852.7" y="1061" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="855.68" y="1071.5" ></text>
</g>
<g >
<title>malloc@plt (221,936,604 samples, 0.02%)</title><rect x="474.8" y="53" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="477.79" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="853" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="863.5" ></text>
</g>
<g >
<title>[libc.so.6] (138,538,026 samples, 0.02%)</title><rect x="106.7" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="109.74" y="1551.5" ></text>
</g>
<g >
<title>lockref_put_return (103,553,645 samples, 0.01%)</title><rect x="351.0" y="1429" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="353.97" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (437,760,973 samples, 0.05%)</title><rect x="672.1" y="1525" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="675.12" y="1535.5" ></text>
</g>
<g >
<title>vfs_read (109,921,441 samples, 0.01%)</title><rect x="75.3" y="1541" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="78.35" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1173" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1183.5" >std..</text>
</g>
<g >
<title>mod_objcg_state (171,898,509 samples, 0.02%)</title><rect x="1038.9" y="1445" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1041.95" y="1455.5" ></text>
</g>
<g >
<title>notify_change (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1333" width="11.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="845.66" y="1343.5" ></text>
</g>
<g >
<title>update_min_vruntime (100,215,187 samples, 0.01%)</title><rect x="76.7" y="1477" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="79.70" y="1487.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (918,746,155 samples, 0.10%)</title><rect x="847.1" y="1237" width="1.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="850.10" y="1247.5" ></text>
</g>
<g >
<title>complete_walk (231,540,667 samples, 0.03%)</title><rect x="344.7" y="1413" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="347.70" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1333" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1343.5" ></text>
</g>
<g >
<title>wake_q_add_safe (115,446,664 samples, 0.01%)</title><rect x="360.0" y="1429" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="363.00" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="645" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="655.5" ></text>
</g>
<g >
<title>do_idle (5,690,163,753 samples, 0.63%)</title><rect x="1181.4" y="1573" width="7.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1184.43" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (508,257,871 samples, 0.06%)</title><rect x="247.2" y="549" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="250.21" y="559.5" ></text>
</g>
<g >
<title>futex_wait_setup (182,284,295 samples, 0.02%)</title><rect x="135.9" y="1541" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="138.92" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (109,991,573 samples, 0.01%)</title><rect x="67.6" y="1445" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="70.59" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="309" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="319.5" >std..</text>
</g>
<g >
<title>ext4_file_write_iter (574,492,737 samples, 0.06%)</title><rect x="503.9" y="1333" width="0.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="506.91" y="1343.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (88,376,739 samples, 0.01%)</title><rect x="600.5" y="1557" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="603.46" y="1567.5" ></text>
</g>
<g >
<title>free_slab (146,261,267 samples, 0.02%)</title><rect x="852.8" y="901" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="855.82" y="911.5" ></text>
</g>
<g >
<title>__schedule (171,486,089 samples, 0.02%)</title><rect x="1135.6" y="1509" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1138.59" y="1519.5" ></text>
</g>
<g >
<title>dequeue_entity (1,159,565,289 samples, 0.13%)</title><rect x="489.6" y="1349" width="1.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="492.60" y="1359.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (110,738,250 samples, 0.01%)</title><rect x="77.3" y="1509" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="80.26" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="949" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="959.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1013" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1023.5" ></text>
</g>
<g >
<title>cpuidle_select (1,088,913,953 samples, 0.12%)</title><rect x="1113.8" y="1541" width="1.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1116.77" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="245" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="255.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (77,565,045 samples, 0.01%)</title><rect x="529.0" y="1461" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="532.03" y="1471.5" ></text>
</g>
<g >
<title>uv__async_io (112,328,853 samples, 0.01%)</title><rect x="479.8" y="1589" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="482.76" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1253" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (211,503,226 samples, 0.02%)</title><rect x="390.9" y="85" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="95.5" ></text>
</g>
<g >
<title>futex_q_lock (100,411,222 samples, 0.01%)</title><rect x="584.3" y="1525" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="587.33" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="549" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (406,573,403 samples, 0.04%)</title><rect x="225.8" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="228.84" y="351.5" ></text>
</g>
<g >
<title>folio_unlock (98,735,505 samples, 0.01%)</title><rect x="744.2" y="1189" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="747.20" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1413" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="757" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="767.5" ></text>
</g>
<g >
<title>sched_clock_cpu (82,321,046 samples, 0.01%)</title><rect x="1056.3" y="1477" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1059.25" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1429" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1439.5" ></text>
</g>
<g >
<title>malloc (1,116,885,670 samples, 0.12%)</title><rect x="323.3" y="1253" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="326.27" y="1263.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (829,197,525 samples, 0.09%)</title><rect x="162.7" y="1605" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="165.73" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (898,975,708 samples, 0.10%)</title><rect x="224.2" y="357" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="227.15" y="367.5" ></text>
</g>
<g >
<title>runc (105,681,766 samples, 0.01%)</title><rect x="504.7" y="1637" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="507.68" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1285" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,641,590,995 samples, 0.18%)</title><rect x="428.2" y="85" width="2.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="95.5" ></text>
</g>
<g >
<title>sock_close (129,788,643 samples, 0.01%)</title><rect x="80.5" y="1477" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="83.49" y="1487.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (229,377,017 samples, 0.03%)</title><rect x="1071.3" y="1477" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1074.29" y="1487.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (3,578,199,105 samples, 0.39%)</title><rect x="1040.2" y="1525" width="4.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1043.24" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="981" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="991.5" ></text>
</g>
<g >
<title>_raw_spin_rq_lock_irqsave (92,877,740 samples, 0.01%)</title><rect x="1116.0" y="1509" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1118.96" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (247,512,165 samples, 0.03%)</title><rect x="147.5" y="1493" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="150.45" y="1503.5" ></text>
</g>
<g >
<title>update_rq_clock (742,814,388 samples, 0.08%)</title><rect x="1120.9" y="1509" width="0.9" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1123.86" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter (145,834,777 samples, 0.02%)</title><rect x="534.5" y="1461" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="537.51" y="1471.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (158,893,230 samples, 0.02%)</title><rect x="79.6" y="1349" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="82.65" y="1359.5" ></text>
</g>
<g >
<title>do_sched_yield (882,145,446 samples, 0.10%)</title><rect x="585.5" y="1573" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="588.46" y="1583.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (40,483,854,188 samples, 4.46%)</title><rect x="1081.6" y="1621" width="52.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1084.56" y="1631.5" >secon..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,240,463,371 samples, 3.00%)</title><rect x="201.0" y="501" width="35.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="204.05" y="511.5" >std..</text>
</g>
<g >
<title>exit_mmap (192,085,965 samples, 0.02%)</title><rect x="503.2" y="1413" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="506.17" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="805" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1573" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="1583.5" ></text>
</g>
<g >
<title>__slab_free (137,882,223 samples, 0.02%)</title><rect x="1084.7" y="1333" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1087.74" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (248,184,414 samples, 0.03%)</title><rect x="1174.7" y="1589" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1177.70" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1525" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1535.5" ></text>
</g>
<g >
<title>__libc_start_main (138,538,026 samples, 0.02%)</title><rect x="106.7" y="1605" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="109.74" y="1615.5" ></text>
</g>
<g >
<title>__sock_release (180,998,728 samples, 0.02%)</title><rect x="1075.3" y="1477" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1078.31" y="1487.5" ></text>
</g>
<g >
<title>operator new (169,999,004 samples, 0.02%)</title><rect x="283.2" y="869" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="286.23" y="879.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (344,097,976 samples, 0.04%)</title><rect x="496.8" y="1429" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="499.82" y="1439.5" ></text>
</g>
<g >
<title>inotify_read (4,200,767,954 samples, 0.46%)</title><rect x="365.2" y="1493" width="5.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="368.19" y="1503.5" ></text>
</g>
<g >
<title>fput (157,553,742 samples, 0.02%)</title><rect x="1067.4" y="1589" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1070.38" y="1599.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (685,557,874 samples, 0.08%)</title><rect x="144.2" y="1525" width="0.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="147.23" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1269" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="1279.5" ></text>
</g>
<g >
<title>begin_new_exec (192,085,965 samples, 0.02%)</title><rect x="503.2" y="1477" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="506.17" y="1487.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,846,445,720 samples, 0.20%)</title><rect x="586.8" y="1589" width="2.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="589.85" y="1599.5" ></text>
</g>
<g >
<title>path_init (130,131,996 samples, 0.01%)</title><rect x="350.0" y="1413" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="353.04" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock (90,516,699 samples, 0.01%)</title><rect x="1049.3" y="1557" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1052.29" y="1567.5" ></text>
</g>
<g >
<title>truncate_cleanup_folio (4,142,001,089 samples, 0.46%)</title><rect x="849.0" y="1237" width="5.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="852.00" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (21,550,765,222 samples, 2.37%)</title><rect x="395.6" y="117" width="28.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="398.58" y="127.5" >s..</text>
</g>
<g >
<title>malloc (156,549,521 samples, 0.02%)</title><rect x="302.7" y="1045" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="305.67" y="1055.5" ></text>
</g>
<g >
<title>[libc.so.6] (128,246,622 samples, 0.01%)</title><rect x="106.7" y="1493" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="109.74" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="709" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="719.5" ></text>
</g>
<g >
<title>rcu_core (108,120,366 samples, 0.01%)</title><rect x="596.4" y="1381" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="599.41" y="1391.5" ></text>
</g>
<g >
<title>read_tsc (160,308,232 samples, 0.02%)</title><rect x="1129.2" y="1541" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1132.16" y="1551.5" ></text>
</g>
<g >
<title>cpu_startup_entry (345,509,644 samples, 0.04%)</title><rect x="146.6" y="1525" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="149.55" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (327,907,228 samples, 0.04%)</title><rect x="423.6" y="133" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="426.59" y="143.5" ></text>
</g>
<g >
<title>schedule (493,307,894 samples, 0.05%)</title><rect x="528.4" y="1557" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="531.36" y="1567.5" ></text>
</g>
<g >
<title>sock_alloc_file (1,155,888,796 samples, 0.13%)</title><rect x="68.7" y="1525" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="71.66" y="1535.5" ></text>
</g>
<g >
<title>malloc (727,224,941 samples, 0.08%)</title><rect x="274.9" y="805" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="277.86" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (831,037,039 samples, 0.09%)</title><rect x="254.1" y="629" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="257.08" y="639.5" ></text>
</g>
<g >
<title>ext4_fill_raw_inode (587,840,715 samples, 0.06%)</title><rect x="741.6" y="1109" width="0.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="744.58" y="1119.5" ></text>
</g>
<g >
<title>rcu_core (212,756,556 samples, 0.02%)</title><rect x="1113.3" y="1381" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1116.26" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (578,973,188 samples, 0.06%)</title><rect x="233.4" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="236.37" y="415.5" ></text>
</g>
<g >
<title>rest_init (273,228,048 samples, 0.03%)</title><rect x="534.5" y="1541" width="0.4" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="537.51" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,743,751,880 samples, 0.30%)</title><rect x="606.2" y="1605" width="3.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="609.18" y="1615.5" ></text>
</g>
<g >
<title>destroy_inode (149,751,646 samples, 0.02%)</title><rect x="138.8" y="1413" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="141.76" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="709" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="719.5" >st..</text>
</g>
<g >
<title>futex_unqueue (435,551,800 samples, 0.05%)</title><rect x="1050.0" y="1541" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1052.96" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1285" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,918,296,786 samples, 0.43%)</title><rect x="204.9" y="213" width="5.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="207.93" y="223.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (246,807,512 samples, 0.03%)</title><rect x="740.5" y="1157" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="743.52" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,010,116,457 samples, 0.33%)</title><rect x="424.0" y="197" width="3.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="207.5" ></text>
</g>
<g >
<title>rcu_core_si (1,620,016,993 samples, 0.18%)</title><rect x="1077.9" y="1525" width="2.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1080.86" y="1535.5" ></text>
</g>
<g >
<title>__slab_free (133,780,460 samples, 0.01%)</title><rect x="1136.5" y="1349" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1139.50" y="1359.5" ></text>
</g>
<g >
<title>__mmput (192,085,965 samples, 0.02%)</title><rect x="503.2" y="1429" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="506.17" y="1439.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (389,276,149 samples, 0.04%)</title><rect x="352.0" y="1381" width="0.5" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="355.02" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="757" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="767.5" >std..</text>
</g>
<g >
<title>m_show (166,366,399 samples, 0.02%)</title><rect x="528.0" y="1525" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="531.02" y="1535.5" ></text>
</g>
<g >
<title>std::string::reserve (188,087,683 samples, 0.02%)</title><rect x="341.6" y="1541" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="344.63" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="677" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="687.5" >std..</text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (138,593,814 samples, 0.02%)</title><rect x="380.9" y="101" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="383.90" y="111.5" ></text>
</g>
<g >
<title>ksys_write (14,337,040,588 samples, 1.58%)</title><rect x="726.2" y="1365" width="18.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="729.21" y="1375.5" ></text>
</g>
<g >
<title>security_file_permission (284,133,761 samples, 0.03%)</title><rect x="370.6" y="1477" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="373.65" y="1487.5" ></text>
</g>
<g >
<title>kthread (2,858,430,289 samples, 0.31%)</title><rect x="1077.8" y="1589" width="3.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1080.83" y="1599.5" ></text>
</g>
<g >
<title>refill_obj_stock (88,702,226 samples, 0.01%)</title><rect x="1072.4" y="1413" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1075.39" y="1423.5" ></text>
</g>
<g >
<title>mod_objcg_state (253,022,061 samples, 0.03%)</title><rect x="853.3" y="1093" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="856.35" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1029" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1039.5" ></text>
</g>
<g >
<title>update_curr (178,242,171 samples, 0.02%)</title><rect x="586.1" y="1493" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="589.06" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,015,138,063 samples, 0.55%)</title><rect x="409.2" y="69" width="6.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="412.19" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (261,434,924 samples, 0.03%)</title><rect x="377.6" y="117" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1445" width="11.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="845.66" y="1455.5" ></text>
</g>
<g >
<title>select_task_rq_fair (443,443,054 samples, 0.05%)</title><rect x="361.1" y="1397" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="364.10" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="869" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="869" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="879.5" >std..</text>
</g>
<g >
<title>[libc.so.6] (660,166,797 samples, 0.07%)</title><rect x="323.9" y="1237" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="326.86" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="437" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="447.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (101,507,135 samples, 0.01%)</title><rect x="147.1" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="150.12" y="1567.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (270,169,840 samples, 0.03%)</title><rect x="504.1" y="1285" width="0.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="507.10" y="1295.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1,704,356,422 samples, 0.19%)</title><rect x="844.9" y="1189" width="2.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="847.89" y="1199.5" ></text>
</g>
<g >
<title>call_rcu (88,514,075 samples, 0.01%)</title><rect x="588.4" y="1397" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="591.38" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="629" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="639.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (102,103,512 samples, 0.01%)</title><rect x="369.7" y="1413" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="372.68" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock (87,123,271 samples, 0.01%)</title><rect x="1040.4" y="1509" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1043.37" y="1519.5" ></text>
</g>
<g >
<title>rest_init (649,343,478 samples, 0.07%)</title><rect x="601.1" y="1541" width="0.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="604.11" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="501" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="511.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (6,637,174,993 samples, 0.73%)</title><rect x="1068.1" y="1573" width="8.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1071.13" y="1583.5" ></text>
</g>
<g >
<title>dentry_free (583,039,490 samples, 0.06%)</title><rect x="1071.8" y="1461" width="0.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1074.75" y="1471.5" ></text>
</g>
<g >
<title>__switch_to (140,065,070 samples, 0.02%)</title><rect x="1051.9" y="1493" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1054.87" y="1503.5" ></text>
</g>
<g >
<title>free_unref_page (146,261,267 samples, 0.02%)</title><rect x="852.8" y="853" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="855.82" y="863.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (114,948,680 samples, 0.01%)</title><rect x="1043.8" y="1445" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1046.82" y="1455.5" ></text>
</g>
<g >
<title>read (111,938,906 samples, 0.01%)</title><rect x="786.7" y="1429" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="789.69" y="1439.5" ></text>
</g>
<g >
<title>__free_slab (146,261,267 samples, 0.02%)</title><rect x="852.8" y="885" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="855.82" y="895.5" ></text>
</g>
<g >
<title>worker_thread (812,705,699 samples, 0.09%)</title><rect x="83.0" y="1573" width="1.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="86.02" y="1583.5" ></text>
</g>
<g >
<title>schedule_idle (685,583,085 samples, 0.08%)</title><rect x="145.4" y="1557" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="148.44" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1077" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,049,887,718 samples, 11.57%)</title><rect x="190.1" y="1333" width="136.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="193.14" y="1343.5" >std::__detail::_E..</text>
</g>
<g >
<title>pick_next_task (171,486,089 samples, 0.02%)</title><rect x="1135.6" y="1493" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1138.59" y="1503.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (196,500,429 samples, 0.02%)</title><rect x="1174.4" y="1557" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1177.37" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (380,523,301 samples, 0.04%)</title><rect x="475.5" y="85" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="95.5" ></text>
</g>
<g >
<title>call_cpuidle (11,931,735,924 samples, 1.31%)</title><rect x="84.7" y="1541" width="15.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="87.71" y="1551.5" ></text>
</g>
<g >
<title>sock_alloc_file (767,661,637 samples, 0.08%)</title><rect x="1173.4" y="1541" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1176.36" y="1551.5" ></text>
</g>
<g >
<title>vfs_write (628,850,826 samples, 0.07%)</title><rect x="503.9" y="1413" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="506.85" y="1423.5" ></text>
</g>
<g >
<title>ext4_do_writepages (573,167,647 samples, 0.06%)</title><rect x="83.3" y="1413" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="86.33" y="1423.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (507,699,790 samples, 0.06%)</title><rect x="1054.0" y="1493" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1057.05" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1045" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="1055.5" >st..</text>
</g>
<g >
<title>inotify_free_event (1,076,043,513 samples, 0.12%)</title><rect x="368.5" y="1461" width="1.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="371.53" y="1471.5" ></text>
</g>
<g >
<title>getname_flags (862,508,777 samples, 0.10%)</title><rect x="342.9" y="1461" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="345.86" y="1471.5" ></text>
</g>
<g >
<title>rest_init (345,509,644 samples, 0.04%)</title><rect x="146.6" y="1541" width="0.4" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="149.55" y="1551.5" ></text>
</g>
<g >
<title>enqueue_entity (272,112,813 samples, 0.03%)</title><rect x="1187.0" y="1461" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1189.97" y="1471.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (158,893,230 samples, 0.02%)</title><rect x="79.6" y="1365" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="82.65" y="1375.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (85,672,832 samples, 0.01%)</title><rect x="100.1" y="1461" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="103.07" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (105,928,631 samples, 0.01%)</title><rect x="106.9" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="109.92" y="1567.5" ></text>
</g>
<g >
<title>tcp_sendmsg (127,830,406 samples, 0.01%)</title><rect x="77.2" y="1525" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="80.24" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1253" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1263.5" ></text>
</g>
<g >
<title>__sys_accept4 (2,673,654,875 samples, 0.29%)</title><rect x="578.0" y="1573" width="3.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="580.96" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1173" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="1183.5" ></text>
</g>
<g >
<title>pick_next_task_fair (530,978,289 samples, 0.06%)</title><rect x="76.1" y="1493" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="79.14" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="917" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="927.5" ></text>
</g>
<g >
<title>enqueue_task_fair (689,238,959 samples, 0.08%)</title><rect x="101.1" y="1477" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="104.14" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="885" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="895.5" ></text>
</g>
<g >
<title>down_write (84,853,351 samples, 0.01%)</title><rect x="1075.4" y="1461" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1078.38" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="789" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="799.5" ></text>
</g>
<g >
<title>psi_group_change (174,696,570 samples, 0.02%)</title><rect x="598.2" y="1461" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="601.24" y="1471.5" ></text>
</g>
<g >
<title>wake_affine (123,581,029 samples, 0.01%)</title><rect x="75.0" y="1477" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="77.97" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (118,847,853,231 samples, 13.09%)</title><rect x="185.9" y="1477" width="154.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="188.93" y="1487.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>do_futex (9,612,723,727 samples, 1.06%)</title><rect x="1049.1" y="1573" width="12.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1052.14" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (260,457,414 samples, 0.03%)</title><rect x="855.6" y="1477" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="858.58" y="1487.5" ></text>
</g>
<g >
<title>dput (118,275,783 samples, 0.01%)</title><rect x="350.8" y="1429" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="353.82" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (333,092,335 samples, 0.04%)</title><rect x="787.1" y="1477" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="790.08" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_enter (11,850,676,478 samples, 1.31%)</title><rect x="84.8" y="1525" width="15.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="87.80" y="1535.5" ></text>
</g>
<g >
<title>sock_alloc_inode (702,224,214 samples, 0.08%)</title><rect x="67.7" y="1477" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="70.74" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1045" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1055.5" ></text>
</g>
<g >
<title>menu_select (167,234,687 samples, 0.02%)</title><rect x="143.9" y="1525" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="146.86" y="1535.5" ></text>
</g>
<g >
<title>__get_user_nocheck_4 (122,679,233 samples, 0.01%)</title><rect x="1056.7" y="1525" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1059.71" y="1535.5" ></text>
</g>
<g >
<title>dentry_free (95,050,198 samples, 0.01%)</title><rect x="1179.6" y="1461" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1182.58" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (222,500,485 samples, 0.02%)</title><rect x="168.6" y="1445" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="171.55" y="1455.5" ></text>
</g>
<g >
<title>__folio_end_writeback (193,638,728 samples, 0.02%)</title><rect x="1136.2" y="1477" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1139.25" y="1487.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (649,343,478 samples, 0.07%)</title><rect x="601.1" y="1605" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="604.11" y="1615.5" ></text>
</g>
<g >
<title>update_rq_clock (166,579,715 samples, 0.02%)</title><rect x="77.0" y="1509" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="79.96" y="1519.5" ></text>
</g>
<g >
<title>evict (218,743,865 samples, 0.02%)</title><rect x="1136.0" y="1429" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1138.96" y="1439.5" ></text>
</g>
<g >
<title>ksys_write (118,215,981 samples, 0.01%)</title><rect x="529.2" y="1573" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="532.20" y="1583.5" ></text>
</g>
<g >
<title>security_socket_accept (148,760,383 samples, 0.02%)</title><rect x="1036.3" y="1541" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1039.27" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,562,275,094 samples, 1.60%)</title><rect x="202.9" y="357" width="19.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="205.93" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,069,855,637 samples, 0.45%)</title><rect x="372.1" y="165" width="5.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="375.14" y="175.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (82,046,499 samples, 0.01%)</title><rect x="79.0" y="1445" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="81.97" y="1455.5" ></text>
</g>
<g >
<title>os_xsave (103,617,903 samples, 0.01%)</title><rect x="589.5" y="1621" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="592.50" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (425,769,534 samples, 0.05%)</title><rect x="318.0" y="1205" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="320.97" y="1215.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (126,922,355 samples, 0.01%)</title><rect x="580.0" y="1461" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="583.04" y="1471.5" ></text>
</g>
<g >
<title>futex_wake_mark (443,583,779 samples, 0.05%)</title><rect x="1058.9" y="1541" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1061.89" y="1551.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (738,103,468 samples, 0.08%)</title><rect x="144.2" y="1541" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="147.17" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="965" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1381" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1391.5" ></text>
</g>
<g >
<title>__free_slab (203,522,947 samples, 0.02%)</title><rect x="852.7" y="1013" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="855.75" y="1023.5" ></text>
</g>
<g >
<title>__fsnotify_parent (4,934,130,754 samples, 0.54%)</title><rect x="726.4" y="1333" width="6.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="729.42" y="1343.5" ></text>
</g>
<g >
<title>__filemap_add_folio (118,708,458 samples, 0.01%)</title><rect x="504.1" y="1237" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="507.12" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="933" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="581" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="591.5" ></text>
</g>
<g >
<title>cpu_startup_entry (8,112,874,648 samples, 0.89%)</title><rect x="590.4" y="1589" width="10.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="593.44" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="565" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="575.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (130,707,023 samples, 0.01%)</title><rect x="1136.8" y="1605" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1139.82" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1093" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1103.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (206,939,455 samples, 0.02%)</title><rect x="1174.0" y="1509" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1177.00" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="965" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="975.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (147,416,342 samples, 0.02%)</title><rect x="736.3" y="1157" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="739.28" y="1167.5" ></text>
</g>
<g >
<title>update_cfs_group (202,386,394 samples, 0.02%)</title><rect x="1118.2" y="1445" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1121.24" y="1455.5" ></text>
</g>
<g >
<title>expand_string_assignment (112,476,717 samples, 0.01%)</title><rect x="855.0" y="1381" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="857.99" y="1391.5" ></text>
</g>
<g >
<title>generic_permission (417,333,759 samples, 0.05%)</title><rect x="345.9" y="1365" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="348.89" y="1375.5" ></text>
</g>
<g >
<title>irq_exit_rcu (212,756,556 samples, 0.02%)</title><rect x="1113.3" y="1445" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1116.26" y="1455.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (93,841,031 samples, 0.01%)</title><rect x="497.3" y="1429" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="500.26" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1333" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1349" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1359.5" ></text>
</g>
<g >
<title>operator new (230,975,699 samples, 0.03%)</title><rect x="235.6" y="421" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="238.58" y="431.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (699,190,055 samples, 0.08%)</title><rect x="67.7" y="1461" width="1.0" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="70.74" y="1471.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (99,820,195 samples, 0.01%)</title><rect x="631.1" y="1573" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="634.15" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_read (116,916,135 samples, 0.01%)</title><rect x="1061.7" y="1589" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1064.75" y="1599.5" ></text>
</g>
<g >
<title>alloc_buffer_head (380,443,959 samples, 0.04%)</title><rect x="738.3" y="1141" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="741.29" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,373,034,205 samples, 0.48%)</title><rect x="204.3" y="261" width="5.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="207.34" y="271.5" ></text>
</g>
<g >
<title>__xstat64 (8,824,428,151 samples, 0.97%)</title><rect x="342.0" y="1557" width="11.4" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="344.96" y="1567.5" ></text>
</g>
<g >
<title>____fput (1,046,120,635 samples, 0.12%)</title><rect x="587.6" y="1525" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="590.60" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_openat (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1429" width="11.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="845.66" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (25,244,836,808 samples, 2.78%)</title><rect x="1082.5" y="1557" width="32.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1085.46" y="1567.5" >cp..</text>
</g>
<g >
<title>__block_commit_write.constprop.0 (824,437,420 samples, 0.09%)</title><rect x="743.1" y="1173" width="1.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="746.07" y="1183.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (133,745,276 samples, 0.01%)</title><rect x="1095.8" y="1477" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1098.84" y="1487.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (129,577,680 samples, 0.01%)</title><rect x="596.4" y="1477" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="599.41" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_lock (87,391,826 samples, 0.01%)</title><rect x="581.8" y="1557" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="584.78" y="1567.5" ></text>
</g>
<g >
<title>inet_sendmsg (332,451,603 samples, 0.04%)</title><rect x="787.1" y="1429" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="790.08" y="1439.5" ></text>
</g>
<g >
<title>cfree (721,285,325 samples, 0.08%)</title><rect x="170.9" y="197" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="173.88" y="207.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (727,754,243 samples, 0.08%)</title><rect x="1189.0" y="1605" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1191.98" y="1615.5" ></text>
</g>
<g >
<title>futex_wake (760,583,813 samples, 0.08%)</title><rect x="584.5" y="1557" width="0.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="587.46" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,472,551,985 samples, 1.15%)</title><rect x="395.6" y="85" width="13.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="398.58" y="95.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (4,612,638,085 samples, 0.51%)</title><rect x="487.8" y="1445" width="6.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="490.80" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="965" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="975.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (256,467,541 samples, 0.03%)</title><rect x="525.5" y="1477" width="0.4" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="528.54" y="1487.5" ></text>
</g>
<g >
<title>__folio_end_writeback (304,585,194 samples, 0.03%)</title><rect x="1080.2" y="1477" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1083.18" y="1487.5" ></text>
</g>
<g >
<title>__sys_accept4 (1,681,728,143 samples, 0.19%)</title><rect x="132.4" y="1573" width="2.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="135.39" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (204,523,681 samples, 0.02%)</title><rect x="1170.5" y="1605" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1173.54" y="1615.5" ></text>
</g>
<g >
<title>security_inode_alloc (143,959,334 samples, 0.02%)</title><rect x="67.6" y="1461" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="70.56" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (107,304,615 samples, 0.01%)</title><rect x="147.1" y="1621" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="150.12" y="1631.5" ></text>
</g>
<g >
<title>perf_mmap__push (649,144,019 samples, 0.07%)</title><rect x="503.8" y="1557" width="0.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="506.83" y="1567.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (111,277,351 samples, 0.01%)</title><rect x="75.1" y="1493" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="78.15" y="1503.5" ></text>
</g>
<g >
<title>futex_hash (133,556,177 samples, 0.01%)</title><rect x="357.5" y="1445" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="360.50" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (80,205,949 samples, 0.01%)</title><rect x="170.8" y="133" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="173.76" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="965" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="757" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (134,815,666 samples, 0.01%)</title><rect x="1046.7" y="1589" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1049.67" y="1599.5" ></text>
</g>
<g >
<title>malloc (190,141,155 samples, 0.02%)</title><rect x="221.1" y="277" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="224.11" y="287.5" ></text>
</g>
<g >
<title>__free_pages (146,261,267 samples, 0.02%)</title><rect x="852.8" y="869" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="855.82" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="805" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="815.5" ></text>
</g>
<g >
<title>wake_up_q (595,274,040 samples, 0.07%)</title><rect x="74.5" y="1525" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="77.52" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="437" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="709" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="719.5" ></text>
</g>
<g >
<title>rcu_do_batch (335,535,276 samples, 0.04%)</title><rect x="85.0" y="1381" width="0.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="88.04" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_lock (114,749,153 samples, 0.01%)</title><rect x="1072.7" y="1429" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1075.68" y="1439.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted (158,835,866 samples, 0.02%)</title><rect x="742.5" y="1093" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="745.48" y="1103.5" ></text>
</g>
<g >
<title>operator new (315,001,565 samples, 0.03%)</title><rect x="341.0" y="1493" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="343.99" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (380,588,036 samples, 0.04%)</title><rect x="261.4" y="661" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="264.38" y="671.5" ></text>
</g>
<g >
<title>Glob::isIgnored (707,366,333 samples, 0.08%)</title><rect x="169.5" y="1605" width="0.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="172.48" y="1615.5" ></text>
</g>
<g >
<title>inet_csk_accept (148,495,633 samples, 0.02%)</title><rect x="132.5" y="1525" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="135.51" y="1535.5" ></text>
</g>
<g >
<title>sched_clock_cpu (189,321,611 samples, 0.02%)</title><rect x="1129.4" y="1525" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1132.43" y="1535.5" ></text>
</g>
<g >
<title>call_cpuidle (3,372,543,085 samples, 0.37%)</title><rect x="1181.7" y="1541" width="4.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1184.69" y="1551.5" ></text>
</g>
<g >
<title>futex_wait_queue (765,532,149 samples, 0.08%)</title><rect x="1175.2" y="1541" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1178.23" y="1551.5" ></text>
</g>
<g >
<title>crypto_shash_update (98,738,167 samples, 0.01%)</title><rect x="742.2" y="1061" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="745.22" y="1071.5" ></text>
</g>
<g >
<title>cp_new_stat (267,834,320 samples, 0.03%)</title><rect x="342.5" y="1477" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="345.51" y="1487.5" ></text>
</g>
<g >
<title>do_accept (933,084,373 samples, 0.10%)</title><rect x="525.2" y="1557" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="528.22" y="1567.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (116,120,923 samples, 0.01%)</title><rect x="577.0" y="1621" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="580.05" y="1631.5" ></text>
</g>
<g >
<title>operator new (634,113,317 samples, 0.07%)</title><rect x="212.9" y="245" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="215.86" y="255.5" ></text>
</g>
<g >
<title>[perf-42605.map] (2,351,606,097 samples, 0.26%)</title><rect x="610.4" y="1621" width="3.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="613.44" y="1631.5" ></text>
</g>
<g >
<title>refill_obj_stock (146,988,222 samples, 0.02%)</title><rect x="1079.3" y="1413" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1082.31" y="1423.5" ></text>
</g>
<g >
<title>operator new (802,254,804 samples, 0.09%)</title><rect x="315.8" y="1205" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="318.81" y="1215.5" ></text>
</g>
<g >
<title>menu_select (1,066,126,154 samples, 0.12%)</title><rect x="1113.8" y="1525" width="1.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1116.78" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1269" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="1279.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="421" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1301" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="1311.5" >st..</text>
</g>
<g >
<title>obj_cgroup_uncharge (146,988,222 samples, 0.02%)</title><rect x="1079.3" y="1429" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1082.31" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_select (194,530,499 samples, 0.02%)</title><rect x="1132.8" y="1477" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1135.79" y="1487.5" ></text>
</g>
<g >
<title>ip_queue_xmit (77,612,723 samples, 0.01%)</title><rect x="1066.7" y="1445" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1069.74" y="1455.5" ></text>
</g>
<g >
<title>__sys_sendto (292,678,066 samples, 0.03%)</title><rect x="1066.6" y="1573" width="0.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1069.57" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1477" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="1487.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (296,034,532 samples, 0.03%)</title><rect x="735.9" y="1141" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="738.90" y="1151.5" ></text>
</g>
<g >
<title>[libc.so.6] (840,229,909 samples, 0.09%)</title><rect x="280.2" y="869" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="283.16" y="879.5" ></text>
</g>
<g >
<title>__sys_accept4 (1,866,652,892 samples, 0.21%)</title><rect x="1172.2" y="1573" width="2.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1175.21" y="1583.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (91,903,049 samples, 0.01%)</title><rect x="499.8" y="1413" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="502.80" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="933" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="943.5" >st..</text>
</g>
<g >
<title>do_idle (130,707,023 samples, 0.01%)</title><rect x="1136.8" y="1509" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1139.82" y="1519.5" ></text>
</g>
<g >
<title>generic_file_read_iter (108,287,144 samples, 0.01%)</title><rect x="786.7" y="1253" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="789.69" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,589,182,010 samples, 0.18%)</title><rect x="469.5" y="69" width="2.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="789" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="799.5" ></text>
</g>
<g >
<title>dequeue_task_fair (273,684,247 samples, 0.03%)</title><rect x="135.3" y="1477" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="138.25" y="1487.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (127,505,792 samples, 0.01%)</title><rect x="786.7" y="1509" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="789.69" y="1519.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1,001,758,976 samples, 0.11%)</title><rect x="597.3" y="1509" width="1.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="600.34" y="1519.5" ></text>
</g>
<g >
<title>folio_end_writeback (383,686,913 samples, 0.04%)</title><rect x="1080.1" y="1493" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1083.11" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (293,077,383 samples, 0.03%)</title><rect x="474.4" y="69" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="477.36" y="79.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (212,756,556 samples, 0.02%)</title><rect x="1113.3" y="1429" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1116.26" y="1439.5" ></text>
</g>
<g >
<title>add_wait_queue (485,308,123 samples, 0.05%)</title><rect x="366.2" y="1477" width="0.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="369.25" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1253" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1263.5" >std..</text>
</g>
<g >
<title>pick_next_task (172,781,862 samples, 0.02%)</title><rect x="73.1" y="1477" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="76.10" y="1487.5" ></text>
</g>
<g >
<title>ret_from_fork (2,858,430,289 samples, 0.31%)</title><rect x="1077.8" y="1605" width="3.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1080.83" y="1615.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1,670,382,976 samples, 0.18%)</title><rect x="100.8" y="1557" width="2.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="103.80" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (540,575,434 samples, 0.06%)</title><rect x="301.5" y="1061" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.54" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (62,234,330,005 samples, 6.86%)</title><rect x="196.8" y="869" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="199.75" y="879.5" >std::__de..</text>
</g>
<g >
<title>new_inode_pseudo (510,558,842 samples, 0.06%)</title><rect x="578.7" y="1525" width="0.7" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="581.73" y="1535.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast (4,936,062,388 samples, 0.54%)</title><rect x="356.7" y="1525" width="6.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="359.68" y="1535.5" ></text>
</g>
<g >
<title>llist_reverse_order (202,237,899 samples, 0.02%)</title><rect x="598.9" y="1541" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="601.93" y="1551.5" ></text>
</g>
<g >
<title>alloc_inode (2,373,952,904 samples, 0.26%)</title><rect x="1037.1" y="1509" width="3.0" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1040.05" y="1519.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (90,983,144 samples, 0.01%)</title><rect x="1178.4" y="1525" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1181.42" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="485" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="495.5" >st..</text>
</g>
<g >
<title>__x64_sys_sendto (332,451,603 samples, 0.04%)</title><rect x="787.1" y="1461" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="790.08" y="1471.5" ></text>
</g>
<g >
<title>_start (454,944,525 samples, 0.05%)</title><rect x="854.7" y="1621" width="0.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="857.68" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="325" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,589,182,010 samples, 0.18%)</title><rect x="469.5" y="101" width="2.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="111.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (673,909,078 samples, 0.07%)</title><rect x="105.1" y="1445" width="0.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="108.10" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (418,610,521 samples, 0.05%)</title><rect x="172.5" y="181" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="175.48" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="197" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="207.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (101,858,611 samples, 0.01%)</title><rect x="69.7" y="1445" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="72.69" y="1455.5" ></text>
</g>
<g >
<title>kthread (619,276,025 samples, 0.07%)</title><rect x="589.6" y="1589" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="592.63" y="1599.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (296,014,551 samples, 0.03%)</title><rect x="740.8" y="1141" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="743.84" y="1151.5" ></text>
</g>
<g >
<title>ext4_finish_bio (231,825,718 samples, 0.03%)</title><rect x="83.0" y="1509" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="86.03" y="1519.5" ></text>
</g>
<g >
<title>cfree (1,813,867,547 samples, 0.20%)</title><rect x="454.9" y="69" width="2.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="457.90" y="79.5" ></text>
</g>
<g >
<title>dequeue_task_fair (459,236,350 samples, 0.05%)</title><rect x="582.8" y="1477" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="585.79" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (98,741,373 samples, 0.01%)</title><rect x="732.5" y="1205" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="735.52" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,145,554,218 samples, 0.35%)</title><rect x="205.9" y="197" width="4.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="208.86" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (966,395,480 samples, 0.11%)</title><rect x="234.1" y="437" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="237.12" y="447.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (391,120,492 samples, 0.04%)</title><rect x="615.6" y="1605" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="618.61" y="1615.5" ></text>
</g>
<g >
<title>file_free_rcu (186,863,189 samples, 0.02%)</title><rect x="589.7" y="1477" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="592.71" y="1487.5" ></text>
</g>
<g >
<title>down_read (296,125,244 samples, 0.03%)</title><rect x="739.2" y="1157" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="742.16" y="1167.5" ></text>
</g>
<g >
<title>ip_finish_output2 (77,612,723 samples, 0.01%)</title><rect x="1066.7" y="1349" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1069.74" y="1359.5" ></text>
</g>
<g >
<title>futex_wait_setup (134,422,936 samples, 0.01%)</title><rect x="1176.2" y="1541" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1179.23" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1045" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1055.5" ></text>
</g>
<g >
<title>ext4_release_io_end (453,029,640 samples, 0.05%)</title><rect x="1080.0" y="1525" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1083.03" y="1535.5" ></text>
</g>
<g >
<title>copyin (246,849,926 samples, 0.03%)</title><rect x="734.2" y="1205" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="737.23" y="1215.5" ></text>
</g>
<g >
<title>start_kernel (273,228,048 samples, 0.03%)</title><rect x="534.5" y="1573" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="537.51" y="1583.5" ></text>
</g>
<g >
<title>operator new (144,367,231 samples, 0.02%)</title><rect x="242.3" y="485" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="245.31" y="495.5" ></text>
</g>
<g >
<title>start_kernel (727,754,243 samples, 0.08%)</title><rect x="1189.0" y="1573" width="0.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1191.98" y="1583.5" ></text>
</g>
<g >
<title>os_xsave (249,408,682 samples, 0.03%)</title><rect x="1077.5" y="1621" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1080.51" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,062,789,978 samples, 4.85%)</title><rect x="199.0" y="661" width="57.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="202.02" y="671.5" >std::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="245" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="255.5" ></text>
</g>
<g >
<title>ovl_i_path_real (118,449,175 samples, 0.01%)</title><rect x="347.3" y="1365" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="350.34" y="1375.5" ></text>
</g>
<g >
<title>__switch_to (235,505,961 samples, 0.03%)</title><rect x="1124.0" y="1525" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1127.04" y="1535.5" ></text>
</g>
<g >
<title>rcu_core_si (309,151,356 samples, 0.03%)</title><rect x="1181.9" y="1413" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1184.87" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (238,705,983 samples, 0.03%)</title><rect x="475.7" y="69" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.68" y="79.5" ></text>
</g>
<g >
<title>path_openat (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1381" width="11.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="845.66" y="1391.5" ></text>
</g>
<g >
<title>__rcu_read_lock (95,015,151 samples, 0.01%)</title><rect x="1048.2" y="1557" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1051.20" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (79,453,594 samples, 0.01%)</title><rect x="786.9" y="1525" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="789.91" y="1535.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (420,872,166 samples, 0.05%)</title><rect x="525.9" y="1525" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="528.87" y="1535.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (111,938,906 samples, 0.01%)</title><rect x="786.7" y="1477" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="789.69" y="1487.5" ></text>
</g>
<g >
<title>load_balance (171,486,089 samples, 0.02%)</title><rect x="1135.6" y="1445" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1138.59" y="1455.5" ></text>
</g>
<g >
<title>[bash] (103,743,390 samples, 0.01%)</title><rect x="854.7" y="1461" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="857.68" y="1471.5" ></text>
</g>
<g >
<title>malloc (870,482,396 samples, 0.10%)</title><rect x="384.3" y="1605" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="387.30" y="1615.5" ></text>
</g>
<g >
<title>__get_user_8 (94,518,804 samples, 0.01%)</title><rect x="587.4" y="1509" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="590.36" y="1519.5" ></text>
</g>
<g >
<title>futex_wait_queue (1,180,775,766 samples, 0.13%)</title><rect x="499.6" y="1445" width="1.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="502.64" y="1455.5" ></text>
</g>
<g >
<title>dup_mmap (222,500,485 samples, 0.02%)</title><rect x="168.6" y="1349" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="171.55" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,511,481,015 samples, 0.17%)</title><rect x="426.0" y="85" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="428.96" y="95.5" ></text>
</g>
<g >
<title>start_kernel (345,509,644 samples, 0.04%)</title><rect x="146.6" y="1573" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="149.55" y="1583.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (98,621,345 samples, 0.01%)</title><rect x="735.7" y="1109" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="738.71" y="1119.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (107,501,149 samples, 0.01%)</title><rect x="351.2" y="1429" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="354.15" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,161,703,979 samples, 0.13%)</title><rect x="259.0" y="677" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="262.03" y="687.5" ></text>
</g>
<g >
<title>[ls] (480,440,684 samples, 0.05%)</title><rect x="147.3" y="1573" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="150.26" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (753,853,770 samples, 0.08%)</title><rect x="231.7" y="421" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="234.67" y="431.5" ></text>
</g>
<g >
<title>arch_call_rest_init (273,228,048 samples, 0.03%)</title><rect x="534.5" y="1557" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="537.51" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (339,219,915 samples, 0.04%)</title><rect x="787.1" y="1493" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="790.08" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="741" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="751.5" ></text>
</g>
<g >
<title>kthread (1,503,099,777 samples, 0.17%)</title><rect x="82.1" y="1589" width="2.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="85.12" y="1599.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1,080,870,398 samples, 0.12%)</title><rect x="101.0" y="1509" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="104.01" y="1519.5" ></text>
</g>
<g >
<title>inode_init_always (188,133,640 samples, 0.02%)</title><rect x="1172.6" y="1493" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1175.64" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (164,396,170 samples, 0.02%)</title><rect x="77.2" y="1573" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="80.24" y="1583.5" ></text>
</g>
<g >
<title>walk_component (397,762,020 samples, 0.04%)</title><rect x="350.2" y="1413" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="353.23" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::send_syscall (355,950,240 samples, 0.04%)</title><rect x="787.1" y="1541" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="790.05" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1461" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1509" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1519.5" >st..</text>
</g>
<g >
<title>InotifyBackend::handleEvent (139,927,996,792 samples, 15.41%)</title><rect x="173.5" y="1589" width="181.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="176.47" y="1599.5" >InotifyBackend::handleE..</text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (796,119,034 samples, 0.09%)</title><rect x="422.6" y="101" width="1.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="425.55" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (329,880,850 samples, 0.04%)</title><rect x="201.1" y="485" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="204.11" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="693" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="703.5" ></text>
</g>
<g >
<title>poll_idle (611,369,152 samples, 0.07%)</title><rect x="532.3" y="1493" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="535.33" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="837" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="847.5" >std..</text>
</g>
<g >
<title>operator new (5,015,138,063 samples, 0.55%)</title><rect x="409.2" y="101" width="6.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="412.19" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="373" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="383.5" >st..</text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (135,765,982 samples, 0.01%)</title><rect x="318.5" y="1205" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="321.52" y="1215.5" ></text>
</g>
<g >
<title>truncate_pagecache (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1269" width="11.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="845.66" y="1279.5" ></text>
</g>
<g >
<title>schedule_idle (287,193,743 samples, 0.03%)</title><rect x="1133.6" y="1493" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1136.62" y="1503.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (250,671,323 samples, 0.03%)</title><rect x="583.4" y="1493" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="586.39" y="1503.5" ></text>
</g>
<g >
<title>schedule (1,429,893,631 samples, 0.16%)</title><rect x="71.8" y="1509" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.80" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (177,741,222 samples, 0.02%)</title><rect x="254.8" y="597" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="257.85" y="607.5" ></text>
</g>
<g >
<title>cpu_startup_entry (246,522,547 samples, 0.03%)</title><rect x="1136.5" y="1589" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1139.50" y="1599.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (90,742,658 samples, 0.01%)</title><rect x="1074.2" y="1413" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1077.16" y="1423.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1,633,272,707 samples, 0.18%)</title><rect x="1072.5" y="1461" width="2.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1075.51" y="1471.5" ></text>
</g>
<g >
<title>__do_softirq (129,577,680 samples, 0.01%)</title><rect x="596.4" y="1413" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="599.41" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (347,538,178 samples, 0.04%)</title><rect x="234.9" y="405" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="237.90" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (263,151,589 samples, 0.03%)</title><rect x="309.8" y="1109" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="312.79" y="1119.5" ></text>
</g>
<g >
<title>intel_idle (2,026,356,438 samples, 0.22%)</title><rect x="591.7" y="1493" width="2.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="594.71" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_read (111,938,906 samples, 0.01%)</title><rect x="786.7" y="1381" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="789.69" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1237" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1247.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (186,073,578 samples, 0.02%)</title><rect x="146.6" y="1493" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="149.57" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (316,821,966 samples, 0.03%)</title><rect x="288.5" y="917" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="291.51" y="927.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (567,865,382 samples, 0.06%)</title><rect x="1128.9" y="1557" width="0.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1131.94" y="1567.5" ></text>
</g>
<g >
<title>call_cpuidle (673,909,078 samples, 0.07%)</title><rect x="105.1" y="1477" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="108.10" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_accept (9,568,194,642 samples, 1.05%)</title><rect x="1034.2" y="1589" width="12.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1037.19" y="1599.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (98,737,327 samples, 0.01%)</title><rect x="728.8" y="1221" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="731.78" y="1231.5" ></text>
</g>
<g >
<title>rcu_core_si (639,230,652 samples, 0.07%)</title><rect x="82.2" y="1525" width="0.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="85.15" y="1535.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (298,190,156 samples, 0.03%)</title><rect x="787.1" y="1397" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="790.13" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="229" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="549" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,129,817,626 samples, 0.23%)</title><rect x="392.8" y="85" width="2.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="95.5" ></text>
</g>
<g >
<title>execute_command_internal (236,977,313 samples, 0.03%)</title><rect x="854.8" y="1477" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="857.83" y="1487.5" ></text>
</g>
<g >
<title>rcu_core (1,620,016,993 samples, 0.18%)</title><rect x="1077.9" y="1509" width="2.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1080.86" y="1519.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (96,343,888 samples, 0.01%)</title><rect x="1075.0" y="1477" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1078.03" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="837" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="847.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1461" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1471.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="245" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="255.5" >std..</text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (82,792,608 samples, 0.01%)</title><rect x="588.4" y="1381" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="591.38" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (910,620,434 samples, 0.10%)</title><rect x="288.9" y="949" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="291.93" y="959.5" ></text>
</g>
<g >
<title>__switch_to_asm (88,395,700 samples, 0.01%)</title><rect x="1170.9" y="1621" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1173.94" y="1631.5" ></text>
</g>
<g >
<title>step_into (133,900,309 samples, 0.01%)</title><rect x="349.8" y="1381" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="352.83" y="1391.5" ></text>
</g>
<g >
<title>enqueue_task (479,392,351 samples, 0.05%)</title><rect x="144.4" y="1493" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="147.40" y="1503.5" ></text>
</g>
<g >
<title>select_task_rq_fair (80,257,378 samples, 0.01%)</title><rect x="1176.9" y="1509" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1179.92" y="1519.5" ></text>
</g>
<g >
<title>allocate_slab (107,649,597 samples, 0.01%)</title><rect x="1172.9" y="1429" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1175.90" y="1439.5" ></text>
</g>
<g >
<title>__dentry_kill (2,300,605,048 samples, 0.25%)</title><rect x="1071.6" y="1477" width="3.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1074.64" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,657,355,155 samples, 0.18%)</title><rect x="1175.0" y="1589" width="2.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1178.02" y="1599.5" ></text>
</g>
<g >
<title>__dentry_kill (742,721,936 samples, 0.08%)</title><rect x="79.2" y="1461" width="1.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="82.21" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (304,295,459 samples, 0.03%)</title><rect x="209.4" y="181" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="212.40" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1493" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1503.5" >std..</text>
</g>
<g >
<title>ext4_file_read_iter (108,287,144 samples, 0.01%)</title><rect x="786.7" y="1269" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="789.69" y="1279.5" ></text>
</g>
<g >
<title>intel_idle (7,539,107,285 samples, 0.83%)</title><rect x="1086.0" y="1493" width="9.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1089.01" y="1503.5" ></text>
</g>
<g >
<title>do_futex (1,404,485,047 samples, 0.15%)</title><rect x="134.9" y="1573" width="1.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="137.94" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1509" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1519.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="357" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (327,907,228 samples, 0.04%)</title><rect x="423.6" y="117" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="426.59" y="127.5" ></text>
</g>
<g >
<title>sock_alloc (2,839,428,716 samples, 0.31%)</title><rect x="1036.5" y="1541" width="3.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1039.47" y="1551.5" ></text>
</g>
<g >
<title>security_inode_alloc (364,742,784 samples, 0.04%)</title><rect x="1037.5" y="1477" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1040.47" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,836,562,541 samples, 0.31%)</title><rect x="140.2" y="1525" width="3.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="143.15" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,275,756,710 samples, 0.47%)</title><rect x="469.5" y="117" width="5.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="437" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="447.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (88,486,503 samples, 0.01%)</title><rect x="167.2" y="1605" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="170.16" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="981" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="437" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="341" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="351.5" ></text>
</g>
<g >
<title>malloc (246,810,638 samples, 0.03%)</title><rect x="276.9" y="789" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="279.89" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1509" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1519.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (88,068,041 samples, 0.01%)</title><rect x="76.5" y="1461" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="79.47" y="1471.5" ></text>
</g>
<g >
<title>free@plt (79,975,785 samples, 0.01%)</title><rect x="337.2" y="1397" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="340.24" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (103,004,829 samples, 0.01%)</title><rect x="855.4" y="1605" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="858.44" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1253" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="1263.5" ></text>
</g>
<g >
<title>switch_fpu_return (259,184,403 samples, 0.03%)</title><rect x="80.8" y="1541" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="83.79" y="1551.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (171,853,156 samples, 0.02%)</title><rect x="1083.3" y="1445" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1086.31" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock (283,769,490 samples, 0.03%)</title><rect x="850.4" y="1141" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="853.43" y="1151.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (246,522,547 samples, 0.03%)</title><rect x="1136.5" y="1477" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1139.50" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1541" width="3.0" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="173.40" y="1551.5" ></text>
</g>
<g >
<title>tick_nohz_stop_idle (217,900,260 samples, 0.02%)</title><rect x="1130.0" y="1541" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1133.05" y="1551.5" ></text>
</g>
<g >
<title>malloc (929,169,865 samples, 0.10%)</title><rect x="260.7" y="677" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="263.67" y="687.5" ></text>
</g>
<g >
<title>NaClStraceWrite (92,051,516 samples, 0.01%)</title><rect x="786.9" y="1557" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="789.89" y="1567.5" ></text>
</g>
<g >
<title>__do_softirq (109,671,622 samples, 0.01%)</title><rect x="1131.2" y="1365" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1134.17" y="1375.5" ></text>
</g>
<g >
<title>cfree (717,616,327 samples, 0.08%)</title><rect x="477.9" y="133" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="480.91" y="143.5" ></text>
</g>
<g >
<title>cfree (87,444,259 samples, 0.01%)</title><rect x="176.9" y="1525" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="179.90" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,774,258,325 samples, 0.53%)</title><rect x="371.3" y="213" width="6.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="223.5" ></text>
</g>
<g >
<title>update_curr (126,136,956 samples, 0.01%)</title><rect x="583.1" y="1445" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="586.11" y="1455.5" ></text>
</g>
<g >
<title>tcp_write_xmit (106,034,255 samples, 0.01%)</title><rect x="529.0" y="1477" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="532.03" y="1487.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (218,743,865 samples, 0.02%)</title><rect x="1136.0" y="1589" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1138.96" y="1599.5" ></text>
</g>
<g >
<title>cache_from_obj (87,771,233 samples, 0.01%)</title><rect x="851.8" y="1109" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="854.76" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (435,792,174 samples, 0.05%)</title><rect x="376.6" y="149" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="379.57" y="159.5" ></text>
</g>
<g >
<title>security_file_alloc (493,433,570 samples, 0.05%)</title><rect x="1041.1" y="1461" width="0.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1044.15" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="533" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (162,126,575 samples, 0.02%)</title><rect x="289.8" y="917" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="292.83" y="927.5" ></text>
</g>
<g >
<title>[libc.so.6] (272,544,866 samples, 0.03%)</title><rect x="855.6" y="1509" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="858.58" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="277" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1397" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1285" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="453" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="821" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="965" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="975.5" ></text>
</g>
<g >
<title>schedule_idle (973,224,959 samples, 0.11%)</title><rect x="599.2" y="1557" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="602.20" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="581" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="591.5" >std..</text>
</g>
<g >
<title>x86_64_start_kernel (345,509,644 samples, 0.04%)</title><rect x="146.6" y="1605" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="149.55" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1493" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (351,919,949 samples, 0.04%)</title><rect x="235.9" y="437" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="238.89" y="447.5" ></text>
</g>
<g >
<title>operator new (139,335,739 samples, 0.02%)</title><rect x="214.3" y="229" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="217.34" y="239.5" ></text>
</g>
<g >
<title>operator new (146,854,509 samples, 0.02%)</title><rect x="295.7" y="997" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="298.67" y="1007.5" ></text>
</g>
<g >
<title>folio_account_dirtied (267,841,553 samples, 0.03%)</title><rect x="743.6" y="1125" width="0.3" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="746.60" y="1135.5" ></text>
</g>
<g >
<title>gettimens (12,396,776,656 samples, 1.37%)</title><rect x="745.5" y="1541" width="16.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="748.48" y="1551.5" ></text>
</g>
<g >
<title>schedule (625,878,832 samples, 0.07%)</title><rect x="1177.6" y="1557" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1180.58" y="1567.5" ></text>
</g>
<g >
<title>call_cpuidle (246,522,547 samples, 0.03%)</title><rect x="1136.5" y="1541" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1139.50" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,498,635,442 samples, 0.17%)</title><rect x="424.0" y="117" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="127.5" ></text>
</g>
<g >
<title>cpu_startup_entry (923,849,425 samples, 0.10%)</title><rect x="105.1" y="1525" width="1.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="108.09" y="1535.5" ></text>
</g>
<g >
<title>rest_init (923,849,425 samples, 0.10%)</title><rect x="105.1" y="1541" width="1.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="108.09" y="1551.5" ></text>
</g>
<g >
<title>read_tsc (81,651,612 samples, 0.01%)</title><rect x="493.9" y="1429" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="496.86" y="1439.5" ></text>
</g>
<g >
<title>clock_gettime@plt (246,841,332 samples, 0.03%)</title><rect x="761.3" y="1525" width="0.3" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="764.28" y="1535.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (105,983,069 samples, 0.01%)</title><rect x="353.6" y="1557" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="356.61" y="1567.5" ></text>
</g>
<g >
<title>vfs_read (4,691,935,685 samples, 0.52%)</title><rect x="364.9" y="1509" width="6.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="367.95" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,129,817,626 samples, 0.23%)</title><rect x="392.8" y="101" width="2.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,774,258,325 samples, 0.53%)</title><rect x="371.3" y="229" width="6.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="239.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (317,762,939 samples, 0.04%)</title><rect x="533.3" y="1525" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="536.28" y="1535.5" ></text>
</g>
<g >
<title>do_writepages (700,532,856 samples, 0.08%)</title><rect x="1080.6" y="1445" width="0.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1083.63" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (422,618,038 samples, 0.05%)</title><rect x="310.1" y="1141" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="313.14" y="1151.5" ></text>
</g>
<g >
<title>rcu_do_batch (173,180,629 samples, 0.02%)</title><rect x="531.1" y="1381" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="534.09" y="1391.5" ></text>
</g>
<g >
<title>setup_object (81,031,930 samples, 0.01%)</title><rect x="1038.4" y="1397" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1041.44" y="1407.5" ></text>
</g>
<g >
<title>task_work_add (129,381,549 samples, 0.01%)</title><rect x="1035.1" y="1525" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1038.11" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1413" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="901" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="911.5" >st..</text>
</g>
<g >
<title>ext4_end_io_rsv_work (193,638,728 samples, 0.02%)</title><rect x="1136.2" y="1541" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1139.25" y="1551.5" ></text>
</g>
<g >
<title>security_inode_getattr (107,501,149 samples, 0.01%)</title><rect x="351.2" y="1445" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="354.15" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="389" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1429" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1439.5" ></text>
</g>
<g >
<title>operator new (653,461,801 samples, 0.07%)</title><rect x="218.7" y="309" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="221.66" y="319.5" ></text>
</g>
<g >
<title>__sys_accept4 (1,083,092,890 samples, 0.12%)</title><rect x="525.2" y="1573" width="1.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="528.20" y="1583.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (98,741,373 samples, 0.01%)</title><rect x="732.5" y="1189" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="735.52" y="1199.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (154,752,521 samples, 0.02%)</title><rect x="133.2" y="1461" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="136.19" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="565" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="575.5" >st..</text>
</g>
<g >
<title>schedule (2,920,241,971 samples, 0.32%)</title><rect x="1062.7" y="1557" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1065.67" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="677" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="293" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="469" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="479.5" ></text>
</g>
<g >
<title>sock_read (90,308,389 samples, 0.01%)</title><rect x="1170.6" y="1525" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1173.61" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="389" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="399.5" ></text>
</g>
<g >
<title>override_creds (788,869,896 samples, 0.09%)</title><rect x="347.5" y="1349" width="1.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="350.55" y="1359.5" ></text>
</g>
<g >
<title>expr (320,947,675 samples, 0.04%)</title><rect x="106.7" y="1637" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="109.73" y="1647.5" ></text>
</g>
<g >
<title>sock_free_inode (79,966,580 samples, 0.01%)</title><rect x="139.7" y="1461" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="142.65" y="1471.5" ></text>
</g>
<g >
<title>__do_softirq (1,629,375,662 samples, 0.18%)</title><rect x="1077.8" y="1541" width="2.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1080.85" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="741" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="751.5" ></text>
</g>
<g >
<title>security_inode_permission (79,727,253 samples, 0.01%)</title><rect x="347.2" y="1349" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="350.24" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1125" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1135.5" ></text>
</g>
<g >
<title>__schedule (679,346,544 samples, 0.07%)</title><rect x="145.4" y="1541" width="0.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="148.44" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="549" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="559.5" ></text>
</g>
<g >
<title>file_free_rcu (124,171,358 samples, 0.01%)</title><rect x="591.2" y="1365" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="594.21" y="1375.5" ></text>
</g>
<g >
<title>start_kernel (2,460,403,747 samples, 0.27%)</title><rect x="1131.0" y="1573" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1133.98" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="661" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="671.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="901" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1445" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1455.5" ></text>
</g>
<g >
<title>mod_lruvec_page_state (89,179,910 samples, 0.01%)</title><rect x="1081.2" y="1333" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1084.24" y="1343.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2,593,539,895 samples, 0.29%)</title><rect x="77.8" y="1557" width="3.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="80.75" y="1567.5" ></text>
</g>
<g >
<title>new_slab (84,222,782 samples, 0.01%)</title><rect x="133.0" y="1445" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="135.96" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (291,184,940 samples, 0.03%)</title><rect x="415.3" y="53" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="418.33" y="63.5" ></text>
</g>
<g >
<title>[libc.so.6] (983,975,103 samples, 0.11%)</title><rect x="217.3" y="293" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="220.31" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="325" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (650,323,884 samples, 0.07%)</title><rect x="251.7" y="613" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="254.67" y="623.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (220,188,864 samples, 0.02%)</title><rect x="531.1" y="1445" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="534.07" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="261" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="357" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="367.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1189" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (218,074,947 samples, 0.02%)</title><rect x="392.4" y="85" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="395.39" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1141" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="1151.5" >std..</text>
</g>
<g >
<title>operator new (220,538,724 samples, 0.02%)</title><rect x="209.1" y="181" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="212.06" y="191.5" ></text>
</g>
<g >
<title>do_idle (316,636,668 samples, 0.03%)</title><rect x="146.6" y="1509" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="149.56" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1445" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1455.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,511,481,015 samples, 0.17%)</title><rect x="426.0" y="101" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="428.96" y="111.5" ></text>
</g>
<g >
<title>cfree (1,490,170,940 samples, 0.16%)</title><rect x="298.5" y="1077" width="2.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="301.53" y="1087.5" ></text>
</g>
<g >
<title>record__pushfn (646,042,735 samples, 0.07%)</title><rect x="503.8" y="1541" width="0.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="506.83" y="1551.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (115,404,522 samples, 0.01%)</title><rect x="1115.0" y="1493" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1118.00" y="1503.5" ></text>
</g>
<g >
<title>NaClLog (634,764,084 samples, 0.07%)</title><rect x="603.2" y="1621" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="606.24" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,600,968,067 samples, 11.52%)</title><rect x="190.6" y="1301" width="136.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="193.62" y="1311.5" >std::__detail::_E..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;InotifySubscription&gt;, std::shared_ptr&lt;InotifySubscription&gt;, std::allocator&lt;std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::hash&lt;std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (235,231,903 samples, 0.03%)</title><rect x="355.0" y="1573" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="357.99" y="1583.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (380,984,941 samples, 0.04%)</title><rect x="349.3" y="1365" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="352.33" y="1375.5" ></text>
</g>
<g >
<title>update_rq_clock (77,303,852 samples, 0.01%)</title><rect x="145.0" y="1509" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="148.02" y="1519.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (126,050,630 samples, 0.01%)</title><rect x="529.6" y="1541" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="532.59" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (374,363,841 samples, 0.04%)</title><rect x="332.1" y="1333" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="335.09" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1061" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="1071.5" ></text>
</g>
<g >
<title>[libc.so.6] (225,732,645 samples, 0.02%)</title><rect x="472.1" y="53" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="475.09" y="63.5" ></text>
</g>
<g >
<title>sed (51,577,640,375 samples, 5.68%)</title><rect x="535.0" y="1637" width="67.0" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="537.96" y="1647.5" >sed</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1365" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="1375.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1221" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1231.5" >st..</text>
</g>
<g >
<title>update_load_avg (151,786,149 samples, 0.02%)</title><rect x="72.6" y="1429" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="75.61" y="1439.5" ></text>
</g>
<g >
<title>sched_clock (355,016,389 samples, 0.04%)</title><rect x="1065.9" y="1493" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1068.86" y="1503.5" ></text>
</g>
<g >
<title>futex_wake (4,036,481,779 samples, 0.44%)</title><rect x="357.7" y="1445" width="5.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="360.67" y="1455.5" ></text>
</g>
<g >
<title>iput (577,451,891 samples, 0.06%)</title><rect x="79.4" y="1429" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="82.42" y="1439.5" ></text>
</g>
<g >
<title>__fdget (851,274,539 samples, 0.09%)</title><rect x="485.7" y="1445" width="1.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="488.69" y="1455.5" ></text>
</g>
<g >
<title>security_file_alloc (144,070,941 samples, 0.02%)</title><rect x="133.7" y="1461" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="136.65" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,915,084,463 samples, 3.63%)</title><rect x="200.2" y="581" width="42.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="203.23" y="591.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="773" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="783.5" ></text>
</g>
<g >
<title>__switch_to (351,939,612 samples, 0.04%)</title><rect x="1029.7" y="1621" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1032.68" y="1631.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (775,438,202 samples, 0.09%)</title><rect x="496.4" y="1461" width="1.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="499.38" y="1471.5" ></text>
</g>
<g >
<title>rcu_do_batch (518,154,496 samples, 0.06%)</title><rect x="589.7" y="1493" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="592.66" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (111,938,906 samples, 0.01%)</title><rect x="786.7" y="1397" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="789.69" y="1407.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (479,224,432 samples, 0.05%)</title><rect x="786.9" y="1589" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="789.89" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="597" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="607.5" ></text>
</g>
<g >
<title>malloc (85,994,847 samples, 0.01%)</title><rect x="221.7" y="277" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="224.68" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="197" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="207.5" >std..</text>
</g>
<g >
<title>NaClSysClockGetCommon (195,911,891 samples, 0.02%)</title><rect x="835.5" y="1605" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="838.49" y="1615.5" ></text>
</g>
<g >
<title>__filemap_get_folio (2,724,407,657 samples, 0.30%)</title><rect x="734.6" y="1205" width="3.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="737.55" y="1215.5" ></text>
</g>
<g >
<title>iput (393,292,059 samples, 0.04%)</title><rect x="1179.7" y="1445" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1182.72" y="1455.5" ></text>
</g>
<g >
<title>ksys_read (125,137,069 samples, 0.01%)</title><rect x="502.8" y="1477" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="505.82" y="1487.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (129,913,819 samples, 0.01%)</title><rect x="1076.0" y="1557" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1078.96" y="1567.5" ></text>
</g>
<g >
<title>__fdget_raw (195,617,865 samples, 0.02%)</title><rect x="581.5" y="1573" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="584.52" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,709,043,204 samples, 0.41%)</title><rect x="720.6" y="1477" width="4.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="723.63" y="1487.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (325,623,088 samples, 0.04%)</title><rect x="1181.9" y="1445" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1184.87" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="405" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="415.5" ></text>
</g>
<g >
<title>rcu_core (140,573,440 samples, 0.02%)</title><rect x="530.6" y="1509" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="533.63" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (662,054,106 samples, 0.07%)</title><rect x="220.5" y="309" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="223.52" y="319.5" ></text>
</g>
<g >
<title>__schedule (2,790,690,912 samples, 0.31%)</title><rect x="1062.7" y="1541" width="3.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1065.72" y="1551.5" ></text>
</g>
<g >
<title>ovl_read_iter (108,287,144 samples, 0.01%)</title><rect x="786.7" y="1333" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="789.69" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,910,616,743 samples, 0.21%)</title><rect x="170.9" y="213" width="2.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="173.88" y="223.5" ></text>
</g>
<g >
<title>execute_command_internal (112,476,717 samples, 0.01%)</title><rect x="855.0" y="1445" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="857.99" y="1455.5" ></text>
</g>
<g >
<title>rcu_do_batch (246,522,547 samples, 0.03%)</title><rect x="1136.5" y="1381" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1139.50" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1477" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="1487.5" ></text>
</g>
<g >
<title>update_cfs_group (107,084,629 samples, 0.01%)</title><rect x="583.0" y="1445" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="585.97" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_select (112,903,425 samples, 0.01%)</title><rect x="533.1" y="1541" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="536.14" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1269" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1279.5" ></text>
</g>
<g >
<title>[unknown]  (32,438,604,810 samples, 3.57%)</title><rect x="791.9" y="1621" width="42.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="794.85" y="1631.5" >[un..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="725" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="735.5" >std..</text>
</g>
<g >
<title>[libc.so.6] (927,138,129 samples, 0.10%)</title><rect x="183.1" y="1477" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="186.12" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (55,102,986,990 samples, 6.07%)</title><rect x="673.5" y="1509" width="71.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="676.48" y="1519.5" >[libc.so..</text>
</g>
<g >
<title>free_unref_page_list (827,476,594 samples, 0.09%)</title><rect x="843.4" y="1205" width="1.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="846.36" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (125,809,864 samples, 0.01%)</title><rect x="132.5" y="1509" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="135.51" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62,374,970,918 samples, 6.87%)</title><rect x="196.6" y="885" width="81.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="199.57" y="895.5" >std::__de..</text>
</g>
<g >
<title>pick_next_task_fair (1,253,438,966 samples, 0.14%)</title><rect x="1063.7" y="1509" width="1.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1066.73" y="1519.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (207,627,928 samples, 0.02%)</title><rect x="1073.9" y="1381" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1076.88" y="1391.5" ></text>
</g>
<g >
<title>do_idle (727,754,243 samples, 0.08%)</title><rect x="1189.0" y="1509" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1191.98" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (111,121,611 samples, 0.01%)</title><rect x="302.0" y="1045" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="305.04" y="1055.5" ></text>
</g>
<g >
<title>NaClSysClockGetTimeDecoder (81,821,385,927 samples, 9.01%)</title><rect x="655.2" y="1589" width="106.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="658.25" y="1599.5" >NaClSysClockG..</text>
</g>
<g >
<title>cpu_startup_entry (5,837,137,545 samples, 0.64%)</title><rect x="1181.4" y="1589" width="7.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1184.38" y="1599.5" ></text>
</g>
<g >
<title>filemap_unaccount_folio (284,517,830 samples, 0.03%)</title><rect x="847.4" y="1221" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="850.38" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="613" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="623.5" ></text>
</g>
<g >
<title>NaClStraceClockGetCommon (197,347,404 samples, 0.02%)</title><rect x="835.2" y="1605" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="838.24" y="1615.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (135,121,507 samples, 0.01%)</title><rect x="1061.2" y="1493" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1064.23" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1301" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="997" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="1007.5" ></text>
</g>
<g >
<title>shuffle_freelist (94,013,452 samples, 0.01%)</title><rect x="1038.4" y="1413" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1041.43" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (639,797,567 samples, 0.07%)</title><rect x="1135.4" y="1621" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1138.41" y="1631.5" ></text>
</g>
<g >
<title>stop_this_handle (296,014,551 samples, 0.03%)</title><rect x="740.8" y="1125" width="0.4" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="743.84" y="1135.5" ></text>
</g>
<g >
<title>__d_alloc (161,289,129 samples, 0.02%)</title><rect x="526.2" y="1493" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="529.16" y="1503.5" ></text>
</g>
<g >
<title>prepare_task_switch (97,365,179 samples, 0.01%)</title><rect x="103.9" y="1525" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="106.94" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (742,105,293 samples, 0.08%)</title><rect x="227.5" y="373" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="230.46" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="741" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_write (80,143,252 samples, 0.01%)</title><rect x="1178.5" y="1589" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1181.54" y="1599.5" ></text>
</g>
<g >
<title>__schedule (1,339,276,826 samples, 0.15%)</title><rect x="582.4" y="1509" width="1.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="585.43" y="1519.5" ></text>
</g>
<g >
<title>update_load_avg (711,636,818 samples, 0.08%)</title><rect x="1118.6" y="1445" width="0.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1121.58" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1397" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1407.5" ></text>
</g>
<g >
<title>__kmalloc (588,830,971 samples, 0.06%)</title><rect x="728.3" y="1253" width="0.7" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="731.27" y="1263.5" ></text>
</g>
<g >
<title>_Fork (222,500,485 samples, 0.02%)</title><rect x="168.6" y="1477" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="171.55" y="1487.5" ></text>
</g>
<g >
<title>make_kuid (87,058,412 samples, 0.01%)</title><rect x="1037.3" y="1477" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1040.33" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (313,329,038 samples, 0.03%)</title><rect x="166.7" y="1605" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.74" y="1615.5" ></text>
</g>
<g >
<title>malloc (156,585,174 samples, 0.02%)</title><rect x="283.2" y="853" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="286.23" y="863.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (130,707,023 samples, 0.01%)</title><rect x="1136.8" y="1445" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1139.82" y="1455.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (607,590,659 samples, 0.07%)</title><rect x="1080.7" y="1397" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1083.65" y="1407.5" ></text>
</g>
<g >
<title>__do_softirq (212,756,556 samples, 0.02%)</title><rect x="1113.3" y="1413" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1116.26" y="1423.5" ></text>
</g>
<g >
<title>hrtimer_sleeper_start_expires (133,742,629 samples, 0.01%)</title><rect x="499.7" y="1429" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="502.74" y="1439.5" ></text>
</g>
<g >
<title>[bash] (124,500,596 samples, 0.01%)</title><rect x="854.8" y="1413" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="857.83" y="1423.5" ></text>
</g>
<g >
<title>release_sock (101,820,844 samples, 0.01%)</title><rect x="1036.1" y="1509" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1039.08" y="1519.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (670,366,785 samples, 0.07%)</title><rect x="82.1" y="1573" width="0.9" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="85.14" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,320,536,964 samples, 4.22%)</title><rect x="199.2" y="645" width="49.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="202.25" y="655.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="997" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1007.5" ></text>
</g>
<g >
<title>alloc_empty_file (612,922,646 samples, 0.07%)</title><rect x="579.5" y="1493" width="0.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="582.47" y="1503.5" ></text>
</g>
<g >
<title>try_to_wake_up (308,904,805 samples, 0.03%)</title><rect x="1176.8" y="1525" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1179.77" y="1535.5" ></text>
</g>
<g >
<title>NaClClockGetTime (85,284,873 samples, 0.01%)</title><rect x="658.7" y="1557" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="661.75" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1541" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="1551.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (217,317,222 samples, 0.02%)</title><rect x="853.0" y="1077" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="856.01" y="1087.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (138,720,367,931 samples, 15.28%)</title><rect x="173.8" y="1573" width="180.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="176.83" y="1583.5" >InotifyBackend::handleS..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="149" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (222,680,253 samples, 0.02%)</title><rect x="427.9" y="181" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="430.93" y="191.5" ></text>
</g>
<g >
<title>futex_wake_mark (174,221,776 samples, 0.02%)</title><rect x="584.6" y="1541" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="587.62" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1461" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1471.5" ></text>
</g>
<g >
<title>plist_del (94,015,825 samples, 0.01%)</title><rect x="359.9" y="1413" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="362.88" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,441,185,580 samples, 2.80%)</title><rect x="390.9" y="1573" width="33.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1583.5" >st..</text>
</g>
<g >
<title>clear_page_erms (112,295,859 samples, 0.01%)</title><rect x="1038.3" y="1365" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1041.26" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1237" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1247.5" ></text>
</g>
<g >
<title>dget_parent (378,417,829 samples, 0.04%)</title><rect x="726.5" y="1317" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="729.55" y="1327.5" ></text>
</g>
<g >
<title>journal-offline (30,441,258,770 samples, 3.35%)</title><rect x="107.5" y="1637" width="39.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="110.53" y="1647.5" >jou..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (580,289,735 samples, 0.06%)</title><rect x="282.1" y="885" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="285.10" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="501" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="511.5" ></text>
</g>
<g >
<title>__sys_sendto (138,071,293 samples, 0.02%)</title><rect x="529.0" y="1573" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="532.02" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (96,671,239 samples, 0.01%)</title><rect x="341.5" y="1525" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="344.49" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,452,548,529 samples, 1.26%)</title><rect x="66.4" y="1605" width="14.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="69.37" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="277" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="287.5" ></text>
</g>
<g >
<title>update_curr (686,687,855 samples, 0.08%)</title><rect x="1064.4" y="1493" width="0.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1067.35" y="1503.5" ></text>
</g>
<g >
<title>iput (284,307,875 samples, 0.03%)</title><rect x="138.6" y="1445" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="141.60" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1397" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (105,928,631 samples, 0.01%)</title><rect x="106.9" y="1605" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="109.92" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1269" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="165" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="453" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="463.5" >std..</text>
</g>
<g >
<title>folio_batch_move_lru (222,166,434 samples, 0.02%)</title><rect x="736.7" y="1157" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="739.75" y="1167.5" ></text>
</g>
<g >
<title>do_sched_yield (635,121,039 samples, 0.07%)</title><rect x="136.8" y="1573" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="139.77" y="1583.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (85,563,213 samples, 0.01%)</title><rect x="1130.6" y="1573" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1133.61" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,729,021,648 samples, 0.96%)</title><rect x="577.9" y="1605" width="11.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="580.90" y="1615.5" ></text>
</g>
<g >
<title>update_rq_clock (87,957,565 samples, 0.01%)</title><rect x="586.5" y="1525" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="589.47" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="325" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="335.5" >st..</text>
</g>
<g >
<title>rcu_note_context_switch (114,412,930 samples, 0.01%)</title><rect x="1065.5" y="1525" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1068.53" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (77,533,140 samples, 0.01%)</title><rect x="282.7" y="853" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="285.70" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="853" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="863.5" >st..</text>
</g>
<g >
<title>call_rcu (253,879,237 samples, 0.03%)</title><rect x="1073.5" y="1365" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1076.53" y="1375.5" ></text>
</g>
<g >
<title>psi_task_change (107,651,090 samples, 0.01%)</title><rect x="1187.4" y="1477" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1190.35" y="1487.5" ></text>
</g>
<g >
<title>__writeback_single_inode (700,532,856 samples, 0.08%)</title><rect x="1080.6" y="1461" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1083.63" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1269" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1279.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,228,633,497 samples, 0.14%)</title><rect x="137.8" y="1573" width="1.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="140.77" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1141" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1397" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1407.5" ></text>
</g>
<g >
<title>NaClXlateSysRet (165,735,836 samples, 0.02%)</title><rect x="779.0" y="1557" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="781.96" y="1567.5" ></text>
</g>
<g >
<title>clock_gettime (197,452,121 samples, 0.02%)</title><rect x="745.2" y="1525" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="748.23" y="1535.5" ></text>
</g>
<g >
<title>wake_up_q (324,974,629 samples, 0.04%)</title><rect x="1176.8" y="1541" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1179.75" y="1551.5" ></text>
</g>
<g >
<title>__switch_to_asm (434,347,983 samples, 0.05%)</title><rect x="481.6" y="1525" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="484.62" y="1535.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (107,382,860 samples, 0.01%)</title><rect x="1076.8" y="1573" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1079.76" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1589" width="0.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="172.53" y="1599.5" ></text>
</g>
<g >
<title>task_work_run (1,529,673,542 samples, 0.17%)</title><rect x="78.7" y="1525" width="2.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="81.73" y="1535.5" ></text>
</g>
<g >
<title>__fdget (314,448,556 samples, 0.03%)</title><rect x="1034.3" y="1557" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1037.28" y="1567.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (131,579,529,852 samples, 14.49%)</title><rect x="616.5" y="1605" width="171.0" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="619.49" y="1615.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1333" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1343.5" ></text>
</g>
<g >
<title>futex_wait (459,058,262 samples, 0.05%)</title><rect x="527.1" y="1557" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="530.14" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="693" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="703.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="757" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="767.5" >st..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (6,575,431,147 samples, 0.72%)</title><rect x="1181.4" y="1621" width="8.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1184.38" y="1631.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (142,449,957 samples, 0.02%)</title><rect x="1189.6" y="1493" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.61" y="1503.5" ></text>
</g>
<g >
<title>set_next_entity (561,997,161 samples, 0.06%)</title><rect x="1125.7" y="1493" width="0.7" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1128.68" y="1503.5" ></text>
</g>
<g >
<title>malloc (127,241,135 samples, 0.01%)</title><rect x="270.8" y="725" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="273.79" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,830,473,981 samples, 0.64%)</title><rect x="319.0" y="1285" width="7.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="321.96" y="1295.5" ></text>
</g>
<g >
<title>rest_init (727,754,243 samples, 0.08%)</title><rect x="1189.0" y="1541" width="0.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1191.98" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1173" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1413" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="373" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="383.5" ></text>
</g>
<g >
<title>call_cpuidle (4,428,604,387 samples, 0.49%)</title><rect x="590.9" y="1541" width="5.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="593.89" y="1551.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (936,588,674 samples, 0.10%)</title><rect x="656.7" y="1557" width="1.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="659.74" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="501" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="511.5" >std..</text>
</g>
<g >
<title>select_task_rq_fair (474,295,285 samples, 0.05%)</title><rect x="1060.5" y="1509" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1063.48" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="757" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="767.5" ></text>
</g>
<g >
<title>rmqueue (223,097,091 samples, 0.02%)</title><rect x="737.5" y="1109" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="740.48" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="277" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="287.5" ></text>
</g>
<g >
<title>gettimens (232,170,344 samples, 0.03%)</title><rect x="841.3" y="1605" width="0.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="844.33" y="1615.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (258,948,961 samples, 0.03%)</title><rect x="1113.2" y="1477" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1116.20" y="1487.5" ></text>
</g>
<g >
<title>kmem_cache_free (83,669,572 samples, 0.01%)</title><rect x="82.3" y="1461" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="85.32" y="1471.5" ></text>
</g>
<g >
<title>operator new (122,430,184 samples, 0.01%)</title><rect x="248.4" y="549" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="251.44" y="559.5" ></text>
</g>
<g >
<title>futex_wake (198,271,964 samples, 0.02%)</title><rect x="527.7" y="1557" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="530.74" y="1567.5" ></text>
</g>
<g >
<title>inode_init_always (148,633,460 samples, 0.02%)</title><rect x="578.8" y="1493" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="581.78" y="1503.5" ></text>
</g>
<g >
<title>dequeue_entity (371,894,667 samples, 0.04%)</title><rect x="582.9" y="1461" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="585.87" y="1471.5" ></text>
</g>
<g >
<title>futex_wait_queue (171,486,089 samples, 0.02%)</title><rect x="1135.6" y="1541" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1138.59" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (74,328,684,861 samples, 8.19%)</title><rect x="194.2" y="1029" width="96.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="197.24" y="1039.5" >std::__deta..</text>
</g>
<g >
<title>start_secondary (16,167,676,206 samples, 1.78%)</title><rect x="84.1" y="1605" width="21.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="87.07" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1429" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="1439.5" ></text>
</g>
<g >
<title>node_dirty_ok (99,071,546 samples, 0.01%)</title><rect x="737.2" y="1109" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="740.23" y="1119.5" ></text>
</g>
<g >
<title>psi_task_switch (307,380,567 samples, 0.03%)</title><rect x="104.1" y="1525" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="107.14" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="693" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="703.5" ></text>
</g>
<g >
<title>restore_fpregs_from_fpstate (355,271,378 samples, 0.04%)</title><rect x="1076.3" y="1541" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1079.29" y="1551.5" ></text>
</g>
<g >
<title>sched_clock_cpu (413,133,748 samples, 0.05%)</title><rect x="1065.8" y="1509" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1068.81" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="341" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="351.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (217,385,162 samples, 0.02%)</title><rect x="851.1" y="1141" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="854.08" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="949" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="959.5" ></text>
</g>
<g >
<title>operator delete (112,002,408 samples, 0.01%)</title><rect x="315.6" y="1205" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="318.63" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="277" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="287.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="229" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (685,331,263 samples, 0.08%)</title><rect x="267.3" y="741" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="270.27" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="853" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="805" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="815.5" ></text>
</g>
<g >
<title>new_slab (130,585,720 samples, 0.01%)</title><rect x="1172.9" y="1445" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1175.90" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1301" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1311.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (923,849,425 samples, 0.10%)</title><rect x="105.1" y="1589" width="1.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="108.09" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,275,756,710 samples, 0.47%)</title><rect x="469.5" y="133" width="5.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="143.5" ></text>
</g>
<g >
<title>wake_up_q (115,489,478 samples, 0.01%)</title><rect x="1135.8" y="1541" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1138.81" y="1551.5" ></text>
</g>
<g >
<title>___slab_alloc (138,453,102 samples, 0.02%)</title><rect x="1172.9" y="1461" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1175.89" y="1471.5" ></text>
</g>
<g >
<title>memcg_list_lru_alloc (245,179,857 samples, 0.03%)</title><rect x="1039.6" y="1445" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1042.62" y="1455.5" ></text>
</g>
<g >
<title>unmap_page_range (87,505,302 samples, 0.01%)</title><rect x="503.3" y="1365" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="506.30" y="1375.5" ></text>
</g>
<g >
<title>ovl_show_options (87,673,643 samples, 0.01%)</title><rect x="528.0" y="1493" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="531.02" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1301" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1311.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="485" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="495.5" ></text>
</g>
<g >
<title>pick_next_task_fair (237,318,122 samples, 0.03%)</title><rect x="1177.9" y="1509" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1180.86" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (268,899,561 samples, 0.03%)</title><rect x="69.5" y="1461" width="0.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="72.47" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (262,961,491 samples, 0.03%)</title><rect x="474.7" y="85" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="477.74" y="95.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (122,656,740 samples, 0.01%)</title><rect x="134.1" y="1509" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="137.13" y="1519.5" ></text>
</g>
<g >
<title>read_tsc (175,374,205 samples, 0.02%)</title><rect x="1129.8" y="1541" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1132.82" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (970,905,222 samples, 0.11%)</title><rect x="585.5" y="1589" width="1.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="588.46" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,221,192,278 samples, 0.13%)</title><rect x="391.2" y="101" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="394.22" y="111.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (248,109,234 samples, 0.03%)</title><rect x="488.2" y="1413" width="0.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="491.25" y="1423.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (218,743,865 samples, 0.02%)</title><rect x="1136.0" y="1557" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1138.96" y="1567.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (7,502,683,891 samples, 0.83%)</title><rect x="484.2" y="1461" width="9.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="487.22" y="1471.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (1,411,218,274 samples, 0.16%)</title><rect x="100.9" y="1525" width="1.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="103.94" y="1535.5" ></text>
</g>
<g >
<title>grep (113,927,452 samples, 0.01%)</title><rect x="107.4" y="1637" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="110.38" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,250,388 samples, 0.01%)</title><rect x="189.4" y="1381" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="192.36" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (373,064,246 samples, 0.04%)</title><rect x="213.2" y="213" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="216.20" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="373" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="885" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="895.5" ></text>
</g>
<g >
<title>sock_alloc_inode (362,262,285 samples, 0.04%)</title><rect x="1172.9" y="1493" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1175.88" y="1503.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,041,908,712 samples, 0.11%)</title><rect x="496.1" y="1493" width="1.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="499.08" y="1503.5" ></text>
</g>
<g >
<title>sock_free_inode (98,103,090 samples, 0.01%)</title><rect x="591.4" y="1349" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="594.37" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="261" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="271.5" >st..</text>
</g>
<g >
<title>try_to_wake_up (218,587,126 samples, 0.02%)</title><rect x="136.5" y="1525" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="139.49" y="1535.5" ></text>
</g>
<g >
<title>operator new (85,994,847 samples, 0.01%)</title><rect x="221.7" y="293" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="224.68" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1413" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1125" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1135.5" >st..</text>
</g>
<g >
<title>select_task_rq_fair (246,775,181 samples, 0.03%)</title><rect x="731.3" y="1141" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="734.32" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (84,731,546,650 samples, 9.33%)</title><rect x="193.1" y="1125" width="110.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="196.12" y="1135.5" >std::__detail..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (327,907,228 samples, 0.04%)</title><rect x="423.6" y="149" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="426.59" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1397" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1407.5" >st..</text>
</g>
<g >
<title>wb_workfn (700,532,856 samples, 0.08%)</title><rect x="1080.6" y="1541" width="0.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1083.63" y="1551.5" ></text>
</g>
<g >
<title>psi_task_switch (220,097,994 samples, 0.02%)</title><rect x="599.9" y="1525" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="602.92" y="1535.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (85,394,765 samples, 0.01%)</title><rect x="1067.0" y="1493" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1070.01" y="1503.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (4,880,273,150 samples, 0.54%)</title><rect x="1115.5" y="1541" width="6.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1118.52" y="1551.5" ></text>
</g>
<g >
<title>cpu_startup_entry (727,754,243 samples, 0.08%)</title><rect x="1189.0" y="1525" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1191.98" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (117,456,861 samples, 0.01%)</title><rect x="148.1" y="1605" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="151.15" y="1615.5" ></text>
</g>
<g >
<title>cpu_startup_entry (130,707,023 samples, 0.01%)</title><rect x="1136.8" y="1525" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1139.82" y="1535.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (961,232,845 samples, 0.11%)</title><rect x="1045.1" y="1557" width="1.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1048.09" y="1567.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (211,380,213 samples, 0.02%)</title><rect x="343.0" y="1429" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="345.98" y="1439.5" ></text>
</g>
<g >
<title>do_sys_openat2 (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1413" width="11.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="845.66" y="1423.5" ></text>
</g>
<g >
<title>evict (234,654,589 samples, 0.03%)</title><rect x="138.7" y="1429" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="141.67" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (155,571,991 samples, 0.02%)</title><rect x="191.4" y="1253" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="194.35" y="1263.5" ></text>
</g>
<g >
<title>sock_alloc (1,059,957,764 samples, 0.12%)</title><rect x="67.3" y="1525" width="1.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="70.28" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1269" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1279.5" ></text>
</g>
<g >
<title>select_task_rq_fair (208,534,057 samples, 0.02%)</title><rect x="74.9" y="1493" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="77.86" y="1503.5" ></text>
</g>
<g >
<title>ext4_bio_write_folio (235,225,655 samples, 0.03%)</title><rect x="83.4" y="1349" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="86.42" y="1359.5" ></text>
</g>
<g >
<title>futex_wait (1,835,688,442 samples, 0.20%)</title><rect x="582.1" y="1557" width="2.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="585.07" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (752,387,961 samples, 0.08%)</title><rect x="309.2" y="1141" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="312.16" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,498,635,442 samples, 0.17%)</title><rect x="424.0" y="101" width="2.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="111.5" ></text>
</g>
<g >
<title>rest_init (2,460,403,747 samples, 0.27%)</title><rect x="1131.0" y="1541" width="3.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1133.98" y="1551.5" ></text>
</g>
<g >
<title>arch_call_rest_init (130,707,023 samples, 0.01%)</title><rect x="1136.8" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1139.82" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1109" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1119.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1541" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1551.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (341,012,219 samples, 0.04%)</title><rect x="741.9" y="1093" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="744.90" y="1103.5" ></text>
</g>
<g >
<title>malloc (220,508,563 samples, 0.02%)</title><rect x="235.6" y="405" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="238.58" y="415.5" ></text>
</g>
<g >
<title>operator new (475,597,775 samples, 0.05%)</title><rect x="380.2" y="101" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="383.21" y="111.5" ></text>
</g>
<g >
<title>ksys_write (80,143,252 samples, 0.01%)</title><rect x="1178.5" y="1573" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1181.54" y="1583.5" ></text>
</g>
<g >
<title>__cond_resched (95,924,495 samples, 0.01%)</title><rect x="849.5" y="1205" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="852.54" y="1215.5" ></text>
</g>
<g >
<title>malloc (237,304,558 samples, 0.03%)</title><rect x="310.4" y="1109" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="313.38" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="581" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="591.5" ></text>
</g>
<g >
<title>cfree (919,563,438 samples, 0.10%)</title><rect x="239.2" y="501" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="242.15" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1109" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="1119.5" ></text>
</g>
<g >
<title>__pollwait (178,198,915 samples, 0.02%)</title><rect x="487.6" y="1429" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="490.57" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="885" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="895.5" ></text>
</g>
<g >
<title>cfree (965,775,735 samples, 0.11%)</title><rect x="336.0" y="1397" width="1.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="338.98" y="1407.5" ></text>
</g>
<g >
<title>enqueue_task (505,725,529 samples, 0.06%)</title><rect x="1186.8" y="1493" width="0.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1189.84" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (841,702,942 samples, 0.09%)</title><rect x="329.8" y="1317" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="332.78" y="1327.5" ></text>
</g>
<g >
<title>pick_next_task (266,423,031 samples, 0.03%)</title><rect x="491.9" y="1381" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="494.87" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="773" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1221" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1231.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (635,121,039 samples, 0.07%)</title><rect x="136.8" y="1589" width="0.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="139.77" y="1599.5" ></text>
</g>
<g >
<title>refill_obj_stock (265,264,953 samples, 0.03%)</title><rect x="853.7" y="1077" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="856.68" y="1087.5" ></text>
</g>
<g >
<title>rcu_core_si (328,051,197 samples, 0.04%)</title><rect x="139.5" y="1525" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="142.51" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="917" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="927.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (152,280,670 samples, 0.02%)</title><rect x="78.4" y="1509" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="81.39" y="1519.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (279,087,294 samples, 0.03%)</title><rect x="1070.4" y="1525" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1073.36" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_futex (4,268,857,895 samples, 0.47%)</title><rect x="357.4" y="1477" width="5.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="360.37" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1029" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="1039.5" ></text>
</g>
<g >
<title>futex_wait (1,672,708,142 samples, 0.18%)</title><rect x="499.4" y="1461" width="2.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="502.43" y="1471.5" ></text>
</g>
<g >
<title>rcu_do_batch (1,245,086,397 samples, 0.14%)</title><rect x="1083.6" y="1381" width="1.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1086.59" y="1391.5" ></text>
</g>
<g >
<title>irq_exit_rcu (283,550,996 samples, 0.03%)</title><rect x="140.3" y="1461" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="143.28" y="1471.5" ></text>
</g>
<g >
<title>ovl_write_iter (9,038,390,314 samples, 1.00%)</title><rect x="732.8" y="1333" width="11.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="735.84" y="1343.5" ></text>
</g>
<g >
<title>free_unref_page_prepare (145,379,941 samples, 0.02%)</title><rect x="844.2" y="1189" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="847.24" y="1199.5" ></text>
</g>
<g >
<title>__fdget_raw (1,071,327,427 samples, 0.12%)</title><rect x="1046.9" y="1573" width="1.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1049.93" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (67,489,727,974 samples, 7.43%)</title><rect x="195.9" y="917" width="87.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="198.93" y="927.5" >std::__det..</text>
</g>
<g >
<title>select_estimate_accuracy (132,345,994 samples, 0.01%)</title><rect x="493.8" y="1445" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="496.80" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="133" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="143.5" ></text>
</g>
<g >
<title>__fdget_raw (143,825,827 samples, 0.02%)</title><rect x="526.7" y="1573" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="529.75" y="1583.5" ></text>
</g>
<g >
<title>ksys_read (4,968,288,795 samples, 0.55%)</title><rect x="364.6" y="1525" width="6.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="367.59" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,275,756,710 samples, 0.47%)</title><rect x="469.5" y="165" width="5.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="175.5" ></text>
</g>
<g >
<title>copy_p4d_range (189,734,921 samples, 0.02%)</title><rect x="168.6" y="1317" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="171.56" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (91,420,521,535 samples, 10.07%)</title><rect x="192.4" y="1189" width="118.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="195.44" y="1199.5" >std::__detail:..</text>
</g>
<g >
<title>v8::internal::Builtin_ObjectGetOwnPropertyDescriptors (80,964,170 samples, 0.01%)</title><rect x="169.0" y="1589" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="171.97" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,359,112,346 samples, 0.15%)</title><rect x="477.9" y="149" width="1.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="480.91" y="159.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (4,378,077,696 samples, 0.48%)</title><rect x="772.6" y="1557" width="5.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="775.64" y="1567.5" ></text>
</g>
<g >
<title>malloc (653,461,801 samples, 0.07%)</title><rect x="218.7" y="293" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="221.66" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,367,434 samples, 0.01%)</title><rect x="276.4" y="789" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="279.42" y="799.5" ></text>
</g>
<g >
<title>sh (697,428,395 samples, 0.08%)</title><rect x="854.5" y="1637" width="0.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="857.50" y="1647.5" ></text>
</g>
<g >
<title>do_sched_yield (549,860,173 samples, 0.06%)</title><rect x="528.3" y="1573" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="531.29" y="1583.5" ></text>
</g>
<g >
<title>malloc (146,854,509 samples, 0.02%)</title><rect x="295.7" y="981" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="298.67" y="991.5" ></text>
</g>
<g >
<title>generic_perform_write (573,671,301 samples, 0.06%)</title><rect x="503.9" y="1301" width="0.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="506.92" y="1311.5" ></text>
</g>
<g >
<title>psi_task_change (237,130,427 samples, 0.03%)</title><rect x="598.2" y="1477" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="601.23" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="533" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="901" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="911.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1605" width="6.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="374.25" y="1615.5" ></text>
</g>
<g >
<title>_IO_do_write (14,930,584,689 samples, 1.64%)</title><rect x="725.6" y="1477" width="19.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="728.56" y="1487.5" ></text>
</g>
<g >
<title>fput (162,384,803 samples, 0.02%)</title><rect x="1035.1" y="1541" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1038.07" y="1551.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (112,291,224 samples, 0.01%)</title><rect x="78.9" y="1461" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="81.93" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1333" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1343.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (385,578,118 samples, 0.04%)</title><rect x="1181.8" y="1477" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1184.80" y="1487.5" ></text>
</g>
<g >
<title>____fput (748,388,673 samples, 0.08%)</title><rect x="1179.4" y="1525" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1182.45" y="1535.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,456,945,008 samples, 0.27%)</title><rect x="1131.0" y="1525" width="3.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1133.98" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (609,011,632 samples, 0.07%)</title><rect x="309.3" y="1125" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="312.34" y="1135.5" ></text>
</g>
<g >
<title>__kmem_cache_free (1,019,395,328 samples, 0.11%)</title><rect x="368.5" y="1429" width="1.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="371.53" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,557,669,114 samples, 0.50%)</title><rect x="243.0" y="581" width="5.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="246.01" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="869" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="879.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (116,908,807 samples, 0.01%)</title><rect x="370.5" y="1461" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="373.49" y="1471.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (152,872,851 samples, 0.02%)</title><rect x="104.8" y="1557" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="107.80" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="709" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="719.5" ></text>
</g>
<g >
<title>arch_call_rest_init (2,460,403,747 samples, 0.27%)</title><rect x="1131.0" y="1557" width="3.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1133.98" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (212,585,520 samples, 0.02%)</title><rect x="503.2" y="1605" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="506.17" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (244,188,374 samples, 0.03%)</title><rect x="169.5" y="85" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (458,745,975 samples, 0.05%)</title><rect x="167.3" y="1605" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="170.31" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (329,742,415 samples, 0.04%)</title><rect x="147.5" y="1525" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="150.45" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (638,528,824 samples, 0.07%)</title><rect x="503.8" y="1461" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="506.84" y="1471.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (116,660,016 samples, 0.01%)</title><rect x="490.4" y="1317" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="493.44" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1525" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1535.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="389" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="399.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (4,882,449,153 samples, 0.54%)</title><rect x="590.8" y="1557" width="6.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="593.81" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,386,444,578 samples, 0.59%)</title><rect x="296.2" y="1093" width="7.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="299.20" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="581" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (579,053,390 samples, 0.06%)</title><rect x="275.8" y="821" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="278.80" y="831.5" ></text>
</g>
<g >
<title>pick_next_task_fair (171,486,089 samples, 0.02%)</title><rect x="1135.6" y="1477" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1138.59" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="341" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="351.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (407,890,461 samples, 0.04%)</title><rect x="139.5" y="1621" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="142.49" y="1631.5" ></text>
</g>
<g >
<title>operator new (262,961,491 samples, 0.03%)</title><rect x="474.7" y="69" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="477.74" y="79.5" ></text>
</g>
<g >
<title>__pollwait (199,259,179 samples, 0.02%)</title><rect x="487.1" y="1429" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="490.11" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (2,331,528,307 samples, 0.26%)</title><rect x="463.8" y="69" width="3.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="466.83" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="885" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="895.5" ></text>
</g>
<g >
<title>malloc (240,010,710 samples, 0.03%)</title><rect x="318.2" y="1173" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="321.17" y="1183.5" ></text>
</g>
<g >
<title>cpuidle_select (366,177,059 samples, 0.04%)</title><rect x="596.7" y="1541" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="599.66" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="661" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="671.5" ></text>
</g>
<g >
<title>native_sched_clock (261,939,453 samples, 0.03%)</title><rect x="1066.0" y="1461" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1068.98" y="1471.5" ></text>
</g>
<g >
<title>CompareAndSwap (580,238,722 samples, 0.06%)</title><rect x="834.0" y="1605" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="837.02" y="1615.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (224,036,908 samples, 0.02%)</title><rect x="524.7" y="1621" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="527.70" y="1631.5" ></text>
</g>
<g >
<title>malloc (611,184,041 samples, 0.07%)</title><rect x="281.3" y="869" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="284.30" y="879.5" ></text>
</g>
<g >
<title>malloc (5,015,138,063 samples, 0.55%)</title><rect x="409.2" y="85" width="6.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="412.19" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,857,206,628 samples, 0.20%)</title><rect x="475.5" y="133" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="143.5" ></text>
</g>
<g >
<title>__folio_start_writeback (160,441,063 samples, 0.02%)</title><rect x="83.5" y="1333" width="0.2" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="86.46" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1013" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="853" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="863.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (167,630,476 samples, 0.02%)</title><rect x="534.5" y="1493" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="537.51" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (54,671,001,582 samples, 6.02%)</title><rect x="10.5" y="1621" width="71.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.48" y="1631.5" >[unknown]</text>
</g>
<g >
<title>[libc.so.6] (2,241,429,486 samples, 0.25%)</title><rect x="381.3" y="1605" width="3.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="384.34" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (92,085,987 samples, 0.01%)</title><rect x="503.5" y="1589" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="506.52" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="773" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="783.5" ></text>
</g>
<g >
<title>futex_q_lock (127,339,701 samples, 0.01%)</title><rect x="501.3" y="1429" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="504.34" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,894,725,857 samples, 0.21%)</title><rect x="392.8" y="53" width="2.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="63.5" ></text>
</g>
<g >
<title>pick_next_task_fair (135,085,566 samples, 0.01%)</title><rect x="73.1" y="1461" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="76.11" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (329,742,415 samples, 0.04%)</title><rect x="147.5" y="1541" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="150.45" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="885" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="895.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1,913,752,264 samples, 0.21%)</title><rect x="740.5" y="1173" width="2.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="743.52" y="1183.5" ></text>
</g>
<g >
<title>memcg_list_lru_alloc (145,601,129 samples, 0.02%)</title><rect x="1044.0" y="1445" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1046.97" y="1455.5" ></text>
</g>
<g >
<title>task_work_run (1,094,426,541 samples, 0.12%)</title><rect x="587.6" y="1541" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="590.59" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,033,427,580 samples, 0.11%)</title><rect x="429.0" y="53" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="432.01" y="63.5" ></text>
</g>
<g >
<title>__put_user_8 (161,392,270 samples, 0.02%)</title><rect x="496.6" y="1429" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="499.60" y="1439.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (152,246,414,448 samples, 16.77%)</title><rect x="173.4" y="1605" width="197.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="176.37" y="1615.5" >InotifyBackend::handleEve..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,153,477,340 samples, 0.57%)</title><rect x="264.3" y="773" width="6.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="267.26" y="783.5" ></text>
</g>
<g >
<title>____fput (218,743,865 samples, 0.02%)</title><rect x="1136.0" y="1525" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1138.96" y="1535.5" ></text>
</g>
<g >
<title>irq_exit_rcu (246,522,547 samples, 0.03%)</title><rect x="1136.5" y="1461" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1139.50" y="1471.5" ></text>
</g>
<g >
<title>discard_slab (251,976,321 samples, 0.03%)</title><rect x="852.7" y="1045" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="855.68" y="1055.5" ></text>
</g>
<g >
<title>__folio_mark_dirty (427,763,406 samples, 0.05%)</title><rect x="743.4" y="1141" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="746.39" y="1151.5" ></text>
</g>
<g >
<title>llist_add_batch (99,062,287 samples, 0.01%)</title><rect x="732.3" y="1125" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="735.26" y="1135.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (134,078,135 samples, 0.01%)</title><rect x="1135.4" y="1557" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1138.41" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="277" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages (79,801,756 samples, 0.01%)</title><rect x="67.8" y="1381" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="70.78" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="901" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (361,867,174 samples, 0.04%)</title><rect x="324.9" y="1253" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="327.86" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="725" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="735.5" ></text>
</g>
<g >
<title>futex_wake_mark (85,879,494 samples, 0.01%)</title><rect x="136.3" y="1541" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="139.32" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (388,132,575 samples, 0.04%)</title><rect x="471.6" y="69" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="474.59" y="79.5" ></text>
</g>
<g >
<title>__fdget_raw (191,655,572 samples, 0.02%)</title><rect x="134.6" y="1573" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="137.61" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1253" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1263.5" ></text>
</g>
<g >
<title>newidle_balance (105,321,683 samples, 0.01%)</title><rect x="73.1" y="1445" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="76.14" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="421" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="431.5" ></text>
</g>
<g >
<title>psi_task_change (192,134,941 samples, 0.02%)</title><rect x="144.8" y="1477" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="147.77" y="1487.5" ></text>
</g>
<g >
<title>NaClClockGetTime (5,242,125,379 samples, 0.58%)</title><rect x="660.8" y="1541" width="6.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="663.81" y="1551.5" ></text>
</g>
<g >
<title>__schedule (310,232,449 samples, 0.03%)</title><rect x="533.9" y="1541" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="536.86" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (261,434,924 samples, 0.03%)</title><rect x="377.6" y="101" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="111.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (202,770,602 samples, 0.02%)</title><rect x="72.8" y="1477" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="75.84" y="1487.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (149,200,336 samples, 0.02%)</title><rect x="530.6" y="1573" width="0.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="533.62" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (190,246,903 samples, 0.02%)</title><rect x="471.0" y="37" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="474.02" y="47.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (2,733,578,125 samples, 0.30%)</title><rect x="668.6" y="1525" width="3.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="671.57" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="677" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="687.5" ></text>
</g>
<g >
<title>Glob::isIgnored (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1589" width="3.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="380.61" y="1599.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,413,279,191 samples, 0.16%)</title><rect x="1059.8" y="1525" width="1.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1062.77" y="1535.5" ></text>
</g>
<g >
<title>file_remove_privs (198,956,586 samples, 0.02%)</title><rect x="733.1" y="1317" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="736.09" y="1327.5" ></text>
</g>
<g >
<title>malloc (105,133,344 samples, 0.01%)</title><rect x="242.3" y="469" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="245.31" y="479.5" ></text>
</g>
<g >
<title>check_heap_object (512,624,114 samples, 0.06%)</title><rect x="367.2" y="1429" width="0.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="370.23" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="805" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="815.5" ></text>
</g>
<g >
<title>[libc.so.6] (403,915,640 samples, 0.04%)</title><rect x="275.3" y="789" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="278.28" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (320,102,341 samples, 0.04%)</title><rect x="205.4" y="181" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="208.40" y="191.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,793,290,194 samples, 0.20%)</title><rect x="586.9" y="1573" width="2.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="589.88" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1557" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="1567.5" >st..</text>
</g>
<g >
<title>NaClUserToSysStackAddr (238,786,747 samples, 0.03%)</title><rect x="605.4" y="1605" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="608.42" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="469" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="479.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (187,202,770 samples, 0.02%)</title><rect x="835.8" y="1605" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="838.83" y="1615.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (146,261,267 samples, 0.02%)</title><rect x="852.8" y="821" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="855.82" y="831.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (705,753,781 samples, 0.08%)</title><rect x="529.5" y="1557" width="0.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="532.51" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="517" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="527.5" ></text>
</g>
<g >
<title>operator new (1,013,348,428 samples, 0.11%)</title><rect x="232.8" y="437" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="235.81" y="447.5" ></text>
</g>
<g >
<title>rcu_core_si (1,269,286,924 samples, 0.14%)</title><rect x="1083.6" y="1413" width="1.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1086.56" y="1423.5" ></text>
</g>
<g >
<title>ext4_release_io_end (231,825,718 samples, 0.03%)</title><rect x="83.0" y="1525" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="86.03" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="293" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="303.5" >st..</text>
</g>
<g >
<title>nohz_run_idle_balance (101,606,729 samples, 0.01%)</title><rect x="103.0" y="1557" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="105.97" y="1567.5" ></text>
</g>
<g >
<title>__fdget_raw (171,074,751 samples, 0.02%)</title><rect x="1174.7" y="1573" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1177.70" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1557" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (247,512,165 samples, 0.03%)</title><rect x="147.5" y="1509" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="150.45" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (196,898,722 samples, 0.02%)</title><rect x="376.3" y="133" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="379.30" y="143.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (379,935,361 samples, 0.04%)</title><rect x="1128.1" y="1525" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1131.08" y="1535.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (149,200,336 samples, 0.02%)</title><rect x="530.6" y="1621" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="533.62" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (706,332,964 samples, 0.08%)</title><rect x="219.6" y="293" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="222.59" y="303.5" ></text>
</g>
<g >
<title>futex_wake (984,285,116 samples, 0.11%)</title><rect x="74.0" y="1541" width="1.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="77.01" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="773" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (327,907,228 samples, 0.04%)</title><rect x="423.6" y="165" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="426.59" y="175.5" ></text>
</g>
<g >
<title>sock_free_inode (276,918,157 samples, 0.03%)</title><rect x="1084.4" y="1349" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1087.37" y="1359.5" ></text>
</g>
<g >
<title>dput (530,384,133 samples, 0.06%)</title><rect x="1179.6" y="1493" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1182.55" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock (349,764,531 samples, 0.04%)</title><rect x="1124.3" y="1525" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1127.35" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="725" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="735.5" ></text>
</g>
<g >
<title>ip_local_out (77,612,723 samples, 0.01%)</title><rect x="1066.7" y="1413" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1069.74" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="245" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="255.5" ></text>
</g>
<g >
<title>show_mountinfo (166,366,399 samples, 0.02%)</title><rect x="528.0" y="1509" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="531.02" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="725" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,605,504,738 samples, 6.24%)</title><rect x="197.4" y="805" width="73.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="200.42" y="815.5" >std::__d..</text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (1,180,189,501 samples, 0.13%)</title><rect x="738.8" y="1173" width="1.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="741.79" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1349" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1359.5" ></text>
</g>
<g >
<title>ext4_getattr (332,665,045 samples, 0.04%)</title><rect x="352.7" y="1365" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="355.66" y="1375.5" ></text>
</g>
<g >
<title>dequeue_task (1,240,647,812 samples, 0.14%)</title><rect x="489.5" y="1381" width="1.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="492.55" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="949" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="959.5" ></text>
</g>
<g >
<title>operator new (91,352,507 samples, 0.01%)</title><rect x="270.4" y="741" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="273.41" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="165" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_accept (2,715,479,354 samples, 0.30%)</title><rect x="578.0" y="1589" width="3.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="580.96" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1461" width="11.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="845.66" y="1471.5" ></text>
</g>
<g >
<title>vfs_write (118,215,981 samples, 0.01%)</title><rect x="529.2" y="1557" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="532.20" y="1567.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (454,497,629 samples, 0.05%)</title><rect x="742.4" y="1141" width="0.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="745.41" y="1151.5" ></text>
</g>
<g >
<title>security_inode_getattr (389,276,149 samples, 0.04%)</title><rect x="352.0" y="1397" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="355.02" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1173" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1183.5" ></text>
</g>
<g >
<title>lru_gen_del_folio.constprop.0 (1,965,597,805 samples, 0.22%)</title><rect x="844.5" y="1205" width="2.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="847.55" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1381" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1391.5" >st..</text>
</g>
<g >
<title>__schedule (1,091,310,416 samples, 0.12%)</title><rect x="75.8" y="1525" width="1.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="78.76" y="1535.5" ></text>
</g>
<g >
<title>evict (467,542,756 samples, 0.05%)</title><rect x="79.6" y="1413" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="82.56" y="1423.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (82,930,619 samples, 0.01%)</title><rect x="1173.6" y="1445" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1176.58" y="1455.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (192,085,965 samples, 0.02%)</title><rect x="503.2" y="1573" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="506.17" y="1583.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (105,928,631 samples, 0.01%)</title><rect x="106.9" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="109.92" y="1583.5" ></text>
</g>
<g >
<title>irq_exit_rcu (220,188,864 samples, 0.02%)</title><rect x="531.1" y="1461" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="534.07" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1573" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="261" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="271.5" ></text>
</g>
<g >
<title>operator new (1,014,443,072 samples, 0.11%)</title><rect x="268.3" y="757" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="271.31" y="767.5" ></text>
</g>
<g >
<title>sched_clock_cpu (132,973,265 samples, 0.01%)</title><rect x="1121.7" y="1493" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1124.65" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="709" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="719.5" ></text>
</g>
<g >
<title>intel_idle (732,220,221 samples, 0.08%)</title><rect x="1131.3" y="1429" width="1.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1134.33" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="853" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="863.5" >std..</text>
</g>
<g >
<title>Watcher::isIgnored (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1573" width="3.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="173.40" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62,073,330,546 samples, 6.84%)</title><rect x="196.9" y="853" width="80.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="199.86" y="863.5" >std::__de..</text>
</g>
<g >
<title>__raw_spin_lock_irqsave (407,708,058 samples, 0.04%)</title><rect x="366.3" y="1445" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="369.35" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="821" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="831.5" ></text>
</g>
<g >
<title>putname (174,568,588 samples, 0.02%)</title><rect x="344.0" y="1461" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="347.04" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="197" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="207.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (131,581,346 samples, 0.01%)</title><rect x="68.0" y="1445" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="71.04" y="1455.5" ></text>
</g>
<g >
<title>__schedule (619,476,399 samples, 0.07%)</title><rect x="135.1" y="1509" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="138.12" y="1519.5" ></text>
</g>
<g >
<title>alloc_pages (106,265,014 samples, 0.01%)</title><rect x="787.1" y="1349" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="790.14" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="197" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="341" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="351.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1317" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1327.5" ></text>
</g>
<g >
<title>futex_wait (171,486,089 samples, 0.02%)</title><rect x="1135.6" y="1557" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1138.59" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_accept (1,091,076,760 samples, 0.12%)</title><rect x="525.2" y="1589" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="528.20" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1493" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="373" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="501" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1205" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1215.5" ></text>
</g>
<g >
<title>irq_exit_rcu (337,999,950 samples, 0.04%)</title><rect x="591.2" y="1461" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="594.16" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="725" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="735.5" ></text>
</g>
<g >
<title>start_secondary (8,211,752,952 samples, 0.90%)</title><rect x="590.4" y="1605" width="10.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="593.44" y="1615.5" ></text>
</g>
<g >
<title>operator new (176,500,819 samples, 0.02%)</title><rect x="340.1" y="1381" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="343.13" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_select (167,234,687 samples, 0.02%)</title><rect x="143.9" y="1541" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="146.86" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="245" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="255.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (111,938,906 samples, 0.01%)</title><rect x="786.7" y="1445" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="789.69" y="1455.5" ></text>
</g>
<g >
<title>pick_next_task (232,028,184 samples, 0.03%)</title><rect x="528.6" y="1525" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="531.58" y="1535.5" ></text>
</g>
<g >
<title>__do_sys_clone (222,500,485 samples, 0.02%)</title><rect x="168.6" y="1413" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="171.55" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="645" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="655.5" ></text>
</g>
<g >
<title>NaClLog (479,410,500 samples, 0.05%)</title><rect x="778.3" y="1557" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="781.33" y="1567.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (85,672,832 samples, 0.01%)</title><rect x="100.1" y="1429" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="103.07" y="1439.5" ></text>
</g>
<g >
<title>enqueue_task_fair (2,469,244,201 samples, 0.27%)</title><rect x="1116.6" y="1477" width="3.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1119.64" y="1487.5" ></text>
</g>
<g >
<title>start_secondary (5,847,676,904 samples, 0.64%)</title><rect x="1181.4" y="1605" width="7.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1184.38" y="1615.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (408,590,907 samples, 0.05%)</title><rect x="1179.7" y="1461" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1182.70" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,166,412,572 samples, 0.13%)</title><rect x="837.2" y="1605" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="840.18" y="1615.5" ></text>
</g>
<g >
<title>_raw_spin_lock (83,300,487 samples, 0.01%)</title><rect x="103.6" y="1525" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="106.58" y="1535.5" ></text>
</g>
<g >
<title>do_writepages (573,167,647 samples, 0.06%)</title><rect x="83.3" y="1445" width="0.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="86.33" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (414,893,955 samples, 0.05%)</title><rect x="331.6" y="1301" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="334.55" y="1311.5" ></text>
</g>
<g >
<title>vfs_write (14,220,329,235 samples, 1.57%)</title><rect x="726.4" y="1349" width="18.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="729.36" y="1359.5" ></text>
</g>
<g >
<title>__fget_light (162,482,118 samples, 0.02%)</title><rect x="134.6" y="1557" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="137.62" y="1567.5" ></text>
</g>
<g >
<title>__fget_light (112,030,901 samples, 0.01%)</title><rect x="1174.7" y="1557" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1177.70" y="1567.5" ></text>
</g>
<g >
<title>__slab_free (138,866,140 samples, 0.02%)</title><rect x="1078.5" y="1445" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1081.49" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,482,016,630 samples, 0.93%)</title><rect x="342.3" y="1541" width="11.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="345.35" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,327,770,312 samples, 11.60%)</title><rect x="189.8" y="1349" width="136.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="192.78" y="1359.5" >std::__detail::_E..</text>
</g>
<g >
<title>x86_64_start_reservations (273,228,048 samples, 0.03%)</title><rect x="534.5" y="1589" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="537.51" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="837" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="847.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (80,866,791 samples, 0.01%)</title><rect x="138.2" y="1525" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="141.16" y="1535.5" ></text>
</g>
<g >
<title>update_cfs_group (79,679,287 samples, 0.01%)</title><rect x="1119.6" y="1461" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1122.61" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1365" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1375.5" ></text>
</g>
<g >
<title>malloc (634,113,317 samples, 0.07%)</title><rect x="212.9" y="229" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="215.86" y="239.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,805,609,152 samples, 0.20%)</title><rect x="530.9" y="1557" width="2.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="533.94" y="1567.5" ></text>
</g>
<g >
<title>clock_gettime (11,542,323,545 samples, 1.27%)</title><rect x="746.3" y="1525" width="15.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="749.27" y="1535.5" ></text>
</g>
<g >
<title>__wake_up (197,779,017 samples, 0.02%)</title><rect x="741.0" y="1109" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="743.96" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="469" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,621,599,165 samples, 3.59%)</title><rect x="200.6" y="549" width="42.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="203.58" y="559.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="533" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (210,756,339 samples, 0.02%)</title><rect x="147.5" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="150.47" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,265,830,354 samples, 0.14%)</title><rect x="1131.1" y="1461" width="1.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1134.14" y="1471.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (167,126,678 samples, 0.02%)</title><rect x="739.9" y="1157" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="742.92" y="1167.5" ></text>
</g>
<g >
<title>setlocale (138,538,026 samples, 0.02%)</title><rect x="106.7" y="1557" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="109.74" y="1567.5" ></text>
</g>
<g >
<title>call_function_single_prep_ipi (282,262,296 samples, 0.03%)</title><rect x="731.8" y="1109" width="0.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="734.84" y="1119.5" ></text>
</g>
<g >
<title>__x64_sys_accept (3,004,935,824 samples, 0.33%)</title><rect x="66.7" y="1573" width="4.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="69.75" y="1583.5" ></text>
</g>
<g >
<title>malloc (225,732,645 samples, 0.02%)</title><rect x="472.1" y="69" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="475.09" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="277" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="287.5" ></text>
</g>
<g >
<title>ip_finish_output (77,565,045 samples, 0.01%)</title><rect x="529.0" y="1381" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="532.03" y="1391.5" ></text>
</g>
<g >
<title>__sys_sendto (332,451,603 samples, 0.04%)</title><rect x="787.1" y="1445" width="0.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="790.08" y="1455.5" ></text>
</g>
<g >
<title>rcu_core (342,001,531 samples, 0.04%)</title><rect x="85.0" y="1397" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="88.03" y="1407.5" ></text>
</g>
<g >
<title>rb_erase (112,802,626 samples, 0.01%)</title><rect x="1125.5" y="1493" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1128.52" y="1503.5" ></text>
</g>
<g >
<title>fput (96,591,893 samples, 0.01%)</title><rect x="1045.0" y="1557" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1047.97" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (103,004,829 samples, 0.01%)</title><rect x="855.4" y="1589" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="858.44" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock (134,680,598 samples, 0.01%)</title><rect x="1056.9" y="1525" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1059.87" y="1535.5" ></text>
</g>
<g >
<title>strncpy_from_user (519,071,556 samples, 0.06%)</title><rect x="343.3" y="1429" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="346.26" y="1439.5" ></text>
</g>
<g >
<title>__filemap_add_folio (1,541,553,064 samples, 0.17%)</title><rect x="734.7" y="1173" width="2.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="737.68" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="837" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="847.5" ></text>
</g>
<g >
<title>wake_up_q (458,076,498 samples, 0.05%)</title><rect x="584.9" y="1541" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="587.85" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (178,194,828 samples, 0.02%)</title><rect x="342.1" y="1541" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="345.12" y="1551.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (196,922,330 samples, 0.02%)</title><rect x="742.7" y="1109" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="745.75" y="1119.5" ></text>
</g>
<g >
<title>malloc (1,013,348,428 samples, 0.11%)</title><rect x="232.8" y="421" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="235.81" y="431.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (378,417,829 samples, 0.04%)</title><rect x="726.5" y="1301" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="729.55" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1189" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1199.5" ></text>
</g>
<g >
<title>kmem_cache_free (93,608,272 samples, 0.01%)</title><rect x="79.2" y="1429" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="82.21" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1365" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (109,463,095 samples, 0.01%)</title><rect x="1178.4" y="1589" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1181.39" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1333" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1343.5" ></text>
</g>
<g >
<title>schedule (3,741,676,565 samples, 0.41%)</title><rect x="488.9" y="1413" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="491.93" y="1423.5" ></text>
</g>
<g >
<title>cfree (782,273,400 samples, 0.09%)</title><rect x="267.1" y="757" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="270.14" y="767.5" ></text>
</g>
<g >
<title>neigh_hh_output (77,565,045 samples, 0.01%)</title><rect x="529.0" y="1333" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="532.03" y="1343.5" ></text>
</g>
<g >
<title>menu_select (176,205,066 samples, 0.02%)</title><rect x="1132.8" y="1461" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1135.79" y="1471.5" ></text>
</g>
<g >
<title>NaClSysPread (195,216,180 samples, 0.02%)</title><rect x="786.6" y="1573" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="789.60" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="981" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="991.5" ></text>
</g>
<g >
<title>alloc_empty_file (203,740,566 samples, 0.02%)</title><rect x="525.9" y="1493" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="528.89" y="1503.5" ></text>
</g>
<g >
<title>rcu_core (185,393,407 samples, 0.02%)</title><rect x="531.1" y="1397" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="534.07" y="1407.5" ></text>
</g>
<g >
<title>free_slab (203,522,947 samples, 0.02%)</title><rect x="852.7" y="1029" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="855.75" y="1039.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (622,116,649 samples, 0.07%)</title><rect x="614.4" y="1605" width="0.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="617.36" y="1615.5" ></text>
</g>
<g >
<title>init_file (110,498,989 samples, 0.01%)</title><rect x="525.9" y="1477" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="528.91" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1125" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1135.5" ></text>
</g>
<g >
<title>__do_softirq (418,288,345 samples, 0.05%)</title><rect x="85.0" y="1429" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="88.01" y="1439.5" ></text>
</g>
<g >
<title>malloc (667,833,810 samples, 0.07%)</title><rect x="246.2" y="549" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="249.20" y="559.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (834,694,032 samples, 0.09%)</title><rect x="529.4" y="1573" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="532.44" y="1583.5" ></text>
</g>
<g >
<title>remove_wait_queue (236,310,912 samples, 0.03%)</title><rect x="495.3" y="1445" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="498.33" y="1455.5" ></text>
</g>
<g >
<title>fsnotify_insert_event (2,654,365,625 samples, 0.29%)</title><rect x="729.2" y="1253" width="3.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="732.22" y="1263.5" ></text>
</g>
<g >
<title>do_idle (4,923,433,351 samples, 0.54%)</title><rect x="140.1" y="1573" width="6.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.09" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1061" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1071.5" ></text>
</g>
<g >
<title>__ip_finish_output (77,565,045 samples, 0.01%)</title><rect x="529.0" y="1365" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="532.03" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (717,989,672 samples, 0.08%)</title><rect x="234.4" y="421" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="237.42" y="431.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (357,615,441 samples, 0.04%)</title><rect x="83.4" y="1381" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="86.37" y="1391.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1,068,321,443 samples, 0.12%)</title><rect x="137.9" y="1557" width="1.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="140.89" y="1567.5" ></text>
</g>
<g >
<title>gawk (126,753,828 samples, 0.01%)</title><rect x="107.2" y="1637" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="110.22" y="1647.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (98,738,188 samples, 0.01%)</title><rect x="728.3" y="1221" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="731.33" y="1231.5" ></text>
</g>
<g >
<title>filemap_release_folio (3,028,374,648 samples, 0.33%)</title><rect x="850.4" y="1189" width="3.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="853.41" y="1199.5" ></text>
</g>
<g >
<title>futex_wake (578,578,207 samples, 0.06%)</title><rect x="1176.4" y="1557" width="0.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1179.42" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1173" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="1183.5" >st..</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (155,002,185 samples, 0.02%)</title><rect x="490.8" y="1317" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="493.82" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (1,569,827,059 samples, 0.17%)</title><rect x="1046.8" y="1589" width="2.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1049.84" y="1599.5" ></text>
</g>
<g >
<title>__fdget_pos (116,711,353 samples, 0.01%)</title><rect x="726.2" y="1349" width="0.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="729.21" y="1359.5" ></text>
</g>
<g >
<title>___slab_alloc (254,225,895 samples, 0.03%)</title><rect x="1038.2" y="1461" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1041.23" y="1471.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (461,069,433 samples, 0.05%)</title><rect x="352.5" y="1397" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="355.52" y="1407.5" ></text>
</g>
<g >
<title>process_one_work (193,638,728 samples, 0.02%)</title><rect x="1136.2" y="1557" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1139.25" y="1567.5" ></text>
</g>
<g >
<title>malloc (245,006,902 samples, 0.03%)</title><rect x="173.0" y="165" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="176.02" y="175.5" ></text>
</g>
<g >
<title>proc_reg_read (125,137,069 samples, 0.01%)</title><rect x="502.8" y="1445" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="505.82" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="661" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="671.5" >std..</text>
</g>
<g >
<title>operator new (639,746,426 samples, 0.07%)</title><rect x="337.5" y="1397" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="340.46" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="933" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="645" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="655.5" ></text>
</g>
<g >
<title>ext4_release_io_end (193,638,728 samples, 0.02%)</title><rect x="1136.2" y="1525" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1139.25" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="405" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="415.5" ></text>
</g>
<g >
<title>__do_softirq (85,672,832 samples, 0.01%)</title><rect x="100.1" y="1413" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="103.07" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="789" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="799.5" ></text>
</g>
<g >
<title>wb_writeback (700,532,856 samples, 0.08%)</title><rect x="1080.6" y="1509" width="0.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1083.63" y="1519.5" ></text>
</g>
<g >
<title>reweight_entity (133,313,174 samples, 0.01%)</title><rect x="1052.9" y="1429" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1055.93" y="1439.5" ></text>
</g>
<g >
<title>read (6,148,804,135 samples, 0.68%)</title><rect x="363.3" y="1589" width="8.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="366.26" y="1599.5" ></text>
</g>
<g >
<title>pick_next_task (660,177,804 samples, 0.07%)</title><rect x="76.0" y="1509" width="0.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="79.05" y="1519.5" ></text>
</g>
<g >
<title>ret_from_fork (193,638,728 samples, 0.02%)</title><rect x="1136.2" y="1605" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1139.25" y="1615.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,568,697,853 samples, 0.17%)</title><rect x="1031.2" y="1621" width="2.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1034.23" y="1631.5" ></text>
</g>
<g >
<title>call_rcu (97,260,945 samples, 0.01%)</title><rect x="587.7" y="1493" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="590.72" y="1503.5" ></text>
</g>
<g >
<title>CompareAndSwap (8,943,815,387 samples, 0.99%)</title><rect x="637.7" y="1573" width="11.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="640.74" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="853" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1509" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="1519.5" ></text>
</g>
<g >
<title>alloc_empty_file (527,463,974 samples, 0.06%)</title><rect x="68.7" y="1477" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="71.72" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (238,900,485,042 samples, 26.32%)</title><rect x="169.5" y="1621" width="310.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="172.48" y="1631.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1205" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1215.5" ></text>
</g>
<g >
<title>__x64_sys_write (125,518,591 samples, 0.01%)</title><rect x="1067.0" y="1589" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1069.95" y="1599.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (222,500,485 samples, 0.02%)</title><rect x="168.6" y="1365" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="171.55" y="1375.5" ></text>
</g>
<g >
<title>intel_idle (297,159,809 samples, 0.03%)</title><rect x="601.2" y="1429" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="604.16" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,335,701,846 samples, 0.81%)</title><rect x="705.4" y="1493" width="9.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="708.41" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1285" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1295.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (113,349,380 samples, 0.01%)</title><rect x="1189.6" y="1477" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1192.61" y="1487.5" ></text>
</g>
<g >
<title>__fdget_pos (87,404,406 samples, 0.01%)</title><rect x="364.8" y="1509" width="0.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="367.76" y="1519.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (280,057,200 samples, 0.03%)</title><rect x="488.6" y="1413" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="491.57" y="1423.5" ></text>
</g>
<g >
<title>__schedule (3,574,190,797 samples, 0.39%)</title><rect x="489.1" y="1397" width="4.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="492.07" y="1407.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (145,315,025 samples, 0.02%)</title><rect x="585.3" y="1509" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="588.26" y="1519.5" ></text>
</g>
<g >
<title>__schedule (4,214,397,411 samples, 0.46%)</title><rect x="1123.1" y="1541" width="5.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1126.10" y="1551.5" ></text>
</g>
<g >
<title>command_substitute (112,476,717 samples, 0.01%)</title><rect x="855.0" y="1349" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="857.99" y="1359.5" ></text>
</g>
<g >
<title>update_curr (124,364,625 samples, 0.01%)</title><rect x="137.2" y="1493" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="140.25" y="1503.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (77,612,723 samples, 0.01%)</title><rect x="1066.7" y="1429" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1069.74" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="421" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1461" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,346,754 samples, 0.01%)</title><rect x="376.0" y="101" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="379.03" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,757,933 samples, 0.02%)</title><rect x="213.9" y="229" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="216.89" y="239.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (171,486,089 samples, 0.02%)</title><rect x="1135.6" y="1413" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1138.59" y="1423.5" ></text>
</g>
<g >
<title>__do_softirq (246,522,547 samples, 0.03%)</title><rect x="1136.5" y="1429" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1139.50" y="1439.5" ></text>
</g>
<g >
<title>__dentry_kill (513,905,331 samples, 0.06%)</title><rect x="1179.6" y="1477" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1182.56" y="1487.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (109,472,356 samples, 0.01%)</title><rect x="1042.3" y="1461" width="0.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1045.25" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="501" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="373" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="837" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="847.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (1,230,403,135 samples, 0.14%)</title><rect x="670.5" y="1509" width="1.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="673.46" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="549" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (138,286,303 samples, 0.02%)</title><rect x="498.4" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="501.38" y="1551.5" ></text>
</g>
<g >
<title>ttwu_do_activate (541,801,165 samples, 0.06%)</title><rect x="144.3" y="1509" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="147.32" y="1519.5" ></text>
</g>
<g >
<title>enqueue_task_fair (591,538,614 samples, 0.07%)</title><rect x="597.5" y="1477" width="0.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="600.46" y="1487.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (88,760,209 samples, 0.01%)</title><rect x="77.6" y="1573" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.58" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="309" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1189" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1199.5" ></text>
</g>
<g >
<title>non-virtual thunk to v8::internal::CancelableTask::Run (183,860,756 samples, 0.02%)</title><rect x="502.5" y="1573" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="505.46" y="1583.5" ></text>
</g>
<g >
<title>rcu_core (246,522,547 samples, 0.03%)</title><rect x="1136.5" y="1397" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1139.50" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1141" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1541" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1551.5" >std..</text>
</g>
<g >
<title>__mod_lruvec_page_state (202,001,337 samples, 0.02%)</title><rect x="847.4" y="1205" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="850.43" y="1215.5" ></text>
</g>
<g >
<title>[libc.so.6] (89,139,854 samples, 0.01%)</title><rect x="855.2" y="1525" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="858.15" y="1535.5" ></text>
</g>
<g >
<title>try_to_free_buffers (2,292,914,120 samples, 0.25%)</title><rect x="851.4" y="1141" width="2.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="854.36" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="837" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="847.5" ></text>
</g>
<g >
<title>update_rq_clock (189,578,634 samples, 0.02%)</title><rect x="598.6" y="1509" width="0.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="601.64" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (23,680,582,848 samples, 2.61%)</title><rect x="392.8" y="149" width="30.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="159.5" >st..</text>
</g>
<g >
<title>execute_command (124,500,596 samples, 0.01%)</title><rect x="854.8" y="1445" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="857.83" y="1455.5" ></text>
</g>
<g >
<title>record__write (646,042,735 samples, 0.07%)</title><rect x="503.8" y="1525" width="0.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="506.83" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="469" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (162,555,296 samples, 0.02%)</title><rect x="302.9" y="1077" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="305.93" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="245" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="255.5" ></text>
</g>
<g >
<title>dput (2,448,404,775 samples, 0.27%)</title><rect x="1071.6" y="1493" width="3.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1074.59" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1269" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (250,105,170 samples, 0.03%)</title><rect x="725.6" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="728.62" y="1423.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1,679,095,144 samples, 0.18%)</title><rect x="844.9" y="1157" width="2.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="847.89" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="357" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="367.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (452,052,413 samples, 0.05%)</title><rect x="843.7" y="1173" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="846.66" y="1183.5" ></text>
</g>
<g >
<title>[libc.so.6] (843,349,548 samples, 0.09%)</title><rect x="336.1" y="1381" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="339.14" y="1391.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (435,730,920 samples, 0.05%)</title><rect x="85.0" y="1493" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="87.99" y="1503.5" ></text>
</g>
<g >
<title>copy_process (222,500,485 samples, 0.02%)</title><rect x="168.6" y="1381" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="171.55" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="229" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,504,444,540 samples, 0.61%)</title><rect x="283.6" y="965" width="7.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="286.65" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="821" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="213" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="223.5" >std..</text>
</g>
<g >
<title>__kmem_cache_alloc_node (493,627,227 samples, 0.05%)</title><rect x="728.3" y="1237" width="0.6" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="731.27" y="1247.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (99,705,432 samples, 0.01%)</title><rect x="579.3" y="1461" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="582.27" y="1471.5" ></text>
</g>
<g >
<title>native_sched_clock (125,836,545 samples, 0.01%)</title><rect x="1129.5" y="1477" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1132.51" y="1487.5" ></text>
</g>
<g >
<title>task_work_run (218,743,865 samples, 0.02%)</title><rect x="1136.0" y="1541" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1138.96" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_futex (286,975,567 samples, 0.03%)</title><rect x="1135.6" y="1589" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1138.59" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1461" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="421" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="431.5" ></text>
</g>
<g >
<title>intel_idle (137,573,449 samples, 0.02%)</title><rect x="1189.1" y="1429" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1192.10" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="581" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="591.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (253,879,237 samples, 0.03%)</title><rect x="1073.5" y="1349" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1076.53" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (51,283,144,425 samples, 5.65%)</title><rect x="197.6" y="773" width="66.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="200.60" y="783.5" >std::__..</text>
</g>
<g >
<title>task_work_run (821,967,862 samples, 0.09%)</title><rect x="1179.4" y="1541" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1182.40" y="1551.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (358,653,714 samples, 0.04%)</title><rect x="1189.1" y="1445" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1192.06" y="1455.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (4,687,213,609 samples, 0.52%)</title><rect x="1115.7" y="1525" width="6.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1118.74" y="1535.5" ></text>
</g>
<g >
<title>psi_group_change (216,615,965 samples, 0.02%)</title><rect x="102.1" y="1461" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="105.06" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,365,102 samples, 0.05%)</title><rect x="468.9" y="133" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="471.93" y="143.5" ></text>
</g>
<g >
<title>cpu_startup_entry (649,343,478 samples, 0.07%)</title><rect x="601.1" y="1525" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="604.11" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (73,799,115,544 samples, 8.13%)</title><rect x="194.9" y="981" width="95.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="197.92" y="991.5" >std::__deta..</text>
</g>
<g >
<title>os_xsave (326,785,921 samples, 0.04%)</title><rect x="497.5" y="1525" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="500.54" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="885" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="895.5" ></text>
</g>
<g >
<title>[bash] (236,977,313 samples, 0.03%)</title><rect x="854.8" y="1461" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="857.83" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="757" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="549" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="559.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (231,825,718 samples, 0.03%)</title><rect x="83.0" y="1541" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="86.03" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1029" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1039.5" >std..</text>
</g>
<g >
<title>alloc_file (216,704,224 samples, 0.02%)</title><rect x="525.9" y="1509" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="528.87" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="869" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,320,693,153 samples, 3.45%)</title><rect x="428.2" y="149" width="40.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="159.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1205" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1215.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (100,727,781 samples, 0.01%)</title><rect x="1175.9" y="1493" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1178.87" y="1503.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (105,967,887 samples, 0.01%)</title><rect x="1121.7" y="1461" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1124.69" y="1471.5" ></text>
</g>
<g >
<title>ext4_bio_write_folio (320,095,098 samples, 0.04%)</title><rect x="1080.8" y="1349" width="0.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1083.77" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,058,552,483 samples, 0.12%)</title><rect x="314.2" y="1189" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="317.18" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1509" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1519.5" ></text>
</g>
<g >
<title>llist_reverse_order (151,588,993 samples, 0.02%)</title><rect x="102.8" y="1541" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="105.78" y="1551.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (573,167,647 samples, 0.06%)</title><rect x="83.3" y="1477" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="86.33" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1189" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1199.5" ></text>
</g>
<g >
<title>__check_object_size (595,347,179 samples, 0.07%)</title><rect x="367.2" y="1461" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="370.17" y="1471.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (8,094,466,719 samples, 0.89%)</title><rect x="733.9" y="1269" width="10.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="736.87" y="1279.5" ></text>
</g>
<g >
<title>ovl_copyattr (111,078,766 samples, 0.01%)</title><rect x="733.3" y="1317" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="736.34" y="1327.5" ></text>
</g>
<g >
<title>ttwu_do_activate (261,814,677 samples, 0.03%)</title><rect x="1133.1" y="1445" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1136.10" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (145,474,872 samples, 0.02%)</title><rect x="170.2" y="117" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="173.21" y="127.5" ></text>
</g>
<g >
<title>bprm_execve (192,085,965 samples, 0.02%)</title><rect x="503.2" y="1557" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="506.17" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (230,999,895 samples, 0.03%)</title><rect x="290.2" y="949" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="293.17" y="959.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (129,577,680 samples, 0.01%)</title><rect x="596.4" y="1429" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="599.41" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,809,747,989 samples, 0.20%)</title><rect x="472.4" y="85" width="2.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="475.39" y="95.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (559,602,109 samples, 0.06%)</title><rect x="367.2" y="1445" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="370.17" y="1455.5" ></text>
</g>
<g >
<title>intel_idle (130,707,023 samples, 0.01%)</title><rect x="1136.8" y="1429" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1139.82" y="1439.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (347,804,669 samples, 0.04%)</title><rect x="1133.0" y="1477" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1136.04" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="741" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="751.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (583,480,768 samples, 0.06%)</title><rect x="1080.7" y="1381" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1083.65" y="1391.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (387,172,916 samples, 0.04%)</title><rect x="787.0" y="1557" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="790.01" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="181" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="693" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="165" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1349" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,086,151,348 samples, 0.67%)</title><rect x="256.3" y="709" width="7.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="259.29" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="453" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1237" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1247.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (240,341,201 samples, 0.03%)</title><rect x="836.1" y="1605" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="839.07" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1125" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="613" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1125" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="597" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="933" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="943.5" ></text>
</g>
<g >
<title>worker_thread (193,638,728 samples, 0.02%)</title><rect x="1136.2" y="1573" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1139.25" y="1583.5" ></text>
</g>
<g >
<title>tick_sched_timer (119,436,528 samples, 0.01%)</title><rect x="1083.4" y="1413" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1086.35" y="1423.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (121,984,217 samples, 0.01%)</title><rect x="847.4" y="1189" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="850.43" y="1199.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (243,023,447 samples, 0.03%)</title><rect x="1114.8" y="1509" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1117.83" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1493" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1503.5" ></text>
</g>
<g >
<title>inet_csk_accept (662,994,290 samples, 0.07%)</title><rect x="1035.4" y="1525" width="0.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1038.35" y="1535.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (119,728,050 samples, 0.01%)</title><rect x="1073.3" y="1349" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1076.32" y="1359.5" ></text>
</g>
<g >
<title>tcp_sendmsg (85,394,765 samples, 0.01%)</title><rect x="1067.0" y="1509" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1070.01" y="1519.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (2,910,491,061 samples, 0.32%)</title><rect x="377.6" y="1605" width="3.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="380.56" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="117" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="127.5" ></text>
</g>
<g >
<title>update_load_avg (78,716,322 samples, 0.01%)</title><rect x="135.5" y="1445" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="138.47" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1013" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="1023.5" >std..</text>
</g>
<g >
<title>_IO_file_xsputn (789,349,589 samples, 0.09%)</title><rect x="841.6" y="1621" width="1.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="844.64" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="517" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="527.5" ></text>
</g>
<g >
<title>mpage_submit_folio (500,027,774 samples, 0.06%)</title><rect x="1080.8" y="1365" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1083.76" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (95,645,903 samples, 0.01%)</title><rect x="855.4" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="858.44" y="1567.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (83,483,140 samples, 0.01%)</title><rect x="68.5" y="1429" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="71.53" y="1439.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (117,416,371 samples, 0.01%)</title><rect x="360.9" y="1381" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="363.89" y="1391.5" ></text>
</g>
<g >
<title>folio_alloc (615,135,409 samples, 0.07%)</title><rect x="737.0" y="1173" width="0.8" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="740.04" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (299,780,111 samples, 0.03%)</title><rect x="170.5" y="149" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.48" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="933" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="943.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (324,067,702 samples, 0.04%)</title><rect x="1038.8" y="1461" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1041.75" y="1471.5" ></text>
</g>
<g >
<title>menu_select (212,345,992 samples, 0.02%)</title><rect x="1186.4" y="1525" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1189.36" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="213" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1029" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="805" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="815.5" >std..</text>
</g>
<g >
<title>pick_next_task_fair (169,585,643 samples, 0.02%)</title><rect x="599.6" y="1509" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="602.57" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1013" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1023.5" ></text>
</g>
<g >
<title>wake_up_q (122,794,501 samples, 0.01%)</title><rect x="527.8" y="1541" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="530.83" y="1551.5" ></text>
</g>
<g >
<title>alloc_empty_file (424,511,095 samples, 0.05%)</title><rect x="1173.4" y="1493" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1176.44" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1077" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="357" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="367.5" ></text>
</g>
<g >
<title>update_load_avg (321,771,128 samples, 0.04%)</title><rect x="1126.0" y="1477" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1128.99" y="1487.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (224,620,615 samples, 0.02%)</title><rect x="531.1" y="1477" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="534.07" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="309" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1253" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1263.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1061" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1071.5" >st..</text>
</g>
<g >
<title>__x64_sys_write (118,215,981 samples, 0.01%)</title><rect x="529.2" y="1589" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="532.20" y="1599.5" ></text>
</g>
<g >
<title>pick_next_task_fair (106,776,862 samples, 0.01%)</title><rect x="583.7" y="1477" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="586.73" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="453" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="463.5" ></text>
</g>
<g >
<title>__check_heap_object (148,222,311 samples, 0.02%)</title><rect x="367.7" y="1413" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="370.71" y="1423.5" ></text>
</g>
<g >
<title>aa_sk_perm (84,232,799 samples, 0.01%)</title><rect x="1036.4" y="1509" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1039.36" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="437" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="447.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (344,133,301 samples, 0.04%)</title><rect x="69.4" y="1493" width="0.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="72.42" y="1503.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (8,143,837,640 samples, 0.90%)</title><rect x="733.8" y="1285" width="10.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="736.81" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="565" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="165" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="175.5" >std..</text>
</g>
<g >
<title>v8::internal::OptimizingCompileDispatcher::CompileNext (183,860,756 samples, 0.02%)</title><rect x="502.5" y="1557" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="505.46" y="1567.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineImpl::OptimizeGraph (150,795,084 samples, 0.02%)</title><rect x="502.5" y="1509" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="505.51" y="1519.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (192,085,965 samples, 0.02%)</title><rect x="503.2" y="1541" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="506.17" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1317" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1327.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="229" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="239.5" ></text>
</g>
<g >
<title>fprintf@plt (98,736,142 samples, 0.01%)</title><rect x="745.1" y="1525" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="748.10" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="389" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="399.5" ></text>
</g>
<g >
<title>malloc (263,971,260 samples, 0.03%)</title><rect x="325.8" y="1237" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="328.76" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1285" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="981" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="991.5" ></text>
</g>
<g >
<title>d_instantiate (182,193,049 samples, 0.02%)</title><rect x="580.7" y="1509" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="583.70" y="1519.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Debounce::Debounce (3,312,994,045 samples, 0.36%)</title><rect x="498.2" y="1573" width="4.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="501.16" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1173" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1237" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1109" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1119.5" ></text>
</g>
<g >
<title>__x64_sys_read (125,137,069 samples, 0.01%)</title><rect x="502.8" y="1493" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="505.82" y="1503.5" ></text>
</g>
<g >
<title>schedule (731,582,976 samples, 0.08%)</title><rect x="1175.3" y="1525" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1178.28" y="1535.5" ></text>
</g>
<g >
<title>enqueue_task (261,814,677 samples, 0.03%)</title><rect x="1133.1" y="1429" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1136.10" y="1439.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (77,455,374 samples, 0.01%)</title><rect x="526.4" y="1541" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="529.43" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (343,461,307 samples, 0.04%)</title><rect x="132.9" y="1477" width="0.5" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="135.95" y="1487.5" ></text>
</g>
<g >
<title>cfree (1,115,756,273 samples, 0.12%)</title><rect x="217.1" y="309" width="1.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="220.14" y="319.5" ></text>
</g>
<g >
<title>pick_next_task_fair (255,239,423 samples, 0.03%)</title><rect x="137.1" y="1509" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="140.09" y="1519.5" ></text>
</g>
<g >
<title>sock_alloc_file (420,872,166 samples, 0.05%)</title><rect x="525.9" y="1541" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="528.87" y="1551.5" ></text>
</g>
<g >
<title>ls (674,311,992 samples, 0.07%)</title><rect x="147.1" y="1637" width="0.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="150.10" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,857,206,628 samples, 0.20%)</title><rect x="475.5" y="149" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (116,738,629,236 samples, 12.86%)</title><rect x="188.7" y="1445" width="151.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="191.67" y="1455.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>discard_slab (146,261,267 samples, 0.02%)</title><rect x="852.8" y="917" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="855.82" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1173" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1183.5" ></text>
</g>
<g >
<title>malloc (689,877,290 samples, 0.08%)</title><rect x="293.9" y="997" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="296.93" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_clone (222,500,485 samples, 0.02%)</title><rect x="168.6" y="1429" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="171.55" y="1439.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (103,925,716 samples, 0.01%)</title><rect x="104.7" y="1557" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="107.66" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="901" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="911.5" ></text>
</g>
<g >
<title>start_secondary (5,025,576,701 samples, 0.55%)</title><rect x="140.0" y="1605" width="6.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="143.02" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,461,259 samples, 0.03%)</title><rect x="198.6" y="677" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="201.64" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1045" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1477" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="1487.5" ></text>
</g>
<g >
<title>rw_verify_area (284,133,761 samples, 0.03%)</title><rect x="370.6" y="1493" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="373.65" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1093" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1103.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (317,762,939 samples, 0.04%)</title><rect x="533.3" y="1541" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="536.28" y="1551.5" ></text>
</g>
<g >
<title>do_idle (2,456,945,008 samples, 0.27%)</title><rect x="1131.0" y="1509" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1133.98" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (392,218,292 samples, 0.04%)</title><rect x="246.6" y="533" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="249.56" y="543.5" ></text>
</g>
<g >
<title>[perf-41554.map] (88,708,367 samples, 0.01%)</title><rect x="169.4" y="1621" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="172.37" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="357" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="367.5" ></text>
</g>
<g >
<title>folio_end_writeback (193,638,728 samples, 0.02%)</title><rect x="1136.2" y="1493" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1139.25" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,933,885,441 samples, 0.54%)</title><rect x="271.1" y="837" width="6.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="274.13" y="847.5" ></text>
</g>
<g >
<title>[perf-41203.map] (730,077,794 samples, 0.08%)</title><rect x="168.4" y="1621" width="1.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="171.42" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1285" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1295.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (12,420,881,847 samples, 1.37%)</title><rect x="84.7" y="1557" width="16.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="87.66" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (399,875,146 samples, 0.04%)</title><rect x="171.8" y="165" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="174.82" y="175.5" ></text>
</g>
<g >
<title>DirTree::_find (199,789,058 samples, 0.02%)</title><rect x="175.2" y="1541" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="178.23" y="1551.5" ></text>
</g>
<g >
<title>schedule (753,734,637 samples, 0.08%)</title><rect x="585.6" y="1557" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="588.62" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (328,801,619 samples, 0.04%)</title><rect x="855.6" y="1525" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="858.58" y="1535.5" ></text>
</g>
<g >
<title>malloc (796,119,034 samples, 0.09%)</title><rect x="422.6" y="69" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="425.55" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="213" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (244,741,343 samples, 0.03%)</title><rect x="262.9" y="661" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="265.93" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1397" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="437" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="447.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (111,620,548 samples, 0.01%)</title><rect x="1179.1" y="1525" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1182.13" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="165" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="175.5" ></text>
</g>
<g >
<title>task_work_run (515,969,375 samples, 0.06%)</title><rect x="529.8" y="1541" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="532.76" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (211,297,455 samples, 0.02%)</title><rect x="200.3" y="549" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="203.30" y="559.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (297,315,328 samples, 0.03%)</title><rect x="1070.0" y="1525" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1072.97" y="1535.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (129,577,680 samples, 0.01%)</title><rect x="596.4" y="1461" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="599.41" y="1471.5" ></text>
</g>
<g >
<title>NaClLog (338,796,731 samples, 0.04%)</title><rect x="615.2" y="1605" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="618.17" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="613" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="623.5" ></text>
</g>
<g >
<title>poll_idle (13,480,903,802 samples, 1.48%)</title><rect x="1096.0" y="1493" width="17.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1099.02" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (227,454,682 samples, 0.03%)</title><rect x="333.0" y="1333" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="336.01" y="1343.5" ></text>
</g>
<g >
<title>___slab_alloc (147,790,696 samples, 0.02%)</title><rect x="738.3" y="1109" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="741.29" y="1119.5" ></text>
</g>
<g >
<title>futex_wake (2,827,408,394 samples, 0.31%)</title><rect x="1057.9" y="1557" width="3.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1060.93" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1413" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,862,264,249 samples, 5.60%)</title><rect x="198.1" y="725" width="66.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="201.09" y="735.5" >std::__..</text>
</g>
<g >
<title>__fget_light (143,825,827 samples, 0.02%)</title><rect x="526.7" y="1557" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="529.75" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (328,801,619 samples, 0.04%)</title><rect x="855.6" y="1541" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="858.58" y="1551.5" ></text>
</g>
<g >
<title>i_callback (98,103,090 samples, 0.01%)</title><rect x="591.4" y="1365" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="594.37" y="1375.5" ></text>
</g>
<g >
<title>ovl_getattr (1,254,642,050 samples, 0.14%)</title><rect x="351.5" y="1429" width="1.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="354.49" y="1439.5" ></text>
</g>
<g >
<title>idle_cpu (171,486,089 samples, 0.02%)</title><rect x="1135.6" y="1397" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1138.59" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="789" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="799.5" ></text>
</g>
<g >
<title>security_inode_getattr (202,540,375 samples, 0.02%)</title><rect x="351.8" y="1413" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="354.76" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (337,684,547 samples, 0.04%)</title><rect x="295.4" y="1013" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="298.42" y="1023.5" ></text>
</g>
<g >
<title>pick_next_task_fair (169,559,602 samples, 0.02%)</title><rect x="1054.8" y="1477" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1057.75" y="1487.5" ></text>
</g>
<g >
<title>sched_clock (127,997,052 samples, 0.01%)</title><rect x="1121.7" y="1477" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1124.66" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (107,304,615 samples, 0.01%)</title><rect x="147.1" y="1589" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="150.12" y="1599.5" ></text>
</g>
<g >
<title>operator new (1,152,628,369 samples, 0.13%)</title><rect x="252.6" y="629" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="255.59" y="639.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (9,009,813,057 samples, 0.99%)</title><rect x="842.8" y="1253" width="11.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="845.78" y="1263.5" ></text>
</g>
<g >
<title>i_callback (290,622,814 samples, 0.03%)</title><rect x="1084.4" y="1365" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1087.36" y="1375.5" ></text>
</g>
<g >
<title>cpuacct_charge (102,918,665 samples, 0.01%)</title><rect x="1065.1" y="1477" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1068.11" y="1487.5" ></text>
</g>
<g >
<title>copy_page_to_iter (77,433,917 samples, 0.01%)</title><rect x="786.7" y="1221" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="789.70" y="1231.5" ></text>
</g>
<g >
<title>update_load_avg (331,033,380 samples, 0.04%)</title><rect x="1053.4" y="1445" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1056.35" y="1455.5" ></text>
</g>
<g >
<title>filemap_get_folios_tag (82,353,361 samples, 0.01%)</title><rect x="83.9" y="1381" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="86.89" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1013" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1023.5" ></text>
</g>
<g >
<title>__sys_accept4 (2,983,146,653 samples, 0.33%)</title><rect x="66.7" y="1557" width="3.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="69.75" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_lock (81,070,766 samples, 0.01%)</title><rect x="1188.1" y="1525" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1191.12" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,320,693,153 samples, 3.45%)</title><rect x="428.2" y="117" width="40.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="127.5" >std..</text>
</g>
<g >
<title>__fsnotify_inode_delete (140,362,377 samples, 0.02%)</title><rect x="1073.3" y="1381" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1076.30" y="1391.5" ></text>
</g>
<g >
<title>__put_user_8 (124,904,897 samples, 0.01%)</title><rect x="1069.8" y="1525" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1072.79" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1237" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1045" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,077,986,529 samples, 4.19%)</title><rect x="199.6" y="629" width="49.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="202.56" y="639.5" >std:..</text>
</g>
<g >
<title>kmem_cache_alloc (78,193,473 samples, 0.01%)</title><rect x="526.0" y="1477" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="529.05" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (211,503,226 samples, 0.02%)</title><rect x="390.9" y="101" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="111.5" ></text>
</g>
<g >
<title>[sel_ldr] (487,162,603 samples, 0.05%)</title><rect x="609.7" y="1605" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="612.75" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1557" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1567.5" ></text>
</g>
<g >
<title>kmem_cache_free (160,638,305 samples, 0.02%)</title><rect x="344.1" y="1445" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="347.05" y="1455.5" ></text>
</g>
<g >
<title>ct_kernel_enter.constprop.0 (121,371,998 samples, 0.01%)</title><rect x="1085.7" y="1477" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1088.70" y="1487.5" ></text>
</g>
<g >
<title>runc:[1:CHILD] (23,100,553,880 samples, 2.54%)</title><rect x="504.9" y="1637" width="30.0" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="507.87" y="1647.5" >ru..</text>
</g>
<g >
<title>NaClSysWrite (479,224,432 samples, 0.05%)</title><rect x="786.9" y="1573" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="789.89" y="1583.5" ></text>
</g>
<g >
<title>schedule_idle (702,716,380 samples, 0.08%)</title><rect x="1187.8" y="1557" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1190.78" y="1567.5" ></text>
</g>
<g >
<title>psi_task_switch (119,133,240 samples, 0.01%)</title><rect x="1133.8" y="1461" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1136.77" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1397" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="1407.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1109" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1119.5" ></text>
</g>
<g >
<title>schedule (4,406,409,452 samples, 0.49%)</title><rect x="1050.9" y="1525" width="5.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1053.93" y="1535.5" ></text>
</g>
<g >
<title>enqueue_task (220,291,007 samples, 0.02%)</title><rect x="533.3" y="1493" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="536.34" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="533" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="543.5" ></text>
</g>
<g >
<title>update_process_times (91,642,541 samples, 0.01%)</title><rect x="1083.4" y="1381" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1086.39" y="1391.5" ></text>
</g>
<g >
<title>neigh_hh_output (77,612,723 samples, 0.01%)</title><rect x="1066.7" y="1333" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1069.74" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="197" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (222,680,253 samples, 0.02%)</title><rect x="427.9" y="133" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="430.93" y="143.5" ></text>
</g>
<g >
<title>find_lock_entries (508,999,462 samples, 0.06%)</title><rect x="848.3" y="1237" width="0.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="851.34" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1333" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1589" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="1599.5" >std..</text>
</g>
<g >
<title>futex_wait (944,260,192 samples, 0.10%)</title><rect x="1175.2" y="1557" width="1.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1178.17" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (119,013,617 samples, 0.01%)</title><rect x="283.5" y="885" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="286.49" y="895.5" ></text>
</g>
<g >
<title>__d_alloc (308,501,279 samples, 0.03%)</title><rect x="69.4" y="1477" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="72.42" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (78,439,947,761 samples, 8.64%)</title><rect x="194.1" y="1045" width="102.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="197.14" y="1055.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="629" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (138,538,026 samples, 0.02%)</title><rect x="106.7" y="1525" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="109.74" y="1535.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (109,780,724 samples, 0.01%)</title><rect x="1067.2" y="1589" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1070.24" y="1599.5" ></text>
</g>
<g >
<title>do_idle (246,522,547 samples, 0.03%)</title><rect x="1136.5" y="1573" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1139.50" y="1583.5" ></text>
</g>
<g >
<title>psi_group_change (99,261,720 samples, 0.01%)</title><rect x="146.0" y="1509" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="148.96" y="1519.5" ></text>
</g>
<g >
<title>pick_next_task (149,896,472 samples, 0.02%)</title><rect x="500.6" y="1397" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="503.62" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (471,600,775 samples, 0.05%)</title><rect x="282.9" y="885" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="285.88" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="469" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="479.5" ></text>
</g>
<g >
<title>operator new (246,810,638 samples, 0.03%)</title><rect x="276.9" y="805" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="279.89" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (816,543,103 samples, 0.09%)</title><rect x="1177.3" y="1589" width="1.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1180.33" y="1599.5" ></text>
</g>
<g >
<title>cfree (3,324,634,860 samples, 0.37%)</title><rect x="153.6" y="1605" width="4.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="156.55" y="1615.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (78,786,697,437 samples, 8.68%)</title><rect x="659.2" y="1557" width="102.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="662.19" y="1567.5" >NaClSysClock..</text>
</g>
<g >
<title>operator new (195,317,886 samples, 0.02%)</title><rect x="263.7" y="677" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="266.70" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="341" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="351.5" ></text>
</g>
<g >
<title>__fput (3,485,536,045 samples, 0.38%)</title><rect x="1071.0" y="1509" width="4.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1074.03" y="1519.5" ></text>
</g>
<g >
<title>operator new (3,602,415,889 samples, 0.40%)</title><rect x="458.2" y="69" width="4.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="461.22" y="79.5" ></text>
</g>
<g >
<title>mktemp (95,374,652 samples, 0.01%)</title><rect x="148.0" y="1637" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="150.97" y="1647.5" ></text>
</g>
<g >
<title>mod_lruvec_page_state (83,891,657 samples, 0.01%)</title><rect x="1080.4" y="1461" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1083.45" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1061" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1071.5" ></text>
</g>
<g >
<title>security_file_alloc (111,966,080 samples, 0.01%)</title><rect x="69.0" y="1445" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="71.96" y="1455.5" ></text>
</g>
<g >
<title>cpu_startup_entry (16,089,601,539 samples, 1.77%)</title><rect x="84.1" y="1589" width="20.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="87.14" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (357,496,241 samples, 0.04%)</title><rect x="577.3" y="1621" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="580.28" y="1631.5" ></text>
</g>
<g >
<title>inode_init_always (626,568,589 samples, 0.07%)</title><rect x="1037.1" y="1493" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1040.13" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1525" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1535.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (106,002,104 samples, 0.01%)</title><rect x="504.5" y="1237" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="507.46" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="981" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,793,027 samples, 0.04%)</title><rect x="213.7" y="245" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="216.68" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="997" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1007.5" ></text>
</g>
<g >
<title>pick_next_entity (121,732,642 samples, 0.01%)</title><rect x="1125.4" y="1493" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1128.36" y="1503.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (115,802,292 samples, 0.01%)</title><rect x="1185.9" y="1477" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1188.91" y="1487.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (269,416,007 samples, 0.03%)</title><rect x="1066.0" y="1477" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1068.97" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1221" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1231.5" ></text>
</g>
<g >
<title>i_callback (246,865,513 samples, 0.03%)</title><rect x="82.4" y="1477" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="85.45" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1093" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1103.5" >st..</text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (221,278,114 samples, 0.02%)</title><rect x="836.4" y="1605" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="839.39" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,448,136,011 samples, 1.59%)</title><rect x="203.1" y="341" width="18.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="206.08" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock (147,229,344 samples, 0.02%)</title><rect x="739.0" y="1157" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="741.97" y="1167.5" ></text>
</g>
<g >
<title>__x64_sys_read (109,921,441 samples, 0.01%)</title><rect x="75.3" y="1573" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="78.35" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,006,293,141 samples, 0.11%)</title><rect x="262.0" y="677" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="265.04" y="687.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (1,503,099,777 samples, 0.17%)</title><rect x="82.1" y="1621" width="2.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="85.12" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,457,138,603 samples, 0.60%)</title><rect x="214.7" y="325" width="7.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="217.70" y="335.5" ></text>
</g>
<g >
<title>cfree (815,113,133 samples, 0.09%)</title><rect x="245.0" y="565" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="248.04" y="575.5" ></text>
</g>
<g >
<title>put_cpu_partial (146,261,267 samples, 0.02%)</title><rect x="852.8" y="949" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="855.82" y="959.5" ></text>
</g>
<g >
<title>allocate_slab (84,222,782 samples, 0.01%)</title><rect x="133.0" y="1429" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="135.96" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="661" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,171,010,310 samples, 0.57%)</title><rect x="364.5" y="1557" width="6.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="367.49" y="1567.5" ></text>
</g>
<g >
<title>futex_unqueue (96,921,446 samples, 0.01%)</title><rect x="499.5" y="1445" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="502.51" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="917" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="927.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (124,553,336 samples, 0.01%)</title><rect x="526.4" y="1557" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="529.43" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1365" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1375.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (165,622,993 samples, 0.02%)</title><rect x="488.2" y="1397" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="491.25" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,498,635,442 samples, 0.17%)</title><rect x="424.0" y="53" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="213" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="223.5" ></text>
</g>
<g >
<title>folio_create_empty_buffers (380,443,959 samples, 0.04%)</title><rect x="738.3" y="1173" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="741.29" y="1183.5" ></text>
</g>
<g >
<title>__x64_sys_read (182,194,971 samples, 0.02%)</title><rect x="528.0" y="1589" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="531.01" y="1599.5" ></text>
</g>
<g >
<title>process_one_work (1,161,311,997 samples, 0.13%)</title><rect x="1080.0" y="1557" width="1.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1083.03" y="1567.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (108,287,144 samples, 0.01%)</title><rect x="786.7" y="1285" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="789.69" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="277" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="287.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (228,162,082 samples, 0.03%)</title><rect x="1079.6" y="1477" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1082.61" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="181" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="191.5" ></text>
</g>
<g >
<title>psi_group_change (706,467,909 samples, 0.08%)</title><rect x="1127.0" y="1509" width="0.9" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1129.96" y="1519.5" ></text>
</g>
<g >
<title>alloc_file (459,538,768 samples, 0.05%)</title><rect x="1173.4" y="1509" width="0.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1176.40" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (466,556,290 samples, 0.05%)</title><rect x="302.3" y="1077" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="305.33" y="1087.5" ></text>
</g>
<g >
<title>do_sched_yield (801,188,686 samples, 0.09%)</title><rect x="1177.4" y="1573" width="1.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1180.35" y="1583.5" ></text>
</g>
<g >
<title>run_ksoftirqd (388,085,077 samples, 0.04%)</title><rect x="1180.9" y="1557" width="0.5" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1183.85" y="1567.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (80,315,934 samples, 0.01%)</title><rect x="589.3" y="1605" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="592.29" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (222,680,253 samples, 0.02%)</title><rect x="427.9" y="149" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="430.93" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1157" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1167.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait (92,085,987 samples, 0.01%)</title><rect x="503.5" y="1605" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="506.52" y="1615.5" ></text>
</g>
<g >
<title>allocate_slab (224,216,563 samples, 0.02%)</title><rect x="1038.3" y="1429" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1041.26" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="597" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="607.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (122,551,334 samples, 0.01%)</title><rect x="761.6" y="1573" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="764.61" y="1583.5" ></text>
</g>
<g >
<title>unmap_vmas (87,505,302 samples, 0.01%)</title><rect x="503.3" y="1397" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="506.30" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,129,817,626 samples, 0.23%)</title><rect x="392.8" y="69" width="2.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="79.5" ></text>
</g>
<g >
<title>__fget_light (294,757,716 samples, 0.03%)</title><rect x="1034.3" y="1541" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1037.30" y="1551.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (92,485,859 samples, 0.01%)</title><rect x="587.7" y="1477" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="590.72" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="261" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="271.5" ></text>
</g>
<g >
<title>kfree (1,076,043,513 samples, 0.12%)</title><rect x="368.5" y="1445" width="1.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="371.53" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1413" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1423.5" >std..</text>
</g>
<g >
<title>switch_fpu_return (115,723,340 samples, 0.01%)</title><rect x="1180.5" y="1557" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1183.48" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (162,134,298 samples, 0.02%)</title><rect x="184.1" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="187.11" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (138,747,053 samples, 0.02%)</title><rect x="463.7" y="69" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="466.65" y="79.5" ></text>
</g>
<g >
<title>__filemap_get_folio (219,734,539 samples, 0.02%)</title><rect x="504.1" y="1269" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="507.11" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1541" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1573" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1583.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="421" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1397" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1407.5" ></text>
</g>
<g >
<title>operator new (164,904,363 samples, 0.02%)</title><rect x="255.5" y="613" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="258.47" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_lock (161,901,930 samples, 0.02%)</title><rect x="1044.5" y="1477" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1047.50" y="1487.5" ></text>
</g>
<g >
<title>ovl_override_creds (79,630,886 samples, 0.01%)</title><rect x="351.7" y="1413" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="354.65" y="1423.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (433,877,341 samples, 0.05%)</title><rect x="588.1" y="1461" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="591.09" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1157" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1167.5" ></text>
</g>
<g >
<title>__do_softirq (337,999,950 samples, 0.04%)</title><rect x="591.2" y="1429" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="594.16" y="1439.5" ></text>
</g>
<g >
<title>destroy_inode (209,062,795 samples, 0.02%)</title><rect x="588.2" y="1413" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="591.25" y="1423.5" ></text>
</g>
<g >
<title>select_idle_sibling (148,034,105 samples, 0.02%)</title><rect x="731.4" y="1125" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="734.39" y="1135.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (160,676,316 samples, 0.02%)</title><rect x="133.8" y="1477" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="136.84" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1349" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1359.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1477" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1487.5" ></text>
</g>
<g >
<title>psi_task_switch (138,365,766 samples, 0.02%)</title><rect x="500.9" y="1397" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="503.86" y="1407.5" ></text>
</g>
<g >
<title>__do_sys_newstat (8,298,480,249 samples, 0.91%)</title><rect x="342.4" y="1493" width="10.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="345.39" y="1503.5" ></text>
</g>
<g >
<title>operator new (389,544,034 samples, 0.04%)</title><rect x="300.7" y="1077" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="303.70" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="741" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="751.5" >st..</text>
</g>
<g >
<title>irq_exit_rcu (325,623,088 samples, 0.04%)</title><rect x="1181.9" y="1461" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1184.87" y="1471.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (220,552,374 samples, 0.02%)</title><rect x="501.7" y="1493" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="504.70" y="1503.5" ></text>
</g>
<g >
<title>security_d_instantiate (303,161,656 samples, 0.03%)</title><rect x="1044.4" y="1493" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1047.40" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="885" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="895.5" >std..</text>
</g>
<g >
<title>do_futex (3,085,901,483 samples, 0.34%)</title><rect x="71.3" y="1557" width="4.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="74.30" y="1567.5" ></text>
</g>
<g >
<title>operator new (263,971,260 samples, 0.03%)</title><rect x="325.8" y="1253" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="328.76" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (238,488,573 samples, 0.03%)</title><rect x="147.5" y="1477" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="150.45" y="1487.5" ></text>
</g>
<g >
<title>rw_verify_area (148,079,488 samples, 0.02%)</title><rect x="744.4" y="1285" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="747.39" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1301" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1311.5" ></text>
</g>
<g >
<title>__libc_start_main (454,944,525 samples, 0.05%)</title><rect x="854.7" y="1605" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="857.68" y="1615.5" ></text>
</g>
<g >
<title>ext4_inode_csum (143,558,836 samples, 0.02%)</title><rect x="742.2" y="1077" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="745.16" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1301" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,636,231 samples, 0.04%)</title><rect x="282.3" y="869" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="285.34" y="879.5" ></text>
</g>
<g >
<title>prepare_task_switch (87,912,346 samples, 0.01%)</title><rect x="492.2" y="1381" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="495.21" y="1391.5" ></text>
</g>
<g >
<title>try_to_wake_up (119,466,225 samples, 0.01%)</title><rect x="527.8" y="1525" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="530.84" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (353,546,403 samples, 0.04%)</title><rect x="429.8" y="37" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="432.79" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,380,776,592 samples, 2.24%)</title><rect x="202.1" y="421" width="26.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="205.12" y="431.5" >s..</text>
</g>
<g >
<title>entry_SYSCALL_64 (92,085,987 samples, 0.01%)</title><rect x="503.5" y="1573" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="506.52" y="1583.5" ></text>
</g>
<g >
<title>update_load_avg (192,571,910 samples, 0.02%)</title><rect x="598.0" y="1445" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="600.97" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="213" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="223.5" >st..</text>
</g>
<g >
<title>__xa_set_mark (98,423,680 samples, 0.01%)</title><rect x="743.4" y="1125" width="0.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="746.41" y="1135.5" ></text>
</g>
<g >
<title>enqueue_task (905,649,475 samples, 0.10%)</title><rect x="597.4" y="1493" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="600.36" y="1503.5" ></text>
</g>
<g >
<title>malloc (83,027,204 samples, 0.01%)</title><rect x="311.1" y="1109" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="314.07" y="1119.5" ></text>
</g>
<g >
<title>cfree (1,106,134,688 samples, 0.12%)</title><rect x="279.8" y="885" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="282.81" y="895.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (614,475,759 samples, 0.07%)</title><rect x="589.6" y="1573" width="0.8" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="592.63" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="501" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="485" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="495.5" ></text>
</g>
<g >
<title>pick_next_task_fair (150,648,894 samples, 0.02%)</title><rect x="103.7" y="1509" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="106.70" y="1519.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (342,652,674 samples, 0.04%)</title><rect x="78.3" y="1525" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="81.25" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="629" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="639.5" ></text>
</g>
<g >
<title>fprintf (151,032,743 samples, 0.02%)</title><rect x="841.1" y="1605" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="844.14" y="1615.5" ></text>
</g>
<g >
<title>__ip_finish_output (77,612,723 samples, 0.01%)</title><rect x="1066.7" y="1365" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1069.74" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="501" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1109" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1333" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1343.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,490,161,092 samples, 0.16%)</title><rect x="469.5" y="53" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (370,257,367 samples, 0.04%)</title><rect x="170.4" y="181" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,350,532,118 samples, 0.59%)</title><rect x="333.5" y="1413" width="6.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="336.45" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (67,540,398,189 samples, 7.44%)</title><rect x="195.9" y="933" width="87.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="198.86" y="943.5" >std::__det..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="517" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="527.5" ></text>
</g>
<g >
<title>__switch_to_asm (421,328,452 samples, 0.05%)</title><rect x="1030.1" y="1621" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1033.14" y="1631.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (105,928,631 samples, 0.01%)</title><rect x="106.9" y="1589" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="109.92" y="1599.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (296,014,551 samples, 0.03%)</title><rect x="740.8" y="1157" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="743.84" y="1167.5" ></text>
</g>
<g >
<title>__update_load_avg_se (93,047,871 samples, 0.01%)</title><rect x="72.7" y="1413" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="75.69" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="229" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,897,442,152 samples, 3.62%)</title><rect x="200.2" y="565" width="42.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="203.25" y="575.5" >std:..</text>
</g>
<g >
<title>__do_softirq (1,373,508,772 samples, 0.15%)</title><rect x="1083.5" y="1429" width="1.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1086.54" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="405" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="415.5" ></text>
</g>
<g >
<title>__fput (1,018,852,946 samples, 0.11%)</title><rect x="587.6" y="1509" width="1.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="590.60" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="949" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="959.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (97,481,534 samples, 0.01%)</title><rect x="1029.6" y="1621" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1032.56" y="1631.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,377,190,358 samples, 0.15%)</title><rect x="1083.5" y="1445" width="1.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1086.54" y="1455.5" ></text>
</g>
<g >
<title>poll_idle (1,688,081,366 samples, 0.19%)</title><rect x="594.4" y="1493" width="2.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="597.39" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="405" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="415.5" >std..</text>
</g>
<g >
<title>set_default_locale (89,139,854 samples, 0.01%)</title><rect x="855.2" y="1557" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="858.15" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1061" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1071.5" ></text>
</g>
<g >
<title>__alloc_pages (615,135,409 samples, 0.07%)</title><rect x="737.0" y="1141" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="740.04" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="821" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="831.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (107,749,455 samples, 0.01%)</title><rect x="579.1" y="1461" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="582.13" y="1471.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (772,877,752 samples, 0.09%)</title><rect x="133.4" y="1525" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="136.41" y="1535.5" ></text>
</g>
<g >
<title>alloc_inode (306,400,692 samples, 0.03%)</title><rect x="525.5" y="1509" width="0.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="528.48" y="1519.5" ></text>
</g>
<g >
<title>do_idle (923,849,425 samples, 0.10%)</title><rect x="105.1" y="1509" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="108.09" y="1519.5" ></text>
</g>
<g >
<title>do_filp_open (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1397" width="11.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="845.66" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="245" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1413" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="773" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (98,185,891,858 samples, 10.82%)</title><rect x="191.3" y="1269" width="127.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="194.26" y="1279.5" >std::__detail::_..</text>
</g>
<g >
<title>skb_page_frag_refill (119,497,280 samples, 0.01%)</title><rect x="787.1" y="1365" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="790.13" y="1375.5" ></text>
</g>
<g >
<title>clear_inode (88,362,126 samples, 0.01%)</title><rect x="1073.1" y="1413" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1076.10" y="1423.5" ></text>
</g>
<g >
<title>worker (225,741,136 samples, 0.02%)</title><rect x="502.8" y="1589" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="505.78" y="1599.5" ></text>
</g>
<g >
<title>rcu_core_si (140,573,440 samples, 0.02%)</title><rect x="530.6" y="1525" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="533.63" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (592,027,528 samples, 0.07%)</title><rect x="289.3" y="933" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="292.31" y="943.5" ></text>
</g>
<g >
<title>futex_wait_queue (1,429,293,288 samples, 0.16%)</title><rect x="582.3" y="1541" width="1.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="585.35" y="1551.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (246,522,547 samples, 0.03%)</title><rect x="1136.5" y="1445" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1139.50" y="1455.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (183,800,225 samples, 0.02%)</title><rect x="1043.4" y="1461" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1046.43" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,010,116,457 samples, 0.33%)</title><rect x="424.0" y="165" width="3.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="965" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="975.5" >std..</text>
</g>
<g >
<title>std::_Hashtable&lt;Watcher*, Watcher*, std::allocator&lt;Watcher*&gt;, std::__detail::_Identity, std::equal_to&lt;Watcher*&gt;, std::hash&lt;Watcher*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (80,179,710 samples, 0.01%)</title><rect x="354.4" y="1557" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="357.40" y="1567.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1,733,087,393 samples, 0.19%)</title><rect x="655.8" y="1573" width="2.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="658.81" y="1583.5" ></text>
</g>
<g >
<title>security_inode_alloc (90,906,587 samples, 0.01%)</title><rect x="1172.8" y="1477" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1175.76" y="1487.5" ></text>
</g>
<g >
<title>schedule (966,159,326 samples, 0.11%)</title><rect x="499.9" y="1429" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="502.92" y="1439.5" ></text>
</g>
<g >
<title>__slab_free (97,600,955 samples, 0.01%)</title><rect x="1084.4" y="1317" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1087.45" y="1327.5" ></text>
</g>
<g >
<title>psi_task_switch (81,929,476 samples, 0.01%)</title><rect x="1188.5" y="1525" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1191.51" y="1535.5" ></text>
</g>
<g >
<title>arch_call_rest_init (345,509,644 samples, 0.04%)</title><rect x="146.6" y="1557" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="149.55" y="1567.5" ></text>
</g>
<g >
<title>task_work_run (761,863,199 samples, 0.08%)</title><rect x="138.3" y="1541" width="1.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="141.29" y="1551.5" ></text>
</g>
<g >
<title>futex_wait_queue (1,535,884,584 samples, 0.17%)</title><rect x="71.7" y="1525" width="2.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="74.67" y="1535.5" ></text>
</g>
<g >
<title>init_file (289,919,026 samples, 0.03%)</title><rect x="68.7" y="1461" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="71.73" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="613" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="623.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (2,858,430,289 samples, 0.31%)</title><rect x="1077.8" y="1621" width="3.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1080.83" y="1631.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::pread_syscall (137,730,973 samples, 0.02%)</title><rect x="786.7" y="1525" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="789.67" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (222,680,253 samples, 0.02%)</title><rect x="427.9" y="101" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="430.93" y="111.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (148,108,963 samples, 0.02%)</title><rect x="658.1" y="1573" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="661.06" y="1583.5" ></text>
</g>
<g >
<title>dput (486,264,810 samples, 0.05%)</title><rect x="138.4" y="1493" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="141.41" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (726,846,218 samples, 0.08%)</title><rect x="503.7" y="1621" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="506.74" y="1631.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (487,162,603 samples, 0.05%)</title><rect x="609.7" y="1589" width="0.7" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="612.75" y="1599.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (377,229,570 samples, 0.04%)</title><rect x="1136.5" y="1621" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1139.50" y="1631.5" ></text>
</g>
<g >
<title>enqueue_entity (1,730,283,748 samples, 0.19%)</title><rect x="1117.3" y="1461" width="2.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1120.25" y="1471.5" ></text>
</g>
<g >
<title>schedule_idle (310,232,449 samples, 0.03%)</title><rect x="533.9" y="1557" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="536.86" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (111,187,119,313 samples, 12.25%)</title><rect x="188.9" y="1413" width="144.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="191.93" y="1423.5" >std::__detail::_Ex..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,498,635,442 samples, 0.17%)</title><rect x="424.0" y="133" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="143.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (417,992,558 samples, 0.05%)</title><rect x="1133.0" y="1493" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1136.04" y="1503.5" ></text>
</g>
<g >
<title>all (907,843,099,138 samples, 100%)</title><rect x="10.0" y="1653" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1663.5" ></text>
</g>
<g >
<title>place_entity (197,510,348 samples, 0.02%)</title><rect x="1117.9" y="1445" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1120.95" y="1455.5" ></text>
</g>
<g >
<title>file_free_rcu (95,942,725 samples, 0.01%)</title><rect x="139.5" y="1477" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="142.53" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="309" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="319.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (90,569,914 samples, 0.01%)</title><rect x="725.4" y="1477" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="728.45" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="485" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="495.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (2,873,101,338 samples, 0.32%)</title><rect x="768.5" y="1541" width="3.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="771.46" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="981" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="991.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,136,514,570 samples, 0.57%)</title><rect x="326.7" y="1349" width="6.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="329.68" y="1359.5" ></text>
</g>
<g >
<title>schedule (171,486,089 samples, 0.02%)</title><rect x="1135.6" y="1525" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1138.59" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1173" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1183.5" ></text>
</g>
<g >
<title>dequeue_task (1,391,321,342 samples, 0.15%)</title><rect x="1052.2" y="1493" width="1.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1055.21" y="1503.5" ></text>
</g>
<g >
<title>do_iter_read (108,287,144 samples, 0.01%)</title><rect x="786.7" y="1301" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="789.69" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_enter (673,909,078 samples, 0.07%)</title><rect x="105.1" y="1461" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="108.10" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,169,532,602 samples, 0.13%)</title><rect x="261.9" y="693" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="264.87" y="703.5" ></text>
</g>
<g >
<title>llist_add_batch (79,854,100 samples, 0.01%)</title><rect x="1061.4" y="1493" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1064.43" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62,787,876,772 samples, 6.92%)</title><rect x="196.1" y="901" width="81.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="199.13" y="911.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1221" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1231.5" >std..</text>
</g>
<g >
<title>ext4_get_inode_loc (196,922,330 samples, 0.02%)</title><rect x="742.7" y="1125" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="745.75" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (138,100,317 samples, 0.02%)</title><rect x="423.6" y="101" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="426.59" y="111.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,001,319,799 samples, 0.11%)</title><rect x="496.1" y="1477" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="499.14" y="1487.5" ></text>
</g>
<g >
<title>operator new (120,566,828 samples, 0.01%)</title><rect x="256.1" y="613" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="259.12" y="623.5" ></text>
</g>
<g >
<title>[ls] (92,165,649 samples, 0.01%)</title><rect x="147.3" y="1541" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="150.28" y="1551.5" ></text>
</g>
<g >
<title>ext4_do_writepages (700,532,856 samples, 0.08%)</title><rect x="1080.6" y="1413" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1083.63" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1445" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1455.5" ></text>
</g>
<g >
<title>[anon] (4,061,367,087 samples, 0.45%)</title><rect x="605.2" y="1621" width="5.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="608.16" y="1631.5" ></text>
</g>
<g >
<title>make_vfsuid (132,581,213 samples, 0.01%)</title><rect x="346.3" y="1349" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="349.26" y="1359.5" ></text>
</g>
<g >
<title>folio_unlock (91,240,466 samples, 0.01%)</title><rect x="842.7" y="1253" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="845.66" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (148,279,704 samples, 0.02%)</title><rect x="201.3" y="469" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="204.35" y="479.5" ></text>
</g>
<g >
<title>ovl_setattr (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1317" width="11.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="845.66" y="1327.5" ></text>
</g>
<g >
<title>inet_csk_accept (133,699,156 samples, 0.01%)</title><rect x="67.0" y="1509" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="70.02" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (135,904,478 samples, 0.01%)</title><rect x="1174.1" y="1477" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1177.06" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (355,227,938 samples, 0.04%)</title><rect x="310.7" y="1141" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="313.72" y="1151.5" ></text>
</g>
<g >
<title>[libc.so.6] (78,151,520 samples, 0.01%)</title><rect x="218.5" y="277" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="221.49" y="287.5" ></text>
</g>
<g >
<title>50-motd-news (73,713,102,198 samples, 8.12%)</title><rect x="10.5" y="1637" width="95.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="13.48" y="1647.5" >50-motd-news</text>
</g>
<g >
<title>[bash] (112,476,717 samples, 0.01%)</title><rect x="855.0" y="1413" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="857.99" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock (161,056,521 samples, 0.02%)</title><rect x="1063.4" y="1525" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1066.43" y="1535.5" ></text>
</g>
<g >
<title>folio_add_lru (271,521,659 samples, 0.03%)</title><rect x="736.7" y="1173" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="739.68" y="1183.5" ></text>
</g>
<g >
<title>inet_sendmsg (292,678,066 samples, 0.03%)</title><rect x="1066.6" y="1557" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1069.57" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_select (224,195,516 samples, 0.02%)</title><rect x="1186.4" y="1541" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1189.36" y="1551.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (3,948,783,926 samples, 0.43%)</title><rect x="667.6" y="1541" width="5.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="670.62" y="1551.5" ></text>
</g>
<g >
<title>evict (349,324,493 samples, 0.04%)</title><rect x="588.2" y="1429" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="591.20" y="1439.5" ></text>
</g>
<g >
<title>__slab_free (392,149,545 samples, 0.04%)</title><rect x="369.1" y="1413" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="372.10" y="1423.5" ></text>
</g>
<g >
<title>enqueue_entity (487,690,478 samples, 0.05%)</title><rect x="597.6" y="1461" width="0.6" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="600.58" y="1471.5" ></text>
</g>
<g >
<title>malloc (309,172,789 samples, 0.03%)</title><rect x="341.0" y="1477" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="343.99" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,544,072,326 samples, 6.23%)</title><rect x="197.5" y="789" width="73.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="200.50" y="799.5" >std::__d..</text>
</g>
<g >
<title>rcu_cblist_dequeue (192,187,748 samples, 0.02%)</title><rect x="1085.0" y="1365" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1087.96" y="1375.5" ></text>
</g>
<g >
<title>rest_init (130,707,023 samples, 0.01%)</title><rect x="1136.8" y="1541" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1139.82" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1477" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1487.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (220,552,374 samples, 0.02%)</title><rect x="501.7" y="1477" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="504.70" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,010,066,624 samples, 6.28%)</title><rect x="197.0" y="837" width="74.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="200.03" y="847.5" >std::__d..</text>
</g>
<g >
<title>[libc.so.6] (174,932,079 samples, 0.02%)</title><rect x="363.7" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="366.71" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="517" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (258,007,956 samples, 0.03%)</title><rect x="478.8" y="101" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="481.84" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="405" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="415.5" ></text>
</g>
<g >
<title>___slab_alloc (98,680,130 samples, 0.01%)</title><rect x="1037.8" y="1445" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1040.76" y="1455.5" ></text>
</g>
<g >
<title>inet_sendmsg (109,463,095 samples, 0.01%)</title><rect x="1178.4" y="1557" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1181.39" y="1567.5" ></text>
</g>
<g >
<title>dequeue_entity (191,583,401 samples, 0.02%)</title><rect x="1175.6" y="1461" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1178.57" y="1471.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1,526,041,042 samples, 0.17%)</title><rect x="587.0" y="1557" width="2.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="590.03" y="1567.5" ></text>
</g>
<g >
<title>schedule_idle (79,091,130 samples, 0.01%)</title><rect x="106.2" y="1493" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="109.17" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="661" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="565" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="575.5" ></text>
</g>
<g >
<title>[[vdso]] (3,897,661,597 samples, 0.43%)</title><rect x="662.5" y="1509" width="5.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="665.47" y="1519.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (94,012,363 samples, 0.01%)</title><rect x="100.6" y="1493" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="103.59" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="389" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages (106,265,014 samples, 0.01%)</title><rect x="787.1" y="1333" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="790.14" y="1343.5" ></text>
</g>
<g >
<title>xas_load (98,423,680 samples, 0.01%)</title><rect x="743.4" y="1109" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="746.41" y="1119.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (222,500,485 samples, 0.02%)</title><rect x="168.6" y="1509" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="171.55" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="981" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="991.5" ></text>
</g>
<g >
<title>[libc.so.6] (97,244,609 samples, 0.01%)</title><rect x="106.8" y="1461" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="109.77" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="933" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="943.5" >std..</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run (13,968,670,010 samples, 1.54%)</title><rect x="480.0" y="1573" width="18.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="483.00" y="1583.5" ></text>
</g>
<g >
<title>security_d_instantiate (118,234,794 samples, 0.01%)</title><rect x="580.8" y="1493" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="583.78" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (677,857,048 samples, 0.07%)</title><rect x="371.3" y="165" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="175.5" ></text>
</g>
<g >
<title>alloc_empty_file (1,795,986,095 samples, 0.20%)</title><rect x="1040.6" y="1493" width="2.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1043.62" y="1503.5" ></text>
</g>
<g >
<title>enqueue_entity (193,330,306 samples, 0.02%)</title><rect x="144.5" y="1461" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="147.49" y="1471.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (17,281,664,055 samples, 1.90%)</title><rect x="480.0" y="1589" width="22.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="483.00" y="1599.5" >e..</text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (218,743,865 samples, 0.02%)</title><rect x="1136.0" y="1381" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1138.96" y="1391.5" ></text>
</g>
<g >
<title>operator new (145,474,872 samples, 0.02%)</title><rect x="170.2" y="101" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="173.21" y="111.5" ></text>
</g>
<g >
<title>inet_sendmsg (129,828,543 samples, 0.01%)</title><rect x="529.0" y="1557" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="532.02" y="1567.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (93,287,116 samples, 0.01%)</title><rect x="847.4" y="1173" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="850.43" y="1183.5" ></text>
</g>
<g >
<title>[libc.so.6] (454,944,525 samples, 0.05%)</title><rect x="854.7" y="1589" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="857.68" y="1599.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (108,938,098 samples, 0.01%)</title><rect x="134.4" y="1557" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="137.43" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (548,526,290 samples, 0.06%)</title><rect x="316.1" y="1173" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="319.14" y="1183.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (115,802,292 samples, 0.01%)</title><rect x="1185.9" y="1461" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1188.91" y="1471.5" ></text>
</g>
<g >
<title>main (454,944,525 samples, 0.05%)</title><rect x="854.7" y="1573" width="0.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="857.68" y="1583.5" ></text>
</g>
<g >
<title>__fget_light (795,264,159 samples, 0.09%)</title><rect x="485.7" y="1429" width="1.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="488.69" y="1439.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (189,321,611 samples, 0.02%)</title><rect x="1129.4" y="1541" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1132.43" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="229" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="239.5" >st..</text>
</g>
<g >
<title>vfs_write (80,143,252 samples, 0.01%)</title><rect x="1178.5" y="1557" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1181.54" y="1567.5" ></text>
</g>
<g >
<title>operator new (245,006,902 samples, 0.03%)</title><rect x="173.0" y="181" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="176.02" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1061" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1071.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (793,523,311 samples, 0.09%)</title><rect x="301.2" y="1077" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.21" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1221" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (110,966,629,662 samples, 12.22%)</title><rect x="189.2" y="1397" width="144.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="192.17" y="1407.5" >std::__detail::_Ex..</text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (724,371,865 samples, 0.08%)</title><rect x="388.6" y="1605" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="391.62" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="725" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="735.5" >st..</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;InotifySubscription&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::equal_range (290,203,674 samples, 0.03%)</title><rect x="354.6" y="1573" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="357.62" y="1583.5" ></text>
</g>
<g >
<title>inet_accept (148,495,633 samples, 0.02%)</title><rect x="132.5" y="1541" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="135.51" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="277" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="261" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="271.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (345,509,644 samples, 0.04%)</title><rect x="146.6" y="1589" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="149.55" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (84,426,807 samples, 0.01%)</title><rect x="232.5" y="405" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="235.54" y="415.5" ></text>
</g>
<g >
<title>cpuidle_enter (367,370,301 samples, 0.04%)</title><rect x="1189.1" y="1461" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1192.06" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (418,112,613 samples, 0.05%)</title><rect x="339.8" y="1397" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="342.81" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="213" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="223.5" ></text>
</g>
<g >
<title>NaClXlateSysRet (302,216,719 samples, 0.03%)</title><rect x="773.0" y="1541" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="776.03" y="1551.5" ></text>
</g>
<g >
<title>update_load_avg (89,911,082 samples, 0.01%)</title><rect x="144.6" y="1445" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="147.63" y="1455.5" ></text>
</g>
<g >
<title>__cmd_record (723,203,700 samples, 0.08%)</title><rect x="503.7" y="1605" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="506.74" y="1615.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (385,578,118 samples, 0.04%)</title><rect x="1181.8" y="1493" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1184.80" y="1503.5" ></text>
</g>
<g >
<title>__switch_to (259,188,336 samples, 0.03%)</title><rect x="81.6" y="1621" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="84.56" y="1631.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (111,442,313 samples, 0.01%)</title><rect x="79.7" y="1317" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="82.71" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,680,582,848 samples, 2.61%)</title><rect x="392.8" y="133" width="30.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="143.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="837" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="847.5" ></text>
</g>
<g >
<title>pick_next_task (467,428,698 samples, 0.05%)</title><rect x="585.8" y="1525" width="0.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="588.81" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,420,488,915 samples, 4.89%)</title><rect x="198.6" y="693" width="57.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="201.55" y="703.5" >std::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1029" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1039.5" ></text>
</g>
<g >
<title>create_empty_buffers (427,593,209 samples, 0.05%)</title><rect x="738.2" y="1189" width="0.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="741.23" y="1199.5" ></text>
</g>
<g >
<title>__destroy_inode (241,952,421 samples, 0.03%)</title><rect x="79.6" y="1381" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="82.65" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="309" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="319.5" ></text>
</g>
<g >
<title>NaClHighResolutionTimerEnabled (144,767,836 samples, 0.02%)</title><rect x="765.4" y="1573" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="768.44" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1045" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1109" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="1119.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (318,072,483 samples, 0.04%)</title><rect x="475.1" y="133" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.08" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="949" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="959.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="581" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="591.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="629" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="421" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="431.5" ></text>
</g>
<g >
<title>intel_idle (2,811,558,386 samples, 0.31%)</title><rect x="85.6" y="1493" width="3.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="88.62" y="1503.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (501,536,486 samples, 0.06%)</title><rect x="1129.7" y="1557" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1132.68" y="1567.5" ></text>
</g>
<g >
<title>ep_poll (110,964,025 samples, 0.01%)</title><rect x="1046.7" y="1557" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1049.68" y="1567.5" ></text>
</g>
<g >
<title>ip_local_out (77,565,045 samples, 0.01%)</title><rect x="529.0" y="1413" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="532.03" y="1423.5" ></text>
</g>
<g >
<title>switch_fpu_return (142,011,857 samples, 0.02%)</title><rect x="589.0" y="1557" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="592.03" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="453" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (318,072,483 samples, 0.04%)</title><rect x="475.1" y="117" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.08" y="127.5" ></text>
</g>
<g >
<title>ovl_override_creds (788,869,896 samples, 0.09%)</title><rect x="347.5" y="1365" width="1.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="350.55" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33,744,262,409 samples, 3.72%)</title><rect x="1033.3" y="1621" width="43.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1036.27" y="1631.5" >entr..</text>
</g>
<g >
<title>ttwu_queue_wakelist (910,000,239 samples, 0.10%)</title><rect x="361.7" y="1397" width="1.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="364.74" y="1407.5" ></text>
</g>
<g >
<title>get_random_u32 (98,420,893 samples, 0.01%)</title><rect x="738.4" y="1029" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="741.36" y="1039.5" ></text>
</g>
<g >
<title>write (644,834,462 samples, 0.07%)</title><rect x="503.8" y="1493" width="0.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="506.83" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (5,862,121,465 samples, 0.65%)</title><rect x="834.0" y="1621" width="7.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="837.02" y="1631.5" ></text>
</g>
<g >
<title>vfs_statx (6,836,033,736 samples, 0.75%)</title><rect x="344.3" y="1461" width="8.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="347.30" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,930,584,689 samples, 1.64%)</title><rect x="725.6" y="1461" width="19.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="728.56" y="1471.5" ></text>
</g>
<g >
<title>put_prev_task_fair (94,001,987 samples, 0.01%)</title><rect x="1055.1" y="1477" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1058.12" y="1487.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (854,882,736 samples, 0.09%)</title><rect x="529.4" y="1589" width="1.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="532.42" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (111,938,906 samples, 0.01%)</title><rect x="786.7" y="1413" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="789.69" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="789" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="799.5" >std..</text>
</g>
<g >
<title>[libc.so.6] (154,614,015 samples, 0.02%)</title><rect x="498.4" y="1557" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="501.36" y="1567.5" ></text>
</g>
<g >
<title>irq_exit_rcu (107,845,135 samples, 0.01%)</title><rect x="1185.9" y="1445" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1188.92" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (77,278,195 samples, 0.01%)</title><rect x="277.6" y="885" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="280.64" y="895.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (250,922,124 samples, 0.03%)</title><rect x="1037.6" y="1461" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1040.58" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="549" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="559.5" ></text>
</g>
<g >
<title>cpuidle_enter (130,707,023 samples, 0.01%)</title><rect x="1136.8" y="1461" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1139.82" y="1471.5" ></text>
</g>
<g >
<title>file_free_rcu (639,675,922 samples, 0.07%)</title><rect x="1078.0" y="1477" width="0.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1080.97" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,622,134,653 samples, 4.14%)</title><rect x="200.1" y="597" width="48.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="203.05" y="607.5" >std:..</text>
</g>
<g >
<title>operator new (258,007,956 samples, 0.03%)</title><rect x="478.8" y="133" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="481.84" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1093" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1103.5" ></text>
</g>
<g >
<title>native_sched_clock (91,400,857 samples, 0.01%)</title><rect x="77.1" y="1445" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="80.06" y="1455.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (207,805,961 samples, 0.02%)</title><rect x="658.9" y="1557" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="661.86" y="1567.5" ></text>
</g>
<g >
<title>__get_user_8 (232,149,048 samples, 0.03%)</title><rect x="1070.0" y="1509" width="0.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1073.01" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1285" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="1295.5" ></text>
</g>
<g >
<title>record__mmap_read_all (655,399,428 samples, 0.07%)</title><rect x="503.8" y="1589" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="506.83" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (81,037,110 samples, 0.01%)</title><rect x="325.3" y="1253" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="328.33" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1109" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1119.5" ></text>
</g>
<g >
<title>llist_reverse_order (118,447,998 samples, 0.01%)</title><rect x="1187.6" y="1541" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1190.60" y="1551.5" ></text>
</g>
<g >
<title>_raw_spin_lock (134,078,135 samples, 0.01%)</title><rect x="1135.4" y="1541" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1138.41" y="1551.5" ></text>
</g>
<g >
<title>security_file_permission (148,079,488 samples, 0.02%)</title><rect x="744.4" y="1269" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="747.39" y="1279.5" ></text>
</g>
<g >
<title>run_ksoftirqd (342,602,192 samples, 0.04%)</title><rect x="139.5" y="1557" width="0.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="142.49" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="389" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (459,925,155 samples, 0.05%)</title><rect x="242.0" y="501" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="245.00" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (74,114,701,314 samples, 8.16%)</title><rect x="194.5" y="1013" width="96.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="197.51" y="1023.5" >std::__deta..</text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (237,230,126 samples, 0.03%)</title><rect x="168.5" y="1573" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="171.53" y="1583.5" ></text>
</g>
<g >
<title>apparmor_file_permission (148,079,488 samples, 0.02%)</title><rect x="744.4" y="1253" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="747.39" y="1263.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (82,751,535 samples, 0.01%)</title><rect x="344.9" y="1365" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="347.89" y="1375.5" ></text>
</g>
<g >
<title>poll_idle (8,365,017,423 samples, 0.92%)</title><rect x="89.3" y="1493" width="10.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="92.30" y="1503.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (173,727,279 samples, 0.02%)</title><rect x="737.5" y="1093" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="740.55" y="1103.5" ></text>
</g>
<g >
<title>clear_page_erms (98,603,663 samples, 0.01%)</title><rect x="787.1" y="1301" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="790.14" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1221" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="1231.5" ></text>
</g>
<g >
<title>lind_pread (137,730,973 samples, 0.02%)</title><rect x="786.7" y="1557" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="789.67" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (96,556,084 samples, 0.01%)</title><rect x="146.6" y="1445" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="149.57" y="1455.5" ></text>
</g>
<g >
<title>cfree (897,575,882 samples, 0.10%)</title><rect x="231.5" y="437" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="234.48" y="447.5" ></text>
</g>
<g >
<title>arch_call_rest_init (727,754,243 samples, 0.08%)</title><rect x="1189.0" y="1557" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1191.98" y="1567.5" ></text>
</g>
<g >
<title>dequeue_entity (240,035,379 samples, 0.03%)</title><rect x="135.3" y="1461" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="138.26" y="1471.5" ></text>
</g>
<g >
<title>NaClStraceSetOutputFile (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1541" width="11.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="845.66" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (119,331,951 samples, 0.01%)</title><rect x="475.8" y="53" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.83" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1541" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1551.5" ></text>
</g>
<g >
<title>do_accept (1,498,813,943 samples, 0.17%)</title><rect x="132.5" y="1557" width="1.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="135.48" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (81,087,089 samples, 0.01%)</title><rect x="318.7" y="1237" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="321.74" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1573" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,785,368,092 samples, 2.95%)</title><rect x="201.6" y="469" width="34.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="204.59" y="479.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="997" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1007.5" ></text>
</g>
<g >
<title>psi_task_switch (755,845,305 samples, 0.08%)</title><rect x="1055.4" y="1493" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1058.38" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1157" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1525" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1535.5" ></text>
</g>
<g >
<title>inode_init_always (150,315,573 samples, 0.02%)</title><rect x="67.5" y="1477" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="70.55" y="1487.5" ></text>
</g>
<g >
<title>generic_write_end (147,062,565 samples, 0.02%)</title><rect x="504.5" y="1269" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="507.45" y="1279.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (93,287,116 samples, 0.01%)</title><rect x="847.4" y="1157" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="850.43" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="725" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="735.5" ></text>
</g>
<g >
<title>kthread (149,200,336 samples, 0.02%)</title><rect x="530.6" y="1589" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="533.62" y="1599.5" ></text>
</g>
<g >
<title>__wake_up_common (2,388,123,786 samples, 0.26%)</title><rect x="729.4" y="1205" width="3.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="732.41" y="1215.5" ></text>
</g>
<g >
<title>mod_objcg_state (85,002,707 samples, 0.01%)</title><rect x="1072.3" y="1429" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1075.28" y="1439.5" ></text>
</g>
<g >
<title>malloc (826,927,572 samples, 0.09%)</title><rect x="375.1" y="133" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="378.06" y="143.5" ></text>
</g>
<g >
<title>cfree (103,651,860 samples, 0.01%)</title><rect x="353.5" y="1557" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="356.45" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="549" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="559.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="645" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="309" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1013" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="1023.5" ></text>
</g>
<g >
<title>malloc (135,350,955 samples, 0.01%)</title><rect x="340.1" y="1365" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="343.13" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (415,468,291 samples, 0.05%)</title><rect x="65.8" y="1605" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="68.83" y="1615.5" ></text>
</g>
<g >
<title>pick_next_task_fair (402,923,741 samples, 0.04%)</title><rect x="585.8" y="1509" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="588.84" y="1519.5" ></text>
</g>
<g >
<title>__clone (204,523,681 samples, 0.02%)</title><rect x="1170.5" y="1621" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1173.54" y="1631.5" ></text>
</g>
<g >
<title>__dentry_kill (271,182,752 samples, 0.03%)</title><rect x="529.9" y="1477" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="532.90" y="1487.5" ></text>
</g>
<g >
<title>alloc_file (519,510,972 samples, 0.06%)</title><rect x="133.5" y="1509" width="0.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="136.46" y="1519.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (4,976,004,413 samples, 0.55%)</title><rect x="356.6" y="1573" width="6.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="359.63" y="1583.5" ></text>
</g>
<g >
<title>allocate_slab (98,420,893 samples, 0.01%)</title><rect x="738.4" y="1077" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="741.36" y="1087.5" ></text>
</g>
<g >
<title>__get_random_u32_below (98,420,893 samples, 0.01%)</title><rect x="738.4" y="1045" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="741.36" y="1055.5" ></text>
</g>
<g >
<title>ovl_permission (2,219,845,839 samples, 0.24%)</title><rect x="345.7" y="1381" width="2.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="348.69" y="1391.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,341,162,862 samples, 0.15%)</title><rect x="1178.9" y="1573" width="1.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1181.89" y="1583.5" ></text>
</g>
<g >
<title>prepare_task_switch (118,675,808 samples, 0.01%)</title><rect x="1126.6" y="1525" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1129.55" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_lock (85,084,145 samples, 0.01%)</title><rect x="581.2" y="1541" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="584.20" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="965" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="975.5" ></text>
</g>
<g >
<title>check_preempt_curr (106,606,682 samples, 0.01%)</title><rect x="1116.3" y="1493" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1119.31" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_accept (1,688,063,391 samples, 0.19%)</title><rect x="132.4" y="1589" width="2.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="135.39" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (418,698,850 samples, 0.05%)</title><rect x="219.0" y="277" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="221.96" y="287.5" ></text>
</g>
<g >
<title>xas_load (148,008,264 samples, 0.02%)</title><rect x="737.9" y="1173" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="740.90" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1189" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1199.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="485" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="495.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (96,126,393 samples, 0.01%)</title><rect x="69.2" y="1445" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="72.23" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="293" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="303.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (1,606,449,707 samples, 0.18%)</title><rect x="1038.0" y="1477" width="2.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1041.03" y="1487.5" ></text>
</g>
<g >
<title>psi_group_change (87,983,676 samples, 0.01%)</title><rect x="500.9" y="1381" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="503.87" y="1391.5" ></text>
</g>
<g >
<title>__schedule (559,173,345 samples, 0.06%)</title><rect x="136.9" y="1541" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="139.87" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="133" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="143.5" ></text>
</g>
<g >
<title>llist_reverse_order (199,347,534 samples, 0.02%)</title><rect x="145.1" y="1541" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="148.15" y="1551.5" ></text>
</g>
<g >
<title>rcu_core (639,230,652 samples, 0.07%)</title><rect x="82.2" y="1509" width="0.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="85.15" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="325" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,806,911 samples, 0.02%)</title><rect x="423.8" y="85" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="426.77" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="853" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="863.5" ></text>
</g>
<g >
<title>ip_output (77,565,045 samples, 0.01%)</title><rect x="529.0" y="1397" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="532.03" y="1407.5" ></text>
</g>
<g >
<title>file_free_rcu (520,252,228 samples, 0.06%)</title><rect x="1083.7" y="1365" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1086.68" y="1375.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (89,127,571 samples, 0.01%)</title><rect x="104.9" y="1525" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="107.88" y="1535.5" ></text>
</g>
<g >
<title>____fput (718,227,517 samples, 0.08%)</title><rect x="138.3" y="1525" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="141.29" y="1535.5" ></text>
</g>
<g >
<title>os_xsave (161,993,939 samples, 0.02%)</title><rect x="81.3" y="1605" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="84.28" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="517" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1141" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1429" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="1439.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,365,102 samples, 0.05%)</title><rect x="468.9" y="85" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="471.93" y="95.5" ></text>
</g>
<g >
<title>free_unref_page_commit (146,261,267 samples, 0.02%)</title><rect x="852.8" y="837" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="855.82" y="847.5" ></text>
</g>
<g >
<title>cfree (1,083,243,646 samples, 0.12%)</title><rect x="286.5" y="949" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="289.45" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (327,907,228 samples, 0.04%)</title><rect x="423.6" y="181" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="426.59" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="869" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="879.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (129,151,190 samples, 0.01%)</title><rect x="1041.6" y="1445" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1044.61" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="565" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,387,109,374 samples, 0.59%)</title><rect x="132.4" y="1605" width="7.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="135.37" y="1615.5" ></text>
</g>
<g >
<title>ksys_read (109,921,441 samples, 0.01%)</title><rect x="75.3" y="1557" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="78.35" y="1567.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (700,532,856 samples, 0.08%)</title><rect x="1080.6" y="1477" width="0.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1083.63" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1445" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1455.5" ></text>
</g>
<g >
<title>enqueue_task (1,004,071,116 samples, 0.11%)</title><rect x="101.1" y="1493" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="104.09" y="1503.5" ></text>
</g>
<g >
<title>destroy_inode (371,974,591 samples, 0.04%)</title><rect x="79.6" y="1397" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="82.64" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1029" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="1039.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (123,744,623 samples, 0.01%)</title><rect x="598.0" y="1429" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="601.01" y="1439.5" ></text>
</g>
<g >
<title>check_heap_object (110,466,621 samples, 0.01%)</title><rect x="343.8" y="1397" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="346.79" y="1407.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (273,228,048 samples, 0.03%)</title><rect x="534.5" y="1605" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="537.51" y="1615.5" ></text>
</g>
<g >
<title>wrk (40,594,485,958 samples, 4.47%)</title><rect x="1137.2" y="1637" width="52.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1140.24" y="1647.5" >wrk</text>
</g>
<g >
<title>free_buffer_head (2,083,682,201 samples, 0.23%)</title><rect x="851.6" y="1125" width="2.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="854.57" y="1135.5" ></text>
</g>
<g >
<title>operator delete@plt (97,622,648 samples, 0.01%)</title><rect x="293.8" y="1013" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="296.80" y="1023.5" ></text>
</g>
<g >
<title>operator new (1,725,884,137 samples, 0.19%)</title><rect x="160.4" y="1605" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="163.38" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1253" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1263.5" ></text>
</g>
<g >
<title>poll_idle (1,227,022,623 samples, 0.14%)</title><rect x="142.2" y="1493" width="1.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="145.24" y="1503.5" ></text>
</g>
<g >
<title>psi_task_change (112,980,158 samples, 0.01%)</title><rect x="1133.3" y="1413" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1136.29" y="1423.5" ></text>
</g>
<g >
<title>futex_q_lock (117,187,027 samples, 0.01%)</title><rect x="136.0" y="1525" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="138.98" y="1535.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (117,003,105 samples, 0.01%)</title><rect x="1131.2" y="1429" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1134.16" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (768,125,391 samples, 0.08%)</title><rect x="219.5" y="309" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="222.51" y="319.5" ></text>
</g>
<g >
<title>execute_command_internal (124,500,596 samples, 0.01%)</title><rect x="854.8" y="1381" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="857.83" y="1391.5" ></text>
</g>
<g >
<title>sleep (512,593,037 samples, 0.06%)</title><rect x="855.4" y="1637" width="0.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="858.41" y="1647.5" ></text>
</g>
<g >
<title>psi_task_switch (182,346,152 samples, 0.02%)</title><rect x="73.3" y="1477" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="76.33" y="1487.5" ></text>
</g>
<g >
<title>do_idle (15,921,204,712 samples, 1.75%)</title><rect x="84.3" y="1573" width="20.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.32" y="1583.5" ></text>
</g>
<g >
<title>dentry_free (93,608,272 samples, 0.01%)</title><rect x="79.2" y="1445" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="82.21" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="821" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="831.5" ></text>
</g>
<g >
<title>evict (1,320,358,961 samples, 0.15%)</title><rect x="1072.8" y="1429" width="1.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1075.84" y="1439.5" ></text>
</g>
<g >
<title>folio_clear_dirty_for_io (79,500,380 samples, 0.01%)</title><rect x="83.7" y="1349" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="86.72" y="1359.5" ></text>
</g>
<g >
<title>mod_objcg_state (163,752,637 samples, 0.02%)</title><rect x="1042.6" y="1445" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1045.59" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="949" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="959.5" ></text>
</g>
<g >
<title>__d_alloc (119,139,872 samples, 0.01%)</title><rect x="134.1" y="1493" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="137.13" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,566,316,035 samples, 0.61%)</title><rect x="132.2" y="1621" width="7.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="135.18" y="1631.5" ></text>
</g>
<g >
<title>[libc.so.6] (102,823,875 samples, 0.01%)</title><rect x="147.5" y="1445" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="150.47" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="565" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,832,734,234 samples, 0.20%)</title><rect x="499.3" y="1493" width="2.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="502.28" y="1503.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (694,545,174 samples, 0.08%)</title><rect x="361.9" y="1381" width="0.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="364.87" y="1391.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (435,730,920 samples, 0.05%)</title><rect x="85.0" y="1477" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="87.99" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1093" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="517" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="527.5" ></text>
</g>
<g >
<title>__sys_accept4 (9,400,287,910 samples, 1.04%)</title><rect x="1034.2" y="1573" width="12.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1037.23" y="1583.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (682,441,025 samples, 0.08%)</title><rect x="1186.7" y="1541" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1189.72" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_free (102,146,452 samples, 0.01%)</title><rect x="587.9" y="1445" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="590.94" y="1455.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (98,739,484 samples, 0.01%)</title><rect x="765.3" y="1573" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="768.32" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="181" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="191.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1141" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="1151.5" ></text>
</g>
<g >
<title>free_unref_page_prepare (88,175,507 samples, 0.01%)</title><rect x="844.4" y="1205" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="847.43" y="1215.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (107,304,615 samples, 0.01%)</title><rect x="147.1" y="1605" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="150.12" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more@plt (106,533,230 samples, 0.01%)</title><rect x="425.8" y="37" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="428.82" y="47.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (649,343,478 samples, 0.07%)</title><rect x="601.1" y="1589" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="604.11" y="1599.5" ></text>
</g>
<g >
<title>free@plt (200,653,048 samples, 0.02%)</title><rect x="457.3" y="69" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="460.26" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (222,680,253 samples, 0.02%)</title><rect x="427.9" y="165" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="430.93" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="869" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="879.5" >st..</text>
</g>
<g >
<title>futex_wait_queue (661,792,664 samples, 0.07%)</title><rect x="135.1" y="1541" width="0.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="138.06" y="1551.5" ></text>
</g>
<g >
<title>inet_accept (155,467,751 samples, 0.02%)</title><rect x="67.0" y="1525" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="70.00" y="1535.5" ></text>
</g>
<g >
<title>seq_read_iter (125,137,069 samples, 0.01%)</title><rect x="502.8" y="1413" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="505.82" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (791,612,443 samples, 0.09%)</title><rect x="226.4" y="373" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="229.39" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1381" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (302,837,274 samples, 0.03%)</title><rect x="270.1" y="757" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="273.13" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1333" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1343.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (98,730,392 samples, 0.01%)</title><rect x="728.7" y="1221" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="731.65" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (466,296,990 samples, 0.05%)</title><rect x="276.6" y="821" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="279.61" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1317" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1327.5" ></text>
</g>
<g >
<title>malloc (87,831,110 samples, 0.01%)</title><rect x="277.4" y="789" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="280.39" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="837" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="677" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="687.5" ></text>
</g>
<g >
<title>init_once (81,031,930 samples, 0.01%)</title><rect x="1038.4" y="1381" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1041.44" y="1391.5" ></text>
</g>
<g >
<title>newidle_balance (82,103,355 samples, 0.01%)</title><rect x="583.8" y="1461" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="586.76" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="373" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="383.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,653,292,554 samples, 0.62%)</title><rect x="311.4" y="1221" width="7.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="314.40" y="1231.5" ></text>
</g>
<g >
<title>__destroy_inode (132,047,231 samples, 0.01%)</title><rect x="1179.8" y="1397" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1182.84" y="1407.5" ></text>
</g>
<g >
<title>lockref_put_return (90,150,008 samples, 0.01%)</title><rect x="1074.8" y="1493" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1077.77" y="1503.5" ></text>
</g>
<g >
<title>futex_wake_mark (518,505,365 samples, 0.06%)</title><rect x="359.3" y="1429" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="362.32" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1461" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (44,129,470,178 samples, 4.86%)</title><rect x="198.9" y="677" width="57.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="201.93" y="687.5" >std::_..</text>
</g>
<g >
<title>__vdso_gettimeofday (98,740,192 samples, 0.01%)</title><rect x="778.1" y="1541" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="781.13" y="1551.5" ></text>
</g>
<g >
<title>sock_alloc_inode (356,184,680 samples, 0.04%)</title><rect x="132.9" y="1493" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="135.95" y="1503.5" ></text>
</g>
<g >
<title>sched_clock_cpu (122,134,963 samples, 0.01%)</title><rect x="77.0" y="1493" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="80.02" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (504,341,913 samples, 0.06%)</title><rect x="371.4" y="133" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.44" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1237" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1247.5" ></text>
</g>
<g >
<title>ksys_write (125,518,591 samples, 0.01%)</title><rect x="1067.0" y="1573" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1069.95" y="1583.5" ></text>
</g>
<g >
<title>poll_idle (116,079,607 samples, 0.01%)</title><rect x="601.6" y="1429" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="604.56" y="1439.5" ></text>
</g>
<g >
<title>search_binary_handler (192,085,965 samples, 0.02%)</title><rect x="503.2" y="1509" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="506.17" y="1519.5" ></text>
</g>
<g >
<title>rcu_do_batch (1,574,888,667 samples, 0.17%)</title><rect x="1077.9" y="1493" width="2.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1080.90" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (107,304,615 samples, 0.01%)</title><rect x="147.1" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="150.12" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1381" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="357" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1285" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1295.5" >std..</text>
</g>
<g >
<title>__do_softirq (220,188,864 samples, 0.02%)</title><rect x="531.1" y="1429" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="534.07" y="1439.5" ></text>
</g>
<g >
<title>call_cpuidle (1,672,748,875 samples, 0.18%)</title><rect x="531.0" y="1541" width="2.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="533.96" y="1551.5" ></text>
</g>
<g >
<title>dput (832,730,891 samples, 0.09%)</title><rect x="79.1" y="1477" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="82.11" y="1487.5" ></text>
</g>
<g >
<title>wake_up_q (2,132,354,439 samples, 0.23%)</title><rect x="360.1" y="1429" width="2.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="363.15" y="1439.5" ></text>
</g>
<g >
<title>fsnotify (4,430,656,107 samples, 0.49%)</title><rect x="727.0" y="1317" width="5.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="730.04" y="1327.5" ></text>
</g>
<g >
<title>poll_idle (194,399,153 samples, 0.02%)</title><rect x="1189.3" y="1429" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.28" y="1439.5" ></text>
</g>
<g >
<title>iput (429,846,047 samples, 0.05%)</title><rect x="588.1" y="1445" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="591.09" y="1455.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (212,862,551 samples, 0.02%)</title><rect x="530.0" y="1461" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="532.97" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="789" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="799.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (3,015,308,658 samples, 0.33%)</title><rect x="850.4" y="1157" width="3.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="853.43" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1013" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (138,071,293 samples, 0.02%)</title><rect x="529.0" y="1589" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="532.02" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1557" width="6.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="374.25" y="1567.5" ></text>
</g>
<g >
<title>tcp_sendmsg (332,451,603 samples, 0.04%)</title><rect x="787.1" y="1413" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="790.08" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (78,787,167,643 samples, 8.68%)</title><rect x="193.8" y="1077" width="102.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="196.80" y="1087.5" >std::__detai..</text>
</g>
<g >
<title>[libc.so.6] (136,098,963 samples, 0.01%)</title><rect x="765.1" y="1557" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="768.08" y="1567.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (703,726,612 samples, 0.08%)</title><rect x="1039.2" y="1461" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1042.21" y="1471.5" ></text>
</g>
<g >
<title>NaClMaskRestore (921,753,550 samples, 0.10%)</title><rect x="654.0" y="1573" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="657.05" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (129,558,431 samples, 0.01%)</title><rect x="1075.8" y="1525" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1078.77" y="1535.5" ></text>
</g>
<g >
<title>execute_command_internal (124,500,596 samples, 0.01%)</title><rect x="854.8" y="1429" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="857.83" y="1439.5" ></text>
</g>
<g >
<title>dequeue_task (485,017,114 samples, 0.05%)</title><rect x="582.8" y="1493" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="585.76" y="1503.5" ></text>
</g>
<g >
<title>do_fcntl (103,256,223 samples, 0.01%)</title><rect x="581.8" y="1573" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="584.77" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="245" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1157" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1167.5" >std..</text>
</g>
<g >
<title>inet_accept (732,851,546 samples, 0.08%)</title><rect x="1035.3" y="1541" width="1.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1038.30" y="1551.5" ></text>
</g>
<g >
<title>futex_wait (913,963,618 samples, 0.10%)</title><rect x="135.0" y="1557" width="1.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="137.97" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,963,883,129 samples, 0.99%)</title><rect x="577.7" y="1621" width="11.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="580.75" y="1631.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (8,332,972,044 samples, 0.92%)</title><rect x="342.4" y="1509" width="10.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="345.39" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="341" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="351.5" ></text>
</g>
<g >
<title>menu_select (112,903,425 samples, 0.01%)</title><rect x="533.1" y="1525" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="536.14" y="1535.5" ></text>
</g>
<g >
<title>operator new (237,304,558 samples, 0.03%)</title><rect x="310.4" y="1125" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="313.38" y="1135.5" ></text>
</g>
<g >
<title>filemap_read (102,107,320 samples, 0.01%)</title><rect x="786.7" y="1237" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="789.69" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="933" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1221" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1231.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (364,257,136 samples, 0.04%)</title><rect x="370.0" y="1461" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="373.02" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,365,102 samples, 0.05%)</title><rect x="468.9" y="101" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="471.93" y="111.5" ></text>
</g>
<g >
<title>file_free_rcu (183,177,879 samples, 0.02%)</title><rect x="82.2" y="1477" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="85.21" y="1487.5" ></text>
</g>
<g >
<title>native_sched_clock (120,896,522 samples, 0.01%)</title><rect x="1095.9" y="1461" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1098.86" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (318,072,483 samples, 0.04%)</title><rect x="475.1" y="165" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="478.08" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (126,387,975,276 samples, 13.92%)</title><rect x="177.2" y="1525" width="164.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="180.17" y="1535.5" >std::__detail::__rege..</text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (111,751,686 samples, 0.01%)</title><rect x="580.5" y="1461" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="583.50" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (741,462,864 samples, 0.08%)</title><rect x="105.1" y="1493" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="108.09" y="1503.5" ></text>
</g>
<g >
<title>walk_component (678,351,156 samples, 0.07%)</title><rect x="349.1" y="1397" width="0.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="352.12" y="1407.5" ></text>
</g>
<g >
<title>irq_exit_rcu (109,671,622 samples, 0.01%)</title><rect x="1131.2" y="1397" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1134.17" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="901" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="911.5" ></text>
</g>
<g >
<title>irq_exit_rcu (85,672,832 samples, 0.01%)</title><rect x="100.1" y="1445" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="103.07" y="1455.5" ></text>
</g>
<g >
<title>operator delete@plt (371,833,064 samples, 0.04%)</title><rect x="457.7" y="69" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="460.74" y="79.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (82,246,135 samples, 0.01%)</title><rect x="78.6" y="1509" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="81.59" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="597" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="607.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (383,488,063 samples, 0.04%)</title><rect x="479.2" y="133" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="482.18" y="143.5" ></text>
</g>
<g >
<title>rcu_core_si (97,716,865 samples, 0.01%)</title><rect x="1131.2" y="1349" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1134.18" y="1359.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (23,153,276,284 samples, 2.55%)</title><rect x="714.9" y="1493" width="30.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="717.94" y="1503.5" >_I..</text>
</g>
<g >
<title>ret_from_fork (1,503,099,777 samples, 0.17%)</title><rect x="82.1" y="1605" width="2.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="85.12" y="1615.5" ></text>
</g>
<g >
<title>malloc (145,474,872 samples, 0.02%)</title><rect x="170.2" y="85" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="173.21" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (222,770,276 samples, 0.02%)</title><rect x="269.8" y="741" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="272.78" y="751.5" ></text>
</g>
<g >
<title>i_callback (79,966,580 samples, 0.01%)</title><rect x="139.7" y="1477" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="142.65" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="661" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="671.5" ></text>
</g>
<g >
<title>std::string::insert (202,139,275 samples, 0.02%)</title><rect x="353.9" y="1557" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="356.88" y="1567.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (399,396,586 samples, 0.04%)</title><rect x="1180.9" y="1573" width="0.5" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1183.85" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1589" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1599.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (125,358,910 samples, 0.01%)</title><rect x="526.2" y="1477" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="529.19" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (92,791,866 samples, 0.01%)</title><rect x="357.2" y="1509" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="360.19" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="229" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="239.5" ></text>
</g>
<g >
<title>alloc_inode (450,824,184 samples, 0.05%)</title><rect x="132.8" y="1509" width="0.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="135.83" y="1519.5" ></text>
</g>
<g >
<title>futex_unqueue (94,996,175 samples, 0.01%)</title><rect x="582.2" y="1541" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="585.22" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1317" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1327.5" ></text>
</g>
<g >
<title>seq_escape_mem (87,673,643 samples, 0.01%)</title><rect x="528.0" y="1477" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="531.02" y="1487.5" ></text>
</g>
<g >
<title>alloc_pages (79,801,756 samples, 0.01%)</title><rect x="67.8" y="1397" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="70.78" y="1407.5" ></text>
</g>
<g >
<title>perf (726,846,218 samples, 0.08%)</title><rect x="503.7" y="1637" width="1.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="506.74" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1525" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (105,928,631 samples, 0.01%)</title><rect x="106.9" y="1621" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="109.92" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (256,049,149 samples, 0.03%)</title><rect x="1029.2" y="1621" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1032.22" y="1631.5" ></text>
</g>
<g >
<title>newidle_balance (103,631,470 samples, 0.01%)</title><rect x="1054.8" y="1461" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1057.84" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1077" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1087.5" ></text>
</g>
<g >
<title>vfs_read (116,916,135 samples, 0.01%)</title><rect x="1061.7" y="1557" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1064.75" y="1567.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (111,938,906 samples, 0.01%)</title><rect x="786.7" y="1461" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="789.69" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (856,692,569 samples, 0.09%)</title><rect x="316.9" y="1205" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="319.85" y="1215.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (573,167,647 samples, 0.06%)</title><rect x="83.3" y="1493" width="0.8" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="86.33" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (370,257,367 samples, 0.04%)</title><rect x="170.4" y="165" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="175.5" ></text>
</g>
<g >
<title>futex_wake (458,782,571 samples, 0.05%)</title><rect x="136.2" y="1557" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="139.17" y="1567.5" ></text>
</g>
<g >
<title>pick_next_task_fair (100,280,221 samples, 0.01%)</title><rect x="500.6" y="1381" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="503.62" y="1391.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (124,699,547 samples, 0.01%)</title><rect x="600.3" y="1525" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="603.27" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (81,772,285 samples, 0.01%)</title><rect x="198.8" y="661" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="201.83" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (240,047,178 samples, 0.03%)</title><rect x="131.9" y="1621" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="134.87" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="565" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="575.5" ></text>
</g>
<g >
<title>update_load_avg (95,001,875 samples, 0.01%)</title><rect x="1188.3" y="1477" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1191.31" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (286,241,759 samples, 0.03%)</title><rect x="355.4" y="1573" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="358.41" y="1583.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (208,206,613 samples, 0.02%)</title><rect x="742.4" y="1125" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="745.41" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="885" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="895.5" ></text>
</g>
<g >
<title>kmem_cache_free (170,831,895 samples, 0.02%)</title><rect x="1084.7" y="1349" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1087.73" y="1359.5" ></text>
</g>
<g >
<title>vfs_iter_write (586,122,077 samples, 0.06%)</title><rect x="503.9" y="1381" width="0.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="506.90" y="1391.5" ></text>
</g>
<g >
<title>new_inode_pseudo (922,704,544 samples, 0.10%)</title><rect x="67.5" y="1509" width="1.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="70.46" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1461" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1471.5" ></text>
</g>
<g >
<title>ret_from_fork (619,276,025 samples, 0.07%)</title><rect x="589.6" y="1605" width="0.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="592.63" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1221" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1231.5" ></text>
</g>
<g >
<title>v8::internal::OptimizedCompilationJob::ExecuteJob (183,860,756 samples, 0.02%)</title><rect x="502.5" y="1541" width="0.2" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="505.46" y="1551.5" ></text>
</g>
<g >
<title>wake_affine (290,648,126 samples, 0.03%)</title><rect x="361.3" y="1381" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="364.30" y="1391.5" ></text>
</g>
<g >
<title>generic_permission (275,182,381 samples, 0.03%)</title><rect x="346.8" y="1349" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="349.77" y="1359.5" ></text>
</g>
<g >
<title>dequeue_task_fair (419,340,902 samples, 0.05%)</title><rect x="72.3" y="1461" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="75.29" y="1471.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (352,971,394 samples, 0.04%)</title><rect x="350.2" y="1381" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="353.24" y="1391.5" ></text>
</g>
<g >
<title>malloc (160,317,196 samples, 0.02%)</title><rect x="377.2" y="117" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="380.18" y="127.5" ></text>
</g>
<g >
<title>operator new (399,875,146 samples, 0.04%)</title><rect x="171.8" y="197" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="174.82" y="207.5" ></text>
</g>
<g >
<title>new_inode_pseudo (460,470,547 samples, 0.05%)</title><rect x="132.8" y="1525" width="0.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="135.81" y="1535.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (98,699,216 samples, 0.01%)</title><rect x="605.2" y="1605" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="608.23" y="1615.5" ></text>
</g>
<g >
<title>restore_fpregs_from_fpstate (86,279,540 samples, 0.01%)</title><rect x="1180.5" y="1541" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1183.50" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="949" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="389" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="399.5" >st..</text>
</g>
<g >
<title>psi_task_switch (100,485,343 samples, 0.01%)</title><rect x="534.1" y="1525" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="537.09" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="741" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="751.5" ></text>
</g>
<g >
<title>rcu_core_si (322,940,778 samples, 0.04%)</title><rect x="591.2" y="1413" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="594.16" y="1423.5" ></text>
</g>
<g >
<title>sshd (214,260,849,484 samples, 23.60%)</title><rect x="856.1" y="1637" width="278.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="859.07" y="1647.5" >sshd</text>
</g>
<g >
<title>Glob::isIgnored (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1557" width="3.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="173.40" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (271,772,043 samples, 0.03%)</title><rect x="482.3" y="1525" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="485.27" y="1535.5" ></text>
</g>
<g >
<title>put_cpu_partial (251,976,321 samples, 0.03%)</title><rect x="852.7" y="1077" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="855.68" y="1087.5" ></text>
</g>
<g >
<title>rcu_do_batch (639,230,652 samples, 0.07%)</title><rect x="82.2" y="1493" width="0.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="85.15" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="357" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="367.5" ></text>
</g>
<g >
<title>filemap_free_folio (173,686,132 samples, 0.02%)</title><rect x="847.2" y="1221" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="850.16" y="1231.5" ></text>
</g>
<g >
<title>inet_sendmsg (85,394,765 samples, 0.01%)</title><rect x="1067.0" y="1525" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1070.01" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1541" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1551.5" >st..</text>
</g>
<g >
<title>update_load_avg (347,799,295 samples, 0.04%)</title><rect x="490.6" y="1333" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="493.60" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="549" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="559.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (1,452,455,137 samples, 0.16%)</title><rect x="351.3" y="1445" width="1.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="354.29" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="485" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="495.5" ></text>
</g>
<g >
<title>ct_kernel_exit_state (80,197,945 samples, 0.01%)</title><rect x="1085.5" y="1477" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1088.45" y="1487.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (15,904,236,123 samples, 1.75%)</title><rect x="765.9" y="1573" width="20.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="768.88" y="1583.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (226,617,862 samples, 0.02%)</title><rect x="1179.1" y="1541" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1182.05" y="1551.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (98,740,359 samples, 0.01%)</title><rect x="738.6" y="1109" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="741.61" y="1119.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (148,104,297 samples, 0.02%)</title><rect x="741.0" y="1093" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="743.96" y="1103.5" ></text>
</g>
<g >
<title>[libc.so.6] (378,446,702 samples, 0.04%)</title><rect x="281.6" y="853" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="284.61" y="863.5" ></text>
</g>
<g >
<title>socket_readable (145,418,873 samples, 0.02%)</title><rect x="1170.6" y="1541" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1173.61" y="1551.5" ></text>
</g>
<g >
<title>rmqueue_bulk (124,369,171 samples, 0.01%)</title><rect x="737.6" y="1077" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="740.61" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (203,033,970 samples, 0.02%)</title><rect x="381.1" y="101" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="384.08" y="111.5" ></text>
</g>
<g >
<title>file_free_rcu (133,780,460 samples, 0.01%)</title><rect x="1136.5" y="1365" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1139.50" y="1375.5" ></text>
</g>
<g >
<title>_copy_from_user (216,790,353 samples, 0.02%)</title><rect x="483.9" y="1461" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="486.93" y="1471.5" ></text>
</g>
<g >
<title>kmem_cache_free (241,965,176 samples, 0.03%)</title><rect x="1084.4" y="1333" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1087.40" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="469" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="479.5" >st..</text>
</g>
<g >
<title>obj_cgroup_charge (126,668,490 samples, 0.01%)</title><rect x="1039.9" y="1445" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1042.94" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (82,486,241 samples, 0.01%)</title><rect x="488.5" y="1397" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="491.46" y="1407.5" ></text>
</g>
<g >
<title>malloc (1,785,822,020 samples, 0.20%)</title><rect x="420.2" y="69" width="2.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="423.23" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (196,906,916 samples, 0.02%)</title><rect x="371.7" y="101" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.75" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_read (5,045,488,660 samples, 0.56%)</title><rect x="364.5" y="1541" width="6.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="367.49" y="1551.5" ></text>
</g>
<g >
<title>DW.ref.__gxx_personality_v0 (136,817,753 samples, 0.02%)</title><rect x="148.1" y="1621" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="151.15" y="1631.5" ></text>
</g>
<g >
<title>set_next_entity (105,900,156 samples, 0.01%)</title><rect x="1188.3" y="1493" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1191.29" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1445" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1455.5" ></text>
</g>
<g >
<title>do_idle (2,736,012,934 samples, 0.30%)</title><rect x="530.8" y="1573" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="533.84" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,631,740,220 samples, 0.18%)</title><rect x="531.0" y="1509" width="2.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="534.01" y="1519.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (87,505,302 samples, 0.01%)</title><rect x="503.3" y="1349" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="506.30" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (3,330,302,304 samples, 0.37%)</title><rect x="1181.7" y="1509" width="4.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1184.73" y="1519.5" ></text>
</g>
<g >
<title>malloc (96,065,755 samples, 0.01%)</title><rect x="170.1" y="85" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="173.09" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,495,154,224 samples, 6.77%)</title><rect x="389.6" y="1605" width="79.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="392.56" y="1615.5" >std::__de..</text>
</g>
<g >
<title>ext4_block_write_begin (1,713,748,935 samples, 0.19%)</title><rect x="738.1" y="1205" width="2.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="741.09" y="1215.5" ></text>
</g>
<g >
<title>lookup_fast (352,971,394 samples, 0.04%)</title><rect x="350.2" y="1397" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="353.24" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (253,259,758 samples, 0.03%)</title><rect x="134.6" y="1589" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="137.60" y="1599.5" ></text>
</g>
<g >
<title>evict (331,135,158 samples, 0.04%)</title><rect x="1179.8" y="1429" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1182.80" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,178,434,447 samples, 0.57%)</title><rect x="221.9" y="389" width="6.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="224.88" y="399.5" ></text>
</g>
<g >
<title>do_futex (682,987,567 samples, 0.08%)</title><rect x="527.1" y="1573" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="530.11" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="293" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="303.5" ></text>
</g>
<g >
<title>rcu_core_si (212,756,556 samples, 0.02%)</title><rect x="1113.3" y="1397" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1116.26" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1557" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1567.5" ></text>
</g>
<g >
<title>do_futex (1,731,089,279 samples, 0.19%)</title><rect x="499.4" y="1477" width="2.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="502.36" y="1487.5" ></text>
</g>
<g >
<title>cfree (847,181,675 samples, 0.09%)</title><rect x="373.9" y="149" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="376.89" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (333,876,181 samples, 0.04%)</title><rect x="376.1" y="149" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="379.14" y="159.5" ></text>
</g>
<g >
<title>ct_kernel_exit_state (91,346,413 samples, 0.01%)</title><rect x="1085.9" y="1477" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1088.86" y="1487.5" ></text>
</g>
<g >
<title>malloc (1,493,812,095 samples, 0.16%)</title><rect x="182.4" y="1493" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="185.38" y="1503.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (266,768,195 samples, 0.03%)</title><rect x="633.1" y="1589" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="636.10" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="533" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="543.5" >st..</text>
</g>
<g >
<title>ct_idle_enter (201,281,732 samples, 0.02%)</title><rect x="1085.4" y="1493" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1088.36" y="1503.5" ></text>
</g>
<g >
<title>malloc (147,695,444 samples, 0.02%)</title><rect x="332.8" y="1301" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="335.77" y="1311.5" ></text>
</g>
<g >
<title>__legitimize_path (123,495,406 samples, 0.01%)</title><rect x="344.8" y="1381" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="347.84" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="757" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="767.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1589" width="6.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="374.25" y="1599.5" ></text>
</g>
<g >
<title>sock_free_inode (225,329,768 samples, 0.02%)</title><rect x="82.5" y="1461" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="85.48" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="789" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="799.5" ></text>
</g>
<g >
<title>file_free_rcu (105,679,441 samples, 0.01%)</title><rect x="85.1" y="1365" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="88.07" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="965" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="975.5" ></text>
</g>
<g >
<title>poll_idle (1,357,053,005 samples, 0.15%)</title><rect x="1184.3" y="1493" width="1.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1187.30" y="1503.5" ></text>
</g>
<g >
<title>intel_idle (714,017,032 samples, 0.08%)</title><rect x="531.4" y="1493" width="0.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="534.37" y="1503.5" ></text>
</g>
<g >
<title>cpuidle_enter (4,353,527,392 samples, 0.48%)</title><rect x="591.0" y="1525" width="5.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="593.98" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1413" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="1423.5" ></text>
</g>
<g >
<title>file_free_rcu (114,816,143 samples, 0.01%)</title><rect x="1113.3" y="1349" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1116.30" y="1359.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (291,013,715 samples, 0.03%)</title><rect x="343.4" y="1397" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="346.41" y="1407.5" ></text>
</g>
<g >
<title>pick_next_task_idle (81,085,093 samples, 0.01%)</title><rect x="1055.0" y="1477" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1057.97" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1205" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="1215.5" ></text>
</g>
<g >
<title>d_instantiate (398,395,629 samples, 0.04%)</title><rect x="1044.3" y="1509" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1047.28" y="1519.5" ></text>
</g>
<g >
<title>release_pages (98,741,594 samples, 0.01%)</title><rect x="736.9" y="1141" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="739.91" y="1151.5" ></text>
</g>
<g >
<title>operator new (1,493,812,095 samples, 0.16%)</title><rect x="182.4" y="1509" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="185.38" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (371,822,052 samples, 0.04%)</title><rect x="70.7" y="1573" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="73.67" y="1583.5" ></text>
</g>
<g >
<title>pick_next_task_fair (220,005,215 samples, 0.02%)</title><rect x="528.6" y="1509" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="531.60" y="1519.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (768,068,286 samples, 0.08%)</title><rect x="1069.7" y="1541" width="1.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1072.72" y="1551.5" ></text>
</g>
<g >
<title>block_write_end (923,177,889 samples, 0.10%)</title><rect x="743.0" y="1189" width="1.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="746.00" y="1199.5" ></text>
</g>
<g >
<title>menu_select (356,802,991 samples, 0.04%)</title><rect x="100.2" y="1525" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="103.24" y="1535.5" ></text>
</g>
<g >
<title>call_rcu (218,213,959 samples, 0.02%)</title><rect x="1073.9" y="1397" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1076.86" y="1407.5" ></text>
</g>
<g >
<title>__folio_batch_release (3,315,253,076 samples, 0.37%)</title><rect x="842.8" y="1237" width="4.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="845.79" y="1247.5" ></text>
</g>
<g >
<title>call_cpuidle (137,881,077 samples, 0.02%)</title><rect x="146.6" y="1477" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="149.57" y="1487.5" ></text>
</g>
<g >
<title>generic_write_end (3,085,707,388 samples, 0.34%)</title><rect x="740.3" y="1205" width="4.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="743.32" y="1215.5" ></text>
</g>
<g >
<title>poll_idle (380,414,218 samples, 0.04%)</title><rect x="1132.3" y="1429" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1135.29" y="1439.5" ></text>
</g>
<g >
<title>futex_unqueue (119,277,297 samples, 0.01%)</title><rect x="71.5" y="1525" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="74.51" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (664,418,336 samples, 0.07%)</title><rect x="317.1" y="1189" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="320.08" y="1199.5" ></text>
</g>
<g >
<title>update_curr (266,469,340 samples, 0.03%)</title><rect x="490.3" y="1333" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="493.25" y="1343.5" ></text>
</g>
<g >
<title>call_function_single_prep_ipi (655,830,576 samples, 0.07%)</title><rect x="361.9" y="1365" width="0.9" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="364.92" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1429" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="325" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="335.5" >std..</text>
</g>
<g >
<title>common_perm_cond (77,340,362 samples, 0.01%)</title><rect x="352.3" y="1365" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="355.29" y="1375.5" ></text>
</g>
<g >
<title>uv__fs_work (143,182,398 samples, 0.02%)</title><rect x="502.8" y="1573" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="505.80" y="1583.5" ></text>
</g>
<g >
<title>mod_objcg_state (87,422,398 samples, 0.01%)</title><rect x="1079.2" y="1429" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1082.19" y="1439.5" ></text>
</g>
<g >
<title>call_cpuidle (23,821,734,395 samples, 2.62%)</title><rect x="1082.7" y="1541" width="31.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1085.74" y="1551.5" >ca..</text>
</g>
<g >
<title>operator new (127,241,135 samples, 0.01%)</title><rect x="270.8" y="741" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="273.79" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="773" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="437" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="447.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (119,497,280 samples, 0.01%)</title><rect x="787.1" y="1381" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="790.13" y="1391.5" ></text>
</g>
<g >
<title>do_idle (7,928,533,481 samples, 0.87%)</title><rect x="590.5" y="1573" width="10.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="593.50" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="789" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="799.5" ></text>
</g>
<g >
<title>rcu_core (381,760,065 samples, 0.04%)</title><rect x="1180.9" y="1509" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1183.86" y="1519.5" ></text>
</g>
<g >
<title>dequeue_task (410,376,769 samples, 0.05%)</title><rect x="500.0" y="1397" width="0.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="503.02" y="1407.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (317,824,891 samples, 0.04%)</title><rect x="1042.4" y="1461" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1045.39" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="773" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="783.5" >st..</text>
</g>
<g >
<title>cpuidle_enter_state (11,829,572,647 samples, 1.30%)</title><rect x="84.8" y="1509" width="15.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="87.80" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (837,977,818 samples, 0.09%)</title><rect x="181.1" y="1493" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="184.08" y="1503.5" ></text>
</g>
<g >
<title>[sleep] (329,725,266 samples, 0.04%)</title><rect x="855.6" y="1573" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="858.58" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (120,140,331,039 samples, 13.23%)</title><rect x="184.3" y="1509" width="156.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="187.32" y="1519.5" >std::__detail::_Exec..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="805" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1093" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="1103.5" ></text>
</g>
<g >
<title>get_page_from_freelist (106,265,014 samples, 0.01%)</title><rect x="787.1" y="1317" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="790.14" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1605" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="1615.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1,151,340,764 samples, 0.13%)</title><rect x="1179.0" y="1557" width="1.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1181.97" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="917" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="927.5" ></text>
</g>
<g >
<title>cpuidle_select (381,801,645 samples, 0.04%)</title><rect x="100.2" y="1541" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="103.24" y="1551.5" ></text>
</g>
<g >
<title>generic_fillattr (130,170,408 samples, 0.01%)</title><rect x="352.8" y="1349" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="355.85" y="1359.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (109,365,620 samples, 0.01%)</title><rect x="761.6" y="1557" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="764.61" y="1567.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (1,144,116,474 samples, 0.13%)</title><rect x="631.3" y="1573" width="1.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="634.28" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="981" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="991.5" ></text>
</g>
<g >
<title>futex_wait_queue (383,134,116 samples, 0.04%)</title><rect x="527.2" y="1541" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="530.19" y="1551.5" ></text>
</g>
<g >
<title>seq_read_iter (166,366,399 samples, 0.02%)</title><rect x="528.0" y="1541" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="531.02" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (103,707,841 samples, 0.01%)</title><rect x="190.3" y="1317" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="193.28" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (578,762,601 samples, 0.06%)</title><rect x="212.0" y="229" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="214.98" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,010,116,457 samples, 0.33%)</title><rect x="424.0" y="149" width="3.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="159.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (98,739,693 samples, 0.01%)</title><rect x="743.7" y="1109" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="746.69" y="1119.5" ></text>
</g>
<g >
<title>cpu_startup_entry (4,989,881,303 samples, 0.55%)</title><rect x="140.0" y="1589" width="6.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="143.02" y="1599.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (395,779,268 samples, 0.04%)</title><rect x="591.1" y="1477" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="594.08" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1237" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="1247.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="997" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,857,206,628 samples, 0.20%)</title><rect x="475.5" y="101" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="111.5" ></text>
</g>
<g >
<title>__folio_end_writeback (131,232,825 samples, 0.01%)</title><rect x="83.1" y="1477" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="86.15" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (294,765,290 samples, 0.03%)</title><rect x="242.6" y="501" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="245.60" y="511.5" ></text>
</g>
<g >
<title>do_idle (189,033,703 samples, 0.02%)</title><rect x="1130.7" y="1589" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1133.74" y="1599.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (157,866,635 samples, 0.02%)</title><rect x="70.2" y="1525" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="73.18" y="1535.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (122,915,129 samples, 0.01%)</title><rect x="1071.4" y="1461" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1074.43" y="1471.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (85,553,191 samples, 0.01%)</title><rect x="1053.5" y="1429" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1056.52" y="1439.5" ></text>
</g>
<g >
<title>__libc_start_main (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1605" width="11.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="845.66" y="1615.5" ></text>
</g>
<g >
<title>ip_finish_output2 (77,565,045 samples, 0.01%)</title><rect x="529.0" y="1349" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="532.03" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="741" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="751.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,009,528,023 samples, 0.88%)</title><rect x="204.2" y="277" width="10.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="207.23" y="287.5" ></text>
</g>
<g >
<title>__memset (98,701,056 samples, 0.01%)</title><rect x="740.6" y="1125" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="743.58" y="1135.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (94,690,378 samples, 0.01%)</title><rect x="106.1" y="1493" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="109.05" y="1503.5" ></text>
</g>
<g >
<title>call_rcu (229,377,017 samples, 0.03%)</title><rect x="1071.3" y="1493" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1074.29" y="1503.5" ></text>
</g>
<g >
<title>fprintf (55,369,161,537 samples, 6.10%)</title><rect x="673.1" y="1525" width="72.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="676.13" y="1535.5" >fprintf</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="485" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1237" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1247.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (425,543,620 samples, 0.05%)</title><rect x="241.4" y="485" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="244.43" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="709" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="719.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (164,846,330 samples, 0.02%)</title><rect x="138.1" y="1541" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="141.05" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (92,046,372,333 samples, 10.14%)</title><rect x="191.8" y="1221" width="119.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="194.76" y="1231.5" >std::__detail:..</text>
</g>
<g >
<title>native_sched_clock (105,967,887 samples, 0.01%)</title><rect x="1121.7" y="1445" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1124.69" y="1455.5" ></text>
</g>
<g >
<title>psi_task_change (278,183,502 samples, 0.03%)</title><rect x="102.0" y="1477" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="105.04" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="181" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="191.5" ></text>
</g>
<g >
<title>mpage_submit_folio (326,400,228 samples, 0.04%)</title><rect x="83.4" y="1365" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="86.41" y="1375.5" ></text>
</g>
<g >
<title>clock_gettime@plt (98,734,670 samples, 0.01%)</title><rect x="786.4" y="1541" width="0.1" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="789.42" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="405" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="415.5" ></text>
</g>
<g >
<title>malloc (690,280,821 samples, 0.08%)</title><rect x="225.5" y="357" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="228.48" y="367.5" ></text>
</g>
<g >
<title>d_instantiate (188,650,294 samples, 0.02%)</title><rect x="69.9" y="1493" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="72.87" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="293" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="303.5" ></text>
</g>
<g >
<title>generic_perform_write (7,992,298,730 samples, 0.88%)</title><rect x="734.0" y="1237" width="10.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="737.00" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="533" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="517" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="527.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (268,819,311 samples, 0.03%)</title><rect x="1066.6" y="1525" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1069.60" y="1535.5" ></text>
</g>
<g >
<title>__mod_node_page_state (80,017,120 samples, 0.01%)</title><rect x="847.6" y="1189" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="850.59" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (85,124,004 samples, 0.01%)</title><rect x="147.5" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="150.50" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (77,111,480 samples, 0.01%)</title><rect x="377.5" y="197" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.46" y="207.5" ></text>
</g>
<g >
<title>rcu_core (107,845,135 samples, 0.01%)</title><rect x="1185.9" y="1381" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1188.92" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="389" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="393.95" y="399.5" ></text>
</g>
<g >
<title>rcu_do_batch (212,756,556 samples, 0.02%)</title><rect x="1113.3" y="1365" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1116.26" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (222,680,253 samples, 0.02%)</title><rect x="427.9" y="197" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="430.93" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="1557" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1333" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="1343.5" ></text>
</g>
<g >
<title>__rcu_read_lock (98,724,274 samples, 0.01%)</title><rect x="744.5" y="1237" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="747.46" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,680,582,848 samples, 2.61%)</title><rect x="392.8" y="165" width="30.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="175.5" >st..</text>
</g>
<g >
<title>pick_next_task (410,853,899 samples, 0.05%)</title><rect x="1054.7" y="1493" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1057.71" y="1503.5" ></text>
</g>
<g >
<title>swapper (2,054,573,635 samples, 0.23%)</title><rect x="1134.6" y="1637" width="2.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1137.57" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="789" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="799.5" ></text>
</g>
<g >
<title>wb_do_writeback (700,532,856 samples, 0.08%)</title><rect x="1080.6" y="1525" width="0.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1083.63" y="1535.5" ></text>
</g>
<g >
<title>set_root (84,939,046 samples, 0.01%)</title><rect x="350.1" y="1381" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="353.10" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1333" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="1343.5" >std..</text>
</g>
<g >
<title>select_task_rq_fair (153,072,226 samples, 0.02%)</title><rect x="585.1" y="1509" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="588.06" y="1519.5" ></text>
</g>
<g >
<title>__switch_to_asm (205,828,751 samples, 0.02%)</title><rect x="576.8" y="1621" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="579.78" y="1631.5" ></text>
</g>
<g >
<title>intel_idle (1,394,985,196 samples, 0.15%)</title><rect x="1182.4" y="1493" width="1.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1185.41" y="1503.5" ></text>
</g>
<g >
<title>operator new (1,116,885,670 samples, 0.12%)</title><rect x="323.3" y="1269" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="326.27" y="1279.5" ></text>
</g>
<g >
<title>do_futex (1,560,644,650 samples, 0.17%)</title><rect x="1175.1" y="1573" width="2.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1178.15" y="1583.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (331,632,534 samples, 0.04%)</title><rect x="731.8" y="1125" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="734.77" y="1135.5" ></text>
</g>
<g >
<title>[libc.so.6] (806,446,212 samples, 0.09%)</title><rect x="292.8" y="997" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="295.75" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1141" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1151.5" ></text>
</g>
<g >
<title>schedule_idle (1,189,163,331 samples, 0.13%)</title><rect x="103.1" y="1557" width="1.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="106.11" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (102,255,049 samples, 0.01%)</title><rect x="392.7" y="85" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="395.68" y="95.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (85,970,823 samples, 0.01%)</title><rect x="1080.9" y="1285" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1083.94" y="1295.5" ></text>
</g>
<g >
<title>__do_softirq (140,573,440 samples, 0.02%)</title><rect x="530.6" y="1541" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="533.63" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_free (530,069,107 samples, 0.06%)</title><rect x="1078.8" y="1445" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1081.84" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (483,532,129 samples, 0.05%)</title><rect x="340.8" y="1509" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="343.82" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (51,201,383,086 samples, 5.64%)</title><rect x="197.7" y="757" width="66.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="200.71" y="767.5" >std::__..</text>
</g>
<g >
<title>psi_task_switch (93,025,956 samples, 0.01%)</title><rect x="135.8" y="1493" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="138.77" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (337,458,958 samples, 0.04%)</title><rect x="581.5" y="1589" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="584.49" y="1599.5" ></text>
</g>
<g >
<title>get_page_from_freelist (119,267,148 samples, 0.01%)</title><rect x="1038.3" y="1381" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1041.26" y="1391.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (284,307,875 samples, 0.03%)</title><rect x="138.6" y="1461" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="141.60" y="1471.5" ></text>
</g>
<g >
<title>execute_command_internal (352,484,534 samples, 0.04%)</title><rect x="854.7" y="1525" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="857.68" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (93,704,205 samples, 0.01%)</title><rect x="107.3" y="1621" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="110.25" y="1631.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (3,514,719,567 samples, 0.39%)</title><rect x="1062.0" y="1589" width="4.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1065.01" y="1599.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (5,409,854,070 samples, 0.60%)</title><rect x="1068.9" y="1557" width="7.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1071.93" y="1567.5" ></text>
</g>
<g >
<title>sel_ldr (194,260,889,309 samples, 21.40%)</title><rect x="602.0" y="1637" width="252.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="605.00" y="1647.5" >sel_ldr</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="261" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="271.5" ></text>
</g>
<g >
<title>cfree (677,268,878 samples, 0.07%)</title><rect x="211.9" y="245" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="214.85" y="255.5" ></text>
</g>
<g >
<title>___slab_alloc (187,529,539 samples, 0.02%)</title><rect x="67.8" y="1445" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="70.77" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="501" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="511.5" >st..</text>
</g>
<g >
<title>run_ksoftirqd (544,516,363 samples, 0.06%)</title><rect x="589.6" y="1557" width="0.7" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="592.63" y="1567.5" ></text>
</g>
<g >
<title>wb_writeback (573,167,647 samples, 0.06%)</title><rect x="83.3" y="1509" width="0.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="86.33" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (145,834,777 samples, 0.02%)</title><rect x="534.5" y="1445" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="537.51" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (231,874,771 samples, 0.03%)</title><rect x="503.1" y="1621" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="506.14" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="677" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="197" width="6.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="472.52" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (125,137,069 samples, 0.01%)</title><rect x="502.8" y="1509" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="505.82" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="997" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (77,111,480 samples, 0.01%)</title><rect x="377.5" y="229" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="380.46" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,589,182,010 samples, 0.18%)</title><rect x="469.5" y="85" width="2.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="95.5" ></text>
</g>
<g >
<title>tcp_sendmsg (292,678,066 samples, 0.03%)</title><rect x="1066.6" y="1541" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1069.57" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="709" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="719.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,265,277,975 samples, 0.14%)</title><rect x="1131.1" y="1445" width="1.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1134.14" y="1455.5" ></text>
</g>
<g >
<title>operator new (262,573,401 samples, 0.03%)</title><rect x="318.2" y="1189" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="321.17" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1301" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="533" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="543.5" ></text>
</g>
<g >
<title>init_file (204,738,132 samples, 0.02%)</title><rect x="1173.5" y="1477" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1176.46" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,732,437 samples, 0.02%)</title><rect x="391.0" y="53" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="394.01" y="63.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1525" width="11.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="845.66" y="1535.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;InotifySubscription&gt;, std::shared_ptr&lt;InotifySubscription&gt;, std::allocator&lt;std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::hash&lt;std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (102,301,550 samples, 0.01%)</title><rect x="355.0" y="1557" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="358.04" y="1567.5" ></text>
</g>
<g >
<title>jbd2__journal_start (197,437,722 samples, 0.02%)</title><rect x="740.6" y="1141" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="743.58" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1077" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1087.5" ></text>
</g>
<g >
<title>__put_user_8 (105,089,756 samples, 0.01%)</title><rect x="78.3" y="1509" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="81.26" y="1519.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (243,583,635 samples, 0.03%)</title><rect x="739.6" y="1157" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="742.61" y="1167.5" ></text>
</g>
<g >
<title>NaClSysClockGetTime (79,507,650,299 samples, 8.76%)</title><rect x="658.3" y="1573" width="103.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="661.25" y="1583.5" >NaClSysClock..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="709" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="719.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1269" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1279.5" >st..</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (246,578,594 samples, 0.03%)</title><rect x="1118.9" y="1429" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1121.90" y="1439.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (85,672,832 samples, 0.01%)</title><rect x="100.1" y="1477" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="103.07" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_enter (3,346,883,428 samples, 0.37%)</title><rect x="1181.7" y="1525" width="4.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1184.71" y="1535.5" ></text>
</g>
<g >
<title>__fput (498,111,180 samples, 0.05%)</title><rect x="529.8" y="1509" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="532.76" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="421" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="431.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1077" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="1087.5" ></text>
</g>
<g >
<title>do_sched_yield (3,450,643,216 samples, 0.38%)</title><rect x="1062.0" y="1573" width="4.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1065.02" y="1583.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (108,748,580 samples, 0.01%)</title><rect x="80.0" y="1365" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="82.98" y="1375.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,639,180,268 samples, 0.18%)</title><rect x="531.0" y="1525" width="2.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="534.01" y="1535.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1,707,906,095 samples, 0.19%)</title><rect x="763.0" y="1573" width="2.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="766.03" y="1583.5" ></text>
</g>
<g >
<title>do_sys_poll (9,695,466,059 samples, 1.07%)</title><rect x="483.3" y="1477" width="12.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="486.27" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (271,589,638 samples, 0.03%)</title><rect x="241.0" y="469" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="244.01" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="597" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="607.5" ></text>
</g>
<g >
<title>[anon] (15,086,662,646 samples, 1.66%)</title><rect x="148.4" y="1621" width="19.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="151.43" y="1631.5" ></text>
</g>
<g >
<title>cfree (1,063,558,783 samples, 0.12%)</title><rect x="223.9" y="373" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="226.94" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="709" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="719.5" ></text>
</g>
<g >
<title>__schedule (680,663,654 samples, 0.07%)</title><rect x="1175.3" y="1509" width="0.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1178.34" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1381" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1391.5" ></text>
</g>
<g >
<title>dequeue_entity (324,476,755 samples, 0.04%)</title><rect x="500.0" y="1365" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="503.04" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1189" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1199.5" >std..</text>
</g>
<g >
<title>__slab_free (136,578,927 samples, 0.02%)</title><rect x="1078.9" y="1429" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1081.93" y="1439.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (265,264,953 samples, 0.03%)</title><rect x="853.7" y="1093" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="856.68" y="1103.5" ></text>
</g>
<g >
<title>revert_creds (242,725,031 samples, 0.03%)</title><rect x="348.6" y="1381" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="351.57" y="1391.5" ></text>
</g>
<g >
<title>do_accept (1,596,267,585 samples, 0.18%)</title><rect x="1172.3" y="1557" width="2.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1175.30" y="1567.5" ></text>
</g>
<g >
<title>pollwake (2,062,760,814 samples, 0.23%)</title><rect x="729.8" y="1189" width="2.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="732.84" y="1199.5" ></text>
</g>
<g >
<title>rcu_core (328,051,197 samples, 0.04%)</title><rect x="139.5" y="1509" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="142.51" y="1519.5" ></text>
</g>
<g >
<title>rcu_do_batch (140,573,440 samples, 0.02%)</title><rect x="530.6" y="1493" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="533.63" y="1503.5" ></text>
</g>
<g >
<title>psi_group_change (91,660,723 samples, 0.01%)</title><rect x="1133.3" y="1397" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1136.30" y="1407.5" ></text>
</g>
<g >
<title>default_wake_function (1,659,043,521 samples, 0.18%)</title><rect x="730.3" y="1173" width="2.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="733.30" y="1183.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (88,702,226 samples, 0.01%)</title><rect x="1072.4" y="1429" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1075.39" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="261" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,223,493,538 samples, 0.24%)</title><rect x="163.9" y="1605" width="2.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="166.85" y="1615.5" ></text>
</g>
<g >
<title>enqueue_entity (110,804,747 samples, 0.01%)</title><rect x="1133.1" y="1397" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1136.13" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1157" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="1167.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (255,970,314 samples, 0.03%)</title><rect x="632.8" y="1573" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="635.76" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="805" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="815.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (89,701,043 samples, 0.01%)</title><rect x="495.8" y="1461" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="498.76" y="1471.5" ></text>
</g>
<g >
<title>schedule (1,373,121,127 samples, 0.15%)</title><rect x="582.4" y="1525" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="585.42" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="341" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="351.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (671,368,546 samples, 0.07%)</title><rect x="169.5" y="965" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="975.5" ></text>
</g>
<g >
<title>wake_affine (278,058,873 samples, 0.03%)</title><rect x="1060.7" y="1493" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1063.74" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,412,222,394 samples, 0.49%)</title><rect x="357.3" y="1509" width="5.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="360.32" y="1519.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (395,779,268 samples, 0.04%)</title><rect x="591.1" y="1493" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="594.08" y="1503.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (1,536,023,863 samples, 0.17%)</title><rect x="770.2" y="1525" width="2.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="773.20" y="1535.5" ></text>
</g>
<g >
<title>send_to_group (4,153,996,419 samples, 0.46%)</title><rect x="727.4" y="1301" width="5.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="730.40" y="1311.5" ></text>
</g>
<g >
<title>fprintf (79,453,594 samples, 0.01%)</title><rect x="786.9" y="1541" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="789.91" y="1551.5" ></text>
</g>
<g >
<title>pick_next_entity (131,709,971 samples, 0.01%)</title><rect x="1064.2" y="1493" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1067.18" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="901" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1525" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1535.5" ></text>
</g>
<g >
<title>__count_memcg_events (246,710,468 samples, 0.03%)</title><rect x="735.5" y="1125" width="0.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="738.51" y="1135.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (1,947,338,314 samples, 0.21%)</title><rect x="652.7" y="1589" width="2.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="655.72" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (244,188,374 samples, 0.03%)</title><rect x="169.5" y="117" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.53" y="127.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (123,319,848 samples, 0.01%)</title><rect x="1074.0" y="1365" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1076.99" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (235,091,769 samples, 0.03%)</title><rect x="395.3" y="53" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="398.27" y="63.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (294,888,364 samples, 0.03%)</title><rect x="1030.7" y="1621" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1033.69" y="1631.5" ></text>
</g>
<g >
<title>execute_command_internal (115,507,221 samples, 0.01%)</title><rect x="854.7" y="1477" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="857.68" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (144,706,782 samples, 0.02%)</title><rect x="339.1" y="1365" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="342.14" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (441,968,084 samples, 0.05%)</title><rect x="1171.3" y="1621" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1174.33" y="1631.5" ></text>
</g>
<g >
<title>operator new (96,065,755 samples, 0.01%)</title><rect x="170.1" y="101" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="173.09" y="111.5" ></text>
</g>
<g >
<title>kmem_cache_free (83,910,125 samples, 0.01%)</title><rect x="589.8" y="1461" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="592.83" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (1,321,626,214 samples, 0.15%)</title><rect x="466.9" y="69" width="1.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="469.95" y="79.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (631,984,635 samples, 0.07%)</title><rect x="496.6" y="1445" width="0.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="499.57" y="1455.5" ></text>
</g>
<g >
<title>filename_lookup (4,857,484,529 samples, 0.54%)</title><rect x="344.4" y="1445" width="6.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="347.44" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="677" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,814,815,084 samples, 11.55%)</title><rect x="190.4" y="1317" width="136.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="193.42" y="1327.5" >std::__detail::_E..</text>
</g>
<g >
<title>[perf-2703.map] (115,874,221 samples, 0.01%)</title><rect x="168.0" y="1621" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="171.04" y="1631.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (1,783,799,064 samples, 0.20%)</title><rect x="789.5" y="1605" width="2.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="792.53" y="1615.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (108,639,755 samples, 0.01%)</title><rect x="504.5" y="1253" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="507.45" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="357" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="367.5" >std..</text>
</g>
<g >
<title>_find_next_zero_bit (130,592,335 samples, 0.01%)</title><rect x="581.0" y="1541" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="584.03" y="1551.5" ></text>
</g>
<g >
<title>schedule (1,132,479,794 samples, 0.12%)</title><rect x="75.7" y="1541" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.74" y="1551.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (6,994,263,825 samples, 0.77%)</title><rect x="1067.8" y="1589" width="9.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1070.81" y="1599.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (623,225,723 samples, 0.07%)</title><rect x="743.3" y="1157" width="0.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="746.33" y="1167.5" ></text>
</g>
<g >
<title>i_callback (557,055,265 samples, 0.06%)</title><rect x="1078.8" y="1477" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1081.80" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,158,057,659 samples, 0.90%)</title><rect x="204.1" y="293" width="10.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="207.09" y="303.5" ></text>
</g>
<g >
<title>remove_wait_queue (530,388,846 samples, 0.06%)</title><rect x="370.0" y="1477" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="372.96" y="1487.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (146,280,294 samples, 0.02%)</title><rect x="1067.6" y="1589" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1070.62" y="1599.5" ></text>
</g>
<g >
<title>[bash] (112,476,717 samples, 0.01%)</title><rect x="855.0" y="1365" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="857.99" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (122,478,241 samples, 0.01%)</title><rect x="479.5" y="101" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="482.52" y="111.5" ></text>
</g>
<g >
<title>menu_select (320,775,627 samples, 0.04%)</title><rect x="596.7" y="1525" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="599.68" y="1535.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (418,288,345 samples, 0.05%)</title><rect x="85.0" y="1445" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="88.01" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="917" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="927.5" ></text>
</g>
<g >
<title>ext4_writepages (573,167,647 samples, 0.06%)</title><rect x="83.3" y="1429" width="0.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="86.33" y="1439.5" ></text>
</g>
<g >
<title>local_clock_noinstr (163,007,400 samples, 0.02%)</title><rect x="1095.8" y="1493" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1098.80" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="821" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="831.5" >st..</text>
</g>
<g >
<title>_raw_spin_lock (146,377,143 samples, 0.02%)</title><rect x="70.4" y="1525" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="73.39" y="1535.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (134,519,701 samples, 0.01%)</title><rect x="1074.3" y="1397" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1077.34" y="1407.5" ></text>
</g>
<g >
<title>[bash] (112,476,717 samples, 0.01%)</title><rect x="855.0" y="1429" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="857.99" y="1439.5" ></text>
</g>
<g >
<title>psi_group_change (497,504,665 samples, 0.05%)</title><rect x="1055.6" y="1477" width="0.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1058.58" y="1487.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (298,952,579 samples, 0.03%)</title><rect x="140.3" y="1493" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="143.27" y="1503.5" ></text>
</g>
<g >
<title>__fget_light (166,378,853 samples, 0.02%)</title><rect x="581.5" y="1557" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="584.52" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1125" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="1135.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (142,611,415 samples, 0.02%)</title><rect x="604.1" y="1621" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="607.07" y="1631.5" ></text>
</g>
<g >
<title>os_xsave (81,872,384 samples, 0.01%)</title><rect x="502.0" y="1525" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="505.00" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="661" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="671.5" ></text>
</g>
<g >
<title>__do_softirq (388,085,077 samples, 0.04%)</title><rect x="1180.9" y="1541" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1183.85" y="1551.5" ></text>
</g>
<g >
<title>seq_read (125,137,069 samples, 0.01%)</title><rect x="502.8" y="1429" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="505.82" y="1439.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (649,113,664 samples, 0.07%)</title><rect x="79.3" y="1445" width="0.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="82.33" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (29,521,593,011 samples, 3.25%)</title><rect x="430.4" y="85" width="38.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="433.35" y="95.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (85,133,485,465 samples, 9.38%)</title><rect x="192.7" y="1157" width="110.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="195.65" y="1167.5" >std::__detail..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (84,970,932,945 samples, 9.36%)</title><rect x="192.8" y="1141" width="110.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="195.83" y="1151.5" >std::__detail..</text>
</g>
<g >
<title>sched_ttwu_pending (1,288,146,631 samples, 0.14%)</title><rect x="597.2" y="1525" width="1.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="600.21" y="1535.5" ></text>
</g>
<g >
<title>new_slab (224,216,563 samples, 0.02%)</title><rect x="1038.3" y="1445" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1041.26" y="1455.5" ></text>
</g>
<g >
<title>wake_up_q (218,587,126 samples, 0.02%)</title><rect x="136.5" y="1541" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="139.49" y="1551.5" ></text>
</g>
<g >
<title>write (14,930,584,689 samples, 1.64%)</title><rect x="725.6" y="1429" width="19.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="728.56" y="1439.5" ></text>
</g>
<g >
<title>ext4_da_write_end (147,062,565 samples, 0.02%)</title><rect x="504.5" y="1285" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="507.45" y="1295.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (454,132,351 samples, 0.05%)</title><rect x="1080.0" y="1541" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1083.03" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1045" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="1055.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="229" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="239.5" >std..</text>
</g>
<g >
<title>make_vfsuid (103,026,913 samples, 0.01%)</title><rect x="352.4" y="1365" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="355.39" y="1375.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (574,492,737 samples, 0.06%)</title><rect x="503.9" y="1317" width="0.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="506.91" y="1327.5" ></text>
</g>
<g >
<title>process_one_work (812,705,699 samples, 0.09%)</title><rect x="83.0" y="1557" width="1.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="86.02" y="1567.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (280,289,575 samples, 0.03%)</title><rect x="604.3" y="1621" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="607.25" y="1631.5" ></text>
</g>
<g >
<title>_raw_spin_lock (168,330,643 samples, 0.02%)</title><rect x="1048.4" y="1557" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1051.41" y="1567.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (88,003,918 samples, 0.01%)</title><rect x="1070.8" y="1541" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1073.82" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (380,443,959 samples, 0.04%)</title><rect x="738.3" y="1125" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="741.29" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1045" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="1055.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (420,738,145 samples, 0.05%)</title><rect x="1043.7" y="1461" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1046.67" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="405" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="415.5" >st..</text>
</g>
<g >
<title>ValidateChunkAMD64 (109,365,620 samples, 0.01%)</title><rect x="761.6" y="1509" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="764.61" y="1519.5" ></text>
</g>
<g >
<title>rcu_core (97,716,865 samples, 0.01%)</title><rect x="1131.2" y="1333" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1134.18" y="1343.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (285,140,641 samples, 0.03%)</title><rect x="616.1" y="1605" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="619.12" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="821" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="831.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (79,556,471 samples, 0.01%)</title><rect x="366.1" y="1477" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="369.09" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1365" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="149" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="741" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (77,041,095 samples, 0.01%)</title><rect x="277.5" y="853" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="280.54" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,303,728 samples, 0.02%)</title><rect x="317.6" y="1173" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="320.63" y="1183.5" ></text>
</g>
<g >
<title>rcu_core (309,151,356 samples, 0.03%)</title><rect x="1181.9" y="1397" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1184.87" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (185,639,545 samples, 0.02%)</title><rect x="169.8" y="117" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="172.85" y="127.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait (2,747,638,996 samples, 0.30%)</title><rect x="498.6" y="1557" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="501.56" y="1567.5" ></text>
</g>
<g >
<title>psi_task_switch (153,298,343 samples, 0.02%)</title><rect x="583.9" y="1493" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="586.92" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_free (98,163,757 samples, 0.01%)</title><rect x="1075.2" y="1477" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1078.16" y="1487.5" ></text>
</g>
<g >
<title>pick_next_task (1,410,944,293 samples, 0.16%)</title><rect x="1063.6" y="1525" width="1.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1066.64" y="1535.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,106,874,273 samples, 0.34%)</title><rect x="530.8" y="1621" width="4.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="533.83" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="613" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="623.5" >st..</text>
</g>
<g >
<title>sched_clock_cpu (85,208,923 samples, 0.01%)</title><rect x="493.4" y="1365" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="496.43" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="597" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="607.5" ></text>
</g>
<g >
<title>file_free_rcu (126,464,063 samples, 0.01%)</title><rect x="1181.9" y="1365" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1184.91" y="1375.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (5,371,086,345 samples, 0.59%)</title><rect x="140.0" y="1621" width="7.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="143.02" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,641,590,995 samples, 0.18%)</title><rect x="428.2" y="69" width="2.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="79.5" ></text>
</g>
<g >
<title>alloc_inode (550,395,925 samples, 0.06%)</title><rect x="1172.6" y="1509" width="0.8" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1175.64" y="1519.5" ></text>
</g>
<g >
<title>start_kernel (923,849,425 samples, 0.10%)</title><rect x="105.1" y="1573" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="108.09" y="1583.5" ></text>
</g>
<g >
<title>futex_q_lock (519,803,543 samples, 0.06%)</title><rect x="1057.2" y="1525" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1060.15" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (84,446,197,765 samples, 9.30%)</title><rect x="193.5" y="1109" width="109.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="196.47" y="1119.5" >std::__detail..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1365" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1237" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="645" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1445" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1455.5" ></text>
</g>
<g >
<title>rcu_do_batch (328,051,197 samples, 0.04%)</title><rect x="139.5" y="1493" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="142.51" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="997" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="1007.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (981,320,979 samples, 0.11%)</title><rect x="144.1" y="1557" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="147.13" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (463,914,834 samples, 0.05%)</title><rect x="338.7" y="1381" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="341.72" y="1391.5" ></text>
</g>
<g >
<title>__do_softirq (325,623,088 samples, 0.04%)</title><rect x="1181.9" y="1429" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1184.87" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1557" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1567.5" ></text>
</g>
<g >
<title>operator delete@plt (81,774,360 samples, 0.01%)</title><rect x="177.1" y="1525" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="180.07" y="1535.5" ></text>
</g>
<g >
<title>ct_idle_exit (276,102,561 samples, 0.03%)</title><rect x="1085.6" y="1493" width="0.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1088.62" y="1503.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (269,922,007 samples, 0.03%)</title><rect x="369.3" y="1397" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="372.26" y="1407.5" ></text>
</g>
<g >
<title>update_cfs_group (264,019,776 samples, 0.03%)</title><rect x="1052.8" y="1445" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1055.76" y="1455.5" ></text>
</g>
<g >
<title>drop_buffers.constprop.0 (216,798,125 samples, 0.02%)</title><rect x="850.8" y="1141" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="853.80" y="1151.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (197,464,115 samples, 0.02%)</title><rect x="731.1" y="1141" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="734.07" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="597" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="607.5" >std..</text>
</g>
<g >
<title>try_to_unlazy (159,306,497 samples, 0.02%)</title><rect x="344.8" y="1397" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="347.79" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,010,116,457 samples, 0.33%)</title><rect x="424.0" y="181" width="3.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1173" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.40" y="1183.5" ></text>
</g>
<g >
<title>run_ksoftirqd (654,032,903 samples, 0.07%)</title><rect x="82.1" y="1557" width="0.9" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="85.14" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,017,721,252 samples, 0.11%)</title><rect x="321.9" y="1253" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="324.89" y="1263.5" ></text>
</g>
<g >
<title>folio_end_writeback (142,381,393 samples, 0.02%)</title><rect x="83.1" y="1493" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="86.14" y="1503.5" ></text>
</g>
<g >
<title>clock_gettime (4,126,609,108 samples, 0.45%)</title><rect x="662.2" y="1525" width="5.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="665.17" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_reflect (218,812,571 samples, 0.02%)</title><rect x="1186.1" y="1541" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1189.07" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="181" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="191.5" ></text>
</g>
<g >
<title>copy_page_range (189,734,921 samples, 0.02%)</title><rect x="168.6" y="1333" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="171.56" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1557" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1567.5" ></text>
</g>
<g >
<title>copy_pte_range (160,356,721 samples, 0.02%)</title><rect x="168.6" y="1301" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="171.60" y="1311.5" ></text>
</g>
<g >
<title>alloc_fd (175,287,827 samples, 0.02%)</title><rect x="1046.1" y="1541" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1049.11" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1205" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1215.5" >st..</text>
</g>
<g >
<title>cpuidle_idle_call (398,994,925 samples, 0.04%)</title><rect x="1189.0" y="1493" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.04" y="1503.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (148,053,545 samples, 0.02%)</title><rect x="728.5" y="1221" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="731.46" y="1231.5" ></text>
</g>
<g >
<title>alloc_inode (879,975,806 samples, 0.10%)</title><rect x="67.5" y="1493" width="1.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="70.51" y="1503.5" ></text>
</g>
<g >
<title>down_write (79,665,182 samples, 0.01%)</title><rect x="80.5" y="1445" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="83.49" y="1455.5" ></text>
</g>
<g >
<title>map_id_range_down (79,935,312 samples, 0.01%)</title><rect x="1037.3" y="1461" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1040.34" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,050,600,105 samples, 0.12%)</title><rect x="286.5" y="933" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="289.50" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="597" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="607.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (619,276,025 samples, 0.07%)</title><rect x="589.6" y="1621" width="0.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="592.63" y="1631.5" ></text>
</g>
<g >
<title>execute_command (92,908,823 samples, 0.01%)</title><rect x="854.8" y="1349" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="857.83" y="1359.5" ></text>
</g>
<g >
<title>iput (212,862,551 samples, 0.02%)</title><rect x="530.0" y="1445" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="532.97" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (157,509,147 samples, 0.02%)</title><rect x="468.7" y="85" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="471.72" y="95.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (186,287,790 samples, 0.02%)</title><rect x="1173.7" y="1477" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1176.72" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_accept (1,882,249,216 samples, 0.21%)</title><rect x="1172.2" y="1589" width="2.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1175.21" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,491,593,646 samples, 0.49%)</title><rect x="277.8" y="901" width="5.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="280.81" y="911.5" ></text>
</g>
<g >
<title>exec_mmap (192,085,965 samples, 0.02%)</title><rect x="503.2" y="1461" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="506.17" y="1471.5" ></text>
</g>
<g >
<title>cfree (1,324,267,453 samples, 0.15%)</title><rect x="305.7" y="1141" width="1.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="308.75" y="1151.5" ></text>
</g>
<g >
<title>kmem_cache_free (306,794,916 samples, 0.03%)</title><rect x="1084.0" y="1349" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1086.96" y="1359.5" ></text>
</g>
<g >
<title>rcu_core_si (108,120,366 samples, 0.01%)</title><rect x="596.4" y="1397" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="599.41" y="1407.5" ></text>
</g>
<g >
<title>run_ksoftirqd (140,573,440 samples, 0.02%)</title><rect x="530.6" y="1557" width="0.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="533.63" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,416,548 samples, 0.03%)</title><rect x="332.3" y="1317" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="335.27" y="1327.5" ></text>
</g>
<g >
<title>fput (628,502,964 samples, 0.07%)</title><rect x="494.0" y="1461" width="0.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="496.97" y="1471.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (91,400,857 samples, 0.01%)</title><rect x="77.1" y="1461" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="80.06" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="501" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.40" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_write (14,386,401,531 samples, 1.58%)</title><rect x="726.1" y="1381" width="18.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="729.14" y="1391.5" ></text>
</g>
<g >
<title>ret_from_fork (399,396,586 samples, 0.04%)</title><rect x="1180.9" y="1605" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1183.85" y="1615.5" ></text>
</g>
<g >
<title>futex_wait_setup (250,952,690 samples, 0.03%)</title><rect x="73.7" y="1525" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="76.66" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (427,180,172 samples, 0.05%)</title><rect x="169.8" y="133" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="172.85" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1589" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1013" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="1023.5" ></text>
</g>
<g >
<title>__sys_accept4 (134,078,135 samples, 0.01%)</title><rect x="1135.4" y="1573" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1138.41" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,760,983,564 samples, 0.74%)</title><rect x="1171.9" y="1621" width="8.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1174.90" y="1631.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,798,486,242 samples, 0.20%)</title><rect x="851.9" y="1109" width="2.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="854.88" y="1119.5" ></text>
</g>
<g >
<title>operator new (135,975,169 samples, 0.01%)</title><rect x="339.6" y="1381" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="342.64" y="1391.5" ></text>
</g>
<g >
<title>dequeue_task (253,953,335 samples, 0.03%)</title><rect x="1175.5" y="1493" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1178.54" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (119,318,170,418 samples, 13.14%)</title><rect x="185.4" y="1493" width="155.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="188.37" y="1503.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>futex_wake (115,489,478 samples, 0.01%)</title><rect x="1135.8" y="1557" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1138.81" y="1567.5" ></text>
</g>
<g >
<title>__dentry_kill (218,743,865 samples, 0.02%)</title><rect x="1136.0" y="1477" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1138.96" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1285" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1295.5" >st..</text>
</g>
<g >
<title>do_epoll_wait (110,964,025 samples, 0.01%)</title><rect x="1046.7" y="1573" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1049.68" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (124,972,293 samples, 0.01%)</title><rect x="1077.1" y="1621" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1080.13" y="1631.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (81,413,115 samples, 0.01%)</title><rect x="1074.2" y="1397" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1077.18" y="1407.5" ></text>
</g>
<g >
<title>wake_up_q (1,552,371,962 samples, 0.17%)</title><rect x="1059.6" y="1541" width="2.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1062.59" y="1551.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (754,454,354 samples, 0.08%)</title><rect x="735.3" y="1157" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="738.30" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="853" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.61" y="863.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (4,936,062,388 samples, 0.54%)</title><rect x="356.7" y="1541" width="6.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="359.68" y="1551.5" ></text>
</g>
<g >
<title>ttwu_do_activate (3,549,011,111 samples, 0.39%)</title><rect x="1116.2" y="1509" width="4.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1119.25" y="1519.5" ></text>
</g>
<g >
<title>operator new (83,027,204 samples, 0.01%)</title><rect x="311.1" y="1125" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="314.07" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (385,677,545 samples, 0.04%)</title><rect x="235.4" y="437" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="238.38" y="447.5" ></text>
</g>
<g >
<title>__d_alloc (182,382,428 samples, 0.02%)</title><rect x="1174.0" y="1493" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1177.00" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (437,239,527 samples, 0.05%)</title><rect x="276.0" y="805" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="278.99" y="815.5" ></text>
</g>
<g >
<title>do_sched_yield (1,300,631,422 samples, 0.14%)</title><rect x="75.5" y="1557" width="1.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="78.53" y="1567.5" ></text>
</g>
<g >
<title>call_rcu (218,743,865 samples, 0.02%)</title><rect x="1136.0" y="1397" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1138.96" y="1407.5" ></text>
</g>
<g >
<title>NaClLog (187,501,774 samples, 0.02%)</title><rect x="765.6" y="1573" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="768.63" y="1583.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (415,724,030 samples, 0.05%)</title><rect x="168.5" y="1605" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="171.53" y="1615.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (258,948,961 samples, 0.03%)</title><rect x="1113.2" y="1461" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1116.20" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="677" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="341" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="351.5" ></text>
</g>
<g >
<title>do_futex (286,975,567 samples, 0.03%)</title><rect x="1135.6" y="1573" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1138.59" y="1583.5" ></text>
</g>
<g >
<title>inotify_poll (356,322,109 samples, 0.04%)</title><rect x="487.1" y="1445" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="490.05" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (94,384,414 samples, 0.01%)</title><rect x="227.2" y="341" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="230.25" y="351.5" ></text>
</g>
<g >
<title>memcpy@plt (148,102,946 samples, 0.02%)</title><rect x="772.5" y="1541" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="775.45" y="1551.5" ></text>
</g>
<g >
<title>kthread (193,638,728 samples, 0.02%)</title><rect x="1136.2" y="1589" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1139.25" y="1599.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (192,477,948 samples, 0.02%)</title><rect x="836.7" y="1605" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="839.67" y="1615.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (2,280,874,110 samples, 0.25%)</title><rect x="170.4" y="1589" width="3.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="173.40" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (77,993,812 samples, 0.01%)</title><rect x="249.0" y="597" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="251.95" y="607.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (17,091,525,631 samples, 1.88%)</title><rect x="84.1" y="1621" width="22.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="87.07" y="1631.5" >s..</text>
</g>
<g >
<title>rcu_core (1,251,907,661 samples, 0.14%)</title><rect x="1083.6" y="1397" width="1.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1086.58" y="1407.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (144,360,344 samples, 0.02%)</title><rect x="79.7" y="1333" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="82.66" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="613" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="431.22" y="623.5" >std..</text>
</g>
<g >
<title>dentry_unlink_inode (218,743,865 samples, 0.02%)</title><rect x="1136.0" y="1461" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1138.96" y="1471.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (283,550,996 samples, 0.03%)</title><rect x="140.3" y="1445" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="143.28" y="1455.5" ></text>
</g>
<g >
<title>__fdget_raw (241,481,958 samples, 0.03%)</title><rect x="70.7" y="1557" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="73.71" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,875,021,869 samples, 0.32%)</title><rect x="377.6" y="1157" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="380.61" y="1167.5" ></text>
</g>
<g >
<title>[[vdso]] (196,754,735 samples, 0.02%)</title><rect x="836.9" y="1605" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="839.92" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead@plt (146,386,263 samples, 0.02%)</title><rect x="471.3" y="37" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="474.27" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (111,315,816 samples, 0.01%)</title><rect x="325.2" y="1237" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.18" y="1247.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (8,861,096,430 samples, 0.98%)</title><rect x="590.4" y="1621" width="11.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="593.44" y="1631.5" ></text>
</g>
<g >
<title>filemap_alloc_folio (615,135,409 samples, 0.07%)</title><rect x="737.0" y="1189" width="0.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="740.04" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (398,547,557 samples, 0.04%)</title><rect x="371.6" y="117" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.55" y="127.5" ></text>
</g>
<g >
<title>update_curr (78,748,412 samples, 0.01%)</title><rect x="500.2" y="1349" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="503.16" y="1359.5" ></text>
</g>
<g >
<title>__do_softirq (342,602,192 samples, 0.04%)</title><rect x="139.5" y="1541" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="142.49" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="789" width="31.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="395.81" y="799.5" >st..</text>
</g>
<g >
<title>operator new (1,785,822,020 samples, 0.20%)</title><rect x="420.2" y="85" width="2.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="423.23" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="245" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="255.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (671,368,546 samples, 0.07%)</title><rect x="169.5" y="1317" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="172.53" y="1327.5" ></text>
</g>
<g >
<title>kmalloc_slab (95,203,744 samples, 0.01%)</title><rect x="728.9" y="1237" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="731.91" y="1247.5" ></text>
</g>
<g >
<title>operator new (735,234,129 samples, 0.08%)</title><rect x="288.0" y="949" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="290.97" y="959.5" ></text>
</g>
<g >
<title>[libc.so.6] (138,538,026 samples, 0.02%)</title><rect x="106.7" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="109.74" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,015,249,836 samples, 0.44%)</title><rect x="204.8" y="229" width="5.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="207.80" y="239.5" ></text>
</g>
<g >
<title>update_min_vruntime (89,025,172 samples, 0.01%)</title><rect x="1065.2" y="1493" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1068.25" y="1503.5" ></text>
</g>
<g >
<title>rcu_do_batch (361,669,072 samples, 0.04%)</title><rect x="1180.9" y="1493" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1183.86" y="1503.5" ></text>
</g>
<g >
<title>new_inode_pseudo (306,400,692 samples, 0.03%)</title><rect x="525.5" y="1525" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="528.48" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (118,141,669 samples, 0.01%)</title><rect x="203.9" y="293" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="206.94" y="303.5" ></text>
</g>
<g >
<title>NaClValidateCode (109,365,620 samples, 0.01%)</title><rect x="761.6" y="1541" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="764.61" y="1551.5" ></text>
</g>
<g >
<title>rcu_do_batch (97,716,865 samples, 0.01%)</title><rect x="1131.2" y="1317" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1134.18" y="1327.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (218,743,865 samples, 0.02%)</title><rect x="1136.0" y="1573" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1138.96" y="1583.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,259,793,842 samples, 0.14%)</title><rect x="137.7" y="1589" width="1.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="140.73" y="1599.5" ></text>
</g>
<g >
<title>fput (84,608,169 samples, 0.01%)</title><rect x="1046.5" y="1573" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1049.47" y="1583.5" ></text>
</g>
<g >
<title>alloc_pages (615,135,409 samples, 0.07%)</title><rect x="737.0" y="1157" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="740.04" y="1167.5" ></text>
</g>
<g >
<title>new_slab (175,502,290 samples, 0.02%)</title><rect x="67.8" y="1429" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="70.78" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="565" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="575.5" ></text>
</g>
<g >
<title>__do_softirq (654,032,903 samples, 0.07%)</title><rect x="82.1" y="1541" width="0.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="85.14" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="1157" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="1167.5" >st..</text>
</g>
<g >
<title>psi_group_change (88,399,062 samples, 0.01%)</title><rect x="599.8" y="1525" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="602.81" y="1535.5" ></text>
</g>
<g >
<title>psi_group_change (682,983,764 samples, 0.08%)</title><rect x="492.5" y="1365" width="0.9" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="495.48" y="1375.5" ></text>
</g>
<g >
<title>__wake_up (2,506,291,028 samples, 0.28%)</title><rect x="729.4" y="1237" width="3.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="732.41" y="1247.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (83,920,018 samples, 0.01%)</title><rect x="1179.9" y="1349" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1182.88" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="629" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="639.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1461" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="1471.5" >std..</text>
</g>
<g >
<title>__schedule (741,853,904 samples, 0.08%)</title><rect x="585.6" y="1541" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="588.62" y="1551.5" ></text>
</g>
<g >
<title>__writeback_single_inode (573,167,647 samples, 0.06%)</title><rect x="83.3" y="1461" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="86.33" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,008,490,076 samples, 2.64%)</title><rect x="392.8" y="645" width="31.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="395.81" y="655.5" >st..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (246,522,547 samples, 0.03%)</title><rect x="1136.5" y="1493" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1139.50" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (838,616,388 samples, 0.09%)</title><rect x="1041.8" y="1477" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1044.79" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="501" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="511.5" ></text>
</g>
<g >
<title>kthread (399,396,586 samples, 0.04%)</title><rect x="1180.9" y="1589" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1183.85" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1461" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="1471.5" ></text>
</g>
<g >
<title>shuffle_freelist (98,420,893 samples, 0.01%)</title><rect x="738.4" y="1061" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="741.36" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,695,504 samples, 0.16%)</title><rect x="390.9" y="373" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="393.95" y="383.5" ></text>
</g>
<g >
<title>__folio_start_writeback (187,785,688 samples, 0.02%)</title><rect x="1080.8" y="1333" width="0.3" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="1083.83" y="1343.5" ></text>
</g>
<g >
<title>strlen (98,741,065 samples, 0.01%)</title><rect x="732.7" y="1269" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="735.67" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="1429" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="1439.5" ></text>
</g>
<g >
<title>ext4_setattr (9,101,053,523 samples, 1.00%)</title><rect x="842.7" y="1285" width="11.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="845.66" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,593,829,193 samples, 0.51%)</title><rect x="469.5" y="1205" width="6.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.52" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_lock (152,407,508 samples, 0.02%)</title><rect x="486.9" y="1445" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="489.85" y="1455.5" ></text>
</g>
<g >
<title>inode_permission (2,821,114,242 samples, 0.31%)</title><rect x="345.3" y="1397" width="3.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="348.31" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="949" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="427.02" y="959.5" ></text>
</g>
<g >
<title>[libc.so.6] (433,699,496 samples, 0.05%)</title><rect x="375.6" y="117" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="378.57" y="127.5" ></text>
</g>
<g >
<title>update_rq_clock (279,142,787 samples, 0.03%)</title><rect x="102.4" y="1509" width="0.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="105.42" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter (23,705,879,499 samples, 2.61%)</title><rect x="1082.9" y="1525" width="30.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1085.86" y="1535.5" >cp..</text>
</g>
<g >
<title>operator new (667,833,810 samples, 0.07%)</title><rect x="246.2" y="565" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="249.20" y="575.5" ></text>
</g>
<g >
<title>cfree (976,263,272 samples, 0.11%)</title><rect x="329.6" y="1333" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="332.60" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="645" width="6.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="374.25" y="655.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (235,059,629 samples, 0.03%)</title><rect x="1041.3" y="1445" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1044.29" y="1455.5" ></text>
</g>
<g >
<title>operator new (225,732,645 samples, 0.02%)</title><rect x="472.1" y="85" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="475.09" y="95.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1,550,469,585 samples, 0.17%)</title><rect x="597.2" y="1557" width="2.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="600.17" y="1567.5" ></text>
</g>
<g >
<title>intel_idle (86,775,287 samples, 0.01%)</title><rect x="146.6" y="1429" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="149.58" y="1439.5" ></text>
</g>
<g >
<title>HandleStackContext (345,581,631 samples, 0.04%)</title><rect x="602.2" y="1621" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="605.20" y="1631.5" ></text>
</g>
<g >
<title>update_curr (164,623,991 samples, 0.02%)</title><rect x="1177.9" y="1493" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1180.94" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (234,252,712 samples, 0.03%)</title><rect x="214.2" y="245" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="217.21" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (522,564,519 samples, 0.06%)</title><rect x="172.3" y="197" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="175.34" y="207.5" ></text>
</g>
<g >
<title>sock_alloc_file (1,211,223,804 samples, 0.13%)</title><rect x="579.4" y="1541" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="582.40" y="1551.5" ></text>
</g>
<g >
<title>do_futex (4,257,500,897 samples, 0.47%)</title><rect x="357.4" y="1461" width="5.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="360.39" y="1471.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (843,082,377 samples, 0.09%)</title><rect x="1186.7" y="1557" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1189.67" y="1567.5" ></text>
</g>
<g >
<title>try_to_wake_up (2,096,020,345 samples, 0.23%)</title><rect x="360.2" y="1413" width="2.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="363.19" y="1423.5" ></text>
</g>
<g >
<title>enqueue_entity (120,537,512 samples, 0.01%)</title><rect x="533.4" y="1461" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="536.43" y="1471.5" ></text>
</g>
<g >
<title>sync_regs (190,737,230 samples, 0.02%)</title><rect x="1137.0" y="1621" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1139.99" y="1631.5" ></text>
</g>
<g >
<title>[sleep] (329,725,266 samples, 0.04%)</title><rect x="855.6" y="1621" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="858.58" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1269" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.49" y="1279.5" ></text>
</g>
<g >
<title>ttwu_do_activate (559,544,510 samples, 0.06%)</title><rect x="1186.8" y="1509" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1189.79" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (197,330,537 samples, 0.02%)</title><rect x="772.2" y="1541" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="775.19" y="1551.5" ></text>
</g>
<g >
<title>start_kernel (649,343,478 samples, 0.07%)</title><rect x="601.1" y="1573" width="0.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="604.11" y="1583.5" ></text>
</g>
<g >
<title>rcu_core_si (342,001,531 samples, 0.04%)</title><rect x="85.0" y="1413" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="88.03" y="1423.5" ></text>
</g>
<g >
<title>arch_call_rest_init (649,343,478 samples, 0.07%)</title><rect x="601.1" y="1557" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="604.11" y="1567.5" ></text>
</g>
<g >
<title>call_cpuidle (1,284,833,742 samples, 0.14%)</title><rect x="1131.1" y="1477" width="1.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1134.12" y="1487.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (1,181,330,937 samples, 0.13%)</title><rect x="579.4" y="1525" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="582.42" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (325,753,281 samples, 0.04%)</title><rect x="326.1" y="1269" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="329.11" y="1279.5" ></text>
</g>
<g >
<title>pick_next_task (302,227,686 samples, 0.03%)</title><rect x="1177.8" y="1525" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1180.80" y="1535.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (139,958,550 samples, 0.02%)</title><rect x="1039.4" y="1445" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1042.44" y="1455.5" ></text>
</g>
<g >
<title>tcp_sendmsg (109,463,095 samples, 0.01%)</title><rect x="1178.4" y="1541" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1181.39" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,851,369,805 samples, 0.53%)</title><rect x="371.3" y="1365" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.25" y="1375.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (117,416,371 samples, 0.01%)</title><rect x="360.9" y="1397" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="363.89" y="1407.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (94,690,378 samples, 0.01%)</title><rect x="106.1" y="1477" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="109.05" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="469" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="479.5" ></text>
</g>
<g >
<title>NaClHighResolutionTimerEnabled (246,841,721 samples, 0.03%)</title><rect x="613.1" y="1605" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="616.10" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1061" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1071.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (812,416,178 samples, 0.09%)</title><rect x="764.0" y="1557" width="1.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="767.02" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,003,232,156 samples, 0.44%)</title><rect x="290.8" y="1029" width="5.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="293.85" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,752,058,255 samples, 3.50%)</title><rect x="428.2" y="1077" width="41.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="431.22" y="1087.5" >std..</text>
</g>
<g >
<title>[[vdso]] (125,740,205 samples, 0.01%)</title><rect x="502.3" y="1525" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="505.28" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,232,796,710 samples, 0.36%)</title><rect x="424.0" y="869" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.02" y="879.5" ></text>
</g>
<g >
<title>__schedule (936,259,835 samples, 0.10%)</title><rect x="499.9" y="1413" width="1.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="502.94" y="1423.5" ></text>
</g>
<g >
<title>alloc_file (1,890,812,416 samples, 0.21%)</title><rect x="1040.5" y="1509" width="2.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1043.51" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,216,318,974 samples, 0.35%)</title><rect x="475.5" y="1029" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.49" y="1039.5" ></text>
</g>
<g >
<title>__dquot_alloc_space (98,736,503 samples, 0.01%)</title><rect x="739.6" y="1141" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="742.61" y="1151.5" ></text>
</g>
<g >
<title>iput (218,743,865 samples, 0.02%)</title><rect x="1136.0" y="1445" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1138.96" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,461,100,955 samples, 1.26%)</title><rect x="482.6" y="1525" width="14.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="485.63" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,259,251,307 samples, 2.23%)</title><rect x="202.3" y="405" width="26.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="205.28" y="415.5" >s..</text>
</g>
<g >
<title>destroy_inode (729,578,052 samples, 0.08%)</title><rect x="1073.2" y="1413" width="1.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1076.22" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (73,859,473,476 samples, 8.14%)</title><rect x="194.8" y="997" width="96.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="197.84" y="1007.5" >std::__deta..</text>
</g>
</g>
</svg>
