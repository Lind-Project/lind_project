<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1622" onload="init(evt)" viewBox="0 0 1200 1622" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1622.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1605" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1605" > </text>
<g id="frames">
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (246,775,021 samples, 0.01%)</title><rect x="12.0" y="709" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="719.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1,825,055,077 samples, 0.07%)</title><rect x="135.2" y="1253" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="138.23" y="1263.5" ></text>
</g>
<g >
<title>NaClSysSelect (2,647,474,436,282 samples, 95.28%)</title><rect x="41.8" y="1493" width="1124.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="44.84" y="1503.5" >NaClSysSelect</text>
</g>
<g >
<title>node::Environment::RunAndClearNativeImmediates (250,100,093 samples, 0.01%)</title><rect x="13.2" y="1381" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="16.20" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (1,135,461,908 samples, 0.04%)</title><rect x="91.9" y="1317" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="94.85" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1509" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.70" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="181" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="191.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (3,689,444,627 samples, 0.13%)</title><rect x="36.2" y="1445" width="1.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="39.19" y="1455.5" ></text>
</g>
<g >
<title>execute_command_internal (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1445" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="13.70" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (376,685,040,598 samples, 13.56%)</title><rect x="226.1" y="1365" width="159.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="229.06" y="1375.5" >core::sync::atomic::..</text>
</g>
<g >
<title>[unknown] (1,880,439,961 samples, 0.07%)</title><rect x="12.0" y="1541" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.97" y="1551.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (247,341,213 samples, 0.01%)</title><rect x="19.5" y="1493" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="22.46" y="1503.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (409,645,325,206 samples, 14.74%)</title><rect x="653.3" y="1397" width="173.9" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="656.27" y="1407.5" >lock_api::rwlock::RwLo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="597" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="607.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7,947,444,041 samples, 0.29%)</title><rect x="831.9" y="1365" width="3.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="834.91" y="1375.5" ></text>
</g>
<g >
<title>CompareAndSwap (11,009,162,008 samples, 0.40%)</title><rect x="26.7" y="1493" width="4.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="29.69" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (547,041,440,160 samples, 19.69%)</title><rect x="881.1" y="1349" width="232.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="884.14" y="1359.5" >do_syscall_64</text>
</g>
<g >
<title>restore_fpregs_from_fpstate (2,073,340,197 samples, 0.07%)</title><rect x="195.8" y="1301" width="0.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="198.76" y="1311.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (25,591,132,347 samples, 0.92%)</title><rect x="207.2" y="1397" width="10.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="210.21" y="1407.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (246,828,496 samples, 0.01%)</title><rect x="415.5" y="1317" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="418.51" y="1327.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (7,158,471,935 samples, 0.26%)</title><rect x="38.6" y="1493" width="3.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="41.57" y="1503.5" ></text>
</g>
<g >
<title>exit_mmap (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1333" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="16.33" y="1343.5" ></text>
</g>
<g >
<title>__rust_dealloc (345,570,777 samples, 0.01%)</title><rect x="479.1" y="1317" width="0.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="482.06" y="1327.5" ></text>
</g>
<g >
<title>_start (365,801,448 samples, 0.01%)</title><rect x="1188.3" y="1541" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1191.30" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="533" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="389" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="399.5" ></text>
</g>
<g >
<title>call_cpuidle (1,302,099,496 samples, 0.05%)</title><rect x="1189.1" y="1461" width="0.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1192.06" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (246,775,021 samples, 0.01%)</title><rect x="12.0" y="693" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="703.5" ></text>
</g>
<g >
<title>native_sched_clock (740,505,010 samples, 0.03%)</title><rect x="175.1" y="1237" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="178.10" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (297,399,658 samples, 0.01%)</title><rect x="32.2" y="1429" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="35.20" y="1439.5" ></text>
</g>
<g >
<title>node::LoadSnapshotDataAndRun (299,464,084 samples, 0.01%)</title><rect x="13.2" y="1477" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="16.18" y="1487.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,135,437,557 samples, 0.04%)</title><rect x="729.5" y="1285" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="732.55" y="1295.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::TRUSTED_SIGNAL_FLAG::__getit (1,735,684,160 samples, 0.06%)</title><rect x="206.2" y="1349" width="0.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="209.24" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1141" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="437" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="447.5" ></text>
</g>
<g >
<title>__memset (22,806,387,822 samples, 0.82%)</title><rect x="886.8" y="1301" width="9.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="889.84" y="1311.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (1,052,296,973 samples, 0.04%)</title><rect x="12.0" y="1525" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="14.99" y="1535.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (987,285,172 samples, 0.04%)</title><rect x="181.2" y="1301" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="184.24" y="1311.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1,733,457,798 samples, 0.06%)</title><rect x="11.1" y="1525" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="14.11" y="1535.5" ></text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (177,647,582,882 samples, 6.39%)</title><rect x="654.7" y="1365" width="75.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="657.67" y="1375.5" >parking_..</text>
</g>
<g >
<title>uv__fs_work (296,204,883 samples, 0.01%)</title><rect x="12.9" y="1493" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="15.89" y="1503.5" ></text>
</g>
<g >
<title>vfs_fstatat (283,234,224 samples, 0.01%)</title><rect x="12.3" y="1397" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="15.27" y="1407.5" ></text>
</g>
<g >
<title>get_timespec64 (888,544,009 samples, 0.03%)</title><rect x="1104.1" y="1317" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1107.10" y="1327.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1,777,127,227 samples, 0.06%)</title><rect x="1112.7" y="1317" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1115.69" y="1327.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,727,756,806 samples, 0.06%)</title><rect x="392.6" y="1381" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="395.62" y="1391.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1493" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="16.33" y="1503.5" ></text>
</g>
<g >
<title>__handle_mm_fault (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1237" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.70" y="1247.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (493,630,210 samples, 0.02%)</title><rect x="1166.2" y="1317" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1169.22" y="1327.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (246,797,376 samples, 0.01%)</title><rect x="13.8" y="1237" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="16.78" y="1247.5" ></text>
</g>
<g >
<title>copy_process (1,480,775,337 samples, 0.05%)</title><rect x="11.1" y="1301" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="14.11" y="1311.5" ></text>
</g>
<g >
<title>__libc_fork (1,481,012,267 samples, 0.05%)</title><rect x="11.1" y="1413" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="14.11" y="1423.5" ></text>
</g>
<g >
<title>rustposix::interface::types::FdSet::is_empty::{{closure}} (1,431,485,459 samples, 0.05%)</title><rect x="836.1" y="1365" width="0.6" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="839.08" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="549" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="559.5" ></text>
</g>
<g >
<title>copy_pte_range (1,184,667,116 samples, 0.04%)</title><rect x="11.2" y="1221" width="0.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="14.21" y="1231.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (356,824,773,915 samples, 12.84%)</title><rect x="501.7" y="1381" width="151.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="504.74" y="1391.5" >&lt;lock_api::rwlock::..</text>
</g>
<g >
<title>exec_binprm (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1445" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="16.33" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (40,043,853,586 samples, 1.44%)</title><rect x="484.7" y="1333" width="17.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="487.73" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (271,895,696 samples, 0.01%)</title><rect x="10.1" y="1445" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.11" y="1455.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,760,609,525 samples, 0.06%)</title><rect x="1189.1" y="1509" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1192.06" y="1519.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (3,257,916,339 samples, 0.12%)</title><rect x="193.5" y="1317" width="1.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="196.50" y="1327.5" ></text>
</g>
<g >
<title>switch_fpu_return (2,912,572,846 samples, 0.10%)</title><rect x="195.4" y="1317" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="198.42" y="1327.5" ></text>
</g>
<g >
<title>cpuacct_charge (641,688,421 samples, 0.02%)</title><rect x="136.0" y="1253" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="139.04" y="1263.5" ></text>
</g>
<g >
<title>native_sched_clock (8,687,023,285 samples, 0.31%)</title><rect x="175.5" y="1221" width="3.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="178.52" y="1231.5" ></text>
</g>
<g >
<title>update_curr (2,610,940,661 samples, 0.09%)</title><rect x="165.0" y="1269" width="1.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="167.96" y="1279.5" ></text>
</g>
<g >
<title>sendto (592,317,834 samples, 0.02%)</title><rect x="1166.2" y="1429" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1169.17" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock (55,569,300,806 samples, 2.00%)</title><rect x="68.3" y="1317" width="23.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="71.26" y="1327.5" >_..</text>
</g>
<g >
<title>[libc.so.6] (271,895,696 samples, 0.01%)</title><rect x="10.1" y="1509" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.11" y="1519.5" ></text>
</g>
<g >
<title>__alloc_pages (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1157" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="13.70" y="1167.5" ></text>
</g>
<g >
<title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (543,102,671 samples, 0.02%)</title><rect x="17.1" y="1429" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="20.13" y="1439.5" ></text>
</g>
<g >
<title>check_stack_object (3,011,124,932 samples, 0.11%)</title><rect x="929.3" y="1269" width="1.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="932.29" y="1279.5" ></text>
</g>
<g >
<title>core::cmp::PartialOrd::gt (296,267,714 samples, 0.01%)</title><rect x="46.0" y="1413" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.96" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (9,619,177,686 samples, 0.35%)</title><rect x="201.7" y="1381" width="4.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="204.69" y="1391.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1,234,219,311 samples, 0.04%)</title><rect x="38.0" y="1493" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="40.98" y="1503.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (354,553,860,842 samples, 12.76%)</title><rect x="502.7" y="1349" width="150.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="505.70" y="1359.5" >core::sync::atomic:..</text>
</g>
<g >
<title>bprm_execve (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1477" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="16.33" y="1487.5" ></text>
</g>
<g >
<title>get_user_pages_remote (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1285" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.70" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (395,896,016 samples, 0.01%)</title><rect x="12.0" y="1237" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.04" y="1247.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (888,648,157 samples, 0.03%)</title><rect x="31.8" y="1509" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="34.80" y="1519.5" ></text>
</g>
<g >
<title>sshd (592,386,974 samples, 0.02%)</title><rect x="1188.6" y="1557" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1191.64" y="1567.5" ></text>
</g>
<g >
<title>zap_pte_range (684,355,688 samples, 0.02%)</title><rect x="13.6" y="1253" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="16.59" y="1263.5" ></text>
</g>
<g >
<title>__calc_delta (11,546,614,454 samples, 0.42%)</title><rect x="149.6" y="1237" width="4.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="152.58" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1381" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1391.5" ></text>
</g>
<g >
<title>amd_clear_divider (739,636,485 samples, 0.03%)</title><rect x="185.6" y="1349" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="188.59" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,875,737,667 samples, 0.07%)</title><rect x="15.1" y="1525" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.08" y="1535.5" ></text>
</g>
<g >
<title>dispatcher (493,596,232 samples, 0.02%)</title><rect x="41.6" y="1461" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="44.63" y="1471.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (6,911,629,484 samples, 0.25%)</title><rect x="33.2" y="1477" width="3.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="36.23" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (246,775,021 samples, 0.01%)</title><rect x="12.0" y="805" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1221" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,661,182 samples, 0.01%)</title><rect x="12.0" y="1029" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1039.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (1,332,959,836 samples, 0.05%)</title><rect x="35.4" y="1445" width="0.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="38.39" y="1455.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt; (12,854,417,807 samples, 0.46%)</title><rect x="478.7" y="1397" width="5.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="481.73" y="1407.5" ></text>
</g>
<g >
<title>amd_clear_divider (937,792,972 samples, 0.03%)</title><rect x="1105.2" y="1333" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1108.19" y="1343.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1,382,348,333 samples, 0.05%)</title><rect x="32.5" y="1493" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="35.45" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (395,896,016 samples, 0.01%)</title><rect x="12.0" y="1205" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1215.5" ></text>
</g>
<g >
<title>sched_clock_cpu (394,931,004 samples, 0.01%)</title><rect x="167.1" y="1269" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="170.07" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,086,059,532 samples, 0.04%)</title><rect x="54.7" y="1381" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="57.70" y="1391.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (246,829,310 samples, 0.01%)</title><rect x="226.0" y="1381" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="228.96" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (592,317,834 samples, 0.02%)</title><rect x="1166.2" y="1413" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1169.17" y="1423.5" ></text>
</g>
<g >
<title>dup_mmap (1,480,775,337 samples, 0.05%)</title><rect x="11.1" y="1269" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="14.11" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="565" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="575.5" ></text>
</g>
<g >
<title>unmap_vmas (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1317" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="16.33" y="1327.5" ></text>
</g>
<g >
<title>__sched_yield (9,823,726,226 samples, 0.35%)</title><rect x="854.9" y="1381" width="4.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="857.93" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="453" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (246,828,496 samples, 0.01%)</title><rect x="415.5" y="1301" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="418.51" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1493" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1503.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1,530,200,080 samples, 0.06%)</title><rect x="390.2" y="1317" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="393.16" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (235,806,969 samples, 0.01%)</title><rect x="12.5" y="37" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="15.53" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (395,896,016 samples, 0.01%)</title><rect x="12.0" y="1285" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1295.5" ></text>
</g>
<g >
<title>aeMain (348,427,628 samples, 0.01%)</title><rect x="1189.8" y="1493" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1192.83" y="1503.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (543,010,215 samples, 0.02%)</title><rect x="390.8" y="1349" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="393.81" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_lock (16,773,227,443 samples, 0.60%)</title><rect x="113.2" y="1285" width="7.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="116.19" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="741" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="751.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (543,010,215 samples, 0.02%)</title><rect x="390.8" y="1333" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="393.81" y="1343.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (1,875,855,684 samples, 0.07%)</title><rect x="835.3" y="1381" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="838.28" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="277" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="287.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,234,089,845 samples, 0.04%)</title><rect x="387.5" y="1317" width="0.5" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="390.48" y="1327.5" ></text>
</g>
<g >
<title>libc::unix::linux_like::FD_ISSET (38,948,518,230 samples, 1.40%)</title><rect x="836.7" y="1381" width="16.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="839.69" y="1391.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12,360,810,336 samples, 0.44%)</title><rect x="478.7" y="1349" width="5.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="481.73" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1397" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1407.5" ></text>
</g>
<g >
<title>__tls_get_addr (543,044,803 samples, 0.02%)</title><rect x="1181.2" y="1525" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1184.21" y="1535.5" ></text>
</g>
<g >
<title>copy_page_range (1,382,043,222 samples, 0.05%)</title><rect x="11.1" y="1253" width="0.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="14.13" y="1263.5" ></text>
</g>
<g >
<title>__rdl_dealloc (789,875,961 samples, 0.03%)</title><rect x="478.7" y="1317" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="481.73" y="1327.5" ></text>
</g>
<g >
<title>__tls_get_addr (995,237,220 samples, 0.04%)</title><rect x="206.4" y="1285" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="209.37" y="1295.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (987,750,469 samples, 0.04%)</title><rect x="92.4" y="1317" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="95.38" y="1327.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (149,804,535,014 samples, 5.39%)</title><rect x="415.1" y="1381" width="63.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="418.11" y="1391.5" >&lt;alloc..</text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (345,581,531 samples, 0.01%)</title><rect x="14.4" y="1541" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="17.39" y="1551.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (493,648,646 samples, 0.02%)</title><rect x="393.1" y="1365" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="396.14" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="229" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="239.5" ></text>
</g>
<g >
<title>[unknown] (16,094,876,962 samples, 0.58%)</title><rect x="1177.7" y="1541" width="6.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.66" y="1551.5" ></text>
</g>
<g >
<title>__fdget (172,957,672,667 samples, 6.22%)</title><rect x="979.0" y="1269" width="73.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="981.97" y="1279.5" >__fdget</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="325" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="335.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (20,409,964,675 samples, 0.73%)</title><rect x="188.5" y="1349" width="8.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="191.54" y="1359.5" ></text>
</g>
<g >
<title>[unknown]  (26,461,630,140 samples, 0.95%)</title><rect x="1166.4" y="1541" width="11.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1169.43" y="1551.5" ></text>
</g>
<g >
<title>socket_readable (299,072,311 samples, 0.01%)</title><rect x="1189.9" y="1461" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.85" y="1471.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (543,029,181 samples, 0.02%)</title><rect x="393.4" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="396.35" y="1407.5" ></text>
</g>
<g >
<title>copy_page_to_iter (345,524,848 samples, 0.01%)</title><rect x="41.7" y="1141" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="44.65" y="1151.5" ></text>
</g>
<g >
<title>update_min_vruntime (3,450,950,919 samples, 0.12%)</title><rect x="159.9" y="1237" width="1.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="162.94" y="1247.5" ></text>
</g>
<g >
<title>[sel_ldr] (17,279,075,462 samples, 0.62%)</title><rect x="1170.3" y="1525" width="7.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1173.32" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (7,651,237,202 samples, 0.28%)</title><rect x="832.0" y="1349" width="3.3" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="835.03" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (285,175,140 samples, 0.01%)</title><rect x="12.5" y="1509" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1519.5" ></text>
</g>
<g >
<title>__mprotect (297,399,658 samples, 0.01%)</title><rect x="32.2" y="1461" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="35.20" y="1471.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1,431,621,283 samples, 0.05%)</title><rect x="1112.1" y="1301" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1115.09" y="1311.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (20,490,802,418 samples, 0.74%)</title><rect x="209.4" y="1365" width="8.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="212.37" y="1375.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::check_select_read (20,838,441,547 samples, 0.75%)</title><rect x="827.2" y="1397" width="8.9" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="830.23" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (246,775,021 samples, 0.01%)</title><rect x="12.0" y="677" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="687.5" ></text>
</g>
<g >
<title>copyout (296,165,256 samples, 0.01%)</title><rect x="41.7" y="1109" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="44.67" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (296,140,936 samples, 0.01%)</title><rect x="12.0" y="981" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.04" y="991.5" ></text>
</g>
<g >
<title>process_one_work (345,506,656 samples, 0.01%)</title><rect x="10.6" y="1477" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.55" y="1487.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (444,241,884 samples, 0.02%)</title><rect x="41.6" y="1189" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="44.63" y="1199.5" ></text>
</g>
<g >
<title>anon_vma_interval_tree_remove (297,399,658 samples, 0.01%)</title><rect x="32.2" y="1333" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="35.20" y="1343.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (16,237,438,531 samples, 0.58%)</title><rect x="189.8" y="1333" width="6.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="192.77" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,661,182 samples, 0.01%)</title><rect x="12.0" y="1061" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1071.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_duration_since (247,341,213 samples, 0.01%)</title><rect x="19.5" y="1477" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="22.46" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="965" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="975.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (296,204,909 samples, 0.01%)</title><rect x="25.1" y="1493" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="28.10" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="997" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1007.5" ></text>
</g>
<g >
<title>do_pselect.constprop.0 (520,730,441,568 samples, 18.74%)</title><rect x="883.0" y="1317" width="221.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="885.96" y="1327.5" >do_pselect.constprop.0</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10,775,051,146 samples, 0.39%)</title><rect x="386.5" y="1365" width="4.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="389.47" y="1375.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (2,073,499,580 samples, 0.07%)</title><rect x="35.2" y="1461" width="0.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="38.18" y="1471.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (4,310,330,585 samples, 0.16%)</title><rect x="207.5" y="1381" width="1.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="210.54" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (592,317,834 samples, 0.02%)</title><rect x="1166.2" y="1381" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1169.17" y="1391.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (376,685,040,598 samples, 13.56%)</title><rect x="226.1" y="1381" width="159.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="229.06" y="1391.5" >core::sync::atomic::..</text>
</g>
<g >
<title>malloc (740,475,622 samples, 0.03%)</title><rect x="16.6" y="1525" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="19.55" y="1535.5" ></text>
</g>
<g >
<title>core::cell::BorrowRef::new (542,940,661 samples, 0.02%)</title><rect x="207.0" y="1301" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="209.98" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="645" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="655.5" ></text>
</g>
<g >
<title>NaClSysClockGetTime (7,306,579,709 samples, 0.26%)</title><rect x="33.1" y="1493" width="3.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="36.06" y="1503.5" ></text>
</g>
<g >
<title>[bash] (267,076,720 samples, 0.01%)</title><rect x="1188.3" y="1477" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1191.30" y="1487.5" ></text>
</g>
<g >
<title>NaClSysWrite (691,368,829 samples, 0.02%)</title><rect x="1166.1" y="1493" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1169.13" y="1503.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (592,425,465 samples, 0.02%)</title><rect x="25.2" y="1493" width="0.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="28.22" y="1503.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (493,669,859 samples, 0.02%)</title><rect x="18.1" y="1445" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="21.05" y="1455.5" ></text>
</g>
<g >
<title>runc:[1:CHILD] (345,563,289 samples, 0.01%)</title><rect x="14.1" y="1557" width="0.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="17.08" y="1567.5" ></text>
</g>
<g >
<title>uv_run (299,464,084 samples, 0.01%)</title><rect x="13.2" y="1429" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="16.18" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (543,963,830 samples, 0.02%)</title><rect x="12.0" y="1365" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.02" y="1375.5" ></text>
</g>
<g >
<title>_copy_from_user (24,496,965,387 samples, 0.88%)</title><rect x="933.7" y="1285" width="10.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="936.71" y="1295.5" ></text>
</g>
<g >
<title>NaClLog (789,897,029 samples, 0.03%)</title><rect x="31.5" y="1509" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="34.47" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="261" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (395,896,016 samples, 0.01%)</title><rect x="12.0" y="1221" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1231.5" ></text>
</g>
<g >
<title>[libc.so.6] (260,526,279 samples, 0.01%)</title><rect x="10.1" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.11" y="1439.5" ></text>
</g>
<g >
<title>core::ptr::write (592,412,904 samples, 0.02%)</title><rect x="391.1" y="1381" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="394.07" y="1391.5" ></text>
</g>
<g >
<title>vfs_read (493,596,232 samples, 0.02%)</title><rect x="41.6" y="1269" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="44.63" y="1279.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::lind_yield (622,437,512 samples, 0.02%)</title><rect x="16.9" y="1509" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="19.86" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (246,775,021 samples, 0.01%)</title><rect x="12.0" y="789" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.04" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (493,596,232 samples, 0.02%)</title><rect x="41.6" y="1333" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="44.63" y="1343.5" ></text>
</g>
<g >
<title>search_binary_handler (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1429" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="16.33" y="1439.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (2,517,901,109 samples, 0.09%)</title><rect x="187.5" y="1349" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.47" y="1359.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (41,327,394,842 samples, 1.49%)</title><rect x="484.2" y="1381" width="17.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="487.19" y="1391.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::check_select_read (1,530,097,907 samples, 0.06%)</title><rect x="1183.6" y="1525" width="0.7" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1186.64" y="1535.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (2,377,362,759 samples, 0.09%)</title><rect x="206.2" y="1381" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="209.20" y="1391.5" ></text>
</g>
<g >
<title>sleep (335,296,423 samples, 0.01%)</title><rect x="1188.5" y="1557" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1191.50" y="1567.5" ></text>
</g>
<g >
<title>update_load_avg (789,573,697 samples, 0.03%)</title><rect x="140.5" y="1237" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="143.51" y="1247.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (394,946,955 samples, 0.01%)</title><rect x="676.6" y="1317" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="679.56" y="1327.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (356,824,773,915 samples, 12.84%)</title><rect x="501.7" y="1365" width="151.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="504.74" y="1375.5" >&lt;parking_lot::raw_r..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="613" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="623.5" ></text>
</g>
<g >
<title>handle_pte_fault (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1221" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.70" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (395,896,016 samples, 0.01%)</title><rect x="12.0" y="1173" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.04" y="1183.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (3,689,444,627 samples, 0.13%)</title><rect x="36.2" y="1429" width="1.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="39.19" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (296,140,936 samples, 0.01%)</title><rect x="12.0" y="901" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="911.5" ></text>
</g>
<g >
<title>kthread (379,619,379 samples, 0.01%)</title><rect x="10.5" y="1509" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="13.54" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,661,182 samples, 0.01%)</title><rect x="12.0" y="1045" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.04" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (246,775,021 samples, 0.01%)</title><rect x="12.0" y="725" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.04" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (543,963,830 samples, 0.02%)</title><rect x="12.0" y="1349" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.02" y="1359.5" ></text>
</g>
<g >
<title>leave_mm (237,742,182 samples, 0.01%)</title><rect x="1189.5" y="1413" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1192.51" y="1423.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (493,669,859 samples, 0.02%)</title><rect x="18.1" y="1429" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="21.05" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (246,775,021 samples, 0.01%)</title><rect x="12.0" y="869" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="879.5" ></text>
</g>
<g >
<title>HandleStackContext (6,961,018,011 samples, 0.25%)</title><rect x="22.6" y="1509" width="3.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="25.60" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1445" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1455.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1,875,856,996 samples, 0.07%)</title><rect x="1106.7" y="1333" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1109.72" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1045" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1055.5" ></text>
</g>
<g >
<title>libc::unix::linux_like::FD_SET (789,798,979 samples, 0.03%)</title><rect x="854.1" y="1381" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="857.07" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="581" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1525" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="16.33" y="1535.5" ></text>
</g>
<g >
<title>NaClMprotect (297,399,658 samples, 0.01%)</title><rect x="32.2" y="1477" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="35.20" y="1487.5" ></text>
</g>
<g >
<title>NaClClockGetTime (3,850,743,096 samples, 0.14%)</title><rect x="33.5" y="1461" width="1.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="36.54" y="1471.5" ></text>
</g>
<g >
<title>__rcu_read_lock (3,158,602,562 samples, 0.11%)</title><rect x="896.5" y="1301" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="899.53" y="1311.5" ></text>
</g>
<g >
<title>node (6,676,873,885 samples, 0.24%)</title><rect x="11.0" y="1557" width="2.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="14.04" y="1567.5" ></text>
</g>
<g >
<title>__clone (961,522,350 samples, 0.03%)</title><rect x="12.8" y="1541" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="15.77" y="1551.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (13,668,444,493 samples, 0.49%)</title><rect x="1145.3" y="1397" width="5.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1148.31" y="1407.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (114,286,073,572 samples, 4.11%)</title><rect x="730.6" y="1333" width="48.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="733.55" y="1343.5" >core..</text>
</g>
<g >
<title>raw_spin_rq_unlock (1,480,515,448 samples, 0.05%)</title><rect x="167.7" y="1285" width="0.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="170.72" y="1295.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1269" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="16.33" y="1279.5" ></text>
</g>
<g >
<title>NaClValidateCode (3,689,444,627 samples, 0.13%)</title><rect x="36.2" y="1461" width="1.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="39.19" y="1471.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::partial_cmp (296,267,714 samples, 0.01%)</title><rect x="46.0" y="1381" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="48.96" y="1391.5" ></text>
</g>
<g >
<title>[perf-1259841.map] (2,020,834,370 samples, 0.07%)</title><rect x="11.1" y="1541" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="14.11" y="1551.5" ></text>
</g>
<g >
<title>mprotect_fixup (297,399,658 samples, 0.01%)</title><rect x="32.2" y="1381" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="35.20" y="1391.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (444,300,788 samples, 0.02%)</title><rect x="194.5" y="1285" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="197.54" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1365" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.70" y="1375.5" ></text>
</g>
<g >
<title>malloc (4,196,249,209 samples, 0.15%)</title><rect x="388.4" y="1333" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="391.38" y="1343.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::lind_yield (376,044,745,746 samples, 13.53%)</title><rect x="46.1" y="1413" width="159.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="49.09" y="1423.5" >rustposix::interface..</text>
</g>
<g >
<title>rustposix::interface::timer::readtimer (25,591,132,347 samples, 0.92%)</title><rect x="207.2" y="1413" width="10.9" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="210.21" y="1423.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (394,931,004 samples, 0.01%)</title><rect x="167.1" y="1237" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="170.07" y="1247.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::pread_syscall (493,596,232 samples, 0.02%)</title><rect x="41.6" y="1445" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="44.63" y="1455.5" ></text>
</g>
<g >
<title>__rcu_read_lock (3,406,015,356 samples, 0.12%)</title><rect x="931.3" y="1285" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="934.32" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="469" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (148,520,993,854 samples, 5.35%)</title><rect x="415.7" y="1349" width="63.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="418.66" y="1359.5" >core::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1317" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1327.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (14,117,569,823 samples, 0.51%)</title><rect x="1160.1" y="1381" width="6.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1163.14" y="1391.5" ></text>
</g>
<g >
<title>inode_permission (283,234,224 samples, 0.01%)</title><rect x="12.3" y="1317" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="15.27" y="1327.5" ></text>
</g>
<g >
<title>vfs_statx (283,234,224 samples, 0.01%)</title><rect x="12.3" y="1381" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="15.27" y="1391.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (9,674,873,419 samples, 0.35%)</title><rect x="1108.6" y="1317" width="4.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1111.59" y="1327.5" ></text>
</g>
<g >
<title>ip_queue_xmit (246,799,581 samples, 0.01%)</title><rect x="1166.3" y="1253" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1169.32" y="1263.5" ></text>
</g>
<g >
<title>__fdget (888,508,219 samples, 0.03%)</title><rect x="930.9" y="1285" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="933.94" y="1295.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (4,269,266,345 samples, 0.15%)</title><rect x="1114.7" y="1365" width="1.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1117.73" y="1375.5" ></text>
</g>
<g >
<title>scheduler_tick (246,828,496 samples, 0.01%)</title><rect x="415.5" y="1237" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="418.51" y="1247.5" ></text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow::{{closure}} (126,302,149,252 samples, 4.55%)</title><rect x="676.4" y="1333" width="53.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="679.39" y="1343.5" >parki..</text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (394,946,955 samples, 0.01%)</title><rect x="676.6" y="1301" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="679.56" y="1311.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (4,310,330,585 samples, 0.16%)</title><rect x="207.5" y="1365" width="1.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="210.54" y="1375.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_readfds (2,715,199,762 samples, 0.10%)</title><rect x="17.7" y="1509" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="20.65" y="1519.5" ></text>
</g>
<g >
<title>__rust_alloc (394,939,964 samples, 0.01%)</title><rect x="388.0" y="1333" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="391.00" y="1343.5" ></text>
</g>
<g >
<title>ksys_read (493,596,232 samples, 0.02%)</title><rect x="41.6" y="1285" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="44.63" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (9,823,726,226 samples, 0.35%)</title><rect x="854.9" y="1365" width="4.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="857.93" y="1375.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::sub_timespec (295,339,617 samples, 0.01%)</title><rect x="19.3" y="1525" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="22.31" y="1535.5" ></text>
</g>
<g >
<title>[ls] (407,962,992 samples, 0.01%)</title><rect x="10.8" y="1493" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.85" y="1503.5" ></text>
</g>
<g >
<title>do_select (2,221,508,959 samples, 0.08%)</title><rect x="1089.2" y="1301" width="1.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1092.24" y="1311.5" ></text>
</g>
<g >
<title>do_iter_read (444,241,884 samples, 0.02%)</title><rect x="41.6" y="1221" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="44.63" y="1231.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (543,050,032 samples, 0.02%)</title><rect x="18.3" y="1493" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="21.26" y="1503.5" ></text>
</g>
<g >
<title>lind (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1557" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="13.70" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1205" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1215.5" ></text>
</g>
<g >
<title>ip_local_out (246,799,581 samples, 0.01%)</title><rect x="1166.3" y="1221" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1169.32" y="1231.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (493,596,232 samples, 0.02%)</title><rect x="41.6" y="1429" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="44.63" y="1439.5" ></text>
</g>
<g >
<title>_copy_from_user (5,873,775,392 samples, 0.21%)</title><rect x="898.7" y="1301" width="2.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="901.75" y="1311.5" ></text>
</g>
<g >
<title>do_idle (1,760,609,525 samples, 0.06%)</title><rect x="1189.1" y="1493" width="0.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.06" y="1503.5" ></text>
</g>
<g >
<title>malloc (789,826,575 samples, 0.03%)</title><rect x="1183.0" y="1525" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1186.03" y="1535.5" ></text>
</g>
<g >
<title>execute_command (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1461" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="13.70" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="309" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="319.5" ></text>
</g>
<g >
<title>NaClSysPread (493,596,232 samples, 0.02%)</title><rect x="41.6" y="1493" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="44.63" y="1503.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (48,458,527,486 samples, 1.74%)</title><rect x="1117.4" y="1349" width="20.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1120.42" y="1359.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max (1,530,200,080 samples, 0.06%)</title><rect x="390.2" y="1333" width="0.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="393.16" y="1343.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,302,099,496 samples, 0.05%)</title><rect x="1189.1" y="1429" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1192.06" y="1439.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (543,102,671 samples, 0.02%)</title><rect x="17.1" y="1461" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="20.13" y="1471.5" ></text>
</g>
<g >
<title>psi_flags_change (246,835,092 samples, 0.01%)</title><rect x="167.0" y="1269" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="169.97" y="1279.5" ></text>
</g>
<g >
<title>__fget_light (169,452,894,328 samples, 6.10%)</title><rect x="979.3" y="1253" width="71.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="982.28" y="1263.5" >__fget_l..</text>
</g>
<g >
<title>core::time::Duration::new (936,007,352 samples, 0.03%)</title><rect x="209.0" y="1301" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="211.98" y="1311.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (444,273,635 samples, 0.02%)</title><rect x="206.8" y="1285" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="209.79" y="1295.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1,973,874,284 samples, 0.07%)</title><rect x="1181.4" y="1525" width="0.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1184.44" y="1535.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (1,777,289,321 samples, 0.06%)</title><rect x="39.2" y="1461" width="0.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="42.24" y="1471.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (987,387,232 samples, 0.04%)</title><rect x="39.6" y="1445" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="42.58" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="421" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (395,896,016 samples, 0.01%)</title><rect x="12.0" y="1157" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1167.5" ></text>
</g>
<g >
<title>clock_gettime (2,962,133,764 samples, 0.11%)</title><rect x="33.9" y="1445" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="36.90" y="1455.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (493,687,042 samples, 0.02%)</title><rect x="38.1" y="1477" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="41.11" y="1487.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7,947,444,041 samples, 0.29%)</title><rect x="831.9" y="1381" width="3.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="834.91" y="1391.5" ></text>
</g>
<g >
<title>poll_select_finish (839,148,284 samples, 0.03%)</title><rect x="1104.5" y="1317" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1107.48" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (937,972,796 samples, 0.03%)</title><rect x="120.3" y="1285" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="123.31" y="1295.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::ok (461,508,228 samples, 0.02%)</title><rect x="207.6" y="1317" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="210.63" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (888,612,264 samples, 0.03%)</title><rect x="93.2" y="1301" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="96.22" y="1311.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (283,234,224 samples, 0.01%)</title><rect x="12.3" y="1333" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="15.27" y="1343.5" ></text>
</g>
<g >
<title>parking_lot_core::spinwait::SpinWait::spin_no_yield (20,721,517,154 samples, 0.75%)</title><rect x="721.2" y="1317" width="8.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="724.23" y="1327.5" ></text>
</g>
<g >
<title>[[vdso]] (592,411,639 samples, 0.02%)</title><rect x="1178.2" y="1525" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1181.19" y="1535.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (237,742,182 samples, 0.01%)</title><rect x="1189.5" y="1381" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1192.51" y="1391.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1461" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="16.33" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="693" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (493,596,232 samples, 0.02%)</title><rect x="41.6" y="1365" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="44.63" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="149" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,661,182 samples, 0.01%)</title><rect x="12.0" y="1093" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1103.5" ></text>
</g>
<g >
<title>tcp_poll (3,698,679,981 samples, 0.13%)</title><rect x="1056.4" y="1253" width="1.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1059.40" y="1263.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (888,565,488 samples, 0.03%)</title><rect x="1113.4" y="1349" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1116.45" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1157" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="1167.5" ></text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::lock_common (176,709,614,020 samples, 6.36%)</title><rect x="655.0" y="1349" width="75.0" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="657.99" y="1359.5" >parking_..</text>
</g>
<g >
<title>tick_sched_handle (246,828,496 samples, 0.01%)</title><rect x="415.5" y="1269" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="418.51" y="1279.5" ></text>
</g>
<g >
<title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (1,735,684,160 samples, 0.06%)</title><rect x="206.2" y="1333" width="0.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="209.24" y="1343.5" ></text>
</g>
<g >
<title>kernel_clone (1,480,775,337 samples, 0.05%)</title><rect x="11.1" y="1317" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="14.11" y="1327.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (444,311,442 samples, 0.02%)</title><rect x="54.5" y="1381" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="57.51" y="1391.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (394,926,313 samples, 0.01%)</title><rect x="19.6" y="1493" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="22.56" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="709" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="719.5" ></text>
</g>
<g >
<title>sched_clock (10,809,747,821 samples, 0.39%)</title><rect x="174.6" y="1253" width="4.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="177.62" y="1263.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (444,313,055 samples, 0.02%)</title><rect x="217.9" y="1317" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="220.89" y="1327.5" ></text>
</g>
<g >
<title>cfree (1,036,626,874 samples, 0.04%)</title><rect x="1182.3" y="1525" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1185.28" y="1535.5" ></text>
</g>
<g >
<title>__libc_start_main (365,801,448 samples, 0.01%)</title><rect x="1188.3" y="1525" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1191.30" y="1535.5" ></text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (641,697,692 samples, 0.02%)</title><rect x="1183.4" y="1525" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1186.37" y="1535.5" ></text>
</g>
<g >
<title>do_anonymous_page (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1205" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.70" y="1215.5" ></text>
</g>
<g >
<title>[expr] (321,267,218 samples, 0.01%)</title><rect x="10.1" y="1541" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.11" y="1551.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,302,099,496 samples, 0.05%)</title><rect x="1189.1" y="1477" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.06" y="1487.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (3,751,316,260 samples, 0.14%)</title><rect x="155.7" y="1221" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="158.70" y="1231.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1,332,806,884 samples, 0.05%)</title><rect x="1051.9" y="1253" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1054.85" y="1263.5" ></text>
</g>
<g >
<title>yield_task_fair (1,233,387,822 samples, 0.04%)</title><rect x="185.1" y="1333" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="188.06" y="1343.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (1,735,684,160 samples, 0.06%)</title><rect x="206.2" y="1301" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="209.24" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (961,522,350 samples, 0.03%)</title><rect x="12.8" y="1525" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.77" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (51,611,549,058 samples, 1.86%)</title><rect x="676.7" y="1317" width="21.9" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="679.73" y="1327.5" >c..</text>
</g>
<g >
<title>read (493,596,232 samples, 0.02%)</title><rect x="41.6" y="1349" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="44.63" y="1359.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (2,122,738,164 samples, 0.08%)</title><rect x="157.3" y="1237" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="160.30" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::net::SocketHandle&gt;&gt;&gt; (149,804,535,014 samples, 5.39%)</title><rect x="415.1" y="1397" width="63.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="418.11" y="1407.5" >core::..</text>
</g>
<g >
<title>os_xsave (1,085,344,279 samples, 0.04%)</title><rect x="199.1" y="1381" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="202.05" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (299,464,084 samples, 0.01%)</title><rect x="13.2" y="1509" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.18" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1061" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1071.5" ></text>
</g>
<g >
<title>_start (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1541" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.70" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (296,140,936 samples, 0.01%)</title><rect x="12.0" y="917" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.04" y="927.5" ></text>
</g>
<g >
<title>[libc.so.6] (407,962,992 samples, 0.01%)</title><rect x="10.8" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.85" y="1519.5" ></text>
</g>
<g >
<title>__select (9,619,177,686 samples, 0.35%)</title><rect x="201.7" y="1397" width="4.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="204.69" y="1407.5" ></text>
</g>
<g >
<title>&lt;core::time::Duration as core::cmp::PartialOrd&gt;::partial_cmp (296,267,714 samples, 0.01%)</title><rect x="46.0" y="1397" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="48.96" y="1407.5" ></text>
</g>
<g >
<title>path_lookupat (283,234,224 samples, 0.01%)</title><rect x="12.3" y="1349" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="15.27" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (296,140,936 samples, 0.01%)</title><rect x="12.0" y="949" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (543,963,830 samples, 0.02%)</title><rect x="12.0" y="1413" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.02" y="1423.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::signalflag_get (2,377,362,759 samples, 0.09%)</title><rect x="206.2" y="1397" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="209.20" y="1407.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (642,700,163 samples, 0.02%)</title><rect x="12.0" y="1477" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="14.99" y="1487.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (1,431,485,459 samples, 0.05%)</title><rect x="836.1" y="1381" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="839.08" y="1391.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::net::SocketHandle&gt;&gt; (356,824,773,915 samples, 12.84%)</title><rect x="501.7" y="1397" width="151.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="504.74" y="1407.5" >core::ptr::drop_in_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1429" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1439.5" ></text>
</g>
<g >
<title>clock_gettime (19,651,765,675 samples, 0.71%)</title><rect x="209.7" y="1333" width="8.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="212.73" y="1343.5" ></text>
</g>
<g >
<title>yield_task_fair (3,257,614,443 samples, 0.12%)</title><rect x="182.5" y="1317" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="185.48" y="1327.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (507,298,479 samples, 0.02%)</title><rect x="388.2" y="1333" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="391.17" y="1343.5" ></text>
</g>
<g >
<title>set_user_sigmask (1,382,172,778 samples, 0.05%)</title><rect x="1103.5" y="1301" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1106.51" y="1311.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (247,341,213 samples, 0.01%)</title><rect x="19.5" y="1509" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="22.46" y="1519.5" ></text>
</g>
<g >
<title>get_timespec64 (27,594,296,726 samples, 0.99%)</title><rect x="1090.2" y="1301" width="11.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1093.18" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,661,182 samples, 0.01%)</title><rect x="12.0" y="1125" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1135.5" ></text>
</g>
<g >
<title>__clone (348,427,628 samples, 0.01%)</title><rect x="1189.8" y="1541" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.83" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_pselect6 (2,123,154,178 samples, 0.08%)</title><rect x="880.2" y="1349" width="0.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="883.24" y="1359.5" ></text>
</g>
<g >
<title>intel_idle (1,064,357,314 samples, 0.04%)</title><rect x="1189.1" y="1413" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1192.06" y="1423.5" ></text>
</g>
<g >
<title>aeProcessEvents.part.0 (348,427,628 samples, 0.01%)</title><rect x="1189.8" y="1477" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1192.83" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (246,775,021 samples, 0.01%)</title><rect x="12.0" y="741" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="751.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (592,397,568 samples, 0.02%)</title><rect x="729.5" y="1269" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="732.55" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (395,896,016 samples, 0.01%)</title><rect x="12.0" y="1189" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1199.5" ></text>
</g>
<g >
<title>__check_object_size (11,452,675,755 samples, 0.41%)</title><rect x="925.7" y="1285" width="4.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="928.70" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="117" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="127.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (543,050,032 samples, 0.02%)</title><rect x="18.3" y="1477" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="21.26" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1013" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1023.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (641,751,482 samples, 0.02%)</title><rect x="181.0" y="1301" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="183.97" y="1311.5" ></text>
</g>
<g >
<title>[bash] (267,076,720 samples, 0.01%)</title><rect x="1188.3" y="1429" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1191.30" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (888,559,743 samples, 0.03%)</title><rect x="198.6" y="1381" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="201.61" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (348,427,628 samples, 0.01%)</title><rect x="1189.8" y="1525" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.83" y="1535.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (493,607,471 samples, 0.02%)</title><rect x="484.0" y="1349" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="486.98" y="1359.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (1,875,942,424 samples, 0.07%)</title><rect x="92.8" y="1317" width="0.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="95.80" y="1327.5" ></text>
</g>
<g >
<title>update_curr (394,932,640 samples, 0.01%)</title><rect x="183.2" y="1301" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="186.22" y="1311.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (6,615,895,554 samples, 0.24%)</title><rect x="168.4" y="1285" width="2.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="171.35" y="1295.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (299,464,084 samples, 0.01%)</title><rect x="13.2" y="1461" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="16.18" y="1471.5" ></text>
</g>
<g >
<title>pick_next_task_fair (929,885,339 samples, 0.03%)</title><rect x="166.1" y="1285" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="169.07" y="1295.5" ></text>
</g>
<g >
<title>pick_next_task (106,469,858,084 samples, 3.83%)</title><rect x="120.9" y="1285" width="45.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="123.86" y="1295.5" >pick..</text>
</g>
<g >
<title>fput (70,023,320,633 samples, 2.52%)</title><rect x="1058.6" y="1285" width="29.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1061.58" y="1295.5" >fput</text>
</g>
<g >
<title>NaClSysPreadDecoder (542,954,624 samples, 0.02%)</title><rect x="41.6" y="1509" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="44.61" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1381" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.70" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (395,896,016 samples, 0.01%)</title><rect x="12.0" y="1333" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1343.5" ></text>
</g>
<g >
<title>CompareAndSwap (444,321,836 samples, 0.02%)</title><rect x="22.4" y="1509" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="25.41" y="1519.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,278,624,821 samples, 0.08%)</title><rect x="206.2" y="1365" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="209.24" y="1375.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::checked_sub_instant (247,341,213 samples, 0.01%)</title><rect x="19.5" y="1461" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="22.46" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (246,775,021 samples, 0.01%)</title><rect x="12.0" y="661" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.04" y="671.5" ></text>
</g>
<g >
<title>ip_finish_output2 (246,799,581 samples, 0.01%)</title><rect x="1166.3" y="1157" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1169.32" y="1167.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (543,038,419 samples, 0.02%)</title><rect x="831.7" y="1381" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="834.68" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1,480,775,337 samples, 0.05%)</title><rect x="11.1" y="1349" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="14.11" y="1359.5" ></text>
</g>
<g >
<title>Glob::isIgnored (593,331,065 samples, 0.02%)</title><rect x="12.0" y="1461" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="14.99" y="1471.5" ></text>
</g>
<g >
<title>tcp_sendmsg (542,951,455 samples, 0.02%)</title><rect x="1166.2" y="1333" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1169.19" y="1343.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (3,689,444,627 samples, 0.13%)</title><rect x="36.2" y="1477" width="1.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="39.19" y="1487.5" ></text>
</g>
<g >
<title>_copy_from_user (22,953,799,958 samples, 0.83%)</title><rect x="1092.2" y="1285" width="9.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1095.15" y="1295.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (13,668,444,493 samples, 0.49%)</title><rect x="1145.3" y="1381" width="5.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1148.31" y="1391.5" ></text>
</g>
<g >
<title>poll_select_finish (3,799,484,056 samples, 0.14%)</title><rect x="1101.9" y="1301" width="1.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1104.90" y="1311.5" ></text>
</g>
<g >
<title>sched_clock (543,007,909 samples, 0.02%)</title><rect x="183.6" y="1269" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="186.64" y="1279.5" ></text>
</g>
<g >
<title>sh (563,212,523 samples, 0.02%)</title><rect x="1188.3" y="1557" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1191.26" y="1567.5" ></text>
</g>
<g >
<title>read (249,745,821 samples, 0.01%)</title><rect x="1189.9" y="1429" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1192.85" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="789" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="799.5" ></text>
</g>
<g >
<title>dispatcher (2,647,474,436,282 samples, 95.28%)</title><rect x="41.8" y="1461" width="1124.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="44.84" y="1471.5" >dispatcher</text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (246,844,497 samples, 0.01%)</title><rect x="25.6" y="1509" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="28.56" y="1519.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (1,135,395,778 samples, 0.04%)</title><rect x="167.2" y="1285" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="170.24" y="1295.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDayDecoder (8,985,117,567 samples, 0.32%)</title><rect x="37.8" y="1509" width="3.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="40.80" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (296,140,936 samples, 0.01%)</title><rect x="12.0" y="933" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="943.5" ></text>
</g>
<g >
<title>do_sched_yield (1,974,500,185 samples, 0.07%)</title><rect x="185.9" y="1349" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="188.90" y="1359.5" ></text>
</g>
<g >
<title>pick_next_task (1,629,140,093 samples, 0.06%)</title><rect x="179.5" y="1301" width="0.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="182.46" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="661" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="981" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="725" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="735.5" ></text>
</g>
<g >
<title>wrk (447,158,869 samples, 0.02%)</title><rect x="1189.8" y="1557" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1192.81" y="1567.5" ></text>
</g>
<g >
<title>sock_poll (7,494,319,808 samples, 0.27%)</title><rect x="1054.8" y="1269" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1057.79" y="1279.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (246,797,376 samples, 0.01%)</title><rect x="13.8" y="1221" width="0.1" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="16.78" y="1231.5" ></text>
</g>
<g >
<title>update_curr (47,580,207,205 samples, 1.71%)</title><rect x="141.2" y="1253" width="20.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="144.20" y="1263.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (7,651,237,202 samples, 0.28%)</title><rect x="832.0" y="1333" width="3.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="835.03" y="1343.5" ></text>
</g>
<g >
<title>update_min_vruntime (8,129,526,648 samples, 0.29%)</title><rect x="161.5" y="1253" width="3.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="164.47" y="1263.5" ></text>
</g>
<g >
<title>schedule (1,039,481,478 samples, 0.04%)</title><rect x="184.6" y="1333" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.62" y="1343.5" ></text>
</g>
<g >
<title>ret_from_fork (379,619,379 samples, 0.01%)</title><rect x="10.5" y="1525" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="13.54" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="885" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="933" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="943.5" ></text>
</g>
<g >
<title>rustposix::interface::types::FdSet::is_set (35,355,614,603 samples, 1.27%)</title><rect x="1151.1" y="1397" width="15.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1154.12" y="1407.5" ></text>
</g>
<g >
<title>worker_thread (345,506,656 samples, 0.01%)</title><rect x="10.6" y="1493" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.55" y="1503.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::sigcheck (543,102,671 samples, 0.02%)</title><rect x="17.1" y="1509" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="20.13" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (395,896,016 samples, 0.01%)</title><rect x="12.0" y="1253" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1263.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (354,553,860,842 samples, 12.76%)</title><rect x="502.7" y="1333" width="150.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="505.70" y="1343.5" >core::sync::atomic:..</text>
</g>
<g >
<title>__tcp_transmit_skb (246,799,581 samples, 0.01%)</title><rect x="1166.3" y="1269" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1169.32" y="1279.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::Cage::get_filedescriptor (50,683,813,097 samples, 1.82%)</title><rect x="1116.5" y="1397" width="21.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1119.54" y="1407.5" >r..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1109" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1119.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::checked_sub_instant (4,112,865,392 samples, 0.15%)</title><rect x="207.6" y="1333" width="1.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="210.63" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="213" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="223.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (691,368,829 samples, 0.02%)</title><rect x="1166.1" y="1509" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1169.13" y="1519.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (2,961,943,158 samples, 0.11%)</title><rect x="924.4" y="1285" width="1.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="927.44" y="1295.5" ></text>
</g>
<g >
<title>clock_gettime (728,394,103 samples, 0.03%)</title><rect x="1182.7" y="1525" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.72" y="1535.5" ></text>
</g>
<g >
<title>poll_freewait (888,462,348 samples, 0.03%)</title><rect x="1088.3" y="1285" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1091.31" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (296,140,936 samples, 0.01%)</title><rect x="12.0" y="997" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1007.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (50,209,999,671 samples, 1.81%)</title><rect x="655.0" y="1317" width="21.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="657.99" y="1327.5" >c..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1285" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="1295.5" ></text>
</g>
<g >
<title>poll_freewait (2,567,006,846 samples, 0.09%)</title><rect x="1053.7" y="1269" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1056.70" y="1279.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (592,397,598 samples, 0.02%)</title><rect x="17.8" y="1493" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="20.80" y="1503.5" ></text>
</g>
<g >
<title>rustposix::interface::types::FdSet::new (839,240,628 samples, 0.03%)</title><rect x="853.7" y="1397" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="856.71" y="1407.5" ></text>
</g>
<g >
<title>__select (3,307,480,913 samples, 0.12%)</title><rect x="1179.8" y="1525" width="1.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1182.81" y="1535.5" ></text>
</g>
<g >
<title>ls (566,607,651 samples, 0.02%)</title><rect x="10.8" y="1557" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="13.80" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="869" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="879.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (296,267,714 samples, 0.01%)</title><rect x="46.0" y="1365" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="48.96" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,433,104,216 samples, 0.05%)</title><rect x="870.8" y="1365" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="873.77" y="1375.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1,239,551,643 samples, 0.04%)</title><rect x="196.7" y="1333" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="199.66" y="1343.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (114,286,073,572 samples, 4.11%)</title><rect x="730.6" y="1349" width="48.5" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="733.55" y="1359.5" >core..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (1,135,435,545 samples, 0.04%)</title><rect x="194.9" y="1317" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="197.88" y="1327.5" ></text>
</g>
<g >
<title>rmqueue (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1125" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="13.70" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (246,775,021 samples, 0.01%)</title><rect x="12.0" y="773" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="783.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (1,135,421,721 samples, 0.04%)</title><rect x="183.9" y="1333" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="186.87" y="1343.5" ></text>
</g>
<g >
<title>tcp_poll (1,431,598,821 samples, 0.05%)</title><rect x="1058.0" y="1269" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1060.97" y="1279.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (236,152,566 samples, 0.01%)</title><rect x="1189.7" y="1477" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1192.71" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (283,234,224 samples, 0.01%)</title><rect x="12.3" y="1429" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="15.27" y="1439.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::unchecked_mul (493,607,471 samples, 0.02%)</title><rect x="484.0" y="1333" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="486.98" y="1343.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::borrow (542,940,661 samples, 0.02%)</title><rect x="207.0" y="1333" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="209.98" y="1343.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (1,875,855,684 samples, 0.07%)</title><rect x="835.3" y="1365" width="0.8" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="838.28" y="1375.5" ></text>
</g>
<g >
<title>sched_clock_cpu (592,376,761 samples, 0.02%)</title><rect x="183.6" y="1285" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="186.61" y="1295.5" ></text>
</g>
<g >
<title>vfs_iter_read (444,241,884 samples, 0.02%)</title><rect x="41.6" y="1237" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="44.63" y="1247.5" ></text>
</g>
<g >
<title>pick_next_task_fair (93,986,696,512 samples, 3.38%)</title><rect x="125.0" y="1269" width="39.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="128.01" y="1279.5" >pic..</text>
</g>
<g >
<title>__libc_start_main (407,962,992 samples, 0.01%)</title><rect x="10.8" y="1525" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.85" y="1535.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (20,194,604,013 samples, 0.73%)</title><rect x="209.5" y="1349" width="8.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="212.50" y="1359.5" ></text>
</g>
<g >
<title>generic_file_read_iter (444,241,884 samples, 0.02%)</title><rect x="41.6" y="1173" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="44.63" y="1183.5" ></text>
</g>
<g >
<title>[ls] (242,814,773 samples, 0.01%)</title><rect x="10.8" y="1477" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.85" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1333" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1343.5" ></text>
</g>
<g >
<title>[anon] (11,630,378,289 samples, 0.42%)</title><rect x="14.8" y="1541" width="4.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="17.79" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1093" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="1103.5" ></text>
</g>
<g >
<title>[expr] (271,895,696 samples, 0.01%)</title><rect x="10.1" y="1493" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.11" y="1503.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (691,368,829 samples, 0.02%)</title><rect x="1166.1" y="1477" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1169.13" y="1487.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::signalflag_get::{{closure}} (542,940,661 samples, 0.02%)</title><rect x="207.0" y="1349" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="209.98" y="1359.5" ></text>
</g>
<g >
<title>update_load_avg (394,809,418 samples, 0.01%)</title><rect x="141.0" y="1237" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="144.03" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (50,644,589,490 samples, 1.82%)</title><rect x="393.6" y="1397" width="21.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="396.60" y="1407.5" >c..</text>
</g>
<g >
<title>tick_sched_timer (246,828,496 samples, 0.01%)</title><rect x="415.5" y="1285" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="418.51" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (13,369,687,749 samples, 0.48%)</title><rect x="55.2" y="1381" width="5.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="58.16" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="197" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="207.5" ></text>
</g>
<g >
<title>expr (423,007,506 samples, 0.02%)</title><rect x="10.1" y="1557" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="13.11" y="1567.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (113,370,908,419 samples, 4.08%)</title><rect x="779.1" y="1333" width="48.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="782.09" y="1343.5" >core..</text>
</g>
<g >
<title>node::Environment::CheckImmediate (250,100,093 samples, 0.01%)</title><rect x="13.2" y="1397" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="16.20" y="1407.5" ></text>
</g>
<g >
<title>node::SpinEventLoop (299,464,084 samples, 0.01%)</title><rect x="13.2" y="1445" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="16.18" y="1455.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (2,567,198,893 samples, 0.09%)</title><rect x="39.0" y="1477" width="1.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="42.01" y="1487.5" ></text>
</g>
<g >
<title>copy_present_pte (542,954,412 samples, 0.02%)</title><rect x="11.5" y="1205" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="14.49" y="1215.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,431,529,360 samples, 0.05%)</title><rect x="1051.2" y="1253" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1054.24" y="1263.5" ></text>
</g>
<g >
<title>set_user_sigmask (839,348,475 samples, 0.03%)</title><rect x="1104.8" y="1317" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1107.83" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,135,423,157 samples, 0.04%)</title><rect x="871.4" y="1365" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="874.42" y="1375.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (1,140,435,316 samples, 0.04%)</title><rect x="853.2" y="1381" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="856.23" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1461" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1471.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (246,846,836 samples, 0.01%)</title><rect x="31.4" y="1509" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="34.36" y="1519.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (493,698,673 samples, 0.02%)</title><rect x="32.7" y="1477" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="35.66" y="1487.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt; (41,327,394,842 samples, 1.49%)</title><rect x="484.2" y="1397" width="17.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="487.19" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1253" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,661,182 samples, 0.01%)</title><rect x="12.0" y="1109" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.04" y="1119.5" ></text>
</g>
<g >
<title>__cond_resched (888,565,831 samples, 0.03%)</title><rect x="930.6" y="1285" width="0.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="933.57" y="1295.5" ></text>
</g>
<g >
<title>__get_user_pages (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1269" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="13.70" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1477" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="1487.5" ></text>
</g>
<g >
<title>do_select (269,493,741,510 samples, 9.70%)</title><rect x="944.1" y="1285" width="114.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="947.13" y="1295.5" >do_select</text>
</g>
<g >
<title>syscall_enter_from_user_mode (1,135,725,263 samples, 0.04%)</title><rect x="197.2" y="1365" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.21" y="1375.5" ></text>
</g>
<g >
<title>__put_user_8 (641,779,069 samples, 0.02%)</title><rect x="193.9" y="1285" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="196.89" y="1295.5" ></text>
</g>
<g >
<title>std::time::Instant::now (394,926,313 samples, 0.01%)</title><rect x="19.6" y="1509" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="22.56" y="1519.5" ></text>
</g>
<g >
<title>NaClSysSelectDecoder (2,647,474,436,282 samples, 95.28%)</title><rect x="41.8" y="1509" width="1124.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="44.84" y="1519.5" >NaClSysSelectDecoder</text>
</g>
<g >
<title>__rmqueue_pcplist (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1109" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="13.70" y="1119.5" ></text>
</g>
<g >
<title>put_prev_entity (1,381,537,184 samples, 0.05%)</title><rect x="140.3" y="1253" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="143.26" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (592,317,834 samples, 0.02%)</title><rect x="1166.2" y="1397" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1169.17" y="1407.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (297,399,658 samples, 0.01%)</title><rect x="32.2" y="1397" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="35.20" y="1407.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,925,260,649 samples, 0.07%)</title><rect x="1105.9" y="1333" width="0.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1108.90" y="1343.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (246,829,310 samples, 0.01%)</title><rect x="226.0" y="1365" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="228.96" y="1375.5" ></text>
</g>
<g >
<title>node::Start (299,464,084 samples, 0.01%)</title><rect x="13.2" y="1493" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="16.18" y="1503.5" ></text>
</g>
<g >
<title>sel_ldr (2,764,522,672,448 samples, 99.49%)</title><rect x="14.3" y="1557" width="1174.0" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="17.26" y="1567.5" >sel_ldr</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1125" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1135.5" ></text>
</g>
<g >
<title>__check_object_size (543,026,179 samples, 0.02%)</title><rect x="924.2" y="1285" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="927.21" y="1295.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (543,102,671 samples, 0.02%)</title><rect x="17.1" y="1397" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.13" y="1407.5" ></text>
</g>
<g >
<title>unmap_single_vma (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1301" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="16.33" y="1311.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (641,744,447 samples, 0.02%)</title><rect x="184.3" y="1333" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="187.35" y="1343.5" ></text>
</g>
<g >
<title>begin_new_exec (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1397" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="16.33" y="1407.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2,697,423,711,412 samples, 97.08%)</title><rect x="20.9" y="1525" width="1145.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="23.92" y="1535.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (113,370,908,419 samples, 4.08%)</title><rect x="779.1" y="1349" width="48.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="782.09" y="1359.5" >core..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1077" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1087.5" ></text>
</g>
<g >
<title>execute_command_internal (267,076,720 samples, 0.01%)</title><rect x="1188.3" y="1445" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1191.30" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,480,775,337 samples, 0.05%)</title><rect x="11.1" y="1365" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.11" y="1375.5" ></text>
</g>
<g >
<title>setlocale (271,895,696 samples, 0.01%)</title><rect x="10.1" y="1477" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.11" y="1487.5" ></text>
</g>
<g >
<title>start_secondary (1,760,609,525 samples, 0.06%)</title><rect x="1189.1" y="1525" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1192.06" y="1535.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (1,184,464,352 samples, 0.04%)</title><rect x="18.8" y="1525" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="21.81" y="1535.5" ></text>
</g>
<g >
<title>core::cmp::PartialOrd::ge (444,558,679 samples, 0.02%)</title><rect x="208.8" y="1285" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="211.79" y="1295.5" ></text>
</g>
<g >
<title>uv_async_send (246,808,916 samples, 0.01%)</title><rect x="13.0" y="1493" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="16.02" y="1503.5" ></text>
</g>
<g >
<title>__update_load_avg_se (296,073,909 samples, 0.01%)</title><rect x="141.1" y="1221" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="144.07" y="1231.5" ></text>
</g>
<g >
<title>__update_load_avg_se (246,840,032 samples, 0.01%)</title><rect x="140.7" y="1221" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="143.74" y="1231.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (273,707,717 samples, 0.01%)</title><rect x="1184.5" y="1493" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1187.50" y="1503.5" ></text>
</g>
<g >
<title>do_sched_yield (279,583,223,921 samples, 10.06%)</title><rect x="65.1" y="1333" width="118.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="68.14" y="1343.5" >do_sched_yield</text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (5,084,488,767 samples, 0.18%)</title><rect x="1185.3" y="1541" width="2.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1188.28" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1349" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="1359.5" ></text>
</g>
<g >
<title>__schedule (888,688,809 samples, 0.03%)</title><rect x="67.9" y="1317" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="70.88" y="1327.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (53,080,559,543 samples, 1.91%)</title><rect x="698.6" y="1301" width="22.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="701.64" y="1311.5" >c..</text>
</g>
<g >
<title>NaClSysBrk (297,399,658 samples, 0.01%)</title><rect x="32.2" y="1493" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="35.20" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (314,409,406,504 samples, 11.32%)</title><rect x="63.7" y="1365" width="133.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="66.69" y="1375.5" >do_syscall_64</text>
</g>
<g >
<title>do_syscall_64 (493,596,232 samples, 0.02%)</title><rect x="41.6" y="1317" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="44.63" y="1327.5" ></text>
</g>
<g >
<title>__folio_alloc (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1173" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="13.70" y="1183.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (592,310,512 samples, 0.02%)</title><rect x="835.8" y="1349" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="838.83" y="1359.5" ></text>
</g>
<g >
<title>uv__run_check (250,100,093 samples, 0.01%)</title><rect x="13.2" y="1413" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="16.20" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1365" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1375.5" ></text>
</g>
<g >
<title>[[vdso]] (18,812,568,357 samples, 0.68%)</title><rect x="209.9" y="1317" width="8.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="212.90" y="1327.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (49,904,689,924 samples, 1.80%)</title><rect x="393.9" y="1349" width="21.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="396.92" y="1359.5" ></text>
</g>
<g >
<title>__libc_start_main (299,464,084 samples, 0.01%)</title><rect x="13.2" y="1525" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="16.18" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (48,458,527,486 samples, 1.74%)</title><rect x="1117.4" y="1365" width="20.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1120.42" y="1375.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (345,556,867 samples, 0.01%)</title><rect x="415.5" y="1349" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="418.51" y="1359.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (1,486,763,963 samples, 0.05%)</title><rect x="11.1" y="1477" width="0.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="14.11" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (246,775,021 samples, 0.01%)</title><rect x="12.0" y="837" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="847.5" ></text>
</g>
<g >
<title>main (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1493" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.70" y="1503.5" ></text>
</g>
<g >
<title>sock_read (249,745,821 samples, 0.01%)</title><rect x="1189.9" y="1445" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1192.85" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (543,963,830 samples, 0.02%)</title><rect x="12.0" y="1381" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.02" y="1391.5" ></text>
</g>
<g >
<title>sched_clock_cpu (13,079,668,699 samples, 0.47%)</title><rect x="173.9" y="1269" width="5.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="176.87" y="1279.5" ></text>
</g>
<g >
<title>core_sys_select (1,135,409,729 samples, 0.04%)</title><rect x="882.5" y="1317" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="885.48" y="1327.5" ></text>
</g>
<g >
<title>copy_string_kernel (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1317" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.70" y="1327.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (49,904,689,924 samples, 1.80%)</title><rect x="393.9" y="1365" width="21.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="396.92" y="1375.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (937,205,822 samples, 0.03%)</title><rect x="1181.9" y="1509" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1184.88" y="1519.5" ></text>
</g>
<g >
<title>update_rq_clock (1,731,315,317 samples, 0.06%)</title><rect x="181.7" y="1301" width="0.8" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="184.75" y="1311.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (53,080,559,543 samples, 1.91%)</title><rect x="698.6" y="1317" width="22.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="701.64" y="1327.5" >c..</text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (9,534,399,947 samples, 0.34%)</title><rect x="827.6" y="1365" width="4.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="830.63" y="1375.5" ></text>
</g>
<g >
<title>main (365,801,448 samples, 0.01%)</title><rect x="1188.3" y="1493" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1191.30" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="901" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1189" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1199.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (1,486,763,963 samples, 0.05%)</title><rect x="11.1" y="1493" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="14.11" y="1503.5" ></text>
</g>
<g >
<title>[perf-2152671.map] (1,283,594,987 samples, 0.05%)</title><rect x="19.7" y="1541" width="0.6" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="22.73" y="1551.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (691,631,902 samples, 0.02%)</title><rect x="19.4" y="1525" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="22.43" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (283,234,224 samples, 0.01%)</title><rect x="12.3" y="1461" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="15.27" y="1471.5" ></text>
</g>
<g >
<title>__rcu_read_lock (246,807,934 samples, 0.01%)</title><rect x="1051.1" y="1237" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1054.12" y="1247.5" ></text>
</g>
<g >
<title>[ls] (407,962,992 samples, 0.01%)</title><rect x="10.8" y="1541" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.85" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="773" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="783.5" ></text>
</g>
<g >
<title>[sel_ldr] (2,698,954,139,732 samples, 97.13%)</title><rect x="20.3" y="1541" width="1146.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="23.27" y="1551.5" >[sel_ldr]</text>
</g>
<g >
<title>[libc.so.6] (273,707,717 samples, 0.01%)</title><rect x="1184.5" y="1525" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1187.50" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (246,775,021 samples, 0.01%)</title><rect x="12.0" y="821" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="831.5" ></text>
</g>
<g >
<title>handle_mm_fault (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1253" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.70" y="1263.5" ></text>
</g>
<g >
<title>schedule (209,312,250,556 samples, 7.53%)</title><rect x="93.6" y="1317" width="88.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.59" y="1327.5" >schedule</text>
</g>
<g >
<title>__do_sys_newstat (283,234,224 samples, 0.01%)</title><rect x="12.3" y="1413" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="15.27" y="1423.5" ></text>
</g>
<g >
<title>execve (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1397" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="13.70" y="1407.5" ></text>
</g>
<g >
<title>__check_object_size (2,812,952,410 samples, 0.10%)</title><rect x="885.6" y="1301" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="888.65" y="1311.5" ></text>
</g>
<g >
<title>[[vdso]] (2,665,921,644 samples, 0.10%)</title><rect x="34.0" y="1429" width="1.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="36.98" y="1439.5" ></text>
</g>
<g >
<title>psi_task_switch (937,972,167 samples, 0.03%)</title><rect x="166.8" y="1285" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="169.84" y="1295.5" ></text>
</g>
<g >
<title>filemap_read (444,241,884 samples, 0.02%)</title><rect x="41.6" y="1157" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="44.63" y="1167.5" ></text>
</g>
<g >
<title>mmput (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1365" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="16.33" y="1375.5" ></text>
</g>
<g >
<title>check_stack_object (5,035,233,955 samples, 0.18%)</title><rect x="927.1" y="1253" width="2.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="930.15" y="1263.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (246,803,715 samples, 0.01%)</title><rect x="140.6" y="1221" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="143.63" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt; (12,854,417,807 samples, 0.46%)</title><rect x="478.7" y="1381" width="5.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="481.73" y="1391.5" ></text>
</g>
<g >
<title>__libc_start_main (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1525" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.70" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (296,140,936 samples, 0.01%)</title><rect x="12.0" y="965" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="975.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::send_syscall (592,317,834 samples, 0.02%)</title><rect x="1166.2" y="1461" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1169.17" y="1471.5" ></text>
</g>
<g >
<title>NaClSysBrkDecoder (297,399,658 samples, 0.01%)</title><rect x="32.2" y="1509" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="35.20" y="1519.5" ></text>
</g>
<g >
<title>__fget_light (1,777,206,608 samples, 0.06%)</title><rect x="1052.4" y="1269" width="0.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1055.42" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="133" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="143.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (493,596,232 samples, 0.02%)</title><rect x="41.6" y="1397" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="44.63" y="1407.5" ></text>
</g>
<g >
<title>core::cmp::max (1,530,200,080 samples, 0.06%)</title><rect x="390.2" y="1349" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="393.16" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="405" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50,644,589,490 samples, 1.82%)</title><rect x="393.6" y="1381" width="21.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="396.60" y="1391.5" >&lt;..</text>
</g>
<g >
<title>unmap_page_range (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1285" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="16.33" y="1295.5" ></text>
</g>
<g >
<title>cpuacct_charge (4,097,338,503 samples, 0.15%)</title><rect x="158.2" y="1237" width="1.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="161.20" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="677" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="687.5" ></text>
</g>
<g >
<title>shell_execve (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1413" width="0.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="13.70" y="1423.5" ></text>
</g>
<g >
<title>std::time::Instant::now (20,490,802,418 samples, 0.74%)</title><rect x="209.4" y="1381" width="8.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="212.37" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (246,775,021 samples, 0.01%)</title><rect x="12.0" y="645" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="655.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,135,359,148 samples, 0.04%)</title><rect x="1113.8" y="1349" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1116.83" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (324,431,944,902 samples, 11.68%)</title><rect x="60.8" y="1381" width="137.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="63.84" y="1391.5" >entry_SYSCALL_64_..</text>
</g>
<g >
<title>kworker/dying (928,282,730 samples, 0.03%)</title><rect x="10.3" y="1557" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.31" y="1567.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (1,486,763,963 samples, 0.05%)</title><rect x="11.1" y="1445" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="14.11" y="1455.5" ></text>
</g>
<g >
<title>pick_next_entity (2,616,421,384 samples, 0.09%)</title><rect x="123.9" y="1269" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="126.90" y="1279.5" ></text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (543,039,989 samples, 0.02%)</title><rect x="729.8" y="1269" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="732.80" y="1279.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,302,099,496 samples, 0.05%)</title><rect x="1189.1" y="1445" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1192.06" y="1455.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_writefds (63,772,645,308 samples, 2.30%)</title><rect x="1139.0" y="1413" width="27.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1142.05" y="1423.5" >r..</text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (228,693,601,854 samples, 8.23%)</title><rect x="730.1" y="1365" width="97.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="733.11" y="1375.5" >parking_lot..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,661,182 samples, 0.01%)</title><rect x="12.0" y="1141" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1151.5" ></text>
</g>
<g >
<title>rustposix::interface::types::FdSet::set (789,798,979 samples, 0.03%)</title><rect x="854.1" y="1397" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="857.07" y="1407.5" ></text>
</g>
<g >
<title>check_cfs_rq_runtime (3,208,006,671 samples, 0.12%)</title><rect x="122.5" y="1269" width="1.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="125.53" y="1279.5" ></text>
</g>
<g >
<title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (543,102,671 samples, 0.02%)</title><rect x="17.1" y="1413" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="20.13" y="1423.5" ></text>
</g>
<g >
<title>all (2,778,659,430,985 samples, 100%)</title><rect x="10.0" y="1573" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" ></text>
</g>
<g >
<title>_compound_head (444,242,806 samples, 0.02%)</title><rect x="11.3" y="1205" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="14.30" y="1215.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,073,395,677 samples, 0.07%)</title><rect x="897.9" y="1301" width="0.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="900.87" y="1311.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (543,059,952 samples, 0.02%)</title><rect x="35.7" y="1429" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="38.73" y="1439.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1333" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.70" y="1343.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (975,301,393 samples, 0.04%)</title><rect x="12.0" y="1509" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="14.99" y="1519.5" ></text>
</g>
<g >
<title>load_elf_binary (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1413" width="0.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="16.33" y="1423.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (6,638,929,659 samples, 0.24%)</title><rect x="154.5" y="1237" width="2.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="157.48" y="1247.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (3,307,731,850 samples, 0.12%)</title><rect x="40.1" y="1477" width="1.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="43.10" y="1487.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (2,073,171,791 samples, 0.07%)</title><rect x="193.9" y="1301" width="0.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="196.85" y="1311.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (379,619,379 samples, 0.01%)</title><rect x="10.5" y="1541" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="13.54" y="1551.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (8,208,533,743 samples, 0.30%)</title><rect x="386.7" y="1349" width="3.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="389.68" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="853" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="863.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1,826,471,535 samples, 0.07%)</title><rect x="1187.5" y="1541" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1190.46" y="1551.5" ></text>
</g>
<g >
<title>ip_finish_output (246,799,581 samples, 0.01%)</title><rect x="1166.3" y="1189" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1169.32" y="1199.5" ></text>
</g>
<g >
<title>filename_lookup (283,234,224 samples, 0.01%)</title><rect x="12.3" y="1365" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="15.27" y="1375.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (1,926,122,899 samples, 0.07%)</title><rect x="180.2" y="1301" width="0.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="183.15" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (297,399,658 samples, 0.01%)</title><rect x="32.2" y="1445" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="35.20" y="1455.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (1,486,763,963 samples, 0.05%)</title><rect x="11.1" y="1429" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="14.11" y="1439.5" ></text>
</g>
<g >
<title>get_page_from_freelist (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1141" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="13.70" y="1151.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (148,520,993,854 samples, 5.35%)</title><rect x="415.7" y="1365" width="63.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="418.66" y="1375.5" >core::..</text>
</g>
<g >
<title>rseq_get_rseq_cs (345,502,915 samples, 0.01%)</title><rect x="194.4" y="1269" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="197.40" y="1279.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (2,320,112,498 samples, 0.08%)</title><rect x="1138.1" y="1413" width="0.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1141.06" y="1423.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10,775,051,146 samples, 0.39%)</title><rect x="386.5" y="1381" width="4.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="389.47" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_execve (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1349" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.70" y="1359.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (246,828,496 samples, 0.01%)</title><rect x="415.5" y="1333" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="418.51" y="1343.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (888,544,341 samples, 0.03%)</title><rect x="194.2" y="1285" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="197.17" y="1295.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::sendto (592,317,834 samples, 0.02%)</title><rect x="1166.2" y="1445" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1169.17" y="1455.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::try_borrow (542,940,661 samples, 0.02%)</title><rect x="207.0" y="1317" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="209.98" y="1327.5" ></text>
</g>
<g >
<title>update_process_times (246,828,496 samples, 0.01%)</title><rect x="415.5" y="1253" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="418.51" y="1263.5" ></text>
</g>
<g >
<title>__sched_yield (1,545,478,624 samples, 0.06%)</title><rect x="1179.2" y="1525" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1182.15" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (395,896,016 samples, 0.01%)</title><rect x="12.0" y="1269" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1279.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (246,822,459 samples, 0.01%)</title><rect x="171.6" y="1285" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="174.62" y="1295.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,760,609,525 samples, 0.06%)</title><rect x="1189.1" y="1541" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1192.06" y="1551.5" ></text>
</g>
<g >
<title>_copy_to_iter (345,524,848 samples, 0.01%)</title><rect x="41.7" y="1125" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="44.65" y="1135.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (444,241,884 samples, 0.02%)</title><rect x="41.6" y="1205" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="44.63" y="1215.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (246,844,844 samples, 0.01%)</title><rect x="20.7" y="1525" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="23.73" y="1535.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (345,556,867 samples, 0.01%)</title><rect x="415.5" y="1365" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="418.51" y="1375.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (4,571,880,109 samples, 0.16%)</title><rect x="16.9" y="1525" width="1.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="19.86" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="837" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="847.5" ></text>
</g>
<g >
<title>sched_clock (1,036,171,521 samples, 0.04%)</title><rect x="173.4" y="1269" width="0.5" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="176.43" y="1279.5" ></text>
</g>
<g >
<title>__sched_yield (366,425,568,060 samples, 13.19%)</title><rect x="46.1" y="1397" width="155.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="49.09" y="1407.5" >__sched_yield</text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (51,611,549,058 samples, 1.86%)</title><rect x="676.7" y="1301" width="21.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="679.73" y="1311.5" >c..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,580,444,712 samples, 0.06%)</title><rect x="1184.6" y="1541" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1187.61" y="1551.5" ></text>
</g>
<g >
<title>core_sys_select (442,687,839,061 samples, 15.93%)</title><rect x="901.2" y="1301" width="188.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="904.24" y="1311.5" >core_sys_select</text>
</g>
<g >
<title>__ip_finish_output (246,799,581 samples, 0.01%)</title><rect x="1166.3" y="1173" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1169.32" y="1183.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (9,534,399,947 samples, 0.34%)</title><rect x="827.6" y="1349" width="4.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="830.63" y="1359.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (493,596,232 samples, 0.02%)</title><rect x="41.6" y="1413" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="44.63" y="1423.5" ></text>
</g>
<g >
<title>lind_pread (493,596,232 samples, 0.02%)</title><rect x="41.6" y="1477" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="44.63" y="1487.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (1,486,763,963 samples, 0.05%)</title><rect x="11.1" y="1509" width="0.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="14.11" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (296,219,796 samples, 0.01%)</title><rect x="32.9" y="1477" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.87" y="1487.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (13,428,202,373 samples, 0.48%)</title><rect x="25.7" y="1509" width="5.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="28.66" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,220,275,990 samples, 0.22%)</title><rect x="481.3" y="1301" width="2.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="484.34" y="1311.5" ></text>
</g>
<g >
<title>get_arg_page (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1301" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="13.70" y="1311.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (9,090,090,570 samples, 0.33%)</title><rect x="827.8" y="1333" width="3.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="830.82" y="1343.5" ></text>
</g>
<g >
<title>ip_output (246,799,581 samples, 0.01%)</title><rect x="1166.3" y="1205" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1169.32" y="1215.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::sigcheck (3,364,679,344 samples, 0.12%)</title><rect x="205.8" y="1413" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="208.78" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (542,150,515 samples, 0.02%)</title><rect x="10.3" y="1541" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.31" y="1551.5" ></text>
</g>
<g >
<title>parse_and_execute (267,076,720 samples, 0.01%)</title><rect x="1188.3" y="1461" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1191.30" y="1471.5" ></text>
</g>
<g >
<title>__anon_vma_interval_tree_remove (297,399,658 samples, 0.01%)</title><rect x="32.2" y="1317" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="35.20" y="1327.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (409,645,325,206 samples, 14.74%)</title><rect x="653.3" y="1381" width="173.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="656.27" y="1391.5" >&lt;parking_lot::raw_rwlo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1173" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1183.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_duration_since (4,112,865,392 samples, 0.15%)</title><rect x="207.6" y="1349" width="1.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="210.63" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1029" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="1039.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (41,327,394,842 samples, 1.49%)</title><rect x="484.2" y="1365" width="17.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="487.19" y="1375.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (12,360,810,336 samples, 0.44%)</title><rect x="478.7" y="1333" width="5.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="481.73" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (554,397,253,087 samples, 19.95%)</title><rect x="878.9" y="1365" width="235.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="881.88" y="1375.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>reader_loop (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1477" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.70" y="1487.5" ></text>
</g>
<g >
<title>node::InternalCallbackScope::Close (250,100,093 samples, 0.01%)</title><rect x="13.2" y="1349" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="16.20" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="805" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (297,399,658 samples, 0.01%)</title><rect x="32.2" y="1413" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="35.20" y="1423.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (12,404,166,656 samples, 0.45%)</title><rect x="386.1" y="1397" width="5.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="389.05" y="1407.5" ></text>
</g>
<g >
<title>[bash] (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1429" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="13.70" y="1439.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (975,301,393 samples, 0.04%)</title><rect x="12.0" y="1493" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="14.99" y="1503.5" ></text>
</g>
<g >
<title>_Fork (1,480,775,337 samples, 0.05%)</title><rect x="11.1" y="1397" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="14.11" y="1407.5" ></text>
</g>
<g >
<title>NaClSysClockGetTimeDecoder (9,034,510,709 samples, 0.33%)</title><rect x="32.3" y="1509" width="3.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="35.33" y="1519.5" ></text>
</g>
<g >
<title>set_next_entity (592,277,538 samples, 0.02%)</title><rect x="140.9" y="1253" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="143.95" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (377,474,907,959 samples, 13.58%)</title><rect x="225.7" y="1397" width="160.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="228.75" y="1407.5" >&lt;alloc::sync::Arc&lt;T,..</text>
</g>
<g >
<title>libc::unix::linux_like::FD_ZERO (789,875,263 samples, 0.03%)</title><rect x="853.7" y="1381" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="856.71" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_pselect6 (525,025,284,952 samples, 18.89%)</title><rect x="882.2" y="1333" width="223.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="885.23" y="1343.5" >__x64_sys_pselect6</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="101" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="111.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,234,055,898 samples, 0.04%)</title><rect x="1053.2" y="1269" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1056.17" y="1279.5" ></text>
</g>
<g >
<title>uv_spawn (1,486,763,963 samples, 0.05%)</title><rect x="11.1" y="1461" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.11" y="1471.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (3,689,444,627 samples, 0.13%)</title><rect x="36.2" y="1509" width="1.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="39.19" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1237" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1247.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (49,149,672,434 samples, 1.77%)</title><rect x="1117.1" y="1381" width="20.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1120.13" y="1391.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::sub_timespec (3,651,357,164 samples, 0.13%)</title><rect x="207.8" y="1317" width="1.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="210.82" y="1327.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (2,647,474,436,282 samples, 95.28%)</title><rect x="41.8" y="1429" width="1124.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="44.84" y="1439.5" >rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall</text>
</g>
<g >
<title>node::InternalCallbackScope::~InternalCallbackScope (250,100,093 samples, 0.01%)</title><rect x="13.2" y="1365" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="16.20" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (246,775,021 samples, 0.01%)</title><rect x="12.0" y="853" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.04" y="863.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt; (493,669,859 samples, 0.02%)</title><rect x="18.1" y="1493" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="21.05" y="1503.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt; (493,669,859 samples, 0.02%)</title><rect x="18.1" y="1477" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="21.05" y="1487.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (5,033,442,180 samples, 0.18%)</title><rect x="199.6" y="1381" width="2.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="202.56" y="1391.5" ></text>
</g>
<g >
<title>rustposix::interface::types::FdSet::is_set (40,088,953,546 samples, 1.44%)</title><rect x="836.7" y="1397" width="17.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="839.69" y="1407.5" ></text>
</g>
<g >
<title>copy_p4d_range (1,382,043,222 samples, 0.05%)</title><rect x="11.1" y="1237" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="14.13" y="1247.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (345,207,033 samples, 0.01%)</title><rect x="386.5" y="1349" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="389.53" y="1359.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (9,090,090,570 samples, 0.33%)</title><rect x="827.8" y="1317" width="3.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="830.82" y="1327.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (543,102,671 samples, 0.02%)</title><rect x="17.1" y="1477" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="20.13" y="1487.5" ></text>
</g>
<g >
<title>core::hint::spin_loop (18,845,663,400 samples, 0.68%)</title><rect x="721.5" y="1285" width="8.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="724.54" y="1295.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,854,417,807 samples, 0.46%)</title><rect x="478.7" y="1365" width="5.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="481.73" y="1375.5" ></text>
</g>
<g >
<title>native_sched_clock (394,931,004 samples, 0.01%)</title><rect x="167.1" y="1221" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="170.07" y="1231.5" ></text>
</g>
<g >
<title>native_sched_clock (493,676,634 samples, 0.02%)</title><rect x="183.7" y="1237" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="186.66" y="1247.5" ></text>
</g>
<g >
<title>__x64_sys_read (493,596,232 samples, 0.02%)</title><rect x="41.6" y="1301" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="44.63" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="949" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="959.5" ></text>
</g>
<g >
<title>cfree (11,225,363,598 samples, 0.40%)</title><rect x="479.2" y="1317" width="4.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="482.21" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="917" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="927.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::consumer::Consumer&lt;u8&gt;&gt;&gt; (9,534,399,947 samples, 0.34%)</title><rect x="827.6" y="1381" width="4.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="830.63" y="1391.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (493,676,634 samples, 0.02%)</title><rect x="183.7" y="1253" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="186.66" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (543,963,830 samples, 0.02%)</title><rect x="12.0" y="1429" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.02" y="1439.5" ></text>
</g>
<g >
<title>__mmput (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1349" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="16.33" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (16,413,369,486 samples, 0.59%)</title><rect x="871.9" y="1365" width="7.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="874.90" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (246,775,021 samples, 0.01%)</title><rect x="12.0" y="757" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="767.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (1,480,775,337 samples, 0.05%)</title><rect x="11.1" y="1285" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="14.11" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="341" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="351.5" ></text>
</g>
<g >
<title>lind_select (2,647,474,436,282 samples, 95.28%)</title><rect x="41.8" y="1477" width="1124.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="44.84" y="1487.5" >lind_select</text>
</g>
<g >
<title>__xstat64 (283,234,224 samples, 0.01%)</title><rect x="12.3" y="1477" width="0.1" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="15.27" y="1487.5" ></text>
</g>
<g >
<title>__rdl_alloc (1,234,089,845 samples, 0.04%)</title><rect x="387.5" y="1333" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="390.48" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="821" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="831.5" ></text>
</g>
<g >
<title>vma_merge (297,399,658 samples, 0.01%)</title><rect x="32.2" y="1365" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="35.20" y="1375.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (3,689,444,627 samples, 0.13%)</title><rect x="36.2" y="1493" width="1.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="39.19" y="1503.5" ></text>
</g>
<g >
<title>vma_alloc_folio (237,230,004 samples, 0.01%)</title><rect x="10.7" y="1189" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.70" y="1199.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,727,804,340 samples, 0.06%)</title><rect x="186.7" y="1349" width="0.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="189.74" y="1359.5" ></text>
</g>
<g >
<title>worker (688,808,527 samples, 0.02%)</title><rect x="12.9" y="1509" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="15.89" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="85" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,480,775,337 samples, 0.05%)</title><rect x="11.1" y="1381" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="14.11" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1301" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1311.5" ></text>
</g>
<g >
<title>parking_lot_core::spinwait::cpu_relax (19,981,100,957 samples, 0.72%)</title><rect x="721.5" y="1301" width="8.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="724.54" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="53" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="63.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (283,929,465,826 samples, 10.22%)</title><rect x="65.0" y="1349" width="120.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="68.01" y="1359.5" >__x64_sys_sched..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (246,775,021 samples, 0.01%)</title><rect x="12.0" y="885" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="895.5" ></text>
</g>
<g >
<title>tcp_write_xmit (246,799,581 samples, 0.01%)</title><rect x="1166.3" y="1285" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1169.32" y="1295.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (8,441,550,823 samples, 0.30%)</title><rect x="925.7" y="1269" width="3.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="928.70" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (593,331,065 samples, 0.02%)</title><rect x="12.0" y="1445" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="14.99" y="1455.5" ></text>
</g>
<g >
<title>__select (606,223,704,627 samples, 21.82%)</title><rect x="859.1" y="1381" width="257.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="862.10" y="1391.5" >__select</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_pause (18,845,663,400 samples, 0.68%)</title><rect x="721.5" y="1269" width="8.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="724.54" y="1279.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (3,689,444,627 samples, 0.13%)</title><rect x="36.2" y="1413" width="1.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="39.19" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (641,778,315 samples, 0.02%)</title><rect x="168.1" y="1269" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="171.08" y="1279.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::signalflag_get (543,102,671 samples, 0.02%)</title><rect x="17.1" y="1493" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="20.13" y="1503.5" ></text>
</g>
<g >
<title>_start (299,464,084 samples, 0.01%)</title><rect x="13.2" y="1541" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="16.18" y="1551.5" ></text>
</g>
<g >
<title>libc::unix::linux_like::FD_ISSET (21,238,044,780 samples, 0.76%)</title><rect x="1151.1" y="1381" width="9.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1154.12" y="1391.5" ></text>
</g>
<g >
<title>__do_sys_clone (1,480,775,337 samples, 0.05%)</title><rect x="11.1" y="1333" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="14.11" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (283,234,224 samples, 0.01%)</title><rect x="12.3" y="1445" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="15.27" y="1455.5" ></text>
</g>
<g >
<title>__libc_start_main (321,267,218 samples, 0.01%)</title><rect x="10.1" y="1525" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.11" y="1535.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (2,647,474,436,282 samples, 95.28%)</title><rect x="41.8" y="1445" width="1124.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="44.84" y="1455.5" >rustposix::safeposix::dispatcher::dispatcher::{{closure}}</text>
</g>
<g >
<title>prepare_task_switch (789,874,613 samples, 0.03%)</title><rect x="166.5" y="1285" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="169.47" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (838,505,906 samples, 0.03%)</title><rect x="63.3" y="1365" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="66.33" y="1375.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (345,546,335 samples, 0.01%)</title><rect x="1184.4" y="1525" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1187.35" y="1535.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1,480,946,346 samples, 0.05%)</title><rect x="15.9" y="1525" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="18.90" y="1535.5" ></text>
</g>
<g >
<title>rustposix::interface::timer::readtimer (691,140,164 samples, 0.02%)</title><rect x="17.4" y="1509" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="20.36" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="517" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="527.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (444,558,679 samples, 0.02%)</title><rect x="208.8" y="1301" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="211.79" y="1311.5" ></text>
</g>
<g >
<title>rustposix::interface::types::kernel_select (617,279,512,301 samples, 22.22%)</title><rect x="854.4" y="1397" width="262.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="857.40" y="1407.5" >rustposix::interface::types::kernel..</text>
</g>
<g >
<title>pick_next_entity (9,280,437,374 samples, 0.33%)</title><rect x="136.3" y="1253" width="4.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="139.32" y="1263.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.isra.0 (236,152,566 samples, 0.01%)</title><rect x="1189.7" y="1461" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1192.71" y="1471.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::TRUSTED_SIGNAL_FLAG::__getit (543,102,671 samples, 0.02%)</title><rect x="17.1" y="1445" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="20.13" y="1455.5" ></text>
</g>
<g >
<title>sock_poll (1,283,501,451 samples, 0.05%)</title><rect x="1088.7" y="1285" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1091.69" y="1295.5" ></text>
</g>
<g >
<title>swapper (2,155,543,609 samples, 0.08%)</title><rect x="1188.9" y="1557" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1191.89" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="69" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="79.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1509" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="16.33" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (394,955,376 samples, 0.01%)</title><rect x="38.3" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="41.32" y="1487.5" ></text>
</g>
<g >
<title>ovl_read_iter (444,241,884 samples, 0.02%)</title><rect x="41.6" y="1253" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="44.63" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="485" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="629" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="639.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (987,434,893 samples, 0.04%)</title><rect x="1114.3" y="1365" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1117.31" y="1375.5" ></text>
</g>
<g >
<title>__switch_to (1,481,023,581 samples, 0.05%)</title><rect x="112.6" y="1285" width="0.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="115.56" y="1295.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,727,756,806 samples, 0.06%)</title><rect x="392.6" y="1397" width="0.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="395.62" y="1407.5" ></text>
</g>
<g >
<title>inet_sendmsg (592,317,834 samples, 0.02%)</title><rect x="1166.2" y="1349" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1169.17" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (395,896,016 samples, 0.01%)</title><rect x="12.0" y="1317" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1327.5" ></text>
</g>
<g >
<title>rustposix::interface::types::kernel_select (740,510,095 samples, 0.03%)</title><rect x="18.5" y="1493" width="0.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="21.49" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (271,895,696 samples, 0.01%)</title><rect x="10.1" y="1461" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.11" y="1471.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (492,736,246 samples, 0.02%)</title><rect x="179.2" y="1253" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="182.21" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="245" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="255.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (345,567,550 samples, 0.01%)</title><rect x="53.6" y="1381" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="56.57" y="1391.5" ></text>
</g>
<g >
<title>rustposix::interface::types::FdSet::is_empty (1,431,485,459 samples, 0.05%)</title><rect x="836.1" y="1397" width="0.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="839.08" y="1407.5" ></text>
</g>
<g >
<title>__calc_delta (5,084,645,879 samples, 0.18%)</title><rect x="133.1" y="1253" width="2.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="136.07" y="1263.5" ></text>
</g>
<g >
<title>tcp_push_one (246,799,581 samples, 0.01%)</title><rect x="1166.3" y="1301" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1169.32" y="1311.5" ></text>
</g>
<g >
<title>thread_main (348,427,628 samples, 0.01%)</title><rect x="1189.8" y="1509" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1192.83" y="1519.5" ></text>
</g>
<g >
<title>__switch_to (592,367,661 samples, 0.02%)</title><rect x="53.7" y="1381" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="56.71" y="1391.5" ></text>
</g>
<g >
<title>[[vdso]] (2,517,828,390 samples, 0.09%)</title><rect x="40.3" y="1461" width="1.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="43.33" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="757" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="767.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (8,933,845,926 samples, 0.32%)</title><rect x="175.4" y="1237" width="3.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="178.42" y="1247.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (493,669,859 samples, 0.02%)</title><rect x="18.1" y="1461" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="21.05" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (296,140,936 samples, 0.01%)</title><rect x="12.0" y="1013" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1023.5" ></text>
</g>
<g >
<title>update_rq_clock (1,135,390,201 samples, 0.04%)</title><rect x="183.4" y="1301" width="0.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="186.38" y="1311.5" ></text>
</g>
<g >
<title>switch_mm (237,742,182 samples, 0.01%)</title><rect x="1189.5" y="1397" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1192.51" y="1407.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (50,358,096,341 samples, 1.81%)</title><rect x="655.0" y="1333" width="21.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="657.99" y="1343.5" >c..</text>
</g>
<g >
<title>sched_clock (394,931,004 samples, 0.01%)</title><rect x="167.1" y="1253" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="170.07" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (433,244,478 samples, 0.02%)</title><rect x="12.5" y="1525" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.50" y="1535.5" ></text>
</g>
<g >
<title>NaClIsValidClockId (246,849,131 samples, 0.01%)</title><rect x="36.1" y="1461" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="39.06" y="1471.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,221,196,811 samples, 0.08%)</title><rect x="932.8" y="1285" width="0.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="935.77" y="1295.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,172,849,809 samples, 0.08%)</title><rect x="197.7" y="1365" width="0.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="200.69" y="1375.5" ></text>
</g>
<g >
<title>_compound_head (613,650,147 samples, 0.02%)</title><rect x="13.3" y="1253" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="16.33" y="1263.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_readfds (2,166,385,422,574 samples, 77.97%)</title><rect x="218.1" y="1413" width="920.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="221.08" y="1423.5" >rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_readfds</text>
</g>
<g >
<title>core::cell::is_reading (542,940,661 samples, 0.02%)</title><rect x="207.0" y="1285" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="209.98" y="1295.5" ></text>
</g>
<g >
<title>__sys_sendto (592,317,834 samples, 0.02%)</title><rect x="1166.2" y="1365" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1169.17" y="1375.5" ></text>
</g>
<g >
<title>__get_user_8 (394,936,671 samples, 0.01%)</title><rect x="194.2" y="1269" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="197.23" y="1279.5" ></text>
</g>
<g >
<title>update_rq_clock (18,113,853,345 samples, 0.65%)</title><rect x="171.7" y="1285" width="7.7" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="174.73" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (395,896,016 samples, 0.01%)</title><rect x="12.0" y="1301" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.04" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="165" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="175.5" ></text>
</g>
<g >
<title>__switch_to_asm (1,283,537,791 samples, 0.05%)</title><rect x="54.0" y="1381" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="56.97" y="1391.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (13,970,175,959 samples, 0.50%)</title><rect x="1107.5" y="1333" width="5.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1110.52" y="1343.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (493,596,232 samples, 0.02%)</title><rect x="41.6" y="1381" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="44.63" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="357" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="367.5" ></text>
</g>
<g >
<title>__schedule (199,312,903,472 samples, 7.17%)</title><rect x="94.8" y="1301" width="84.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="97.78" y="1311.5" >__schedule</text>
</g>
<g >
<title>do_pselect.constprop.0 (740,510,274 samples, 0.03%)</title><rect x="1105.6" y="1333" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1108.59" y="1343.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1,086,088,769 samples, 0.04%)</title><rect x="171.2" y="1285" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="174.16" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,678,069,305 samples, 0.06%)</title><rect x="1178.4" y="1525" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1181.44" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (365,801,448 samples, 0.01%)</title><rect x="1188.3" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1191.30" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1541" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.33" y="1551.5" ></text>
</g>
<g >
<title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (1,735,684,160 samples, 0.06%)</title><rect x="206.2" y="1317" width="0.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="209.24" y="1327.5" ></text>
</g>
<g >
<title>NaClAppThreadLauncher (273,707,717 samples, 0.01%)</title><rect x="1184.5" y="1509" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1187.50" y="1519.5" ></text>
</g>
<g >
<title>vma_prepare (297,399,658 samples, 0.01%)</title><rect x="32.2" y="1349" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="35.20" y="1359.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::new (3,063,200,650 samples, 0.11%)</title><rect x="391.3" y="1397" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="394.32" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,661,182 samples, 0.01%)</title><rect x="12.0" y="1077" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.04" y="1087.5" ></text>
</g>
<g >
<title>__clone (273,707,717 samples, 0.01%)</title><rect x="1184.5" y="1541" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1187.50" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (543,963,830 samples, 0.02%)</title><rect x="12.0" y="1397" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.02" y="1407.5" ></text>
</g>
<g >
<title>exec_mmap (1,298,005,835 samples, 0.05%)</title><rect x="13.3" y="1381" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="16.33" y="1391.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (246,799,581 samples, 0.01%)</title><rect x="1166.3" y="1237" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1169.32" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1413" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="15.53" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (40,043,853,586 samples, 1.44%)</title><rect x="484.7" y="1349" width="17.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="487.73" y="1359.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (789,875,961 samples, 0.03%)</title><rect x="478.7" y="1301" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="481.73" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (235,806,969 samples, 0.01%)</title><rect x="12.5" y="1269" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.53" y="1279.5" ></text>
</g>
<g >
<title>NaClLog (296,203,559 samples, 0.01%)</title><rect x="20.6" y="1525" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="23.61" y="1535.5" ></text>
</g>
</g>
</svg>
