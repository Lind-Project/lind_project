<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1654" onload="init(evt)" viewBox="0 0 1200 1654" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1654.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1637" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1637" > </text>
<g id="frames">
<g >
<title>reweight_entity (1,098,727,036 samples, 0.03%)</title><rect x="740.3" y="1189" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="743.29" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="997" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="1007.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,758,137,180 samples, 0.08%)</title><rect x="1187.5" y="1461" width="1.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1190.52" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,001,127,763 samples, 0.06%)</title><rect x="1189.1" y="1445" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.14" y="1455.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (311,861,616 samples, 0.01%)</title><rect x="102.2" y="1205" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="105.17" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_rq_lock_irqsave (296,033,959 samples, 0.01%)</title><rect x="747.6" y="1189" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="750.58" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1269" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (389,479,835 samples, 0.01%)</title><rect x="21.3" y="1557" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="24.35" y="1567.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (1,121,416,269 samples, 0.03%)</title><rect x="517.0" y="1541" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="519.98" y="1551.5" ></text>
</g>
<g >
<title>unmap_page_range (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1317" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="103.91" y="1327.5" ></text>
</g>
<g >
<title>rseq_get_rseq_cs (301,568,441 samples, 0.01%)</title><rect x="758.1" y="1269" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="761.13" y="1279.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (43,168,842,873 samples, 1.32%)</title><rect x="703.1" y="1381" width="15.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="706.13" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (2,139,686,165 samples, 0.07%)</title><rect x="763.9" y="1429" width="0.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="766.91" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,515,498,448 samples, 0.11%)</title><rect x="94.2" y="1221" width="1.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.21" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (1,096,498,104 samples, 0.03%)</title><rect x="12.9" y="1573" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.91" y="1583.5" ></text>
</g>
<g >
<title>schedule_idle (6,100,562,321 samples, 0.19%)</title><rect x="82.6" y="1509" width="2.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="85.58" y="1519.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (1,101,301,491 samples, 0.03%)</title><rect x="593.1" y="1429" width="0.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="596.10" y="1439.5" ></text>
</g>
<g >
<title>worker_thread (986,386,618 samples, 0.03%)</title><rect x="855.6" y="1525" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="858.59" y="1535.5" ></text>
</g>
<g >
<title>sock_read_iter (1,684,162,946 samples, 0.05%)</title><rect x="1189.2" y="1365" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1192.23" y="1375.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (3,118,579,842 samples, 0.10%)</title><rect x="689.8" y="1253" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="692.77" y="1263.5" ></text>
</g>
<g >
<title>sched_clock_cpu (463,535,140 samples, 0.01%)</title><rect x="873.8" y="1301" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="876.84" y="1311.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (1,446,212,796 samples, 0.04%)</title><rect x="1189.3" y="1301" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1192.31" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1109" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1119.5" ></text>
</g>
<g >
<title>new_inode_pseudo (18,722,169,170 samples, 0.57%)</title><rect x="676.8" y="1317" width="6.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="679.85" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="869" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1333" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1343.5" ></text>
</g>
<g >
<title>cpu_startup_entry (822,560,783 samples, 0.03%)</title><rect x="838.9" y="1541" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="841.87" y="1551.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (760,412,643 samples, 0.02%)</title><rect x="102.3" y="1205" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="105.30" y="1215.5" ></text>
</g>
<g >
<title>accept (142,643,053,350 samples, 4.37%)</title><rect x="667.4" y="1429" width="51.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="670.40" y="1439.5" >accept</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1077" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1445" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1455.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (746,337,423 samples, 0.02%)</title><rect x="27.9" y="1573" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="30.88" y="1583.5" ></text>
</g>
<g >
<title>memcg_account_kmem (332,606,118 samples, 0.01%)</title><rect x="683.2" y="1221" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="686.19" y="1231.5" ></text>
</g>
<g >
<title>start_kernel (946,926,654 samples, 0.03%)</title><rect x="20.8" y="1525" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="23.81" y="1535.5" ></text>
</g>
<g >
<title>__schedule (1,399,656,747 samples, 0.04%)</title><rect x="1185.7" y="1493" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1188.65" y="1503.5" ></text>
</g>
<g >
<title>wake_affine (1,011,340,945 samples, 0.03%)</title><rect x="655.5" y="1285" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="658.52" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1157" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="1167.5" ></text>
</g>
<g >
<title>enqueue_task_fair (2,125,647,362 samples, 0.07%)</title><rect x="32.3" y="1285" width="0.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="35.33" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,283,029,422 samples, 0.13%)</title><rect x="94.1" y="1445" width="1.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.12" y="1455.5" ></text>
</g>
<g >
<title>save_fpregs_to_fpstate (371,408,998 samples, 0.01%)</title><rect x="762.6" y="1381" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="765.63" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_read (401,254,496 samples, 0.01%)</title><rect x="106.0" y="1541" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="109.00" y="1551.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (5,009,009,765 samples, 0.15%)</title><rect x="91.0" y="1493" width="1.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="94.01" y="1503.5" ></text>
</g>
<g >
<title>cpu_startup_entry (152,234,091,036 samples, 4.67%)</title><rect x="30.2" y="1541" width="55.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="33.15" y="1551.5" >cpu_s..</text>
</g>
<g >
<title>destroy_inode (7,783,031,551 samples, 0.24%)</title><rect x="711.7" y="1205" width="2.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="714.66" y="1215.5" ></text>
</g>
<g >
<title>sel_ldr (2,017,385,519,008 samples, 61.83%)</title><rect x="106.8" y="1589" width="729.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="109.75" y="1599.5" >sel_ldr</text>
</g>
<g >
<title>tick_nohz_idle_exit (1,867,668,712 samples, 0.06%)</title><rect x="1147.6" y="1509" width="0.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1150.61" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (724,856,769,287 samples, 22.21%)</title><rect x="860.8" y="1461" width="262.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="863.77" y="1471.5" >cpuidle_enter_state</text>
</g>
<g >
<title>cpuidle_idle_call (903,701,641 samples, 0.03%)</title><rect x="106.2" y="1509" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="109.18" y="1519.5" ></text>
</g>
<g >
<title>do_idle (5,432,561,294 samples, 0.17%)</title><rect x="103.5" y="1525" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="106.48" y="1535.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (645,389,347 samples, 0.02%)</title><rect x="849.4" y="1253" width="0.3" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="852.43" y="1263.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1,531,807,160 samples, 0.05%)</title><rect x="713.8" y="1157" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="716.81" y="1167.5" ></text>
</g>
<g >
<title>enqueue_task (747,750,775 samples, 0.02%)</title><rect x="1173.0" y="1301" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1175.95" y="1311.5" ></text>
</g>
<g >
<title>poll_idle (758,639,873 samples, 0.02%)</title><rect x="16.1" y="1445" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="19.05" y="1455.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (2,023,673,096 samples, 0.06%)</title><rect x="692.6" y="1253" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="695.55" y="1263.5" ></text>
</g>
<g >
<title>pick_next_task (320,277,451 samples, 0.01%)</title><rect x="1185.8" y="1477" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1188.81" y="1487.5" ></text>
</g>
<g >
<title>rcu_core (2,667,250,474 samples, 0.08%)</title><rect x="34.3" y="1349" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="37.34" y="1359.5" ></text>
</g>
<g >
<title>[expr] (2,044,832,236 samples, 0.06%)</title><rect x="11.2" y="1525" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="14.21" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (4,742,794,368 samples, 0.15%)</title><rect x="103.5" y="1461" width="1.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="106.51" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (722,809,206 samples, 0.02%)</title><rect x="1171.8" y="1557" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1174.80" y="1567.5" ></text>
</g>
<g >
<title>__ip_finish_output (420,672,420 samples, 0.01%)</title><rect x="764.4" y="1221" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="767.44" y="1231.5" ></text>
</g>
<g >
<title>[grep] (693,655,661 samples, 0.02%)</title><rect x="15.3" y="1525" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="18.31" y="1535.5" ></text>
</g>
<g >
<title>copy_process (3,953,163,852 samples, 0.12%)</title><rect x="843.2" y="1477" width="1.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="846.19" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (590,770,938 samples, 0.02%)</title><rect x="720.1" y="1381" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="723.06" y="1391.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (408,784,105 samples, 0.01%)</title><rect x="101.7" y="1173" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="104.70" y="1183.5" ></text>
</g>
<g >
<title>mmput (4,539,544,594 samples, 0.14%)</title><rect x="99.3" y="1397" width="1.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="102.26" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (136,064,513,876 samples, 4.17%)</title><rect x="669.5" y="1397" width="49.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="672.54" y="1407.5" >do_s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="565" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="575.5" ></text>
</g>
<g >
<title>seq_read (566,185,886 samples, 0.02%)</title><rect x="844.9" y="1461" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="847.89" y="1471.5" ></text>
</g>
<g >
<title>wake_up_process (1,222,076,616 samples, 0.04%)</title><rect x="1172.8" y="1349" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1175.83" y="1359.5" ></text>
</g>
<g >
<title>schedule (534,268,946 samples, 0.02%)</title><rect x="855.4" y="1509" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="858.39" y="1519.5" ></text>
</g>
<g >
<title>wake_up_process (344,778,340 samples, 0.01%)</title><rect x="85.4" y="1285" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="88.39" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="821" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="831.5" ></text>
</g>
<g >
<title>psi_task_switch (7,518,283,966 samples, 0.23%)</title><rect x="1142.2" y="1477" width="2.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1145.19" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (135,102,443,538 samples, 4.14%)</title><rect x="31.2" y="1461" width="48.8" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="34.15" y="1471.5" >cpui..</text>
</g>
<g >
<title>perf_mmap__push (4,342,407,730 samples, 0.13%)</title><rect x="101.2" y="1509" width="1.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="104.18" y="1519.5" ></text>
</g>
<g >
<title>start_secondary (11,703,032,912 samples, 0.36%)</title><rect x="16.6" y="1557" width="4.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="19.58" y="1567.5" ></text>
</g>
<g >
<title>__napi_poll (309,838,459 samples, 0.01%)</title><rect x="764.5" y="1093" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="767.45" y="1103.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (29,025,330,383 samples, 0.89%)</title><rect x="504.1" y="1493" width="10.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="507.15" y="1503.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1,076,142,765 samples, 0.03%)</title><rect x="1144.5" y="1461" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1147.52" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1557" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="103.91" y="1567.5" ></text>
</g>
<g >
<title>mod_objcg_state (842,327,583 samples, 0.03%)</title><rect x="690.6" y="1237" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="693.59" y="1247.5" ></text>
</g>
<g >
<title>rest_init (946,926,654 samples, 0.03%)</title><rect x="20.8" y="1493" width="0.4" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="23.81" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="453" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="463.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (415,089,922 samples, 0.01%)</title><rect x="836.1" y="1573" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="839.14" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_execve (507,188,805 samples, 0.02%)</title><rect x="28.2" y="1541" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="31.17" y="1551.5" ></text>
</g>
<g >
<title>psi_group_change (310,699,961 samples, 0.01%)</title><rect x="1186.0" y="1461" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1188.97" y="1471.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (723,444,356 samples, 0.02%)</title><rect x="102.3" y="1189" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="105.31" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,202,396,264 samples, 0.07%)</title><rect x="94.3" y="853" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.27" y="863.5" ></text>
</g>
<g >
<title>clockevents_program_event (290,931,504 samples, 0.01%)</title><rect x="1121.6" y="1349" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1124.60" y="1359.5" ></text>
</g>
<g >
<title>do_iter_read (947,422,988 samples, 0.03%)</title><rect x="593.1" y="1253" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="596.13" y="1263.5" ></text>
</g>
<g >
<title>available_idle_cpu (844,361,338 samples, 0.03%)</title><rect x="655.6" y="1269" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="658.56" y="1279.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,786,569,841 samples, 0.09%)</title><rect x="1186.3" y="1445" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1189.28" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="629" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="639.5" ></text>
</g>
<g >
<title>start_kernel (61,030,750,877 samples, 1.87%)</title><rect x="1149.0" y="1525" width="22.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1152.04" y="1535.5" >s..</text>
</g>
<g >
<title>irq_enter_rcu (1,640,285,628 samples, 0.05%)</title><rect x="877.5" y="1413" width="0.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="880.54" y="1423.5" ></text>
</g>
<g >
<title>alloc_pages (279,971,177 samples, 0.01%)</title><rect x="91.6" y="1237" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="94.65" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="229" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="239.5" ></text>
</g>
<g >
<title>__switch_to_asm (515,443,656 samples, 0.02%)</title><rect x="27.5" y="1573" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="30.55" y="1583.5" ></text>
</g>
<g >
<title>exec_binprm (4,635,850,531 samples, 0.14%)</title><rect x="848.1" y="1477" width="1.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="851.08" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (607,303,622 samples, 0.02%)</title><rect x="711.4" y="1189" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="714.40" y="1199.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (760,177,082 samples, 0.02%)</title><rect x="21.7" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="24.73" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,057,895,489 samples, 0.09%)</title><rect x="13.9" y="1509" width="1.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="16.92" y="1519.5" ></text>
</g>
<g >
<title>read_tsc (293,132,189 samples, 0.01%)</title><rect x="1147.8" y="1493" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1150.80" y="1503.5" ></text>
</g>
<g >
<title>pick_next_task (578,949,554 samples, 0.02%)</title><rect x="1170.3" y="1413" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1173.33" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="213" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="223.5" ></text>
</g>
<g >
<title>grep (1,808,803,703 samples, 0.06%)</title><rect x="15.3" y="1589" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="18.29" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="885" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="895.5" ></text>
</g>
<g >
<title>NaClClockGetTime (834,120,822 samples, 0.03%)</title><rect x="458.6" y="1509" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="461.62" y="1519.5" ></text>
</g>
<g >
<title>getgrgid (449,258,943 samples, 0.01%)</title><rect x="23.5" y="1461" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="26.48" y="1471.5" ></text>
</g>
<g >
<title>mod_objcg_state (416,724,798 samples, 0.01%)</title><rect x="881.6" y="1269" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="884.56" y="1279.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1,017,039,342 samples, 0.03%)</title><rect x="752.0" y="1237" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="755.01" y="1247.5" ></text>
</g>
<g >
<title>enqueue_task (9,896,678,682 samples, 0.30%)</title><rect x="1129.6" y="1445" width="3.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1132.64" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="869" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="879.5" ></text>
</g>
<g >
<title>seq_read_iter (840,212,690 samples, 0.03%)</title><rect x="98.6" y="1365" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="101.58" y="1375.5" ></text>
</g>
<g >
<title>uv_cond_wait (339,577,532 samples, 0.01%)</title><rect x="98.9" y="1525" width="0.1" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="101.92" y="1535.5" ></text>
</g>
<g >
<title>wake_up_process (1,890,349,019 samples, 0.06%)</title><rect x="1149.7" y="1285" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1152.72" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,805,801,158 samples, 0.09%)</title><rect x="94.3" y="1029" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.25" y="1039.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (324,939,468 samples, 0.01%)</title><rect x="1187.5" y="1413" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1190.53" y="1423.5" ></text>
</g>
<g >
<title>__handle_mm_fault (323,927,390 samples, 0.01%)</title><rect x="441.0" y="1429" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="444.02" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (695,606,335 samples, 0.02%)</title><rect x="12.0" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.98" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (404,710,619 samples, 0.01%)</title><rect x="22.0" y="1541" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="25.03" y="1551.5" ></text>
</g>
<g >
<title>exec_mmap (4,410,592,923 samples, 0.14%)</title><rect x="848.1" y="1413" width="1.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="851.10" y="1423.5" ></text>
</g>
<g >
<title>sshd (44,858,271,659 samples, 1.37%)</title><rect x="1171.1" y="1589" width="16.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1174.13" y="1599.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (282,021,672 samples, 0.01%)</title><rect x="102.4" y="1141" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="105.43" y="1151.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (298,196,981 samples, 0.01%)</title><rect x="26.2" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="29.24" y="1567.5" ></text>
</g>
<g >
<title>ktime_get (483,945,655 samples, 0.01%)</title><rect x="730.7" y="1253" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="733.69" y="1263.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (699,665,873 samples, 0.02%)</title><rect x="21.7" y="1541" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="24.74" y="1551.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_duration_since (366,095,583 samples, 0.01%)</title><rect x="763.2" y="1397" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="766.17" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_select (13,289,348,568 samples, 0.41%)</title><rect x="1123.7" y="1493" width="4.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1126.68" y="1503.5" ></text>
</g>
<g >
<title>find_busiest_group (1,011,622,893 samples, 0.03%)</title><rect x="882.9" y="1317" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="885.94" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (930,056,439 samples, 0.03%)</title><rect x="96.3" y="117" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (742,848,529 samples, 0.02%)</title><rect x="11.3" y="1397" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.31" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (329,567,942 samples, 0.01%)</title><rect x="98.9" y="1493" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="101.92" y="1503.5" ></text>
</g>
<g >
<title>pick_next_task (9,232,967,962 samples, 0.28%)</title><rect x="628.0" y="1301" width="3.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="630.97" y="1311.5" ></text>
</g>
<g >
<title>tick_sched_handle (296,970,535 samples, 0.01%)</title><rect x="33.6" y="1349" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="36.58" y="1359.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDayDecoder (209,028,876,150 samples, 6.41%)</title><rect x="517.4" y="1541" width="75.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="520.39" y="1551.5" >NaClSysG..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (305,976,669 samples, 0.01%)</title><rect x="98.0" y="1477" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="100.95" y="1487.5" ></text>
</g>
<g >
<title>__d_alloc (8,967,201,613 samples, 0.27%)</title><rect x="691.5" y="1285" width="3.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="694.52" y="1295.5" ></text>
</g>
<g >
<title>read_tsc (725,324,320 samples, 0.02%)</title><rect x="875.4" y="1381" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="878.36" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (322,791,030 samples, 0.01%)</title><rect x="105.5" y="1445" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="108.46" y="1455.5" ></text>
</g>
<g >
<title>_copy_from_iter (294,534,947 samples, 0.01%)</title><rect x="764.3" y="1333" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="767.27" y="1343.5" ></text>
</g>
<g >
<title>reweight_entity (402,431,163 samples, 0.01%)</title><rect x="1131.2" y="1381" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1134.21" y="1391.5" ></text>
</g>
<g >
<title>rcu_core_si (12,238,798,462 samples, 0.38%)</title><rect x="878.3" y="1365" width="4.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="881.29" y="1375.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (500,795,149 samples, 0.02%)</title><rect x="84.8" y="1509" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="87.79" y="1519.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (558,169,538 samples, 0.02%)</title><rect x="716.6" y="1269" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="719.56" y="1279.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (1,020,717,190 samples, 0.03%)</title><rect x="1172.1" y="1573" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1175.07" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="405" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="415.5" ></text>
</g>
<g >
<title>sock_free_inode (3,128,962,179 samples, 0.10%)</title><rect x="853.4" y="1413" width="1.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="856.37" y="1423.5" ></text>
</g>
<g >
<title>do_epoll_wait (411,665,970 samples, 0.01%)</title><rect x="1188.9" y="1429" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1191.86" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1301" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1311.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::nonblock_accept (171,971,017,008 samples, 5.27%)</title><rect x="656.8" y="1445" width="62.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="659.80" y="1455.5" >rustpo..</text>
</g>
<g >
<title>execute_command (1,253,996,146 samples, 0.04%)</title><rect x="837.5" y="1349" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="840.49" y="1359.5" ></text>
</g>
<g >
<title>unmap_page_range (3,342,612,307 samples, 0.10%)</title><rect x="848.5" y="1317" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="851.49" y="1327.5" ></text>
</g>
<g >
<title>[sel_ldr] (379,904,028,991 samples, 11.64%)</title><rect x="122.5" y="1557" width="137.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="125.54" y="1567.5" >[sel_ldr]</text>
</g>
<g >
<title>uv__async_io (821,329,865 samples, 0.03%)</title><rect x="97.5" y="1541" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="100.51" y="1551.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (1,730,035,834 samples, 0.05%)</title><rect x="704.3" y="1317" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="707.30" y="1327.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (18,905,686,850 samples, 0.58%)</title><rect x="541.9" y="1493" width="6.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="544.92" y="1503.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (1,263,507,775 samples, 0.04%)</title><rect x="107.5" y="1557" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="110.55" y="1567.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (783,639,435 samples, 0.02%)</title><rect x="882.4" y="1317" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="885.40" y="1327.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,106,801,503 samples, 0.03%)</title><rect x="882.0" y="1301" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="884.97" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="805" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="815.5" ></text>
</g>
<g >
<title>wb_workfn (497,232,173 samples, 0.02%)</title><rect x="855.7" y="1493" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="858.74" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,463,907,852 samples, 0.04%)</title><rect x="94.3" y="661" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.30" y="671.5" ></text>
</g>
<g >
<title>__slab_free (312,426,579 samples, 0.01%)</title><rect x="34.9" y="1269" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="37.89" y="1279.5" ></text>
</g>
<g >
<title>clock_nanosleep (113,837,609,048 samples, 3.49%)</title><rect x="722.0" y="1397" width="41.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="724.97" y="1407.5" >clo..</text>
</g>
<g >
<title>__cgroup_account_cputime (549,819,405 samples, 0.02%)</title><rect x="741.5" y="1189" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="744.49" y="1199.5" ></text>
</g>
<g >
<title>generic_file_read_iter (907,122,992 samples, 0.03%)</title><rect x="593.1" y="1205" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="596.14" y="1215.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (474,261,432 samples, 0.01%)</title><rect x="28.2" y="1493" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="31.17" y="1503.5" ></text>
</g>
<g >
<title>lock_sock_nested (437,292,454 samples, 0.01%)</title><rect x="674.0" y="1301" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="677.01" y="1311.5" ></text>
</g>
<g >
<title>copy_pte_range (2,891,159,861 samples, 0.09%)</title><rect x="91.5" y="1285" width="1.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="94.54" y="1295.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (108,782,285,117 samples, 3.33%)</title><rect x="549.8" y="1509" width="39.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="552.83" y="1519.5" >NaC..</text>
</g>
<g >
<title>[bash] (810,788,091 samples, 0.02%)</title><rect x="837.6" y="1269" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.65" y="1279.5" ></text>
</g>
<g >
<title>__sock_release (1,911,651,793 samples, 0.06%)</title><rect x="717.2" y="1269" width="0.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="720.17" y="1279.5" ></text>
</g>
<g >
<title>pick_next_task_fair (282,484,557 samples, 0.01%)</title><rect x="1185.8" y="1461" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1188.82" y="1471.5" ></text>
</g>
<g >
<title>i_callback (3,197,818,970 samples, 0.10%)</title><rect x="853.3" y="1429" width="1.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="856.35" y="1439.5" ></text>
</g>
<g >
<title>mmput (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1397" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="103.91" y="1407.5" ></text>
</g>
<g >
<title>exit_mmap (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1365" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="103.91" y="1375.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (387,632,535 samples, 0.01%)</title><rect x="85.4" y="1317" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="88.38" y="1327.5" ></text>
</g>
<g >
<title>do_idle (822,560,783 samples, 0.03%)</title><rect x="838.9" y="1525" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="841.87" y="1535.5" ></text>
</g>
<g >
<title>__alloc_pages (323,927,390 samples, 0.01%)</title><rect x="441.0" y="1365" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="444.02" y="1375.5" ></text>
</g>
<g >
<title>[bash] (810,788,091 samples, 0.02%)</title><rect x="837.6" y="1253" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.65" y="1263.5" ></text>
</g>
<g >
<title>[grep] (693,655,661 samples, 0.02%)</title><rect x="15.3" y="1573" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="18.31" y="1583.5" ></text>
</g>
<g >
<title>file_free_rcu (346,654,506 samples, 0.01%)</title><rect x="1173.5" y="1317" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1176.46" y="1327.5" ></text>
</g>
<g >
<title>load_elf_binary (419,025,825 samples, 0.01%)</title><rect x="13.4" y="1445" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="16.45" y="1455.5" ></text>
</g>
<g >
<title>HandleStackContext (115,594,495,911 samples, 3.54%)</title><rect x="305.1" y="1541" width="41.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="308.12" y="1551.5" >Han..</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (283,859,506 samples, 0.01%)</title><rect x="1140.2" y="1429" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1143.18" y="1439.5" ></text>
</g>
<g >
<title>start_secondary (483,323,224 samples, 0.01%)</title><rect x="10.6" y="1557" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="13.64" y="1567.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (910,935,048 samples, 0.03%)</title><rect x="593.1" y="1221" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="596.13" y="1231.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (402,218,625 samples, 0.01%)</title><rect x="656.6" y="1381" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="659.63" y="1391.5" ></text>
</g>
<g >
<title>cfree (464,077,699 samples, 0.01%)</title><rect x="96.4" y="53" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="99.37" y="63.5" ></text>
</g>
<g >
<title>__calc_delta (277,041,537 samples, 0.01%)</title><rect x="739.2" y="1205" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="742.21" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1429" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="149" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="159.5" ></text>
</g>
<g >
<title>llist_reverse_order (486,588,882 samples, 0.01%)</title><rect x="82.3" y="1493" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="85.33" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,173,645,575 samples, 0.07%)</title><rect x="94.3" y="821" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.28" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (896,928,220 samples, 0.03%)</title><rect x="94.3" y="469" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.31" y="479.5" ></text>
</g>
<g >
<title>dequeue_task (18,573,300,045 samples, 0.57%)</title><rect x="737.8" y="1253" width="6.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="740.82" y="1263.5" ></text>
</g>
<g >
<title>cpu_startup_entry (809,725,104,610 samples, 24.81%)</title><rect x="855.9" y="1541" width="292.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="858.95" y="1551.5" >cpu_startup_entry</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="213" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="223.5" ></text>
</g>
<g >
<title>aeProcessEvents.part.0 (3,199,689,102 samples, 0.10%)</title><rect x="1188.8" y="1509" width="1.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1191.83" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,400,962,034 samples, 0.07%)</title><rect x="94.3" y="885" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.26" y="895.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,544,219,732 samples, 0.05%)</title><rect x="12.3" y="1573" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.34" y="1583.5" ></text>
</g>
<g >
<title>ksys_read (925,524,420 samples, 0.03%)</title><rect x="98.6" y="1429" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="101.55" y="1439.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (36,700,843,269 samples, 1.12%)</title><rect x="864.2" y="1397" width="13.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="867.21" y="1407.5" ></text>
</g>
<g >
<title>__switch_to (311,156,288 samples, 0.01%)</title><rect x="27.4" y="1573" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="30.44" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="437" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,463,907,852 samples, 0.04%)</title><rect x="94.3" y="629" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.30" y="639.5" ></text>
</g>
<g >
<title>tick_nohz_stop_idle (977,566,255 samples, 0.03%)</title><rect x="1147.9" y="1493" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1150.93" y="1503.5" ></text>
</g>
<g >
<title>hrtimer_active (1,018,338,983 samples, 0.03%)</title><rect x="733.8" y="1269" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="736.80" y="1279.5" ></text>
</g>
<g >
<title>update_load_avg (319,320,262 samples, 0.01%)</title><rect x="744.3" y="1221" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="747.30" y="1231.5" ></text>
</g>
<g >
<title>newidle_balance (2,958,938,907 samples, 0.09%)</title><rect x="643.0" y="1237" width="1.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="645.96" y="1247.5" ></text>
</g>
<g >
<title>execute_command_internal (402,363,865 samples, 0.01%)</title><rect x="837.8" y="1173" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="840.78" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1301" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1311.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (3,927,345,906 samples, 0.12%)</title><rect x="843.2" y="1461" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="846.19" y="1471.5" ></text>
</g>
<g >
<title>inode_free_by_rcu (1,199,912,686 samples, 0.04%)</title><rect x="854.5" y="1429" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="857.50" y="1439.5" ></text>
</g>
<g >
<title>tick_program_event (4,529,823,253 samples, 0.14%)</title><rect x="732.1" y="1253" width="1.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="735.08" y="1263.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (871,514,614,600 samples, 26.71%)</title><rect x="855.9" y="1573" width="315.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="858.95" y="1583.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (401,971,127 samples, 0.01%)</title><rect x="1187.5" y="1429" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1190.53" y="1439.5" ></text>
</g>
<g >
<title>unmap_single_vma (297,337,758 samples, 0.01%)</title><rect x="28.5" y="1413" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="31.48" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_clone (4,941,779,605 samples, 0.15%)</title><rect x="91.0" y="1413" width="1.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="94.01" y="1423.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (13,810,769,041 samples, 0.42%)</title><rect x="1129.0" y="1477" width="5.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1132.01" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1093" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1103.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1,145,388,437 samples, 0.04%)</title><rect x="643.4" y="1173" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="646.42" y="1183.5" ></text>
</g>
<g >
<title>update_rq_clock (2,256,217,660 samples, 0.07%)</title><rect x="631.8" y="1301" width="0.9" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="634.84" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1141" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1151.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get_mut (290,985,099 samples, 0.01%)</title><rect x="811.9" y="1557" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="814.93" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (409,102,158 samples, 0.01%)</title><rect x="23.8" y="1461" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="26.79" y="1471.5" ></text>
</g>
<g >
<title>start_kernel (11,776,804,454 samples, 0.36%)</title><rect x="85.3" y="1525" width="4.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="88.26" y="1535.5" ></text>
</g>
<g >
<title>sched_clock (889,236,309 samples, 0.03%)</title><rect x="752.0" y="1221" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="755.05" y="1231.5" ></text>
</g>
<g >
<title>vfs_read (307,929,864 samples, 0.01%)</title><rect x="103.3" y="1509" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="106.31" y="1519.5" ></text>
</g>
<g >
<title>__mmput (390,895,575 samples, 0.01%)</title><rect x="13.6" y="1461" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="16.62" y="1471.5" ></text>
</g>
<g >
<title>generic_write_end (1,040,682,823 samples, 0.03%)</title><rect x="102.3" y="1221" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="105.30" y="1231.5" ></text>
</g>
<g >
<title>begin_current_label_crit_section (374,937,494 samples, 0.01%)</title><rect x="687.6" y="1221" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="690.57" y="1231.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1,488,769,335 samples, 0.05%)</title><rect x="643.3" y="1189" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="646.29" y="1199.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (427,790,562 samples, 0.01%)</title><rect x="79.7" y="1381" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="82.67" y="1391.5" ></text>
</g>
<g >
<title>rcu_core_si (3,206,724,260 samples, 0.10%)</title><rect x="28.8" y="1477" width="1.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="31.84" y="1487.5" ></text>
</g>
<g >
<title>v8::internal::OptimizedCompilationJob::ExecuteJob (411,779,713 samples, 0.01%)</title><rect x="98.2" y="1493" width="0.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="101.17" y="1503.5" ></text>
</g>
<g >
<title>memcg_list_lru_alloc (1,430,096,877 samples, 0.04%)</title><rect x="694.0" y="1237" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="696.96" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="421" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="431.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (282,150,259 samples, 0.01%)</title><rect x="83.2" y="1477" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="86.18" y="1487.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1,061,974,934 samples, 0.03%)</title><rect x="102.3" y="1237" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="105.29" y="1247.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (750,005,423 samples, 0.02%)</title><rect x="12.0" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.97" y="1567.5" ></text>
</g>
<g >
<title>do_futex (27,924,446,339 samples, 0.86%)</title><rect x="636.9" y="1349" width="10.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="639.93" y="1359.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (565,301,794 samples, 0.02%)</title><rect x="828.9" y="1557" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="831.86" y="1567.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (405,739,799 samples, 0.01%)</title><rect x="635.6" y="1397" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="638.61" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,098,233,514 samples, 0.03%)</title><rect x="27.0" y="1557" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="29.97" y="1567.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (445,398,742 samples, 0.01%)</title><rect x="764.4" y="1285" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="767.44" y="1295.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (1,101,301,491 samples, 0.03%)</title><rect x="593.1" y="1445" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="596.10" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter (54,987,038,806 samples, 1.69%)</title><rect x="1149.3" y="1413" width="19.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1152.25" y="1423.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2,514,958,253 samples, 0.08%)</title><rect x="882.7" y="1365" width="0.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="885.72" y="1375.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,319,784,558 samples, 0.10%)</title><rect x="1187.5" y="1541" width="1.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1190.52" y="1551.5" ></text>
</g>
<g >
<title>dequeue_task_fair (6,386,875,523 samples, 0.20%)</title><rect x="639.9" y="1253" width="2.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="642.87" y="1263.5" ></text>
</g>
<g >
<title>do_nanosleep (69,826,852,084 samples, 2.14%)</title><rect x="728.4" y="1301" width="25.3" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="731.41" y="1311.5" >d..</text>
</g>
<g >
<title>native_sched_clock (758,551,102 samples, 0.02%)</title><rect x="752.1" y="1189" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="755.09" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,158,744,215 samples, 0.07%)</title><rect x="763.9" y="1461" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="766.90" y="1471.5" ></text>
</g>
<g >
<title>[bash] (375,167,660 samples, 0.01%)</title><rect x="837.5" y="1269" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.49" y="1279.5" ></text>
</g>
<g >
<title>setlocale (2,718,105,882 samples, 0.08%)</title><rect x="24.1" y="1509" width="1.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="27.10" y="1519.5" ></text>
</g>
<g >
<title>ksys_read (1,939,031,240 samples, 0.06%)</title><rect x="1189.1" y="1397" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.15" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25,642,854,817 samples, 0.79%)</title><rect x="625.0" y="1397" width="9.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="627.97" y="1407.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (429,213,776 samples, 0.01%)</title><rect x="79.7" y="1397" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="82.67" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (381,482,788 samples, 0.01%)</title><rect x="10.6" y="1461" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="13.65" y="1471.5" ></text>
</g>
<g >
<title>execute_command_internal (818,163,333 samples, 0.03%)</title><rect x="837.6" y="1301" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="840.65" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,146,730,762 samples, 0.07%)</title><rect x="548.8" y="1493" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="551.75" y="1503.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (862,377,153 samples, 0.03%)</title><rect x="671.2" y="1333" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="674.23" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,111,158,419 samples, 0.06%)</title><rect x="840.3" y="1477" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="843.26" y="1487.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,513,672,415 samples, 0.05%)</title><rect x="633.5" y="1349" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="636.50" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,244,691,085 samples, 0.04%)</title><rect x="627.5" y="1301" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="630.46" y="1311.5" ></text>
</g>
<g >
<title>futex_wait_setup (3,415,007,631 samples, 0.10%)</title><rect x="645.7" y="1317" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="648.71" y="1327.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (3,760,923,220 samples, 0.12%)</title><rect x="693.3" y="1253" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="696.35" y="1263.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (3,602,502,415 samples, 0.11%)</title><rect x="647.3" y="1333" width="1.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="650.35" y="1343.5" ></text>
</g>
<g >
<title>bprm_execve (480,619,919 samples, 0.01%)</title><rect x="28.2" y="1509" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="31.17" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_lock (558,219,831 samples, 0.02%)</title><rect x="670.5" y="1349" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="673.50" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (6,331,863,869 samples, 0.19%)</title><rect x="25.1" y="1573" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="28.09" y="1583.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (359,668,668 samples, 0.01%)</title><rect x="102.4" y="1157" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="105.40" y="1167.5" ></text>
</g>
<g >
<title>[ls] (569,106,660 samples, 0.02%)</title><rect x="26.6" y="1557" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="29.65" y="1567.5" ></text>
</g>
<g >
<title>execute_command (1,856,468,305 samples, 0.06%)</title><rect x="837.5" y="1445" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="840.49" y="1455.5" ></text>
</g>
<g >
<title>intel_idle (4,401,514,182 samples, 0.13%)</title><rect x="1151.4" y="1381" width="1.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1154.39" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1317" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1327.5" ></text>
</g>
<g >
<title>enqueue_task (722,729,586 samples, 0.02%)</title><rect x="1169.6" y="1381" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1172.63" y="1391.5" ></text>
</g>
<g >
<title>update_curr (457,964,157 samples, 0.01%)</title><rect x="870.2" y="1253" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="873.19" y="1263.5" ></text>
</g>
<g >
<title>seq_read_iter (372,574,513 samples, 0.01%)</title><rect x="106.0" y="1493" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="109.01" y="1503.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1,954,637,456 samples, 0.06%)</title><rect x="866.2" y="1317" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="869.22" y="1327.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (341,543,286 samples, 0.01%)</title><rect x="875.2" y="1381" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="878.24" y="1391.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (20,151,178,176 samples, 0.62%)</title><rect x="505.9" y="1477" width="7.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="508.92" y="1487.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::send_syscall (2,204,347,457 samples, 0.07%)</title><rect x="763.9" y="1493" width="0.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="766.89" y="1503.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,488,861,294 samples, 0.11%)</title><rect x="13.9" y="1541" width="1.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="16.91" y="1551.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (415,513,372 samples, 0.01%)</title><rect x="764.4" y="1173" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="767.45" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,012,006,791 samples, 0.03%)</title><rect x="94.3" y="485" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.31" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_execve (4,539,544,594 samples, 0.14%)</title><rect x="99.3" y="1541" width="1.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="102.26" y="1551.5" ></text>
</g>
<g >
<title>read_tsc (1,018,199,379 samples, 0.03%)</title><rect x="730.9" y="1253" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="733.87" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="965" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="975.5" ></text>
</g>
<g >
<title>psi_group_change (305,324,231 samples, 0.01%)</title><rect x="1142.1" y="1477" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1145.08" y="1487.5" ></text>
</g>
<g >
<title>NaClXlateSysRet (382,919,598 samples, 0.01%)</title><rect x="552.0" y="1493" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="555.04" y="1503.5" ></text>
</g>
<g >
<title>xa_load (866,326,698 samples, 0.03%)</title><rect x="682.7" y="1221" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="685.66" y="1231.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (708,445,343 samples, 0.02%)</title><rect x="718.3" y="1317" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="721.27" y="1327.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (781,354,358 samples, 0.02%)</title><rect x="828.0" y="1557" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="831.02" y="1567.5" ></text>
</g>
<g >
<title>rcu_core_si (280,460,569 samples, 0.01%)</title><rect x="79.8" y="1349" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="82.83" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (313,313,404 samples, 0.01%)</title><rect x="24.0" y="1461" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="26.97" y="1471.5" ></text>
</g>
<g >
<title>ip_output (420,672,420 samples, 0.01%)</title><rect x="764.4" y="1253" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="767.44" y="1263.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (443,568,352 samples, 0.01%)</title><rect x="873.2" y="1237" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="876.22" y="1247.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (14,718,119,539 samples, 0.45%)</title><rect x="850.3" y="1525" width="5.3" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="853.27" y="1535.5" ></text>
</g>
<g >
<title>call_cpuidle (389,230,439 samples, 0.01%)</title><rect x="10.6" y="1493" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.65" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (686,324,433 samples, 0.02%)</title><rect x="838.2" y="1477" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="841.21" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_futex (29,330,816,947 samples, 0.90%)</title><rect x="636.4" y="1365" width="10.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="639.43" y="1375.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (421,858,223 samples, 0.01%)</title><rect x="1149.3" y="1397" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1152.26" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_accept (92,092,683,701 samples, 2.82%)</title><rect x="669.7" y="1381" width="33.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="672.70" y="1391.5" >__..</text>
</g>
<g >
<title>cpuidle_idle_call (734,312,950 samples, 0.02%)</title><rect x="838.9" y="1509" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="841.87" y="1519.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (3,420,902,099 samples, 0.10%)</title><rect x="346.9" y="1541" width="1.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="349.92" y="1551.5" ></text>
</g>
<g >
<title>map_id_range_down (385,701,511 samples, 0.01%)</title><rect x="677.5" y="1253" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="680.48" y="1263.5" ></text>
</g>
<g >
<title>lockref_put_return (720,039,476 samples, 0.02%)</title><rect x="715.9" y="1285" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="718.93" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1061" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1071.5" ></text>
</g>
<g >
<title>enqueue_entity (550,085,040 samples, 0.02%)</title><rect x="1121.1" y="1253" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1124.14" y="1263.5" ></text>
</g>
<g >
<title>load_balance (3,015,489,750 samples, 0.09%)</title><rect x="747.5" y="1205" width="1.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="750.53" y="1215.5" ></text>
</g>
<g >
<title>futex_unqueue (1,474,842,403 samples, 0.05%)</title><rect x="637.6" y="1317" width="0.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="640.63" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,640,960,762 samples, 0.08%)</title><rect x="94.3" y="965" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.26" y="975.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (441,514,203 samples, 0.01%)</title><rect x="836.5" y="1509" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="839.52" y="1519.5" ></text>
</g>
<g >
<title>worker (1,820,152,041 samples, 0.06%)</title><rect x="98.4" y="1541" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="101.40" y="1551.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (1,382,537,747 samples, 0.04%)</title><rect x="109.8" y="1557" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="112.77" y="1567.5" ></text>
</g>
<g >
<title>evict (12,999,635,458 samples, 0.40%)</title><rect x="710.8" y="1221" width="4.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="713.77" y="1231.5" ></text>
</g>
<g >
<title>search_binary_handler (447,067,479 samples, 0.01%)</title><rect x="28.2" y="1461" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="31.18" y="1471.5" ></text>
</g>
<g >
<title>update_min_vruntime (710,753,319 samples, 0.02%)</title><rect x="743.8" y="1205" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="746.79" y="1215.5" ></text>
</g>
<g >
<title>ct_kernel_exit_state (537,538,738 samples, 0.02%)</title><rect x="884.9" y="1429" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="887.91" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,084,794,788 samples, 0.03%)</title><rect x="593.1" y="1365" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="596.11" y="1375.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (529,208,794 samples, 0.02%)</title><rect x="881.7" y="1269" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="884.71" y="1279.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (406,134,725 samples, 0.01%)</title><rect x="855.8" y="1349" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="858.75" y="1359.5" ></text>
</g>
<g >
<title>reweight_entity (787,523,946 samples, 0.02%)</title><rect x="869.9" y="1237" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="872.91" y="1247.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,144,932,480 samples, 0.34%)</title><rect x="31.7" y="1429" width="4.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="34.66" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (957,177,791 samples, 0.03%)</title><rect x="16.0" y="1509" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="18.99" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter (923,962,667 samples, 0.03%)</title><rect x="16.0" y="1477" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="18.99" y="1487.5" ></text>
</g>
<g >
<title>runc:[1:CHILD] (7,501,381,082 samples, 0.23%)</title><rect x="102.9" y="1589" width="2.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="105.87" y="1599.5" ></text>
</g>
<g >
<title>arch_call_rest_init (11,776,804,454 samples, 0.36%)</title><rect x="85.3" y="1509" width="4.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="88.26" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_read (925,524,420 samples, 0.03%)</title><rect x="98.6" y="1445" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="101.55" y="1455.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (337,790,756 samples, 0.01%)</title><rect x="113.7" y="1557" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="116.69" y="1567.5" ></text>
</g>
<g >
<title>__mmput (4,410,592,923 samples, 0.14%)</title><rect x="848.1" y="1381" width="1.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="851.10" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,023,160,369 samples, 0.03%)</title><rect x="94.3" y="501" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.31" y="511.5" ></text>
</g>
<g >
<title>shell_glob_filename (276,722,265 samples, 0.01%)</title><rect x="837.3" y="1397" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="840.34" y="1407.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,461,919,007 samples, 0.04%)</title><rect x="610.0" y="1413" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="613.00" y="1423.5" ></text>
</g>
<g >
<title>rcu_do_batch (580,075,486 samples, 0.02%)</title><rect x="1173.5" y="1333" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1176.45" y="1343.5" ></text>
</g>
<g >
<title>rebalance_domains (1,354,107,054 samples, 0.04%)</title><rect x="882.8" y="1349" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="885.84" y="1359.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,275,276,899 samples, 0.07%)</title><rect x="880.1" y="1301" width="0.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="883.07" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_select (1,144,144,099 samples, 0.04%)</title><rect x="1169.1" y="1429" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1172.15" y="1439.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (29,383,578,683 samples, 0.90%)</title><rect x="521.9" y="1525" width="10.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="524.87" y="1535.5" ></text>
</g>
<g >
<title>copy_page_range (3,784,170,105 samples, 0.12%)</title><rect x="91.2" y="1317" width="1.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="94.22" y="1327.5" ></text>
</g>
<g >
<title>select_idle_sibling (1,056,058,039 samples, 0.03%)</title><rect x="866.5" y="1301" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="869.54" y="1311.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1,449,859,279 samples, 0.04%)</title><rect x="712.9" y="1125" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="715.90" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="357" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="661" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (14,973,638,648 samples, 0.46%)</title><rect x="660.2" y="1365" width="5.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="663.20" y="1375.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (522,917,342 samples, 0.02%)</title><rect x="648.4" y="1301" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="651.38" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1205" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1215.5" ></text>
</g>
<g >
<title>exc_page_fault (323,927,390 samples, 0.01%)</title><rect x="441.0" y="1477" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="444.02" y="1487.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (743,775,684 samples, 0.02%)</title><rect x="16.7" y="1445" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="19.69" y="1455.5" ></text>
</g>
<g >
<title>search_binary_handler (4,539,544,594 samples, 0.14%)</title><rect x="99.3" y="1461" width="1.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="102.26" y="1471.5" ></text>
</g>
<g >
<title>execute_command_internal (1,253,996,146 samples, 0.04%)</title><rect x="837.5" y="1333" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="840.49" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (507,867,292 samples, 0.02%)</title><rect x="838.2" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="841.21" y="1407.5" ></text>
</g>
<g >
<title>seq_read_iter (566,185,886 samples, 0.02%)</title><rect x="844.9" y="1445" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="847.89" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="997" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1007.5" ></text>
</g>
<g >
<title>__fget_light (8,769,591,092 samples, 0.27%)</title><rect x="660.6" y="1333" width="3.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="663.55" y="1343.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (12,649,959,566 samples, 0.39%)</title><rect x="16.6" y="1573" width="4.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="19.58" y="1583.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (5,141,500,430 samples, 0.16%)</title><rect x="91.0" y="1541" width="1.8" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="93.96" y="1551.5" ></text>
</g>
<g >
<title>[perf-180792.map] (8,741,679,481 samples, 0.27%)</title><rect x="90.1" y="1573" width="3.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="93.13" y="1583.5" ></text>
</g>
<g >
<title>do_exit (350,431,586 samples, 0.01%)</title><rect x="849.8" y="1509" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="852.78" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,042,761,777 samples, 0.09%)</title><rect x="94.2" y="1093" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.23" y="1103.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (1,714,530,396 samples, 0.05%)</title><rect x="763.2" y="1445" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="766.15" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1189" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="1199.5" ></text>
</g>
<g >
<title>call_cpuidle (4,807,923,507 samples, 0.15%)</title><rect x="103.5" y="1493" width="1.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="106.49" y="1503.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (304,958,919 samples, 0.01%)</title><rect x="102.2" y="1189" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="105.17" y="1199.5" ></text>
</g>
<g >
<title>try_to_wake_up (4,642,704,822 samples, 0.14%)</title><rect x="31.9" y="1333" width="1.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="34.87" y="1343.5" ></text>
</g>
<g >
<title>__poll (421,737,192 samples, 0.01%)</title><rect x="101.0" y="1525" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="104.03" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (821,778,769 samples, 0.03%)</title><rect x="24.3" y="1381" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.30" y="1391.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1,890,349,019 samples, 0.06%)</title><rect x="1149.7" y="1301" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1152.72" y="1311.5" ></text>
</g>
<g >
<title>ep_poll (394,336,751 samples, 0.01%)</title><rect x="1188.9" y="1413" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1191.86" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,169,669,548 samples, 0.07%)</title><rect x="94.3" y="805" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.28" y="815.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (861,905,901 samples, 0.03%)</title><rect x="106.2" y="1461" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="109.19" y="1471.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (470,730,648,640 samples, 14.43%)</title><rect x="593.6" y="1461" width="170.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="596.55" y="1471.5" >rustposix::safeposix::..</text>
</g>
<g >
<title>entry_SYSCALL_64 (1,987,776,859 samples, 0.06%)</title><rect x="668.7" y="1413" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="671.65" y="1423.5" ></text>
</g>
<g >
<title>execute_command_internal (647,721,603 samples, 0.02%)</title><rect x="837.3" y="1429" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="840.26" y="1439.5" ></text>
</g>
<g >
<title>menu_select (2,703,034,877 samples, 0.08%)</title><rect x="80.1" y="1477" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="83.14" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb (293,438,343 samples, 0.01%)</title><rect x="764.5" y="1061" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="767.45" y="1071.5" ></text>
</g>
<g >
<title>enqueue_entity (298,200,134 samples, 0.01%)</title><rect x="1187.5" y="1269" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1190.53" y="1279.5" ></text>
</g>
<g >
<title>clear_page_erms (578,624,553 samples, 0.02%)</title><rect x="680.0" y="1157" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="683.00" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="261" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="271.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (282,264,484 samples, 0.01%)</title><rect x="21.9" y="1461" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="24.85" y="1471.5" ></text>
</g>
<g >
<title>do_exit (682,980,650 samples, 0.02%)</title><rect x="28.4" y="1509" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="31.35" y="1519.5" ></text>
</g>
<g >
<title>__slab_free (1,099,478,213 samples, 0.03%)</title><rect x="852.5" y="1397" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="855.53" y="1407.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (5,661,733,989 samples, 0.17%)</title><rect x="756.8" y="1301" width="2.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="759.80" y="1311.5" ></text>
</g>
<g >
<title>sock_alloc (23,958,481,971 samples, 0.73%)</title><rect x="675.0" y="1333" width="8.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="677.95" y="1343.5" ></text>
</g>
<g >
<title>cpu_startup_entry (946,926,654 samples, 0.03%)</title><rect x="20.8" y="1477" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="23.81" y="1487.5" ></text>
</g>
<g >
<title>exit_mm (304,309,952 samples, 0.01%)</title><rect x="849.8" y="1493" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="852.78" y="1503.5" ></text>
</g>
<g >
<title>memcpy@plt (543,355,616 samples, 0.02%)</title><rect x="455.7" y="1509" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="458.71" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,074,905,269 samples, 0.03%)</title><rect x="593.1" y="1349" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="596.11" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,759,517,842 samples, 0.15%)</title><rect x="23.4" y="1541" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.36" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,214,902,085 samples, 0.13%)</title><rect x="94.1" y="1413" width="1.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.14" y="1423.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (369,335,982 samples, 0.01%)</title><rect x="79.7" y="1365" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="82.67" y="1375.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (503,794,568 samples, 0.02%)</title><rect x="16.7" y="1397" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="19.69" y="1407.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (704,543,143 samples, 0.02%)</title><rect x="648.1" y="1301" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="651.13" y="1311.5" ></text>
</g>
<g >
<title>syscall (40,554,311,669 samples, 1.24%)</title><rect x="634.8" y="1413" width="14.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="637.85" y="1423.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,731,361,141 samples, 0.05%)</title><rect x="1172.8" y="1397" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1175.79" y="1407.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (743,740,913 samples, 0.02%)</title><rect x="722.9" y="1381" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="725.89" y="1391.5" ></text>
</g>
<g >
<title>__put_user_8 (346,529,154 samples, 0.01%)</title><rect x="648.0" y="1301" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="651.00" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1173" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1183.5" ></text>
</g>
<g >
<title>ttwu_do_activate (754,767,595 samples, 0.02%)</title><rect x="1169.6" y="1397" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1172.62" y="1407.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (346,954,351 samples, 0.01%)</title><rect x="1146.2" y="1493" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1149.18" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (292,375,063 samples, 0.01%)</title><rect x="12.1" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.11" y="1487.5" ></text>
</g>
<g >
<title>d_set_d_op (308,841,080 samples, 0.01%)</title><rect x="691.8" y="1269" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="694.80" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="981" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="991.5" ></text>
</g>
<g >
<title>os_xsave (3,221,138,841 samples, 0.10%)</title><rect x="761.5" y="1381" width="1.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="764.46" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,329,597,191 samples, 0.16%)</title><rect x="848.0" y="1573" width="2.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="851.02" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_lock (681,388,151 samples, 0.02%)</title><rect x="715.6" y="1269" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="718.57" y="1279.5" ></text>
</g>
<g >
<title>__do_sys_newstat (534,107,432 samples, 0.02%)</title><rect x="95.7" y="1445" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="98.70" y="1455.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (689,942,336 samples, 0.02%)</title><rect x="1144.6" y="1429" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1147.64" y="1439.5" ></text>
</g>
<g >
<title>__switch_to (1,407,520,418 samples, 0.04%)</title><rect x="723.2" y="1381" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="726.16" y="1391.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineImpl::OptimizeGraph (357,821,462 samples, 0.01%)</title><rect x="98.2" y="1461" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="101.19" y="1471.5" ></text>
</g>
<g >
<title>file_free_rcu (6,602,373,263 samples, 0.20%)</title><rect x="878.5" y="1317" width="2.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="881.52" y="1327.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (1,243,211,621 samples, 0.04%)</title><rect x="632.2" y="1253" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="635.19" y="1263.5" ></text>
</g>
<g >
<title>__schedule (2,272,221,514 samples, 0.07%)</title><rect x="1170.1" y="1429" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1173.05" y="1439.5" ></text>
</g>
<g >
<title>[bash] (581,728,123 samples, 0.02%)</title><rect x="837.9" y="1317" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.95" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (12,108,258,477 samples, 0.37%)</title><rect x="841.0" y="1573" width="4.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="844.04" y="1583.5" ></text>
</g>
<g >
<title>clock_gettime (1,256,397,163 samples, 0.04%)</title><rect x="516.5" y="1477" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="519.49" y="1487.5" ></text>
</g>
<g >
<title>folio_create_empty_buffers (288,318,747 samples, 0.01%)</title><rect x="102.1" y="1189" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="105.07" y="1199.5" ></text>
</g>
<g >
<title>do_anonymous_page (323,927,390 samples, 0.01%)</title><rect x="441.0" y="1397" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="444.02" y="1407.5" ></text>
</g>
<g >
<title>copyout (876,888,897 samples, 0.03%)</title><rect x="1189.4" y="1221" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.42" y="1231.5" ></text>
</g>
<g >
<title>place_entity (353,331,045 samples, 0.01%)</title><rect x="1130.9" y="1397" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1133.92" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,640,960,762 samples, 0.08%)</title><rect x="94.3" y="981" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.26" y="991.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (596,786,680 samples, 0.02%)</title><rect x="1147.4" y="1445" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1150.38" y="1455.5" ></text>
</g>
<g >
<title>native_sched_clock (777,398,624 samples, 0.02%)</title><rect x="1122.6" y="1397" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1125.58" y="1407.5" ></text>
</g>
<g >
<title>up_write (702,086,610 samples, 0.02%)</title><rect x="717.6" y="1253" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="720.61" y="1263.5" ></text>
</g>
<g >
<title>__switch_to (1,701,950,521 samples, 0.05%)</title><rect x="1137.3" y="1477" width="0.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1140.30" y="1487.5" ></text>
</g>
<g >
<title>cpu_startup_entry (5,456,884,417 samples, 0.17%)</title><rect x="103.5" y="1541" width="1.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="106.47" y="1551.5" ></text>
</g>
<g >
<title>copy_pte_range (2,443,141,049 samples, 0.07%)</title><rect x="843.5" y="1397" width="0.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="846.52" y="1407.5" ></text>
</g>
<g >
<title>kmem_cache_free (3,172,503,078 samples, 0.10%)</title><rect x="708.4" y="1237" width="1.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="711.43" y="1247.5" ></text>
</g>
<g >
<title>schedule_idle (614,664,790 samples, 0.02%)</title><rect x="89.3" y="1445" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="92.25" y="1455.5" ></text>
</g>
<g >
<title>psi_task_change (1,638,980,318 samples, 0.05%)</title><rect x="1132.6" y="1429" width="0.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1135.61" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="885" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="895.5" ></text>
</g>
<g >
<title>_Fork (4,965,842,977 samples, 0.15%)</title><rect x="91.0" y="1461" width="1.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="94.01" y="1471.5" ></text>
</g>
<g >
<title>exec_binprm (447,067,479 samples, 0.01%)</title><rect x="28.2" y="1477" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="31.18" y="1487.5" ></text>
</g>
<g >
<title>[bash] (398,418,571 samples, 0.01%)</title><rect x="837.8" y="1157" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.78" y="1167.5" ></text>
</g>
<g >
<title>copy_present_pte (1,215,568,363 samples, 0.04%)</title><rect x="92.1" y="1269" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="95.07" y="1279.5" ></text>
</g>
<g >
<title>_compound_head (857,335,204 samples, 0.03%)</title><rect x="848.6" y="1285" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="851.58" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (404,710,619 samples, 0.01%)</title><rect x="22.0" y="1557" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="25.03" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="437" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="447.5" ></text>
</g>
<g >
<title>tcp_get_idx (309,249,901 samples, 0.01%)</title><rect x="845.0" y="1413" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="847.98" y="1423.5" ></text>
</g>
<g >
<title>pick_next_task_fair (5,058,574,996 samples, 0.16%)</title><rect x="746.9" y="1237" width="1.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="749.91" y="1247.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,149,849,816 samples, 0.07%)</title><rect x="1149.7" y="1317" width="0.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1152.68" y="1327.5" ></text>
</g>
<g >
<title>begin_new_exec (4,539,544,594 samples, 0.14%)</title><rect x="99.3" y="1429" width="1.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="102.26" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (323,927,390 samples, 0.01%)</title><rect x="441.0" y="1509" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="444.02" y="1519.5" ></text>
</g>
<g >
<title>exe (352,655,516 samples, 0.01%)</title><rect x="10.8" y="1589" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="13.83" y="1599.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (881,139,255 samples, 0.03%)</title><rect x="631.5" y="1301" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="634.48" y="1311.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (2,978,689,300 samples, 0.09%)</title><rect x="1186.3" y="1557" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1189.28" y="1567.5" ></text>
</g>
<g >
<title>__do_softirq (765,345,699 samples, 0.02%)</title><rect x="1173.4" y="1381" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1176.43" y="1391.5" ></text>
</g>
<g >
<title>poll_idle (8,386,535,329 samples, 0.26%)</title><rect x="86.0" y="1381" width="3.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="89.05" y="1391.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (4,900,672,442 samples, 0.15%)</title><rect x="91.0" y="1349" width="1.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="94.02" y="1359.5" ></text>
</g>
<g >
<title>find_busiest_group (1,586,777,540 samples, 0.05%)</title><rect x="643.3" y="1205" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="646.28" y="1215.5" ></text>
</g>
<g >
<title>[[heap]] (529,972,167 samples, 0.02%)</title><rect x="21.3" y="1573" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="24.32" y="1583.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (1,672,553,988 samples, 0.05%)</title><rect x="758.2" y="1285" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="761.24" y="1295.5" ></text>
</g>
<g >
<title>[bash] (810,788,091 samples, 0.02%)</title><rect x="837.6" y="1285" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.65" y="1295.5" ></text>
</g>
<g >
<title>perf (4,907,480,399 samples, 0.15%)</title><rect x="101.0" y="1589" width="1.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="104.02" y="1599.5" ></text>
</g>
<g >
<title>native_write_msr (433,707,049 samples, 0.01%)</title><rect x="34.0" y="1349" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="37.01" y="1359.5" ></text>
</g>
<g >
<title>getgrgid_r (449,258,943 samples, 0.01%)</title><rect x="23.5" y="1445" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="26.48" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="405" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="415.5" ></text>
</g>
<g >
<title>init_once (408,697,306 samples, 0.01%)</title><rect x="680.3" y="1173" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="683.31" y="1183.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (413,160,205 samples, 0.01%)</title><rect x="10.6" y="1509" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.64" y="1519.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (12,491,886,229 samples, 0.38%)</title><rect x="340.9" y="1525" width="4.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="343.90" y="1535.5" ></text>
</g>
<g >
<title>inet_csk_accept (6,529,746,183 samples, 0.20%)</title><rect x="672.1" y="1317" width="2.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="675.07" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="517" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="527.5" ></text>
</g>
<g >
<title>psi_group_change (396,035,945 samples, 0.01%)</title><rect x="1170.6" y="1397" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1173.61" y="1407.5" ></text>
</g>
<g >
<title>wake_up_q (5,529,948,347 samples, 0.17%)</title><rect x="654.6" y="1333" width="2.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="657.57" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="149" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="159.5" ></text>
</g>
<g >
<title>futex_wait (27,134,500,431 samples, 0.83%)</title><rect x="637.2" y="1333" width="9.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="640.15" y="1343.5" ></text>
</g>
<g >
<title>[[stack]] (305,211,925 samples, 0.01%)</title><rect x="89.5" y="1573" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="92.54" y="1583.5" ></text>
</g>
<g >
<title>__get_user_nocheck_4 (579,885,140 samples, 0.02%)</title><rect x="645.8" y="1301" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="648.78" y="1311.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (351,221,728 samples, 0.01%)</title><rect x="16.7" y="1365" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="19.71" y="1375.5" ></text>
</g>
<g >
<title>[sleep] (2,191,177,390 samples, 0.07%)</title><rect x="840.2" y="1573" width="0.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="843.24" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,682,633,556 samples, 0.08%)</title><rect x="24.1" y="1477" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.10" y="1487.5" ></text>
</g>
<g >
<title>iput (15,815,681,626 samples, 0.48%)</title><rect x="709.8" y="1237" width="5.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="712.81" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (662,005,296 samples, 0.02%)</title><rect x="835.4" y="1573" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="838.44" y="1583.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (983,973,773 samples, 0.03%)</title><rect x="1169.6" y="1429" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1172.58" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="389" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="399.5" ></text>
</g>
<g >
<title>dequeue_entity (15,340,937,151 samples, 0.47%)</title><rect x="738.5" y="1221" width="5.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="741.50" y="1231.5" ></text>
</g>
<g >
<title>set_next_entity (298,234,780 samples, 0.01%)</title><rect x="1170.4" y="1381" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1173.42" y="1391.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (1,824,258,554 samples, 0.06%)</title><rect x="714.7" y="1205" width="0.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="717.69" y="1215.5" ></text>
</g>
<g >
<title>anon_vma_fork (340,365,978 samples, 0.01%)</title><rect x="843.2" y="1429" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="846.22" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (464,077,699 samples, 0.01%)</title><rect x="96.4" y="37" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="99.37" y="47.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (511,003,338 samples, 0.02%)</title><rect x="85.4" y="1349" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="88.38" y="1359.5" ></text>
</g>
<g >
<title>check_preempt_curr (377,993,152 samples, 0.01%)</title><rect x="1129.5" y="1445" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1132.50" y="1455.5" ></text>
</g>
<g >
<title>ksys_read (307,929,864 samples, 0.01%)</title><rect x="103.3" y="1525" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="106.31" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,911,623,444 samples, 0.06%)</title><rect x="840.3" y="1445" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="843.27" y="1455.5" ></text>
</g>
<g >
<title>unmap_vmas (3,410,938,372 samples, 0.10%)</title><rect x="848.5" y="1349" width="1.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="851.46" y="1359.5" ></text>
</g>
<g >
<title>__slab_free (956,244,471 samples, 0.03%)</title><rect x="880.2" y="1285" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="883.22" y="1295.5" ></text>
</g>
<g >
<title>put_unused_fd (279,028,088 samples, 0.01%)</title><rect x="702.6" y="1349" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="705.59" y="1359.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (431,958,676 samples, 0.01%)</title><rect x="35.5" y="1413" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="38.53" y="1423.5" ></text>
</g>
<g >
<title>ktime_get (489,650,864 samples, 0.02%)</title><rect x="1146.7" y="1493" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1149.69" y="1503.5" ></text>
</g>
<g >
<title>parse_and_execute (409,117,378 samples, 0.01%)</title><rect x="837.8" y="1189" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="840.78" y="1199.5" ></text>
</g>
<g >
<title>start_secondary (3,509,119,298 samples, 0.11%)</title><rect x="13.9" y="1557" width="1.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="16.91" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,256,291,841 samples, 0.13%)</title><rect x="94.1" y="1429" width="1.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.13" y="1439.5" ></text>
</g>
<g >
<title>tick_sched_timer (352,181,409 samples, 0.01%)</title><rect x="33.6" y="1365" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="36.56" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (777,294,362 samples, 0.02%)</title><rect x="840.4" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="843.36" y="1407.5" ></text>
</g>
<g >
<title>psi_group_change (1,038,542,861 samples, 0.03%)</title><rect x="84.0" y="1461" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="86.97" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,672,838,265 samples, 0.05%)</title><rect x="94.3" y="725" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.29" y="735.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (1,785,687,609 samples, 0.05%)</title><rect x="655.9" y="1301" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="658.91" y="1311.5" ></text>
</g>
<g >
<title>sched_clock_cpu (277,969,087 samples, 0.01%)</title><rect x="1133.1" y="1413" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1136.11" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,188,756,188 samples, 0.04%)</title><rect x="94.3" y="549" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.31" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,500,708,876 samples, 0.11%)</title><rect x="94.2" y="1189" width="1.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.21" y="1199.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (6,911,598,045 samples, 0.21%)</title><rect x="31.7" y="1397" width="2.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="34.70" y="1407.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,398,824,675 samples, 0.04%)</title><rect x="1172.8" y="1381" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1175.80" y="1391.5" ></text>
</g>
<g >
<title>down_write (796,224,007 samples, 0.02%)</title><rect x="717.3" y="1253" width="0.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="720.30" y="1263.5" ></text>
</g>
<g >
<title>cpuidle_reflect (407,474,948 samples, 0.01%)</title><rect x="1123.5" y="1493" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1126.53" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="469" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="479.5" ></text>
</g>
<g >
<title>switch_fpu_return (408,301,520 samples, 0.01%)</title><rect x="648.7" y="1333" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="651.66" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,913,997,974 samples, 0.18%)</title><rect x="843.2" y="1541" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="846.18" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (34,744,203,501 samples, 1.06%)</title><rect x="636.3" y="1381" width="12.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="639.26" y="1391.5" ></text>
</g>
<g >
<title>copyin (460,112,847 samples, 0.01%)</title><rect x="101.5" y="1221" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="104.47" y="1231.5" ></text>
</g>
<g >
<title>mod_objcg_state (552,121,272 samples, 0.02%)</title><rect x="693.1" y="1237" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="696.08" y="1247.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (943,344,114 samples, 0.03%)</title><rect x="762.8" y="1381" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="765.76" y="1391.5" ></text>
</g>
<g >
<title>arch_call_rest_init (61,030,750,877 samples, 1.87%)</title><rect x="1149.0" y="1509" width="22.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1152.04" y="1519.5" >a..</text>
</g>
<g >
<title>hrtimer_wakeup (1,222,076,616 samples, 0.04%)</title><rect x="1172.8" y="1365" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1175.83" y="1375.5" ></text>
</g>
<g >
<title>NaClXlateSysRet (456,414,219 samples, 0.01%)</title><rect x="831.8" y="1557" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="834.77" y="1567.5" ></text>
</g>
<g >
<title>NaClLog (8,889,836,546 samples, 0.27%)</title><rect x="589.2" y="1509" width="3.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="592.17" y="1519.5" ></text>
</g>
<g >
<title>inode_init_once (367,810,633 samples, 0.01%)</title><rect x="680.3" y="1157" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="683.33" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,457,259,648 samples, 0.04%)</title><rect x="94.3" y="613" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.30" y="623.5" ></text>
</g>
<g >
<title>timerqueue_add (879,901,876 samples, 0.03%)</title><rect x="730.3" y="1237" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="733.27" y="1247.5" ></text>
</g>
<g >
<title>prepare_task_switch (325,265,803 samples, 0.01%)</title><rect x="644.3" y="1269" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="647.29" y="1279.5" ></text>
</g>
<g >
<title>__clone (3,199,689,102 samples, 0.10%)</title><rect x="1188.8" y="1573" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1191.83" y="1583.5" ></text>
</g>
<g >
<title>clock_gettime (93,279,468,250 samples, 2.86%)</title><rect x="469.7" y="1477" width="33.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="472.68" y="1487.5" >cl..</text>
</g>
<g >
<title>kthread (15,935,218,323 samples, 0.49%)</title><rect x="850.2" y="1541" width="5.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="853.18" y="1551.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (2,911,772,516 samples, 0.09%)</title><rect x="81.3" y="1477" width="1.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="84.26" y="1487.5" ></text>
</g>
<g >
<title>[[stack]] (291,347,640 samples, 0.01%)</title><rect x="11.1" y="1573" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="14.10" y="1583.5" ></text>
</g>
<g >
<title>NaClSysBrkDecoder (323,927,390 samples, 0.01%)</title><rect x="441.0" y="1541" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="444.02" y="1551.5" ></text>
</g>
<g >
<title>schedule_idle (1,465,767,772 samples, 0.04%)</title><rect x="1185.6" y="1509" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1188.64" y="1519.5" ></text>
</g>
<g >
<title>__do_softirq (697,226,647 samples, 0.02%)</title><rect x="1172.1" y="1493" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1175.08" y="1503.5" ></text>
</g>
<g >
<title>__filemap_get_folio (1,125,697,249 samples, 0.03%)</title><rect x="101.6" y="1221" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="104.65" y="1231.5" ></text>
</g>
<g >
<title>irq_exit_rcu (305,185,970 samples, 0.01%)</title><rect x="79.8" y="1397" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="82.82" y="1407.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (978,673,577 samples, 0.03%)</title><rect x="1147.3" y="1493" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1150.25" y="1503.5" ></text>
</g>
<g >
<title>load_elf_binary (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1445" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="103.91" y="1455.5" ></text>
</g>
<g >
<title>search_binary_handler (426,642,285 samples, 0.01%)</title><rect x="13.4" y="1461" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="16.45" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,004,182,672 samples, 0.06%)</title><rect x="11.2" y="1477" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.22" y="1487.5" ></text>
</g>
<g >
<title>__do_softirq (400,198,751 samples, 0.01%)</title><rect x="764.4" y="1125" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="767.45" y="1135.5" ></text>
</g>
<g >
<title>vfs_read (1,043,704,910 samples, 0.03%)</title><rect x="593.1" y="1301" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="596.12" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,968,422,837 samples, 0.06%)</title><rect x="94.3" y="789" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.28" y="799.5" ></text>
</g>
<g >
<title>__hrtimer_init (1,402,366,346 samples, 0.04%)</title><rect x="727.9" y="1301" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="730.90" y="1311.5" ></text>
</g>
<g >
<title>___slab_alloc (1,361,969,514 samples, 0.04%)</title><rect x="688.8" y="1253" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="691.81" y="1263.5" ></text>
</g>
<g >
<title>update_cfs_group (359,397,948 samples, 0.01%)</title><rect x="32.7" y="1253" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="35.69" y="1263.5" ></text>
</g>
<g >
<title>error_entry (441,573,576 samples, 0.01%)</title><rect x="1123.0" y="1461" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1125.96" y="1471.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1,803,902,700 samples, 0.06%)</title><rect x="101.6" y="1237" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="104.64" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,539,544,594 samples, 0.14%)</title><rect x="99.3" y="1573" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="102.26" y="1583.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (697,916,635 samples, 0.02%)</title><rect x="855.0" y="1429" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="857.97" y="1439.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (3,540,439,432 samples, 0.11%)</title><rect x="81.2" y="1509" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="84.22" y="1519.5" ></text>
</g>
<g >
<title>enqueue_entity (417,870,674 samples, 0.01%)</title><rect x="1169.7" y="1349" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1172.68" y="1359.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (954,073,736 samples, 0.03%)</title><rect x="100.5" y="1269" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="103.54" y="1279.5" ></text>
</g>
<g >
<title>update_load_avg (1,744,298,166 samples, 0.05%)</title><rect x="641.3" y="1221" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="644.29" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="773" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="783.5" ></text>
</g>
<g >
<title>security_d_instantiate (1,593,926,974 samples, 0.05%)</title><rect x="695.6" y="1285" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="698.62" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,539,544,594 samples, 0.14%)</title><rect x="99.3" y="1557" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="102.26" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (405,259,768 samples, 0.01%)</title><rect x="719.8" y="1349" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="722.76" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,636,934,284 samples, 0.08%)</title><rect x="94.3" y="949" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.26" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_read (1,067,482,886 samples, 0.03%)</title><rect x="593.1" y="1333" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="596.11" y="1343.5" ></text>
</g>
<g >
<title>do_idle (3,312,902,743 samples, 0.10%)</title><rect x="1187.5" y="1525" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1190.52" y="1535.5" ></text>
</g>
<g >
<title>__update_blocked_fair (500,359,532 samples, 0.02%)</title><rect x="883.4" y="1333" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="886.35" y="1343.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (37,421,073,824 samples, 1.15%)</title><rect x="864.0" y="1413" width="13.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="866.98" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="549" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="559.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (460,702,077 samples, 0.01%)</title><rect x="836.5" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="839.52" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,138,718,239 samples, 0.13%)</title><rect x="94.2" y="1397" width="1.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.17" y="1407.5" ></text>
</g>
<g >
<title>update_rq_clock (518,542,427 samples, 0.02%)</title><rect x="645.4" y="1269" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="648.41" y="1279.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (6,138,939,280 samples, 0.19%)</title><rect x="816.4" y="1557" width="2.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="819.44" y="1567.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1,293,434,720 samples, 0.04%)</title><rect x="742.8" y="1189" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="745.84" y="1199.5" ></text>
</g>
<g >
<title>fput (1,003,679,452 samples, 0.03%)</title><rect x="671.5" y="1333" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="674.54" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (650,064,941 samples, 0.02%)</title><rect x="719.7" y="1381" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="722.75" y="1391.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (15,617,533,697 samples, 0.48%)</title><rect x="755.4" y="1349" width="5.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="758.42" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (982,789,018 samples, 0.03%)</title><rect x="96.3" y="1525" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.33" y="1535.5" ></text>
</g>
<g >
<title>do_idle (11,670,106,857 samples, 0.36%)</title><rect x="16.6" y="1525" width="4.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="19.58" y="1535.5" ></text>
</g>
<g >
<title>sock_readable (293,411,928 samples, 0.01%)</title><rect x="1189.9" y="1477" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1192.86" y="1487.5" ></text>
</g>
<g >
<title>psi_task_switch (437,089,076 samples, 0.01%)</title><rect x="1185.9" y="1477" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1188.95" y="1487.5" ></text>
</g>
<g >
<title>update_cfs_group (424,152,039 samples, 0.01%)</title><rect x="744.0" y="1221" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="747.05" y="1231.5" ></text>
</g>
<g >
<title>copy_page_range (2,962,057,985 samples, 0.09%)</title><rect x="843.3" y="1429" width="1.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="846.34" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (11,457,008,079 samples, 0.35%)</title><rect x="93.8" y="1573" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="96.80" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="741" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="751.5" ></text>
</g>
<g >
<title>cpus_share_cache (418,200,130 samples, 0.01%)</title><rect x="866.7" y="1285" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="869.72" y="1295.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (11,365,657,168 samples, 0.35%)</title><rect x="679.4" y="1269" width="4.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="682.38" y="1279.5" ></text>
</g>
<g >
<title>dput (21,974,908,986 samples, 0.67%)</title><rect x="707.9" y="1285" width="8.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="710.94" y="1295.5" ></text>
</g>
<g >
<title>psi_group_change (2,913,699,184 samples, 0.09%)</title><rect x="872.1" y="1269" width="1.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="875.06" y="1279.5" ></text>
</g>
<g >
<title>begin_new_exec (4,435,507,421 samples, 0.14%)</title><rect x="848.1" y="1429" width="1.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="851.10" y="1439.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (350,612,970 samples, 0.01%)</title><rect x="1128.2" y="1445" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1131.17" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock (578,848,153 samples, 0.02%)</title><rect x="684.0" y="1301" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="687.01" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="165" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="175.5" ></text>
</g>
<g >
<title>file_free_rcu (1,239,728,826 samples, 0.04%)</title><rect x="34.4" y="1317" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="37.40" y="1327.5" ></text>
</g>
<g >
<title>intel_idle (997,867,103 samples, 0.03%)</title><rect x="85.7" y="1381" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="88.68" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35,726,974,790 samples, 1.09%)</title><rect x="636.0" y="1397" width="12.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="638.96" y="1407.5" ></text>
</g>
<g >
<title>__srcu_read_lock (470,056,969 samples, 0.01%)</title><rect x="712.0" y="1125" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="715.03" y="1135.5" ></text>
</g>
<g >
<title>enqueue_task_fair (7,743,691,465 samples, 0.24%)</title><rect x="1129.8" y="1429" width="2.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1132.77" y="1439.5" ></text>
</g>
<g >
<title>setlocale (2,022,907,820 samples, 0.06%)</title><rect x="11.2" y="1509" width="0.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="14.21" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="357" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="367.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (1,101,301,491 samples, 0.03%)</title><rect x="593.1" y="1397" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="596.10" y="1407.5" ></text>
</g>
<g >
<title>__mmput (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1381" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="103.91" y="1391.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (14,592,420,817 samples, 0.45%)</title><rect x="449.3" y="1509" width="5.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="452.30" y="1519.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (698,594,342 samples, 0.02%)</title><rect x="874.7" y="1365" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="877.71" y="1375.5" ></text>
</g>
<g >
<title>update_load_avg (521,725,068 samples, 0.02%)</title><rect x="32.8" y="1253" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="35.85" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,008,782,757 samples, 0.09%)</title><rect x="94.2" y="1061" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.24" y="1071.5" ></text>
</g>
<g >
<title>_dl_catch_exception (282,264,484 samples, 0.01%)</title><rect x="21.9" y="1493" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="24.85" y="1503.5" ></text>
</g>
<g >
<title>__schedule (17,092,167,712 samples, 0.52%)</title><rect x="626.5" y="1317" width="6.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="629.47" y="1327.5" ></text>
</g>
<g >
<title>pick_next_task_fair (7,930,679,333 samples, 0.24%)</title><rect x="628.3" y="1285" width="2.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="631.33" y="1295.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (8,352,949,573 samples, 0.26%)</title><rect x="510.2" y="1461" width="3.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="513.19" y="1471.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (14,631,377,671 samples, 0.45%)</title><rect x="525.6" y="1509" width="5.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="528.58" y="1519.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (310,994,935 samples, 0.01%)</title><rect x="1187.5" y="1381" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.53" y="1391.5" ></text>
</g>
<g >
<title>memcg_list_lru_alloc (1,312,912,613 samples, 0.04%)</title><rect x="682.5" y="1237" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="685.54" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="917" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="927.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (362,783,376 samples, 0.01%)</title><rect x="875.1" y="1365" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="878.08" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1349" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="1359.5" ></text>
</g>
<g >
<title>[[heap]] (356,641,886 samples, 0.01%)</title><rect x="11.0" y="1573" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.97" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1333" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,733,321,545 samples, 0.11%)</title><rect x="94.2" y="1253" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.20" y="1263.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ZlibContext::DoThreadPoolWork (354,464,528 samples, 0.01%)</title><rect x="98.4" y="1509" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="101.40" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter (319,154,914 samples, 0.01%)</title><rect x="105.5" y="1413" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="108.46" y="1423.5" ></text>
</g>
<g >
<title>tcp_seq_next (431,041,555 samples, 0.01%)</title><rect x="98.6" y="1349" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="101.58" y="1359.5" ></text>
</g>
<g >
<title>update_process_times (1,227,794,426 samples, 0.04%)</title><rect x="874.2" y="1333" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="877.16" y="1343.5" ></text>
</g>
<g >
<title>call_cpuidle (319,154,914 samples, 0.01%)</title><rect x="105.5" y="1429" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="108.46" y="1439.5" ></text>
</g>
<g >
<title>refill_obj_stock (392,563,173 samples, 0.01%)</title><rect x="880.7" y="1269" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="883.71" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (487,068,316 samples, 0.01%)</title><rect x="864.9" y="1365" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="867.90" y="1375.5" ></text>
</g>
<g >
<title>worker_thread (278,435,643 samples, 0.01%)</title><rect x="1172.3" y="1525" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1175.34" y="1535.5" ></text>
</g>
<g >
<title>schedule_idle (31,634,764,417 samples, 0.97%)</title><rect x="1135.1" y="1509" width="11.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1138.11" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1013" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1023.5" ></text>
</g>
<g >
<title>uv__fs_read (927,232,014 samples, 0.03%)</title><rect x="98.6" y="1509" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="101.55" y="1519.5" ></text>
</g>
<g >
<title>read (2,132,404,142 samples, 0.07%)</title><rect x="1189.1" y="1461" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1192.09" y="1471.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (4,539,544,594 samples, 0.14%)</title><rect x="99.3" y="1525" width="1.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="102.26" y="1535.5" ></text>
</g>
<g >
<title>__poll (352,611,902 samples, 0.01%)</title><rect x="97.9" y="1493" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="100.95" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,414,312,488 samples, 0.07%)</title><rect x="94.3" y="901" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.26" y="911.5" ></text>
</g>
<g >
<title>aeMain (3,199,689,102 samples, 0.10%)</title><rect x="1188.8" y="1525" width="1.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1191.83" y="1535.5" ></text>
</g>
<g >
<title>xa_load (922,686,248 samples, 0.03%)</title><rect x="694.1" y="1221" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="697.11" y="1231.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (400,198,751 samples, 0.01%)</title><rect x="764.4" y="1141" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="767.45" y="1151.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (4,689,050,833 samples, 0.14%)</title><rect x="94.0" y="1509" width="1.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="97.00" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="789" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="799.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (738,222,790 samples, 0.02%)</title><rect x="1185.3" y="1509" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1188.35" y="1519.5" ></text>
</g>
<g >
<title>__do_sys_clone (4,941,779,605 samples, 0.15%)</title><rect x="91.0" y="1397" width="1.8" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="94.01" y="1407.5" ></text>
</g>
<g >
<title>resched_curr (668,302,485 samples, 0.02%)</title><rect x="867.4" y="1285" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="870.41" y="1295.5" ></text>
</g>
<g >
<title>poll_idle (287,220,999 samples, 0.01%)</title><rect x="10.7" y="1445" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="13.68" y="1455.5" ></text>
</g>
<g >
<title>NaClLog (5,494,261,441 samples, 0.17%)</title><rect x="820.8" y="1557" width="2.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="823.85" y="1567.5" ></text>
</g>
<g >
<title>__alloc_pages (279,971,177 samples, 0.01%)</title><rect x="91.6" y="1221" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="94.65" y="1231.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (6,731,640,465 samples, 0.21%)</title><rect x="263.1" y="1557" width="2.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="266.08" y="1567.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (3,268,214,848 samples, 0.10%)</title><rect x="825.7" y="1557" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="828.65" y="1567.5" ></text>
</g>
<g >
<title>irq_exit_rcu (816,794,972 samples, 0.03%)</title><rect x="1173.4" y="1413" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1176.43" y="1423.5" ></text>
</g>
<g >
<title>call_cpuidle (55,083,376,577 samples, 1.69%)</title><rect x="1149.2" y="1429" width="19.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1152.22" y="1439.5" ></text>
</g>
<g >
<title>alloc_pages (735,292,586 samples, 0.02%)</title><rect x="680.0" y="1205" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="682.98" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (353,244,855 samples, 0.01%)</title><rect x="10.0" y="1573" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.02" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,028,720,989 samples, 0.03%)</title><rect x="94.3" y="533" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.31" y="543.5" ></text>
</g>
<g >
<title>search_binary_handler (4,635,850,531 samples, 0.14%)</title><rect x="848.1" y="1461" width="1.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="851.08" y="1471.5" ></text>
</g>
<g >
<title>sched_clock_cpu (868,537,501 samples, 0.03%)</title><rect x="1147.3" y="1477" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1150.29" y="1487.5" ></text>
</g>
<g >
<title>inode_free_by_rcu (1,156,174,438 samples, 0.04%)</title><rect x="882.0" y="1317" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="884.96" y="1327.5" ></text>
</g>
<g >
<title>bprm_execve (4,539,544,594 samples, 0.14%)</title><rect x="99.3" y="1509" width="1.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="102.26" y="1519.5" ></text>
</g>
<g >
<title>alloc_file (20,090,447,316 samples, 0.62%)</title><rect x="684.2" y="1301" width="7.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="687.24" y="1311.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (162,529,796,075 samples, 4.98%)</title><rect x="534.2" y="1525" width="58.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="537.20" y="1535.5" >NaClSy..</text>
</g>
<g >
<title>try_to_wake_up (1,862,072,297 samples, 0.06%)</title><rect x="1149.7" y="1269" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1152.73" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (416,345,465 samples, 0.01%)</title><rect x="94.3" y="341" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.33" y="351.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (3,838,291,646 samples, 0.12%)</title><rect x="431.2" y="1541" width="1.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="434.20" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="709" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="719.5" ></text>
</g>
<g >
<title>_compound_head (784,437,011 samples, 0.02%)</title><rect x="91.8" y="1269" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="94.78" y="1279.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,665,898,458 samples, 0.14%)</title><rect x="1149.6" y="1365" width="1.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1152.65" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,501,349,584 samples, 0.63%)</title><rect x="659.6" y="1397" width="7.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="662.64" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (401,403,461 samples, 0.01%)</title><rect x="101.0" y="1509" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="104.03" y="1519.5" ></text>
</g>
<g >
<title>__pte_alloc (386,023,698 samples, 0.01%)</title><rect x="91.6" y="1269" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="94.62" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="309" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="319.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (41,687,885,312 samples, 1.28%)</title><rect x="703.5" y="1349" width="15.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="706.51" y="1359.5" ></text>
</g>
<g >
<title>show_mountinfo (338,765,724 samples, 0.01%)</title><rect x="106.0" y="1461" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="109.02" y="1471.5" ></text>
</g>
<g >
<title>fput (686,436,973 samples, 0.02%)</title><rect x="696.8" y="1349" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="699.81" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_read (880,119,561 samples, 0.03%)</title><rect x="844.8" y="1525" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="847.84" y="1535.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (804,134,666 samples, 0.02%)</title><rect x="1173.4" y="1397" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1176.43" y="1407.5" ></text>
</g>
<g >
<title>arch_call_rest_init (946,926,654 samples, 0.03%)</title><rect x="20.8" y="1509" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="23.81" y="1519.5" ></text>
</g>
<g >
<title>[[stack]] (433,562,746 samples, 0.01%)</title><rect x="21.5" y="1573" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="24.51" y="1583.5" ></text>
</g>
<g >
<title>kthread (3,774,991,377 samples, 0.12%)</title><rect x="28.8" y="1541" width="1.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="31.78" y="1551.5" ></text>
</g>
<g >
<title>exec_mmap (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1413" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="103.91" y="1423.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (373,681,935 samples, 0.01%)</title><rect x="729.3" y="1285" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="732.30" y="1295.5" ></text>
</g>
<g >
<title>[bash] (810,788,091 samples, 0.02%)</title><rect x="837.6" y="1221" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.65" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="165" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="175.5" ></text>
</g>
<g >
<title>record__mmap_read_all (4,424,285,735 samples, 0.14%)</title><rect x="101.2" y="1541" width="1.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="104.18" y="1551.5" ></text>
</g>
<g >
<title>enqueue_task (959,962,006 samples, 0.03%)</title><rect x="1121.1" y="1285" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1124.10" y="1295.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1,059,711,455 samples, 0.03%)</title><rect x="819.1" y="1557" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="822.13" y="1567.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (1,498,378,681 samples, 0.05%)</title><rect x="847.3" y="1573" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="850.27" y="1583.5" ></text>
</g>
<g >
<title>mod_objcg_state (461,454,276 samples, 0.01%)</title><rect x="853.0" y="1397" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="855.98" y="1407.5" ></text>
</g>
<g >
<title>rcu_core_si (1,549,360,357 samples, 0.05%)</title><rect x="1121.8" y="1349" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1124.78" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="645" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="655.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1,339,154,010 samples, 0.04%)</title><rect x="1149.9" y="1253" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1152.89" y="1263.5" ></text>
</g>
<g >
<title>release_sock (289,852,482 samples, 0.01%)</title><rect x="763.9" y="1365" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="766.91" y="1375.5" ></text>
</g>
<g >
<title>record_times (355,319,014 samples, 0.01%)</title><rect x="751.9" y="1237" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="754.86" y="1247.5" ></text>
</g>
<g >
<title>i_callback (362,532,408 samples, 0.01%)</title><rect x="1122.1" y="1301" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1125.09" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (379,257,999 samples, 0.01%)</title><rect x="94.3" y="293" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.34" y="303.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,156,075,746 samples, 0.04%)</title><rect x="854.5" y="1413" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="857.52" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (534,107,432 samples, 0.02%)</title><rect x="95.7" y="1461" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="98.70" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="725" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="735.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (406,723,811 samples, 0.01%)</title><rect x="880.7" y="1285" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="883.71" y="1295.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7,002,312,393 samples, 0.21%)</title><rect x="31.7" y="1413" width="2.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="34.68" y="1423.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (1,305,083,880 samples, 0.04%)</title><rect x="763.3" y="1397" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="766.30" y="1407.5" ></text>
</g>
<g >
<title>mntput (383,534,377 samples, 0.01%)</title><rect x="716.2" y="1285" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="719.24" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="661" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="671.5" ></text>
</g>
<g >
<title>try_to_wake_up (24,312,823,374 samples, 0.75%)</title><rect x="865.2" y="1333" width="8.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="868.21" y="1343.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (770,759,519 samples, 0.02%)</title><rect x="85.4" y="1365" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="88.38" y="1375.5" ></text>
</g>
<g >
<title>vfs_iter_read (951,508,668 samples, 0.03%)</title><rect x="593.1" y="1269" width="0.4" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="596.13" y="1279.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (341,025,521 samples, 0.01%)</title><rect x="753.3" y="1269" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="756.31" y="1279.5" ></text>
</g>
<g >
<title>__remove_hrtimer (681,721,084 samples, 0.02%)</title><rect x="864.7" y="1365" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="867.66" y="1375.5" ></text>
</g>
<g >
<title>syscall (12,224,490,212 samples, 0.37%)</title><rect x="652.4" y="1429" width="4.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="655.38" y="1439.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2,748,550,865 samples, 0.08%)</title><rect x="649.5" y="1429" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="652.51" y="1439.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (575,246,004 samples, 0.02%)</title><rect x="97.9" y="1541" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="100.94" y="1551.5" ></text>
</g>
<g >
<title>do_iter_write (3,809,294,004 samples, 0.12%)</title><rect x="101.4" y="1317" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="104.36" y="1327.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (292,375,063 samples, 0.01%)</title><rect x="12.1" y="1445" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.11" y="1455.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (650,926,403 samples, 0.02%)</title><rect x="693.7" y="1237" width="0.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="696.72" y="1247.5" ></text>
</g>
<g >
<title>psi_group_change (1,561,632,273 samples, 0.05%)</title><rect x="644.6" y="1253" width="0.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="647.55" y="1263.5" ></text>
</g>
<g >
<title>rcu_do_batch (13,035,124,299 samples, 0.40%)</title><rect x="850.6" y="1445" width="4.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="853.61" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (677,485,371 samples, 0.02%)</title><rect x="94.3" y="373" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.33" y="383.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDayDecoder (1,236,328,908 samples, 0.04%)</title><rect x="829.1" y="1557" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="832.06" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (1,249,790,391 samples, 0.04%)</title><rect x="835.7" y="1573" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="838.67" y="1583.5" ></text>
</g>
<g >
<title>ion (4,277,521,493 samples, 0.13%)</title><rect x="101.2" y="1461" width="1.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="104.21" y="1471.5" ></text>
</g>
<g >
<title>update_process_times (296,970,535 samples, 0.01%)</title><rect x="33.6" y="1333" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="36.58" y="1343.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (4,220,627,099 samples, 0.13%)</title><rect x="703.9" y="1333" width="1.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="706.95" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (350,431,586 samples, 0.01%)</title><rect x="849.8" y="1541" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="852.78" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,148,840,730 samples, 0.10%)</title><rect x="454.6" y="1509" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="457.57" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,275,784,137 samples, 0.07%)</title><rect x="24.1" y="1429" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.12" y="1439.5" ></text>
</g>
<g >
<title>update_blocked_averages (805,135,000 samples, 0.02%)</title><rect x="883.3" y="1349" width="0.3" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="886.33" y="1359.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (852,322,026 samples, 0.03%)</title><rect x="838.9" y="1573" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="841.87" y="1583.5" ></text>
</g>
<g >
<title>__dentry_kill (20,669,454,395 samples, 0.63%)</title><rect x="708.1" y="1269" width="7.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="711.09" y="1279.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (1,080,082,047 samples, 0.03%)</title><rect x="1189.3" y="1285" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1192.35" y="1295.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1,613,809,546 samples, 0.05%)</title><rect x="731.3" y="1269" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="734.33" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1029" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1039.5" ></text>
</g>
<g >
<title>perf_event_task_tick (636,886,920 samples, 0.02%)</title><rect x="874.3" y="1301" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="877.33" y="1311.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (368,910,329 samples, 0.01%)</title><rect x="839.4" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="842.41" y="1519.5" ></text>
</g>
<g >
<title>read_tsc (978,700,512 samples, 0.03%)</title><rect x="1146.9" y="1493" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1149.87" y="1503.5" ></text>
</g>
<g >
<title>syscall (325,148,751 samples, 0.01%)</title><rect x="667.3" y="1413" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="670.29" y="1423.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (61,030,750,877 samples, 1.87%)</title><rect x="1149.0" y="1541" width="22.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1152.04" y="1551.5" >x..</text>
</g>
<g >
<title>put_prev_task_fair (355,083,350 samples, 0.01%)</title><rect x="644.1" y="1253" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="647.14" y="1263.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (159,456,905,606 samples, 4.89%)</title><rect x="459.3" y="1509" width="57.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="462.28" y="1519.5" >NaClSy..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1381" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1391.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::DefineProperties (307,942,832 samples, 0.01%)</title><rect x="90.5" y="1525" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="93.54" y="1535.5" ></text>
</g>
<g >
<title>execute_command (1,267,392,522 samples, 0.04%)</title><rect x="837.5" y="1397" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="840.49" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (930,056,439 samples, 0.03%)</title><rect x="96.3" y="101" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="111.5" ></text>
</g>
<g >
<title>intel_idle (57,659,879,952 samples, 1.77%)</title><rect x="885.7" y="1445" width="20.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="888.71" y="1455.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (2,449,147,352 samples, 0.08%)</title><rect x="713.5" y="1173" width="0.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="716.48" y="1183.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (16,322,654,111 samples, 0.50%)</title><rect x="709.6" y="1253" width="5.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="712.63" y="1263.5" ></text>
</g>
<g >
<title>__do_softirq (3,256,091,541 samples, 0.10%)</title><rect x="28.8" y="1493" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="31.83" y="1503.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (2,290,262,928 samples, 0.07%)</title><rect x="609.7" y="1429" width="0.8" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="612.70" y="1439.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (1,026,192,443 samples, 0.03%)</title><rect x="1134.7" y="1509" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1137.73" y="1519.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (645,389,347 samples, 0.02%)</title><rect x="849.4" y="1269" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="852.43" y="1279.5" ></text>
</g>
<g >
<title>check_preempt_curr (901,884,459 samples, 0.03%)</title><rect x="867.3" y="1301" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="870.32" y="1311.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (370,595,669 samples, 0.01%)</title><rect x="105.4" y="1541" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="108.45" y="1551.5" ></text>
</g>
<g >
<title>pick_next_task (7,250,369,047 samples, 0.22%)</title><rect x="746.7" y="1253" width="2.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="749.71" y="1263.5" ></text>
</g>
<g >
<title>sendto (2,177,310,217 samples, 0.07%)</title><rect x="763.9" y="1477" width="0.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="766.90" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="581" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="591.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (10,378,182,608 samples, 0.32%)</title><rect x="85.3" y="1397" width="3.8" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="88.33" y="1407.5" ></text>
</g>
<g >
<title>pick_next_task_idle (629,684,007 samples, 0.02%)</title><rect x="748.7" y="1237" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="751.74" y="1247.5" ></text>
</g>
<g >
<title>[libc.so.6] (516,518,837 samples, 0.02%)</title><rect x="15.4" y="1445" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.35" y="1455.5" ></text>
</g>
<g >
<title>__memcpy (345,466,187 samples, 0.01%)</title><rect x="694.8" y="1285" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="697.76" y="1295.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (1,101,301,491 samples, 0.03%)</title><rect x="593.1" y="1413" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="596.10" y="1423.5" ></text>
</g>
<g >
<title>non-virtual thunk to v8::internal::CancelableTask::Run (451,256,436 samples, 0.01%)</title><rect x="98.2" y="1525" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="101.15" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="133" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="143.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (1,220,308,529 samples, 0.04%)</title><rect x="683.0" y="1237" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="686.01" y="1247.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (2,598,247,934 samples, 0.08%)</title><rect x="707.0" y="1269" width="0.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="709.96" y="1279.5" ></text>
</g>
<g >
<title>exit_mmap (4,380,942,481 samples, 0.13%)</title><rect x="848.1" y="1365" width="1.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="851.11" y="1375.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (288,134,441 samples, 0.01%)</title><rect x="882.2" y="1269" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="885.23" y="1279.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (946,926,654 samples, 0.03%)</title><rect x="20.8" y="1541" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="23.81" y="1551.5" ></text>
</g>
<g >
<title>do_idle (946,926,654 samples, 0.03%)</title><rect x="20.8" y="1461" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="23.81" y="1471.5" ></text>
</g>
<g >
<title>psi_task_switch (1,519,792,965 samples, 0.05%)</title><rect x="83.9" y="1477" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="86.91" y="1487.5" ></text>
</g>
<g >
<title>__update_load_avg_se (318,159,194 samples, 0.01%)</title><rect x="1140.3" y="1429" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1143.28" y="1439.5" ></text>
</g>
<g >
<title>try_to_wake_up (345,626,359 samples, 0.01%)</title><rect x="16.7" y="1333" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="19.71" y="1343.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get_mut (121,673,011,247 samples, 3.73%)</title><rect x="606.5" y="1445" width="44.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="609.51" y="1455.5" >&lt;das..</text>
</g>
<g >
<title>dequeue_task (6,535,681,035 samples, 0.20%)</title><rect x="639.8" y="1269" width="2.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="642.82" y="1279.5" ></text>
</g>
<g >
<title>charge_memcg (282,408,998 samples, 0.01%)</title><rect x="101.7" y="1157" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="104.71" y="1167.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (14,342,299,614 samples, 0.44%)</title><rect x="1128.8" y="1493" width="5.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1131.84" y="1503.5" ></text>
</g>
<g >
<title>schedule (53,913,001,215 samples, 1.65%)</title><rect x="734.2" y="1285" width="19.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="737.16" y="1295.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (421,152,243 samples, 0.01%)</title><rect x="680.6" y="1253" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="683.62" y="1263.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,336,902,815 samples, 0.04%)</title><rect x="21.7" y="1573" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="24.69" y="1583.5" ></text>
</g>
<g >
<title>record_times (278,008,546 samples, 0.01%)</title><rect x="1144.2" y="1445" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1147.25" y="1455.5" ></text>
</g>
<g >
<title>sched_clock (1,432,389,582 samples, 0.04%)</title><rect x="632.1" y="1269" width="0.5" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="635.12" y="1279.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (3,647,969,834 samples, 0.11%)</title><rect x="268.8" y="1557" width="1.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="271.84" y="1567.5" ></text>
</g>
<g >
<title>NaClMaskRestore (3,751,430,141 samples, 0.11%)</title><rect x="822.8" y="1557" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="825.84" y="1567.5" ></text>
</g>
<g >
<title>__sched_yield (31,088,950,868 samples, 0.95%)</title><rect x="623.1" y="1413" width="11.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="626.13" y="1423.5" ></text>
</g>
<g >
<title>NaClSysBrk (323,927,390 samples, 0.01%)</title><rect x="441.0" y="1525" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="444.02" y="1535.5" ></text>
</g>
<g >
<title>make_kuid (534,231,154 samples, 0.02%)</title><rect x="677.6" y="1269" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="680.62" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1285" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="1295.5" ></text>
</g>
<g >
<title>zap_pte_range (2,062,552,768 samples, 0.06%)</title><rect x="848.9" y="1285" width="0.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="851.95" y="1295.5" ></text>
</g>
<g >
<title>sock_free_inode (574,652,769 samples, 0.02%)</title><rect x="29.5" y="1413" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="32.52" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock (831,028,007 samples, 0.03%)</title><rect x="695.7" y="1269" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="698.71" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="757" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="767.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (4,268,147,837 samples, 0.13%)</title><rect x="729.7" y="1269" width="1.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="732.72" y="1279.5" ></text>
</g>
<g >
<title>__do_softirq (13,885,924,370 samples, 0.43%)</title><rect x="850.4" y="1493" width="5.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="853.36" y="1503.5" ></text>
</g>
<g >
<title>__cmd_record (4,856,851,031 samples, 0.15%)</title><rect x="101.0" y="1557" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.02" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="597" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="607.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (444,513,132 samples, 0.01%)</title><rect x="752.4" y="1253" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="755.45" y="1263.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (291,126,331 samples, 0.01%)</title><rect x="99.2" y="1573" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="102.15" y="1583.5" ></text>
</g>
<g >
<title>sched_clock_cpu (373,796,135 samples, 0.01%)</title><rect x="1133.9" y="1445" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1136.87" y="1455.5" ></text>
</g>
<g >
<title>free_pgtables (677,386,786 samples, 0.02%)</title><rect x="848.1" y="1349" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="851.11" y="1359.5" ></text>
</g>
<g >
<title>clockevents_program_event (4,970,065,971 samples, 0.15%)</title><rect x="875.7" y="1365" width="1.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="878.66" y="1375.5" ></text>
</g>
<g >
<title>ct_idle_exit (360,787,695 samples, 0.01%)</title><rect x="35.7" y="1445" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="38.74" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="933" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (305,791,334 samples, 0.01%)</title><rect x="13.2" y="1557" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.20" y="1567.5" ></text>
</g>
<g >
<title>_compound_head (689,226,688 samples, 0.02%)</title><rect x="843.7" y="1381" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="846.69" y="1391.5" ></text>
</g>
<g >
<title>process_one_work (278,435,643 samples, 0.01%)</title><rect x="1172.3" y="1509" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1175.34" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (890,447,633 samples, 0.03%)</title><rect x="94.3" y="453" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.31" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,829,361,762 samples, 0.06%)</title><rect x="11.2" y="1461" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.22" y="1471.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (475,168,419 samples, 0.01%)</title><rect x="652.2" y="1429" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="655.20" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (538,598,887 samples, 0.02%)</title><rect x="95.7" y="1477" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="98.70" y="1487.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (465,056,997 samples, 0.01%)</title><rect x="764.4" y="1317" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="767.43" y="1327.5" ></text>
</g>
<g >
<title>ret_from_fork (1,020,717,190 samples, 0.03%)</title><rect x="1172.1" y="1557" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1175.07" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,283,262,812 samples, 0.04%)</title><rect x="28.2" y="1573" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="31.17" y="1583.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (770,759,519 samples, 0.02%)</title><rect x="85.4" y="1381" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="88.38" y="1391.5" ></text>
</g>
<g >
<title>deflate.part.3 (344,873,075 samples, 0.01%)</title><rect x="98.4" y="1493" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="101.40" y="1503.5" ></text>
</g>
<g >
<title>memcpy@plt (1,291,434,761 samples, 0.04%)</title><rect x="514.2" y="1477" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="517.18" y="1487.5" ></text>
</g>
<g >
<title>update_curr (1,242,685,460 samples, 0.04%)</title><rect x="640.8" y="1221" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="643.85" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,414,312,488 samples, 0.07%)</title><rect x="94.3" y="917" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.26" y="927.5" ></text>
</g>
<g >
<title>i_callback (281,547,057 samples, 0.01%)</title><rect x="1151.0" y="1253" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1153.97" y="1263.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (3,788,258,827 samples, 0.12%)</title><rect x="28.8" y="1573" width="1.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="31.78" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (316,193,815 samples, 0.01%)</title><rect x="105.5" y="1397" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="108.46" y="1407.5" ></text>
</g>
<g >
<title>mpage_submit_folio (294,927,807 samples, 0.01%)</title><rect x="855.8" y="1317" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="858.79" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,957,358,655 samples, 0.06%)</title><rect x="94.3" y="757" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.28" y="767.5" ></text>
</g>
<g >
<title>enqueue_task_fair (574,495,478 samples, 0.02%)</title><rect x="1169.6" y="1365" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1172.63" y="1375.5" ></text>
</g>
<g >
<title>runc:[2:INIT] (2,661,603,407 samples, 0.08%)</title><rect x="105.6" y="1589" width="0.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="108.58" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,207,453,549 samples, 0.04%)</title><rect x="94.3" y="581" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.30" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,149,043,337 samples, 0.04%)</title><rect x="724.9" y="1381" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="727.94" y="1391.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (199,058,685,474 samples, 6.10%)</title><rect x="348.2" y="1541" width="71.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="351.16" y="1551.5" >NaClAppT..</text>
</g>
<g >
<title>sched_clock_noinstr (279,727,685 samples, 0.01%)</title><rect x="645.2" y="1221" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="648.18" y="1231.5" ></text>
</g>
<g >
<title>call_cpuidle (851,236,608 samples, 0.03%)</title><rect x="20.8" y="1429" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="23.82" y="1439.5" ></text>
</g>
<g >
<title>native_sched_clock (624,681,349 samples, 0.02%)</title><rect x="1144.7" y="1413" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1147.67" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="469" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="479.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (579,253,237 samples, 0.02%)</title><rect x="689.6" y="1253" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="692.55" y="1263.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (292,169,986 samples, 0.01%)</title><rect x="28.5" y="1381" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="31.48" y="1391.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,222,076,616 samples, 0.04%)</title><rect x="1172.8" y="1333" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1175.83" y="1343.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (3,285,735,405 samples, 0.10%)</title><rect x="826.8" y="1557" width="1.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="829.83" y="1567.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (2,063,959,233 samples, 0.06%)</title><rect x="110.9" y="1557" width="0.7" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="113.88" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (302,607,700 samples, 0.01%)</title><rect x="1171.3" y="1573" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1174.26" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,149,181,725 samples, 0.07%)</title><rect x="840.3" y="1493" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="843.25" y="1503.5" ></text>
</g>
<g >
<title>inet_sendmsg (2,118,327,862 samples, 0.06%)</title><rect x="763.9" y="1397" width="0.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="766.91" y="1407.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (8,238,337,775 samples, 0.25%)</title><rect x="756.1" y="1317" width="3.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="759.13" y="1327.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (23,301,962,549 samples, 0.71%)</title><rect x="432.6" y="1541" width="8.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="435.59" y="1551.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (4,036,167,043 samples, 0.12%)</title><rect x="824.2" y="1557" width="1.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="827.19" y="1567.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5,185,947,171 samples, 0.16%)</title><rect x="858.9" y="1461" width="1.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="861.89" y="1471.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (376,769,996 samples, 0.01%)</title><rect x="85.0" y="1509" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="87.97" y="1519.5" ></text>
</g>
<g >
<title>exit_mm (623,469,895 samples, 0.02%)</title><rect x="28.4" y="1493" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="31.36" y="1503.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (511,003,338 samples, 0.02%)</title><rect x="85.4" y="1333" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="88.38" y="1343.5" ></text>
</g>
<g >
<title>start_secondary (152,391,922,548 samples, 4.67%)</title><rect x="30.2" y="1557" width="55.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="33.15" y="1567.5" >start..</text>
</g>
<g >
<title>__x64_sys_read (1,947,815,737 samples, 0.06%)</title><rect x="1189.1" y="1413" width="0.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1192.14" y="1423.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::lock_exclusive_slow (107,794,004,191 samples, 3.30%)</title><rect x="610.5" y="1429" width="39.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="613.53" y="1439.5" >das..</text>
</g>
<g >
<title>[libc.so.6] (3,202,086,950 samples, 0.10%)</title><rect x="22.2" y="1573" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="25.17" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1253" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1263.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (468,967,768 samples, 0.01%)</title><rect x="855.7" y="1429" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="858.75" y="1439.5" ></text>
</g>
<g >
<title>__schedule (534,268,946 samples, 0.02%)</title><rect x="855.4" y="1493" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="858.39" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,792,942,752 samples, 0.12%)</title><rect x="94.2" y="1301" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.18" y="1311.5" ></text>
</g>
<g >
<title>poll_idle (2,182,679,384 samples, 0.07%)</title><rect x="1186.5" y="1381" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.47" y="1391.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,473,203,465 samples, 0.14%)</title><rect x="1120.9" y="1413" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1123.91" y="1423.5" ></text>
</g>
<g >
<title>NaClLog (7,568,025,540 samples, 0.23%)</title><rect x="265.5" y="1557" width="2.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="268.51" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (136,790,224,753 samples, 4.19%)</title><rect x="669.4" y="1413" width="49.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="672.37" y="1423.5" >entr..</text>
</g>
<g >
<title>NaClMaskRestore (9,711,351,962 samples, 0.30%)</title><rect x="437.5" y="1525" width="3.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="440.50" y="1535.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (4,424,285,735 samples, 0.14%)</title><rect x="101.2" y="1525" width="1.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="104.18" y="1535.5" ></text>
</g>
<g >
<title>[perf-181037.map] (560,082,660 samples, 0.02%)</title><rect x="93.3" y="1573" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="96.29" y="1583.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (4,127,099,965 samples, 0.13%)</title><rect x="345.4" y="1525" width="1.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="348.42" y="1535.5" ></text>
</g>
<g >
<title>psi_task_switch (6,984,492,427 samples, 0.21%)</title><rect x="749.9" y="1253" width="2.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="752.86" y="1263.5" ></text>
</g>
<g >
<title>net_rx_action (400,198,751 samples, 0.01%)</title><rect x="764.4" y="1109" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="767.45" y="1119.5" ></text>
</g>
<g >
<title>std::thread::sleep (118,528,701,953 samples, 3.63%)</title><rect x="720.3" y="1445" width="42.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="723.29" y="1455.5" >std:..</text>
</g>
<g >
<title>exit_mmap (623,469,895 samples, 0.02%)</title><rect x="28.4" y="1445" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="31.36" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (4,958,323,898 samples, 0.15%)</title><rect x="103.5" y="1509" width="1.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="106.49" y="1519.5" ></text>
</g>
<g >
<title>vfs_read (395,082,115 samples, 0.01%)</title><rect x="106.0" y="1509" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="109.00" y="1519.5" ></text>
</g>
<g >
<title>vfs_statx (449,279,240 samples, 0.01%)</title><rect x="95.7" y="1413" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="98.73" y="1423.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (468,967,768 samples, 0.01%)</title><rect x="855.7" y="1445" width="0.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="858.75" y="1455.5" ></text>
</g>
<g >
<title>wake_up_process (4,695,829,703 samples, 0.14%)</title><rect x="31.9" y="1349" width="1.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="34.87" y="1359.5" ></text>
</g>
<g >
<title>hrtimer_update_next_event (506,282,768 samples, 0.02%)</title><rect x="875.0" y="1381" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="878.03" y="1391.5" ></text>
</g>
<g >
<title>rcu_core_si (2,667,250,474 samples, 0.08%)</title><rect x="34.3" y="1365" width="1.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="37.34" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,530,230,736 samples, 0.05%)</title><rect x="11.3" y="1413" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.25" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="837" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="847.5" ></text>
</g>
<g >
<title>create_empty_buffers (308,403,166 samples, 0.01%)</title><rect x="102.1" y="1205" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="105.06" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="773" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="783.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (367,866,362 samples, 0.01%)</title><rect x="1168.9" y="1365" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1171.94" y="1375.5" ></text>
</g>
<g >
<title>do_statx (354,084,125 samples, 0.01%)</title><rect x="23.8" y="1413" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="26.79" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (621,673,996 samples, 0.02%)</title><rect x="26.3" y="1557" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="29.35" y="1567.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (312,589,418 samples, 0.01%)</title><rect x="764.3" y="1349" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="767.26" y="1359.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (2,763,210,087 samples, 0.08%)</title><rect x="815.4" y="1557" width="1.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="818.44" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,281,252,930 samples, 0.04%)</title><rect x="28.2" y="1557" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="31.17" y="1567.5" ></text>
</g>
<g >
<title>__destroy_inode (4,664,107,934 samples, 0.14%)</title><rect x="711.8" y="1189" width="1.7" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="714.77" y="1199.5" ></text>
</g>
<g >
<title>cpu_startup_entry (11,699,861,883 samples, 0.36%)</title><rect x="16.6" y="1541" width="4.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="19.58" y="1551.5" ></text>
</g>
<g >
<title>call_cpuidle (2,993,698,160 samples, 0.09%)</title><rect x="13.9" y="1493" width="1.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="16.92" y="1503.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (1,606,272,321 samples, 0.05%)</title><rect x="648.0" y="1317" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="650.99" y="1327.5" ></text>
</g>
<g >
<title>task_work_add (516,912,993 samples, 0.02%)</title><rect x="696.6" y="1333" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="699.62" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1365" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1375.5" ></text>
</g>
<g >
<title>update_rq_clock (1,540,905,688 samples, 0.05%)</title><rect x="752.6" y="1253" width="0.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="755.63" y="1263.5" ></text>
</g>
<g >
<title>__switch_to_asm (2,793,371,125 samples, 0.09%)</title><rect x="846.2" y="1573" width="1.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="849.25" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="421" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="431.5" ></text>
</g>
<g >
<title>kmem_cache_free (337,715,352 samples, 0.01%)</title><rect x="1122.1" y="1269" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1125.10" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (704,585,441 samples, 0.02%)</title><rect x="874.7" y="1381" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="877.71" y="1391.5" ></text>
</g>
<g >
<title>task_work_run (35,527,573,245 samples, 1.09%)</title><rect x="705.7" y="1333" width="12.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="708.74" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (680,019,597 samples, 0.02%)</title><rect x="21.7" y="1525" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="24.74" y="1535.5" ></text>
</g>
<g >
<title>errseq_sample (549,551,610 samples, 0.02%)</title><rect x="696.2" y="1301" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="699.19" y="1311.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (546,151,846 samples, 0.02%)</title><rect x="84.5" y="1477" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="87.51" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (700,922,273 samples, 0.02%)</title><rect x="94.3" y="389" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.32" y="399.5" ></text>
</g>
<g >
<title>native_sched_clock (1,211,268,155 samples, 0.04%)</title><rect x="632.2" y="1237" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="635.20" y="1247.5" ></text>
</g>
<g >
<title>cpuidle_enter (34,757,281,364 samples, 1.07%)</title><rect x="1172.6" y="1477" width="12.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1175.57" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (630,084,651 samples, 0.02%)</title><rect x="11.4" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.35" y="1391.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,765,774,244 samples, 0.08%)</title><rect x="1172.8" y="1429" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1175.78" y="1439.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (3,281,754,175 samples, 0.10%)</title><rect x="34.3" y="1397" width="1.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="37.32" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (582,721,730 samples, 0.02%)</title><rect x="15.3" y="1493" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.35" y="1503.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (35,482,589,431 samples, 1.09%)</title><rect x="1172.5" y="1509" width="12.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1175.52" y="1519.5" ></text>
</g>
<g >
<title>mmput (390,895,575 samples, 0.01%)</title><rect x="13.6" y="1477" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="16.62" y="1487.5" ></text>
</g>
<g >
<title>do_futex (10,672,389,822 samples, 0.33%)</title><rect x="652.7" y="1365" width="3.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="655.74" y="1375.5" ></text>
</g>
<g >
<title>enqueue_entity (717,259,931 samples, 0.02%)</title><rect x="1150.0" y="1205" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1152.95" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="693" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1045" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1055.5" ></text>
</g>
<g >
<title>ioctl (292,817,855 samples, 0.01%)</title><rect x="1189.9" y="1461" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1192.86" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (483,750,324 samples, 0.01%)</title><rect x="635.8" y="1397" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="638.79" y="1407.5" ></text>
</g>
<g >
<title>psi_task_change (4,244,635,657 samples, 0.13%)</title><rect x="871.9" y="1285" width="1.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="874.85" y="1295.5" ></text>
</g>
<g >
<title>sched_clock (316,820,644 samples, 0.01%)</title><rect x="645.2" y="1237" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="648.16" y="1247.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (34,509,261,899 samples, 1.06%)</title><rect x="1172.6" y="1461" width="12.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1175.64" y="1471.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1,614,941,513 samples, 0.05%)</title><rect x="1189.2" y="1317" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.25" y="1327.5" ></text>
</g>
<g >
<title>[bash] (2,514,523,669 samples, 0.08%)</title><rect x="837.3" y="1461" width="0.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.25" y="1471.5" ></text>
</g>
<g >
<title>tick_program_event (424,043,848 samples, 0.01%)</title><rect x="1150.5" y="1317" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1153.54" y="1327.5" ></text>
</g>
<g >
<title>update_cfs_group (804,057,439 samples, 0.02%)</title><rect x="1131.1" y="1397" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1134.07" y="1407.5" ></text>
</g>
<g >
<title>xas_descend (356,736,667 samples, 0.01%)</title><rect x="682.8" y="1205" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="685.77" y="1215.5" ></text>
</g>
<g >
<title>execute_command_internal (2,514,523,669 samples, 0.08%)</title><rect x="837.3" y="1477" width="0.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="840.25" y="1487.5" ></text>
</g>
<g >
<title>pthread_cond_wait (339,577,532 samples, 0.01%)</title><rect x="98.9" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="101.92" y="1519.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,879,531,905 samples, 0.09%)</title><rect x="1149.7" y="1349" width="1.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1152.65" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,988,475,778 samples, 0.06%)</title><rect x="1189.1" y="1429" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.14" y="1439.5" ></text>
</g>
<g >
<title>vfs_fstatat (514,984,413 samples, 0.02%)</title><rect x="95.7" y="1429" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="98.71" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_execve (4,723,883,588 samples, 0.14%)</title><rect x="848.1" y="1541" width="1.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="851.07" y="1551.5" ></text>
</g>
<g >
<title>do_idle (370,595,669 samples, 0.01%)</title><rect x="105.4" y="1461" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="108.45" y="1471.5" ></text>
</g>
<g >
<title>map_id_range_down (501,659,705 samples, 0.02%)</title><rect x="677.6" y="1253" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="680.64" y="1263.5" ></text>
</g>
<g >
<title>____fput (33,803,462,104 samples, 1.04%)</title><rect x="706.0" y="1317" width="12.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="709.01" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,652,220,252 samples, 0.11%)</title><rect x="530.9" y="1509" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="533.87" y="1519.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (928,612,913 samples, 0.03%)</title><rect x="1147.9" y="1477" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1150.95" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="501" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="511.5" ></text>
</g>
<g >
<title>[ls] (1,464,383,559 samples, 0.04%)</title><rect x="23.4" y="1493" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="26.41" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="789" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="799.5" ></text>
</g>
<g >
<title>update_rq_clock (1,641,901,389 samples, 0.05%)</title><rect x="1133.4" y="1461" width="0.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1136.41" y="1471.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (1,184,960,650 samples, 0.04%)</title><rect x="819.5" y="1557" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="822.51" y="1567.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (15,946,845,423 samples, 0.49%)</title><rect x="850.2" y="1573" width="5.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="853.18" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (590,443,315 samples, 0.02%)</title><rect x="838.2" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="841.21" y="1439.5" ></text>
</g>
<g >
<title>ttwu_do_activate (11,053,103,398 samples, 0.34%)</title><rect x="1129.4" y="1461" width="4.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1132.41" y="1471.5" ></text>
</g>
<g >
<title>[bash] (584,083,587 samples, 0.02%)</title><rect x="837.9" y="1365" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.95" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="677" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1509" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,072,505,550 samples, 0.03%)</title><rect x="12.0" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.95" y="1583.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1,973,871,675 samples, 0.06%)</title><rect x="747.8" y="1173" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="750.75" y="1183.5" ></text>
</g>
<g >
<title>setlocale (686,324,433 samples, 0.02%)</title><rect x="838.2" y="1493" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="841.21" y="1503.5" ></text>
</g>
<g >
<title>ktime_get (302,860,146 samples, 0.01%)</title><rect x="877.7" y="1381" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="880.67" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,820,706,718 samples, 0.09%)</title><rect x="94.2" y="1045" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.25" y="1055.5" ></text>
</g>
<g >
<title>operator new (352,750,665 samples, 0.01%)</title><rect x="89.8" y="1557" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="92.81" y="1567.5" ></text>
</g>
<g >
<title>setfl (1,197,336,572 samples, 0.04%)</title><rect x="665.0" y="1333" width="0.5" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="668.05" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,028,720,989 samples, 0.03%)</title><rect x="94.3" y="517" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.31" y="527.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,567,636,782 samples, 0.11%)</title><rect x="1187.5" y="1573" width="1.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1190.52" y="1583.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,140,163,295 samples, 0.03%)</title><rect x="666.4" y="1349" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="669.45" y="1359.5" ></text>
</g>
<g >
<title>NaClXlateSysRet (1,640,604,740 samples, 0.05%)</title><rect x="592.4" y="1509" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="595.38" y="1519.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,265,259,663 samples, 0.35%)</title><rect x="31.6" y="1445" width="4.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="34.62" y="1455.5" ></text>
</g>
<g >
<title>native_write_msr (2,868,082,564 samples, 0.09%)</title><rect x="876.1" y="1349" width="1.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="879.13" y="1359.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (1,593,199,177 samples, 0.05%)</title><rect x="731.3" y="1253" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="734.34" y="1263.5" ></text>
</g>
<g >
<title>NaClSysClockGetTimeDecoder (928,768,501 samples, 0.03%)</title><rect x="828.5" y="1557" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="831.52" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (598,428,151 samples, 0.02%)</title><rect x="719.8" y="1365" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="722.76" y="1375.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (498,785,440 samples, 0.02%)</title><rect x="849.4" y="1237" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="852.43" y="1247.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (905,868,987 samples, 0.03%)</title><rect x="836.5" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="839.48" y="1583.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (937,792,101 samples, 0.03%)</title><rect x="719.6" y="1413" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="722.65" y="1423.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (369,228,270 samples, 0.01%)</title><rect x="763.2" y="1413" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="766.17" y="1423.5" ></text>
</g>
<g >
<title>__filemap_add_folio (673,631,526 samples, 0.02%)</title><rect x="101.7" y="1189" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="104.66" y="1199.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (379,200,811 samples, 0.01%)</title><rect x="1127.7" y="1461" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1130.71" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,987,292,612 samples, 0.09%)</title><rect x="1187.5" y="1477" width="1.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1190.52" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (580,902,653 samples, 0.02%)</title><rect x="105.9" y="1557" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="108.95" y="1567.5" ></text>
</g>
<g >
<title>uv__read (295,167,926 samples, 0.01%)</title><rect x="97.8" y="1525" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="100.82" y="1535.5" ></text>
</g>
<g >
<title>expr (11,939,327,997 samples, 0.37%)</title><rect x="11.0" y="1589" width="4.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="13.96" y="1599.5" ></text>
</g>
<g >
<title>parse_and_execute (2,514,523,669 samples, 0.08%)</title><rect x="837.3" y="1493" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="840.25" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,008,561,629 samples, 0.03%)</title><rect x="13.4" y="1573" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.43" y="1583.5" ></text>
</g>
<g >
<title>rcu_core (13,589,816,825 samples, 0.42%)</title><rect x="850.4" y="1461" width="5.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="853.45" y="1471.5" ></text>
</g>
<g >
<title>call_cpuidle (712,976,115 samples, 0.02%)</title><rect x="838.9" y="1493" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="841.87" y="1503.5" ></text>
</g>
<g >
<title>runc (541,522,828 samples, 0.02%)</title><rect x="106.5" y="1589" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="109.54" y="1599.5" ></text>
</g>
<g >
<title>call_cpuidle (923,962,667 samples, 0.03%)</title><rect x="16.0" y="1493" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="18.99" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1381" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="1391.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (361,982,819 samples, 0.01%)</title><rect x="656.6" y="1365" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="659.64" y="1375.5" ></text>
</g>
<g >
<title>cpuidle_enter (10,596,783,917 samples, 0.32%)</title><rect x="16.6" y="1477" width="3.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="19.62" y="1487.5" ></text>
</g>
<g >
<title>uv_spawn (5,082,267,030 samples, 0.16%)</title><rect x="91.0" y="1525" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="93.98" y="1535.5" ></text>
</g>
<g >
<title>x86_pmu_enable (350,483,339 samples, 0.01%)</title><rect x="874.4" y="1269" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="877.42" y="1279.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (1,638,947,625 samples, 0.05%)</title><rect x="268.2" y="1557" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="271.25" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="181" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="191.5" ></text>
</g>
<g >
<title>docker (1,721,527,272 samples, 0.05%)</title><rect x="10.2" y="1589" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="13.21" y="1599.5" ></text>
</g>
<g >
<title>NaClSysPread (1,325,611,950 samples, 0.04%)</title><rect x="593.1" y="1525" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="596.06" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1429" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,631,301,941 samples, 0.08%)</title><rect x="94.3" y="933" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.26" y="943.5" ></text>
</g>
<g >
<title>ksys_write (4,198,661,612 samples, 0.13%)</title><rect x="101.2" y="1381" width="1.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="104.23" y="1391.5" ></text>
</g>
<g >
<title>make_kgid (434,573,165 samples, 0.01%)</title><rect x="677.5" y="1269" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="680.47" y="1279.5" ></text>
</g>
<g >
<title>poll_idle (2,280,152,657 samples, 0.07%)</title><rect x="14.2" y="1445" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="17.18" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,468,757,252 samples, 0.35%)</title><rect x="652.6" y="1413" width="4.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="655.64" y="1423.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (2,994,929,520 samples, 0.09%)</title><rect x="81.2" y="1493" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="84.23" y="1503.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (397,491,841 samples, 0.01%)</title><rect x="689.1" y="1237" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="692.10" y="1247.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (4,580,574,675 samples, 0.14%)</title><rect x="681.8" y="1253" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="684.84" y="1263.5" ></text>
</g>
<g >
<title>cpuidle_enter (731,701,692,289 samples, 22.42%)</title><rect x="858.8" y="1477" width="264.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="861.82" y="1487.5" >cpuidle_enter</text>
</g>
<g >
<title>rcu_do_batch (11,884,435,997 samples, 0.36%)</title><rect x="878.4" y="1333" width="4.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="881.41" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="901" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,794,610,047 samples, 0.09%)</title><rect x="94.3" y="997" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.26" y="1007.5" ></text>
</g>
<g >
<title>memcpy@plt (835,669,710 samples, 0.03%)</title><rect x="549.5" y="1493" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="552.53" y="1503.5" ></text>
</g>
<g >
<title>parking_lot_core::word_lock::WordLock::lock_slow (591,311,001 samples, 0.02%)</title><rect x="634.6" y="1413" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="637.59" y="1423.5" ></text>
</g>
<g >
<title>dequeue_task_fair (18,012,148,102 samples, 0.55%)</title><rect x="738.0" y="1237" width="6.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="740.99" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="245" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (583,785,731 samples, 0.02%)</title><rect x="23.1" y="1557" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="26.11" y="1567.5" ></text>
</g>
<g >
<title>process_backlog (309,838,459 samples, 0.01%)</title><rect x="764.5" y="1077" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="767.45" y="1087.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (521,126,571 samples, 0.02%)</title><rect x="847.8" y="1573" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="850.83" y="1583.5" ></text>
</g>
<g >
<title>clock_nanosleep (1,869,686,231 samples, 0.06%)</title><rect x="833.9" y="1557" width="0.7" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="836.89" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,370,506,341 samples, 0.10%)</title><rect x="837.2" y="1541" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="840.24" y="1551.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (305,646,612 samples, 0.01%)</title><rect x="649.4" y="1397" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="652.39" y="1407.5" ></text>
</g>
<g >
<title>ttwu_do_activate (3,344,212,028 samples, 0.10%)</title><rect x="32.2" y="1317" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="35.23" y="1327.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (440,593,458 samples, 0.01%)</title><rect x="721.1" y="1413" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="724.13" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (675,812,912 samples, 0.02%)</title><rect x="94.3" y="357" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.33" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,320,246,561 samples, 0.13%)</title><rect x="94.1" y="1461" width="1.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.10" y="1471.5" ></text>
</g>
<g >
<title>copy_p4d_range (2,945,949,356 samples, 0.09%)</title><rect x="843.3" y="1413" width="1.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="846.34" y="1423.5" ></text>
</g>
<g >
<title>vfs_statx (329,635,333 samples, 0.01%)</title><rect x="23.8" y="1397" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="26.80" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (538,598,887 samples, 0.02%)</title><rect x="95.7" y="1493" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="98.70" y="1503.5" ></text>
</g>
<g >
<title>llist_reverse_order (1,673,373,611 samples, 0.05%)</title><rect x="1134.1" y="1493" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1137.07" y="1503.5" ></text>
</g>
<g >
<title>__switch_to_asm (646,845,772 samples, 0.02%)</title><rect x="635.4" y="1397" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="638.37" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,367,845,180 samples, 0.04%)</title><rect x="625.7" y="1333" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="628.70" y="1343.5" ></text>
</g>
<g >
<title>schedule (19,583,879,110 samples, 0.60%)</title><rect x="638.6" y="1301" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="641.63" y="1311.5" ></text>
</g>
<g >
<title>mod_memcg_state (297,463,350 samples, 0.01%)</title><rect x="683.2" y="1205" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="686.20" y="1215.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (657,985,396 samples, 0.02%)</title><rect x="865.8" y="1301" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="868.84" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (895,220,966 samples, 0.03%)</title><rect x="719.7" y="1397" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="722.66" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (580,902,653 samples, 0.02%)</title><rect x="105.9" y="1573" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="108.95" y="1583.5" ></text>
</g>
<g >
<title>scheduler_tick (1,011,367,955 samples, 0.03%)</title><rect x="874.2" y="1317" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="877.22" y="1327.5" ></text>
</g>
<g >
<title>[anon] (17,546,821,070 samples, 0.54%)</title><rect x="107.5" y="1573" width="6.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="110.51" y="1583.5" ></text>
</g>
<g >
<title>cpu_startup_entry (370,595,669 samples, 0.01%)</title><rect x="105.4" y="1477" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="108.45" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="757" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="767.5" ></text>
</g>
<g >
<title>do_group_exit (444,763,040 samples, 0.01%)</title><rect x="13.6" y="1525" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="16.62" y="1535.5" ></text>
</g>
<g >
<title>filename_lookup (351,706,860 samples, 0.01%)</title><rect x="95.7" y="1397" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="98.73" y="1407.5" ></text>
</g>
<g >
<title>CompareAndSwap (6,273,667,710 samples, 0.19%)</title><rect x="302.9" y="1541" width="2.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="305.85" y="1551.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (459,958,184 samples, 0.01%)</title><rect x="13.4" y="1493" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="16.44" y="1503.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1,599,765,766 samples, 0.05%)</title><rect x="642.2" y="1269" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="645.21" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (875,110,608 samples, 0.03%)</title><rect x="94.3" y="421" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.32" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,951,648,321 samples, 0.18%)</title><rect x="843.2" y="1557" width="2.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="846.17" y="1567.5" ></text>
</g>
<g >
<title>intel_idle (813,670,885 samples, 0.02%)</title><rect x="17.0" y="1445" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="19.97" y="1455.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::lock_exclusive_slow (404,389,856 samples, 0.01%)</title><rect x="834.6" y="1557" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="837.59" y="1567.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (306,566,056 samples, 0.01%)</title><rect x="1187.5" y="1365" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1190.53" y="1375.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,129,511,536 samples, 0.03%)</title><rect x="16.0" y="1573" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="18.99" y="1583.5" ></text>
</g>
<g >
<title>call_rcu (2,588,784,677 samples, 0.08%)</title><rect x="713.5" y="1189" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="716.46" y="1199.5" ></text>
</g>
<g >
<title>wb_writeback (478,295,064 samples, 0.01%)</title><rect x="855.7" y="1461" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="858.75" y="1471.5" ></text>
</g>
<g >
<title>run_ksoftirqd (697,226,647 samples, 0.02%)</title><rect x="1172.1" y="1509" width="0.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1175.08" y="1519.5" ></text>
</g>
<g >
<title>read_tsc (782,111,661 samples, 0.02%)</title><rect x="877.2" y="1349" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="880.17" y="1359.5" ></text>
</g>
<g >
<title>rb_next (308,701,779 samples, 0.01%)</title><rect x="1139.8" y="1445" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1142.77" y="1455.5" ></text>
</g>
<g >
<title>NaClSysPreadDecoder (1,335,549,591 samples, 0.04%)</title><rect x="593.1" y="1541" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="596.06" y="1551.5" ></text>
</g>
<g >
<title>dup_mmap (3,908,980,487 samples, 0.12%)</title><rect x="843.2" y="1445" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="846.19" y="1455.5" ></text>
</g>
<g >
<title>kthread (1,020,717,190 samples, 0.03%)</title><rect x="1172.1" y="1541" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1175.07" y="1551.5" ></text>
</g>
<g >
<title>call_cpuidle (872,052,227 samples, 0.03%)</title><rect x="106.2" y="1493" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="109.19" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,955,853,250 samples, 0.15%)</title><rect x="91.0" y="1445" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="94.01" y="1455.5" ></text>
</g>
<g >
<title>call_rcu (2,175,466,747 samples, 0.07%)</title><rect x="712.7" y="1157" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="715.66" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1541" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="1551.5" ></text>
</g>
<g >
<title>enqueue_task_fair (343,421,725 samples, 0.01%)</title><rect x="1185.4" y="1429" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1188.39" y="1439.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (4,578,403,800 samples, 0.14%)</title><rect x="732.1" y="1269" width="1.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="735.06" y="1279.5" ></text>
</g>
<g >
<title>execute_command_internal (435,832,813 samples, 0.01%)</title><rect x="837.5" y="1285" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="840.49" y="1295.5" ></text>
</g>
<g >
<title>copyout (648,331,966 samples, 0.02%)</title><rect x="593.2" y="1141" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="596.19" y="1151.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,710,010,033 samples, 0.08%)</title><rect x="1186.3" y="1413" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1189.28" y="1423.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1,403,699,858 samples, 0.04%)</title><rect x="1121.0" y="1349" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1123.98" y="1359.5" ></text>
</g>
<g >
<title>wrk (3,280,806,875 samples, 0.10%)</title><rect x="1188.8" y="1589" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1191.81" y="1599.5" ></text>
</g>
<g >
<title>intel_idle (344,448,141 samples, 0.01%)</title><rect x="1187.7" y="1445" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1190.67" y="1455.5" ></text>
</g>
<g >
<title>run_rebalance_domains (441,554,154 samples, 0.01%)</title><rect x="35.3" y="1365" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="38.31" y="1375.5" ></text>
</g>
<g >
<title>pick_next_task_fair (3,279,094,934 samples, 0.10%)</title><rect x="642.8" y="1253" width="1.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="645.85" y="1263.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (805,943,705 samples, 0.02%)</title><rect x="1122.6" y="1413" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1125.57" y="1423.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2,257,297,151 samples, 0.07%)</title><rect x="81.4" y="1461" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="84.35" y="1471.5" ></text>
</g>
<g >
<title>copy_process (4,905,798,322 samples, 0.15%)</title><rect x="91.0" y="1365" width="1.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="94.02" y="1375.5" ></text>
</g>
<g >
<title>begin_new_exec (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1429" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="103.91" y="1439.5" ></text>
</g>
<g >
<title>__rcu_read_lock (479,709,937 samples, 0.01%)</title><rect x="692.2" y="1253" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="695.19" y="1263.5" ></text>
</g>
<g >
<title>[bash] (584,083,587 samples, 0.02%)</title><rect x="837.9" y="1349" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.95" y="1359.5" ></text>
</g>
<g >
<title>rcu_core_si (13,664,861,779 samples, 0.42%)</title><rect x="850.4" y="1477" width="5.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="853.43" y="1487.5" ></text>
</g>
<g >
<title>__slab_free (827,312,816 samples, 0.03%)</title><rect x="882.0" y="1285" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="885.04" y="1295.5" ></text>
</g>
<g >
<title>start_secondary (38,264,422,987 samples, 1.17%)</title><rect x="1172.4" y="1557" width="13.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1175.44" y="1567.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (289,459,359 samples, 0.01%)</title><rect x="681.7" y="1221" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="684.66" y="1231.5" ></text>
</g>
<g >
<title>[[vdso]] (89,002,910,778 samples, 2.73%)</title><rect x="470.5" y="1461" width="32.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="473.51" y="1471.5" >[[..</text>
</g>
<g >
<title>unmap_page_range (292,169,986 samples, 0.01%)</title><rect x="28.5" y="1397" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="31.48" y="1407.5" ></text>
</g>
<g >
<title>NaClHighResolutionTimerEnabled (788,906,239 samples, 0.02%)</title><rect x="533.1" y="1525" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="536.05" y="1535.5" ></text>
</g>
<g >
<title>[bash] (1,253,996,146 samples, 0.04%)</title><rect x="837.5" y="1317" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.49" y="1327.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (4,089,398,937 samples, 0.13%)</title><rect x="339.4" y="1525" width="1.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="342.42" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,505,482,510 samples, 0.11%)</title><rect x="94.2" y="1205" width="1.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.21" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1493" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,919,244,374 samples, 0.09%)</title><rect x="853.4" y="1397" width="1.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="856.42" y="1407.5" ></text>
</g>
<g >
<title>__switch_to (1,278,135,170 samples, 0.04%)</title><rect x="737.1" y="1253" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="740.08" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,932,980,745 samples, 0.12%)</title><rect x="94.2" y="1317" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.18" y="1327.5" ></text>
</g>
<g >
<title>update_load_avg (2,551,887,057 samples, 0.08%)</title><rect x="1140.4" y="1429" width="1.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1143.43" y="1439.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (5,416,138,121 samples, 0.17%)</title><rect x="31.7" y="1381" width="2.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="34.74" y="1391.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (954,073,736 samples, 0.03%)</title><rect x="100.5" y="1253" width="0.4" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="103.54" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (444,763,040 samples, 0.01%)</title><rect x="13.6" y="1541" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="16.62" y="1551.5" ></text>
</g>
<g >
<title>poll_idle (517,402,616 samples, 0.02%)</title><rect x="838.9" y="1445" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="841.94" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (510,559,507 samples, 0.02%)</title><rect x="720.1" y="1365" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="723.07" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (542,589,193 samples, 0.02%)</title><rect x="836.8" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="839.80" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1221" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="1231.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (680,242,443 samples, 0.02%)</title><rect x="838.5" y="1525" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="841.54" y="1535.5" ></text>
</g>
<g >
<title>sock_recvmsg (1,663,424,695 samples, 0.05%)</title><rect x="1189.2" y="1349" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1192.24" y="1359.5" ></text>
</g>
<g >
<title>enqueue_task (298,200,134 samples, 0.01%)</title><rect x="1187.5" y="1301" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1190.53" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,303,902,807 samples, 0.10%)</title><rect x="94.2" y="1173" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.22" y="1183.5" ></text>
</g>
<g >
<title>ttwu_do_activate (302,336,373 samples, 0.01%)</title><rect x="1187.5" y="1317" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1190.53" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,016,099,451 samples, 0.03%)</title><rect x="1137.9" y="1477" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1140.92" y="1487.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1,574,247,152 samples, 0.05%)</title><rect x="655.3" y="1301" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="658.32" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (693,655,661 samples, 0.02%)</title><rect x="15.3" y="1541" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.31" y="1551.5" ></text>
</g>
<g >
<title>page_remove_rmap (570,212,195 samples, 0.02%)</title><rect x="100.3" y="1269" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="103.33" y="1279.5" ></text>
</g>
<g >
<title>unmap_vmas (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1349" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="103.91" y="1359.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,403,699,858 samples, 0.04%)</title><rect x="1121.0" y="1317" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1123.98" y="1327.5" ></text>
</g>
<g >
<title>clockevents_program_event (4,327,108,932 samples, 0.13%)</title><rect x="732.1" y="1237" width="1.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="735.11" y="1247.5" ></text>
</g>
<g >
<title>refill_obj_stock (494,565,246 samples, 0.02%)</title><rect x="881.7" y="1253" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="884.72" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,945,625,670 samples, 0.12%)</title><rect x="94.2" y="1333" width="1.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.18" y="1343.5" ></text>
</g>
<g >
<title>search_binary_handler (665,205,079 samples, 0.02%)</title><rect x="838.5" y="1461" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="841.55" y="1471.5" ></text>
</g>
<g >
<title>rcu_core_si (1,106,394,441 samples, 0.03%)</title><rect x="1150.7" y="1301" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1153.74" y="1311.5" ></text>
</g>
<g >
<title>search_binary_handler (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1461" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="103.91" y="1471.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (386,319,927 samples, 0.01%)</title><rect x="848.2" y="1333" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="851.21" y="1343.5" ></text>
</g>
<g >
<title>lind_select (470,736,986,178 samples, 14.43%)</title><rect x="593.5" y="1509" width="170.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="596.55" y="1519.5" >lind_select</text>
</g>
<g >
<title>psi_group_change (583,294,178 samples, 0.02%)</title><rect x="33.2" y="1269" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="36.17" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1237" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1247.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (316,943,464 samples, 0.01%)</title><rect x="739.4" y="1205" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="742.35" y="1215.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1301" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="103.91" y="1311.5" ></text>
</g>
<g >
<title>prepare_task_switch (1,285,547,831 samples, 0.04%)</title><rect x="1141.6" y="1477" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1144.58" y="1487.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (1,504,389,742 samples, 0.05%)</title><rect x="704.9" y="1317" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="707.93" y="1327.5" ></text>
</g>
<g >
<title>init_file (9,689,358,575 samples, 0.30%)</title><rect x="684.8" y="1269" width="3.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="687.80" y="1279.5" ></text>
</g>
<g >
<title>kmem_cache_free (446,036,802 samples, 0.01%)</title><rect x="34.7" y="1301" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="37.68" y="1311.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (566,568,177 samples, 0.02%)</title><rect x="854.2" y="1381" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="857.24" y="1391.5" ></text>
</g>
<g >
<title>read (1,101,301,491 samples, 0.03%)</title><rect x="593.1" y="1381" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="596.10" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_select (566,578,236 samples, 0.02%)</title><rect x="1185.1" y="1493" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1188.14" y="1503.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1525" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="103.91" y="1535.5" ></text>
</g>
<g >
<title>update_load_avg (4,708,227,945 samples, 0.14%)</title><rect x="742.1" y="1205" width="1.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="745.09" y="1215.5" ></text>
</g>
<g >
<title>cpuidle_enter (389,230,439 samples, 0.01%)</title><rect x="10.6" y="1477" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="13.65" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,863,037,957 samples, 0.06%)</title><rect x="840.3" y="1429" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="843.27" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,426,494,006 samples, 0.07%)</title><rect x="24.1" y="1461" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.10" y="1471.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (1,009,830,491 samples, 0.03%)</title><rect x="1189.4" y="1253" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1192.38" y="1263.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,551,720,061 samples, 0.05%)</title><rect x="664.4" y="1333" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="667.44" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_rq_lock_irqsave (323,442,412 samples, 0.01%)</title><rect x="643.1" y="1205" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="646.10" y="1215.5" ></text>
</g>
<g >
<title>NaClLog (1,473,461,480 samples, 0.05%)</title><rect x="110.3" y="1557" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="113.35" y="1567.5" ></text>
</g>
<g >
<title>[bash] (1,267,392,522 samples, 0.04%)</title><rect x="837.5" y="1365" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.49" y="1375.5" ></text>
</g>
<g >
<title>pick_next_entity (340,075,975 samples, 0.01%)</title><rect x="628.2" y="1285" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="631.20" y="1295.5" ></text>
</g>
<g >
<title>sh (8,000,139,693 samples, 0.25%)</title><rect x="836.3" y="1589" width="2.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="839.29" y="1599.5" ></text>
</g>
<g >
<title>run_ksoftirqd (13,936,478,379 samples, 0.43%)</title><rect x="850.4" y="1509" width="5.0" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="853.35" y="1519.5" ></text>
</g>
<g >
<title>do_group_exit (350,431,586 samples, 0.01%)</title><rect x="849.8" y="1525" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="852.78" y="1535.5" ></text>
</g>
<g >
<title>call_cpuidle (136,570,448,674 samples, 4.19%)</title><rect x="30.7" y="1493" width="49.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="33.71" y="1503.5" >call..</text>
</g>
<g >
<title>start_secondary (810,483,863,723 samples, 24.84%)</title><rect x="855.9" y="1557" width="293.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="858.95" y="1567.5" >start_secondary</text>
</g>
<g >
<title>cpuacct_charge (770,229,805 samples, 0.02%)</title><rect x="741.7" y="1189" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="744.72" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="325" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="335.5" ></text>
</g>
<g >
<title>bprm_execve (674,942,691 samples, 0.02%)</title><rect x="838.5" y="1509" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="841.54" y="1519.5" ></text>
</g>
<g >
<title>security_inode_alloc (3,665,874,143 samples, 0.11%)</title><rect x="677.9" y="1269" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="680.87" y="1279.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (359,494,603 samples, 0.01%)</title><rect x="103.5" y="1429" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="106.53" y="1439.5" ></text>
</g>
<g >
<title>futex_wait_queue (20,864,867,613 samples, 0.64%)</title><rect x="638.2" y="1317" width="7.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="641.17" y="1327.5" ></text>
</g>
<g >
<title>setlocale (582,721,730 samples, 0.02%)</title><rect x="15.3" y="1509" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="18.35" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="981" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="991.5" ></text>
</g>
<g >
<title>exit_mmap (304,309,952 samples, 0.01%)</title><rect x="849.8" y="1445" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="852.78" y="1455.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (4,723,883,588 samples, 0.14%)</title><rect x="848.1" y="1525" width="1.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="851.07" y="1535.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (914,337,574 samples, 0.03%)</title><rect x="593.1" y="1237" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="596.13" y="1247.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (11,926,309,814 samples, 0.37%)</title><rect x="729.4" y="1285" width="4.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="732.44" y="1295.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1,346,161,936 samples, 0.04%)</title><rect x="1138.3" y="1477" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1141.32" y="1487.5" ></text>
</g>
<g >
<title>futex_wake_mark (1,568,064,711 samples, 0.05%)</title><rect x="653.8" y="1333" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="656.85" y="1343.5" ></text>
</g>
<g >
<title>[sel_ldr] (1,395,900,696,084 samples, 42.78%)</title><rect x="259.9" y="1573" width="504.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="262.93" y="1583.5" >[sel_ldr]</text>
</g>
<g >
<title>pick_next_task_fair (6,830,102,396 samples, 0.21%)</title><rect x="1139.0" y="1461" width="2.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1141.99" y="1471.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,400,129,417 samples, 0.04%)</title><rect x="1150.7" y="1333" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1153.74" y="1343.5" ></text>
</g>
<g >
<title>__nanosleep (115,714,090,288 samples, 3.55%)</title><rect x="721.3" y="1413" width="41.8" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="724.29" y="1423.5" >__n..</text>
</g>
<g >
<title>mod_objcg_state (310,609,181 samples, 0.01%)</title><rect x="880.6" y="1285" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="883.60" y="1295.5" ></text>
</g>
<g >
<title>start_secondary (1,033,772,197 samples, 0.03%)</title><rect x="16.0" y="1557" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="18.99" y="1567.5" ></text>
</g>
<g >
<title>release_pages (642,378,332 samples, 0.02%)</title><rect x="100.5" y="1221" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="103.54" y="1231.5" ></text>
</g>
<g >
<title>[libc.so.6] (657,480,902 samples, 0.02%)</title><rect x="838.2" y="1461" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="841.21" y="1471.5" ></text>
</g>
<g >
<title>rcu_do_batch (3,054,919,890 samples, 0.09%)</title><rect x="28.9" y="1445" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="31.89" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,967,944,347 samples, 0.09%)</title><rect x="13.9" y="1461" width="1.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="16.93" y="1471.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (2,322,800,220 samples, 0.07%)</title><rect x="763.8" y="1509" width="0.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="766.84" y="1519.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (57,676,521,897 samples, 1.77%)</title><rect x="863.9" y="1429" width="20.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="866.89" y="1439.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (1,241,758,439 samples, 0.04%)</title><rect x="712.0" y="1141" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="714.98" y="1151.5" ></text>
</g>
<g >
<title>__do_softirq (3,234,280,010 samples, 0.10%)</title><rect x="34.3" y="1381" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="37.33" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,064,815,584 samples, 0.06%)</title><rect x="11.2" y="1541" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.21" y="1551.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (305,185,970 samples, 0.01%)</title><rect x="79.8" y="1381" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="82.82" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (325,148,751 samples, 0.01%)</title><rect x="667.3" y="1397" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="670.29" y="1407.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1,979,466,323 samples, 0.06%)</title><rect x="502.7" y="1461" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="505.70" y="1471.5" ></text>
</g>
<g >
<title>irq_exit_rcu (15,675,096,332 samples, 0.48%)</title><rect x="878.1" y="1413" width="5.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="881.13" y="1423.5" ></text>
</g>
<g >
<title>ls (188,789,641,820 samples, 5.79%)</title><rect x="21.3" y="1589" width="68.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="24.25" y="1599.5" >ls</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,672,838,265 samples, 0.05%)</title><rect x="94.3" y="709" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.29" y="719.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (35,032,498,000 samples, 1.07%)</title><rect x="683.8" y="1317" width="12.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="686.77" y="1327.5" ></text>
</g>
<g >
<title>newidle_balance (4,383,239,924 samples, 0.13%)</title><rect x="747.1" y="1221" width="1.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="750.14" y="1231.5" ></text>
</g>
<g >
<title>call_function_single_prep_ipi (557,485,510 samples, 0.02%)</title><rect x="656.1" y="1269" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="659.11" y="1279.5" ></text>
</g>
<g >
<title>rcu_core (12,238,798,462 samples, 0.38%)</title><rect x="878.3" y="1349" width="4.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="881.29" y="1359.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (5,381,834,281 samples, 0.16%)</title><rect x="94.0" y="1525" width="1.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="96.97" y="1535.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (507,188,805 samples, 0.02%)</title><rect x="28.2" y="1525" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="31.17" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1077" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1087.5" ></text>
</g>
<g >
<title>__fdget_raw (10,011,922,730 samples, 0.31%)</title><rect x="660.5" y="1349" width="3.6" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="663.52" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,955,853,250 samples, 0.15%)</title><rect x="91.0" y="1429" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="94.01" y="1439.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (1,142,566,204 samples, 0.04%)</title><rect x="733.8" y="1285" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="736.75" y="1295.5" ></text>
</g>
<g >
<title>handle_pte_fault (323,927,390 samples, 0.01%)</title><rect x="441.0" y="1413" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="444.02" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_statx (387,752,865 samples, 0.01%)</title><rect x="23.8" y="1429" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="26.79" y="1439.5" ></text>
</g>
<g >
<title>exc_page_fault (296,635,788 samples, 0.01%)</title><rect x="847.9" y="1557" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="850.91" y="1567.5" ></text>
</g>
<g >
<title>read_tsc (629,112,601 samples, 0.02%)</title><rect x="877.8" y="1381" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="880.79" y="1391.5" ></text>
</g>
<g >
<title>enqueue_entity (5,763,832,277 samples, 0.18%)</title><rect x="1130.3" y="1413" width="2.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1133.32" y="1423.5" ></text>
</g>
<g >
<title>NaClSysClockGetTime (604,658,468 samples, 0.02%)</title><rect x="828.3" y="1557" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="831.30" y="1567.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (432,534,418 samples, 0.01%)</title><rect x="853.9" y="1365" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="856.86" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (26,961,937,061 samples, 0.83%)</title><rect x="657.5" y="1413" width="9.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="660.50" y="1423.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (1,314,604,456 samples, 0.04%)</title><rect x="763.3" y="1413" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="766.30" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,045,961,871 samples, 0.09%)</title><rect x="94.2" y="1109" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.23" y="1119.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (714,505,357 samples, 0.02%)</title><rect x="682.3" y="1237" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="685.27" y="1247.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (4,733,980,823 samples, 0.15%)</title><rect x="647.1" y="1365" width="1.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="650.11" y="1375.5" ></text>
</g>
<g >
<title>[[vdso]] (1,272,936,117 samples, 0.04%)</title><rect x="516.0" y="1477" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="519.03" y="1487.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (411,779,713 samples, 0.01%)</title><rect x="98.2" y="1477" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="101.17" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="501" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="511.5" ></text>
</g>
<g >
<title>wake_up_process (1,403,699,858 samples, 0.04%)</title><rect x="1121.0" y="1333" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1123.98" y="1343.5" ></text>
</g>
<g >
<title>__sys_recvfrom (477,559,324 samples, 0.01%)</title><rect x="720.1" y="1349" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="723.07" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (620,430,952 samples, 0.02%)</title><rect x="720.0" y="1397" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="723.05" y="1407.5" ></text>
</g>
<g >
<title>ext4_writepages (468,967,768 samples, 0.01%)</title><rect x="855.7" y="1381" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="858.75" y="1391.5" ></text>
</g>
<g >
<title>dispatcher (1,291,309,599 samples, 0.04%)</title><rect x="593.1" y="1493" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="596.07" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="229" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="239.5" ></text>
</g>
<g >
<title>perf-exec (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1589" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="103.91" y="1599.5" ></text>
</g>
<g >
<title>tcp_get_idx (402,653,467 samples, 0.01%)</title><rect x="98.7" y="1333" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="101.74" y="1343.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (5,819,887,130 samples, 0.18%)</title><rect x="94.0" y="1557" width="2.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="96.96" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,027,029,584 samples, 0.03%)</title><rect x="834.2" y="1541" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="837.19" y="1551.5" ></text>
</g>
<g >
<title>seq_read (840,212,690 samples, 0.03%)</title><rect x="98.6" y="1381" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="101.58" y="1391.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (368,436,240 samples, 0.01%)</title><rect x="29.8" y="1429" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="32.83" y="1439.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (485,400,754 samples, 0.01%)</title><rect x="641.6" y="1205" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="644.58" y="1215.5" ></text>
</g>
<g >
<title>__alloc_pages (555,209,929 samples, 0.02%)</title><rect x="764.1" y="1301" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="767.06" y="1311.5" ></text>
</g>
<g >
<title>do_idle (38,118,655,553 samples, 1.17%)</title><rect x="1172.5" y="1525" width="13.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1175.46" y="1535.5" ></text>
</g>
<g >
<title>psi_group_change (316,824,697 samples, 0.01%)</title><rect x="749.7" y="1253" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="752.74" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="933" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="943.5" ></text>
</g>
<g >
<title>shuffle_freelist (522,079,658 samples, 0.02%)</title><rect x="680.3" y="1205" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="683.28" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (686,327,320 samples, 0.02%)</title><rect x="706.7" y="1285" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="709.68" y="1295.5" ></text>
</g>
<g >
<title>poll_idle (8,757,868,624 samples, 0.27%)</title><rect x="17.3" y="1445" width="3.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="20.28" y="1455.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (469,184,050 samples, 0.01%)</title><rect x="102.4" y="1173" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="105.40" y="1183.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (10,506,323,022 samples, 0.32%)</title><rect x="16.6" y="1461" width="3.8" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="19.65" y="1471.5" ></text>
</g>
<g >
<title>__calc_delta (1,170,008,745 samples, 0.04%)</title><rect x="630.1" y="1253" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="633.08" y="1263.5" ></text>
</g>
<g >
<title>begin_new_exec (525,076,959 samples, 0.02%)</title><rect x="838.5" y="1429" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="841.55" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,058,958,850 samples, 0.03%)</title><rect x="27.0" y="1541" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="29.97" y="1551.5" ></text>
</g>
<g >
<title>native_load_tls (437,160,285 samples, 0.01%)</title><rect x="761.3" y="1381" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="764.30" y="1391.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (11,776,804,454 samples, 0.36%)</title><rect x="85.3" y="1541" width="4.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="88.26" y="1551.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,788,219,849 samples, 0.09%)</title><rect x="1172.8" y="1445" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1175.77" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,780,569,343 samples, 0.12%)</title><rect x="94.2" y="1269" width="1.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.19" y="1279.5" ></text>
</g>
<g >
<title>kmem_cache_free (284,221,539 samples, 0.01%)</title><rect x="1122.0" y="1285" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1124.99" y="1295.5" ></text>
</g>
<g >
<title>ksys_read (875,038,555 samples, 0.03%)</title><rect x="844.8" y="1509" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="847.84" y="1519.5" ></text>
</g>
<g >
<title>_compound_head (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1285" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="103.91" y="1295.5" ></text>
</g>
<g >
<title>[ls] (647,881,403 samples, 0.02%)</title><rect x="23.4" y="1477" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="26.43" y="1487.5" ></text>
</g>
<g >
<title>__writeback_single_inode (468,967,768 samples, 0.01%)</title><rect x="855.7" y="1413" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="858.75" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,329,597,191 samples, 0.16%)</title><rect x="848.0" y="1557" width="2.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="851.02" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1029" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="1039.5" ></text>
</g>
<g >
<title>poll_idle (110,237,700,969 samples, 3.38%)</title><rect x="40.1" y="1445" width="39.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="43.14" y="1455.5" >pol..</text>
</g>
<g >
<title>bprm_execve.part.0 (4,539,544,594 samples, 0.14%)</title><rect x="99.3" y="1493" width="1.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="102.26" y="1503.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (635,561,034 samples, 0.02%)</title><rect x="690.9" y="1253" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="693.93" y="1263.5" ></text>
</g>
<g >
<title>do_idle (483,323,224 samples, 0.01%)</title><rect x="10.6" y="1525" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.64" y="1535.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectDefineProperties (307,942,832 samples, 0.01%)</title><rect x="90.5" y="1541" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="93.54" y="1551.5" ></text>
</g>
<g >
<title>ret_from_fork (3,788,258,827 samples, 0.12%)</title><rect x="28.8" y="1557" width="1.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="31.78" y="1567.5" ></text>
</g>
<g >
<title>epoll_wait (573,156,476 samples, 0.02%)</title><rect x="1188.8" y="1493" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1191.84" y="1503.5" ></text>
</g>
<g >
<title>socket_readable (2,538,727,943 samples, 0.08%)</title><rect x="1189.1" y="1493" width="0.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.05" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (925,524,420 samples, 0.03%)</title><rect x="98.6" y="1477" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="101.55" y="1487.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (3,373,695,956 samples, 0.10%)</title><rect x="99.7" y="1301" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="102.68" y="1311.5" ></text>
</g>
<g >
<title>CompareAndSwap (5,930,953,777 samples, 0.18%)</title><rect x="812.0" y="1557" width="2.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="815.03" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1445" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="1455.5" ></text>
</g>
<g >
<title>do_idle (11,736,660,924 samples, 0.36%)</title><rect x="85.3" y="1461" width="4.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="88.26" y="1471.5" ></text>
</g>
<g >
<title>_dl_catch_exception (292,375,063 samples, 0.01%)</title><rect x="12.1" y="1493" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="15.11" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,203,967,996 samples, 0.13%)</title><rect x="101.2" y="1429" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="104.23" y="1439.5" ></text>
</g>
<g >
<title>get_timespec64 (2,380,321,234 samples, 0.07%)</title><rect x="753.9" y="1333" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="756.94" y="1343.5" ></text>
</g>
<g >
<title>mod_objcg_state (788,269,125 samples, 0.02%)</title><rect x="708.9" y="1221" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="711.92" y="1231.5" ></text>
</g>
<g >
<title>do_idle (807,686,379,271 samples, 24.75%)</title><rect x="856.3" y="1525" width="292.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="859.31" y="1535.5" >do_idle</text>
</g>
<g >
<title>reweight_entity (403,758,151 samples, 0.01%)</title><rect x="640.7" y="1205" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="643.70" y="1215.5" ></text>
</g>
<g >
<title>switch_fpu_return (4,964,586,818 samples, 0.15%)</title><rect x="759.2" y="1317" width="1.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="762.21" y="1327.5" ></text>
</g>
<g >
<title>poll_idle (665,774,354 samples, 0.02%)</title><rect x="106.3" y="1445" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="109.26" y="1455.5" ></text>
</g>
<g >
<title>inet_accept (7,049,604,002 samples, 0.22%)</title><rect x="672.0" y="1333" width="2.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="674.97" y="1343.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (30,760,048,019 samples, 0.94%)</title><rect x="444.8" y="1525" width="11.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="447.79" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="245" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="549" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="559.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (15,220,569,353 samples, 0.47%)</title><rect x="697.1" y="1349" width="5.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="700.05" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1013" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1023.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (634,007,276 samples, 0.02%)</title><rect x="712.2" y="1125" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="715.20" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (604,929,545 samples, 0.02%)</title><rect x="837.0" y="1573" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="840.01" y="1583.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1,341,206,928 samples, 0.04%)</title><rect x="743.3" y="1189" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="746.30" y="1199.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (905,474,006 samples, 0.03%)</title><rect x="16.0" y="1461" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="19.00" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="709" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="719.5" ></text>
</g>
<g >
<title>page_remove_rmap (471,741,800 samples, 0.01%)</title><rect x="849.3" y="1269" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="852.26" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (496,512,984 samples, 0.02%)</title><rect x="15.4" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.35" y="1439.5" ></text>
</g>
<g >
<title>__switch_to (1,555,226,533 samples, 0.05%)</title><rect x="845.7" y="1573" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="848.69" y="1583.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (3,795,056,833 samples, 0.12%)</title><rect x="101.4" y="1301" width="1.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="104.37" y="1311.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,904,167,904 samples, 0.06%)</title><rect x="633.4" y="1365" width="0.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="636.41" y="1375.5" ></text>
</g>
<g >
<title>uv__fs_work (1,015,684,706 samples, 0.03%)</title><rect x="98.5" y="1525" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="101.53" y="1535.5" ></text>
</g>
<g >
<title>ct_kernel_exit_state (716,750,334 samples, 0.02%)</title><rect x="885.4" y="1429" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="888.39" y="1439.5" ></text>
</g>
<g >
<title>security_file_free (1,801,773,426 samples, 0.06%)</title><rect x="716.5" y="1285" width="0.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="719.51" y="1295.5" ></text>
</g>
<g >
<title>[[vdso]] (427,008,599 samples, 0.01%)</title><rect x="652.2" y="1397" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="655.22" y="1407.5" ></text>
</g>
<g >
<title>__slab_free (1,147,179,848 samples, 0.04%)</title><rect x="853.6" y="1381" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="856.60" y="1391.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (486,963,309 samples, 0.01%)</title><rect x="13.4" y="1525" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="16.44" y="1535.5" ></text>
</g>
<g >
<title>unmap_vmas (297,337,758 samples, 0.01%)</title><rect x="28.5" y="1429" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="31.48" y="1439.5" ></text>
</g>
<g >
<title>tcp_seq_start (402,653,467 samples, 0.01%)</title><rect x="98.7" y="1349" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="101.74" y="1359.5" ></text>
</g>
<g >
<title>cpu_startup_entry (38,234,751,053 samples, 1.17%)</title><rect x="1172.4" y="1541" width="13.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1175.44" y="1551.5" ></text>
</g>
<g >
<title>load_elf_binary (657,465,150 samples, 0.02%)</title><rect x="838.5" y="1445" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="841.55" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,393,213,954 samples, 0.07%)</title><rect x="94.3" y="869" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.27" y="879.5" ></text>
</g>
<g >
<title>fput (1,244,739,019 samples, 0.04%)</title><rect x="665.8" y="1365" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="668.75" y="1375.5" ></text>
</g>
<g >
<title>[bash] (2,544,502,256 samples, 0.08%)</title><rect x="837.2" y="1509" width="1.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.24" y="1519.5" ></text>
</g>
<g >
<title>ttwu_do_activate (530,441,692 samples, 0.02%)</title><rect x="1185.4" y="1461" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1188.37" y="1471.5" ></text>
</g>
<g >
<title>__calc_delta (292,269,142 samples, 0.01%)</title><rect x="641.0" y="1205" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="644.00" y="1215.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1,140,826,018 samples, 0.03%)</title><rect x="1169.6" y="1445" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1172.58" y="1455.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (319,321,469 samples, 0.01%)</title><rect x="1187.5" y="1397" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1190.53" y="1407.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (370,595,669 samples, 0.01%)</title><rect x="105.4" y="1557" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="108.45" y="1567.5" ></text>
</g>
<g >
<title>rcu_do_batch (2,590,709,679 samples, 0.08%)</title><rect x="34.4" y="1333" width="0.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="37.37" y="1343.5" ></text>
</g>
<g >
<title>native_write_msr (2,161,865,974 samples, 0.07%)</title><rect x="732.7" y="1221" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="735.69" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (3,075,767,338 samples, 0.09%)</title><rect x="623.9" y="1397" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="626.85" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="853" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="863.5" ></text>
</g>
<g >
<title>ksys_read (401,254,496 samples, 0.01%)</title><rect x="106.0" y="1525" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="109.00" y="1535.5" ></text>
</g>
<g >
<title>poll_idle (1,986,447,197 samples, 0.06%)</title><rect x="1187.8" y="1445" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1190.80" y="1455.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (553,290,755 samples, 0.02%)</title><rect x="1131.9" y="1381" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1134.95" y="1391.5" ></text>
</g>
<g >
<title>record_times (396,966,428 samples, 0.01%)</title><rect x="1144.4" y="1461" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1147.35" y="1471.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (364,417,052 samples, 0.01%)</title><rect x="103.5" y="1445" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="106.53" y="1455.5" ></text>
</g>
<g >
<title>prepare_task_switch (937,394,076 samples, 0.03%)</title><rect x="749.4" y="1253" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="752.37" y="1263.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (4,695,829,703 samples, 0.14%)</title><rect x="31.9" y="1365" width="1.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="34.87" y="1375.5" ></text>
</g>
<g >
<title>native_sched_clock (542,652,680 samples, 0.02%)</title><rect x="1147.4" y="1429" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1150.40" y="1439.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (1,629,344,864 samples, 0.05%)</title><rect x="711.9" y="1173" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="714.85" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="677" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="687.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,027,230,985 samples, 0.03%)</title><rect x="106.2" y="1573" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="109.17" y="1583.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::sub_timespec (336,420,932 samples, 0.01%)</title><rect x="763.2" y="1365" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="766.18" y="1375.5" ></text>
</g>
<g >
<title>cpuidle_enter (712,976,115 samples, 0.02%)</title><rect x="838.9" y="1477" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="841.87" y="1487.5" ></text>
</g>
<g >
<title>unmap_vmas (3,501,634,167 samples, 0.11%)</title><rect x="99.6" y="1349" width="1.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="102.64" y="1359.5" ></text>
</g>
<g >
<title>__switch_to_asm (2,214,412,394 samples, 0.07%)</title><rect x="723.7" y="1381" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="726.66" y="1391.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3,287,869,775 samples, 0.10%)</title><rect x="34.3" y="1413" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="37.32" y="1423.5" ></text>
</g>
<g >
<title>[[vdso]] (1,790,902,378 samples, 0.05%)</title><rect x="831.9" y="1557" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="834.94" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="597" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="607.5" ></text>
</g>
<g >
<title>enqueue_entity (1,681,076,103 samples, 0.05%)</title><rect x="32.4" y="1269" width="0.6" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="35.43" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="277" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="287.5" ></text>
</g>
<g >
<title>local_clock_noinstr (1,929,907,010 samples, 0.06%)</title><rect x="906.6" y="1445" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="909.60" y="1455.5" ></text>
</g>
<g >
<title>enqueue_entity (1,165,257,661 samples, 0.04%)</title><rect x="81.5" y="1413" width="0.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="84.51" y="1423.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (2,869,643,047 samples, 0.09%)</title><rect x="420.1" y="1541" width="1.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="423.15" y="1551.5" ></text>
</g>
<g >
<title>run_rebalance_domains (278,724,704 samples, 0.01%)</title><rect x="1122.3" y="1349" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1125.34" y="1359.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (58,206,261,022 samples, 1.78%)</title><rect x="863.7" y="1445" width="21.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="866.70" y="1455.5" ></text>
</g>
<g >
<title>load_balance (1,244,433,344 samples, 0.04%)</title><rect x="882.9" y="1333" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="885.88" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="197" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="207.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (379,260,710 samples, 0.01%)</title><rect x="880.4" y="1269" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="883.43" y="1279.5" ></text>
</g>
<g >
<title>pick_next_task_fair (548,584,405 samples, 0.02%)</title><rect x="1170.3" y="1397" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1173.34" y="1407.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (801,681,512 samples, 0.02%)</title><rect x="455.9" y="1525" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="458.91" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="261" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="271.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (61,030,750,877 samples, 1.87%)</title><rect x="1149.0" y="1557" width="22.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1152.04" y="1567.5" >x..</text>
</g>
<g >
<title>tsc_verify_tsc_adjust (385,710,248 samples, 0.01%)</title><rect x="857.5" y="1493" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="860.48" y="1503.5" ></text>
</g>
<g >
<title>proc_reg_read (575,277,463 samples, 0.02%)</title><rect x="844.9" y="1477" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="847.89" y="1487.5" ></text>
</g>
<g >
<title>do_idle (60,787,245,659 samples, 1.86%)</title><rect x="1149.1" y="1461" width="21.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1152.06" y="1471.5" >d..</text>
</g>
<g >
<title>__mmput (304,309,952 samples, 0.01%)</title><rect x="849.8" y="1461" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="852.78" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (413,583,519 samples, 0.01%)</title><rect x="15.4" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.36" y="1423.5" ></text>
</g>
<g >
<title>[ls] (4,807,670,415 samples, 0.15%)</title><rect x="23.4" y="1573" width="1.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="26.35" y="1583.5" ></text>
</g>
<g >
<title>clockevents_program_event (409,291,565 samples, 0.01%)</title><rect x="1150.5" y="1301" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1153.54" y="1311.5" ></text>
</g>
<g >
<title>i_callback (606,551,511 samples, 0.02%)</title><rect x="29.5" y="1429" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="32.51" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (21,551,192,981 samples, 0.66%)</title><rect x="625.4" y="1365" width="7.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="628.35" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (556,516,925 samples, 0.02%)</title><rect x="838.2" y="1413" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="841.21" y="1423.5" ></text>
</g>
<g >
<title>std::time::Instant::now (1,314,604,456 samples, 0.04%)</title><rect x="763.3" y="1429" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="766.30" y="1439.5" ></text>
</g>
<g >
<title>schedule_idle (2,411,615,261 samples, 0.07%)</title><rect x="1170.0" y="1445" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1173.03" y="1455.5" ></text>
</g>
<g >
<title>sleep (917,950,993,972 samples, 28.13%)</title><rect x="839.2" y="1589" width="331.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="842.18" y="1599.5" >sleep</text>
</g>
<g >
<title>smpboot_thread_fn (737,562,064 samples, 0.02%)</title><rect x="1172.1" y="1525" width="0.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1175.07" y="1535.5" ></text>
</g>
<g >
<title>deflate_slow (344,715,226 samples, 0.01%)</title><rect x="98.4" y="1477" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="101.40" y="1487.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (279,185,916 samples, 0.01%)</title><rect x="79.7" y="1349" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="82.68" y="1359.5" ></text>
</g>
<g >
<title>v8::internal::OptimizingCompileDispatcher::CompileNext (411,779,713 samples, 0.01%)</title><rect x="98.2" y="1509" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="101.17" y="1519.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (668,793,826 samples, 0.02%)</title><rect x="883.1" y="1285" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="886.06" y="1295.5" ></text>
</g>
<g >
<title>ip_queue_xmit (445,398,742 samples, 0.01%)</title><rect x="764.4" y="1301" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="767.44" y="1311.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1,640,790,994 samples, 0.05%)</title><rect x="81.4" y="1429" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="84.41" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,276,519,857 samples, 0.10%)</title><rect x="94.2" y="1125" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.23" y="1135.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (2,458,328,377 samples, 0.08%)</title><rect x="763.8" y="1541" width="0.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="766.79" y="1551.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (8,881,395,389 samples, 0.27%)</title><rect x="697.1" y="1333" width="3.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="700.10" y="1343.5" ></text>
</g>
<g >
<title>update_load_avg (547,412,460 samples, 0.02%)</title><rect x="83.6" y="1429" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="86.56" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="805" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="815.5" ></text>
</g>
<g >
<title>wake_up_process (306,566,056 samples, 0.01%)</title><rect x="1187.5" y="1349" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1190.53" y="1359.5" ></text>
</g>
<g >
<title>swapper (4,025,016,046 samples, 0.12%)</title><rect x="1187.4" y="1589" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1190.35" y="1599.5" ></text>
</g>
<g >
<title>rcu_do_batch (280,460,569 samples, 0.01%)</title><rect x="79.8" y="1317" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="82.83" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1045" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1055.5" ></text>
</g>
<g >
<title>ext4_do_writepages (468,967,768 samples, 0.01%)</title><rect x="855.7" y="1365" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="858.75" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,647,856,592 samples, 0.05%)</title><rect x="94.3" y="677" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.29" y="687.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (1,367,554,777,788 samples, 41.91%)</title><rect x="270.2" y="1557" width="494.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="273.18" y="1567.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>m_show (338,765,724 samples, 0.01%)</title><rect x="106.0" y="1477" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="109.02" y="1487.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (28,953,937,099 samples, 0.89%)</title><rect x="539.4" y="1509" width="10.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="542.36" y="1519.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (9,521,685,899 samples, 0.29%)</title><rect x="691.5" y="1301" width="3.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="694.51" y="1311.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (627,382,456 samples, 0.02%)</title><rect x="836.5" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="839.49" y="1567.5" ></text>
</g>
<g >
<title>sched_clock (730,613,883 samples, 0.02%)</title><rect x="1147.3" y="1461" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1150.33" y="1471.5" ></text>
</g>
<g >
<title>ct_idle_enter (821,037,527 samples, 0.03%)</title><rect x="884.8" y="1445" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="887.84" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (529,963,942 samples, 0.02%)</title><rect x="15.4" y="1461" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.35" y="1471.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::checked_sub_instant (366,095,583 samples, 0.01%)</title><rect x="763.2" y="1381" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="766.17" y="1391.5" ></text>
</g>
<g >
<title>__alloc_pages (728,498,423 samples, 0.02%)</title><rect x="680.0" y="1189" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="682.98" y="1199.5" ></text>
</g>
<g >
<title>dispatcher (470,736,986,178 samples, 14.43%)</title><rect x="593.5" y="1493" width="170.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="596.55" y="1503.5" >dispatcher</text>
</g>
<g >
<title>NaClLog (27,702,073,703 samples, 0.85%)</title><rect x="421.2" y="1541" width="10.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="424.18" y="1551.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (1,547,925,402 samples, 0.05%)</title><rect x="711.9" y="1157" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="714.87" y="1167.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (293,438,343 samples, 0.01%)</title><rect x="764.5" y="1045" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="767.45" y="1055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (722,809,206 samples, 0.02%)</title><rect x="1171.8" y="1573" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1174.80" y="1583.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (4,895,425,280 samples, 0.15%)</title><rect x="108.0" y="1557" width="1.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="111.00" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (10,870,276,853 samples, 0.33%)</title><rect x="16.6" y="1509" width="3.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="19.60" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="341" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="351.5" ></text>
</g>
<g >
<title>__rcu_read_lock (993,269,111 samples, 0.03%)</title><rect x="663.7" y="1333" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="666.72" y="1343.5" ></text>
</g>
<g >
<title>tick_program_event (857,128,126 samples, 0.03%)</title><rect x="33.9" y="1381" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="36.89" y="1391.5" ></text>
</g>
<g >
<title>sched_mm_cid_migrate_to (424,401,723 samples, 0.01%)</title><rect x="1133.3" y="1445" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1136.25" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="853" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="863.5" ></text>
</g>
<g >
<title>native_sched_clock (1,070,512,325 samples, 0.03%)</title><rect x="906.9" y="1413" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="909.91" y="1423.5" ></text>
</g>
<g >
<title>gettimeofday@plt (1,632,995,236 samples, 0.05%)</title><rect x="588.6" y="1493" width="0.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="591.58" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (930,056,439 samples, 0.03%)</title><rect x="96.3" y="85" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (565,592,122 samples, 0.02%)</title><rect x="103.2" y="1557" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="106.22" y="1567.5" ></text>
</g>
<g >
<title>intel_idle (514,700,912 samples, 0.02%)</title><rect x="103.7" y="1445" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="106.66" y="1455.5" ></text>
</g>
<g >
<title>update_cfs_group (1,839,390,223 samples, 0.06%)</title><rect x="869.5" y="1253" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="872.53" y="1263.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (443,514,010 samples, 0.01%)</title><rect x="839.4" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="842.41" y="1551.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1,581,123,753 samples, 0.05%)</title><rect x="730.0" y="1253" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="733.02" y="1263.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (2,077,417,467 samples, 0.06%)</title><rect x="712.7" y="1141" width="0.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="715.67" y="1151.5" ></text>
</g>
<g >
<title>enqueue_task (3,141,665,936 samples, 0.10%)</title><rect x="32.3" y="1301" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="35.29" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,397,286,847 samples, 0.04%)</title><rect x="96.8" y="101" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="111.5" ></text>
</g>
<g >
<title>__libc_start_main (2,187,050,431 samples, 0.07%)</title><rect x="840.2" y="1557" width="0.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="843.25" y="1567.5" ></text>
</g>
<g >
<title>unmap_single_vma (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1333" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="103.91" y="1343.5" ></text>
</g>
<g >
<title>try_to_wake_up (327,642,656 samples, 0.01%)</title><rect x="85.4" y="1269" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="88.40" y="1279.5" ></text>
</g>
<g >
<title>inet_recvmsg (1,614,941,513 samples, 0.05%)</title><rect x="1189.2" y="1333" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1192.25" y="1343.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (295,500,787 samples, 0.01%)</title><rect x="90.4" y="1525" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="93.42" y="1535.5" ></text>
</g>
<g >
<title>[bash] (1,854,742,436 samples, 0.06%)</title><rect x="837.5" y="1413" width="0.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.49" y="1423.5" ></text>
</g>
<g >
<title>enqueue_task (1,261,864,545 samples, 0.04%)</title><rect x="1149.9" y="1237" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1152.91" y="1247.5" ></text>
</g>
<g >
<title>exec_mmap (4,539,544,594 samples, 0.14%)</title><rect x="99.3" y="1413" width="1.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="102.26" y="1423.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (1,150,250,384 samples, 0.04%)</title><rect x="906.9" y="1429" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="909.88" y="1439.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (369,228,270 samples, 0.01%)</title><rect x="763.2" y="1429" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="766.17" y="1439.5" ></text>
</g>
<g >
<title>setlocale (2,149,181,725 samples, 0.07%)</title><rect x="840.3" y="1509" width="0.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="843.25" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_free (676,553,335 samples, 0.02%)</title><rect x="34.9" y="1285" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="37.86" y="1295.5" ></text>
</g>
<g >
<title>journal-offline (1,249,925,478 samples, 0.04%)</title><rect x="15.9" y="1589" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="18.94" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="293" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (565,592,122 samples, 0.02%)</title><rect x="103.2" y="1573" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="106.22" y="1583.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (891,735,642 samples, 0.03%)</title><rect x="870.7" y="1237" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="873.75" y="1247.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (164,168,727,002 samples, 5.03%)</title><rect x="30.2" y="1573" width="59.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="33.15" y="1583.5" >second..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1397" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,022,907,820 samples, 0.06%)</title><rect x="11.2" y="1493" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.21" y="1503.5" ></text>
</g>
<g >
<title>update_load_avg (2,639,058,108 samples, 0.08%)</title><rect x="1131.4" y="1397" width="1.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1134.45" y="1407.5" ></text>
</g>
<g >
<title>do_exit (435,895,498 samples, 0.01%)</title><rect x="13.6" y="1509" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="16.62" y="1519.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1,818,389,091 samples, 0.06%)</title><rect x="764.0" y="1365" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="767.02" y="1375.5" ></text>
</g>
<g >
<title>__mmput (4,539,544,594 samples, 0.14%)</title><rect x="99.3" y="1381" width="1.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="102.26" y="1391.5" ></text>
</g>
<g >
<title>unmap_single_vma (3,493,717,808 samples, 0.11%)</title><rect x="99.6" y="1333" width="1.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="102.64" y="1343.5" ></text>
</g>
<g >
<title>tcp_push_one (529,542,319 samples, 0.02%)</title><rect x="764.4" y="1349" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="767.43" y="1359.5" ></text>
</g>
<g >
<title>NaClSysWrite (2,448,455,535 samples, 0.08%)</title><rect x="763.8" y="1525" width="0.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="766.80" y="1535.5" ></text>
</g>
<g >
<title>command_substitute (806,393,622 samples, 0.02%)</title><rect x="837.6" y="1205" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="840.65" y="1215.5" ></text>
</g>
<g >
<title>load_balance (2,400,107,526 samples, 0.07%)</title><rect x="643.1" y="1221" width="0.8" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="646.07" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,788,795,098 samples, 0.12%)</title><rect x="94.2" y="1285" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.18" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (305,791,334 samples, 0.01%)</title><rect x="13.2" y="1541" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="16.20" y="1551.5" ></text>
</g>
<g >
<title>do_idle (2,972,026,174 samples, 0.09%)</title><rect x="1186.3" y="1461" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1189.28" y="1471.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (949,556,831 samples, 0.03%)</title><rect x="1169.6" y="1413" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1172.60" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="325" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="341" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1573" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="103.91" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="821" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="831.5" ></text>
</g>
<g >
<title>free_swap_cache (304,603,827 samples, 0.01%)</title><rect x="100.8" y="1237" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="103.77" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (320,187,870 samples, 0.01%)</title><rect x="24.0" y="1477" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="26.97" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (439,035,887 samples, 0.01%)</title><rect x="839.4" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="842.41" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,199,689,102 samples, 0.10%)</title><rect x="1188.8" y="1557" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1191.83" y="1567.5" ></text>
</g>
<g >
<title>arch_call_rest_init (370,595,669 samples, 0.01%)</title><rect x="105.4" y="1509" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="108.45" y="1519.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (1,353,215,986 samples, 0.04%)</title><rect x="831.3" y="1557" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="834.28" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,949,848,745 samples, 0.12%)</title><rect x="94.2" y="1349" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.18" y="1359.5" ></text>
</g>
<g >
<title>update_load_avg (300,764,032 samples, 0.01%)</title><rect x="1141.4" y="1445" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1144.36" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,512,755,120 samples, 0.05%)</title><rect x="710.2" y="1221" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="713.17" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="693" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="703.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,574,060,749 samples, 0.08%)</title><rect x="881.0" y="1285" width="0.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="883.99" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (64,980,897,424 samples, 1.99%)</title><rect x="811.9" y="1573" width="23.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="814.89" y="1583.5" >[..</text>
</g>
<g >
<title>rseq_get_rseq_cs (285,922,712 samples, 0.01%)</title><rect x="704.8" y="1301" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="707.82" y="1311.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (302,957,257 samples, 0.01%)</title><rect x="24.0" y="1445" width="0.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="26.97" y="1455.5" ></text>
</g>
<g >
<title>update_load_avg (3,034,117,203 samples, 0.09%)</title><rect x="870.4" y="1253" width="1.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="873.36" y="1263.5" ></text>
</g>
<g >
<title>kmem_cache_free (547,151,778 samples, 0.02%)</title><rect x="29.5" y="1397" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="32.53" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (97,327,941,193 samples, 2.98%)</title><rect x="725.9" y="1365" width="35.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="728.87" y="1375.5" >do..</text>
</g>
<g >
<title>tick_nohz_idle_enter (2,905,535,067 samples, 0.09%)</title><rect x="1146.6" y="1509" width="1.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1149.56" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (875,110,608 samples, 0.03%)</title><rect x="94.3" y="437" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.32" y="447.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (514,376,688 samples, 0.02%)</title><rect x="753.7" y="1301" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="756.72" y="1311.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (487,165,554 samples, 0.01%)</title><rect x="691.2" y="1269" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="694.22" y="1279.5" ></text>
</g>
<g >
<title>kworker/dying (13,161,997,686 samples, 0.40%)</title><rect x="16.4" y="1589" width="4.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="19.39" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,463,907,852 samples, 0.04%)</title><rect x="94.3" y="645" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.30" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1413" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1423.5" ></text>
</g>
<g >
<title>common_nsleep (1,036,472,869 samples, 0.03%)</title><rect x="754.9" y="1349" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="757.86" y="1359.5" ></text>
</g>
<g >
<title>__fget_light (1,367,449,077 samples, 0.04%)</title><rect x="669.9" y="1333" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="672.89" y="1343.5" ></text>
</g>
<g >
<title>exit_mm (390,895,575 samples, 0.01%)</title><rect x="13.6" y="1493" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="16.62" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4,497,731,881 samples, 0.14%)</title><rect x="700.3" y="1333" width="1.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="703.32" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1205" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1215.5" ></text>
</g>
<g >
<title>native_sched_clock (390,346,989 samples, 0.01%)</title><rect x="873.2" y="1221" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="876.24" y="1231.5" ></text>
</g>
<g >
<title>cpuidle_select (2,782,511,594 samples, 0.09%)</title><rect x="80.1" y="1493" width="1.0" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="83.13" y="1503.5" ></text>
</g>
<g >
<title>copy_p4d_range (3,784,170,105 samples, 0.12%)</title><rect x="91.2" y="1301" width="1.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="94.22" y="1311.5" ></text>
</g>
<g >
<title>file_free_rcu (6,982,623,324 samples, 0.21%)</title><rect x="850.8" y="1429" width="2.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="853.82" y="1439.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,245,495,016 samples, 0.04%)</title><rect x="874.1" y="1349" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="877.15" y="1359.5" ></text>
</g>
<g >
<title>load_elf_binary (4,626,010,440 samples, 0.14%)</title><rect x="848.1" y="1445" width="1.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="851.09" y="1455.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (649,469,909 samples, 0.02%)</title><rect x="100.5" y="1237" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="103.54" y="1247.5" ></text>
</g>
<g >
<title>psi_task_change (338,430,304 samples, 0.01%)</title><rect x="82.0" y="1429" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="85.02" y="1439.5" ></text>
</g>
<g >
<title>sched_clock (469,163,052 samples, 0.01%)</title><rect x="873.2" y="1253" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="876.21" y="1263.5" ></text>
</g>
<g >
<title>filemap_add_folio (843,658,210 samples, 0.03%)</title><rect x="101.7" y="1205" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="104.65" y="1215.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (440,593,458 samples, 0.01%)</title><rect x="721.1" y="1381" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="724.13" y="1391.5" ></text>
</g>
<g >
<title>sched_clock (388,635,019 samples, 0.01%)</title><rect x="873.9" y="1285" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="876.86" y="1295.5" ></text>
</g>
<g >
<title>[[vdso]] (98,478,548,132 samples, 3.02%)</title><rect x="552.2" y="1493" width="35.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="555.18" y="1503.5" >[[v..</text>
</g>
<g >
<title>NaClSysClockGetTime (167,970,984,037 samples, 5.15%)</title><rect x="456.2" y="1525" width="60.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="459.20" y="1535.5" >NaClSy..</text>
</g>
<g >
<title>_copy_from_user (1,867,263,631 samples, 0.06%)</title><rect x="754.1" y="1317" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="757.12" y="1327.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (287,905,709 samples, 0.01%)</title><rect x="730.6" y="1253" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="733.59" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1349" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1359.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (995,358,791 samples, 0.03%)</title><rect x="1128.0" y="1461" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1130.98" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (712,976,115 samples, 0.02%)</title><rect x="838.9" y="1461" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="841.87" y="1471.5" ></text>
</g>
<g >
<title>vfs_iter_write (3,809,294,004 samples, 0.12%)</title><rect x="101.4" y="1333" width="1.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="104.36" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="485" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (743,775,684 samples, 0.02%)</title><rect x="16.7" y="1429" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="19.69" y="1439.5" ></text>
</g>
<g >
<title>enqueue_task (2,067,527,458 samples, 0.06%)</title><rect x="81.4" y="1445" width="0.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="84.40" y="1455.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (1,297,539,447 samples, 0.04%)</title><rect x="830.8" y="1557" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="833.81" y="1567.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1,561,435,084 samples, 0.05%)</title><rect x="747.9" y="1157" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="750.90" y="1167.5" ></text>
</g>
<g >
<title>schedule (18,115,015,120 samples, 0.56%)</title><rect x="626.4" y="1333" width="6.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="629.38" y="1343.5" ></text>
</g>
<g >
<title>ct_kernel_enter.constprop.0 (492,328,766 samples, 0.02%)</title><rect x="885.2" y="1429" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="888.21" y="1439.5" ></text>
</g>
<g >
<title>5_ (459,848,428 samples, 0.01%)</title><rect x="10.0" y="1589" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,659,952,354 samples, 0.05%)</title><rect x="840.3" y="1413" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="843.29" y="1423.5" ></text>
</g>
<g >
<title>lapic_next_deadline (960,309,099 samples, 0.03%)</title><rect x="875.8" y="1349" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="878.79" y="1359.5" ></text>
</g>
<g >
<title>write (4,273,894,294 samples, 0.13%)</title><rect x="101.2" y="1445" width="1.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="104.21" y="1455.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (2,978,689,300 samples, 0.09%)</title><rect x="1186.3" y="1541" width="1.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.28" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1,424,891,611 samples, 0.04%)</title><rect x="687.7" y="1237" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="690.75" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_lock (322,406,920 samples, 0.01%)</title><rect x="1129.2" y="1445" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1132.22" y="1455.5" ></text>
</g>
<g >
<title>load_elf_binary (4,539,544,594 samples, 0.14%)</title><rect x="99.3" y="1445" width="1.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="102.26" y="1455.5" ></text>
</g>
<g >
<title>NaClSysSelect (470,736,986,178 samples, 14.43%)</title><rect x="593.5" y="1525" width="170.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="596.55" y="1535.5" >NaClSysSelect</text>
</g>
<g >
<title>poll_idle (44,323,143,689 samples, 1.36%)</title><rect x="1153.1" y="1381" width="16.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1156.07" y="1391.5" ></text>
</g>
<g >
<title>uv__work_done (339,249,324 samples, 0.01%)</title><rect x="97.7" y="1525" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="100.69" y="1535.5" ></text>
</g>
<g >
<title>mmput (304,309,952 samples, 0.01%)</title><rect x="849.8" y="1477" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="852.78" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (139,962,232,456 samples, 4.29%)</title><rect x="30.6" y="1509" width="50.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="33.58" y="1519.5" >cpuid..</text>
</g>
<g >
<title>native_sched_clock (794,392,632 samples, 0.02%)</title><rect x="752.9" y="1189" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="755.89" y="1199.5" ></text>
</g>
<g >
<title>readlink (331,558,115 samples, 0.01%)</title><rect x="24.0" y="1493" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="26.96" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,647,522,406 samples, 0.08%)</title><rect x="96.3" y="1557" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.31" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1477" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1487.5" ></text>
</g>
<g >
<title>setup_object (454,596,605 samples, 0.01%)</title><rect x="680.3" y="1189" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="683.30" y="1199.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (639,044,691 samples, 0.02%)</title><rect x="12.0" y="1509" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.99" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (717,047,862 samples, 0.02%)</title><rect x="839.4" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="842.39" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_enter (136,296,576,323 samples, 4.18%)</title><rect x="30.8" y="1477" width="49.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="33.80" y="1487.5" >cpui..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="373" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="383.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (491,185,128 samples, 0.02%)</title><rect x="1141.0" y="1413" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1144.00" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (874,020,010 samples, 0.03%)</title><rect x="20.8" y="1445" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="23.82" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,397,286,847 samples, 0.04%)</title><rect x="96.8" y="53" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="63.5" ></text>
</g>
<g >
<title>ret_from_fork (15,946,845,423 samples, 0.49%)</title><rect x="850.2" y="1557" width="5.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="853.18" y="1567.5" ></text>
</g>
<g >
<title>ttwu_do_activate (789,068,566 samples, 0.02%)</title><rect x="1172.9" y="1317" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1175.94" y="1327.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (737,099,480 samples, 0.02%)</title><rect x="674.7" y="1317" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="677.69" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,712,053,453 samples, 0.08%)</title><rect x="24.1" y="1493" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.10" y="1503.5" ></text>
</g>
<g >
<title>menu_select (12,836,896,058 samples, 0.39%)</title><rect x="1123.7" y="1477" width="4.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1126.71" y="1487.5" ></text>
</g>
<g >
<title>node::ThreadPoolWork::ScheduleWork (359,742,069 samples, 0.01%)</title><rect x="98.4" y="1525" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="101.40" y="1535.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (28,425,351,850 samples, 0.87%)</title><rect x="657.1" y="1429" width="10.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="660.13" y="1439.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,033,772,197 samples, 0.03%)</title><rect x="16.0" y="1541" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="18.99" y="1551.5" ></text>
</g>
<g >
<title>ip_finish_output (420,672,420 samples, 0.01%)</title><rect x="764.4" y="1237" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="767.44" y="1247.5" ></text>
</g>
<g >
<title>local_clock_noinstr (907,464,188 samples, 0.03%)</title><rect x="1122.5" y="1429" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1125.54" y="1439.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1,104,223,852 samples, 0.03%)</title><rect x="752.8" y="1237" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="755.79" y="1247.5" ></text>
</g>
<g >
<title>exec_binprm (4,539,544,594 samples, 0.14%)</title><rect x="99.3" y="1477" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="102.26" y="1487.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (2,172,288,402 samples, 0.07%)</title><rect x="587.8" y="1493" width="0.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="590.79" y="1503.5" ></text>
</g>
<g >
<title>wake_up_process (345,626,359 samples, 0.01%)</title><rect x="16.7" y="1349" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="19.71" y="1359.5" ></text>
</g>
<g >
<title>enqueue_task_fair (485,829,895 samples, 0.01%)</title><rect x="1173.0" y="1285" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1175.96" y="1295.5" ></text>
</g>
<g >
<title>_raw_spin_lock (768,985,680 samples, 0.02%)</title><rect x="706.4" y="1285" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="709.40" y="1295.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (74,067,208,779 samples, 2.27%)</title><rect x="727.2" y="1317" width="26.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="730.15" y="1327.5" >h..</text>
</g>
<g >
<title>sched_clock_noinstr (773,655,181 samples, 0.02%)</title><rect x="752.1" y="1205" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="755.09" y="1215.5" ></text>
</g>
<g >
<title>set_next_entity (789,596,233 samples, 0.02%)</title><rect x="83.5" y="1445" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="86.47" y="1455.5" ></text>
</g>
<g >
<title>clock_gettime (1,281,736,888 samples, 0.04%)</title><rect x="763.3" y="1381" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="766.31" y="1391.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (294,778,631 samples, 0.01%)</title><rect x="101.0" y="1445" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="104.04" y="1455.5" ></text>
</g>
<g >
<title>release_pages (446,658,665 samples, 0.01%)</title><rect x="849.4" y="1221" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="852.45" y="1231.5" ></text>
</g>
<g >
<title>ip_local_out (437,870,455 samples, 0.01%)</title><rect x="764.4" y="1269" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="767.44" y="1279.5" ></text>
</g>
<g >
<title>place_entity (679,708,729 samples, 0.02%)</title><rect x="869.2" y="1253" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="872.23" y="1263.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (3,781,663,307 samples, 0.12%)</title><rect x="101.4" y="1269" width="1.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="104.37" y="1279.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (403,454,279 samples, 0.01%)</title><rect x="855.8" y="1333" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="858.75" y="1343.5" ></text>
</g>
<g >
<title>kernel_clone (3,953,163,852 samples, 0.12%)</title><rect x="843.2" y="1493" width="1.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="846.19" y="1503.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (3,781,663,307 samples, 0.12%)</title><rect x="101.4" y="1285" width="1.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="104.37" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="581" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="591.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.isra.0 (302,566,554 samples, 0.01%)</title><rect x="882.7" y="1349" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="885.73" y="1359.5" ></text>
</g>
<g >
<title>NaClClockGetTime (1,212,063,046 samples, 0.04%)</title><rect x="818.7" y="1557" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="821.66" y="1567.5" ></text>
</g>
<g >
<title>intel_idle (11,450,729,469 samples, 0.35%)</title><rect x="35.9" y="1445" width="4.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="38.88" y="1455.5" ></text>
</g>
<g >
<title>start_secondary (984,826,734 samples, 0.03%)</title><rect x="106.2" y="1557" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="109.17" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_lock (300,509,083 samples, 0.01%)</title><rect x="646.0" y="1301" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="648.99" y="1311.5" ></text>
</g>
<g >
<title>rcu_core (3,203,778,831 samples, 0.10%)</title><rect x="28.8" y="1461" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="31.84" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (99,294,972,890 samples, 3.04%)</title><rect x="725.4" y="1381" width="35.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="728.36" y="1391.5" >ent..</text>
</g>
<g >
<title>prepare_task_switch (306,822,456 samples, 0.01%)</title><rect x="83.8" y="1477" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="86.79" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (444,950,041 samples, 0.01%)</title><rect x="668.4" y="1413" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="671.44" y="1423.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (2,714,717,053 samples, 0.08%)</title><rect x="1145.1" y="1477" width="1.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1148.13" y="1487.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (607,566,756 samples, 0.02%)</title><rect x="709.9" y="1221" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="712.95" y="1231.5" ></text>
</g>
<g >
<title>[anon] (981,191,798 samples, 0.03%)</title><rect x="89.6" y="1573" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="92.65" y="1583.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (986,821,489 samples, 0.03%)</title><rect x="458.9" y="1509" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="461.92" y="1519.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (380,746,545 samples, 0.01%)</title><rect x="667.1" y="1397" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="670.12" y="1407.5" ></text>
</g>
<g >
<title>clock_gettime (840,320,355 samples, 0.03%)</title><rect x="113.3" y="1557" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="116.25" y="1567.5" ></text>
</g>
<g >
<title>_copy_to_iter (693,523,019 samples, 0.02%)</title><rect x="593.2" y="1157" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="596.17" y="1167.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (448,004,473 samples, 0.01%)</title><rect x="836.5" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="839.52" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1237" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1247.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (680,837,465 samples, 0.02%)</title><rect x="98.2" y="1541" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="101.15" y="1551.5" ></text>
</g>
<g >
<title>NaCl_trampoline_code_end (2,529,333,280 samples, 0.08%)</title><rect x="516.0" y="1493" width="0.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="519.03" y="1503.5" ></text>
</g>
<g >
<title>__update_load_avg_se (679,453,623 samples, 0.02%)</title><rect x="1132.1" y="1381" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1135.15" y="1391.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (436,929,215 samples, 0.01%)</title><rect x="1144.9" y="1477" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1147.95" y="1487.5" ></text>
</g>
<g >
<title>__sys_sendto (2,128,548,230 samples, 0.07%)</title><rect x="763.9" y="1413" width="0.8" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="766.91" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="373" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_rq_lock_irqsave (389,852,617 samples, 0.01%)</title><rect x="1129.2" y="1461" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1132.21" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (4,579,140,852 samples, 0.14%)</title><rect x="94.0" y="1477" width="1.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="97.02" y="1487.5" ></text>
</g>
<g >
<title>sched_clock (919,074,921 samples, 0.03%)</title><rect x="752.8" y="1221" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="755.84" y="1231.5" ></text>
</g>
<g >
<title>do_fcntl (3,455,482,198 samples, 0.11%)</title><rect x="664.2" y="1349" width="1.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="667.23" y="1359.5" ></text>
</g>
<g >
<title>clock_gettime@plt (2,030,689,171 samples, 0.06%)</title><rect x="503.4" y="1477" width="0.7" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="506.41" y="1487.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (350,483,339 samples, 0.01%)</title><rect x="874.4" y="1253" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="877.42" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,187,050,431 samples, 0.07%)</title><rect x="840.2" y="1541" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="843.25" y="1551.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (5,827,480,086 samples, 0.18%)</title><rect x="103.5" y="1573" width="2.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="106.47" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_clock_nanosleep (79,261,354,046 samples, 2.43%)</title><rect x="726.2" y="1349" width="28.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="729.17" y="1359.5" >__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="901" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="911.5" ></text>
</g>
<g >
<title>allocate_slab (1,353,364,798 samples, 0.04%)</title><rect x="680.0" y="1221" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="682.98" y="1231.5" ></text>
</g>
<g >
<title>cpuacct_charge (389,047,114 samples, 0.01%)</title><rect x="630.7" y="1253" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="633.74" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (401,403,461 samples, 0.01%)</title><rect x="101.0" y="1493" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="104.03" y="1503.5" ></text>
</g>
<g >
<title>read_tsc (586,717,349 samples, 0.02%)</title><rect x="733.5" y="1221" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="736.47" y="1231.5" ></text>
</g>
<g >
<title>process_one_work (915,445,858 samples, 0.03%)</title><rect x="855.6" y="1509" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="858.59" y="1519.5" ></text>
</g>
<g >
<title>update_curr (290,825,413 samples, 0.01%)</title><rect x="744.2" y="1221" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="747.20" y="1231.5" ></text>
</g>
<g >
<title>task_work_add (802,512,104 samples, 0.02%)</title><rect x="671.6" y="1317" width="0.3" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="674.61" y="1327.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (400,198,751 samples, 0.01%)</title><rect x="764.4" y="1157" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="767.45" y="1167.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (1,025,825,638 samples, 0.03%)</title><rect x="715.0" y="1189" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="717.98" y="1199.5" ></text>
</g>
<g >
<title>dequeue_entity (5,387,002,374 samples, 0.17%)</title><rect x="640.1" y="1237" width="1.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="643.06" y="1247.5" ></text>
</g>
<g >
<title>__x64_sys_futex (10,737,438,646 samples, 0.33%)</title><rect x="652.7" y="1381" width="3.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="655.71" y="1391.5" ></text>
</g>
<g >
<title>call_cpuidle (2,987,292,612 samples, 0.09%)</title><rect x="1187.5" y="1493" width="1.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1190.52" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_clone (3,953,163,852 samples, 0.12%)</title><rect x="843.2" y="1525" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="846.19" y="1535.5" ></text>
</g>
<g >
<title>wake_up_process (24,674,970,325 samples, 0.76%)</title><rect x="865.1" y="1349" width="9.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="868.15" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,326,651,321 samples, 0.04%)</title><rect x="96.8" y="37" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="99.78" y="47.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,599,876,717 samples, 0.05%)</title><rect x="839.7" y="1573" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="842.65" y="1583.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (344,835,425 samples, 0.01%)</title><rect x="532.5" y="1525" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="535.50" y="1535.5" ></text>
</g>
<g >
<title>ovl_write_iter (3,886,619,592 samples, 0.12%)</title><rect x="101.3" y="1349" width="1.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="104.33" y="1359.5" ></text>
</g>
<g >
<title>update_min_vruntime (599,634,871 samples, 0.02%)</title><rect x="631.0" y="1269" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="633.98" y="1279.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (343,876,099 samples, 0.01%)</title><rect x="873.9" y="1269" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="876.88" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,328,621,486 samples, 0.07%)</title><rect x="24.1" y="1445" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.11" y="1455.5" ></text>
</g>
<g >
<title>__get_user_8 (352,703,049 samples, 0.01%)</title><rect x="648.2" y="1285" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="651.21" y="1295.5" ></text>
</g>
<g >
<title>[unknown]  (130,459,120,987 samples, 4.00%)</title><rect x="764.7" y="1573" width="47.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="767.72" y="1583.5" >[unk..</text>
</g>
<g >
<title>psi_task_change (853,787,972 samples, 0.03%)</title><rect x="33.1" y="1285" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="36.12" y="1295.5" ></text>
</g>
<g >
<title>update_cfs_group (2,531,069,297 samples, 0.08%)</title><rect x="739.8" y="1205" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="742.78" y="1215.5" ></text>
</g>
<g >
<title>xas_descend (348,731,158 samples, 0.01%)</title><rect x="694.3" y="1205" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="697.26" y="1215.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (295,500,787 samples, 0.01%)</title><rect x="90.4" y="1541" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="93.42" y="1551.5" ></text>
</g>
<g >
<title>read (927,232,014 samples, 0.03%)</title><rect x="98.6" y="1493" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="101.55" y="1503.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,603,410,226 samples, 0.05%)</title><rect x="666.3" y="1365" width="0.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="669.34" y="1375.5" ></text>
</g>
<g >
<title>__mmput (504,211,914 samples, 0.02%)</title><rect x="838.6" y="1381" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="841.55" y="1391.5" ></text>
</g>
<g >
<title>local_clock_noinstr (353,120,887 samples, 0.01%)</title><rect x="1123.2" y="1461" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1126.15" y="1471.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,501,158,247 samples, 0.14%)</title><rect x="1120.9" y="1429" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1123.90" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="949" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="959.5" ></text>
</g>
<g >
<title>try_to_wake_up (5,277,538,156 samples, 0.16%)</title><rect x="654.7" y="1317" width="1.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="657.65" y="1327.5" ></text>
</g>
<g >
<title>inode_init_always (5,727,068,643 samples, 0.18%)</title><rect x="677.1" y="1285" width="2.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="680.12" y="1295.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (24,734,817,126 samples, 0.76%)</title><rect x="865.1" y="1365" width="9.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="868.12" y="1375.5" ></text>
</g>
<g >
<title>ip_finish_output2 (415,513,372 samples, 0.01%)</title><rect x="764.4" y="1205" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="767.45" y="1215.5" ></text>
</g>
<g >
<title>enqueue_task_fair (661,911,134 samples, 0.02%)</title><rect x="1121.1" y="1269" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1124.11" y="1279.5" ></text>
</g>
<g >
<title>CompareAndSwap (138,634,187,544 samples, 4.25%)</title><rect x="370.0" y="1525" width="50.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="372.99" y="1535.5" >Compa..</text>
</g>
<g >
<title>expand_string_assignment (810,788,091 samples, 0.02%)</title><rect x="837.6" y="1237" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="840.65" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_lock (599,634,951 samples, 0.02%)</title><rect x="711.0" y="1205" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="714.04" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4,840,833,054 samples, 0.15%)</title><rect x="672.2" y="1301" width="1.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="675.21" y="1311.5" ></text>
</g>
<g >
<title>get_page_from_freelist (716,094,454 samples, 0.02%)</title><rect x="680.0" y="1173" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="682.99" y="1183.5" ></text>
</g>
<g >
<title>__schedule (582,362,073 samples, 0.02%)</title><rect x="89.3" y="1429" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="92.26" y="1439.5" ></text>
</g>
<g >
<title>tick_sched_timer (1,460,522,814 samples, 0.04%)</title><rect x="874.1" y="1365" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="877.07" y="1375.5" ></text>
</g>
<g >
<title>ct_idle_exit (1,405,959,562 samples, 0.04%)</title><rect x="885.1" y="1445" width="0.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="888.14" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,397,286,847 samples, 0.04%)</title><rect x="96.8" y="69" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="79.5" ></text>
</g>
<g >
<title>refill_obj_stock (523,104,782 samples, 0.02%)</title><rect x="854.3" y="1365" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="857.25" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1157" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1167.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (16,356,289,605 samples, 0.50%)</title><rect x="1128.8" y="1509" width="5.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1131.76" y="1519.5" ></text>
</g>
<g >
<title>sched_clock (371,835,016 samples, 0.01%)</title><rect x="645.5" y="1237" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="648.46" y="1247.5" ></text>
</g>
<g >
<title>__tsearch (336,286,266 samples, 0.01%)</title><rect x="11.7" y="1397" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="14.65" y="1407.5" ></text>
</g>
<g >
<title>[sleep] (2,168,291,252 samples, 0.07%)</title><rect x="840.2" y="1525" width="0.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="843.25" y="1535.5" ></text>
</g>
<g >
<title>NaClClockGetTime (109,558,249,420 samples, 3.36%)</title><rect x="464.5" y="1493" width="39.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="467.53" y="1503.5" >NaC..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (405,243,157 samples, 0.01%)</title><rect x="1187.5" y="1445" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1190.52" y="1455.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (393,067,732 samples, 0.01%)</title><rect x="1148.4" y="1525" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1151.39" y="1535.5" ></text>
</g>
<g >
<title>psi_group_change (4,495,916,328 samples, 0.14%)</title><rect x="750.2" y="1237" width="1.7" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="753.24" y="1247.5" ></text>
</g>
<g >
<title>__update_load_avg_se (458,701,960 samples, 0.01%)</title><rect x="641.8" y="1205" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="644.76" y="1215.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run (356,886,992 samples, 0.01%)</title><rect x="97.9" y="1525" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="100.94" y="1535.5" ></text>
</g>
<g >
<title>zap_pte_range (2,367,280,763 samples, 0.07%)</title><rect x="100.0" y="1285" width="0.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="103.05" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1125" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1135.5" ></text>
</g>
<g >
<title>sock_close (2,309,786,259 samples, 0.07%)</title><rect x="717.2" y="1285" width="0.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="720.16" y="1295.5" ></text>
</g>
<g >
<title>fdarray__poll (421,737,192 samples, 0.01%)</title><rect x="101.0" y="1541" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="104.03" y="1551.5" ></text>
</g>
<g >
<title>__libc_fork (4,987,022,565 samples, 0.15%)</title><rect x="91.0" y="1477" width="1.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="94.01" y="1487.5" ></text>
</g>
<g >
<title>rcu_do_batch (657,972,666 samples, 0.02%)</title><rect x="1172.1" y="1445" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1175.09" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,681,178,594 samples, 0.08%)</title><rect x="513.2" y="1477" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="516.21" y="1487.5" ></text>
</g>
<g >
<title>execute_command_internal (1,856,468,305 samples, 0.06%)</title><rect x="837.5" y="1429" width="0.7" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="840.49" y="1439.5" ></text>
</g>
<g >
<title>__schedule (18,711,221,764 samples, 0.57%)</title><rect x="638.8" y="1285" width="6.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="641.83" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="917" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="927.5" ></text>
</g>
<g >
<title>pick_next_task (343,131,238 samples, 0.01%)</title><rect x="855.4" y="1477" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="858.44" y="1487.5" ></text>
</g>
<g >
<title>native_write_msr (332,438,517 samples, 0.01%)</title><rect x="874.4" y="1237" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="877.43" y="1247.5" ></text>
</g>
<g >
<title>__libc_start_main (2,068,193,365 samples, 0.06%)</title><rect x="11.2" y="1557" width="0.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="14.21" y="1567.5" ></text>
</g>
<g >
<title>do_sched_yield (21,073,454,235 samples, 0.65%)</title><rect x="625.4" y="1349" width="7.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="628.37" y="1359.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (4,230,207,255 samples, 0.13%)</title><rect x="111.6" y="1557" width="1.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="114.63" y="1567.5" ></text>
</g>
<g >
<title>sched_clock (914,718,781 samples, 0.03%)</title><rect x="1144.6" y="1445" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1147.56" y="1455.5" ></text>
</g>
<g >
<title>tick_irq_enter (1,330,861,980 samples, 0.04%)</title><rect x="877.6" y="1397" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="880.63" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="389" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="399.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (5,013,995,090 samples, 0.15%)</title><rect x="91.0" y="1509" width="1.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="94.01" y="1519.5" ></text>
</g>
<g >
<title>rcu_core (1,106,394,441 samples, 0.03%)</title><rect x="1150.7" y="1285" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1153.74" y="1295.5" ></text>
</g>
<g >
<title>dup_mmap (4,876,733,380 samples, 0.15%)</title><rect x="91.0" y="1333" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="94.03" y="1343.5" ></text>
</g>
<g >
<title>vma_alloc_folio (323,927,390 samples, 0.01%)</title><rect x="441.0" y="1381" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="444.02" y="1391.5" ></text>
</g>
<g >
<title>rcu_core (687,018,031 samples, 0.02%)</title><rect x="1172.1" y="1461" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1175.08" y="1471.5" ></text>
</g>
<g >
<title>anon_vma_fork (471,851,341 samples, 0.01%)</title><rect x="91.0" y="1317" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="94.05" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_execve (680,242,443 samples, 0.02%)</title><rect x="838.5" y="1541" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="841.54" y="1551.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (5,489,275,070 samples, 0.17%)</title><rect x="94.0" y="1541" width="1.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="96.96" y="1551.5" ></text>
</g>
<g >
<title>enqueue_entity (8,665,822,180 samples, 0.27%)</title><rect x="868.3" y="1269" width="3.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="871.32" y="1279.5" ></text>
</g>
<g >
<title>rcu_do_batch (1,061,205,384 samples, 0.03%)</title><rect x="1150.8" y="1269" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1153.76" y="1279.5" ></text>
</g>
<g >
<title>alloc_fd (1,562,402,205 samples, 0.05%)</title><rect x="702.0" y="1333" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="704.96" y="1343.5" ></text>
</g>
<g >
<title>update_cfs_group (996,551,300 samples, 0.03%)</title><rect x="640.5" y="1221" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="643.49" y="1231.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (733,599,393 samples, 0.02%)</title><rect x="845.4" y="1573" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="848.42" y="1583.5" ></text>
</g>
<g >
<title>apparmor_inode_alloc_security (502,451,788 samples, 0.02%)</title><rect x="678.1" y="1253" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="681.09" y="1263.5" ></text>
</g>
<g >
<title>kmem_cache_free (951,186,175 samples, 0.03%)</title><rect x="716.8" y="1269" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="719.81" y="1279.5" ></text>
</g>
<g >
<title>__d_instantiate (819,691,289 samples, 0.03%)</title><rect x="695.0" y="1285" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="698.00" y="1295.5" ></text>
</g>
<g >
<title>rcu_core (1,549,360,357 samples, 0.05%)</title><rect x="1121.8" y="1333" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1124.78" y="1343.5" ></text>
</g>
<g >
<title>__update_load_avg_se (438,743,122 samples, 0.01%)</title><rect x="739.5" y="1205" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="742.47" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (470,681,465 samples, 0.01%)</title><rect x="15.7" y="1573" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.68" y="1583.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::nonblock_accept (406,189,607 samples, 0.01%)</title><rect x="834.8" y="1557" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="837.82" y="1567.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,972,026,174 samples, 0.09%)</title><rect x="1186.3" y="1477" width="1.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1189.28" y="1487.5" ></text>
</g>
<g >
<title>pick_next_task (7,377,407,145 samples, 0.23%)</title><rect x="1138.9" y="1477" width="2.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1141.87" y="1487.5" ></text>
</g>
<g >
<title>do_user_addr_fault (294,097,061 samples, 0.01%)</title><rect x="847.9" y="1541" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="850.91" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="181" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="191.5" ></text>
</g>
<g >
<title>do_idle (758,759,113 samples, 0.02%)</title><rect x="1148.8" y="1541" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1151.76" y="1551.5" ></text>
</g>
<g >
<title>sock_free_inode (2,815,892,433 samples, 0.09%)</title><rect x="880.9" y="1301" width="1.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="883.94" y="1311.5" ></text>
</g>
<g >
<title>execute_command_internal (1,267,392,522 samples, 0.04%)</title><rect x="837.5" y="1381" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="840.49" y="1391.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (492,562,233 samples, 0.02%)</title><rect x="10.6" y="1573" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="13.64" y="1583.5" ></text>
</g>
<g >
<title>[perf-197047.map] (403,922,237,072 samples, 12.38%)</title><rect x="113.9" y="1573" width="146.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="116.86" y="1583.5" >[perf-197047.map]</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (3,281,686,050 samples, 0.10%)</title><rect x="848.5" y="1301" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="851.51" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,008,561,629 samples, 0.03%)</title><rect x="13.4" y="1557" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="16.43" y="1567.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1,142,160,843 samples, 0.04%)</title><rect x="90.4" y="1557" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="93.42" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (10,710,355,021 samples, 0.33%)</title><rect x="85.3" y="1445" width="3.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="88.29" y="1455.5" ></text>
</g>
<g >
<title>i_callback (705,229,991 samples, 0.02%)</title><rect x="34.9" y="1317" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="37.85" y="1327.5" ></text>
</g>
<g >
<title>cpu_startup_entry (984,826,734 samples, 0.03%)</title><rect x="106.2" y="1541" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="109.17" y="1551.5" ></text>
</g>
<g >
<title>alloc_inode (18,300,684,611 samples, 0.56%)</title><rect x="676.9" y="1301" width="6.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="679.95" y="1311.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (3,604,923,492 samples, 0.11%)</title><rect x="829.5" y="1557" width="1.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="832.51" y="1567.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (2,705,517,186 samples, 0.08%)</title><rect x="757.3" y="1285" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="760.26" y="1295.5" ></text>
</g>
<g >
<title>[[vdso]] (1,241,054,939 samples, 0.04%)</title><rect x="763.3" y="1365" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="766.32" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1397" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1407.5" ></text>
</g>
<g >
<title>path_lookupat (343,725,737 samples, 0.01%)</title><rect x="95.7" y="1381" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="98.74" y="1391.5" ></text>
</g>
<g >
<title>[expr] (2,073,278,496 samples, 0.06%)</title><rect x="11.2" y="1573" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="14.20" y="1583.5" ></text>
</g>
<g >
<title>sock_free_inode (705,229,991 samples, 0.02%)</title><rect x="34.9" y="1301" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="37.85" y="1311.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (282,264,484 samples, 0.01%)</title><rect x="21.9" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="24.85" y="1487.5" ></text>
</g>
<g >
<title>__slab_free (786,198,478 samples, 0.02%)</title><rect x="854.6" y="1397" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="857.60" y="1407.5" ></text>
</g>
<g >
<title>copy_page_from_iter_atomic (470,545,082 samples, 0.01%)</title><rect x="101.5" y="1237" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="104.46" y="1247.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (15,635,173,952 samples, 0.48%)</title><rect x="878.1" y="1397" width="5.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="881.14" y="1407.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,898,132,662 samples, 0.06%)</title><rect x="1121.8" y="1381" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1124.76" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,209,997,788 samples, 0.04%)</title><rect x="94.3" y="597" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.30" y="607.5" ></text>
</g>
<g >
<title>[libc.so.6] (958,202,288 samples, 0.03%)</title><rect x="24.3" y="1397" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.25" y="1407.5" ></text>
</g>
<g >
<title>do_idle (3,472,258,569 samples, 0.11%)</title><rect x="13.9" y="1525" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="16.91" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (710,709,264 samples, 0.02%)</title><rect x="12.0" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.98" y="1551.5" ></text>
</g>
<g >
<title>aa_sk_perm (637,475,114 samples, 0.02%)</title><rect x="674.7" y="1301" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="677.72" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="277" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1173" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1183.5" ></text>
</g>
<g >
<title>bprm_execve (464,242,256 samples, 0.01%)</title><rect x="13.4" y="1509" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="16.44" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1365" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1375.5" ></text>
</g>
<g >
<title>___slab_alloc (2,080,786,943 samples, 0.06%)</title><rect x="679.7" y="1253" width="0.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="682.71" y="1263.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (1,947,313,479 samples, 0.06%)</title><rect x="719.6" y="1445" width="0.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="722.59" y="1455.5" ></text>
</g>
<g >
<title>cpu_startup_entry (60,956,667,628 samples, 1.87%)</title><rect x="1149.0" y="1477" width="22.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1152.04" y="1487.5" >c..</text>
</g>
<g >
<title>thread_main (3,199,689,102 samples, 0.10%)</title><rect x="1188.8" y="1541" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1191.83" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (19,056,243,875 samples, 0.58%)</title><rect x="660.0" y="1381" width="6.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="663.03" y="1391.5" ></text>
</g>
<g >
<title>exit_mmap (4,486,993,757 samples, 0.14%)</title><rect x="99.3" y="1365" width="1.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="102.28" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (687,723,649 samples, 0.02%)</title><rect x="28.4" y="1541" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="31.35" y="1551.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (323,927,390 samples, 0.01%)</title><rect x="441.0" y="1493" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="444.02" y="1503.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (387,634,520 samples, 0.01%)</title><rect x="853.1" y="1397" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="856.14" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1317" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="1327.5" ></text>
</g>
<g >
<title>uv__io_poll (1,460,535,936 samples, 0.04%)</title><rect x="97.4" y="1557" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="100.41" y="1567.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (310,761,108 samples, 0.01%)</title><rect x="643.1" y="1189" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="646.11" y="1199.5" ></text>
</g>
<g >
<title>__slab_free (920,529,261 samples, 0.03%)</title><rect x="881.2" y="1269" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="884.17" y="1279.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1,659,218,751 samples, 0.05%)</title><rect x="632.1" y="1285" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="635.05" y="1295.5" ></text>
</g>
<g >
<title>clockevents_program_event (840,596,459 samples, 0.03%)</title><rect x="33.9" y="1365" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="36.89" y="1375.5" ></text>
</g>
<g >
<title>exec_mmap (514,474,896 samples, 0.02%)</title><rect x="838.5" y="1413" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="841.55" y="1423.5" ></text>
</g>
<g >
<title>vfs_read (1,881,918,415 samples, 0.06%)</title><rect x="1189.2" y="1381" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1192.17" y="1391.5" ></text>
</g>
<g >
<title>wb_do_writeback (497,232,173 samples, 0.02%)</title><rect x="855.7" y="1477" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="858.74" y="1487.5" ></text>
</g>
<g >
<title>__rcu_read_lock (355,589,145 samples, 0.01%)</title><rect x="680.5" y="1253" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="683.49" y="1263.5" ></text>
</g>
<g >
<title>cpu_startup_entry (483,323,224 samples, 0.01%)</title><rect x="10.6" y="1541" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="13.64" y="1551.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (405,824,875 samples, 0.01%)</title><rect x="16.7" y="1381" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="19.69" y="1391.5" ></text>
</g>
<g >
<title>security_socket_accept (1,036,114,245 samples, 0.03%)</title><rect x="674.6" y="1333" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="677.58" y="1343.5" ></text>
</g>
<g >
<title>rcu_core_si (687,018,031 samples, 0.02%)</title><rect x="1172.1" y="1477" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1175.08" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (407,131,809 samples, 0.01%)</title><rect x="94.3" y="325" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.33" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,076,235,510 samples, 0.09%)</title><rect x="97.9" y="1557" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="100.94" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="453" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="463.5" ></text>
</g>
<g >
<title>tick_program_event (300,413,219 samples, 0.01%)</title><rect x="1121.6" y="1365" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1124.60" y="1375.5" ></text>
</g>
<g >
<title>update_curr (3,859,577,199 samples, 0.12%)</title><rect x="740.7" y="1205" width="1.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="743.69" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="293" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="303.5" ></text>
</g>
<g >
<title>clear_page_erms (503,078,587 samples, 0.02%)</title><rect x="764.1" y="1269" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="767.06" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_lock (614,589,740 samples, 0.02%)</title><rect x="865.6" y="1317" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="868.62" y="1327.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (305,290,982 samples, 0.01%)</title><rect x="643.1" y="1157" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="646.11" y="1167.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (676,435,382 samples, 0.02%)</title><rect x="865.8" y="1317" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="868.84" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,298,421,132 samples, 0.35%)</title><rect x="652.7" y="1397" width="4.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="655.69" y="1407.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (361,966,442 samples, 0.01%)</title><rect x="1168.9" y="1349" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1171.94" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (749,185,924,693 samples, 22.96%)</title><rect x="857.7" y="1509" width="270.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="860.72" y="1519.5" >cpuidle_idle_call</text>
</g>
<g >
<title>do_idle (1,033,772,197 samples, 0.03%)</title><rect x="16.0" y="1525" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="18.99" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,539,437 samples, 0.02%)</title><rect x="94.3" y="405" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.32" y="415.5" ></text>
</g>
<g >
<title>_compound_head (661,599,235 samples, 0.02%)</title><rect x="99.8" y="1285" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="102.75" y="1295.5" ></text>
</g>
<g >
<title>fput (517,336,741 samples, 0.02%)</title><rect x="702.8" y="1365" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="705.77" y="1375.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::unlock_exclusive_slow (17,119,746,220 samples, 0.52%)</title><rect x="650.6" y="1445" width="6.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="653.61" y="1455.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1,235,288,793 samples, 0.04%)</title><rect x="83.3" y="1461" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="86.32" y="1471.5" ></text>
</g>
<g >
<title>copy_page_to_iter (746,307,366 samples, 0.02%)</title><rect x="593.2" y="1173" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="596.16" y="1183.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (5,337,699,398 samples, 0.16%)</title><rect x="91.0" y="1557" width="1.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="93.95" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (900,686,124 samples, 0.03%)</title><rect x="838.5" y="1573" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="841.52" y="1583.5" ></text>
</g>
<g >
<title>kmem_cache_free (559,159,523 samples, 0.02%)</title><rect x="29.3" y="1413" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="32.30" y="1423.5" ></text>
</g>
<g >
<title>__mmput (623,469,895 samples, 0.02%)</title><rect x="28.4" y="1461" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="31.36" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="197" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="207.5" ></text>
</g>
<g >
<title>rcu_do_batch (1,499,935,206 samples, 0.05%)</title><rect x="1121.8" y="1317" width="0.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1124.79" y="1327.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::sleep (118,515,539,379 samples, 3.63%)</title><rect x="720.3" y="1429" width="42.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="723.29" y="1439.5" >std:..</text>
</g>
<g >
<title>__do_softirq (1,374,325,311 samples, 0.04%)</title><rect x="1150.7" y="1317" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1153.74" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (925,524,420 samples, 0.03%)</title><rect x="98.6" y="1461" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="101.55" y="1471.5" ></text>
</g>
<g >
<title>__update_load_avg_se (487,612,947 samples, 0.01%)</title><rect x="1141.2" y="1413" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1144.18" y="1423.5" ></text>
</g>
<g >
<title>alloc_pages (555,209,929 samples, 0.02%)</title><rect x="764.1" y="1317" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="767.06" y="1327.5" ></text>
</g>
<g >
<title>get_page_from_freelist (547,539,065 samples, 0.02%)</title><rect x="764.1" y="1285" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="767.06" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (3,291,137,513 samples, 0.10%)</title><rect x="658.5" y="1397" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="661.45" y="1407.5" ></text>
</g>
<g >
<title>schedule_idle (456,626,818 samples, 0.01%)</title><rect x="20.6" y="1509" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="23.60" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,303,902,807 samples, 0.10%)</title><rect x="94.2" y="1157" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.22" y="1167.5" ></text>
</g>
<g >
<title>__xstat64 (549,870,458 samples, 0.02%)</title><rect x="95.7" y="1509" width="0.2" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="98.70" y="1519.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (283,697,757 samples, 0.01%)</title><rect x="35.2" y="1317" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="38.20" y="1327.5" ></text>
</g>
<g >
<title>call_cpuidle (733,038,173,139 samples, 22.46%)</title><rect x="858.4" y="1493" width="265.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="861.40" y="1503.5" >call_cpuidle</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="613" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="623.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (2,636,414,102 samples, 0.08%)</title><rect x="680.8" y="1253" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="683.81" y="1263.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,403,009,303 samples, 0.04%)</title><rect x="1150.7" y="1349" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1153.74" y="1359.5" ></text>
</g>
<g >
<title>put_prev_task_fair (806,136,401 samples, 0.02%)</title><rect x="749.0" y="1237" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="752.04" y="1247.5" ></text>
</g>
<g >
<title>exec_binprm (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1477" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="103.91" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1269" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="949" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,397,286,847 samples, 0.04%)</title><rect x="96.8" y="85" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="95.5" ></text>
</g>
<g >
<title>pick_next_task (1,369,137,408 samples, 0.04%)</title><rect x="83.3" y="1477" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="86.29" y="1487.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (11,776,804,454 samples, 0.36%)</title><rect x="85.3" y="1557" width="4.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="88.26" y="1567.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,677,446,674 samples, 0.14%)</title><rect x="1149.6" y="1381" width="1.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1152.64" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1109" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1119.5" ></text>
</g>
<g >
<title>sched_clock (280,128,918 samples, 0.01%)</title><rect x="1133.9" y="1429" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1136.89" y="1439.5" ></text>
</g>
<g >
<title>clear_inode (856,366,085 samples, 0.03%)</title><rect x="711.3" y="1205" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="714.35" y="1215.5" ></text>
</g>
<g >
<title>__fdget (1,588,341,112 samples, 0.05%)</title><rect x="669.9" y="1349" width="0.6" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="672.88" y="1359.5" ></text>
</g>
<g >
<title>sock_read (2,132,404,142 samples, 0.07%)</title><rect x="1189.1" y="1477" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1192.09" y="1487.5" ></text>
</g>
<g >
<title>__do_softirq (15,147,756,372 samples, 0.46%)</title><rect x="878.2" y="1381" width="5.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="881.23" y="1391.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,202,597,949 samples, 0.07%)</title><rect x="1120.9" y="1397" width="0.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1123.92" y="1407.5" ></text>
</g>
<g >
<title>do_sys_poll (401,403,461 samples, 0.01%)</title><rect x="101.0" y="1461" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="104.03" y="1471.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (531,858,212 samples, 0.02%)</title><rect x="694.5" y="1237" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="697.48" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1461" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1471.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (41,243,112,287 samples, 1.26%)</title><rect x="1172.4" y="1573" width="15.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1175.44" y="1583.5" ></text>
</g>
<g >
<title>_start (3,370,506,341 samples, 0.10%)</title><rect x="837.2" y="1573" width="1.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="840.24" y="1583.5" ></text>
</g>
<g >
<title>[bash] (516,808,347 samples, 0.02%)</title><rect x="837.3" y="1413" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.26" y="1423.5" ></text>
</g>
<g >
<title>start_kernel (2,978,689,300 samples, 0.09%)</title><rect x="1186.3" y="1525" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1189.28" y="1535.5" ></text>
</g>
<g >
<title>generic_perform_write (3,722,137,963 samples, 0.11%)</title><rect x="101.4" y="1253" width="1.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="104.39" y="1263.5" ></text>
</g>
<g >
<title>rcu_core_si (614,554,687 samples, 0.02%)</title><rect x="1173.4" y="1365" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1176.44" y="1375.5" ></text>
</g>
<g >
<title>sock_free_inode (357,611,797 samples, 0.01%)</title><rect x="1122.1" y="1285" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1125.09" y="1295.5" ></text>
</g>
<g >
<title>_raw_spin_lock (305,290,982 samples, 0.01%)</title><rect x="643.1" y="1173" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="646.11" y="1183.5" ></text>
</g>
<g >
<title>poll_idle (28,555,069,372 samples, 0.88%)</title><rect x="1174.8" y="1445" width="10.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1177.79" y="1455.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (469,438,162 samples, 0.01%)</title><rect x="761.1" y="1365" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="764.10" y="1375.5" ></text>
</g>
<g >
<title>__calc_delta (564,230,207 samples, 0.02%)</title><rect x="628.8" y="1269" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="631.80" y="1279.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (813,960,009 samples, 0.02%)</title><rect x="752.9" y="1205" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="755.88" y="1215.5" ></text>
</g>
<g >
<title>rcu_core (614,554,687 samples, 0.02%)</title><rect x="1173.4" y="1349" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1176.44" y="1359.5" ></text>
</g>
<g >
<title>__libc_start_main (4,762,314,805 samples, 0.15%)</title><rect x="23.4" y="1557" width="1.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="26.36" y="1567.5" ></text>
</g>
<g >
<title>psi_task_change (330,372,215 samples, 0.01%)</title><rect x="1150.2" y="1221" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1153.25" y="1231.5" ></text>
</g>
<g >
<title>sched_clock_cpu (346,456,771 samples, 0.01%)</title><rect x="645.2" y="1253" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="648.16" y="1263.5" ></text>
</g>
<g >
<title>update_curr (4,297,757,383 samples, 0.13%)</title><rect x="629.4" y="1269" width="1.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="632.42" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (404,810,907 samples, 0.01%)</title><rect x="652.5" y="1413" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="655.50" y="1423.5" ></text>
</g>
<g >
<title>consume_obj_stock (285,172,200 samples, 0.01%)</title><rect x="691.0" y="1237" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="694.00" y="1247.5" ></text>
</g>
<g >
<title>[ls] (4,744,327,499 samples, 0.15%)</title><rect x="23.4" y="1525" width="1.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="26.36" y="1535.5" ></text>
</g>
<g >
<title>poll_idle (596,161,609,071 samples, 18.27%)</title><rect x="907.3" y="1445" width="215.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="910.30" y="1455.5" >poll_idle</text>
</g>
<g >
<title>update_load_avg (578,042,009 samples, 0.02%)</title><rect x="81.7" y="1397" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="84.72" y="1407.5" ></text>
</g>
<g >
<title>__calc_delta (901,568,265 samples, 0.03%)</title><rect x="741.2" y="1189" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="744.16" y="1199.5" ></text>
</g>
<g >
<title>record__pushfn (4,281,879,842 samples, 0.13%)</title><rect x="101.2" y="1493" width="1.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="104.21" y="1503.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (308,682,386 samples, 0.01%)</title><rect x="718.9" y="1413" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="721.88" y="1423.5" ></text>
</g>
<g >
<title>call_cpuidle (2,710,010,033 samples, 0.08%)</title><rect x="1186.3" y="1429" width="1.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1189.28" y="1439.5" ></text>
</g>
<g >
<title>__libc_start_main (693,655,661 samples, 0.02%)</title><rect x="15.3" y="1557" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="18.31" y="1567.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (7,951,015,708 samples, 0.24%)</title><rect x="688.3" y="1269" width="2.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="691.31" y="1279.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (1,243,670,628 samples, 0.04%)</title><rect x="593.1" y="1461" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="596.09" y="1471.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1,197,084,666 samples, 0.04%)</title><rect x="732.3" y="1221" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="735.25" y="1231.5" ></text>
</g>
<g >
<title>exit_mmap (390,895,575 samples, 0.01%)</title><rect x="13.6" y="1445" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="16.62" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,968,422,837 samples, 0.06%)</title><rect x="94.3" y="773" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.28" y="783.5" ></text>
</g>
<g >
<title>sched_clock_cpu (550,254,192 samples, 0.02%)</title><rect x="873.2" y="1269" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="876.19" y="1279.5" ></text>
</g>
<g >
<title>put_prev_entity (312,064,249 samples, 0.01%)</title><rect x="749.2" y="1221" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="752.22" y="1231.5" ></text>
</g>
<g >
<title>run_ksoftirqd (3,272,527,031 samples, 0.10%)</title><rect x="28.8" y="1509" width="1.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="31.83" y="1519.5" ></text>
</g>
<g >
<title>__libc_start_main (3,370,506,341 samples, 0.10%)</title><rect x="837.2" y="1557" width="1.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="840.24" y="1567.5" ></text>
</g>
<g >
<title>NaClLog (2,393,483,066 samples, 0.07%)</title><rect x="533.3" y="1525" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="536.34" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,138,718,239 samples, 0.13%)</title><rect x="94.2" y="1381" width="1.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.17" y="1391.5" ></text>
</g>
<g >
<title>start_kernel (370,595,669 samples, 0.01%)</title><rect x="105.4" y="1525" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="108.45" y="1535.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (565,881,436 samples, 0.02%)</title><rect x="874.3" y="1285" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="877.35" y="1295.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (378,621,263 samples, 0.01%)</title><rect x="692.4" y="1253" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="695.36" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="965" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,958,471,690 samples, 0.12%)</title><rect x="94.2" y="1365" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.18" y="1375.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (1,076,273,695 samples, 0.03%)</title><rect x="1189.4" y="1269" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1192.35" y="1279.5" ></text>
</g>
<g >
<title>update_curr (295,722,022 samples, 0.01%)</title><rect x="631.2" y="1285" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="634.20" y="1295.5" ></text>
</g>
<g >
<title>lind_pread (1,291,309,599 samples, 0.04%)</title><rect x="593.1" y="1509" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="596.07" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,794,610,047 samples, 0.09%)</title><rect x="94.3" y="1013" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.26" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="837" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="847.5" ></text>
</g>
<g >
<title>[libc.so.6] (613,996,133 samples, 0.02%)</title><rect x="840.4" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="843.42" y="1391.5" ></text>
</g>
<g >
<title>exec_binprm (665,205,079 samples, 0.02%)</title><rect x="838.5" y="1477" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="841.55" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_write (4,199,718,110 samples, 0.13%)</title><rect x="101.2" y="1397" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="104.23" y="1407.5" ></text>
</g>
<g >
<title>main (3,370,506,341 samples, 0.10%)</title><rect x="837.2" y="1525" width="1.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="840.24" y="1535.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (311,988,688 samples, 0.01%)</title><rect x="716.4" y="1285" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="719.39" y="1295.5" ></text>
</g>
<g >
<title>poll_idle (3,789,679,663 samples, 0.12%)</title><rect x="103.9" y="1445" width="1.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="106.85" y="1455.5" ></text>
</g>
<g >
<title>do_idle (984,826,734 samples, 0.03%)</title><rect x="106.2" y="1525" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="109.17" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,791,246,108 samples, 0.05%)</title><rect x="676.2" y="1317" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="679.16" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_execve (492,977,681 samples, 0.02%)</title><rect x="13.4" y="1541" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="16.44" y="1551.5" ></text>
</g>
<g >
<title>cpuidle_enter (872,052,227 samples, 0.03%)</title><rect x="106.2" y="1477" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="109.19" y="1487.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (1,190,889,600 samples, 0.04%)</title><rect x="532.6" y="1525" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="535.62" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (54,436,714,758 samples, 1.67%)</title><rect x="1149.4" y="1397" width="19.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1152.41" y="1407.5" ></text>
</g>
<g >
<title>NaClIsValidClockId (3,825,021,122 samples, 0.12%)</title><rect x="514.6" y="1493" width="1.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="517.64" y="1503.5" ></text>
</g>
<g >
<title>enqueue_task_fair (856,526,388 samples, 0.03%)</title><rect x="1149.9" y="1221" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1152.93" y="1231.5" ></text>
</g>
<g >
<title>record__write (4,281,879,842 samples, 0.13%)</title><rect x="101.2" y="1477" width="1.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="104.21" y="1487.5" ></text>
</g>
<g >
<title>enqueue_task_fair (298,200,134 samples, 0.01%)</title><rect x="1187.5" y="1285" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1190.53" y="1295.5" ></text>
</g>
<g >
<title>native_sched_clock (336,025,518 samples, 0.01%)</title><rect x="873.9" y="1253" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="876.88" y="1263.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (674,942,691 samples, 0.02%)</title><rect x="838.5" y="1493" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="841.54" y="1503.5" ></text>
</g>
<g >
<title>do_writepages (468,967,768 samples, 0.01%)</title><rect x="855.7" y="1397" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="858.75" y="1407.5" ></text>
</g>
<g >
<title>NaClSysSelectDecoder (470,736,986,178 samples, 14.43%)</title><rect x="593.5" y="1541" width="170.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="596.55" y="1551.5" >NaClSysSelectDecoder</text>
</g>
<g >
<title>find_busiest_group (2,041,550,060 samples, 0.06%)</title><rect x="747.7" y="1189" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="750.75" y="1199.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (280,002,943 samples, 0.01%)</title><rect x="763.9" y="1333" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="766.91" y="1343.5" ></text>
</g>
<g >
<title>enqueue_task (15,906,718,847 samples, 0.49%)</title><rect x="867.7" y="1301" width="5.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="870.65" y="1311.5" ></text>
</g>
<g >
<title>psi_group_change (1,038,022,401 samples, 0.03%)</title><rect x="1132.7" y="1413" width="0.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1135.70" y="1423.5" ></text>
</g>
<g >
<title>__sys_accept4 (91,280,868,506 samples, 2.80%)</title><rect x="669.7" y="1365" width="33.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="672.73" y="1375.5" >__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="309" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (323,927,390 samples, 0.01%)</title><rect x="441.0" y="1445" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="444.02" y="1455.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (577,948,764 samples, 0.02%)</title><rect x="764.1" y="1333" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="767.05" y="1343.5" ></text>
</g>
<g >
<title>__tsearch (419,116,950 samples, 0.01%)</title><rect x="24.7" y="1397" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="27.72" y="1407.5" ></text>
</g>
<g >
<title>psi_group_change (4,946,082,109 samples, 0.15%)</title><rect x="1142.6" y="1461" width="1.8" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1145.56" y="1471.5" ></text>
</g>
<g >
<title>alloc_empty_file (19,150,779,970 samples, 0.59%)</title><rect x="684.5" y="1285" width="6.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="687.50" y="1295.5" ></text>
</g>
<g >
<title>rest_init (61,030,750,877 samples, 1.87%)</title><rect x="1149.0" y="1493" width="22.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1152.04" y="1503.5" >r..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (920,593,766 samples, 0.03%)</title><rect x="30.8" y="1461" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="33.82" y="1471.5" ></text>
</g>
<g >
<title>__tsearch (415,616,554 samples, 0.01%)</title><rect x="840.7" y="1397" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="843.73" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,203,812,899 samples, 0.13%)</title><rect x="101.2" y="1413" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="104.23" y="1423.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (914,458,361 samples, 0.03%)</title><rect x="709.2" y="1221" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="712.21" y="1231.5" ></text>
</g>
<g >
<title>unmap_single_vma (3,396,889,009 samples, 0.10%)</title><rect x="848.5" y="1333" width="1.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="851.47" y="1343.5" ></text>
</g>
<g >
<title>__tls_get_addr (344,562,018 samples, 0.01%)</title><rect x="634.4" y="1413" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="637.37" y="1423.5" ></text>
</g>
<g >
<title>free_pgtables (644,576,541 samples, 0.02%)</title><rect x="99.3" y="1349" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="102.28" y="1359.5" ></text>
</g>
<g >
<title>__put_user_8 (825,582,634 samples, 0.03%)</title><rect x="704.0" y="1317" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="706.99" y="1327.5" ></text>
</g>
<g >
<title>recvfrom (802,532,746 samples, 0.02%)</title><rect x="720.0" y="1413" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="722.99" y="1423.5" ></text>
</g>
<g >
<title>__memset (337,793,409 samples, 0.01%)</title><rect x="691.7" y="1269" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="694.68" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,522,131,480 samples, 0.11%)</title><rect x="94.2" y="1237" width="1.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.21" y="1247.5" ></text>
</g>
<g >
<title>do_readlinkat (302,957,257 samples, 0.01%)</title><rect x="24.0" y="1429" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="26.97" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,950,646,460 samples, 0.06%)</title><rect x="94.3" y="741" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.28" y="751.5" ></text>
</g>
<g >
<title>call_cpuidle (10,621,990,516 samples, 0.33%)</title><rect x="16.6" y="1493" width="3.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="19.61" y="1503.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (8,573,992,585 samples, 0.26%)</title><rect x="545.7" y="1477" width="3.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="548.65" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (528,818,511 samples, 0.02%)</title><rect x="1188.9" y="1477" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1191.85" y="1487.5" ></text>
</g>
<g >
<title>kernel_clone (4,905,798,322 samples, 0.15%)</title><rect x="91.0" y="1381" width="1.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="94.02" y="1391.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (2,261,970,032 samples, 0.07%)</title><rect x="883.9" y="1413" width="0.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="886.91" y="1423.5" ></text>
</g>
<g >
<title>futex_wake (10,166,489,101 samples, 0.31%)</title><rect x="652.9" y="1349" width="3.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="655.90" y="1359.5" ></text>
</g>
<g >
<title>rb_insert_color (439,670,890 samples, 0.01%)</title><rect x="730.1" y="1237" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="733.11" y="1247.5" ></text>
</g>
<g >
<title>file_free_rcu (1,547,561,810 samples, 0.05%)</title><rect x="29.0" y="1429" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="31.95" y="1439.5" ></text>
</g>
<g >
<title>set_default_locale (697,167,616 samples, 0.02%)</title><rect x="838.2" y="1509" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="841.21" y="1519.5" ></text>
</g>
<g >
<title>pick_next_entity (924,861,574 samples, 0.03%)</title><rect x="629.1" y="1269" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="632.09" y="1279.5" ></text>
</g>
<g >
<title>___slab_alloc (540,346,398 samples, 0.02%)</title><rect x="678.9" y="1237" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="681.88" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (302,543,627 samples, 0.01%)</title><rect x="98.0" y="1461" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="100.95" y="1471.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (827,957,055 samples, 0.03%)</title><rect x="79.7" y="1429" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="82.67" y="1439.5" ></text>
</g>
<g >
<title>enqueue_entity (402,777,034 samples, 0.01%)</title><rect x="1173.0" y="1269" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1175.98" y="1279.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (761,543,718 samples, 0.02%)</title><rect x="873.5" y="1317" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="876.47" y="1327.5" ></text>
</g>
<g >
<title>select_task_rq_fair (348,118,062 samples, 0.01%)</title><rect x="32.0" y="1317" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="35.05" y="1327.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1,483,582,551 samples, 0.05%)</title><rect x="707.4" y="1253" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="710.36" y="1263.5" ></text>
</g>
<g >
<title>cpuidle_enter (4,798,540,264 samples, 0.15%)</title><rect x="103.5" y="1477" width="1.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="106.50" y="1487.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (646,548,816 samples, 0.02%)</title><rect x="1185.4" y="1493" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1188.35" y="1503.5" ></text>
</g>
<g >
<title>__schedule (51,163,732,030 samples, 1.57%)</title><rect x="734.7" y="1269" width="18.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="737.69" y="1279.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (2,898,489,058 samples, 0.09%)</title><rect x="686.7" y="1237" width="1.0" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="689.65" y="1247.5" ></text>
</g>
<g >
<title>apparmor_d_instantiate (386,261,709 samples, 0.01%)</title><rect x="696.0" y="1269" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="699.02" y="1279.5" ></text>
</g>
<g >
<title>__schedule (425,666,300 samples, 0.01%)</title><rect x="20.6" y="1493" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="23.60" y="1503.5" ></text>
</g>
<g >
<title>psi_task_switch (2,326,863,020 samples, 0.07%)</title><rect x="644.4" y="1269" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="647.44" y="1279.5" ></text>
</g>
<g >
<title>__schedule (29,630,660,565 samples, 0.91%)</title><rect x="1135.4" y="1493" width="10.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1138.40" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (582,721,730 samples, 0.02%)</title><rect x="15.3" y="1477" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.35" y="1487.5" ></text>
</g>
<g >
<title>__do_softirq (298,274,247 samples, 0.01%)</title><rect x="79.8" y="1365" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="82.83" y="1375.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (585,195,459 samples, 0.02%)</title><rect x="630.5" y="1253" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="633.51" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (521,435,287 samples, 0.02%)</title><rect x="1188.9" y="1461" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.85" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (555,003,235 samples, 0.02%)</title><rect x="23.1" y="1541" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="26.12" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1061" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="1071.5" ></text>
</g>
<g >
<title>bprm_execve (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1509" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="103.91" y="1519.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1,070,104,304 samples, 0.03%)</title><rect x="871.1" y="1237" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="874.07" y="1247.5" ></text>
</g>
<g >
<title>__fput (33,103,613,552 samples, 1.01%)</title><rect x="706.0" y="1301" width="12.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="709.02" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="533" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="543.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (312,766,675 samples, 0.01%)</title><rect x="758.9" y="1301" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="761.94" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1093" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="1103.5" ></text>
</g>
<g >
<title>vfs_write (4,168,911,748 samples, 0.13%)</title><rect x="101.2" y="1365" width="1.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="104.24" y="1375.5" ></text>
</g>
<g >
<title>execute_command (435,832,813 samples, 0.01%)</title><rect x="837.5" y="1301" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="840.49" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (382,912,318 samples, 0.01%)</title><rect x="722.7" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="725.75" y="1391.5" ></text>
</g>
<g >
<title>[perf-467.map] (724,285,491 samples, 0.02%)</title><rect x="93.5" y="1573" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="96.49" y="1583.5" ></text>
</g>
<g >
<title>clock_gettime (464,765,024 samples, 0.01%)</title><rect x="652.2" y="1413" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="655.21" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="485" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="495.5" ></text>
</g>
<g >
<title>tcp_sendmsg (2,118,327,862 samples, 0.06%)</title><rect x="763.9" y="1381" width="0.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="766.91" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1461" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1471.5" ></text>
</g>
<g >
<title>__nanosleep (365,201,154 samples, 0.01%)</title><rect x="833.6" y="1557" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="836.58" y="1567.5" ></text>
</g>
<g >
<title>HandleStackContext (3,474,182,989 samples, 0.11%)</title><rect x="814.2" y="1557" width="1.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="817.18" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1509" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="1519.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (304,343,233 samples, 0.01%)</title><rect x="881.4" y="1253" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="884.40" y="1263.5" ></text>
</g>
<g >
<title>rest_init (11,776,804,454 samples, 0.36%)</title><rect x="85.3" y="1493" width="4.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="88.26" y="1503.5" ></text>
</g>
<g >
<title>restore_fpregs_from_fpstate (3,872,283,415 samples, 0.12%)</title><rect x="759.6" y="1301" width="1.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="762.56" y="1311.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (946,926,654 samples, 0.03%)</title><rect x="20.8" y="1557" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="23.81" y="1567.5" ></text>
</g>
<g >
<title>start_secondary (822,560,783 samples, 0.03%)</title><rect x="838.9" y="1557" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="841.87" y="1567.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1493" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="103.91" y="1503.5" ></text>
</g>
<g >
<title>arch_call_rest_init (2,978,689,300 samples, 0.09%)</title><rect x="1186.3" y="1509" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1189.28" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_lock (583,169,472 samples, 0.02%)</title><rect x="695.3" y="1285" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="698.30" y="1295.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (764,913,915 samples, 0.02%)</title><rect x="656.1" y="1285" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="659.09" y="1295.5" ></text>
</g>
<g >
<title>__clone (3,076,235,510 samples, 0.09%)</title><rect x="97.9" y="1573" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="100.94" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="533" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="543.5" ></text>
</g>
<g >
<title>refill_obj_stock (853,054,018 samples, 0.03%)</title><rect x="709.2" y="1205" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="712.23" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="117" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="127.5" ></text>
</g>
<g >
<title>__get_user_8 (1,881,563,030 samples, 0.06%)</title><rect x="757.5" y="1269" width="0.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="760.45" y="1279.5" ></text>
</g>
<g >
<title>__release_sock (285,442,048 samples, 0.01%)</title><rect x="763.9" y="1349" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="766.91" y="1359.5" ></text>
</g>
<g >
<title>__switch_to (494,274,935 samples, 0.02%)</title><rect x="635.2" y="1397" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="638.19" y="1407.5" ></text>
</g>
<g >
<title>NaClIsValidClockId (2,511,406,978 samples, 0.08%)</title><rect x="819.9" y="1557" width="0.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="822.94" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv (286,964,712 samples, 0.01%)</title><rect x="764.5" y="1029" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="767.46" y="1039.5" ></text>
</g>
<g >
<title>exec_binprm (426,642,285 samples, 0.01%)</title><rect x="13.4" y="1477" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="16.45" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (590,443,315 samples, 0.02%)</title><rect x="838.2" y="1445" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="841.21" y="1455.5" ></text>
</g>
<g >
<title>Glob::isIgnored (4,599,781,172 samples, 0.14%)</title><rect x="94.0" y="1493" width="1.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="97.01" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (852,411,569 samples, 0.03%)</title><rect x="96.4" y="69" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="99.37" y="79.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (7,724,348,444 samples, 0.24%)</title><rect x="691.9" y="1269" width="2.8" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="694.91" y="1279.5" ></text>
</g>
<g >
<title>__pmd_alloc (281,908,631 samples, 0.01%)</title><rect x="91.3" y="1285" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="94.31" y="1295.5" ></text>
</g>
<g >
<title>file_free_rcu (745,605,561 samples, 0.02%)</title><rect x="1121.8" y="1301" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1124.82" y="1311.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (28,211,113,461 samples, 0.86%)</title><rect x="864.4" y="1381" width="10.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="867.43" y="1391.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (1,171,241,277 samples, 0.04%)</title><rect x="724.5" y="1381" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="727.47" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1413" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="1423.5" ></text>
</g>
<g >
<title>all (3,263,054,356,203 samples, 100%)</title><rect x="10.0" y="1605" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,017,676,926 samples, 0.09%)</title><rect x="94.2" y="1077" width="1.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.24" y="1087.5" ></text>
</g>
<g >
<title>[libcrypto.so.3] (429,850,832 samples, 0.01%)</title><rect x="1171.4" y="1573" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1174.44" y="1583.5" ></text>
</g>
<g >
<title>set_next_entity (4,072,308,264 samples, 0.12%)</title><rect x="1139.9" y="1445" width="1.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1142.88" y="1455.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (827,957,055 samples, 0.03%)</title><rect x="79.7" y="1413" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="82.67" y="1423.5" ></text>
</g>
<g >
<title>__do_softirq (1,847,060,666 samples, 0.06%)</title><rect x="1121.8" y="1365" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1124.78" y="1375.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (935,643,052 samples, 0.03%)</title><rect x="883.0" y="1301" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="885.96" y="1311.5" ></text>
</g>
<g >
<title>security_inode_free (2,413,024,077 samples, 0.07%)</title><rect x="712.6" y="1173" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="715.58" y="1183.5" ></text>
</g>
<g >
<title>update_rq_clock (406,890,932 samples, 0.01%)</title><rect x="82.2" y="1461" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="85.17" y="1471.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (4,541,693,839 samples, 0.14%)</title><rect x="647.2" y="1349" width="1.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="650.17" y="1359.5" ></text>
</g>
<g >
<title>update_rq_clock (726,819,431 samples, 0.02%)</title><rect x="873.7" y="1317" width="0.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="876.74" y="1327.5" ></text>
</g>
<g >
<title>mmput (504,211,914 samples, 0.02%)</title><rect x="838.6" y="1397" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="841.55" y="1407.5" ></text>
</g>
<g >
<title>sched_clock_cpu (409,206,343 samples, 0.01%)</title><rect x="645.4" y="1253" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="648.45" y="1263.5" ></text>
</g>
<g >
<title>tcp_write_xmit (526,080,979 samples, 0.02%)</title><rect x="764.4" y="1333" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="767.43" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="613" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="623.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (609,713,176 samples, 0.02%)</title><rect x="714.5" y="1205" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="717.47" y="1215.5" ></text>
</g>
<g >
<title>mmput (623,469,895 samples, 0.02%)</title><rect x="28.4" y="1477" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="31.36" y="1487.5" ></text>
</g>
<g >
<title>call_rcu (2,738,924,908 samples, 0.08%)</title><rect x="706.9" y="1285" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="709.95" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,154,314,496 samples, 0.07%)</title><rect x="763.9" y="1445" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="766.90" y="1455.5" ></text>
</g>
<g >
<title>new_slab (1,356,826,258 samples, 0.04%)</title><rect x="680.0" y="1237" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="682.98" y="1247.5" ></text>
</g>
<g >
<title>exit_mmap (404,527,194 samples, 0.01%)</title><rect x="838.6" y="1365" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="841.56" y="1375.5" ></text>
</g>
<g >
<title>dentry_free (3,723,338,476 samples, 0.11%)</title><rect x="708.3" y="1253" width="1.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="711.28" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,183,115,342 samples, 0.07%)</title><rect x="94.3" y="837" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.27" y="847.5" ></text>
</g>
<g >
<title>os_xsave (1,134,926,279 samples, 0.03%)</title><rect x="648.9" y="1397" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="651.94" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (440,959,090 samples, 0.01%)</title><rect x="1188.9" y="1445" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1191.86" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter (851,236,608 samples, 0.03%)</title><rect x="20.8" y="1413" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="23.82" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="645" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="655.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,164,216,240 samples, 0.07%)</title><rect x="1120.9" y="1381" width="0.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1123.93" y="1391.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,903,576,879 samples, 0.06%)</title><rect x="1121.8" y="1397" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1124.76" y="1407.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (338,903,159 samples, 0.01%)</title><rect x="90.8" y="1557" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="93.83" y="1567.5" ></text>
</g>
<g >
<title>do_user_addr_fault (323,927,390 samples, 0.01%)</title><rect x="441.0" y="1461" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="444.02" y="1471.5" ></text>
</g>
<g >
<title>pick_next_entity (797,692,530 samples, 0.02%)</title><rect x="1139.3" y="1445" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1142.32" y="1455.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,628,365,327 samples, 0.08%)</title><rect x="852.4" y="1413" width="0.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="855.37" y="1423.5" ></text>
</g>
<g >
<title>call_cpuidle (10,493,573,181 samples, 0.32%)</title><rect x="85.3" y="1429" width="3.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="88.29" y="1439.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (344,778,340 samples, 0.01%)</title><rect x="85.4" y="1301" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="88.39" y="1311.5" ></text>
</g>
<g >
<title>common_nsleep (74,300,612,716 samples, 2.28%)</title><rect x="727.1" y="1333" width="26.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="730.07" y="1343.5" >c..</text>
</g>
<g >
<title>poll_idle (648,604,254 samples, 0.02%)</title><rect x="20.9" y="1381" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="23.89" y="1391.5" ></text>
</g>
<g >
<title>release_sock (671,069,554 samples, 0.02%)</title><rect x="674.2" y="1301" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="677.17" y="1311.5" ></text>
</g>
<g >
<title>uv__stream_io (295,167,926 samples, 0.01%)</title><rect x="97.8" y="1541" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="100.82" y="1551.5" ></text>
</g>
<g >
<title>cpu_startup_entry (11,766,097,793 samples, 0.36%)</title><rect x="85.3" y="1477" width="4.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="88.26" y="1487.5" ></text>
</g>
<g >
<title>__put_user_8 (1,015,802,547 samples, 0.03%)</title><rect x="756.9" y="1285" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="759.86" y="1295.5" ></text>
</g>
<g >
<title>do_accept (72,019,695,197 samples, 2.21%)</title><rect x="670.8" y="1349" width="26.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="673.76" y="1359.5" >d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,282,276,167 samples, 0.10%)</title><rect x="94.2" y="1141" width="1.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.23" y="1151.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (14,875,207,444 samples, 0.46%)</title><rect x="755.6" y="1333" width="5.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="758.62" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (896,947,911 samples, 0.03%)</title><rect x="838.5" y="1557" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="841.52" y="1567.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,750,737,327 samples, 0.05%)</title><rect x="1172.8" y="1413" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1175.78" y="1423.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (4,672,106,721 samples, 0.14%)</title><rect x="848.1" y="1493" width="1.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="851.08" y="1503.5" ></text>
</g>
<g >
<title>execute_command_internal (584,083,587 samples, 0.02%)</title><rect x="837.9" y="1397" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="840.95" y="1407.5" ></text>
</g>
<g >
<title>__do_sys_clone (3,953,163,852 samples, 0.12%)</title><rect x="843.2" y="1509" width="1.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="846.19" y="1519.5" ></text>
</g>
<g >
<title>std::thread::sleep (668,357,301 samples, 0.02%)</title><rect x="835.1" y="1557" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="838.06" y="1567.5" ></text>
</g>
<g >
<title>vfs_read (853,996,005 samples, 0.03%)</title><rect x="844.8" y="1493" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="847.85" y="1503.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::pread_syscall (1,278,601,263 samples, 0.04%)</title><rect x="593.1" y="1477" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="596.08" y="1487.5" ></text>
</g>
<g >
<title>rb_erase (459,018,770 samples, 0.01%)</title><rect x="1139.6" y="1445" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1142.61" y="1455.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (422,977,944 samples, 0.01%)</title><rect x="99.4" y="1333" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="102.36" y="1343.5" ></text>
</g>
<g >
<title>NaClSysClockGetTimeDecoder (209,636,670,307 samples, 6.42%)</title><rect x="441.1" y="1541" width="75.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="444.13" y="1551.5" >NaClSysC..</text>
</g>
<g >
<title>neigh_hh_output (415,513,372 samples, 0.01%)</title><rect x="764.4" y="1189" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="767.45" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1493" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2,358,188,750 samples, 0.07%)</title><rect x="678.3" y="1253" width="0.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="681.27" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1125" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="1135.5" ></text>
</g>
<g >
<title>bprm_execve (4,672,106,721 samples, 0.14%)</title><rect x="848.1" y="1509" width="1.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="851.08" y="1519.5" ></text>
</g>
<g >
<title>ovl_read_iter (983,813,548 samples, 0.03%)</title><rect x="593.1" y="1285" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="596.12" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1253" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="1263.5" ></text>
</g>
<g >
<title>do_group_exit (687,723,649 samples, 0.02%)</title><rect x="28.4" y="1525" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="31.35" y="1535.5" ></text>
</g>
<g >
<title>node (31,472,367,150 samples, 0.96%)</title><rect x="89.5" y="1589" width="11.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="92.53" y="1599.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,988,252,036 samples, 0.09%)</title><rect x="13.9" y="1477" width="1.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="16.92" y="1487.5" ></text>
</g>
<g >
<title>file_free_rcu (550,979,971 samples, 0.02%)</title><rect x="1150.8" y="1253" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1153.77" y="1263.5" ></text>
</g>
<g >
<title>__get_user_8 (1,054,628,423 samples, 0.03%)</title><rect x="704.4" y="1301" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="707.44" y="1311.5" ></text>
</g>
<g >
<title>futex_q_lock (1,902,429,257 samples, 0.06%)</title><rect x="646.2" y="1301" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="649.23" y="1311.5" ></text>
</g>
<g >
<title>command_substitute (581,728,123 samples, 0.02%)</title><rect x="837.9" y="1301" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="840.95" y="1311.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (42,751,800,801 samples, 1.31%)</title><rect x="703.2" y="1365" width="15.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="706.24" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,635,045,162 samples, 0.08%)</title><rect x="832.6" y="1557" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="835.59" y="1567.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::recvfrom_nonblocking (1,746,160,336 samples, 0.05%)</title><rect x="719.6" y="1429" width="0.7" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="722.64" y="1439.5" ></text>
</g>
<g >
<title>call_cpuidle (34,845,194,623 samples, 1.07%)</title><rect x="1172.5" y="1493" width="12.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1175.54" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="629" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1141" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1151.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (3,446,139,250 samples, 0.11%)</title><rect x="28.8" y="1525" width="1.3" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="31.80" y="1535.5" ></text>
</g>
<g >
<title>copy_present_pte (1,122,269,155 samples, 0.03%)</title><rect x="844.0" y="1381" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="846.95" y="1391.5" ></text>
</g>
<g >
<title>i_callback (2,886,316,416 samples, 0.09%)</title><rect x="880.9" y="1317" width="1.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="883.91" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (930,056,439 samples, 0.03%)</title><rect x="96.3" y="133" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="143.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (292,375,063 samples, 0.01%)</title><rect x="12.1" y="1461" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.11" y="1471.5" ></text>
</g>
<g >
<title>statx (423,961,071 samples, 0.01%)</title><rect x="23.8" y="1477" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="26.79" y="1487.5" ></text>
</g>
<g >
<title>unmap_page_range (3,420,184,623 samples, 0.10%)</title><rect x="99.7" y="1317" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="102.67" y="1327.5" ></text>
</g>
<g >
<title>__schedule (5,750,391,372 samples, 0.18%)</title><rect x="82.6" y="1493" width="2.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="85.63" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,188,756,188 samples, 0.04%)</title><rect x="94.3" y="565" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.31" y="575.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (842,777,121 samples, 0.03%)</title><rect x="20.8" y="1397" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="23.82" y="1407.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,842,388,277 samples, 0.09%)</title><rect x="1149.7" y="1333" width="1.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1152.66" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,652,554,200 samples, 0.05%)</title><rect x="94.3" y="693" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.29" y="703.5" ></text>
</g>
<g >
<title>refill_obj_stock (366,254,789 samples, 0.01%)</title><rect x="853.2" y="1381" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="856.15" y="1391.5" ></text>
</g>
<g >
<title>pte_alloc_one (381,483,926 samples, 0.01%)</title><rect x="91.6" y="1253" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="94.62" y="1263.5" ></text>
</g>
<g >
<title>wake_up_process (279,185,916 samples, 0.01%)</title><rect x="79.7" y="1333" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="82.68" y="1343.5" ></text>
</g>
<g >
<title>memcpy@plt (856,551,469 samples, 0.03%)</title><rect x="532.2" y="1509" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="535.19" y="1519.5" ></text>
</g>
<g >
<title>[bash] (658,055,364 samples, 0.02%)</title><rect x="837.3" y="1445" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.25" y="1455.5" ></text>
</g>
<g >
<title>tick_program_event (5,120,127,707 samples, 0.16%)</title><rect x="875.6" y="1381" width="1.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="878.63" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_execve (310,528,730 samples, 0.01%)</title><rect x="100.9" y="1541" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="103.91" y="1551.5" ></text>
</g>
<g >
<title>do_idle (151,779,142,641 samples, 4.65%)</title><rect x="30.2" y="1525" width="54.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="33.23" y="1535.5" >do_idle</text>
</g>
<g >
<title>ext4_block_write_begin (647,642,051 samples, 0.02%)</title><rect x="102.1" y="1221" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="105.05" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1477" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.75" y="1487.5" ></text>
</g>
<g >
<title>sock_alloc_inode (11,726,205,206 samples, 0.36%)</title><rect x="679.3" y="1285" width="4.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="682.32" y="1295.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1,012,960,514 samples, 0.03%)</title><rect x="1121.1" y="1301" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1124.08" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,686,274,637 samples, 0.08%)</title><rect x="1186.3" y="1397" width="1.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1189.29" y="1407.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (577,948,764 samples, 0.02%)</title><rect x="764.1" y="1349" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="767.05" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="565" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="575.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (282,264,484 samples, 0.01%)</title><rect x="21.9" y="1445" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="24.85" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (24,624,277,001 samples, 0.75%)</title><rect x="625.2" y="1381" width="8.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="628.19" y="1391.5" ></text>
</g>
<g >
<title>mod_objcg_state (1,241,387,646 samples, 0.04%)</title><rect x="681.3" y="1237" width="0.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="684.31" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1525" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_lock (755,554,314 samples, 0.02%)</title><rect x="737.5" y="1253" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="740.54" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_read (307,929,864 samples, 0.01%)</title><rect x="103.3" y="1541" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="106.31" y="1551.5" ></text>
</g>
<g >
<title>cpuidle_enter (10,477,028,425 samples, 0.32%)</title><rect x="85.3" y="1413" width="3.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="88.30" y="1423.5" ></text>
</g>
<g >
<title>mod_objcg_state (439,021,475 samples, 0.01%)</title><rect x="854.1" y="1381" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="857.08" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (477,331,314 samples, 0.01%)</title><rect x="839.4" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="842.40" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="725" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="735.5" ></text>
</g>
<g >
<title>set_task_cpu (746,548,959 samples, 0.02%)</title><rect x="866.9" y="1317" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="869.93" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,431,466,952 samples, 0.04%)</title><rect x="96.8" y="1189" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.75" y="1199.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,762,016,579 samples, 0.12%)</title><rect x="13.9" y="1573" width="1.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="16.91" y="1583.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectGetOwnPropertyDescriptors (384,391,399 samples, 0.01%)</title><rect x="90.7" y="1541" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="93.69" y="1551.5" ></text>
</g>
<g >
<title>filemap_read (904,364,351 samples, 0.03%)</title><rect x="593.1" y="1189" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="596.14" y="1199.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (56,458,821,774 samples, 1.73%)</title><rect x="1149.2" y="1445" width="20.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1152.16" y="1455.5" ></text>
</g>
<g >
<title>InotifyBackend::start (356,886,992 samples, 0.01%)</title><rect x="97.9" y="1509" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="100.94" y="1519.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,642,077,811 samples, 0.05%)</title><rect x="649.9" y="1413" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="652.91" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="517" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="527.5" ></text>
</g>
<g >
<title>copyin (291,024,984 samples, 0.01%)</title><rect x="764.3" y="1317" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="767.27" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1285" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1295.5" ></text>
</g>
<g >
<title>__switch_to (519,735,907 samples, 0.02%)</title><rect x="639.6" y="1269" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="642.55" y="1279.5" ></text>
</g>
<g >
<title>rest_init (370,595,669 samples, 0.01%)</title><rect x="105.4" y="1493" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="108.45" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (409,102,158 samples, 0.01%)</title><rect x="23.8" y="1445" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="26.79" y="1455.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (628,864,861 samples, 0.02%)</title><rect x="1185.4" y="1477" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1188.36" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,025,367,051 samples, 0.09%)</title><rect x="1187.5" y="1509" width="1.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1190.52" y="1519.5" ></text>
</g>
<g >
<title>try_to_wake_up (306,566,056 samples, 0.01%)</title><rect x="1187.5" y="1333" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1190.53" y="1343.5" ></text>
</g>
<g >
<title>d_instantiate (3,437,052,344 samples, 0.11%)</title><rect x="695.0" y="1301" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="697.95" y="1311.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::check_select_read (1,655,972,421 samples, 0.05%)</title><rect x="719.0" y="1445" width="0.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="721.99" y="1455.5" ></text>
</g>
<g >
<title>file_free_rcu (368,219,127 samples, 0.01%)</title><rect x="1172.1" y="1429" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1175.10" y="1439.5" ></text>
</g>
<g >
<title>sock_alloc_file (35,866,765,489 samples, 1.10%)</title><rect x="683.6" y="1333" width="13.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="686.62" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (616,027,754 samples, 0.02%)</title><rect x="21.7" y="1509" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="24.75" y="1519.5" ></text>
</g>
<g >
<title>start_secondary (5,456,884,417 samples, 0.17%)</title><rect x="103.5" y="1557" width="1.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="106.47" y="1567.5" ></text>
</g>
<g >
<title>enqueue_task (495,719,062 samples, 0.02%)</title><rect x="1185.4" y="1445" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1188.38" y="1455.5" ></text>
</g>
<g >
<title>_copy_to_iter (892,194,130 samples, 0.03%)</title><rect x="1189.4" y="1237" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1192.42" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (946,375,604 samples, 0.03%)</title><rect x="96.3" y="741" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="99.34" y="751.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (5,897,149,354 samples, 0.18%)</title><rect x="744.6" y="1253" width="2.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="747.58" y="1263.5" ></text>
</g>
<g >
<title>sock_recvmsg (299,044,632 samples, 0.01%)</title><rect x="720.1" y="1333" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="723.09" y="1343.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (279,043,575 samples, 0.01%)</title><rect x="854.8" y="1381" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="857.78" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,968,322,261 samples, 0.06%)</title><rect x="840.3" y="1461" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="843.26" y="1471.5" ></text>
</g>
<g >
<title>enqueue_task_fair (10,933,398,111 samples, 0.34%)</title><rect x="867.8" y="1285" width="4.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="870.80" y="1295.5" ></text>
</g>
<g >
<title>pick_next_task (4,097,221,456 samples, 0.13%)</title><rect x="642.8" y="1269" width="1.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="645.78" y="1279.5" ></text>
</g>
<g >
<title>menu_select (1,086,347,481 samples, 0.03%)</title><rect x="1169.2" y="1413" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1172.15" y="1423.5" ></text>
</g>
<g >
<title>vfs_read (896,799,230 samples, 0.03%)</title><rect x="98.6" y="1413" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="101.56" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,990,572,735 samples, 0.06%)</title><rect x="24.2" y="1413" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.18" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (4,880,867,619 samples, 0.15%)</title><rect x="101.0" y="1573" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="104.02" y="1583.5" ></text>
</g>
<g >
<title>rcu_core (280,460,569 samples, 0.01%)</title><rect x="79.8" y="1333" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="82.83" y="1343.5" ></text>
</g>
<g >
<title>psi_task_switch (574,710,849 samples, 0.02%)</title><rect x="1170.6" y="1413" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1173.60" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,737,219,801 samples, 0.05%)</title><rect x="11.2" y="1445" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.23" y="1455.5" ></text>
</g>
<g >
<title>rest_init (2,978,689,300 samples, 0.09%)</title><rect x="1186.3" y="1493" width="1.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1189.28" y="1503.5" ></text>
</g>
<g >
<title>intel_idle (2,578,396,874 samples, 0.08%)</title><rect x="1173.8" y="1445" width="1.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1176.82" y="1455.5" ></text>
</g>
<g >
<title>mmput (4,410,592,923 samples, 0.14%)</title><rect x="848.1" y="1397" width="1.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="851.10" y="1407.5" ></text>
</g>
<g >
<title>local_clock_noinstr (282,737,539 samples, 0.01%)</title><rect x="40.0" y="1445" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="43.03" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,174,977,108 samples, 0.04%)</title><rect x="96.3" y="1541" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.33" y="1551.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (470,730,648,640 samples, 14.43%)</title><rect x="593.6" y="1477" width="170.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="596.55" y="1487.5" >rustposix::safeposix::..</text>
</g>
<g >
<title>[libc.so.6] (440,593,458 samples, 0.01%)</title><rect x="721.1" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="724.13" y="1407.5" ></text>
</g>
<g >
<title>ksys_read (1,058,247,481 samples, 0.03%)</title><rect x="593.1" y="1317" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="596.11" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (385,724,670 samples, 0.01%)</title><rect x="94.3" y="309" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="97.34" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (518,558,848 samples, 0.02%)</title><rect x="16.7" y="1413" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="19.69" y="1423.5" ></text>
</g>
<g >
<title>update_load_avg (312,757,659 samples, 0.01%)</title><rect x="1150.1" y="1189" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1153.10" y="1199.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (438,973,953 samples, 0.01%)</title><rect x="852.8" y="1381" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="855.77" y="1391.5" ></text>
</g>
<g >
<title>ttwu_do_activate (17,336,249,135 samples, 0.53%)</title><rect x="867.2" y="1317" width="6.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="870.20" y="1327.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (506,723,552 samples, 0.02%)</title><rect x="857.4" y="1509" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="860.44" y="1519.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,749,794,566 samples, 0.05%)</title><rect x="1120.9" y="1365" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1123.94" y="1375.5" ></text>
</g>
<g >
<title>load_elf_binary (447,067,479 samples, 0.01%)</title><rect x="28.2" y="1445" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="31.18" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,699,232,853 samples, 0.05%)</title><rect x="11.2" y="1429" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.23" y="1439.5" ></text>
</g>
<g >
<title>[bash] (584,083,587 samples, 0.02%)</title><rect x="837.9" y="1381" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.95" y="1391.5" ></text>
</g>
<g >
<title>proc_reg_read (840,212,690 samples, 0.03%)</title><rect x="98.6" y="1397" width="0.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="101.58" y="1407.5" ></text>
</g>
<g >
<title>tcp_seq_start (309,249,901 samples, 0.01%)</title><rect x="845.0" y="1429" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="847.98" y="1439.5" ></text>
</g>
<g >
<title>security_file_alloc (5,283,843,749 samples, 0.16%)</title><rect x="686.4" y="1253" width="1.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="689.40" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,375,604 samples, 0.03%)</title><rect x="96.3" y="1221" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="99.34" y="1231.5" ></text>
</g>
<g >
<title>start_secondary (3,319,784,558 samples, 0.10%)</title><rect x="1187.5" y="1557" width="1.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1190.52" y="1567.5" ></text>
</g>
<g >
<title>expand_string_assignment (584,083,587 samples, 0.02%)</title><rect x="837.9" y="1333" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="840.95" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_poll (401,403,461 samples, 0.01%)</title><rect x="101.0" y="1477" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="104.03" y="1487.5" ></text>
</g>
<g >
<title>menu_select (531,184,678 samples, 0.02%)</title><rect x="1185.1" y="1477" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1188.14" y="1487.5" ></text>
</g>
<g >
<title>[ls] (1,992,371,114 samples, 0.06%)</title><rect x="23.4" y="1509" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="26.37" y="1519.5" ></text>
</g>
</g>
</svg>
