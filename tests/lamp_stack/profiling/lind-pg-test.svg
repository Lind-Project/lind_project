<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1654" onload="init(evt)" viewBox="0 0 1200 1654" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1654.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1637" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1637" > </text>
<g id="frames">
<g >
<title>syscall_exit_to_user_mode (2,128,853,900 samples, 0.11%)</title><rect x="376.2" y="1429" width="1.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="379.16" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (348,307,354 samples, 0.02%)</title><rect x="12.5" y="709" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.53" y="719.5" ></text>
</g>
<g >
<title>irq_exit_rcu (490,029,767 samples, 0.03%)</title><rect x="1187.5" y="1429" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1190.55" y="1439.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (3,157,235,754 samples, 0.17%)</title><rect x="182.3" y="1381" width="2.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="185.34" y="1391.5" ></text>
</g>
<g >
<title>ip_list_rcv (460,215,470 samples, 0.02%)</title><rect x="1187.6" y="1285" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1190.57" y="1295.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (278,636,776 samples, 0.01%)</title><rect x="1176.4" y="1461" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1179.44" y="1471.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Write&gt;::write (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1445" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="980.65" y="1455.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (649,181,871 samples, 0.03%)</title><rect x="14.6" y="1525" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="17.64" y="1535.5" ></text>
</g>
<g >
<title>dispatcher (348,869,160 samples, 0.02%)</title><rect x="977.6" y="1493" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="980.65" y="1503.5" ></text>
</g>
<g >
<title>[unknown]  (167,359,323,854 samples, 8.94%)</title><rect x="1032.5" y="1573" width="105.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1035.47" y="1583.5" >[unknown] </text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="373" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (872,769,841 samples, 0.05%)</title><rect x="16.2" y="1477" width="0.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="19.25" y="1487.5" ></text>
</g>
<g >
<title>mpage_submit_page (233,609,734 samples, 0.01%)</title><rect x="1187.2" y="1333" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1190.16" y="1343.5" ></text>
</g>
<g >
<title>do_futex (262,729,900 samples, 0.01%)</title><rect x="14.4" y="1429" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="17.44" y="1439.5" ></text>
</g>
<g >
<title>kthread (184,201,329 samples, 0.01%)</title><rect x="16.1" y="1557" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="19.09" y="1567.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_duration_since (1,283,429,968 samples, 0.07%)</title><rect x="1160.5" y="1509" width="0.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1163.49" y="1519.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (1,674,967,147 samples, 0.09%)</title><rect x="12.1" y="1541" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="15.15" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_poll (224,012,062 samples, 0.01%)</title><rect x="15.3" y="1477" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="18.25" y="1487.5" ></text>
</g>
<g >
<title>prepare_task_switch (246,792,659 samples, 0.01%)</title><rect x="14.5" y="1365" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="17.45" y="1375.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (173,469,520 samples, 0.01%)</title><rect x="15.5" y="1301" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="18.47" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (205,933,834 samples, 0.01%)</title><rect x="1189.8" y="1429" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1192.80" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="629" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="639.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (1,628,974,839 samples, 0.09%)</title><rect x="342.4" y="1365" width="1.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="345.44" y="1375.5" ></text>
</g>
<g >
<title>[bash] (213,306,978 samples, 0.01%)</title><rect x="1175.7" y="1413" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1178.65" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (218,404,316 samples, 0.01%)</title><rect x="11.5" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.55" y="1487.5" ></text>
</g>
<g >
<title>do_fault (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1285" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="14.18" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (300,821,148 samples, 0.02%)</title><rect x="12.5" y="485" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.54" y="495.5" ></text>
</g>
<g >
<title>cpuidle_select (653,936,785 samples, 0.03%)</title><rect x="1189.2" y="1493" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1192.19" y="1503.5" ></text>
</g>
<g >
<title>do_idle (3,673,743,315 samples, 0.20%)</title><rect x="1187.5" y="1525" width="2.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1190.47" y="1535.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (296,152,887 samples, 0.02%)</title><rect x="1028.2" y="1381" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1031.17" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (281,391,101 samples, 0.02%)</title><rect x="12.5" y="389" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.54" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="645" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (1,412,842,316 samples, 0.08%)</title><rect x="1031.4" y="1461" width="0.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1034.43" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="549" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="559.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (2,120,194,197 samples, 0.11%)</title><rect x="301.2" y="1349" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="304.20" y="1359.5" ></text>
</g>
<g >
<title>process_one_work (776,317,608 samples, 0.04%)</title><rect x="1186.9" y="1525" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1189.95" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="581" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="591.5" ></text>
</g>
<g >
<title>exc_page_fault (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1365" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="14.18" y="1375.5" ></text>
</g>
<g >
<title>yield_task_fair (3,411,712,533 samples, 0.18%)</title><rect x="345.6" y="1381" width="2.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="348.61" y="1391.5" ></text>
</g>
<g >
<title>__poll (239,119,943 samples, 0.01%)</title><rect x="15.2" y="1525" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="18.25" y="1535.5" ></text>
</g>
<g >
<title>__nanosleep (1,101,382,522 samples, 0.06%)</title><rect x="1031.6" y="1413" width="0.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1034.61" y="1423.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (197,468,093 samples, 0.01%)</title><rect x="48.8" y="1557" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="51.77" y="1567.5" ></text>
</g>
<g >
<title>__libc_start_main (239,843,643 samples, 0.01%)</title><rect x="10.0" y="1557" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.04" y="1567.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::ok (1,923,731,308 samples, 0.10%)</title><rect x="947.0" y="1381" width="1.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="949.99" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1157" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (422,543,009 samples, 0.02%)</title><rect x="12.5" y="757" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.53" y="767.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (2,310,310,897 samples, 0.12%)</title><rect x="180.9" y="1381" width="1.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="183.89" y="1391.5" ></text>
</g>
<g >
<title>__sys_recvfrom (15,240,230,946 samples, 0.81%)</title><rect x="1017.4" y="1365" width="9.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1020.39" y="1375.5" ></text>
</g>
<g >
<title>update_min_vruntime (9,437,253,830 samples, 0.50%)</title><rect x="290.8" y="1317" width="5.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="293.77" y="1327.5" ></text>
</g>
<g >
<title>__napi_poll (460,215,470 samples, 0.02%)</title><rect x="1187.6" y="1365" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1190.57" y="1375.5" ></text>
</g>
<g >
<title>mmap_region (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1317" width="0.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="66.01" y="1327.5" ></text>
</g>
<g >
<title>__skb_recv_udp (296,161,407 samples, 0.02%)</title><rect x="1019.6" y="1317" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1022.56" y="1327.5" ></text>
</g>
<g >
<title>pthread_cond_wait (278,727,078 samples, 0.01%)</title><rect x="14.4" y="1509" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="17.43" y="1519.5" ></text>
</g>
<g >
<title>clock_nanosleep (1,087,079,255 samples, 0.06%)</title><rect x="1031.6" y="1397" width="0.7" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1034.62" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (347,610,852,380 samples, 18.56%)</title><rect x="155.2" y="1429" width="219.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="158.24" y="1439.5" >do_syscall_64</text>
</g>
<g >
<title>cpuidle_enter (234,356,027 samples, 0.01%)</title><rect x="1189.8" y="1445" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1192.79" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock (19,943,924,493 samples, 1.06%)</title><rect x="167.1" y="1381" width="12.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="170.05" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (214,369,180 samples, 0.01%)</title><rect x="10.3" y="1557" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.28" y="1567.5" ></text>
</g>
<g >
<title>__cmd_record (624,715,148 samples, 0.03%)</title><rect x="15.2" y="1557" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="18.25" y="1567.5" ></text>
</g>
<g >
<title>yield_task_fair (1,722,787,182 samples, 0.09%)</title><rect x="350.2" y="1397" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="353.23" y="1407.5" ></text>
</g>
<g >
<title>core::time::Duration::new (2,117,108,306 samples, 0.11%)</title><rect x="867.4" y="1349" width="1.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="870.43" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,484,864,075 samples, 0.08%)</title><rect x="12.2" y="1461" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.18" y="1471.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1,625,617,214 samples, 0.09%)</title><rect x="243.5" y="1317" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="246.49" y="1327.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (197,458,380 samples, 0.01%)</title><rect x="1021.3" y="1285" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1024.27" y="1295.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (115,940,676,770 samples, 6.19%)</title><rect x="868.8" y="1413" width="73.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="871.77" y="1423.5" >std::sys..</text>
</g>
<g >
<title>unmap_vmas (557,720,886 samples, 0.03%)</title><rect x="14.7" y="1349" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="17.70" y="1359.5" ></text>
</g>
<g >
<title>ksys_write (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1349" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1035.32" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1493" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="18.06" y="1503.5" ></text>
</g>
<g >
<title>__fdget (3,840,906,650 samples, 0.21%)</title><rect x="1024.4" y="1333" width="2.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1027.41" y="1343.5" ></text>
</g>
<g >
<title>ksys_write (292,792,780 samples, 0.02%)</title><rect x="15.4" y="1381" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="18.41" y="1391.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (557,720,886 samples, 0.03%)</title><rect x="14.7" y="1301" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="17.70" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1365" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="980.65" y="1375.5" ></text>
</g>
<g >
<title>ovl_write_iter (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1285" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="980.65" y="1295.5" ></text>
</g>
<g >
<title>pick_next_task_fair (109,095,163,355 samples, 5.82%)</title><rect x="228.0" y="1333" width="68.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="230.98" y="1343.5" >pick_ne..</text>
</g>
<g >
<title>dequeue_entity (181,209,417 samples, 0.01%)</title><rect x="1031.9" y="1221" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1034.91" y="1231.5" ></text>
</g>
<g >
<title>ion (296,325,400 samples, 0.02%)</title><rect x="15.4" y="1461" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="18.41" y="1471.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (891,890,023,222 samples, 47.62%)</title><rect x="380.9" y="1461" width="562.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="383.95" y="1471.5" >rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::..</text>
</g>
<g >
<title>__cmd_record (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1557" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="18.06" y="1567.5" ></text>
</g>
<g >
<title>rustposix::interface::errnos::Errno::from_discriminant (394,927,991 samples, 0.02%)</title><rect x="1030.9" y="1429" width="0.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1033.90" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="869" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="879.5" ></text>
</g>
<g >
<title>___slab_alloc (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1301" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="18.06" y="1311.5" ></text>
</g>
<g >
<title>generic_perform_write (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1189" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="980.65" y="1199.5" ></text>
</g>
<g >
<title>schedule (255,975,011,212 samples, 13.67%)</title><rect x="184.3" y="1381" width="161.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.33" y="1391.5" >schedule</text>
</g>
<g >
<title>_raw_spin_unlock (2,071,938,835 samples, 0.11%)</title><rect x="303.6" y="1333" width="1.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="306.62" y="1343.5" ></text>
</g>
<g >
<title>NaClMaskRestore (345,540,426 samples, 0.02%)</title><rect x="62.6" y="1525" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="65.58" y="1535.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (248,225,907 samples, 0.01%)</title><rect x="16.3" y="1461" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="19.30" y="1471.5" ></text>
</g>
<g >
<title>write (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1413" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1035.32" y="1423.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (2,568,002,762 samples, 0.14%)</title><rect x="339.6" y="1365" width="1.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="342.64" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (706,438,498 samples, 0.04%)</title><rect x="13.3" y="53" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="965" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="133" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="143.5" ></text>
</g>
<g >
<title>schedule (538,926,254 samples, 0.03%)</title><rect x="1031.8" y="1285" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1034.85" y="1295.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (2,199,120,042 samples, 0.12%)</title><rect x="55.2" y="1525" width="1.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="58.23" y="1535.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (18,529,155,826 samples, 0.99%)</title><rect x="857.1" y="1413" width="11.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="860.09" y="1423.5" ></text>
</g>
<g >
<title>do_idle (1,241,763,040 samples, 0.07%)</title><rect x="1176.4" y="1525" width="0.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1179.37" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (1,233,990,425 samples, 0.07%)</title><rect x="218.9" y="1349" width="0.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="221.94" y="1359.5" ></text>
</g>
<g >
<title>NaClLog (1,328,049,404 samples, 0.07%)</title><rect x="61.5" y="1541" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="64.50" y="1551.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (191,335,569 samples, 0.01%)</title><rect x="1032.4" y="1189" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1035.35" y="1199.5" ></text>
</g>
<g >
<title>NaClSysPollDecoder (1,451,094,258,372 samples, 77.48%)</title><rect x="63.4" y="1541" width="914.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="66.41" y="1551.5" >NaClSysPollDecoder</text>
</g>
<g >
<title>folio_lruvec_lock_irqsave (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1205" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="66.01" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1573" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.06" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,554,261,296 samples, 0.19%)</title><rect x="147.2" y="1445" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="150.25" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="885" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="895.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (1,634,560,980 samples, 0.09%)</title><rect x="12.2" y="1525" width="1.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="15.17" y="1535.5" ></text>
</g>
<g >
<title>lind_recv (50,855,946,149 samples, 2.72%)</title><rect x="999.3" y="1509" width="32.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1002.32" y="1519.5" >li..</text>
</g>
<g >
<title>__x64_sys_recvfrom (17,165,404,764 samples, 0.92%)</title><rect x="1017.4" y="1381" width="10.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1020.35" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (422,543,009 samples, 0.02%)</title><rect x="12.5" y="741" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.53" y="751.5" ></text>
</g>
<g >
<title>malloc (182,179,039 samples, 0.01%)</title><rect x="12.6" y="245" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="15.59" y="255.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1,412,842,316 samples, 0.08%)</title><rect x="1031.4" y="1477" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1034.43" y="1487.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (460,215,470 samples, 0.02%)</title><rect x="1187.6" y="1317" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1190.57" y="1327.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (189,031,878 samples, 0.01%)</title><rect x="16.3" y="1413" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="19.30" y="1423.5" ></text>
</g>
<g >
<title>sched_clock (26,900,115,563 samples, 1.44%)</title><rect x="321.7" y="1317" width="17.0" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="324.73" y="1327.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (379,457,495 samples, 0.02%)</title><rect x="11.8" y="1349" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="14.81" y="1359.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (778,046,662 samples, 0.04%)</title><rect x="349.2" y="1397" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="352.21" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (888,562,904 samples, 0.05%)</title><rect x="377.5" y="1445" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="380.51" y="1455.5" ></text>
</g>
<g >
<title>do_user_addr_fault (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1349" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="14.18" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="405" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2,171,980,742 samples, 0.12%)</title><rect x="1021.8" y="1301" width="1.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1024.80" y="1311.5" ></text>
</g>
<g >
<title>nf_hook_slow_list (460,082,104 samples, 0.02%)</title><rect x="1187.6" y="1253" width="0.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1190.57" y="1263.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (51,376,668,743 samples, 2.74%)</title><rect x="945.2" y="1461" width="32.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="948.22" y="1471.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="165" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="175.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,049,437,389 samples, 0.06%)</title><rect x="10.5" y="1573" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="13.52" y="1583.5" ></text>
</g>
<g >
<title>clock_gettime (112,289,496,046 samples, 6.00%)</title><rect x="871.1" y="1381" width="70.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="874.07" y="1391.5" >clock_g..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (361,915,695,851 samples, 19.32%)</title><rect x="149.5" y="1445" width="228.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="152.49" y="1455.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>[libc.so.6] (1,217,566,316 samples, 0.07%)</title><rect x="13.8" y="1557" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.84" y="1567.5" ></text>
</g>
<g >
<title>load_elf_binary (649,181,871 samples, 0.03%)</title><rect x="14.6" y="1445" width="0.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="17.64" y="1455.5" ></text>
</g>
<g >
<title>do_futex (686,613,625 samples, 0.04%)</title><rect x="13.9" y="1429" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="16.91" y="1439.5" ></text>
</g>
<g >
<title>kernel_clone (381,249,975 samples, 0.02%)</title><rect x="11.8" y="1381" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="14.81" y="1391.5" ></text>
</g>
<g >
<title>[[vdso]] (2,542,776,570 samples, 0.14%)</title><rect x="943.6" y="1413" width="1.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="946.55" y="1423.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (197,460,283 samples, 0.01%)</title><rect x="1138.6" y="1557" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1141.61" y="1567.5" ></text>
</g>
<g >
<title>start_kernel (332,117,563 samples, 0.02%)</title><rect x="1189.8" y="1541" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1192.78" y="1551.5" ></text>
</g>
<g >
<title>copy_pmd_range (299,201,751 samples, 0.02%)</title><rect x="11.9" y="1285" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.86" y="1295.5" ></text>
</g>
<g >
<title>do_mas_munmap (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1301" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="66.01" y="1311.5" ></text>
</g>
<g >
<title>exit_mmap (649,181,871 samples, 0.03%)</title><rect x="14.6" y="1365" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="17.64" y="1375.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap_or_default (1,278,567,080 samples, 0.07%)</title><rect x="857.1" y="1397" width="0.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="860.09" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,478,938,184 samples, 0.08%)</title><rect x="12.2" y="1429" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.19" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1525" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1535.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::checked_add (839,157,106 samples, 0.04%)</title><rect x="868.2" y="1333" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="871.24" y="1343.5" ></text>
</g>
<g >
<title>do_writepages (501,633,531 samples, 0.03%)</title><rect x="1187.1" y="1413" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1190.12" y="1423.5" ></text>
</g>
<g >
<title>[bash] (378,675,622 samples, 0.02%)</title><rect x="1175.6" y="1509" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1178.63" y="1519.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::ok (2,560,469,613 samples, 0.14%)</title><rect x="857.9" y="1365" width="1.6" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="860.90" y="1375.5" ></text>
</g>
<g >
<title>aa_sk_perm (246,811,409 samples, 0.01%)</title><rect x="1023.4" y="1317" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1026.42" y="1327.5" ></text>
</g>
<g >
<title>wb_writeback (502,813,277 samples, 0.03%)</title><rect x="1187.1" y="1477" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1190.12" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (1,676,657,109 samples, 0.09%)</title><rect x="183.3" y="1365" width="1.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="186.28" y="1375.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_duration_since (740,469,758 samples, 0.04%)</title><rect x="38.1" y="1509" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="41.13" y="1519.5" ></text>
</g>
<g >
<title>cpuacct_charge (2,916,884,769 samples, 0.16%)</title><rect x="286.6" y="1301" width="1.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="289.61" y="1311.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (296,185,323 samples, 0.02%)</title><rect x="1028.0" y="1365" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1030.98" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="181" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (239,843,643 samples, 0.01%)</title><rect x="10.0" y="1493" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.04" y="1503.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (2,218,360,354 samples, 0.12%)</title><rect x="285.2" y="1301" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="288.22" y="1311.5" ></text>
</g>
<g >
<title>update_curr (5,092,075,344 samples, 0.27%)</title><rect x="296.7" y="1333" width="3.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="299.71" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (315,848,722 samples, 0.02%)</title><rect x="12.5" y="581" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.53" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (355,781,941 samples, 0.02%)</title><rect x="11.5" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.46" y="1551.5" ></text>
</g>
<g >
<title>__schedule (1,431,332,765 samples, 0.08%)</title><rect x="166.1" y="1381" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="169.15" y="1391.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (102,589,421,080 samples, 5.48%)</title><rect x="790.6" y="1445" width="64.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="793.62" y="1455.5" >std::sy..</text>
</g>
<g >
<title>wake_up_process (161,484,057 samples, 0.01%)</title><rect x="1176.5" y="1365" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1179.45" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_futex (701,859,811 samples, 0.04%)</title><rect x="13.9" y="1445" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="16.91" y="1455.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::checked_sub_instant (1,283,429,968 samples, 0.07%)</title><rect x="1160.5" y="1493" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1163.49" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (194,258,232 samples, 0.01%)</title><rect x="12.6" y="277" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="15.58" y="287.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (319,475,691 samples, 0.02%)</title><rect x="10.7" y="1461" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="13.71" y="1471.5" ></text>
</g>
<g >
<title>start_secondary (1,000,076,430 samples, 0.05%)</title><rect x="10.5" y="1557" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="13.52" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="437" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="447.5" ></text>
</g>
<g >
<title>NaClSysSelectDecoder (1,412,842,316 samples, 0.08%)</title><rect x="1031.4" y="1541" width="0.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1034.43" y="1551.5" ></text>
</g>
<g >
<title>udp_recvmsg (5,526,872,407 samples, 0.30%)</title><rect x="1019.7" y="1317" width="3.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1022.75" y="1327.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (345,515,781 samples, 0.02%)</title><rect x="1138.0" y="1557" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1141.01" y="1567.5" ></text>
</g>
<g >
<title>setlocale (218,404,316 samples, 0.01%)</title><rect x="11.5" y="1509" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="14.55" y="1519.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (7,889,235,370 samples, 0.42%)</title><rect x="32.6" y="1557" width="5.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="35.60" y="1567.5" ></text>
</g>
<g >
<title>fput (691,085,557 samples, 0.04%)</title><rect x="1027.0" y="1365" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1029.99" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (584,781,927 samples, 0.03%)</title><rect x="12.5" y="1173" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1183.5" ></text>
</g>
<g >
<title>do_syscall_64 (292,792,780 samples, 0.02%)</title><rect x="15.4" y="1413" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="18.41" y="1423.5" ></text>
</g>
<g >
<title>__futex_queue (528,395,818 samples, 0.03%)</title><rect x="13.9" y="1381" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="16.93" y="1391.5" ></text>
</g>
<g >
<title>__libc_start_main (355,781,941 samples, 0.02%)</title><rect x="11.5" y="1557" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="14.46" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (498,832,931 samples, 0.03%)</title><rect x="12.5" y="1045" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1055.5" ></text>
</g>
<g >
<title>main (408,501,754 samples, 0.02%)</title><rect x="1175.6" y="1525" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1178.63" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (706,438,498 samples, 0.04%)</title><rect x="13.3" y="101" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (560,925,993 samples, 0.03%)</title><rect x="12.5" y="1077" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.51" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (450,498,365 samples, 0.02%)</title><rect x="12.5" y="821" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.51" y="831.5" ></text>
</g>
<g >
<title>rest_init (159,788,396 samples, 0.01%)</title><rect x="1177.2" y="1509" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1180.16" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (590,869,471 samples, 0.03%)</title><rect x="12.5" y="1237" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1247.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (740,469,758 samples, 0.04%)</title><rect x="38.1" y="1525" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="41.13" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="565" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1525" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.06" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,616,917 samples, 0.02%)</title><rect x="12.5" y="405" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.54" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (247,696,826 samples, 0.01%)</title><rect x="12.5" y="293" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.55" y="303.5" ></text>
</g>
<g >
<title>std::thread::sleep (1,125,397,624 samples, 0.06%)</title><rect x="1031.6" y="1445" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1034.60" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_write (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1333" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="980.65" y="1343.5" ></text>
</g>
<g >
<title>ksys_write (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1317" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="980.65" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="773" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="783.5" ></text>
</g>
<g >
<title>grep (248,290,185 samples, 0.01%)</title><rect x="10.3" y="1589" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="13.26" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1285" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="1295.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (137,386,773,963 samples, 7.34%)</title><rect x="855.3" y="1445" width="86.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="858.26" y="1455.5" >std::time:..</text>
</g>
<g >
<title>__libc_start_main (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1557" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="14.18" y="1567.5" ></text>
</g>
<g >
<title>close_buffered_fd (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1413" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="14.18" y="1423.5" ></text>
</g>
<g >
<title>all (1,872,904,343,089 samples, 100%)</title><rect x="10.0" y="1605" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" ></text>
</g>
<g >
<title>[[vdso]] (3,272,254,250 samples, 0.17%)</title><rect x="1139.2" y="1557" width="2.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1142.20" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (801,074,850 samples, 0.04%)</title><rect x="10.5" y="1509" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.53" y="1519.5" ></text>
</g>
<g >
<title>__schedule (240,241,635,477 samples, 12.83%)</title><rect x="187.3" y="1365" width="151.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="190.32" y="1375.5" >__schedule</text>
</g>
<g >
<title>__do_sys_clone (381,249,975 samples, 0.02%)</title><rect x="11.8" y="1397" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="14.81" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (246,828,264 samples, 0.01%)</title><rect x="1012.8" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1015.75" y="1423.5" ></text>
</g>
<g >
<title>[sel_ldr] (14,205,276,458 samples, 0.76%)</title><rect x="39.5" y="1557" width="8.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="42.48" y="1567.5" ></text>
</g>
<g >
<title>[bash] (335,701,331 samples, 0.02%)</title><rect x="1175.7" y="1461" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1178.65" y="1471.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1,380,312,719 samples, 0.07%)</title><rect x="63.7" y="1525" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="66.72" y="1535.5" ></text>
</g>
<g >
<title>NaClLog (592,369,474 samples, 0.03%)</title><rect x="980.2" y="1509" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="983.20" y="1519.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1237" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1035.32" y="1247.5" ></text>
</g>
<g >
<title>[libc.so.6] (176,294,648 samples, 0.01%)</title><rect x="10.0" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.04" y="1471.5" ></text>
</g>
<g >
<title>ret_from_fork (845,719,560 samples, 0.05%)</title><rect x="1186.9" y="1573" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1189.93" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="277" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="287.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (386,199,397 samples, 0.02%)</title><rect x="11.8" y="1493" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="14.81" y="1503.5" ></text>
</g>
<g >
<title>[[heap]] (175,997,357 samples, 0.01%)</title><rect x="11.3" y="1573" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.34" y="1583.5" ></text>
</g>
<g >
<title>perf (628,245,684 samples, 0.03%)</title><rect x="15.2" y="1589" width="0.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="18.25" y="1599.5" ></text>
</g>
<g >
<title>nf_hook_slow (460,082,104 samples, 0.02%)</title><rect x="1187.6" y="1237" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1190.57" y="1247.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (173,469,520 samples, 0.01%)</title><rect x="15.5" y="1285" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="18.47" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1253" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1263.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1,875,636,013 samples, 0.10%)</title><rect x="373.1" y="1397" width="1.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="376.07" y="1407.5" ></text>
</g>
<g >
<title>worker (330,982,267 samples, 0.02%)</title><rect x="14.4" y="1541" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="17.40" y="1551.5" ></text>
</g>
<g >
<title>unset_bash_input (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1429" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="14.18" y="1439.5" ></text>
</g>
<g >
<title>[expr] (239,843,643 samples, 0.01%)</title><rect x="10.0" y="1525" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.04" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_enter (907,214,686 samples, 0.05%)</title><rect x="16.2" y="1493" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="19.23" y="1503.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (189,181,113 samples, 0.01%)</title><rect x="10.6" y="1445" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="13.58" y="1455.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (501,633,531 samples, 0.03%)</title><rect x="1187.1" y="1445" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1190.12" y="1455.5" ></text>
</g>
<g >
<title>sock_recvmsg (197,424,797 samples, 0.01%)</title><rect x="1027.9" y="1365" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1030.86" y="1375.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2,020,799,339 samples, 0.11%)</title><rect x="299.9" y="1349" width="1.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="302.92" y="1359.5" ></text>
</g>
<g >
<title>[[vdso]] (107,749,368,035 samples, 5.75%)</title><rect x="872.5" y="1365" width="67.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="875.50" y="1375.5" >[[vdso]]</text>
</g>
<g >
<title>__do_softirq (490,029,767 samples, 0.03%)</title><rect x="1187.5" y="1397" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1190.55" y="1407.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (385,595,189 samples, 0.02%)</title><rect x="15.4" y="1525" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="18.40" y="1535.5" ></text>
</g>
<g >
<title>make_child (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1445" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="14.18" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="469" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="479.5" ></text>
</g>
<g >
<title>ovl_write_iter (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1317" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1035.32" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (262,846,367 samples, 0.01%)</title><rect x="14.4" y="1477" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="17.44" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (381,249,975 samples, 0.02%)</title><rect x="11.8" y="1445" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="14.81" y="1455.5" ></text>
</g>
<g >
<title>NaClSysPoll (1,449,220,335,777 samples, 77.38%)</title><rect x="64.6" y="1525" width="913.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="67.59" y="1535.5" >NaClSysPoll</text>
</g>
<g >
<title>mmput (649,181,871 samples, 0.03%)</title><rect x="14.6" y="1397" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="17.64" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="229" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="613" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="623.5" ></text>
</g>
<g >
<title>futex_wait_queue (246,792,659 samples, 0.01%)</title><rect x="14.5" y="1397" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="17.45" y="1407.5" ></text>
</g>
<g >
<title>kworker/dying (1,201,961,546 samples, 0.06%)</title><rect x="10.4" y="1589" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.43" y="1599.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (2,313,329,674 samples, 0.12%)</title><rect x="347.8" y="1397" width="1.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="350.76" y="1407.5" ></text>
</g>
<g >
<title>perf_mmap__push (314,564,572 samples, 0.02%)</title><rect x="15.4" y="1509" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="18.40" y="1519.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (238,548,246 samples, 0.01%)</title><rect x="1176.4" y="1413" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1179.44" y="1423.5" ></text>
</g>
<g >
<title>__fdget (246,816,368 samples, 0.01%)</title><rect x="1018.4" y="1349" width="0.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1021.41" y="1359.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (248,225,907 samples, 0.01%)</title><rect x="16.3" y="1445" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="19.30" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="213" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="223.5" ></text>
</g>
<g >
<title>[[vdso]] (3,579,109,718 samples, 0.19%)</title><rect x="942.9" y="1429" width="2.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="945.90" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (590,869,471 samples, 0.03%)</title><rect x="12.5" y="1221" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1231.5" ></text>
</g>
<g >
<title>_Fork (381,249,975 samples, 0.02%)</title><rect x="11.8" y="1461" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="14.81" y="1471.5" ></text>
</g>
<g >
<title>execute_command_internal (335,701,331 samples, 0.02%)</title><rect x="1175.7" y="1477" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1178.65" y="1487.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::overflowing_add (839,157,106 samples, 0.04%)</title><rect x="868.2" y="1317" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="871.24" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (339,194,610 samples, 0.02%)</title><rect x="12.5" y="645" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.53" y="655.5" ></text>
</g>
<g >
<title>dequeue_task (210,384,725 samples, 0.01%)</title><rect x="1031.9" y="1253" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1034.89" y="1263.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (677,998,316 samples, 0.04%)</title><rect x="10.6" y="1477" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="13.56" y="1487.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (3,795,152,692 samples, 0.20%)</title><rect x="302.5" y="1349" width="2.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="305.53" y="1359.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,877,998,555 samples, 0.10%)</title><rect x="1187.9" y="1461" width="1.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1190.95" y="1471.5" ></text>
</g>
<g >
<title>do_mmap (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1333" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="66.01" y="1343.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (29,758,981,956 samples, 1.59%)</title><rect x="980.6" y="1509" width="18.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="983.57" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="341" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="351.5" ></text>
</g>
<g >
<title>lind_select (1,412,842,316 samples, 0.08%)</title><rect x="1031.4" y="1509" width="0.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1034.43" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1221" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="1231.5" ></text>
</g>
<g >
<title>cpuidle_enter (706,047,903 samples, 0.04%)</title><rect x="10.6" y="1493" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="13.55" y="1503.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (4,572,770,132 samples, 0.24%)</title><rect x="378.1" y="1445" width="2.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="381.07" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1413" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="1423.5" ></text>
</g>
<g >
<title>NaClSysRecv (82,539,860,387 samples, 4.41%)</title><rect x="979.4" y="1525" width="52.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="982.36" y="1535.5" >NaClS..</text>
</g>
<g >
<title>NaClSysPwrite (348,869,160 samples, 0.02%)</title><rect x="977.6" y="1525" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="980.65" y="1535.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (1,283,429,968 samples, 0.07%)</title><rect x="1160.5" y="1525" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1163.49" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (408,501,754 samples, 0.02%)</title><rect x="1175.6" y="1541" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1178.63" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="837" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="847.5" ></text>
</g>
<g >
<title>clock_gettime (1,827,674,449 samples, 0.10%)</title><rect x="19.2" y="1557" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.17" y="1567.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2,513,251,984 samples, 0.13%)</title><rect x="865.8" y="1349" width="1.6" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="868.85" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (214,369,180 samples, 0.01%)</title><rect x="10.3" y="1541" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.28" y="1551.5" ></text>
</g>
<g >
<title>native_sched_clock (1,580,031,339 samples, 0.08%)</title><rect x="320.7" y="1317" width="1.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="323.74" y="1327.5" ></text>
</g>
<g >
<title>common_nsleep (774,089,031 samples, 0.04%)</title><rect x="1031.7" y="1333" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1034.71" y="1343.5" ></text>
</g>
<g >
<title>menu_select (653,936,785 samples, 0.03%)</title><rect x="1189.2" y="1477" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1192.19" y="1487.5" ></text>
</g>
<g >
<title>swapper (20,225,938,575 samples, 1.08%)</title><rect x="1177.3" y="1589" width="12.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1180.26" y="1599.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1413" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="980.65" y="1423.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1,283,429,968 samples, 0.07%)</title><rect x="1160.5" y="1541" width="0.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1163.49" y="1551.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (386,199,397 samples, 0.02%)</title><rect x="11.8" y="1557" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="14.81" y="1567.5" ></text>
</g>
<g >
<title>get_cpu_device (632,171,320 samples, 0.03%)</title><rect x="1189.2" y="1445" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1192.20" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1365" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (703,481,954 samples, 0.04%)</title><rect x="1186.5" y="1573" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1189.49" y="1583.5" ></text>
</g>
<g >
<title>record__pushfn (300,779,021 samples, 0.02%)</title><rect x="15.4" y="1493" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="18.41" y="1503.5" ></text>
</g>
<g >
<title>__filemap_get_folio (191,335,569 samples, 0.01%)</title><rect x="1032.4" y="1157" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1035.35" y="1167.5" ></text>
</g>
<g >
<title>operator new (182,179,039 samples, 0.01%)</title><rect x="12.6" y="261" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="15.59" y="271.5" ></text>
</g>
<g >
<title>NaClSysRecvDecoder (85,007,609,253 samples, 4.54%)</title><rect x="977.9" y="1541" width="53.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="980.87" y="1551.5" >NaClS..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (632,528,217 samples, 0.03%)</title><rect x="12.5" y="1317" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1327.5" ></text>
</g>
<g >
<title>ret_from_fork (184,201,329 samples, 0.01%)</title><rect x="16.1" y="1573" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="19.09" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1061" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="421" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="431.5" ></text>
</g>
<g >
<title>[bash] (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1461" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="14.18" y="1471.5" ></text>
</g>
<g >
<title>[ls] (355,781,941 samples, 0.02%)</title><rect x="11.5" y="1525" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="14.46" y="1535.5" ></text>
</g>
<g >
<title>__clone (1,217,566,316 samples, 0.07%)</title><rect x="13.8" y="1573" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.84" y="1583.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1381" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="14.18" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,840,245 samples, 0.02%)</title><rect x="12.5" y="901" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="911.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (640,301,911 samples, 0.03%)</title><rect x="953.3" y="1333" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="956.32" y="1343.5" ></text>
</g>
<g >
<title>path_lookupat (697,634,823 samples, 0.04%)</title><rect x="1186.5" y="1477" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1189.49" y="1487.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (11,647,646,223 samples, 0.62%)</title><rect x="304.9" y="1349" width="7.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="307.92" y="1359.5" ></text>
</g>
<g >
<title>inotify_find_inode (697,634,823 samples, 0.04%)</title><rect x="1186.5" y="1525" width="0.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1189.49" y="1535.5" ></text>
</g>
<g >
<title>lru_add_drain (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1253" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="66.01" y="1263.5" ></text>
</g>
<g >
<title>fdarray__poll (239,119,943 samples, 0.01%)</title><rect x="15.2" y="1541" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="18.25" y="1551.5" ></text>
</g>
<g >
<title>do_sys_poll (224,012,062 samples, 0.01%)</title><rect x="15.3" y="1461" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="18.25" y="1471.5" ></text>
</g>
<g >
<title>nf_conntrack_handle_packet (460,082,104 samples, 0.02%)</title><rect x="1187.6" y="1189" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1190.57" y="1199.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (2,020,076,791 samples, 0.11%)</title><rect x="179.6" y="1381" width="1.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="182.62" y="1391.5" ></text>
</g>
<g >
<title>NaClSysMmap (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1525" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.01" y="1535.5" ></text>
</g>
<g >
<title>update_curr (62,034,037,340 samples, 3.31%)</title><rect x="251.7" y="1317" width="39.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="254.68" y="1327.5" >upd..</text>
</g>
<g >
<title>ovl_write_iter (179,215,144 samples, 0.01%)</title><rect x="15.5" y="1349" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="18.47" y="1359.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,408,345,260 samples, 0.08%)</title><rect x="1176.4" y="1573" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1179.37" y="1583.5" ></text>
</g>
<g >
<title>[ls] (355,781,941 samples, 0.02%)</title><rect x="11.5" y="1573" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="14.46" y="1583.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (190,194,053 samples, 0.01%)</title><rect x="16.3" y="1429" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="19.30" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_execve (649,181,871 samples, 0.03%)</title><rect x="14.6" y="1541" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="17.64" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (303,929,751 samples, 0.02%)</title><rect x="12.5" y="533" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.54" y="543.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (345,499,218 samples, 0.02%)</title><rect x="1030.7" y="1413" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1033.68" y="1423.5" ></text>
</g>
<g >
<title>copy_p4d_range (355,804,151 samples, 0.02%)</title><rect x="11.8" y="1301" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="14.82" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1141" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1151.5" ></text>
</g>
<g >
<title>schedule_idle (228,472,924 samples, 0.01%)</title><rect x="1189.6" y="1509" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1192.64" y="1519.5" ></text>
</g>
<g >
<title>begin_new_exec (649,181,871 samples, 0.03%)</title><rect x="14.6" y="1429" width="0.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="17.64" y="1439.5" ></text>
</g>
<g >
<title>NaClLog (197,417,556 samples, 0.01%)</title><rect x="48.9" y="1557" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="51.89" y="1567.5" ></text>
</g>
<g >
<title>recvfrom (32,305,916,269 samples, 1.72%)</title><rect x="1010.5" y="1429" width="20.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1013.54" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,084,465,898 samples, 0.06%)</title><rect x="16.2" y="1509" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="19.22" y="1519.5" ></text>
</g>
<g >
<title>copy_page_range (355,804,151 samples, 0.02%)</title><rect x="11.8" y="1317" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="14.82" y="1327.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (5,032,710,699 samples, 0.27%)</title><rect x="64.9" y="1509" width="3.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="67.87" y="1519.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (1,727,564,314 samples, 0.09%)</title><rect x="12.1" y="1557" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="15.15" y="1567.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Debounce::Debounce (865,447,932 samples, 0.05%)</title><rect x="13.8" y="1525" width="0.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="16.85" y="1535.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (36,345,962,330 samples, 1.94%)</title><rect x="954.7" y="1429" width="22.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="957.69" y="1439.5" >s..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (733,233,218 samples, 0.04%)</title><rect x="13.9" y="1477" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.91" y="1487.5" ></text>
</g>
<g >
<title>clock_gettime (3,391,030,849 samples, 0.18%)</title><rect x="23.6" y="1557" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.56" y="1567.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (197,467,950 samples, 0.01%)</title><rect x="1147.9" y="1557" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1150.88" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (247,696,826 samples, 0.01%)</title><rect x="12.5" y="325" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.55" y="335.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (161,484,057 samples, 0.01%)</title><rect x="1176.5" y="1381" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1179.45" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="453" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (288,219,353 samples, 0.02%)</title><rect x="12.5" y="453" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.54" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::checked_sub_instant (17,250,588,746 samples, 0.92%)</title><rect x="857.9" y="1381" width="10.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="860.90" y="1391.5" ></text>
</g>
<g >
<title>sock_recvmsg (8,833,817,783 samples, 0.47%)</title><rect x="1018.7" y="1349" width="5.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1021.72" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (601,011,482 samples, 0.03%)</title><rect x="12.5" y="1253" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1381" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1035.32" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_enter (938,010,204 samples, 0.05%)</title><rect x="1176.4" y="1493" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1179.39" y="1503.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (332,117,563 samples, 0.02%)</title><rect x="1189.8" y="1557" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1192.78" y="1567.5" ></text>
</g>
<g >
<title>worker_thread (181,756,026 samples, 0.01%)</title><rect x="16.1" y="1541" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="19.09" y="1551.5" ></text>
</g>
<g >
<title>pick_next_task (195,550,000 samples, 0.01%)</title><rect x="1189.6" y="1477" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1192.64" y="1487.5" ></text>
</g>
<g >
<title>sel_ldr (1,838,670,720,390 samples, 98.17%)</title><rect x="17.2" y="1589" width="1158.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="20.15" y="1599.5" >sel_ldr</text>
</g>
<g >
<title>exit_to_user_mode_prepare (2,399,996,631 samples, 0.13%)</title><rect x="1028.7" y="1365" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1031.70" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_clock_nanosleep (806,025,158 samples, 0.04%)</title><rect x="1031.7" y="1349" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1034.70" y="1359.5" ></text>
</g>
<g >
<title>arch_call_rest_init (159,788,396 samples, 0.01%)</title><rect x="1177.2" y="1525" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1180.16" y="1535.5" ></text>
</g>
<g >
<title>igc_poll (460,215,470 samples, 0.02%)</title><rect x="1187.6" y="1349" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1190.57" y="1359.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (386,199,397 samples, 0.02%)</title><rect x="11.8" y="1509" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="14.81" y="1519.5" ></text>
</g>
<g >
<title>runc:[1:CHILD] (2,362,497,462 samples, 0.13%)</title><rect x="15.6" y="1589" width="1.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="18.64" y="1599.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,248,257,311 samples, 0.07%)</title><rect x="1176.4" y="1541" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1179.37" y="1551.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (3,642,293,200 samples, 0.19%)</title><rect x="1159.9" y="1557" width="2.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1162.91" y="1567.5" ></text>
</g>
<g >
<title>__handle_mm_fault (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1317" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="14.18" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1413" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="66.01" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (182,179,039 samples, 0.01%)</title><rect x="12.6" y="229" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.59" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="261" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="271.5" ></text>
</g>
<g >
<title>__libc_start_main (408,501,754 samples, 0.02%)</title><rect x="1175.6" y="1557" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1178.63" y="1567.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (490,029,767 samples, 0.03%)</title><rect x="1187.5" y="1413" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1190.55" y="1423.5" ></text>
</g>
<g >
<title>xas_find (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1237" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="14.18" y="1247.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (253,583,116 samples, 0.01%)</title><rect x="1189.8" y="1461" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.79" y="1471.5" ></text>
</g>
<g >
<title>[anon] (29,611,568,596 samples, 1.58%)</title><rect x="20.4" y="1573" width="18.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="23.36" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1109" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1119.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (3,727,201,750 samples, 0.20%)</title><rect x="942.9" y="1461" width="2.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="945.87" y="1471.5" ></text>
</g>
<g >
<title>do_read_fault (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1269" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.18" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1045" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1397" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1407.5" ></text>
</g>
<g >
<title>execve (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1509" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="18.06" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1125" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1135.5" ></text>
</g>
<g >
<title>net_rx_action (460,215,470 samples, 0.02%)</title><rect x="1187.6" y="1381" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1190.57" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="821" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="831.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (159,788,396 samples, 0.01%)</title><rect x="1177.2" y="1557" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1180.16" y="1567.5" ></text>
</g>
<g >
<title>vfs_iter_write (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1269" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="980.65" y="1279.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (12,958,431,161 samples, 0.69%)</title><rect x="946.5" y="1445" width="8.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="949.52" y="1455.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (590,482,054 samples, 0.03%)</title><rect x="64.0" y="1509" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="67.03" y="1519.5" ></text>
</g>
<g >
<title>__mmap (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1429" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="66.01" y="1439.5" ></text>
</g>
<g >
<title>schedule (246,792,659 samples, 0.01%)</title><rect x="14.5" y="1381" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="17.45" y="1391.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (1,083,045,956 samples, 0.06%)</title><rect x="866.8" y="1317" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="869.75" y="1327.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (295,840,648 samples, 0.02%)</title><rect x="70.7" y="1477" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="73.74" y="1487.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,000,076,430 samples, 0.05%)</title><rect x="10.5" y="1541" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="13.52" y="1551.5" ></text>
</g>
<g >
<title>generic_perform_write (165,629,920 samples, 0.01%)</title><rect x="15.5" y="1253" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="18.47" y="1263.5" ></text>
</g>
<g >
<title>__entry_text_start (38,918,154,023 samples, 2.08%)</title><rect x="122.7" y="1445" width="24.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="125.69" y="1455.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (288,219,353 samples, 0.02%)</title><rect x="12.5" y="437" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.54" y="447.5" ></text>
</g>
<g >
<title>napi_complete_done (460,215,470 samples, 0.02%)</title><rect x="1187.6" y="1333" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1190.57" y="1343.5" ></text>
</g>
<g >
<title>update_rq_clock (40,392,345,265 samples, 2.16%)</title><rect x="313.2" y="1349" width="25.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="316.23" y="1359.5" >u..</text>
</g>
<g >
<title>[[vdso]] (33,875,379,844 samples, 1.81%)</title><rect x="956.2" y="1381" width="21.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="959.18" y="1391.5" >[..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,579,628,133 samples, 0.08%)</title><rect x="353.6" y="1413" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="356.62" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="389" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1493" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1503.5" ></text>
</g>
<g >
<title>do_idle (329,401,625 samples, 0.02%)</title><rect x="1189.8" y="1477" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.78" y="1487.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::mmap_syscall (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1445" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="66.01" y="1455.5" ></text>
</g>
<g >
<title>CompareAndSwap (4,985,478,449 samples, 0.27%)</title><rect x="58.2" y="1525" width="3.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="61.23" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,473,072,343 samples, 0.08%)</title><rect x="12.2" y="1397" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.19" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1541" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.18" y="1551.5" ></text>
</g>
<g >
<title>__writeback_single_inode (501,633,531 samples, 0.03%)</title><rect x="1187.1" y="1429" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1190.12" y="1439.5" ></text>
</g>
<g >
<title>sh (515,109,524 samples, 0.03%)</title><rect x="1175.6" y="1589" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1178.59" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (560,925,993 samples, 0.03%)</title><rect x="12.5" y="1061" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1071.5" ></text>
</g>
<g >
<title>unmap_page_range (557,720,886 samples, 0.03%)</title><rect x="14.7" y="1317" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="17.70" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (590,869,471 samples, 0.03%)</title><rect x="12.5" y="1189" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1199.5" ></text>
</g>
<g >
<title>perf-exec (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1589" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="18.06" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (639,573,331 samples, 0.03%)</title><rect x="12.5" y="1333" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.50" y="1343.5" ></text>
</g>
<g >
<title>schedule (828,095,489 samples, 0.04%)</title><rect x="349.7" y="1397" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="352.70" y="1407.5" ></text>
</g>
<g >
<title>__skb_try_recv_from_queue (246,825,633 samples, 0.01%)</title><rect x="1021.4" y="1285" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1024.40" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1013" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1023.5" ></text>
</g>
<g >
<title>pagecache_get_page (191,335,569 samples, 0.01%)</title><rect x="1032.4" y="1173" width="0.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1035.35" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (214,369,180 samples, 0.01%)</title><rect x="10.3" y="1573" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.28" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="741" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="751.5" ></text>
</g>
<g >
<title>lind (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1589" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="14.18" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1541" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (313,514,260 samples, 0.02%)</title><rect x="12.5" y="565" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.53" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_write (292,792,780 samples, 0.02%)</title><rect x="15.4" y="1397" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="18.41" y="1407.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::sub_timespec (2,363,810,291 samples, 0.13%)</title><rect x="1158.4" y="1557" width="1.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1161.42" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (173,242,154 samples, 0.01%)</title><rect x="11.5" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.55" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (21,645,835,351 samples, 1.16%)</title><rect x="1016.7" y="1397" width="13.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1019.73" y="1407.5" ></text>
</g>
<g >
<title>cpu_startup_entry (159,788,396 samples, 0.01%)</title><rect x="1177.2" y="1493" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1180.16" y="1503.5" ></text>
</g>
<g >
<title>std::time::Instant::now (36,345,962,330 samples, 1.94%)</title><rect x="954.7" y="1445" width="22.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="957.69" y="1455.5" >s..</text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (6,219,378,188 samples, 0.33%)</title><rect x="1164.0" y="1573" width="3.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1166.98" y="1583.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_duration_since (17,250,588,746 samples, 0.92%)</title><rect x="857.9" y="1397" width="10.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="860.90" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (495,313,477 samples, 0.03%)</title><rect x="12.5" y="1013" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.51" y="1023.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (386,199,397 samples, 0.02%)</title><rect x="11.8" y="1541" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="14.81" y="1551.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (460,215,470 samples, 0.02%)</title><rect x="1187.6" y="1269" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1190.57" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1077" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1087.5" ></text>
</g>
<g >
<title>dispatcher (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1477" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="66.01" y="1487.5" ></text>
</g>
<g >
<title>[[vdso]] (96,715,946,770 samples, 5.16%)</title><rect x="793.2" y="1413" width="60.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="796.21" y="1423.5" >[[vdso]]</text>
</g>
<g >
<title>std::time::Instant::now (661,762,453 samples, 0.04%)</title><rect x="38.6" y="1541" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="41.59" y="1551.5" ></text>
</g>
<g >
<title>futex_wait_queue (637,562,742 samples, 0.03%)</title><rect x="13.9" y="1397" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="16.92" y="1407.5" ></text>
</g>
<g >
<title>[bash] (213,450,574 samples, 0.01%)</title><rect x="1175.7" y="1445" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1178.65" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_write (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1365" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1035.32" y="1375.5" ></text>
</g>
<g >
<title>xas_load (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1221" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="14.18" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1317" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (639,573,331 samples, 0.03%)</title><rect x="12.5" y="1365" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.50" y="1375.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (296,197,033 samples, 0.02%)</title><rect x="1021.6" y="1269" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1024.58" y="1279.5" ></text>
</g>
<g >
<title>ext4_release_io_end (242,269,571 samples, 0.01%)</title><rect x="1187.0" y="1493" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1189.96" y="1503.5" ></text>
</g>
<g >
<title>__mmput (649,181,871 samples, 0.03%)</title><rect x="14.6" y="1381" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="17.64" y="1391.5" ></text>
</g>
<g >
<title>__schedule (226,085,216 samples, 0.01%)</title><rect x="1189.6" y="1493" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1192.64" y="1503.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1,585,575,139 samples, 0.08%)</title><rect x="1174.6" y="1573" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1177.59" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="533" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="543.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::check_select_read (1,789,998,690 samples, 0.10%)</title><rect x="1146.5" y="1557" width="1.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1149.50" y="1567.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1429" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1035.32" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1349" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="980.65" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="293" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="303.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (879,148,852 samples, 0.05%)</title><rect x="13.8" y="1541" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="16.84" y="1551.5" ></text>
</g>
<g >
<title>rustposix::interface::errnos::syscall_error (197,450,689 samples, 0.01%)</title><rect x="25.9" y="1557" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="28.95" y="1567.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (501,633,531 samples, 0.03%)</title><rect x="1187.1" y="1461" width="0.3" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1190.12" y="1471.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (4,738,375,560 samples, 0.25%)</title><rect x="354.6" y="1413" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="357.62" y="1423.5" ></text>
</g>
<g >
<title>execute_command_internal (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1477" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="14.18" y="1487.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (5,485,800,945 samples, 0.29%)</title><rect x="281.8" y="1301" width="3.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="284.76" y="1311.5" ></text>
</g>
<g >
<title>Glob::isIgnored (1,491,298,524 samples, 0.08%)</title><rect x="12.2" y="1493" width="0.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="15.18" y="1503.5" ></text>
</g>
<g >
<title>zap_pte_range (488,041,356 samples, 0.03%)</title><rect x="14.7" y="1285" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="17.75" y="1295.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::check_select_read (303,218,689,455 samples, 16.19%)</title><rect x="599.6" y="1445" width="191.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="602.58" y="1455.5" >rustposix::interface::pi..</text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (661,762,453 samples, 0.04%)</title><rect x="38.6" y="1525" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="41.59" y="1535.5" ></text>
</g>
<g >
<title>worker_thread (825,688,088 samples, 0.04%)</title><rect x="1186.9" y="1541" width="0.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1189.95" y="1551.5" ></text>
</g>
<g >
<title>core::time::Duration::new (1,528,856,918 samples, 0.08%)</title><rect x="953.7" y="1365" width="1.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="956.73" y="1375.5" ></text>
</g>
<g >
<title>write (296,325,400 samples, 0.02%)</title><rect x="15.4" y="1445" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="18.41" y="1455.5" ></text>
</g>
<g >
<title>do_iter_write (173,469,520 samples, 0.01%)</title><rect x="15.5" y="1317" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="18.47" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (300,821,148 samples, 0.02%)</title><rect x="12.5" y="501" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.54" y="511.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1253" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1035.32" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="901" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1477" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="18.06" y="1487.5" ></text>
</g>
<g >
<title>process_one_work (178,560,803 samples, 0.01%)</title><rect x="16.1" y="1525" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="19.09" y="1535.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (2,290,810,397 samples, 0.12%)</title><rect x="37.6" y="1557" width="1.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="40.57" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (909,163,719 samples, 0.05%)</title><rect x="1176.4" y="1477" width="0.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1179.41" y="1487.5" ></text>
</g>
<g >
<title>rest_init (332,117,563 samples, 0.02%)</title><rect x="1189.8" y="1509" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1192.78" y="1519.5" ></text>
</g>
<g >
<title>handle_pte_fault (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1301" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="14.18" y="1311.5" ></text>
</g>
<g >
<title>clock_gettime (34,467,743,862 samples, 1.84%)</title><rect x="955.9" y="1397" width="21.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="958.87" y="1407.5" >c..</text>
</g>
<g >
<title>amd_clear_divider (1,201,898,038 samples, 0.06%)</title><rect x="351.3" y="1413" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="354.31" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="805" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,478,938,184 samples, 0.08%)</title><rect x="12.2" y="1445" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.19" y="1455.5" ></text>
</g>
<g >
<title>parse_and_execute (335,701,331 samples, 0.02%)</title><rect x="1175.7" y="1493" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1178.65" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (450,498,365 samples, 0.02%)</title><rect x="12.5" y="805" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="815.5" ></text>
</g>
<g >
<title>generic_perform_write (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1221" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1035.32" y="1231.5" ></text>
</g>
<g >
<title>user_path_at_empty (697,634,823 samples, 0.04%)</title><rect x="1186.5" y="1509" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1189.49" y="1519.5" ></text>
</g>
<g >
<title>do_sched_yield (2,466,032,890 samples, 0.13%)</title><rect x="352.1" y="1413" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="355.07" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (39,562,068,049 samples, 2.11%)</title><rect x="1006.4" y="1445" width="25.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1009.44" y="1455.5" >r..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1509" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1519.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::checked_sub_instant (740,469,758 samples, 0.04%)</title><rect x="38.1" y="1493" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="41.13" y="1503.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (460,215,470 samples, 0.02%)</title><rect x="1187.6" y="1301" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1190.57" y="1311.5" ></text>
</g>
<g >
<title>__tsearch (165,781,966 samples, 0.01%)</title><rect x="11.3" y="1557" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="14.35" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (288,219,353 samples, 0.02%)</title><rect x="12.5" y="421" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.54" y="431.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (3,060,334,842 samples, 0.16%)</title><rect x="283.3" y="1285" width="1.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="286.29" y="1295.5" ></text>
</g>
<g >
<title>unmap_region (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1269" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="66.01" y="1279.5" ></text>
</g>
<g >
<title>core::cmp::PartialOrd::ge (2,513,251,984 samples, 0.13%)</title><rect x="865.8" y="1333" width="1.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="868.85" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="853" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="863.5" ></text>
</g>
<g >
<title>[unknown] (626,441,161 samples, 0.03%)</title><rect x="15.2" y="1573" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.25" y="1583.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (4,440,388,395 samples, 0.24%)</title><rect x="65.2" y="1493" width="2.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="68.21" y="1503.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1205" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1035.32" y="1215.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (905,919,581 samples, 0.05%)</title><rect x="1031.7" y="1381" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1034.68" y="1391.5" ></text>
</g>
<g >
<title>[expr] (239,843,643 samples, 0.01%)</title><rect x="10.0" y="1573" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.04" y="1583.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1365" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="66.01" y="1375.5" ></text>
</g>
<g >
<title>vfs_write (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1333" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1035.32" y="1343.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (246,831,169 samples, 0.01%)</title><rect x="1030.5" y="1397" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1033.53" y="1407.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Write&gt;::write (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1477" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1035.32" y="1487.5" ></text>
</g>
<g >
<title>rustposix::interface::errnos::syscall_error (296,174,558 samples, 0.02%)</title><rect x="1031.1" y="1429" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1034.15" y="1439.5" ></text>
</g>
<g >
<title>[perf-3266519.map] (503,326,068 samples, 0.03%)</title><rect x="11.8" y="1573" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="14.77" y="1583.5" ></text>
</g>
<g >
<title>exec_mmap (649,181,871 samples, 0.03%)</title><rect x="14.6" y="1413" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="17.64" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (337,331,926 samples, 0.02%)</title><rect x="12.5" y="629" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.53" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,692,890 samples, 0.02%)</title><rect x="12.5" y="517" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.54" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (424,107,655 samples, 0.02%)</title><rect x="12.5" y="773" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.52" y="783.5" ></text>
</g>
<g >
<title>pick_next_task (127,155,530,428 samples, 6.79%)</title><rect x="219.8" y="1349" width="80.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="222.81" y="1359.5" >pick_next..</text>
</g>
<g >
<title>exec_binprm (649,181,871 samples, 0.03%)</title><rect x="14.6" y="1477" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="17.64" y="1487.5" ></text>
</g>
<g >
<title>dispatcher (48,931,512,594 samples, 2.61%)</title><rect x="1000.5" y="1493" width="30.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1003.54" y="1503.5" >di..</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1,381,554,611 samples, 0.07%)</title><rect x="952.9" y="1365" width="0.8" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="955.86" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (639,573,331 samples, 0.03%)</title><rect x="12.5" y="1349" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.50" y="1359.5" ></text>
</g>
<g >
<title>do_idle (991,639,649 samples, 0.05%)</title><rect x="10.5" y="1525" width="0.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.53" y="1535.5" ></text>
</g>
<g >
<title>std::time::Instant::now (1,676,896,428 samples, 0.09%)</title><rect x="941.8" y="1445" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="944.81" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (590,869,471 samples, 0.03%)</title><rect x="12.5" y="1205" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.51" y="1215.5" ></text>
</g>
<g >
<title>do_nanosleep (731,254,332 samples, 0.04%)</title><rect x="1031.7" y="1301" width="0.5" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1034.72" y="1311.5" ></text>
</g>
<g >
<title>update_rq_clock (3,393,492,142 samples, 0.18%)</title><rect x="343.5" y="1365" width="2.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="346.47" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="677" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="687.5" ></text>
</g>
<g >
<title>start_secondary (1,314,954,834 samples, 0.07%)</title><rect x="16.2" y="1557" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="19.21" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="917" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="927.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1,769,871,203 samples, 0.09%)</title><rect x="854.1" y="1413" width="1.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="857.14" y="1423.5" ></text>
</g>
<g >
<title>aa_sk_perm (740,438,399 samples, 0.04%)</title><rect x="1023.7" y="1301" width="0.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1026.73" y="1311.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::sub_timespec (14,690,119,133 samples, 0.78%)</title><rect x="859.5" y="1365" width="9.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="862.51" y="1375.5" ></text>
</g>
<g >
<title>std::time::Instant::now (115,940,676,770 samples, 6.19%)</title><rect x="868.8" y="1429" width="73.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="871.77" y="1439.5" >std::tim..</text>
</g>
<g >
<title>__x64_sys_execve (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1461" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="18.06" y="1471.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (4,218,884,230 samples, 0.23%)</title><rect x="1171.9" y="1573" width="2.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1174.93" y="1583.5" ></text>
</g>
<g >
<title>parking_lot::raw_mutex::RawMutex::lock_slow (197,459,921 samples, 0.01%)</title><rect x="1156.2" y="1541" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1159.15" y="1551.5" ></text>
</g>
<g >
<title>write (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1381" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="980.65" y="1391.5" ></text>
</g>
<g >
<title>NaClSysPwriteDecoder (348,869,160 samples, 0.02%)</title><rect x="977.6" y="1541" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="980.65" y="1551.5" ></text>
</g>
<g >
<title>pick_next_entity (11,286,934,507 samples, 0.60%)</title><rect x="244.6" y="1317" width="7.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="247.57" y="1327.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (1,431,296,317 samples, 0.08%)</title><rect x="1161.3" y="1525" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1164.30" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (346,185,899 samples, 0.02%)</title><rect x="12.5" y="677" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.53" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (218,404,316 samples, 0.01%)</title><rect x="11.5" y="1493" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.55" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (732,382,373 samples, 0.04%)</title><rect x="13.9" y="1461" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="16.91" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (239,843,643 samples, 0.01%)</title><rect x="10.0" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.04" y="1551.5" ></text>
</g>
<g >
<title>[[vdso]] (4,782,479,497 samples, 0.26%)</title><rect x="20.5" y="1557" width="3.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="23.48" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="517" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (891,743,938 samples, 0.05%)</title><rect x="1031.7" y="1365" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1034.69" y="1375.5" ></text>
</g>
<g >
<title>clock_gettime (100,220,144,442 samples, 5.35%)</title><rect x="792.1" y="1429" width="63.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="795.11" y="1439.5" >clock_..</text>
</g>
<g >
<title>nf_conntrack_tcp_packet (460,082,104 samples, 0.02%)</title><rect x="1187.6" y="1173" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1190.57" y="1183.5" ></text>
</g>
<g >
<title>__x64_sys_inotify_add_watch (697,634,823 samples, 0.04%)</title><rect x="1186.5" y="1541" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1189.49" y="1551.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (7,256,221,070 samples, 0.39%)</title><rect x="56.8" y="1541" width="4.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="59.80" y="1551.5" ></text>
</g>
<g >
<title>__sched_yield (3,703,824,923 samples, 0.20%)</title><rect x="1141.4" y="1557" width="2.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1144.42" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="357" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1429" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1173" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="981" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="991.5" ></text>
</g>
<g >
<title>nf_conntrack_in (460,082,104 samples, 0.02%)</title><rect x="1187.6" y="1205" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1190.57" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1301" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1311.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (20,849,121,329 samples, 1.11%)</title><rect x="359.9" y="1397" width="13.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="362.93" y="1407.5" ></text>
</g>
<g >
<title>__calc_delta (22,063,574,152 samples, 1.18%)</title><rect x="267.9" y="1301" width="13.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="270.86" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="661" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (703,481,954 samples, 0.04%)</title><rect x="1186.5" y="1557" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1189.49" y="1567.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::sub_timespec (10,294,568,128 samples, 0.55%)</title><rect x="948.2" y="1381" width="6.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="951.20" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (649,181,871 samples, 0.03%)</title><rect x="14.6" y="1573" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="17.64" y="1583.5" ></text>
</g>
<g >
<title>cpu_startup_entry (332,117,563 samples, 0.02%)</title><rect x="1189.8" y="1493" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1192.78" y="1503.5" ></text>
</g>
<g >
<title>__calc_delta (6,809,599,465 samples, 0.36%)</title><rect x="239.2" y="1317" width="4.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="242.20" y="1327.5" ></text>
</g>
<g >
<title>record__write (300,779,021 samples, 0.02%)</title><rect x="15.4" y="1477" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="18.41" y="1487.5" ></text>
</g>
<g >
<title>filemap_map_pages (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1253" width="0.1" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="14.18" y="1263.5" ></text>
</g>
<g >
<title>_start (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1573" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="14.18" y="1583.5" ></text>
</g>
<g >
<title>dispatcher (1,442,065,580,700 samples, 77.00%)</title><rect x="69.0" y="1493" width="908.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="72.03" y="1503.5" >dispatcher</text>
</g>
<g >
<title>cpuidle_enter_state (2,609,988,709 samples, 0.14%)</title><rect x="1187.5" y="1477" width="1.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1190.53" y="1487.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (26,419,992,057 samples, 1.41%)</title><rect x="357.6" y="1413" width="16.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="360.60" y="1423.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (173,469,520 samples, 0.01%)</title><rect x="15.5" y="1269" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="18.47" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (246,924,745 samples, 0.01%)</title><rect x="979.1" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="982.11" y="1519.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (278,636,776 samples, 0.01%)</title><rect x="1176.4" y="1445" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1179.44" y="1455.5" ></text>
</g>
<g >
<title>do_iter_write (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1253" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="980.65" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (276,379,584 samples, 0.01%)</title><rect x="12.9" y="1317" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.94" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1349" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (197,459,487 samples, 0.01%)</title><rect x="1016.6" y="1397" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1019.61" y="1407.5" ></text>
</g>
<g >
<title>nd_jump_root (697,634,823 samples, 0.04%)</title><rect x="1186.5" y="1461" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1189.49" y="1471.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1317" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="18.06" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (306,249,753,956 samples, 16.35%)</title><rect x="158.4" y="1413" width="192.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="161.36" y="1423.5" >__x64_sys_sched_yield</text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,950,236,225 samples, 0.16%)</title><rect x="1028.5" y="1381" width="1.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1031.51" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (560,925,993 samples, 0.03%)</title><rect x="12.5" y="1093" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1103.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1269" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1035.32" y="1279.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::checked_sub_instant (12,218,299,436 samples, 0.65%)</title><rect x="947.0" y="1397" width="7.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="949.99" y="1407.5" ></text>
</g>
<g >
<title>vfs_iter_write (173,469,520 samples, 0.01%)</title><rect x="15.5" y="1333" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="18.47" y="1343.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1221" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="66.01" y="1231.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (447,704,670 samples, 0.02%)</title><rect x="16.5" y="1461" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="19.47" y="1471.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (240,965,075 samples, 0.01%)</title><rect x="1176.4" y="1429" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1179.44" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1445" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1455.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1397" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="980.65" y="1407.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (45,880,161,089 samples, 2.45%)</title><rect x="1002.5" y="1477" width="28.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1005.46" y="1487.5" >ru..</text>
</g>
<g >
<title>cpu_startup_entry (3,676,893,976 samples, 0.20%)</title><rect x="1187.5" y="1541" width="2.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1190.47" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (477,025,550 samples, 0.03%)</title><rect x="12.5" y="933" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (337,331,926 samples, 0.02%)</title><rect x="12.5" y="613" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.53" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (3,397,447,013 samples, 0.18%)</title><rect x="1156.3" y="1557" width="2.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1159.28" y="1567.5" ></text>
</g>
<g >
<title>common_interrupt (514,598,530 samples, 0.03%)</title><rect x="1187.5" y="1445" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1190.53" y="1455.5" ></text>
</g>
<g >
<title>parking_lot::raw_mutex::RawMutex::lock_slow (51,844,618,354 samples, 2.77%)</title><rect x="758.0" y="1429" width="32.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="760.96" y="1439.5" >pa..</text>
</g>
<g >
<title>main (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1525" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="14.18" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,655,789,000 samples, 0.14%)</title><rect x="1187.5" y="1493" width="1.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1190.52" y="1503.5" ></text>
</g>
<g >
<title>lind_pwrite (348,869,160 samples, 0.02%)</title><rect x="977.6" y="1509" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="980.65" y="1519.5" ></text>
</g>
<g >
<title>import_single_range (691,111,496 samples, 0.04%)</title><rect x="1027.4" y="1365" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1030.42" y="1375.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait (805,509,775 samples, 0.04%)</title><rect x="13.9" y="1509" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.87" y="1519.5" ></text>
</g>
<g >
<title>operator new (276,379,584 samples, 0.01%)</title><rect x="12.9" y="1349" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="15.94" y="1359.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (352,365,826 samples, 0.02%)</title><rect x="1187.1" y="1365" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1190.13" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (38,554,749,337 samples, 2.06%)</title><rect x="1137.9" y="1573" width="24.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1140.91" y="1583.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (477,025,550 samples, 0.03%)</title><rect x="12.5" y="965" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="975.5" ></text>
</g>
<g >
<title>search_binary_handler (649,181,871 samples, 0.03%)</title><rect x="14.6" y="1461" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="17.64" y="1471.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1,530,181,222 samples, 0.08%)</title><rect x="1023.2" y="1333" width="1.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1026.23" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1189" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1199.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::overflowing_add (444,284,069 samples, 0.02%)</title><rect x="954.4" y="1333" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="957.41" y="1343.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (6,055,803,448 samples, 0.32%)</title><rect x="1168.1" y="1573" width="3.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1171.11" y="1583.5" ></text>
</g>
<g >
<title>wb_workfn (505,439,473 samples, 0.03%)</title><rect x="1187.1" y="1509" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1190.12" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="245" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,478,938,184 samples, 0.08%)</title><rect x="12.2" y="1413" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.19" y="1423.5" ></text>
</g>
<g >
<title>pick_next_entity (181,834,185 samples, 0.01%)</title><rect x="1189.6" y="1445" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1192.65" y="1455.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1349" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="66.01" y="1359.5" ></text>
</g>
<g >
<title>alloc_empty_file (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1349" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="18.06" y="1359.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,313,700,282 samples, 0.07%)</title><rect x="16.2" y="1541" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="19.21" y="1551.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (35,259,926,284 samples, 1.88%)</title><rect x="955.4" y="1413" width="22.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="958.37" y="1423.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1269" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1279.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (114,217,023,025 samples, 6.10%)</title><rect x="869.9" y="1397" width="71.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="872.85" y="1407.5" >std::sys..</text>
</g>
<g >
<title>__fget_light (3,445,982,422 samples, 0.18%)</title><rect x="1024.6" y="1317" width="2.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1027.57" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (452,753,186 samples, 0.02%)</title><rect x="12.5" y="853" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="863.5" ></text>
</g>
<g >
<title>[unknown] (2,709,236,505 samples, 0.14%)</title><rect x="12.1" y="1573" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.13" y="1583.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::check_select_read (2,021,063,862 samples, 0.11%)</title><rect x="26.1" y="1557" width="1.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="29.07" y="1567.5" ></text>
</g>
<g >
<title>uv_spawn (386,199,397 samples, 0.02%)</title><rect x="11.8" y="1525" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.81" y="1535.5" ></text>
</g>
<g >
<title>path_openat (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1365" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="18.06" y="1375.5" ></text>
</g>
<g >
<title>__skb_recv_udp (2,268,949,103 samples, 0.12%)</title><rect x="1020.3" y="1301" width="1.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1023.34" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (273,885,414 samples, 0.01%)</title><rect x="12.5" y="373" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.55" y="383.5" ></text>
</g>
<g >
<title>NaClSysWrite (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1525" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1035.32" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (601,011,482 samples, 0.03%)</title><rect x="12.5" y="1285" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (1,491,298,524 samples, 0.08%)</title><rect x="12.2" y="1477" width="0.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="15.18" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (381,249,975 samples, 0.02%)</title><rect x="11.8" y="1429" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.81" y="1439.5" ></text>
</g>
<g >
<title>NaClSysMmapIntern (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1509" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="66.01" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="325" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="335.5" ></text>
</g>
<g >
<title>futex_wait (262,729,900 samples, 0.01%)</title><rect x="14.4" y="1413" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="17.44" y="1423.5" ></text>
</g>
<g >
<title>setlocale (239,843,643 samples, 0.01%)</title><rect x="10.0" y="1509" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.04" y="1519.5" ></text>
</g>
<g >
<title>NaClSysSelect (1,412,842,316 samples, 0.08%)</title><rect x="1031.4" y="1525" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1034.43" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (860,416,857 samples, 0.05%)</title><rect x="13.3" y="1557" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.26" y="1567.5" ></text>
</g>
<g >
<title>asm_common_interrupt (514,598,530 samples, 0.03%)</title><rect x="1187.5" y="1461" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1190.53" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="725" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_futex (262,729,900 samples, 0.01%)</title><rect x="14.4" y="1445" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="17.44" y="1455.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (4,009,011,539 samples, 0.21%)</title><rect x="1187.5" y="1573" width="2.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1190.47" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (239,843,643 samples, 0.01%)</title><rect x="10.0" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.04" y="1487.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (649,181,871 samples, 0.03%)</title><rect x="14.6" y="1493" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="17.64" y="1503.5" ></text>
</g>
<g >
<title>filename_lookup (697,634,823 samples, 0.04%)</title><rect x="1186.5" y="1493" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1189.49" y="1503.5" ></text>
</g>
<g >
<title>sleep (2,136,750,499 samples, 0.11%)</title><rect x="1175.9" y="1589" width="1.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1178.91" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="117" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="127.5" ></text>
</g>
<g >
<title>pick_next_task (1,529,198,860 samples, 0.08%)</title><rect x="338.7" y="1365" width="0.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="341.68" y="1375.5" ></text>
</g>
<g >
<title>dequeue_task_fair (204,380,809 samples, 0.01%)</title><rect x="1031.9" y="1237" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1034.90" y="1247.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (460,082,104 samples, 0.02%)</title><rect x="1187.6" y="1221" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1190.57" y="1231.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1237" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="66.01" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (273,885,414 samples, 0.01%)</title><rect x="12.5" y="357" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.55" y="367.5" ></text>
</g>
<g >
<title>record__mmap_read_all (385,595,189 samples, 0.02%)</title><rect x="15.4" y="1541" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="18.40" y="1551.5" ></text>
</g>
<g >
<title>dispatcher (1,412,842,316 samples, 0.08%)</title><rect x="1031.4" y="1493" width="0.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1034.43" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,840,245 samples, 0.02%)</title><rect x="12.5" y="869" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="879.5" ></text>
</g>
<g >
<title>malloc (276,379,584 samples, 0.01%)</title><rect x="12.9" y="1333" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="15.94" y="1343.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (839,175,314 samples, 0.04%)</title><rect x="978.6" y="1509" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="981.58" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (452,753,186 samples, 0.02%)</title><rect x="12.5" y="837" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="847.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (3,041,302,437 samples, 0.16%)</title><rect x="374.2" y="1429" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="377.25" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (649,181,871 samples, 0.03%)</title><rect x="14.6" y="1557" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="17.64" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1029" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="1039.5" ></text>
</g>
<g >
<title>ext4_do_writepages (501,633,531 samples, 0.03%)</title><rect x="1187.1" y="1381" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1190.12" y="1391.5" ></text>
</g>
<g >
<title>ext4_writepages (501,633,531 samples, 0.03%)</title><rect x="1187.1" y="1397" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1190.12" y="1407.5" ></text>
</g>
<g >
<title>check_cfs_rq_runtime (3,403,634,723 samples, 0.18%)</title><rect x="223.1" y="1333" width="2.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="226.13" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1237" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1093" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="1103.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (345,568,316 samples, 0.02%)</title><rect x="1021.6" y="1285" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1024.55" y="1295.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,322,273,180 samples, 0.18%)</title><rect x="1187.5" y="1509" width="2.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1190.52" y="1519.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1429" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="980.65" y="1439.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (493,710,559 samples, 0.03%)</title><rect x="32.3" y="1557" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="35.28" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="501" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="933" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (706,438,498 samples, 0.04%)</title><rect x="13.3" y="85" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (601,011,482 samples, 0.03%)</title><rect x="12.5" y="1301" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1311.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (197,277,830 samples, 0.01%)</title><rect x="61.4" y="1541" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="64.37" y="1551.5" ></text>
</g>
<g >
<title>dup_mmap (379,457,495 samples, 0.02%)</title><rect x="11.8" y="1333" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="14.81" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (477,025,550 samples, 0.03%)</title><rect x="12.5" y="981" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="991.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (246,811,289 samples, 0.01%)</title><rect x="1138.2" y="1557" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1141.23" y="1567.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2,269,364,084 samples, 0.12%)</title><rect x="940.4" y="1365" width="1.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="943.38" y="1375.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (299,852,393 samples, 0.02%)</title><rect x="1187.1" y="1349" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1190.13" y="1359.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (12,958,431,161 samples, 0.69%)</title><rect x="946.5" y="1429" width="8.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="949.52" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="149" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="159.5" ></text>
</g>
<g >
<title>sched_clock_cpu (31,680,772,537 samples, 1.69%)</title><rect x="318.7" y="1333" width="20.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="321.72" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="197" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="207.5" ></text>
</g>
<g >
<title>vfs_iter_write (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1301" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1035.32" y="1311.5" ></text>
</g>
<g >
<title>node (5,331,809,730 samples, 0.28%)</title><rect x="11.7" y="1589" width="3.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="14.70" y="1599.5" ></text>
</g>
<g >
<title>native_sched_clock (25,873,850,246 samples, 1.38%)</title><rect x="322.4" y="1301" width="16.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="325.38" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (181,488,933 samples, 0.01%)</title><rect x="11.5" y="1445" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.55" y="1455.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (1,500,775,854 samples, 0.08%)</title><rect x="12.2" y="1509" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="15.17" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (706,438,498 samples, 0.04%)</title><rect x="13.3" y="37" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="16.35" y="47.5" ></text>
</g>
<g >
<title>execute_command (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1493" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="14.18" y="1503.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (4,285,205,580 samples, 0.23%)</title><rect x="1024.3" y="1349" width="2.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1027.29" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (979,890,947 samples, 0.05%)</title><rect x="12.5" y="1381" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.50" y="1391.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (254,271,654 samples, 0.01%)</title><rect x="1030.2" y="1365" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1033.21" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="997" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1007.5" ></text>
</g>
<g >
<title>NaClSysMmapDecoder (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1541" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="66.01" y="1551.5" ></text>
</g>
<g >
<title>unmap_single_vma (557,720,886 samples, 0.03%)</title><rect x="14.7" y="1333" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="17.70" y="1343.5" ></text>
</g>
<g >
<title>start_secondary (1,248,556,864 samples, 0.07%)</title><rect x="1176.4" y="1557" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1179.37" y="1567.5" ></text>
</g>
<g >
<title>sched_clock (1,675,508,675 samples, 0.09%)</title><rect x="317.7" y="1333" width="1.0" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="320.66" y="1343.5" ></text>
</g>
<g >
<title>__sched_yield (440,275,372,110 samples, 23.51%)</title><rect x="103.6" y="1461" width="277.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="106.56" y="1471.5" >__sched_yield</text>
</g>
<g >
<title>std::sys::unix::thread::Thread::sleep (1,125,397,624 samples, 0.06%)</title><rect x="1031.6" y="1429" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1034.60" y="1439.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1541" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1035.32" y="1551.5" ></text>
</g>
<g >
<title>start_secondary (3,676,893,976 samples, 0.20%)</title><rect x="1187.5" y="1557" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1190.47" y="1567.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (189,181,113 samples, 0.01%)</title><rect x="10.6" y="1461" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="13.58" y="1471.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (687,973,728 samples, 0.04%)</title><rect x="62.4" y="1541" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="65.37" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (232,737,603 samples, 0.01%)</title><rect x="15.2" y="1509" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="18.25" y="1519.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1285" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="66.01" y="1295.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1237" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="980.65" y="1247.5" ></text>
</g>
<g >
<title>uv_cond_wait (278,727,078 samples, 0.01%)</title><rect x="14.4" y="1525" width="0.2" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="17.43" y="1535.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (246,384,345 samples, 0.01%)</title><rect x="1030.4" y="1397" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1033.37" y="1407.5" ></text>
</g>
<g >
<title>vfs_write (288,702,860 samples, 0.02%)</title><rect x="15.4" y="1365" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="18.42" y="1375.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (1,676,896,428 samples, 0.09%)</title><rect x="941.8" y="1429" width="1.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="944.81" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (262,846,367 samples, 0.01%)</title><rect x="14.4" y="1461" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="17.44" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (796,098,249 samples, 0.04%)</title><rect x="13.9" y="1493" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.88" y="1503.5" ></text>
</g>
<g >
<title>arch_call_rest_init (332,117,563 samples, 0.02%)</title><rect x="1189.8" y="1525" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1192.78" y="1535.5" ></text>
</g>
<g >
<title>_start (408,501,754 samples, 0.02%)</title><rect x="1175.6" y="1573" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1178.63" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (292,792,780 samples, 0.02%)</title><rect x="15.4" y="1429" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="18.41" y="1439.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::pwrite_syscall (348,869,160 samples, 0.02%)</title><rect x="977.6" y="1477" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="980.65" y="1487.5" ></text>
</g>
<g >
<title>do_open_execat (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1397" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="18.06" y="1407.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (1,873,960,095 samples, 0.10%)</title><rect x="341.3" y="1365" width="1.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="344.26" y="1375.5" ></text>
</g>
<g >
<title>clock_gettime (3,727,201,750 samples, 0.20%)</title><rect x="942.9" y="1445" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.87" y="1455.5" ></text>
</g>
<g >
<title>update_min_vruntime (3,677,666,060 samples, 0.20%)</title><rect x="288.5" y="1301" width="2.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="291.45" y="1311.5" ></text>
</g>
<g >
<title>__fget_light (246,842,599 samples, 0.01%)</title><rect x="1026.8" y="1333" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1029.83" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (584,781,927 samples, 0.03%)</title><rect x="12.5" y="1125" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1135.5" ></text>
</g>
<g >
<title>pick_next_entity (4,301,775,885 samples, 0.23%)</title><rect x="225.3" y="1333" width="2.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="228.27" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1333" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1343.5" ></text>
</g>
<g >
<title>cfree (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1397" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="14.18" y="1407.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (190,934,121 samples, 0.01%)</title><rect x="1176.4" y="1397" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1179.45" y="1407.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (246,822,982 samples, 0.01%)</title><rect x="1028.4" y="1381" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1031.36" y="1391.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1,540,417,812 samples, 0.08%)</title><rect x="312.3" y="1349" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="315.26" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (313,514,260 samples, 0.02%)</title><rect x="12.5" y="549" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.53" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (1,776,597,805 samples, 0.09%)</title><rect x="154.1" y="1429" width="1.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="157.12" y="1439.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1461" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1035.32" y="1471.5" ></text>
</g>
<g >
<title>core::cmp::PartialOrd::ge (1,381,554,611 samples, 0.07%)</title><rect x="952.9" y="1349" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="955.86" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (230,461,119 samples, 0.01%)</title><rect x="15.3" y="1493" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="18.25" y="1503.5" ></text>
</g>
<g >
<title>HandleStackContext (8,161,704,655 samples, 0.44%)</title><rect x="51.6" y="1541" width="5.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="54.56" y="1551.5" ></text>
</g>
<g >
<title>lind_mmap (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1493" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="66.01" y="1503.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::checked_add (444,284,069 samples, 0.02%)</title><rect x="954.4" y="1349" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="957.41" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_clone (381,249,975 samples, 0.02%)</title><rect x="11.8" y="1413" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="14.81" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1477" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1205" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1215.5" ></text>
</g>
<g >
<title>ls (560,325,567 samples, 0.03%)</title><rect x="11.3" y="1589" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="14.34" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (262,846,367 samples, 0.01%)</title><rect x="14.4" y="1493" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.44" y="1503.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1461" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="66.01" y="1471.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_duration_since (12,218,299,436 samples, 0.65%)</title><rect x="947.0" y="1413" width="7.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="949.99" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock (19,228,221,027 samples, 1.03%)</title><rect x="206.8" y="1349" width="12.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="209.82" y="1359.5" ></text>
</g>
<g >
<title>lind_poll (1,443,644,677,951 samples, 77.08%)</title><rect x="68.1" y="1509" width="909.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="71.10" y="1519.5" >lind_poll</text>
</g>
<g >
<title>cpuidle_idle_call (1,018,254,247 samples, 0.05%)</title><rect x="1176.4" y="1509" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1179.38" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="485" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="949" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="959.5" ></text>
</g>
<g >
<title>bprm_execve (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1429" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="18.06" y="1439.5" ></text>
</g>
<g >
<title>start_kernel (159,788,396 samples, 0.01%)</title><rect x="1177.2" y="1541" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1180.16" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (716,949,967 samples, 0.04%)</title><rect x="13.3" y="709" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="719.5" ></text>
</g>
<g >
<title>std::time::Instant::now (1,431,296,317 samples, 0.08%)</title><rect x="1161.3" y="1541" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1164.30" y="1551.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1541" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="18.06" y="1551.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (158,858,692 samples, 0.01%)</title><rect x="1031.7" y="1285" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1034.75" y="1295.5" ></text>
</g>
<g >
<title>do_sched_yield (299,571,115,271 samples, 16.00%)</title><rect x="159.0" y="1397" width="188.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="162.02" y="1407.5" >do_sched_yield</text>
</g>
<g >
<title>ext4_end_io_rsv_work (257,638,306 samples, 0.01%)</title><rect x="1186.9" y="1509" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1189.95" y="1519.5" ></text>
</g>
<g >
<title>copy_pte_range (196,981,168 samples, 0.01%)</title><rect x="11.9" y="1269" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="14.89" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (251,546,935 samples, 0.01%)</title><rect x="12.5" y="341" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.55" y="351.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1221" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="980.65" y="1231.5" ></text>
</g>
<g >
<title>reader_loop (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1509" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="14.18" y="1519.5" ></text>
</g>
<g >
<title>ext4_finish_bio (238,324,508 samples, 0.01%)</title><rect x="1187.0" y="1477" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1189.96" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (601,011,482 samples, 0.03%)</title><rect x="12.5" y="1269" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.51" y="1279.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common (246,838,248 samples, 0.01%)</title><rect x="1147.7" y="1557" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1150.72" y="1567.5" ></text>
</g>
<g >
<title>__alloc_file (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1333" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="18.06" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1461" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (255,976,306 samples, 0.01%)</title><rect x="1141.3" y="1557" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1144.26" y="1567.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1413" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="18.06" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,707,402,006 samples, 0.14%)</title><rect x="1162.3" y="1573" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1165.27" y="1583.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1,379,519,608 samples, 0.07%)</title><rect x="372.2" y="1381" width="0.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="375.20" y="1391.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (13,133,970,637 samples, 0.70%)</title><rect x="1148.0" y="1557" width="8.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1151.00" y="1567.5" ></text>
</g>
<g >
<title>do_iter_write (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1285" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1035.32" y="1295.5" ></text>
</g>
<g >
<title>do_idle (1,300,454,130 samples, 0.07%)</title><rect x="16.2" y="1525" width="0.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="19.21" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (584,781,927 samples, 0.03%)</title><rect x="12.5" y="1157" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1167.5" ></text>
</g>
<g >
<title>try_to_wake_up (159,067,779 samples, 0.01%)</title><rect x="1176.5" y="1349" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1179.45" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (247,696,826 samples, 0.01%)</title><rect x="12.5" y="309" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.55" y="319.5" ></text>
</g>
<g >
<title>[[vdso]] (75,043,484,400 samples, 4.01%)</title><rect x="893.1" y="1349" width="47.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="896.10" y="1359.5" >[[vd..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1509" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1035.32" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (498,832,931 samples, 0.03%)</title><rect x="12.5" y="1029" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (288,219,353 samples, 0.02%)</title><rect x="12.5" y="469" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.54" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1397" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1035.32" y="1407.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (768,275,691 samples, 0.04%)</title><rect x="1031.7" y="1317" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1034.71" y="1327.5" ></text>
</g>
<g >
<title>__schedule (505,922,952 samples, 0.03%)</title><rect x="1031.9" y="1269" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1034.85" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="309" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="319.5" ></text>
</g>
<g >
<title>wb_do_writeback (505,439,473 samples, 0.03%)</title><rect x="1187.1" y="1493" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1190.12" y="1503.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (428,378,209 samples, 0.02%)</title><rect x="1176.6" y="1461" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1179.63" y="1471.5" ></text>
</g>
<g >
<title>[[vdso]] (3,703,599,160 samples, 0.20%)</title><rect x="18.0" y="1573" width="2.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="21.02" y="1583.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1445" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1035.32" y="1455.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1445" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="18.06" y="1455.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap_or_default (740,131,725 samples, 0.04%)</title><rect x="946.5" y="1413" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="949.52" y="1423.5" ></text>
</g>
<g >
<title>NaClVmmapMakeSorted (296,178,012 samples, 0.02%)</title><rect x="1139.0" y="1557" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1142.01" y="1567.5" ></text>
</g>
<g >
<title>[[vdso]] (23,012,160,637 samples, 1.23%)</title><rect x="963.0" y="1365" width="14.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="966.03" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1381" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="66.01" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (346,185,899 samples, 0.02%)</title><rect x="12.5" y="693" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.53" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (477,025,550 samples, 0.03%)</title><rect x="12.5" y="949" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.51" y="959.5" ></text>
</g>
<g >
<title>dispatcher (493,633,367 samples, 0.03%)</title><rect x="1146.1" y="1557" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1149.13" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (22,780,774,179 samples, 1.22%)</title><rect x="1016.3" y="1413" width="14.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1019.33" y="1423.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1,629,119,485 samples, 0.09%)</title><rect x="978.2" y="1525" width="1.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="981.24" y="1535.5" ></text>
</g>
<g >
<title>do_idle (159,788,396 samples, 0.01%)</title><rect x="1177.2" y="1477" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1180.16" y="1487.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (28,969,194,639 samples, 1.55%)</title><rect x="981.0" y="1493" width="18.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="984.04" y="1503.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (18,529,155,826 samples, 0.99%)</title><rect x="857.1" y="1429" width="11.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="860.09" y="1439.5" ></text>
</g>
<g >
<title>vfs_write (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1301" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="980.65" y="1311.5" ></text>
</g>
<g >
<title>kthread (845,719,560 samples, 0.05%)</title><rect x="1186.9" y="1557" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.93" y="1567.5" ></text>
</g>
<g >
<title>expr (375,549,362 samples, 0.02%)</title><rect x="10.0" y="1589" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="13.02" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="789" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="693" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="703.5" ></text>
</g>
<g >
<title>clock_gettime (3,749,317,272 samples, 0.20%)</title><rect x="1143.8" y="1557" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.76" y="1567.5" ></text>
</g>
<g >
<title>[perf-3292771.map] (14,945,655,905 samples, 0.80%)</title><rect x="39.0" y="1573" width="9.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="42.01" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="757" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="767.5" ></text>
</g>
<g >
<title>[libc.so.6] (169,420,518 samples, 0.01%)</title><rect x="11.5" y="1413" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.55" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (340,451,634 samples, 0.02%)</title><rect x="12.5" y="661" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.53" y="671.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (1,560,798,418,319 samples, 83.34%)</title><rect x="49.1" y="1557" width="983.4" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="52.11" y="1567.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::poll_syscall (7,691,213,774 samples, 0.41%)</title><rect x="27.4" y="1557" width="4.9" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="30.41" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (493,819,673 samples, 0.03%)</title><rect x="12.5" y="997" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1007.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (240,701,434 samples, 0.01%)</title><rect x="1032.3" y="1493" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1035.32" y="1503.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1205" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="980.65" y="1215.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (197,435,082 samples, 0.01%)</title><rect x="1018.6" y="1349" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1021.60" y="1359.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::poll_syscall (1,439,054,815,812 samples, 76.84%)</title><rect x="70.9" y="1477" width="906.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="73.93" y="1487.5" >rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::poll_syscall</text>
</g>
<g >
<title>copy_process (381,249,975 samples, 0.02%)</title><rect x="11.8" y="1365" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="14.81" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (439,913,089 samples, 0.02%)</title><rect x="12.5" y="789" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="799.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::check_select_read (296,589,757 samples, 0.02%)</title><rect x="1167.9" y="1573" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1170.93" y="1583.5" ></text>
</g>
<g >
<title>__entry_text_start (5,033,271,379 samples, 0.27%)</title><rect x="1012.9" y="1413" width="3.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1015.91" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (706,438,498 samples, 0.04%)</title><rect x="13.3" y="69" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.35" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (345,478,231 samples, 0.02%)</title><rect x="1016.1" y="1413" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1019.11" y="1423.5" ></text>
</g>
<g >
<title>__libc_fork (385,248,634 samples, 0.02%)</title><rect x="11.8" y="1477" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="14.81" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="1381" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="1391.5" ></text>
</g>
<g >
<title>[sel_ldr] (1,561,881,440,141 samples, 83.39%)</title><rect x="48.4" y="1573" width="984.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="51.43" y="1583.5" >[sel_ldr]</text>
</g>
<g >
<title>execute_command_internal (213,450,574 samples, 0.01%)</title><rect x="1175.7" y="1429" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1178.65" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (576,099,094 samples, 0.03%)</title><rect x="63.0" y="1397" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="66.01" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (340,317,616 samples, 0.02%)</title><rect x="12.9" y="1365" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="15.90" y="1375.5" ></text>
</g>
<g >
<title>inet_recvmsg (6,267,009,876 samples, 0.33%)</title><rect x="1019.3" y="1333" width="3.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1022.28" y="1343.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common (45,583,972,909 samples, 2.43%)</title><rect x="1002.6" y="1461" width="28.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1005.65" y="1471.5" >ru..</text>
</g>
<g >
<title>futex_wait (682,654,789 samples, 0.04%)</title><rect x="13.9" y="1413" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="16.92" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (348,307,354 samples, 0.02%)</title><rect x="12.5" y="725" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.53" y="735.5" ></text>
</g>
<g >
<title>handle_mm_fault (251,115,531 samples, 0.01%)</title><rect x="11.2" y="1333" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="14.18" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (560,925,993 samples, 0.03%)</title><rect x="12.5" y="1109" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="1119.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (632,171,320 samples, 0.03%)</title><rect x="1189.2" y="1461" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1192.20" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (459,756,710 samples, 0.02%)</title><rect x="12.5" y="917" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.51" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (315,848,722 samples, 0.02%)</title><rect x="12.5" y="597" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="15.53" y="607.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (740,469,758 samples, 0.04%)</title><rect x="38.1" y="1541" width="0.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="41.13" y="1551.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,463,033,424 samples, 0.08%)</title><rect x="16.2" y="1573" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="19.21" y="1583.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (987,265,755 samples, 0.05%)</title><rect x="1023.6" y="1317" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1026.57" y="1327.5" ></text>
</g>
<g >
<title>pick_next_task_fair (193,661,134 samples, 0.01%)</title><rect x="1189.6" y="1461" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1192.64" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (246,817,283 samples, 0.01%)</title><rect x="64.4" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.40" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,840,245 samples, 0.02%)</title><rect x="12.5" y="885" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.51" y="895.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (299,500,987 samples, 0.02%)</title><rect x="977.6" y="1461" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="980.65" y="1471.5" ></text>
</g>
<g >
<title>do_filp_open (302,348,155 samples, 0.02%)</title><rect x="15.1" y="1381" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="18.06" y="1391.5" ></text>
</g>
<g >
<title>dispatcher (242,687,836 samples, 0.01%)</title><rect x="25.7" y="1557" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="28.70" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (218,404,316 samples, 0.01%)</title><rect x="11.5" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.55" y="1471.5" ></text>
</g>
<g >
<title>bprm_execve (649,181,871 samples, 0.03%)</title><rect x="14.6" y="1509" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="17.64" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (584,781,927 samples, 0.03%)</title><rect x="12.5" y="1141" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.51" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (716,949,967 samples, 0.04%)</title><rect x="13.3" y="597" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="16.35" y="607.5" ></text>
</g>
<g >
<title>[[vdso]] (63,415,349,271 samples, 3.39%)</title><rect x="814.2" y="1397" width="39.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="817.19" y="1407.5" >[[v..</text>
</g>
</g>
</svg>
