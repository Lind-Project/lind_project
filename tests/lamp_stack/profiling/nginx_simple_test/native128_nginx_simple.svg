<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1638" onload="init(evt)" viewBox="0 0 1200 1638" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1638.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1621" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1621" > </text>
<g id="frames">
<g >
<title>execute_command_internal (38,792,971 samples, 0.13%)</title><rect x="804.1" y="1349" width="1.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="807.14" y="1359.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (51,284,465 samples, 0.17%)</title><rect x="501.3" y="1461" width="2.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="504.35" y="1471.5" ></text>
</g>
<g >
<title>copyout (51,208,901 samples, 0.17%)</title><rect x="436.8" y="1349" width="2.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="439.84" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_lock (74,950,216 samples, 0.25%)</title><rect x="334.1" y="1237" width="2.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="337.08" y="1247.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (47,737,031 samples, 0.16%)</title><rect x="451.9" y="1445" width="1.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="454.93" y="1455.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1,053,273,272 samples, 3.52%)</title><rect x="695.7" y="1029" width="41.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="698.71" y="1039.5" >ip_..</text>
</g>
<g >
<title>uv__io_poll (8,873,618 samples, 0.03%)</title><rect x="359.6" y="1557" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="362.57" y="1567.5" ></text>
</g>
<g >
<title>update_rq_clock (51,160,595 samples, 0.17%)</title><rect x="1132.5" y="1461" width="2.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1135.51" y="1471.5" ></text>
</g>
<g >
<title>__send (520,268,217 samples, 1.74%)</title><rect x="11.8" y="1541" width="20.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="14.76" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="405" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="415.5" ></text>
</g>
<g >
<title>[grep] (113,974,145 samples, 0.38%)</title><rect x="301.8" y="1493" width="4.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="304.80" y="1503.5" ></text>
</g>
<g >
<title>__libc_start_main (54,691,532 samples, 0.18%)</title><rect x="299.4" y="1541" width="2.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="302.37" y="1551.5" ></text>
</g>
<g >
<title>llist_reverse_order (104,677,828 samples, 0.35%)</title><rect x="1134.5" y="1477" width="4.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1137.53" y="1487.5" ></text>
</g>
<g >
<title>__wake_up_common (138,349,201 samples, 0.46%)</title><rect x="720.8" y="869" width="5.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="723.78" y="879.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (49,679,457 samples, 0.17%)</title><rect x="497.4" y="1445" width="1.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="500.36" y="1455.5" ></text>
</g>
<g >
<title>nf_hook_slow (38,434,253 samples, 0.13%)</title><rect x="749.8" y="1269" width="1.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="752.76" y="1279.5" ></text>
</g>
<g >
<title>execute_command (51,139,434 samples, 0.17%)</title><rect x="804.1" y="1429" width="2.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="807.14" y="1439.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (2,850,171,533 samples, 9.54%)</title><rect x="121.0" y="1381" width="112.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="123.96" y="1391.5" >__skb_datagra..</text>
</g>
<g >
<title>do_user_addr_fault (2,575,393 samples, 0.01%)</title><rect x="301.4" y="1365" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="304.43" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (74,950,216 samples, 0.25%)</title><rect x="334.1" y="1381" width="2.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="337.08" y="1391.5" ></text>
</g>
<g >
<title>fstatat64 (48,453,808 samples, 0.16%)</title><rect x="480.4" y="1557" width="1.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="483.40" y="1567.5" ></text>
</g>
<g >
<title>sched_clock (50,590,131 samples, 0.17%)</title><rect x="1148.7" y="1429" width="1.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1151.65" y="1439.5" ></text>
</g>
<g >
<title>clear_page_erms (1,649,370,497 samples, 5.52%)</title><rect x="559.6" y="1317" width="65.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="562.63" y="1327.5" >clear_p..</text>
</g>
<g >
<title>tcp_sendmsg_locked (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1429" width="10.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="886.97" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (54,691,532 samples, 0.18%)</title><rect x="299.4" y="1477" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="302.37" y="1487.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (51,082,544 samples, 0.17%)</title><rect x="242.7" y="1317" width="2.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="245.73" y="1327.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (1,163,773,670 samples, 3.89%)</title><rect x="240.9" y="1349" width="45.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="243.89" y="1359.5" >__tc..</text>
</g>
<g >
<title>_Fork (2,964,660 samples, 0.01%)</title><rect x="804.1" y="1237" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="807.14" y="1247.5" ></text>
</g>
<g >
<title>__alloc_skb (326,841,113 samples, 1.09%)</title><rect x="771.8" y="1381" width="12.9" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="774.83" y="1391.5" ></text>
</g>
<g >
<title>all (29,888,441,776 samples, 100%)</title><rect x="10.0" y="1589" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" ></text>
</g>
<g >
<title>__schedule (146,710,115 samples, 0.49%)</title><rect x="459.8" y="1397" width="5.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="462.81" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (260,317,267 samples, 0.87%)</title><rect x="314.1" y="1541" width="10.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="317.11" y="1551.5" ></text>
</g>
<g >
<title>__skb_clone (47,031,001 samples, 0.16%)</title><rect x="755.2" y="1317" width="1.9" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="758.23" y="1327.5" ></text>
</g>
<g >
<title>affine_move_task (14,846,610 samples, 0.05%)</title><rect x="359.9" y="1365" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="362.92" y="1375.5" ></text>
</g>
<g >
<title>unmap_page_range (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1301" width="2.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="360.45" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (51,284,421 samples, 0.17%)</title><rect x="894.2" y="1509" width="2.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="897.22" y="1519.5" ></text>
</g>
<g >
<title>zap_pte_range (7,262,587 samples, 0.02%)</title><rect x="359.2" y="1269" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="362.24" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1397" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,987,584 samples, 0.01%)</title><rect x="306.3" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="309.30" y="1439.5" ></text>
</g>
<g >
<title>mas_wr_modify (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1189" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="304.53" y="1199.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (51,699,740 samples, 0.17%)</title><rect x="459.8" y="1381" width="2.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="462.81" y="1391.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (3,272,047 samples, 0.01%)</title><rect x="1183.6" y="1333" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1186.58" y="1343.5" ></text>
</g>
<g >
<title>__kfree_skb (146,267,155 samples, 0.49%)</title><rect x="522.5" y="1317" width="5.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="525.46" y="1327.5" ></text>
</g>
<g >
<title>ktime_get (51,222,422 samples, 0.17%)</title><rect x="1150.6" y="1477" width="2.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1153.65" y="1487.5" ></text>
</g>
<g >
<title>unmap_single_vma (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1317" width="2.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="360.45" y="1327.5" ></text>
</g>
<g >
<title>[grep] (113,974,145 samples, 0.38%)</title><rect x="301.8" y="1461" width="4.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="304.80" y="1471.5" ></text>
</g>
<g >
<title>exit_mmap (6,733,808 samples, 0.02%)</title><rect x="806.2" y="1349" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="809.16" y="1359.5" ></text>
</g>
<g >
<title>update_curr (113,612,388 samples, 0.38%)</title><rect x="97.7" y="1269" width="4.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="100.75" y="1279.5" ></text>
</g>
<g >
<title>irqentry_exit (9,872,905 samples, 0.03%)</title><rect x="805.7" y="1205" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="808.67" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="437" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="447.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr_locked (14,846,610 samples, 0.05%)</title><rect x="359.9" y="1381" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="362.92" y="1391.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (41,143,067 samples, 0.14%)</title><rect x="277.1" y="933" width="1.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="280.13" y="943.5" ></text>
</g>
<g >
<title>__release_sock (176,889,182 samples, 0.59%)</title><rect x="41.8" y="1397" width="6.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="44.75" y="1407.5" ></text>
</g>
<g >
<title>loopback_xmit (51,234,625 samples, 0.17%)</title><rect x="284.8" y="1157" width="2.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="287.81" y="1167.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1029" width="8.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="19.23" y="1039.5" ></text>
</g>
<g >
<title>resolve_normal_ct (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1237" width="10.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="886.97" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (482,422,419 samples, 1.61%)</title><rect x="13.3" y="1509" width="19.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="16.26" y="1519.5" ></text>
</g>
<g >
<title>node::EmitToJSStreamListener::OnStreamRead (5,442,429 samples, 0.02%)</title><rect x="359.7" y="1477" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="362.71" y="1487.5" ></text>
</g>
<g >
<title>kfree_skbmem (51,291,611 samples, 0.17%)</title><rect x="520.1" y="1333" width="2.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="523.13" y="1343.5" ></text>
</g>
<g >
<title>__perf_event_enable (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1269" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="363.65" y="1279.5" ></text>
</g>
<g >
<title>execute_command (38,792,971 samples, 0.13%)</title><rect x="804.1" y="1365" width="1.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="807.14" y="1375.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (146,710,115 samples, 0.49%)</title><rect x="459.8" y="1429" width="5.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="462.81" y="1439.5" ></text>
</g>
<g >
<title>futex_wait_queue (251,292,374 samples, 0.84%)</title><rect x="314.5" y="1381" width="9.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="317.47" y="1391.5" ></text>
</g>
<g >
<title>__memset (23,796,494 samples, 0.08%)</title><rect x="492.4" y="1301" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="495.38" y="1311.5" ></text>
</g>
<g >
<title>strncpy_from_user (51,284,465 samples, 0.17%)</title><rect x="501.3" y="1445" width="2.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="504.35" y="1455.5" ></text>
</g>
<g >
<title>mod_memcg_state (156,418,094 samples, 0.52%)</title><rect x="788.0" y="1333" width="6.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="791.02" y="1343.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (41,844,686 samples, 0.14%)</title><rect x="758.1" y="1333" width="1.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="761.07" y="1343.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2,199,810,073 samples, 7.36%)</title><rect x="664.4" y="1333" width="86.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="667.43" y="1343.5" >ip_queue_x..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (96,285,567 samples, 0.32%)</title><rect x="476.6" y="1493" width="3.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="479.60" y="1503.5" ></text>
</g>
<g >
<title>do_sys_openat2 (380,834,130 samples, 1.27%)</title><rect x="488.3" y="1493" width="15.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="491.34" y="1503.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_skmem (138,213,367 samples, 0.46%)</title><rect x="233.5" y="1365" width="5.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="236.48" y="1375.5" ></text>
</g>
<g >
<title>page_counter_cancel (51,145,215 samples, 0.17%)</title><rect x="236.9" y="1285" width="2.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="239.92" y="1295.5" ></text>
</g>
<g >
<title>set_shellopts (35,828,311 samples, 0.12%)</title><rect x="804.3" y="1189" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="807.26" y="1199.5" ></text>
</g>
<g >
<title>sock_rfree (12,657,385 samples, 0.04%)</title><rect x="48.7" y="1413" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="51.74" y="1423.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (48,272,128 samples, 0.16%)</title><rect x="528.2" y="1301" width="1.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="531.23" y="1311.5" ></text>
</g>
<g >
<title>__tfind (41,415,095 samples, 0.14%)</title><rect x="299.8" y="1381" width="1.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="302.80" y="1391.5" ></text>
</g>
<g >
<title>do_epoll_wait (3,431,189 samples, 0.01%)</title><rect x="359.6" y="1477" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="362.57" y="1487.5" ></text>
</g>
<g >
<title>nf_hook_slow (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1285" width="10.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="886.97" y="1295.5" ></text>
</g>
<g >
<title>rest_init (848,416,759 samples, 2.84%)</title><rect x="1156.5" y="1477" width="33.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1159.50" y="1487.5" >re..</text>
</g>
<g >
<title>exit_to_user_mode_loop (153,452,653 samples, 0.51%)</title><rect x="362.9" y="1477" width="6.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="365.86" y="1487.5" ></text>
</g>
<g >
<title>poll_freewait (189,080,686 samples, 0.63%)</title><rect x="467.6" y="1461" width="7.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="470.62" y="1471.5" ></text>
</g>
<g >
<title>ktime_get (51,291,847 samples, 0.17%)</title><rect x="759.7" y="1349" width="2.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="762.72" y="1359.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1541" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="304.53" y="1551.5" ></text>
</g>
<g >
<title>tcp_ack (50,459,451 samples, 0.17%)</title><rect x="711.3" y="949" width="2.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="714.34" y="959.5" ></text>
</g>
<g >
<title>amd_clear_divider (48,484,710 samples, 0.16%)</title><rect x="802.2" y="1509" width="1.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="805.22" y="1519.5" ></text>
</g>
<g >
<title>find_busiest_group (197,392,919 samples, 0.66%)</title><rect x="902.4" y="1301" width="7.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="905.40" y="1311.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1,155,340,449 samples, 3.87%)</title><rect x="693.7" y="1077" width="45.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="696.69" y="1087.5" >__ne..</text>
</g>
<g >
<title>tcp_data_queue (125,715,140 samples, 0.42%)</title><rect x="43.8" y="1349" width="4.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="46.77" y="1359.5" ></text>
</g>
<g >
<title>tcp_current_mss (51,085,039 samples, 0.17%)</title><rect x="24.6" y="1397" width="2.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="27.62" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="341" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="351.5" ></text>
</g>
<g >
<title>__libc_fork (2,964,660 samples, 0.01%)</title><rect x="804.1" y="1253" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="807.14" y="1263.5" ></text>
</g>
<g >
<title>__switch_to (46,998,987 samples, 0.16%)</title><rect x="1142.7" y="1461" width="1.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1145.70" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (3,431,189 samples, 0.01%)</title><rect x="359.6" y="1493" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="362.57" y="1503.5" ></text>
</g>
<g >
<title>pick_next_task_fair (20,904,711 samples, 0.07%)</title><rect x="1147.8" y="1445" width="0.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1150.83" y="1455.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (161,390,233 samples, 0.54%)</title><rect x="18.2" y="917" width="6.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="21.25" y="927.5" ></text>
</g>
<g >
<title>__get_user_8 (44,992,910 samples, 0.15%)</title><rect x="478.6" y="1429" width="1.8" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="481.62" y="1439.5" ></text>
</g>
<g >
<title>filemap_get_pages (148,617,561 samples, 0.50%)</title><rect x="438.9" y="1365" width="5.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="441.86" y="1375.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (153,452,653 samples, 0.51%)</title><rect x="362.9" y="1493" width="6.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="365.86" y="1503.5" ></text>
</g>
<g >
<title>[bash] (12,346,463 samples, 0.04%)</title><rect x="805.7" y="1333" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="808.67" y="1343.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1365" width="10.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="886.97" y="1375.5" ></text>
</g>
<g >
<title>__ip_finish_output (846,854,575 samples, 2.83%)</title><rect x="253.4" y="1237" width="33.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="256.40" y="1247.5" >__..</text>
</g>
<g >
<title>Builtins_LoadGlobalIC (3,645,035 samples, 0.01%)</title><rect x="337.1" y="1541" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="340.13" y="1551.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (51,234,625 samples, 0.17%)</title><rect x="284.8" y="1173" width="2.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="287.81" y="1183.5" ></text>
</g>
<g >
<title>ip_output (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1301" width="8.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="19.23" y="1311.5" ></text>
</g>
<g >
<title>server (11,228,397,538 samples, 37.57%)</title><rect x="360.8" y="1573" width="443.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="363.83" y="1583.5" >server</text>
</g>
<g >
<title>sched_ttwu_pending (62,888,808 samples, 0.21%)</title><rect x="1183.7" y="1397" width="2.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1186.72" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="661" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="671.5" ></text>
</g>
<g >
<title>[expr] (54,691,532 samples, 0.18%)</title><rect x="299.4" y="1509" width="2.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="302.37" y="1519.5" ></text>
</g>
<g >
<title>dequeue_task (209,165,766 samples, 0.70%)</title><rect x="95.9" y="1317" width="8.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="98.94" y="1327.5" ></text>
</g>
<g >
<title>call_rcu (102,551,007 samples, 0.34%)</title><rect x="364.9" y="1413" width="4.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="367.87" y="1423.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (2,675,640,280 samples, 8.95%)</title><rect x="662.1" y="1381" width="105.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="665.10" y="1391.5" >__tcp_push_p..</text>
</g>
<g >
<title>__alloc_skb (143,530,581 samples, 0.48%)</title><rect x="26.6" y="1397" width="5.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="29.64" y="1407.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (48,620,286 samples, 0.16%)</title><rect x="503.4" y="1429" width="1.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="506.37" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (95,169,263 samples, 0.32%)</title><rect x="65.4" y="1365" width="3.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="68.38" y="1375.5" ></text>
</g>
<g >
<title>ip_rcv (444,825,091 samples, 1.49%)</title><rect x="261.2" y="1045" width="17.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="264.19" y="1055.5" ></text>
</g>
<g >
<title>exc_page_fault (2,575,393 samples, 0.01%)</title><rect x="301.4" y="1381" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="304.43" y="1391.5" ></text>
</g>
<g >
<title>__do_sys_clone (74,950,216 samples, 0.25%)</title><rect x="334.1" y="1349" width="2.9" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="337.08" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="165" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="175.5" ></text>
</g>
<g >
<title>kfree_skbmem (51,136,566 samples, 0.17%)</title><rect x="267.5" y="917" width="2.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="270.51" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1221" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="1231.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (52,350,500 samples, 0.18%)</title><rect x="767.7" y="1397" width="2.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="770.74" y="1407.5" ></text>
</g>
<g >
<title>[bash] (35,828,311 samples, 0.12%)</title><rect x="804.3" y="1285" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="807.26" y="1295.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (148,247,482 samples, 0.50%)</title><rect x="729.4" y="901" width="5.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="732.43" y="911.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_skmem (34,329,028 samples, 0.11%)</title><rect x="275.8" y="869" width="1.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="278.76" y="879.5" ></text>
</g>
<g >
<title>tcp_push (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1413" width="10.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="886.97" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1333" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1343.5" ></text>
</g>
<g >
<title>__fput (102,551,007 samples, 0.34%)</title><rect x="364.9" y="1429" width="4.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="367.87" y="1439.5" ></text>
</g>
<g >
<title>inet_ehashfn (50,952,650 samples, 0.17%)</title><rect x="261.2" y="949" width="2.0" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="264.19" y="959.5" ></text>
</g>
<g >
<title>recv (6,764,682,243 samples, 22.63%)</title><rect x="32.3" y="1541" width="267.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="35.30" y="1551.5" >recv</text>
</g>
<g >
<title>cgroup_rstat_updated (39,050,656 samples, 0.13%)</title><rect x="233.5" y="1317" width="1.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="236.48" y="1327.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1,155,340,449 samples, 3.87%)</title><rect x="693.7" y="1093" width="45.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="696.69" y="1103.5" >__ne..</text>
</g>
<g >
<title>handle_mm_fault (2,575,393 samples, 0.01%)</title><rect x="301.4" y="1349" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="304.43" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (51,061,356 samples, 0.17%)</title><rect x="280.8" y="1077" width="2.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="283.77" y="1087.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1333" width="8.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="19.23" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_execve (6,733,808 samples, 0.02%)</title><rect x="806.2" y="1525" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="809.16" y="1535.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (50,226,165 samples, 0.17%)</title><rect x="1154.5" y="1509" width="2.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1157.52" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="709" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_pselect6 (478,811,252 samples, 1.60%)</title><rect x="457.7" y="1509" width="18.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="460.70" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (575,096,819 samples, 1.92%)</title><rect x="457.7" y="1525" width="22.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="460.70" y="1535.5" >d..</text>
</g>
<g >
<title>__netif_receive_skb (496,003,663 samples, 1.66%)</title><rect x="261.2" y="1077" width="19.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="264.19" y="1087.5" ></text>
</g>
<g >
<title>tcp_write_xmit (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1381" width="8.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="19.23" y="1391.5" ></text>
</g>
<g >
<title>__close (204,737,923 samples, 0.69%)</title><rect x="360.8" y="1557" width="8.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="363.83" y="1567.5" ></text>
</g>
<g >
<title>kfree_skbmem (150,307,513 samples, 0.50%)</title><rect x="739.5" y="1109" width="5.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="742.45" y="1119.5" ></text>
</g>
<g >
<title>[libc.so.6] (41,415,095 samples, 0.14%)</title><rect x="299.8" y="1397" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="302.80" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (482,422,419 samples, 1.61%)</title><rect x="13.3" y="1493" width="19.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="16.26" y="1503.5" ></text>
</g>
<g >
<title>ksys_write (7,420,860,810 samples, 24.83%)</title><rect x="509.2" y="1493" width="293.0" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="512.24" y="1503.5" >ksys_write</text>
</g>
<g >
<title>_raw_spin_lock_bh (101,382,608 samples, 0.34%)</title><rect x="512.2" y="1413" width="4.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="515.21" y="1423.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (95,169,263 samples, 0.32%)</title><rect x="65.4" y="1349" width="3.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="68.38" y="1359.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (649,510,308 samples, 2.17%)</title><rect x="259.2" y="1157" width="25.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="262.17" y="1167.5" >d..</text>
</g>
<g >
<title>[libc.so.6] (251,292,374 samples, 0.84%)</title><rect x="314.5" y="1477" width="9.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="317.47" y="1487.5" ></text>
</g>
<g >
<title>try_to_wake_up (96,940,442 samples, 0.32%)</title><rect x="729.4" y="837" width="3.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="732.43" y="847.5" ></text>
</g>
<g >
<title>default_wake_function (96,940,442 samples, 0.32%)</title><rect x="729.4" y="853" width="3.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="732.43" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1013" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1023.5" ></text>
</g>
<g >
<title>ip_finish_output2 (846,854,575 samples, 2.83%)</title><rect x="253.4" y="1221" width="33.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="256.40" y="1231.5" >ip..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="933" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="943.5" ></text>
</g>
<g >
<title>do_idle (6,496,886,361 samples, 21.74%)</title><rect x="896.2" y="1509" width="256.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="899.25" y="1519.5" >do_idle</text>
</g>
<g >
<title>__check_object_size.part.0 (51,284,465 samples, 0.17%)</title><rect x="501.3" y="1413" width="2.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="504.35" y="1423.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1,783,724,786 samples, 5.97%)</title><rect x="675.7" y="1189" width="70.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="678.66" y="1199.5" >__local..</text>
</g>
<g >
<title>_raw_spin_trylock (90,366,899 samples, 0.30%)</title><rect x="524.7" y="1237" width="3.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="527.66" y="1247.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (125,715,140 samples, 0.42%)</title><rect x="43.8" y="1333" width="4.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="46.77" y="1343.5" ></text>
</g>
<g >
<title>__check_object_size (51,284,465 samples, 0.17%)</title><rect x="501.3" y="1429" width="2.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="504.35" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="693" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="703.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (96,741,783 samples, 0.32%)</title><rect x="73.2" y="1349" width="3.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="76.23" y="1359.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (51,250,292 samples, 0.17%)</title><rect x="900.3" y="1493" width="2.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="903.27" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (204,737,923 samples, 0.69%)</title><rect x="360.8" y="1525" width="8.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="363.83" y="1535.5" ></text>
</g>
<g >
<title>perf_ioctl (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1413" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="363.65" y="1423.5" ></text>
</g>
<g >
<title>__sys_recvfrom (6,344,389,208 samples, 21.23%)</title><rect x="36.4" y="1477" width="250.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="39.40" y="1487.5" >__sys_recvfrom</text>
</g>
<g >
<title>execute_command (2,964,660 samples, 0.01%)</title><rect x="804.1" y="1333" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="807.14" y="1343.5" ></text>
</g>
<g >
<title>__do_softirq (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1173" width="8.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="19.23" y="1183.5" ></text>
</g>
<g >
<title>event_function_call (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1349" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="363.65" y="1359.5" ></text>
</g>
<g >
<title>__sk_mem_raise_allocated (391,876,657 samples, 1.31%)</title><rect x="786.7" y="1365" width="15.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="789.74" y="1375.5" ></text>
</g>
<g >
<title>llist_add_batch (46,201,906 samples, 0.15%)</title><rect x="731.4" y="805" width="1.9" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="734.43" y="815.5" ></text>
</g>
<g >
<title>tcp_data_queue (326,904,091 samples, 1.09%)</title><rect x="713.3" y="949" width="12.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="716.33" y="959.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (54,088,435 samples, 0.18%)</title><rect x="32.3" y="1525" width="2.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="35.30" y="1535.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (377,830,391 samples, 1.26%)</title><rect x="771.8" y="1397" width="14.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="774.83" y="1407.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1,616,952,349 samples, 5.41%)</title><rect x="380.9" y="1413" width="63.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="383.89" y="1423.5" >ext4_fi..</text>
</g>
<g >
<title>try_charge_memcg (152,255,837 samples, 0.51%)</title><rect x="794.2" y="1333" width="6.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="797.20" y="1343.5" ></text>
</g>
<g >
<title>__ip_local_out (51,528,255 samples, 0.17%)</title><rect x="247.3" y="1269" width="2.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="250.33" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,431,189 samples, 0.01%)</title><rect x="359.6" y="1509" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="362.57" y="1519.5" ></text>
</g>
<g >
<title>ip_rcv (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1077" width="8.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="19.23" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,150,559,217 samples, 7.20%)</title><rect x="368.9" y="1525" width="84.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="371.91" y="1535.5" >do_syscal..</text>
</g>
<g >
<title>x86_64_start_reservations (848,416,759 samples, 2.84%)</title><rect x="1156.5" y="1525" width="33.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1159.50" y="1535.5" >x8..</text>
</g>
<g >
<title>inet_ehashfn (51,302,070 samples, 0.17%)</title><rect x="263.2" y="965" width="2.0" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="266.20" y="975.5" ></text>
</g>
<g >
<title>command_substitute (12,346,463 samples, 0.04%)</title><rect x="805.7" y="1269" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="808.67" y="1279.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (48,453,808 samples, 0.16%)</title><rect x="480.4" y="1493" width="1.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="483.40" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (51,054,788 samples, 0.17%)</title><rect x="30.3" y="1365" width="2.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="33.29" y="1375.5" ></text>
</g>
<g >
<title>swapper (9,711,872,521 samples, 32.49%)</title><rect x="806.6" y="1573" width="383.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="809.57" y="1583.5" >swapper</text>
</g>
<g >
<title>__fdget (2,677,342 samples, 0.01%)</title><rect x="459.7" y="1445" width="0.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="462.70" y="1455.5" ></text>
</g>
<g >
<title>unmap_vmas (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1333" width="2.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="360.45" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,431,189 samples, 0.01%)</title><rect x="359.6" y="1525" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="362.57" y="1535.5" ></text>
</g>
<g >
<title>cache_from_obj (51,291,611 samples, 0.17%)</title><rect x="520.1" y="1317" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="523.13" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (48,620,286 samples, 0.16%)</title><rect x="503.4" y="1509" width="1.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="506.37" y="1519.5" ></text>
</g>
<g >
<title>grep (113,974,145 samples, 0.38%)</title><rect x="301.8" y="1573" width="4.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="304.80" y="1583.5" ></text>
</g>
<g >
<title>sock_recvmsg (6,307,667,205 samples, 21.10%)</title><rect x="37.8" y="1461" width="249.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="40.80" y="1471.5" >sock_recvmsg</text>
</g>
<g >
<title>search_binary_handler (6,733,808 samples, 0.02%)</title><rect x="806.2" y="1445" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="809.16" y="1455.5" ></text>
</g>
<g >
<title>__mmput (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1365" width="2.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="360.45" y="1375.5" ></text>
</g>
<g >
<title>do_anonymous_page (2,575,393 samples, 0.01%)</title><rect x="301.4" y="1301" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="304.43" y="1311.5" ></text>
</g>
<g >
<title>do_select (251,504,068 samples, 0.84%)</title><rect x="457.7" y="1461" width="9.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="460.70" y="1471.5" ></text>
</g>
<g >
<title>ctx_resched (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1253" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="363.65" y="1263.5" ></text>
</g>
<g >
<title>__netif_receive_skb (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1109" width="8.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="19.23" y="1119.5" ></text>
</g>
<g >
<title>read (7,373,605 samples, 0.02%)</title><rect x="314.2" y="1477" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="317.17" y="1487.5" ></text>
</g>
<g >
<title>sk_reset_timer (52,503,840 samples, 0.18%)</title><rect x="530.1" y="1317" width="2.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="533.14" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1381" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="917" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (251,292,374 samples, 0.84%)</title><rect x="314.5" y="1445" width="9.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="317.47" y="1455.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (182,036,516 samples, 0.61%)</title><rect x="124.5" y="1333" width="7.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="127.48" y="1343.5" ></text>
</g>
<g >
<title>affinity__set (18,285,859 samples, 0.06%)</title><rect x="359.9" y="1509" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="362.92" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (1,534,678,250 samples, 5.13%)</title><rect x="685.5" y="1141" width="60.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="688.50" y="1151.5" >net_rx..</text>
</g>
<g >
<title>security_file_permission (98,585,777 samples, 0.33%)</title><rect x="449.9" y="1461" width="3.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="452.93" y="1471.5" ></text>
</g>
<g >
<title>__mod_timer (51,239,670 samples, 0.17%)</title><rect x="761.7" y="1285" width="2.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="764.75" y="1295.5" ></text>
</g>
<g >
<title>__schedule (95,661,929 samples, 0.32%)</title><rect x="1186.2" y="1413" width="3.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1189.21" y="1423.5" ></text>
</g>
<g >
<title>seq_read_iter (7,373,605 samples, 0.02%)</title><rect x="314.2" y="1349" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="317.17" y="1359.5" ></text>
</g>
<g >
<title>cubictcp_cong_avoid (50,459,451 samples, 0.17%)</title><rect x="711.3" y="933" width="2.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="714.34" y="943.5" ></text>
</g>
<g >
<title>tick_nohz_get_next_hrtimer (51,256,241 samples, 0.17%)</title><rect x="1091.6" y="1461" width="2.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1094.65" y="1471.5" ></text>
</g>
<g >
<title>skb_release_data (7,785,482 samples, 0.03%)</title><rect x="522.2" y="1333" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="525.15" y="1343.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (51,285,643 samples, 0.17%)</title><rect x="455.7" y="1541" width="2.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="458.67" y="1551.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (62,888,808 samples, 0.21%)</title><rect x="1183.7" y="1429" width="2.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1186.72" y="1439.5" ></text>
</g>
<g >
<title>process_backlog (547,065,019 samples, 1.83%)</title><rect x="261.2" y="1093" width="21.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="264.19" y="1103.5" >p..</text>
</g>
<g >
<title>cpuidle_enter (685,911,899 samples, 2.29%)</title><rect x="1156.5" y="1397" width="27.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1159.50" y="1407.5" >c..</text>
</g>
<g >
<title>[bash] (35,828,311 samples, 0.12%)</title><rect x="804.3" y="1221" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="807.26" y="1231.5" ></text>
</g>
<g >
<title>____fput (102,551,007 samples, 0.34%)</title><rect x="364.9" y="1445" width="4.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="367.87" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1493" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="304.53" y="1503.5" ></text>
</g>
<g >
<title>strcmp@plt (2,964,660 samples, 0.01%)</title><rect x="806.5" y="1557" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="809.46" y="1567.5" ></text>
</g>
<g >
<title>proc_reg_read (7,373,605 samples, 0.02%)</title><rect x="314.2" y="1381" width="0.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="317.17" y="1391.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (804,744,719 samples, 2.69%)</title><rect x="1100.7" y="1461" width="31.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1103.74" y="1471.5" >sc..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,373,605 samples, 0.02%)</title><rect x="314.2" y="1461" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="317.17" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1365" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1375.5" ></text>
</g>
<g >
<title>established_get_next (6,928,369 samples, 0.02%)</title><rect x="314.2" y="1301" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="317.19" y="1311.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::ReadStart (5,442,429 samples, 0.02%)</title><rect x="359.7" y="1509" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="362.71" y="1519.5" ></text>
</g>
<g >
<title>neigh_hh_output (796,168,751 samples, 2.66%)</title><rect x="255.4" y="1205" width="31.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="258.40" y="1215.5" >ne..</text>
</g>
<g >
<title>remote_function (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1301" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="363.65" y="1311.5" ></text>
</g>
<g >
<title>sched_setaffinity (18,285,859 samples, 0.06%)</title><rect x="359.9" y="1429" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="362.92" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="357" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="367.5" ></text>
</g>
<g >
<title>tcp_get_idx (6,928,369 samples, 0.02%)</title><rect x="314.2" y="1317" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="317.19" y="1327.5" ></text>
</g>
<g >
<title>tcp_rcv_established (399,473,180 samples, 1.34%)</title><rect x="520.1" y="1365" width="15.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="523.13" y="1375.5" ></text>
</g>
<g >
<title>[bash] (35,828,311 samples, 0.12%)</title><rect x="804.3" y="1301" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="807.26" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="677" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="687.5" ></text>
</g>
<g >
<title>ip_local_out (1,000,549,542 samples, 3.35%)</title><rect x="247.3" y="1285" width="39.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="250.33" y="1295.5" >ip_..</text>
</g>
<g >
<title>do_pselect.constprop.0 (478,811,252 samples, 1.60%)</title><rect x="457.7" y="1493" width="18.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="460.70" y="1503.5" ></text>
</g>
<g >
<title>prepare_task_switch (25,191,324 samples, 0.08%)</title><rect x="108.5" y="1317" width="1.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="111.49" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1381" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="304.53" y="1391.5" ></text>
</g>
<g >
<title>ksys_write (308,449,624 samples, 1.03%)</title><rect x="881.9" y="1509" width="12.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="884.91" y="1519.5" ></text>
</g>
<g >
<title>propagate_protected_usage (51,173,257 samples, 0.17%)</title><rect x="46.7" y="1285" width="2.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="49.72" y="1295.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (138,349,201 samples, 0.46%)</title><rect x="720.8" y="901" width="5.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="723.78" y="911.5" ></text>
</g>
<g >
<title>ovl_override_creds (50,724,889 samples, 0.17%)</title><rect x="372.7" y="1461" width="2.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="375.68" y="1471.5" ></text>
</g>
<g >
<title>mod_memcg_state (50,989,278 samples, 0.17%)</title><rect x="784.7" y="1349" width="2.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="787.73" y="1359.5" ></text>
</g>
<g >
<title>__slab_free (6,131,814 samples, 0.02%)</title><rect x="806.2" y="1285" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="809.16" y="1295.5" ></text>
</g>
<g >
<title>ovl_read_iter (1,905,343,289 samples, 6.37%)</title><rect x="372.7" y="1477" width="75.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="375.68" y="1487.5" >ovl_read..</text>
</g>
<g >
<title>tcp_sendmsg (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1445" width="10.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="886.97" y="1455.5" ></text>
</g>
<g >
<title>worker (259,683,747 samples, 0.87%)</title><rect x="314.1" y="1525" width="10.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="317.13" y="1535.5" ></text>
</g>
<g >
<title>[bash] (35,828,311 samples, 0.12%)</title><rect x="804.3" y="1269" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="807.26" y="1279.5" ></text>
</g>
<g >
<title>__folio_put (90,366,899 samples, 0.30%)</title><rect x="524.7" y="1285" width="3.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="527.66" y="1295.5" ></text>
</g>
<g >
<title>psi_group_change (102,149,892 samples, 0.34%)</title><rect x="111.5" y="1301" width="4.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="114.51" y="1311.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1269" width="10.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="886.97" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="853" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="863.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1221" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="363.65" y="1231.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (51,307,040 samples, 0.17%)</title><rect x="733.3" y="869" width="2.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="736.26" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="901" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="911.5" ></text>
</g>
<g >
<title>process_backlog (1,161,763,435 samples, 3.89%)</title><rect x="693.6" y="1109" width="45.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="696.59" y="1119.5" >proc..</text>
</g>
<g >
<title>sched_clock_cpu (46,444,338 samples, 0.16%)</title><rect x="115.5" y="1301" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="118.54" y="1311.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (3,272,047 samples, 0.01%)</title><rect x="1183.6" y="1317" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1186.58" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (204,737,923 samples, 0.69%)</title><rect x="360.8" y="1541" width="8.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="363.83" y="1551.5" ></text>
</g>
<g >
<title>place_entity (51,266,984 samples, 0.17%)</title><rect x="1118.2" y="1397" width="2.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1121.23" y="1407.5" ></text>
</g>
<g >
<title>smp_call_function_single (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1333" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="363.65" y="1343.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1,170,501,066 samples, 3.92%)</title><rect x="392.6" y="1365" width="46.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="395.65" y="1375.5" >copy..</text>
</g>
<g >
<title>stop_one_cpu_nowait (14,846,610 samples, 0.05%)</title><rect x="359.9" y="1349" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="362.92" y="1359.5" ></text>
</g>
<g >
<title>ttwu_do_activate (753,606,977 samples, 2.52%)</title><rect x="1100.7" y="1445" width="29.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1103.74" y="1455.5" >tt..</text>
</g>
<g >
<title>mem_cgroup_charge_skmem (50,989,278 samples, 0.17%)</title><rect x="784.7" y="1365" width="2.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="787.73" y="1375.5" ></text>
</g>
<g >
<title>sock_write_iter (7,376,781,289 samples, 24.68%)</title><rect x="511.0" y="1461" width="291.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="513.98" y="1471.5" >sock_write_iter</text>
</g>
<g >
<title>update_cfs_group (49,924,888 samples, 0.17%)</title><rect x="102.2" y="1285" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="105.23" y="1295.5" ></text>
</g>
<g >
<title>poll_idle (296,191,422 samples, 0.99%)</title><rect x="1171.9" y="1365" width="11.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1174.89" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (48,453,808 samples, 0.16%)</title><rect x="480.4" y="1525" width="1.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="483.40" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (48,620,286 samples, 0.16%)</title><rect x="503.4" y="1525" width="1.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="506.37" y="1535.5" ></text>
</g>
<g >
<title>ioctl (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1477" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="363.65" y="1487.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (51,253,079 samples, 0.17%)</title><rect x="724.2" y="805" width="2.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="727.22" y="815.5" ></text>
</g>
<g >
<title>enqueue_task (753,606,977 samples, 2.52%)</title><rect x="1100.7" y="1429" width="29.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1103.74" y="1439.5" >en..</text>
</g>
<g >
<title>__do_softirq (1,733,083,041 samples, 5.80%)</title><rect x="677.7" y="1157" width="68.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="680.66" y="1167.5" >__do_so..</text>
</g>
<g >
<title>apparmor_file_alloc_security (51,157,796 samples, 0.17%)</title><rect x="493.3" y="1301" width="2.0" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="496.32" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="725" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="735.5" ></text>
</g>
<g >
<title>uv__read (5,442,429 samples, 0.02%)</title><rect x="359.7" y="1525" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="362.71" y="1535.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (194,539,283 samples, 0.65%)</title><rect x="522.5" y="1333" width="7.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="525.46" y="1343.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (50,989,278 samples, 0.17%)</title><rect x="784.7" y="1381" width="2.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="787.73" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (37,845,798 samples, 0.13%)</title><rect x="11.8" y="1525" width="1.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="14.76" y="1535.5" ></text>
</g>
<g >
<title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (76,148,864 samples, 0.25%)</title><rect x="334.1" y="1509" width="3.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="337.08" y="1519.5" ></text>
</g>
<g >
<title>start_kernel (848,416,759 samples, 2.84%)</title><rect x="1156.5" y="1509" width="33.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1159.50" y="1519.5" >st..</text>
</g>
<g >
<title>inet_recvmsg (48,620,286 samples, 0.16%)</title><rect x="503.4" y="1461" width="1.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="506.37" y="1471.5" ></text>
</g>
<g >
<title>tcp_current_mss (51,304,645 samples, 0.17%)</title><rect x="769.8" y="1381" width="2.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="772.80" y="1391.5" ></text>
</g>
<g >
<title>tcp_rcv_established (799,343,768 samples, 2.67%)</title><rect x="705.7" y="965" width="31.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="708.74" y="975.5" >tc..</text>
</g>
<g >
<title>skb_release_data (17,702,252 samples, 0.06%)</title><rect x="745.4" y="1109" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="748.39" y="1119.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,615,281,372 samples, 22.13%)</title><rect x="36.4" y="1509" width="261.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="39.40" y="1519.5" >do_syscall_64</text>
</g>
<g >
<title>skb_copy_datagram_iter (48,620,286 samples, 0.16%)</title><rect x="503.4" y="1413" width="1.9" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="506.37" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_select (51,193,346 samples, 0.17%)</title><rect x="1093.7" y="1477" width="2.0" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1096.67" y="1487.5" ></text>
</g>
<g >
<title>_copy_to_iter (2,579,069,967 samples, 8.63%)</title><rect x="131.7" y="1349" width="101.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="134.66" y="1359.5" >_copy_to_iter</text>
</g>
<g >
<title>tcp_wmem_schedule (391,876,657 samples, 1.31%)</title><rect x="786.7" y="1397" width="15.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="789.74" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="325" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="335.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (29,216,835 samples, 0.10%)</title><rect x="446.8" y="1445" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="449.75" y="1455.5" ></text>
</g>
<g >
<title>malloc (35,828,311 samples, 0.12%)</title><rect x="804.3" y="1173" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="807.26" y="1183.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (44,992,910 samples, 0.15%)</title><rect x="478.6" y="1461" width="1.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="481.62" y="1471.5" ></text>
</g>
<g >
<title>terminate_walk (51,250,474 samples, 0.17%)</title><rect x="499.3" y="1445" width="2.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="502.32" y="1455.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (74,950,216 samples, 0.25%)</title><rect x="334.1" y="1301" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.08" y="1311.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1333" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="304.53" y="1343.5" ></text>
</g>
<g >
<title>execute_command_internal (51,139,434 samples, 0.17%)</title><rect x="804.1" y="1461" width="2.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="807.14" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,987,584 samples, 0.01%)</title><rect x="306.3" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="309.30" y="1423.5" ></text>
</g>
<g >
<title>__mod_timer (100,437,809 samples, 0.34%)</title><rect x="763.8" y="1301" width="3.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="766.77" y="1311.5" ></text>
</g>
<g >
<title>ksys_read (7,373,605 samples, 0.02%)</title><rect x="314.2" y="1413" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="317.17" y="1423.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (45,898,298 samples, 0.15%)</title><rect x="275.3" y="885" width="1.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="278.30" y="895.5" ></text>
</g>
<g >
<title>do_open (228,619,734 samples, 0.76%)</title><rect x="488.3" y="1445" width="9.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="491.34" y="1455.5" ></text>
</g>
<g >
<title>execute_command_internal (2,964,660 samples, 0.01%)</title><rect x="804.1" y="1317" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="807.14" y="1327.5" ></text>
</g>
<g >
<title>tcp_inbound_md5_hash (51,304,173 samples, 0.17%)</title><rect x="697.8" y="997" width="2.0" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="700.76" y="1007.5" ></text>
</g>
<g >
<title>evlist_cpu_iterator__next (18,285,859 samples, 0.06%)</title><rect x="359.9" y="1525" width="0.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="362.92" y="1535.5" ></text>
</g>
<g >
<title>__inet_lookup_established (148,037,235 samples, 0.50%)</title><rect x="699.8" y="981" width="5.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="702.79" y="991.5" ></text>
</g>
<g >
<title>override_creds (51,193,269 samples, 0.17%)</title><rect x="490.4" y="1365" width="2.0" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="493.36" y="1375.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1,566,124,158 samples, 5.24%)</title><rect x="382.9" y="1397" width="61.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="385.90" y="1407.5" >generi..</text>
</g>
<g >
<title>Builtins_LoadIC (240,033,610 samples, 0.80%)</title><rect x="337.3" y="1541" width="9.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="340.27" y="1551.5" ></text>
</g>
<g >
<title>kthread (3,461,636 samples, 0.01%)</title><rect x="894.1" y="1525" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="897.09" y="1535.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (48,272,128 samples, 0.16%)</title><rect x="528.2" y="1317" width="1.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="531.23" y="1327.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (51,301,654 samples, 0.17%)</title><rect x="495.3" y="1301" width="2.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="498.34" y="1311.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1365" width="8.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="19.23" y="1375.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (2,472,670,954 samples, 8.27%)</title><rect x="662.1" y="1349" width="97.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="665.10" y="1359.5" >__tcp_trans..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (200,334,801 samples, 0.67%)</title><rect x="902.3" y="1429" width="7.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="905.30" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="629" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="639.5" ></text>
</g>
<g >
<title>neigh_hh_output (1,928,066,906 samples, 6.45%)</title><rect x="673.6" y="1221" width="76.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="676.64" y="1231.5" >neigh_hh..</text>
</g>
<g >
<title>tcp_data_queue (161,390,233 samples, 0.54%)</title><rect x="18.2" y="965" width="6.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="21.25" y="975.5" ></text>
</g>
<g >
<title>__netif_rx (51,234,625 samples, 0.17%)</title><rect x="284.8" y="1141" width="2.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="287.81" y="1151.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (51,248,005 samples, 0.17%)</title><rect x="693.7" y="1061" width="2.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="696.69" y="1071.5" ></text>
</g>
<g >
<title>__fdget_pos (50,259,829 samples, 0.17%)</title><rect x="881.9" y="1493" width="2.0" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="884.91" y="1503.5" ></text>
</g>
<g >
<title>__napi_poll (547,065,019 samples, 1.83%)</title><rect x="261.2" y="1109" width="21.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="264.19" y="1119.5" >_..</text>
</g>
<g >
<title>exec_binprm (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1461" width="2.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="360.45" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1429" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1439.5" ></text>
</g>
<g >
<title>drain_stock (51,145,215 samples, 0.17%)</title><rect x="236.9" y="1317" width="2.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="239.92" y="1327.5" ></text>
</g>
<g >
<title>main (51,139,434 samples, 0.17%)</title><rect x="804.1" y="1509" width="2.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="807.14" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1093" width="8.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="19.23" y="1103.5" ></text>
</g>
<g >
<title>post_alloc_hook (168,800,064 samples, 0.56%)</title><rect x="624.7" y="1317" width="6.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="627.74" y="1327.5" ></text>
</g>
<g >
<title>reweight_entity (45,628,490 samples, 0.15%)</title><rect x="95.9" y="1253" width="1.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="98.94" y="1263.5" ></text>
</g>
<g >
<title>sk_reset_timer (100,437,809 samples, 0.34%)</title><rect x="763.8" y="1333" width="3.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="766.77" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="597" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (251,292,374 samples, 0.84%)</title><rect x="314.5" y="1461" width="9.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="317.47" y="1471.5" ></text>
</g>
<g >
<title>__check_object_size (53,151,434 samples, 0.18%)</title><rect x="633.4" y="1381" width="2.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="636.43" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="773" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="783.5" ></text>
</g>
<g >
<title>expand_string_assignment (35,828,311 samples, 0.12%)</title><rect x="804.3" y="1237" width="1.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="807.26" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="485" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="495.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1045" width="8.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="19.23" y="1055.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (3,272,047 samples, 0.01%)</title><rect x="1183.6" y="1349" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1186.58" y="1359.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (48,620,286 samples, 0.16%)</title><rect x="503.4" y="1397" width="1.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="506.37" y="1407.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (146,710,115 samples, 0.49%)</title><rect x="459.8" y="1445" width="5.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="462.81" y="1455.5" ></text>
</g>
<g >
<title>update_cfs_group (45,628,490 samples, 0.15%)</title><rect x="95.9" y="1269" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="98.94" y="1279.5" ></text>
</g>
<g >
<title>execute_command_internal (38,792,971 samples, 0.13%)</title><rect x="804.1" y="1381" width="1.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="807.14" y="1391.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (2,761,106,483 samples, 9.24%)</title><rect x="124.5" y="1365" width="109.0" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="127.48" y="1375.5" >simple_copy_t..</text>
</g>
<g >
<title>sched_clock_cpu (50,590,131 samples, 0.17%)</title><rect x="1148.7" y="1445" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1151.65" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="197" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="207.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (980,250,549 samples, 3.28%)</title><rect x="1095.8" y="1477" width="38.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1098.83" y="1487.5" >__f..</text>
</g>
<g >
<title>start_secondary (6,643,399,343 samples, 22.23%)</title><rect x="894.2" y="1541" width="262.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="897.22" y="1551.5" >start_secondary</text>
</g>
<g >
<title>tcp_stream_alloc_skb (143,530,581 samples, 0.48%)</title><rect x="26.6" y="1413" width="5.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="29.64" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (4,900,625,756 samples, 16.40%)</title><rect x="902.3" y="1493" width="193.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="905.30" y="1503.5" >cpuidle_idle_call</text>
</g>
<g >
<title>ip_local_out (2,199,810,073 samples, 7.36%)</title><rect x="664.4" y="1301" width="86.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="667.43" y="1311.5" >ip_local_out</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (74,950,216 samples, 0.25%)</title><rect x="334.1" y="1397" width="2.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="337.08" y="1407.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (200,334,801 samples, 0.67%)</title><rect x="902.3" y="1381" width="7.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="905.30" y="1391.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (51,234,625 samples, 0.17%)</title><rect x="284.8" y="1077" width="2.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="287.81" y="1087.5" ></text>
</g>
<g >
<title>_raw_spin_lock (31,618,591 samples, 0.11%)</title><rect x="1144.6" y="1461" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1147.55" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1429" width="0.2" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="363.65" y="1439.5" ></text>
</g>
<g >
<title>select_task_rq_fair (50,738,536 samples, 0.17%)</title><rect x="729.4" y="821" width="2.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="732.43" y="831.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (51,239,670 samples, 0.17%)</title><rect x="761.7" y="1349" width="2.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="764.75" y="1359.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (444,825,091 samples, 1.49%)</title><rect x="261.2" y="997" width="17.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="264.19" y="1007.5" ></text>
</g>
<g >
<title>try_to_wake_up (14,846,610 samples, 0.05%)</title><rect x="359.9" y="1301" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="362.92" y="1311.5" ></text>
</g>
<g >
<title>enqueue_task (62,888,808 samples, 0.21%)</title><rect x="1183.7" y="1365" width="2.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1186.72" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1093" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="1103.5" ></text>
</g>
<g >
<title>[bash] (35,828,311 samples, 0.12%)</title><rect x="804.3" y="1317" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="807.26" y="1327.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (45,898,298 samples, 0.15%)</title><rect x="275.3" y="901" width="1.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="278.30" y="911.5" ></text>
</g>
<g >
<title>__fget_light (2,677,342 samples, 0.01%)</title><rect x="459.7" y="1429" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="462.70" y="1439.5" ></text>
</g>
<g >
<title>execute_command (38,792,971 samples, 0.13%)</title><rect x="804.1" y="1397" width="1.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="807.14" y="1407.5" ></text>
</g>
<g >
<title>event_function (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1285" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="363.65" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="245" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (2,150,559,217 samples, 7.20%)</title><rect x="368.9" y="1509" width="84.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="371.91" y="1519.5" >__x64_sys..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="837" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1525" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1535.5" ></text>
</g>
<g >
<title>node (1,358,397,740 samples, 4.54%)</title><rect x="306.3" y="1573" width="53.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="309.30" y="1583.5" >node</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (482,422,419 samples, 1.61%)</title><rect x="13.3" y="1525" width="19.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.26" y="1535.5" ></text>
</g>
<g >
<title>setlocale (54,691,532 samples, 0.18%)</title><rect x="299.4" y="1493" width="2.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="302.37" y="1503.5" ></text>
</g>
<g >
<title>__schedule (593,869,830 samples, 1.99%)</title><rect x="93.9" y="1333" width="23.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="96.93" y="1343.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="117" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="127.5" ></text>
</g>
<g >
<title>perf (22,961,067 samples, 0.08%)</title><rect x="359.9" y="1573" width="0.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="362.92" y="1583.5" ></text>
</g>
<g >
<title>__wake_up_common (96,940,442 samples, 0.32%)</title><rect x="729.4" y="885" width="3.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="732.43" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="565" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="575.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (444,825,091 samples, 1.49%)</title><rect x="261.2" y="981" width="17.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="264.19" y="991.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (270,892,164 samples, 0.91%)</title><rect x="286.9" y="1493" width="10.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="289.88" y="1503.5" ></text>
</g>
<g >
<title>search_binary_handler (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1445" width="2.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="360.45" y="1455.5" ></text>
</g>
<g >
<title>__fsnotify_parent (47,737,031 samples, 0.16%)</title><rect x="451.9" y="1429" width="1.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="454.93" y="1439.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (46,444,338 samples, 0.16%)</title><rect x="115.5" y="1269" width="1.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="118.54" y="1279.5" ></text>
</g>
<g >
<title>psi_task_switch (50,590,131 samples, 0.17%)</title><rect x="1148.7" y="1461" width="1.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1151.65" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (48,778,342 samples, 0.16%)</title><rect x="39.8" y="1413" width="2.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="42.83" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (48,453,808 samples, 0.16%)</title><rect x="480.4" y="1541" width="1.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="483.40" y="1551.5" ></text>
</g>
<g >
<title>uv__stream_io (5,442,429 samples, 0.02%)</title><rect x="359.7" y="1541" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="362.71" y="1551.5" ></text>
</g>
<g >
<title>ovl_path_realdata (51,285,270 samples, 0.17%)</title><rect x="360.8" y="1413" width="2.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="363.83" y="1423.5" ></text>
</g>
<g >
<title>net_rx_action (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1157" width="8.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="19.23" y="1167.5" ></text>
</g>
<g >
<title>kmem_cache_free (6,131,814 samples, 0.02%)</title><rect x="806.2" y="1301" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="809.16" y="1311.5" ></text>
</g>
<g >
<title>__select (673,292,909 samples, 2.25%)</title><rect x="453.8" y="1557" width="26.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="456.82" y="1567.5" >_..</text>
</g>
<g >
<title>do_dentry_open (126,255,944 samples, 0.42%)</title><rect x="492.4" y="1413" width="5.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="495.38" y="1423.5" ></text>
</g>
<g >
<title>__refill_stock (51,145,215 samples, 0.17%)</title><rect x="236.9" y="1333" width="2.0" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="239.92" y="1343.5" ></text>
</g>
<g >
<title>tcp_seq_start (7,373,605 samples, 0.02%)</title><rect x="314.2" y="1333" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="317.17" y="1343.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (31,042,742 samples, 0.10%)</title><rect x="511.0" y="1445" width="1.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="513.98" y="1455.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1509" width="2.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="360.45" y="1519.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1,984,336,999 samples, 6.64%)</title><rect x="671.4" y="1237" width="78.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="674.42" y="1247.5" >ip_finish..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1397" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="304.53" y="1407.5" ></text>
</g>
<g >
<title>inet_sendmsg (482,422,419 samples, 1.61%)</title><rect x="13.3" y="1461" width="19.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="16.26" y="1471.5" ></text>
</g>
<g >
<title>sock_def_readable (148,247,482 samples, 0.50%)</title><rect x="729.4" y="933" width="5.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="732.43" y="943.5" ></text>
</g>
<g >
<title>__put_user_8 (50,801,674 samples, 0.17%)</title><rect x="288.9" y="1429" width="2.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="291.90" y="1439.5" ></text>
</g>
<g >
<title>close_fd (51,285,270 samples, 0.17%)</title><rect x="360.8" y="1493" width="2.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="363.83" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1349" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="1359.5" ></text>
</g>
<g >
<title>revert_creds (49,679,457 samples, 0.17%)</title><rect x="497.4" y="1413" width="1.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="500.36" y="1423.5" ></text>
</g>
<g >
<title>check_heap_object (182,036,516 samples, 0.61%)</title><rect x="124.5" y="1317" width="7.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="127.48" y="1327.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (50,758,924 samples, 0.17%)</title><rect x="746.1" y="1189" width="2.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="749.08" y="1199.5" ></text>
</g>
<g >
<title>schedule_idle (303,578,716 samples, 1.02%)</title><rect x="1138.7" y="1493" width="11.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1141.66" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock (100,905,895 samples, 0.34%)</title><rect x="681.5" y="1141" width="4.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="684.51" y="1151.5" ></text>
</g>
<g >
<title>[libc.so.6] (52,116,139 samples, 0.17%)</title><rect x="299.4" y="1429" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="302.37" y="1439.5" ></text>
</g>
<g >
<title>get_inode_acl (51,170,521 samples, 0.17%)</title><rect x="488.3" y="1349" width="2.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="491.34" y="1359.5" ></text>
</g>
<g >
<title>prep_compound_page (51,316,410 samples, 0.17%)</title><rect x="631.4" y="1333" width="2.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="634.41" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="149" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="159.5" ></text>
</g>
<g >
<title>__fdget (46,052,356 samples, 0.15%)</title><rect x="368.9" y="1493" width="1.8" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="371.91" y="1503.5" ></text>
</g>
<g >
<title>begin_new_exec (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1413" width="2.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="360.45" y="1423.5" ></text>
</g>
<g >
<title>tcp_recvmsg (6,307,667,205 samples, 21.10%)</title><rect x="37.8" y="1429" width="249.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="40.80" y="1439.5" >tcp_recvmsg</text>
</g>
<g >
<title>ip_finish_output2 (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1253" width="8.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="19.23" y="1263.5" ></text>
</g>
<g >
<title>dup_mmap (74,950,216 samples, 0.25%)</title><rect x="334.1" y="1285" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="337.08" y="1295.5" ></text>
</g>
<g >
<title>tcp_check_space (8,919,408 samples, 0.03%)</title><rect x="265.2" y="949" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="268.23" y="959.5" ></text>
</g>
<g >
<title>__evlist__enable.constprop.0 (22,961,067 samples, 0.08%)</title><rect x="359.9" y="1541" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="362.92" y="1551.5" ></text>
</g>
<g >
<title>tcp_sendmsg (7,345,738,547 samples, 24.58%)</title><rect x="512.2" y="1429" width="290.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="515.21" y="1439.5" >tcp_sendmsg</text>
</g>
<g >
<title>__dev_queue_xmit (1,885,746,008 samples, 6.31%)</title><rect x="673.6" y="1205" width="74.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="676.64" y="1215.5" >__dev_qu..</text>
</g>
<g >
<title>tcp_wfree (50,758,924 samples, 0.17%)</title><rect x="746.1" y="1157" width="2.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="749.08" y="1167.5" ></text>
</g>
<g >
<title>uv_cond_wait (251,292,374 samples, 0.84%)</title><rect x="314.5" y="1509" width="9.9" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="317.47" y="1519.5" ></text>
</g>
<g >
<title>__vm_area_free (6,131,814 samples, 0.02%)</title><rect x="806.2" y="1317" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="809.16" y="1327.5" ></text>
</g>
<g >
<title>pollwake (103,846,540 samples, 0.35%)</title><rect x="20.5" y="869" width="4.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="23.52" y="879.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (125,715,140 samples, 0.42%)</title><rect x="43.8" y="1317" width="4.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="46.77" y="1327.5" ></text>
</g>
<g >
<title>[perf-686758.map] (18,313,680 samples, 0.06%)</title><rect x="347.0" y="1557" width="0.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="349.97" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_enter (4,796,145,443 samples, 16.05%)</title><rect x="902.3" y="1461" width="189.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="905.30" y="1471.5" >cpuidle_enter</text>
</g>
<g >
<title>mod_timer (52,503,840 samples, 0.18%)</title><rect x="530.1" y="1301" width="2.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="533.14" y="1311.5" ></text>
</g>
<g >
<title>_copy_from_iter (5,295,872 samples, 0.02%)</title><rect x="551.0" y="1397" width="0.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="554.05" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1157" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="1167.5" ></text>
</g>
<g >
<title>mas_wmb_replace (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1141" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="304.53" y="1151.5" ></text>
</g>
<g >
<title>load_elf_binary (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1429" width="2.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="360.45" y="1439.5" ></text>
</g>
<g >
<title>psi_flags_change (51,123,984 samples, 0.17%)</title><rect x="1120.3" y="1397" width="2.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1123.26" y="1407.5" ></text>
</g>
<g >
<title>select_idle_sibling (50,102,982 samples, 0.17%)</title><rect x="722.2" y="789" width="2.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="725.24" y="799.5" ></text>
</g>
<g >
<title>__fget_light (46,052,356 samples, 0.15%)</title><rect x="368.9" y="1477" width="1.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="371.91" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="261" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="271.5" ></text>
</g>
<g >
<title>exec_mmap (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1397" width="2.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="360.45" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1269" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1279.5" ></text>
</g>
<g >
<title>realloc (2,575,393 samples, 0.01%)</title><rect x="301.4" y="1429" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="304.43" y="1439.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (2,081,529,684 samples, 6.96%)</title><rect x="551.3" y="1397" width="82.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="554.26" y="1407.5" >sk_page_f..</text>
</g>
<g >
<title>mntput (51,250,474 samples, 0.17%)</title><rect x="499.3" y="1429" width="2.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="502.32" y="1439.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2,964,660 samples, 0.01%)</title><rect x="804.1" y="1189" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="807.14" y="1199.5" ></text>
</g>
<g >
<title>copy_page_range (74,950,216 samples, 0.25%)</title><rect x="334.1" y="1269" width="2.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="337.08" y="1279.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1221" width="8.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="19.23" y="1231.5" ></text>
</g>
<g >
<title>_copy_to_iter (48,620,286 samples, 0.16%)</title><rect x="503.4" y="1365" width="1.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="506.37" y="1375.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (108,628,016 samples, 0.36%)</title><rect x="104.2" y="1317" width="4.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="107.20" y="1327.5" ></text>
</g>
<g >
<title>exc_page_fault (9,872,905 samples, 0.03%)</title><rect x="805.7" y="1221" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="808.67" y="1231.5" ></text>
</g>
<g >
<title>tcp_rcv_established (176,889,182 samples, 0.59%)</title><rect x="41.8" y="1365" width="6.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="44.75" y="1375.5" ></text>
</g>
<g >
<title>__libc_fork (74,950,216 samples, 0.25%)</title><rect x="334.1" y="1429" width="2.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="337.08" y="1439.5" ></text>
</g>
<g >
<title>[grep] (113,974,145 samples, 0.38%)</title><rect x="301.8" y="1445" width="4.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="304.80" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="133" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="143.5" ></text>
</g>
<g >
<title>core_sys_select (440,584,754 samples, 1.47%)</title><rect x="457.7" y="1477" width="17.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="460.70" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_write (308,449,624 samples, 1.03%)</title><rect x="881.9" y="1525" width="12.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="884.91" y="1535.5" ></text>
</g>
<g >
<title>__kfree_skb (51,136,566 samples, 0.17%)</title><rect x="267.5" y="933" width="2.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="270.51" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="613" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (52,769,202 samples, 0.18%)</title><rect x="22.5" y="821" width="2.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="25.54" y="831.5" ></text>
</g>
<g >
<title>set_shellopts (12,346,463 samples, 0.04%)</title><rect x="805.7" y="1253" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="808.67" y="1263.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (14,846,610 samples, 0.05%)</title><rect x="359.9" y="1285" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="362.92" y="1295.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr (18,285,859 samples, 0.06%)</title><rect x="359.9" y="1397" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="362.92" y="1407.5" ></text>
</g>
<g >
<title>__switch_to_asm (46,910,447 samples, 0.16%)</title><rect x="453.8" y="1541" width="1.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="456.82" y="1551.5" ></text>
</g>
<g >
<title>epoll_wait (3,431,189 samples, 0.01%)</title><rect x="359.6" y="1541" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="362.57" y="1551.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (3,848,972 samples, 0.01%)</title><rect x="739.3" y="1093" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="742.30" y="1103.5" ></text>
</g>
<g >
<title>neigh_hh_output (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1237" width="8.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="19.23" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="229" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="239.5" ></text>
</g>
<g >
<title>mod_timer (100,437,809 samples, 0.34%)</title><rect x="763.8" y="1317" width="3.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="766.77" y="1327.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (799,343,768 samples, 2.67%)</title><rect x="705.7" y="981" width="31.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="708.74" y="991.5" >tc..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="997" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1007.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (3,272,047 samples, 0.01%)</title><rect x="1183.6" y="1381" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1186.58" y="1391.5" ></text>
</g>
<g >
<title>__do_softirq (649,510,308 samples, 2.17%)</title><rect x="259.2" y="1141" width="25.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="262.17" y="1151.5" >_..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1525" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="304.53" y="1535.5" ></text>
</g>
<g >
<title>blkcg_maybe_throttle_current (51,095,964 samples, 0.17%)</title><rect x="295.6" y="1445" width="2.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="298.56" y="1455.5" ></text>
</g>
<g >
<title>sh (58,474,034 samples, 0.20%)</title><rect x="804.1" y="1573" width="2.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="807.13" y="1583.5" ></text>
</g>
<g >
<title>tcp_ack (51,174,042 samples, 0.17%)</title><rect x="41.8" y="1349" width="2.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="44.75" y="1359.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,665,704,703 samples, 5.57%)</title><rect x="379.0" y="1429" width="65.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="381.97" y="1439.5" >do_iter..</text>
</g>
<g >
<title>release_sock (176,889,182 samples, 0.59%)</title><rect x="41.8" y="1413" width="6.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="44.75" y="1423.5" ></text>
</g>
<g >
<title>__check_heap_object (51,284,465 samples, 0.17%)</title><rect x="501.3" y="1397" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="504.35" y="1407.5" ></text>
</g>
<g >
<title>load_elf_binary (6,733,808 samples, 0.02%)</title><rect x="806.2" y="1429" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="809.16" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1205" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1215.5" ></text>
</g>
<g >
<title>sk_wait_data (1,317,148,340 samples, 4.41%)</title><rect x="65.4" y="1397" width="52.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="68.38" y="1407.5" >sk_wa..</text>
</g>
<g >
<title>ovl_real_fdget_meta (61,206,880 samples, 0.20%)</title><rect x="374.7" y="1445" width="2.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="377.68" y="1455.5" ></text>
</g>
<g >
<title>filemap_read (1,566,124,158 samples, 5.24%)</title><rect x="382.9" y="1381" width="61.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="385.90" y="1391.5" >filema..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1445" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="304.53" y="1455.5" ></text>
</g>
<g >
<title>mmap_region (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1301" width="0.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="304.53" y="1311.5" ></text>
</g>
<g >
<title>ip_rcv (1,104,092,444 samples, 3.69%)</title><rect x="695.7" y="1061" width="43.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="698.71" y="1071.5" >ip_rcv</text>
</g>
<g >
<title>__tcp_push_pending_frames (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1397" width="10.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="886.97" y="1407.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (3,261,398 samples, 0.01%)</title><rect x="894.1" y="1509" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="897.09" y="1519.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (1,213,024,622 samples, 4.06%)</title><rect x="238.9" y="1381" width="47.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="241.94" y="1391.5" >__tc..</text>
</g>
<g >
<title>copyout (912,847,096 samples, 3.05%)</title><rect x="400.8" y="1333" width="36.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="403.80" y="1343.5" >cop..</text>
</g>
<g >
<title>__mod_memcg_state (39,050,656 samples, 0.13%)</title><rect x="233.5" y="1333" width="1.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="236.48" y="1343.5" ></text>
</g>
<g >
<title>uv__fs_work (7,373,605 samples, 0.02%)</title><rect x="314.2" y="1509" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="317.17" y="1519.5" ></text>
</g>
<g >
<title>__sk_mem_schedule (391,876,657 samples, 1.31%)</title><rect x="786.7" y="1381" width="15.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="789.74" y="1391.5" ></text>
</g>
<g >
<title>task_work_run (102,551,007 samples, 0.34%)</title><rect x="364.9" y="1461" width="4.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="367.87" y="1471.5" ></text>
</g>
<g >
<title>native_sched_clock (46,444,338 samples, 0.16%)</title><rect x="115.5" y="1253" width="1.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="118.54" y="1263.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (51,285,270 samples, 0.17%)</title><rect x="360.8" y="1429" width="2.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="363.83" y="1439.5" ></text>
</g>
<g >
<title>netif_rx_internal (51,234,625 samples, 0.17%)</title><rect x="284.8" y="1125" width="2.0" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="287.81" y="1135.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1557" width="2.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="360.45" y="1567.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (76,148,864 samples, 0.25%)</title><rect x="334.1" y="1525" width="3.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="337.08" y="1535.5" ></text>
</g>
<g >
<title>_compound_head (45,426,135 samples, 0.15%)</title><rect x="357.4" y="1269" width="1.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="360.45" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1253" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1263.5" ></text>
</g>
<g >
<title>filp_close (51,285,270 samples, 0.17%)</title><rect x="360.8" y="1477" width="2.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="363.83" y="1487.5" ></text>
</g>
<g >
<title>_perf_ioctl (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1397" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="363.65" y="1407.5" ></text>
</g>
<g >
<title>vfs_write (258,189,795 samples, 0.86%)</title><rect x="883.9" y="1493" width="10.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="886.89" y="1503.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1,053,273,272 samples, 3.52%)</title><rect x="695.7" y="1013" width="41.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="698.71" y="1023.5" >ip_..</text>
</g>
<g >
<title>cpu_stop_queue_work (14,846,610 samples, 0.05%)</title><rect x="359.9" y="1333" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="362.92" y="1343.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (48,620,286 samples, 0.16%)</title><rect x="503.4" y="1381" width="1.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="506.37" y="1391.5" ></text>
</g>
<g >
<title>execute_command_internal (51,139,434 samples, 0.17%)</title><rect x="804.1" y="1413" width="2.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="807.14" y="1423.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1,084,928,377 samples, 3.63%)</title><rect x="1095.8" y="1493" width="42.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1098.83" y="1503.5" >flus..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="949" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="959.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (76,148,864 samples, 0.25%)</title><rect x="334.1" y="1493" width="3.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="337.08" y="1503.5" ></text>
</g>
<g >
<title>vfs_read (7,373,605 samples, 0.02%)</title><rect x="314.2" y="1397" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="317.17" y="1407.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (2,964,660 samples, 0.01%)</title><rect x="804.1" y="1221" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="807.14" y="1231.5" ></text>
</g>
<g >
<title>try_to_wake_up (103,846,540 samples, 0.35%)</title><rect x="20.5" y="837" width="4.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="23.52" y="847.5" ></text>
</g>
<g >
<title>intel_idle (340,860,408 samples, 1.14%)</title><rect x="1156.6" y="1365" width="13.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1159.58" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,575,393 samples, 0.01%)</title><rect x="301.4" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="304.43" y="1423.5" ></text>
</g>
<g >
<title>_copy_to_iter (1,119,292,165 samples, 3.74%)</title><rect x="392.6" y="1349" width="44.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="395.65" y="1359.5" >_cop..</text>
</g>
<g >
<title>psi_task_switch (95,010,375 samples, 0.32%)</title><rect x="461.8" y="1381" width="3.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="464.85" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="805" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="815.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1349" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="304.53" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_execve (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1525" width="2.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="360.45" y="1535.5" ></text>
</g>
<g >
<title>_Fork (74,950,216 samples, 0.25%)</title><rect x="334.1" y="1413" width="2.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="337.08" y="1423.5" ></text>
</g>
<g >
<title>release_sock (446,856,389 samples, 1.50%)</title><rect x="518.3" y="1413" width="17.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="521.25" y="1423.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (24,843,967 samples, 0.08%)</title><rect x="757.1" y="1333" width="1.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="760.09" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="304.53" y="1567.5" ></text>
</g>
<g >
<title>vfs_iter_read (1,793,411,520 samples, 6.00%)</title><rect x="377.1" y="1461" width="70.8" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="380.10" y="1471.5" >vfs_iter..</text>
</g>
<g >
<title>do_syscall_64 (7,373,605 samples, 0.02%)</title><rect x="314.2" y="1445" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="317.17" y="1455.5" ></text>
</g>
<g >
<title>ip_finish_output (897,980,510 samples, 3.00%)</title><rect x="251.4" y="1253" width="35.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="254.38" y="1263.5" >ip_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="549" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="559.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (848,416,759 samples, 2.84%)</title><rect x="1156.5" y="1541" width="33.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1159.50" y="1551.5" >x8..</text>
</g>
<g >
<title>ovl_flush (51,285,270 samples, 0.17%)</title><rect x="360.8" y="1461" width="2.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="363.83" y="1471.5" ></text>
</g>
<g >
<title>inode_permission (51,170,521 samples, 0.17%)</title><rect x="488.3" y="1381" width="2.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="491.34" y="1391.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (161,390,233 samples, 0.54%)</title><rect x="18.2" y="997" width="6.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="21.25" y="1007.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (129,238,781 samples, 0.43%)</title><rect x="779.6" y="1365" width="5.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="782.63" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (243,007,909 samples, 0.81%)</title><rect x="347.9" y="37" width="9.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="350.85" y="47.5" ></text>
</g>
<g >
<title>[bash] (12,346,463 samples, 0.04%)</title><rect x="805.7" y="1381" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="808.67" y="1391.5" ></text>
</g>
<g >
<title>may_open (102,363,790 samples, 0.34%)</title><rect x="488.3" y="1429" width="4.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="491.34" y="1439.5" ></text>
</g>
<g >
<title>make_child (2,964,660 samples, 0.01%)</title><rect x="804.1" y="1269" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="807.14" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="101" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="111.5" ></text>
</g>
<g >
<title>vma_complete (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1237" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="304.53" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,733,808 samples, 0.02%)</title><rect x="806.2" y="1557" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="809.16" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1445" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1455.5" ></text>
</g>
<g >
<title>__ep_eventpoll_poll.isra.0 (206,368,341 samples, 0.69%)</title><rect x="873.8" y="1477" width="8.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="876.76" y="1487.5" ></text>
</g>
<g >
<title>load_balance (200,016,704 samples, 0.67%)</title><rect x="902.3" y="1317" width="7.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="905.30" y="1327.5" ></text>
</g>
<g >
<title>ip_finish_output (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1285" width="8.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="19.23" y="1295.5" ></text>
</g>
<g >
<title>place_entity (62,888,808 samples, 0.21%)</title><rect x="1183.7" y="1333" width="2.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1186.72" y="1343.5" ></text>
</g>
<g >
<title>_dl_catch_exception (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1477" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="304.53" y="1487.5" ></text>
</g>
<g >
<title>do_filp_open (329,549,665 samples, 1.10%)</title><rect x="488.3" y="1477" width="13.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="491.34" y="1487.5" ></text>
</g>
<g >
<title>begin_new_exec (6,733,808 samples, 0.02%)</title><rect x="806.2" y="1413" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="809.16" y="1423.5" ></text>
</g>
<g >
<title>sched_setaffinity (18,285,859 samples, 0.06%)</title><rect x="359.9" y="1493" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="362.92" y="1503.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (76,148,864 samples, 0.25%)</title><rect x="334.1" y="1541" width="3.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="337.08" y="1551.5" ></text>
</g>
<g >
<title>mod_timer (51,239,670 samples, 0.17%)</title><rect x="761.7" y="1301" width="2.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="764.75" y="1311.5" ></text>
</g>
<g >
<title>sock_write_iter (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1477" width="10.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="886.97" y="1487.5" ></text>
</g>
<g >
<title>[anon] (16,754,316 samples, 0.06%)</title><rect x="313.4" y="1557" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="316.45" y="1567.5" ></text>
</g>
<g >
<title>established_get_first (6,928,369 samples, 0.02%)</title><rect x="314.2" y="1285" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="317.19" y="1295.5" ></text>
</g>
<g >
<title>mmput (6,733,808 samples, 0.02%)</title><rect x="806.2" y="1381" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="809.16" y="1391.5" ></text>
</g>
<g >
<title>mas_store_prealloc (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1221" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="304.53" y="1231.5" ></text>
</g>
<g >
<title>[grep] (113,974,145 samples, 0.38%)</title><rect x="301.8" y="1525" width="4.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="304.80" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="501" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="511.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (76,148,864 samples, 0.25%)</title><rect x="334.1" y="1445" width="3.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="337.08" y="1455.5" ></text>
</g>
<g >
<title>[perf-1062671.map] (241,591,013 samples, 0.81%)</title><rect x="324.5" y="1557" width="9.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="327.54" y="1567.5" ></text>
</g>
<g >
<title>enqueue_task_fair (62,888,808 samples, 0.21%)</title><rect x="1183.7" y="1349" width="2.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1186.72" y="1359.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (28,280,946 samples, 0.09%)</title><rect x="721.1" y="789" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="724.12" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1413" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="1423.5" ></text>
</g>
<g >
<title>Glob::isIgnored (2,987,584 samples, 0.01%)</title><rect x="306.3" y="1493" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="309.30" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1477" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="1487.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (239,051,784 samples, 0.80%)</title><rect x="1082.2" y="1429" width="9.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1085.21" y="1439.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (51,222,422 samples, 0.17%)</title><rect x="1150.6" y="1493" width="2.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1153.65" y="1503.5" ></text>
</g>
<g >
<title>add_wait_queue (95,169,263 samples, 0.32%)</title><rect x="65.4" y="1381" width="3.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="68.38" y="1391.5" ></text>
</g>
<g >
<title>dequeue_entity (159,240,878 samples, 0.53%)</title><rect x="95.9" y="1285" width="6.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="98.94" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (380,834,130 samples, 1.27%)</title><rect x="488.3" y="1541" width="15.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="491.34" y="1551.5" ></text>
</g>
<g >
<title>tcp_add_backlog (2,574,014 samples, 0.01%)</title><rect x="705.6" y="981" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="708.63" y="991.5" ></text>
</g>
<g >
<title>psi_task_switch (153,415,747 samples, 0.51%)</title><rect x="109.5" y="1317" width="6.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="112.49" y="1327.5" ></text>
</g>
<g >
<title>default_wake_function (103,846,540 samples, 0.35%)</title><rect x="20.5" y="853" width="4.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="23.52" y="863.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (949,955,017 samples, 3.18%)</title><rect x="699.8" y="997" width="37.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="702.79" y="1007.5" >tcp..</text>
</g>
<g >
<title>skb_clone (147,222,450 samples, 0.49%)</title><rect x="751.3" y="1333" width="5.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="754.28" y="1343.5" ></text>
</g>
<g >
<title>menu_select (3,272,047 samples, 0.01%)</title><rect x="1183.6" y="1397" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1186.58" y="1407.5" ></text>
</g>
<g >
<title>enqueue_task_fair (494,409,368 samples, 1.65%)</title><rect x="1100.7" y="1413" width="19.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1103.74" y="1423.5" ></text>
</g>
<g >
<title>os_xsave (36,347,878 samples, 0.12%)</title><rect x="297.9" y="1525" width="1.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="300.94" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_select (3,272,047 samples, 0.01%)</title><rect x="1183.6" y="1413" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1186.58" y="1423.5" ></text>
</g>
<g >
<title>copy_process (74,950,216 samples, 0.25%)</title><rect x="334.1" y="1317" width="2.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="337.08" y="1327.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (153,452,653 samples, 0.51%)</title><rect x="362.9" y="1509" width="6.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="365.86" y="1519.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (138,213,367 samples, 0.46%)</title><rect x="233.5" y="1381" width="5.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="236.48" y="1391.5" ></text>
</g>
<g >
<title>pick_next_task (72,223,217 samples, 0.24%)</title><rect x="1145.8" y="1461" width="2.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1148.80" y="1471.5" ></text>
</g>
<g >
<title>alloc_pages (2,025,876,482 samples, 6.78%)</title><rect x="553.5" y="1365" width="79.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="556.45" y="1375.5" >alloc_pages</text>
</g>
<g >
<title>bprm_execve (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1493" width="2.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="360.45" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1189" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1199.5" ></text>
</g>
<g >
<title>update_rq_clock (51,137,742 samples, 0.17%)</title><rect x="1130.5" y="1445" width="2.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1133.49" y="1455.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (44,992,910 samples, 0.15%)</title><rect x="478.6" y="1445" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="481.62" y="1455.5" ></text>
</g>
<g >
<title>native_sched_clock (50,590,131 samples, 0.17%)</title><rect x="1148.7" y="1397" width="1.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1151.65" y="1407.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (2,850,171,533 samples, 9.54%)</title><rect x="121.0" y="1397" width="112.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="123.96" y="1407.5" >skb_copy_data..</text>
</g>
<g >
<title>aa_file_perm (50,848,746 samples, 0.17%)</title><rect x="449.9" y="1429" width="2.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="452.93" y="1439.5" ></text>
</g>
<g >
<title>sock_recvmsg (48,620,286 samples, 0.16%)</title><rect x="503.4" y="1477" width="1.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="506.37" y="1487.5" ></text>
</g>
<g >
<title>do_iter_read (1,764,194,685 samples, 5.90%)</title><rect x="377.1" y="1445" width="69.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="380.10" y="1455.5" >do_iter..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="309" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="319.5" ></text>
</g>
<g >
<title>update_rq_clock (46,444,338 samples, 0.16%)</title><rect x="115.5" y="1317" width="1.9" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="118.54" y="1327.5" ></text>
</g>
<g >
<title>check_heap_object (5,454,394 samples, 0.02%)</title><rect x="635.3" y="1349" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="638.32" y="1359.5" ></text>
</g>
<g >
<title>__rcu_read_lock (51,699,740 samples, 0.17%)</title><rect x="459.8" y="1365" width="2.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="462.81" y="1375.5" ></text>
</g>
<g >
<title>kmalloc_reserve (51,054,788 samples, 0.17%)</title><rect x="30.3" y="1381" width="2.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="33.29" y="1391.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1333" width="10.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="886.97" y="1343.5" ></text>
</g>
<g >
<title>_start (51,139,434 samples, 0.17%)</title><rect x="804.1" y="1557" width="2.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="807.14" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,469,345,520 samples, 24.99%)</title><rect x="509.2" y="1525" width="294.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="512.24" y="1535.5" >do_syscall_64</text>
</g>
<g >
<title>mem_cgroup_uncharge_skmem (48,272,128 samples, 0.16%)</title><rect x="528.2" y="1285" width="1.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="531.23" y="1295.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (3,461,636 samples, 0.01%)</title><rect x="894.1" y="1557" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="897.09" y="1567.5" ></text>
</g>
<g >
<title>pthread_cond_wait (251,292,374 samples, 0.84%)</title><rect x="314.5" y="1493" width="9.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="317.47" y="1503.5" ></text>
</g>
<g >
<title>inode_permission (49,679,457 samples, 0.17%)</title><rect x="497.4" y="1429" width="1.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="500.36" y="1439.5" ></text>
</g>
<g >
<title>malloc (2,987,584 samples, 0.01%)</title><rect x="306.3" y="1445" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="309.30" y="1455.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (46,792,260 samples, 0.16%)</title><rect x="240.9" y="1301" width="1.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="243.89" y="1311.5" ></text>
</g>
<g >
<title>ovl_open (126,255,944 samples, 0.42%)</title><rect x="492.4" y="1397" width="5.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="495.38" y="1407.5" ></text>
</g>
<g >
<title>seq_read (7,373,605 samples, 0.02%)</title><rect x="314.2" y="1365" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="317.17" y="1375.5" ></text>
</g>
<g >
<title>skb_release_data (146,267,155 samples, 0.49%)</title><rect x="522.5" y="1301" width="5.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="525.46" y="1311.5" ></text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (18,285,859 samples, 0.06%)</title><rect x="359.9" y="1445" width="0.7" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="362.92" y="1455.5" ></text>
</g>
<g >
<title>local_clock_noinstr (46,953,952 samples, 0.16%)</title><rect x="1170.0" y="1365" width="1.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1173.04" y="1375.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (51,307,040 samples, 0.17%)</title><rect x="733.3" y="885" width="2.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="736.26" y="895.5" ></text>
</g>
<g >
<title>ip_local_deliver (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1061" width="8.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="19.23" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1173" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1183.5" ></text>
</g>
<g >
<title>mmput (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1381" width="2.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="360.45" y="1391.5" ></text>
</g>
<g >
<title>__do_softirq (200,334,801 samples, 0.67%)</title><rect x="902.3" y="1365" width="7.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="905.30" y="1375.5" ></text>
</g>
<g >
<title>[bash] (12,346,463 samples, 0.04%)</title><rect x="805.7" y="1349" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="808.67" y="1359.5" ></text>
</g>
<g >
<title>kfree_skbmem (51,173,162 samples, 0.17%)</title><rect x="282.8" y="1093" width="2.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="285.79" y="1103.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2,575,393 samples, 0.01%)</title><rect x="301.4" y="1397" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="304.43" y="1407.5" ></text>
</g>
<g >
<title>try_to_wake_up (129,637,007 samples, 0.43%)</title><rect x="721.1" y="821" width="5.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="724.12" y="831.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1205" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="363.65" y="1215.5" ></text>
</g>
<g >
<title>ovl_real_fdget (61,206,880 samples, 0.20%)</title><rect x="374.7" y="1461" width="2.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="377.68" y="1471.5" ></text>
</g>
<g >
<title>pick_next_task (251,292,374 samples, 0.84%)</title><rect x="314.5" y="1333" width="9.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="317.47" y="1343.5" ></text>
</g>
<g >
<title>vfs_read (2,104,506,861 samples, 7.04%)</title><rect x="370.7" y="1493" width="83.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="373.73" y="1503.5" >vfs_read</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (48,620,286 samples, 0.16%)</title><rect x="503.4" y="1541" width="1.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="506.37" y="1551.5" ></text>
</g>
<g >
<title>rw_verify_area (149,800,583 samples, 0.50%)</title><rect x="447.9" y="1477" width="5.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="450.90" y="1487.5" ></text>
</g>
<g >
<title>call_cpuidle (685,911,899 samples, 2.29%)</title><rect x="1156.5" y="1413" width="27.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1159.50" y="1423.5" >c..</text>
</g>
<g >
<title>__x64_sys_futex (251,292,374 samples, 0.84%)</title><rect x="314.5" y="1429" width="9.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="317.47" y="1439.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (168,653,146 samples, 0.56%)</title><rect x="288.9" y="1445" width="6.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="291.90" y="1455.5" ></text>
</g>
<g >
<title>kernel_clone (74,950,216 samples, 0.25%)</title><rect x="334.1" y="1333" width="2.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="337.08" y="1343.5" ></text>
</g>
<g >
<title>update_rq_clock (3,439,249 samples, 0.01%)</title><rect x="360.5" y="1381" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="363.51" y="1391.5" ></text>
</g>
<g >
<title>tcp_push (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1413" width="8.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="19.23" y="1423.5" ></text>
</g>
<g >
<title>tcp_write_xmit (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1381" width="10.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="886.97" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="533" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="543.5" ></text>
</g>
<g >
<title>execute_command_internal (35,828,311 samples, 0.12%)</title><rect x="804.3" y="1333" width="1.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="807.26" y="1343.5" ></text>
</g>
<g >
<title>putname (48,453,808 samples, 0.16%)</title><rect x="480.4" y="1461" width="1.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="483.40" y="1471.5" ></text>
</g>
<g >
<title>uv_spawn (76,148,864 samples, 0.25%)</title><rect x="334.1" y="1477" width="3.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="337.08" y="1487.5" ></text>
</g>
<g >
<title>kmalloc_reserve (46,792,260 samples, 0.16%)</title><rect x="240.9" y="1317" width="1.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="243.89" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (52,116,139 samples, 0.17%)</title><rect x="299.4" y="1413" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="302.37" y="1423.5" ></text>
</g>
<g >
<title>alloc_empty_backing_file (126,255,944 samples, 0.42%)</title><rect x="492.4" y="1349" width="5.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="495.38" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1301" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1311.5" ></text>
</g>
<g >
<title>psi_task_change (259,197,609 samples, 0.87%)</title><rect x="1120.3" y="1413" width="10.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1123.26" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="277" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="53" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="63.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (138,349,201 samples, 0.46%)</title><rect x="720.8" y="885" width="5.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="723.78" y="895.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (51,286,715 samples, 0.17%)</title><rect x="364.9" y="1397" width="2.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="367.87" y="1407.5" ></text>
</g>
<g >
<title>operator new (2,987,584 samples, 0.01%)</title><rect x="306.3" y="1461" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="309.30" y="1471.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (7,491,816,102 samples, 25.07%)</title><rect x="894.2" y="1557" width="295.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="897.22" y="1567.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>ip_local_deliver (1,053,273,272 samples, 3.52%)</title><rect x="695.7" y="1045" width="41.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="698.71" y="1055.5" >ip_..</text>
</g>
<g >
<title>__split_vma (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1253" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="304.53" y="1263.5" ></text>
</g>
<g >
<title>do_futex (251,292,374 samples, 0.84%)</title><rect x="314.5" y="1413" width="9.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="317.47" y="1423.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,575,393 samples, 0.01%)</title><rect x="301.4" y="1333" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="304.43" y="1343.5" ></text>
</g>
<g >
<title>__schedule (251,292,374 samples, 0.84%)</title><rect x="314.5" y="1349" width="9.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="317.47" y="1359.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (6,733,808 samples, 0.02%)</title><rect x="806.2" y="1477" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="809.16" y="1487.5" ></text>
</g>
<g >
<title>exit_mmap (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1349" width="2.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="360.45" y="1359.5" ></text>
</g>
<g >
<title>sock_poll (51,275,979 samples, 0.17%)</title><rect x="465.6" y="1445" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="468.60" y="1455.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (270,892,164 samples, 0.91%)</title><rect x="286.9" y="1477" width="10.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="289.88" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (685,911,899 samples, 2.29%)</title><rect x="1156.5" y="1381" width="27.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1159.50" y="1391.5" >c..</text>
</g>
<g >
<title>native_write_msr (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1189" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="363.65" y="1199.5" ></text>
</g>
<g >
<title>ovl_permission (102,363,790 samples, 0.34%)</title><rect x="488.3" y="1397" width="4.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="491.34" y="1407.5" ></text>
</g>
<g >
<title>ovl_path_realdata (61,206,880 samples, 0.20%)</title><rect x="374.7" y="1429" width="2.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="377.68" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1045" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1055.5" ></text>
</g>
<g >
<title>tcp_ack (247,043,123 samples, 0.83%)</title><rect x="522.5" y="1349" width="9.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="525.46" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="453" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (28,280,946 samples, 0.09%)</title><rect x="721.1" y="805" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="724.12" y="815.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (53,151,434 samples, 0.18%)</title><rect x="633.4" y="1365" width="2.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="636.43" y="1375.5" ></text>
</g>
<g >
<title>[perf-1062659.map] (3,157,614 samples, 0.01%)</title><rect x="324.4" y="1557" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="327.42" y="1567.5" ></text>
</g>
<g >
<title>refill_stock (51,145,215 samples, 0.17%)</title><rect x="236.9" y="1349" width="2.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="239.92" y="1359.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (2,575,393 samples, 0.01%)</title><rect x="301.4" y="1285" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="304.43" y="1295.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::OnUvRead (5,442,429 samples, 0.02%)</title><rect x="359.7" y="1493" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="362.71" y="1503.5" ></text>
</g>
<g >
<title>vfs_fstatat (48,453,808 samples, 0.16%)</title><rect x="480.4" y="1477" width="1.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="483.40" y="1487.5" ></text>
</g>
<g >
<title>__sys_recvfrom (48,620,286 samples, 0.16%)</title><rect x="503.4" y="1493" width="1.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="506.37" y="1503.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (200,334,801 samples, 0.67%)</title><rect x="902.3" y="1413" width="7.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="905.30" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="645" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (49,753,129 samples, 0.17%)</title><rect x="34.4" y="1509" width="2.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="37.44" y="1519.5" ></text>
</g>
<g >
<title>perf_ctx_enable (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1237" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="363.65" y="1247.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (50,819,172 samples, 0.17%)</title><rect x="737.3" y="1045" width="2.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="740.29" y="1055.5" ></text>
</g>
<g >
<title>[libc.so.6] (54,691,532 samples, 0.18%)</title><rect x="299.4" y="1525" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="302.37" y="1535.5" ></text>
</g>
<g >
<title>_perf_event_enable (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1365" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="363.65" y="1375.5" ></text>
</g>
<g >
<title>select_idle_sibling (50,738,536 samples, 0.17%)</title><rect x="729.4" y="805" width="2.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="732.43" y="815.5" ></text>
</g>
<g >
<title>[bash] (12,346,463 samples, 0.04%)</title><rect x="805.7" y="1285" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="808.67" y="1295.5" ></text>
</g>
<g >
<title>net_rx_action (649,510,308 samples, 2.17%)</title><rect x="259.2" y="1125" width="25.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="262.17" y="1135.5" >n..</text>
</g>
<g >
<title>operator new (3,551,392 samples, 0.01%)</title><rect x="347.7" y="1541" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="350.70" y="1551.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1,065,898,866 samples, 3.57%)</title><rect x="244.8" y="1333" width="42.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="247.75" y="1343.5" >__t..</text>
</g>
<g >
<title>tcp_data_ready (161,390,233 samples, 0.54%)</title><rect x="18.2" y="949" width="6.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="21.25" y="959.5" ></text>
</g>
<g >
<title>open64 (380,834,130 samples, 1.27%)</title><rect x="488.3" y="1557" width="15.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="491.34" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (515,435,359 samples, 1.72%)</title><rect x="873.7" y="1557" width="20.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="876.74" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,733,808 samples, 0.02%)</title><rect x="806.2" y="1541" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="809.16" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (380,834,130 samples, 1.27%)</title><rect x="488.3" y="1525" width="15.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="491.34" y="1535.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (90,764,063 samples, 0.30%)</title><rect x="117.4" y="1397" width="3.6" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="120.38" y="1407.5" ></text>
</g>
<g >
<title>execute_command_internal (12,346,463 samples, 0.04%)</title><rect x="805.7" y="1397" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="808.67" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="821" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="831.5" ></text>
</g>
<g >
<title>cpus_share_cache (50,102,982 samples, 0.17%)</title><rect x="722.2" y="773" width="2.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="725.24" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1141" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="757" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="767.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (51,234,625 samples, 0.17%)</title><rect x="284.8" y="1109" width="2.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="287.81" y="1119.5" ></text>
</g>
<g >
<title>do_idle (848,000,076 samples, 2.84%)</title><rect x="1156.5" y="1445" width="33.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1159.50" y="1455.5" >do..</text>
</g>
<g >
<title>schedule (615,939,956 samples, 2.06%)</title><rect x="93.1" y="1349" width="24.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.06" y="1359.5" >s..</text>
</g>
<g >
<title>tcp_push (2,720,866,992 samples, 9.10%)</title><rect x="660.3" y="1397" width="107.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="663.32" y="1407.5" >tcp_push</text>
</g>
<g >
<title>tcp_send_mss (51,085,039 samples, 0.17%)</title><rect x="24.6" y="1413" width="2.0" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="27.62" y="1423.5" ></text>
</g>
<g >
<title>enqueue_entity (326,280,298 samples, 1.09%)</title><rect x="1105.4" y="1397" width="12.8" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1108.35" y="1407.5" ></text>
</g>
<g >
<title>ret_from_fork (3,461,636 samples, 0.01%)</title><rect x="894.1" y="1541" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="897.09" y="1551.5" ></text>
</g>
<g >
<title>command_substitute (35,828,311 samples, 0.12%)</title><rect x="804.3" y="1205" width="1.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="807.26" y="1215.5" ></text>
</g>
<g >
<title>copyout (48,620,286 samples, 0.16%)</title><rect x="503.4" y="1349" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="506.37" y="1359.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (181,180,099 samples, 0.61%)</title><rect x="306.3" y="1557" width="7.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="309.30" y="1567.5" ></text>
</g>
<g >
<title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (2,987,584 samples, 0.01%)</title><rect x="306.3" y="1477" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="309.30" y="1487.5" ></text>
</g>
<g >
<title>apparmor_file_permission (50,848,746 samples, 0.17%)</title><rect x="449.9" y="1445" width="2.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="452.93" y="1455.5" ></text>
</g>
<g >
<title>dequeue_task_fair (209,165,766 samples, 0.70%)</title><rect x="95.9" y="1301" width="8.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="98.94" y="1311.5" ></text>
</g>
<g >
<title>[bash] (35,828,311 samples, 0.12%)</title><rect x="804.3" y="1253" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="807.26" y="1263.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (50,989,278 samples, 0.17%)</title><rect x="784.7" y="1333" width="2.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="787.73" y="1343.5" ></text>
</g>
<g >
<title>sock_def_readable (275,589,454 samples, 0.92%)</title><rect x="715.4" y="917" width="10.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="718.36" y="927.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (51,193,346 samples, 0.17%)</title><rect x="1093.7" y="1445" width="2.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1096.67" y="1455.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (46,201,906 samples, 0.15%)</title><rect x="731.4" y="821" width="1.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="734.43" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1541" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1551.5" ></text>
</g>
<g >
<title>path_openat (329,549,665 samples, 1.10%)</title><rect x="488.3" y="1461" width="13.0" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="491.34" y="1471.5" ></text>
</g>
<g >
<title>newidle_balance (251,292,374 samples, 0.84%)</title><rect x="314.5" y="1301" width="9.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="317.47" y="1311.5" ></text>
</g>
<g >
<title>select_task_rq_fair (50,102,982 samples, 0.17%)</title><rect x="722.2" y="805" width="2.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="725.24" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1237" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1247.5" ></text>
</g>
<g >
<title>llist_add_batch (51,253,079 samples, 0.17%)</title><rect x="724.2" y="789" width="2.0" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="727.22" y="799.5" ></text>
</g>
<g >
<title>do_mmap (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1317" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="304.53" y="1327.5" ></text>
</g>
<g >
<title>cpu_startup_entry (848,416,759 samples, 2.84%)</title><rect x="1156.5" y="1461" width="33.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1159.50" y="1471.5" >cp..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="869" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="879.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (6,733,808 samples, 0.02%)</title><rect x="806.2" y="1509" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="809.16" y="1519.5" ></text>
</g>
<g >
<title>tcp_rcv_established (333,650,963 samples, 1.12%)</title><rect x="265.6" y="949" width="13.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="268.58" y="959.5" ></text>
</g>
<g >
<title>put_cpu_partial (6,131,814 samples, 0.02%)</title><rect x="806.2" y="1269" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="809.16" y="1279.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1285" width="2.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="360.45" y="1295.5" ></text>
</g>
<g >
<title>perf_evsel__ioctl (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1493" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="363.65" y="1503.5" ></text>
</g>
<g >
<title>[bash] (51,139,434 samples, 0.17%)</title><rect x="804.1" y="1493" width="2.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="807.14" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1029" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="1039.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (181,180,099 samples, 0.61%)</title><rect x="306.3" y="1525" width="7.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="309.30" y="1535.5" ></text>
</g>
<g >
<title>inet_sendmsg (7,345,738,547 samples, 24.58%)</title><rect x="512.2" y="1445" width="290.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="515.21" y="1455.5" >inet_sendmsg</text>
</g>
<g >
<title>override_creds (50,724,889 samples, 0.17%)</title><rect x="372.7" y="1445" width="2.0" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="375.68" y="1455.5" ></text>
</g>
<g >
<title>inet_sendmsg (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1461" width="10.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="886.97" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="85" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="95.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (206,368,341 samples, 0.69%)</title><rect x="873.8" y="1493" width="8.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="876.76" y="1503.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (161,390,233 samples, 0.54%)</title><rect x="18.2" y="901" width="6.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="21.25" y="911.5" ></text>
</g>
<g >
<title>dst_release (51,314,637 samples, 0.17%)</title><rect x="713.3" y="933" width="2.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="716.33" y="943.5" ></text>
</g>
<g >
<title>psi_task_switch (94,235,493 samples, 0.32%)</title><rect x="1186.3" y="1397" width="3.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1189.26" y="1407.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (52,769,202 samples, 0.18%)</title><rect x="22.5" y="805" width="2.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="25.54" y="815.5" ></text>
</g>
<g >
<title>client (7,329,613,114 samples, 24.52%)</title><rect x="10.0" y="1573" width="289.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" >client</text>
</g>
<g >
<title>__napi_poll (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1141" width="8.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="19.23" y="1151.5" ></text>
</g>
<g >
<title>reweight_entity (77,097,076 samples, 0.26%)</title><rect x="1111.2" y="1365" width="3.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1114.17" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (16,754,316 samples, 0.06%)</title><rect x="313.4" y="1541" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="316.45" y="1551.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,920,488,566 samples, 6.43%)</title><rect x="555.6" y="1333" width="75.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="558.59" y="1343.5" >get_page..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1077" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1087.5" ></text>
</g>
<g >
<title>[expr] (54,691,532 samples, 0.18%)</title><rect x="299.4" y="1557" width="2.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="302.37" y="1567.5" ></text>
</g>
<g >
<title>available_idle_cpu (50,738,536 samples, 0.17%)</title><rect x="729.4" y="789" width="2.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="732.43" y="799.5" ></text>
</g>
<g >
<title>__rcu_read_lock (51,250,474 samples, 0.17%)</title><rect x="499.3" y="1413" width="2.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="502.32" y="1423.5" ></text>
</g>
<g >
<title>mas_split.isra.0 (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1157" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="304.53" y="1167.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (44,992,910 samples, 0.15%)</title><rect x="478.6" y="1477" width="1.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="481.62" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1461" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="363.65" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (48,453,808 samples, 0.16%)</title><rect x="480.4" y="1509" width="1.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="483.40" y="1519.5" ></text>
</g>
<g >
<title>__switch_to_asm (103,053,094 samples, 0.34%)</title><rect x="869.7" y="1557" width="4.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="872.67" y="1567.5" ></text>
</g>
<g >
<title>inet_recvmsg (6,307,667,205 samples, 21.10%)</title><rect x="37.8" y="1445" width="249.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="40.80" y="1455.5" >inet_recvmsg</text>
</g>
<g >
<title>ip_local_out (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1317" width="10.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="886.97" y="1327.5" ></text>
</g>
<g >
<title>tcp_send_mss (51,304,645 samples, 0.17%)</title><rect x="769.8" y="1397" width="2.0" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="772.80" y="1407.5" ></text>
</g>
<g >
<title>sched_clock (46,444,338 samples, 0.16%)</title><rect x="115.5" y="1285" width="1.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="118.54" y="1295.5" ></text>
</g>
<g >
<title>ip_rcv_core (51,178,572 samples, 0.17%)</title><rect x="278.8" y="1045" width="2.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="281.75" y="1055.5" ></text>
</g>
<g >
<title>[libc.so.6] (54,691,532 samples, 0.18%)</title><rect x="299.4" y="1445" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="302.37" y="1455.5" ></text>
</g>
<g >
<title>__copy_skb_header (47,031,001 samples, 0.16%)</title><rect x="755.2" y="1301" width="1.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="758.23" y="1311.5" ></text>
</g>
<g >
<title>expand_string_assignment (12,346,463 samples, 0.04%)</title><rect x="805.7" y="1301" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="808.67" y="1311.5" ></text>
</g>
<g >
<title>copyout (2,579,069,967 samples, 8.63%)</title><rect x="131.7" y="1333" width="101.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="134.66" y="1343.5" >copyout</text>
</g>
<g >
<title>nf_ct_get_tuple (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1221" width="10.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="886.97" y="1231.5" ></text>
</g>
<g >
<title>__fget_light (50,259,829 samples, 0.17%)</title><rect x="881.9" y="1477" width="2.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="884.91" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="965" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="975.5" ></text>
</g>
<g >
<title>mod_memcg_state (87,068,152 samples, 0.29%)</title><rect x="233.5" y="1349" width="3.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="236.48" y="1359.5" ></text>
</g>
<g >
<title>woken_wake_function (96,940,442 samples, 0.32%)</title><rect x="729.4" y="869" width="3.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="732.43" y="879.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (6,018,096,244 samples, 20.14%)</title><rect x="49.2" y="1413" width="237.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="52.24" y="1423.5" >tcp_recvmsg_locked</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="517" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="527.5" ></text>
</g>
<g >
<title>ovl_open_realfile (126,255,944 samples, 0.42%)</title><rect x="492.4" y="1381" width="5.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="495.38" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1445" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="363.65" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (689,449,339 samples, 2.31%)</title><rect x="1156.5" y="1429" width="27.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1159.50" y="1439.5" >c..</text>
</g>
<g >
<title>__x64_sys_poll (206,368,341 samples, 0.69%)</title><rect x="873.8" y="1525" width="8.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="876.76" y="1535.5" ></text>
</g>
<g >
<title>[bash] (2,964,660 samples, 0.01%)</title><rect x="804.1" y="1301" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="807.14" y="1311.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (45,002,396 samples, 0.15%)</title><rect x="1152.7" y="1509" width="1.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1155.74" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (176,889,182 samples, 0.59%)</title><rect x="41.8" y="1381" width="6.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="44.75" y="1391.5" ></text>
</g>
<g >
<title>poll_idle (4,245,085,033 samples, 14.20%)</title><rect x="914.6" y="1429" width="167.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="917.61" y="1439.5" >poll_idle</text>
</g>
<g >
<title>__x64_sys_clone (74,950,216 samples, 0.25%)</title><rect x="334.1" y="1365" width="2.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="337.08" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,674,245,930 samples, 22.33%)</title><rect x="34.4" y="1525" width="263.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="37.44" y="1535.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="389" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="399.5" ></text>
</g>
<g >
<title>try_charge_memcg (50,790,610 samples, 0.17%)</title><rect x="800.2" y="1349" width="2.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="803.21" y="1359.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (649,510,308 samples, 2.17%)</title><rect x="259.2" y="1173" width="25.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="262.17" y="1183.5" >_..</text>
</g>
<g >
<title>Builtins_LoadIC (8,536,715 samples, 0.03%)</title><rect x="347.3" y="1541" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="350.35" y="1551.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (50,921,046 samples, 0.17%)</title><rect x="735.3" y="949" width="2.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="738.28" y="959.5" ></text>
</g>
<g >
<title>exec_mmap (6,733,808 samples, 0.02%)</title><rect x="806.2" y="1397" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="809.16" y="1407.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (444,825,091 samples, 1.49%)</title><rect x="261.2" y="1013" width="17.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="264.19" y="1023.5" ></text>
</g>
<g >
<title>schedule_timeout (769,034,648 samples, 2.57%)</title><rect x="87.0" y="1365" width="30.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="90.01" y="1375.5" >sc..</text>
</g>
<g >
<title>[bash] (51,139,434 samples, 0.17%)</title><rect x="804.1" y="1445" width="2.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="807.14" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1061" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1071.5" ></text>
</g>
<g >
<title>nf_conntrack_in (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1253" width="10.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="886.97" y="1263.5" ></text>
</g>
<g >
<title>wake_up_q (14,846,610 samples, 0.05%)</title><rect x="359.9" y="1317" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="362.92" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_lock (52,014,082 samples, 0.17%)</title><rect x="695.7" y="997" width="2.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="698.71" y="1007.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (796,168,751 samples, 2.66%)</title><rect x="255.4" y="1189" width="31.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="258.40" y="1199.5" >__..</text>
</g>
<g >
<title>futex_wait (251,292,374 samples, 0.84%)</title><rect x="314.5" y="1397" width="9.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="317.47" y="1407.5" ></text>
</g>
<g >
<title>napi_consume_skb (168,009,765 samples, 0.56%)</title><rect x="739.5" y="1125" width="6.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="742.45" y="1135.5" ></text>
</g>
<g >
<title>do_syscall_64 (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1541" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="360.45" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (51,139,434 samples, 0.17%)</title><rect x="804.1" y="1525" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="807.14" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1013" width="8.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="19.23" y="1023.5" ></text>
</g>
<g >
<title>ip_finish_output (1,984,336,999 samples, 6.64%)</title><rect x="671.4" y="1269" width="78.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="674.42" y="1279.5" >ip_finish..</text>
</g>
<g >
<title>tcp_schedule_loss_probe (100,437,809 samples, 0.34%)</title><rect x="763.8" y="1349" width="3.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="766.77" y="1359.5" ></text>
</g>
<g >
<title>ip_output (949,021,287 samples, 3.18%)</title><rect x="249.4" y="1269" width="37.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="252.36" y="1279.5" >ip_..</text>
</g>
<g >
<title>copyin (627,724,003 samples, 2.10%)</title><rect x="635.5" y="1365" width="24.8" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="638.53" y="1375.5" >c..</text>
</g>
<g >
<title>__cond_resched (51,246,052 samples, 0.17%)</title><rect x="37.8" y="1413" width="2.0" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="40.80" y="1423.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (342,570,371 samples, 1.15%)</title><rect x="265.2" y="965" width="13.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="268.23" y="975.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1509" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="363.65" y="1519.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (46,953,952 samples, 0.16%)</title><rect x="1170.0" y="1349" width="1.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1173.04" y="1359.5" ></text>
</g>
<g >
<title>psi_group_change (95,010,375 samples, 0.32%)</title><rect x="461.8" y="1365" width="3.8" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="464.85" y="1375.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1,065,898,866 samples, 3.57%)</title><rect x="244.8" y="1317" width="42.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="247.75" y="1327.5" >ip_..</text>
</g>
<g >
<title>do_syscall_64 (18,285,859 samples, 0.06%)</title><rect x="359.9" y="1461" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="362.92" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (49,560,688 samples, 0.17%)</title><rect x="77.0" y="1365" width="2.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="80.05" y="1375.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (9,872,905 samples, 0.03%)</title><rect x="805.7" y="1173" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="808.67" y="1183.5" ></text>
</g>
<g >
<title>tcp_recvmsg (48,620,286 samples, 0.16%)</title><rect x="503.4" y="1445" width="1.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="506.37" y="1455.5" ></text>
</g>
<g >
<title>consume_stock (49,985,559 samples, 0.17%)</title><rect x="796.2" y="1317" width="2.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="799.22" y="1327.5" ></text>
</g>
<g >
<title>rw_verify_area (51,254,773 samples, 0.17%)</title><rect x="444.7" y="1429" width="2.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="447.73" y="1439.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1205" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="304.53" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (96,741,783 samples, 0.32%)</title><rect x="73.2" y="1365" width="3.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="76.23" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (113,974,145 samples, 0.38%)</title><rect x="301.8" y="1557" width="4.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="304.80" y="1567.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (399,473,180 samples, 1.34%)</title><rect x="520.1" y="1381" width="15.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="523.13" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18,285,859 samples, 0.06%)</title><rect x="359.9" y="1477" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="362.92" y="1487.5" ></text>
</g>
<g >
<title>update_load_avg (101,937,551 samples, 0.34%)</title><rect x="1114.2" y="1381" width="4.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1117.21" y="1391.5" ></text>
</g>
<g >
<title>ttwu_do_activate (62,888,808 samples, 0.21%)</title><rect x="1183.7" y="1381" width="2.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1186.72" y="1391.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (52,688,722 samples, 0.18%)</title><rect x="357.4" y="1477" width="2.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="360.45" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1509" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1519.5" ></text>
</g>
<g >
<title>backing_file_open (126,255,944 samples, 0.42%)</title><rect x="492.4" y="1365" width="5.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="495.38" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_openat (380,834,130 samples, 1.27%)</title><rect x="488.3" y="1509" width="15.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="491.34" y="1519.5" ></text>
</g>
<g >
<title>__mmput (6,733,808 samples, 0.02%)</title><rect x="806.2" y="1365" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="809.16" y="1375.5" ></text>
</g>
<g >
<title>parse_and_execute (51,139,434 samples, 0.17%)</title><rect x="804.1" y="1477" width="2.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="807.14" y="1487.5" ></text>
</g>
<g >
<title>generic_exec_single (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1317" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="363.65" y="1327.5" ></text>
</g>
<g >
<title>lock_timer_base (49,878,093 samples, 0.17%)</title><rect x="765.8" y="1285" width="1.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="768.77" y="1295.5" ></text>
</g>
<g >
<title>__libc_pread (2,150,559,217 samples, 7.20%)</title><rect x="368.9" y="1557" width="84.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="371.91" y="1567.5" >__libc_pr..</text>
</g>
<g >
<title>remove_wait_queue (250,097,059 samples, 0.84%)</title><rect x="69.1" y="1381" width="9.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="72.13" y="1391.5" ></text>
</g>
<g >
<title>uv__fs_read (7,373,605 samples, 0.02%)</title><rect x="314.2" y="1493" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="317.17" y="1503.5" ></text>
</g>
<g >
<title>rebalance_domains (200,016,704 samples, 0.67%)</title><rect x="902.3" y="1333" width="7.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="905.30" y="1343.5" ></text>
</g>
<g >
<title>_copy_from_iter (627,724,003 samples, 2.10%)</title><rect x="635.5" y="1381" width="24.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="638.53" y="1391.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1125" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1135.5" ></text>
</g>
<g >
<title>pick_next_task_fair (251,292,374 samples, 0.84%)</title><rect x="314.5" y="1317" width="9.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="317.47" y="1327.5" ></text>
</g>
<g >
<title>Builtins_LoadIC (241,591,013 samples, 0.81%)</title><rect x="324.5" y="1541" width="9.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="327.54" y="1551.5" ></text>
</g>
<g >
<title>sock_def_readable (161,390,233 samples, 0.54%)</title><rect x="18.2" y="933" width="6.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="21.25" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,519,642,387 samples, 25.16%)</title><rect x="507.3" y="1541" width="296.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="510.25" y="1551.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>irqentry_exit_to_user_mode (9,872,905 samples, 0.03%)</title><rect x="805.7" y="1189" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="808.67" y="1199.5" ></text>
</g>
<g >
<title>ip_queue_xmit (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1349" width="8.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="19.23" y="1359.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (51,239,670 samples, 0.17%)</title><rect x="761.7" y="1333" width="2.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="764.75" y="1343.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (96,285,567 samples, 0.32%)</title><rect x="476.6" y="1509" width="3.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="479.60" y="1519.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (62,888,808 samples, 0.21%)</title><rect x="1183.7" y="1413" width="2.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1186.72" y="1423.5" ></text>
</g>
<g >
<title>Builtins_CallFunction_ReceiverIsNotNullOrUndefined (3,157,614 samples, 0.01%)</title><rect x="324.4" y="1541" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="327.42" y="1551.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2,575,393 samples, 0.01%)</title><rect x="301.4" y="1269" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="304.43" y="1279.5" ></text>
</g>
<g >
<title>sock_rfree (138,213,367 samples, 0.46%)</title><rect x="233.5" y="1397" width="5.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="236.48" y="1407.5" ></text>
</g>
<g >
<title>__schedule (252,595,268 samples, 0.85%)</title><rect x="1140.7" y="1477" width="9.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1143.68" y="1487.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1269" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="304.53" y="1279.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1397" width="8.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="19.23" y="1407.5" ></text>
</g>
<g >
<title>[bash] (12,346,463 samples, 0.04%)</title><rect x="805.7" y="1365" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="808.67" y="1375.5" ></text>
</g>
<g >
<title>default_wake_function (129,637,007 samples, 0.43%)</title><rect x="721.1" y="837" width="5.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="724.12" y="847.5" ></text>
</g>
<g >
<title>refill_stock (34,329,028 samples, 0.11%)</title><rect x="275.8" y="853" width="1.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="278.76" y="863.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1413" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="304.53" y="1423.5" ></text>
</g>
<g >
<title>__kfree_skb (59,077,093 samples, 0.20%)</title><rect x="520.1" y="1349" width="2.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="523.13" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="981" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="991.5" ></text>
</g>
<g >
<title>generic_permission (51,170,521 samples, 0.17%)</title><rect x="488.3" y="1365" width="2.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="491.34" y="1375.5" ></text>
</g>
<g >
<title>sk_reset_timer (51,239,670 samples, 0.17%)</title><rect x="761.7" y="1317" width="2.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="764.75" y="1327.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (9,872,905 samples, 0.03%)</title><rect x="805.7" y="1237" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="808.67" y="1247.5" ></text>
</g>
<g >
<title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1557" width="9.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="350.85" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (6,344,389,208 samples, 21.23%)</title><rect x="36.4" y="1493" width="250.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="39.40" y="1503.5" >__x64_sys_recvfrom</text>
</g>
<g >
<title>tcp_established_options (51,085,039 samples, 0.17%)</title><rect x="24.6" y="1381" width="2.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="27.62" y="1391.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (3,272,047 samples, 0.01%)</title><rect x="1183.6" y="1365" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1186.58" y="1375.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2,199,810,073 samples, 7.36%)</title><rect x="664.4" y="1317" width="86.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="667.43" y="1327.5" >__ip_queue..</text>
</g>
<g >
<title>_raw_spin_lock_bh (75,268,638 samples, 0.25%)</title><rect x="13.3" y="1429" width="2.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="16.26" y="1439.5" ></text>
</g>
<g >
<title>__ip_local_out (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1301" width="10.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="886.97" y="1311.5" ></text>
</g>
<g >
<title>__inet_lookup_established (50,952,650 samples, 0.17%)</title><rect x="261.2" y="965" width="2.0" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="264.19" y="975.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (42,320,898 samples, 0.14%)</title><rect x="748.1" y="1205" width="1.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="751.09" y="1215.5" ></text>
</g>
<g >
<title>tcp_data_ready (275,589,454 samples, 0.92%)</title><rect x="715.4" y="933" width="10.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="718.36" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="741" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="751.5" ></text>
</g>
<g >
<title>lock_sock_nested (51,843,412 samples, 0.17%)</title><rect x="516.2" y="1413" width="2.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="519.21" y="1423.5" ></text>
</g>
<g >
<title>napi_consume_skb (51,173,162 samples, 0.17%)</title><rect x="282.8" y="1109" width="2.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="285.79" y="1119.5" ></text>
</g>
<g >
<title>[libc.so.6] (260,317,267 samples, 0.87%)</title><rect x="314.1" y="1557" width="10.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="317.11" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver (444,825,091 samples, 1.49%)</title><rect x="261.2" y="1029" width="17.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="264.19" y="1039.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (93,352,964 samples, 0.31%)</title><rect x="532.2" y="1349" width="3.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="535.21" y="1359.5" ></text>
</g>
<g >
<title>process_backlog (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1125" width="8.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="19.23" y="1135.5" ></text>
</g>
<g >
<title>cpu_startup_entry (6,643,399,343 samples, 22.23%)</title><rect x="894.2" y="1525" width="262.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="897.22" y="1535.5" >cpu_startup_entry</text>
</g>
<g >
<title>__ip_finish_output (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1269" width="8.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="19.23" y="1279.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (308,673,931 samples, 1.03%)</title><rect x="788.0" y="1349" width="12.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="791.02" y="1359.5" ></text>
</g>
<g >
<title>call_cpuidle (4,847,401,684 samples, 16.22%)</title><rect x="902.3" y="1477" width="191.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="905.30" y="1487.5" >call_cpuidle</text>
</g>
<g >
<title>update_cfs_group (77,097,076 samples, 0.26%)</title><rect x="1111.2" y="1381" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1114.17" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (51,234,625 samples, 0.17%)</title><rect x="284.8" y="1093" width="2.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="287.81" y="1103.5" ></text>
</g>
<g >
<title>ip_queue_xmit (256,323,754 samples, 0.86%)</title><rect x="884.0" y="1349" width="10.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="886.97" y="1359.5" ></text>
</g>
<g >
<title>arch_call_rest_init (848,416,759 samples, 2.84%)</title><rect x="1156.5" y="1493" width="33.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1159.50" y="1503.5" >ar..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="373" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="383.5" ></text>
</g>
<g >
<title>tcp_data_ready (229,028,631 samples, 0.77%)</title><rect x="726.2" y="949" width="9.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="729.24" y="959.5" ></text>
</g>
<g >
<title>[grep] (113,974,145 samples, 0.38%)</title><rect x="301.8" y="1509" width="4.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="304.80" y="1519.5" ></text>
</g>
<g >
<title>cache_from_obj (51,173,162 samples, 0.17%)</title><rect x="282.8" y="1077" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="285.79" y="1087.5" ></text>
</g>
<g >
<title>__wake_up_common (103,846,540 samples, 0.35%)</title><rect x="20.5" y="885" width="4.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="23.52" y="895.5" ></text>
</g>
<g >
<title>page_counter_try_charge (51,195,519 samples, 0.17%)</title><rect x="798.2" y="1317" width="2.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="801.19" y="1327.5" ></text>
</g>
<g >
<title>check_spread.isra.0 (147,245,671 samples, 0.49%)</title><rect x="1105.4" y="1381" width="5.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1108.35" y="1391.5" ></text>
</g>
<g >
<title>[grep] (113,974,145 samples, 0.38%)</title><rect x="301.8" y="1477" width="4.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="304.80" y="1487.5" ></text>
</g>
<g >
<title>poll_select_finish (38,226,498 samples, 0.13%)</title><rect x="475.1" y="1477" width="1.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="478.09" y="1487.5" ></text>
</g>
<g >
<title>tcp_rcv_established (161,390,233 samples, 0.54%)</title><rect x="18.2" y="981" width="6.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="21.25" y="991.5" ></text>
</g>
<g >
<title>schedule (251,292,374 samples, 0.84%)</title><rect x="314.5" y="1365" width="9.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="317.47" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="69" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="79.5" ></text>
</g>
<g >
<title>write (7,569,375,354 samples, 25.33%)</title><rect x="505.3" y="1557" width="298.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="508.29" y="1567.5" >write</text>
</g>
<g >
<title>woken_wake_function (129,637,007 samples, 0.43%)</title><rect x="721.1" y="853" width="5.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="724.12" y="863.5" ></text>
</g>
<g >
<title>kmem_cache_free (51,136,566 samples, 0.17%)</title><rect x="267.5" y="901" width="2.0" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="270.51" y="911.5" ></text>
</g>
<g >
<title>tcp_write_xmit (2,675,640,280 samples, 8.95%)</title><rect x="662.1" y="1365" width="105.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="665.10" y="1375.5" >tcp_write_xmit</text>
</g>
<g >
<title>__rdgsbase_inactive (3,353,469 samples, 0.01%)</title><rect x="866.2" y="1557" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="869.21" y="1567.5" ></text>
</g>
<g >
<title>inode_permission (102,363,790 samples, 0.34%)</title><rect x="488.3" y="1413" width="4.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="491.34" y="1423.5" ></text>
</g>
<g >
<title>security_file_permission (51,254,773 samples, 0.17%)</title><rect x="444.7" y="1413" width="2.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="447.73" y="1423.5" ></text>
</g>
<g >
<title>main (152,523,911 samples, 0.51%)</title><rect x="482.3" y="1557" width="6.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="485.31" y="1567.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1525" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="363.65" y="1535.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (407,153,781 samples, 1.36%)</title><rect x="16.2" y="1429" width="16.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="19.23" y="1439.5" ></text>
</g>
<g >
<title>init_file (126,255,944 samples, 0.42%)</title><rect x="492.4" y="1333" width="5.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="495.38" y="1343.5" ></text>
</g>
<g >
<title>ovl_real_fdget (51,285,270 samples, 0.17%)</title><rect x="360.8" y="1445" width="2.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="363.83" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (4,796,145,443 samples, 16.05%)</title><rect x="902.3" y="1445" width="189.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="905.30" y="1455.5" >cpuidle_enter_state</text>
</g>
<g >
<title>__cmd_record.constprop.0 (22,961,067 samples, 0.08%)</title><rect x="359.9" y="1557" width="0.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="362.92" y="1567.5" ></text>
</g>
<g >
<title>vfs_open (126,255,944 samples, 0.42%)</title><rect x="492.4" y="1429" width="5.0" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="495.38" y="1439.5" ></text>
</g>
<g >
<title>run_rebalance_domains (200,016,704 samples, 0.67%)</title><rect x="902.3" y="1349" width="7.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="905.30" y="1359.5" ></text>
</g>
<g >
<title>schedule_idle (95,661,929 samples, 0.32%)</title><rect x="1186.2" y="1429" width="3.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1189.21" y="1439.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (9,211,429 samples, 0.03%)</title><rect x="297.6" y="1509" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="300.58" y="1519.5" ></text>
</g>
<g >
<title>do_vmi_munmap (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1285" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="304.53" y="1295.5" ></text>
</g>
<g >
<title>main (7,329,613,114 samples, 24.52%)</title><rect x="10.0" y="1557" width="289.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" >main</text>
</g>
<g >
<title>try_charge_memcg (125,715,140 samples, 0.42%)</title><rect x="43.8" y="1301" width="4.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="46.77" y="1311.5" ></text>
</g>
<g >
<title>__sys_sendto (482,422,419 samples, 1.61%)</title><rect x="13.3" y="1477" width="19.0" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="16.26" y="1487.5" ></text>
</g>
<g >
<title>mas_wr_bnode (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1173" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="304.53" y="1183.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (48,017,496 samples, 0.16%)</title><rect x="235.0" y="1333" width="1.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="238.03" y="1343.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (2,987,584 samples, 0.01%)</title><rect x="306.3" y="1509" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="309.30" y="1519.5" ></text>
</g>
<g >
<title>__napi_poll (1,212,844,977 samples, 4.06%)</title><rect x="691.6" y="1125" width="47.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="694.57" y="1135.5" >__na..</text>
</g>
<g >
<title>kmem_cache_free (7,785,482 samples, 0.03%)</title><rect x="522.2" y="1301" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="525.15" y="1311.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (6,743,264,936 samples, 22.56%)</title><rect x="536.0" y="1413" width="266.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="538.99" y="1423.5" >tcp_sendmsg_locked</text>
</g>
<g >
<title>sched_clock_noinstr (50,590,131 samples, 0.17%)</title><rect x="1148.7" y="1413" width="1.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1151.65" y="1423.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (496,003,663 samples, 1.66%)</title><rect x="261.2" y="1061" width="19.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="264.19" y="1071.5" ></text>
</g>
<g >
<title>ret_from_fork (2,964,660 samples, 0.01%)</title><rect x="804.1" y="1205" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="807.14" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="293" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="303.5" ></text>
</g>
<g >
<title>[grep] (113,974,145 samples, 0.38%)</title><rect x="301.8" y="1541" width="4.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="304.80" y="1551.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (2,081,529,684 samples, 6.96%)</title><rect x="551.3" y="1381" width="82.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="554.26" y="1391.5" >skb_page_..</text>
</g>
<g >
<title>update_load_avg (20,904,711 samples, 0.07%)</title><rect x="1147.8" y="1413" width="0.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1150.83" y="1423.5" ></text>
</g>
<g >
<title>remove_vma (6,131,814 samples, 0.02%)</title><rect x="806.2" y="1333" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="809.16" y="1343.5" ></text>
</g>
<g >
<title>mod_memcg_state (48,272,128 samples, 0.16%)</title><rect x="528.2" y="1269" width="1.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="531.23" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,150,559,217 samples, 7.20%)</title><rect x="368.9" y="1541" width="84.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="371.91" y="1551.5" >entry_SYS..</text>
</g>
<g >
<title>cpuacct_charge (113,612,388 samples, 0.38%)</title><rect x="97.7" y="1253" width="4.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="100.75" y="1263.5" ></text>
</g>
<g >
<title>ovl_override_creds (51,193,269 samples, 0.17%)</title><rect x="490.4" y="1381" width="2.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="493.36" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_close (51,285,270 samples, 0.17%)</title><rect x="360.8" y="1509" width="2.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="363.83" y="1519.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (1,733,083,041 samples, 5.80%)</title><rect x="677.7" y="1173" width="68.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="680.66" y="1183.5" >do_soft..</text>
</g>
<g >
<title>menu_select (51,193,346 samples, 0.17%)</title><rect x="1093.7" y="1461" width="2.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1096.67" y="1471.5" ></text>
</g>
<g >
<title>tcp_ack (192,359,306 samples, 0.64%)</title><rect x="269.5" y="933" width="7.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="272.53" y="943.5" ></text>
</g>
<g >
<title>[bash] (2,964,660 samples, 0.01%)</title><rect x="804.1" y="1285" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="807.14" y="1295.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (51,254,773 samples, 0.17%)</title><rect x="444.7" y="1397" width="2.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="447.73" y="1407.5" ></text>
</g>
<g >
<title>page_counter_uncharge (51,145,215 samples, 0.17%)</title><rect x="236.9" y="1301" width="2.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="239.92" y="1311.5" ></text>
</g>
<g >
<title>wait_woken (971,882,018 samples, 3.25%)</title><rect x="79.0" y="1381" width="38.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="82.01" y="1391.5" >wai..</text>
</g>
<g >
<title>rb_first (51,058,868 samples, 0.17%)</title><rect x="273.3" y="917" width="2.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="276.29" y="927.5" ></text>
</g>
<g >
<title>__check_object_size (182,036,516 samples, 0.61%)</title><rect x="124.5" y="1349" width="7.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="127.48" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1493" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1509" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="304.53" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (3,551,392 samples, 0.01%)</title><rect x="347.7" y="1557" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="350.70" y="1567.5" ></text>
</g>
<g >
<title>__libc_start_main (51,139,434 samples, 0.17%)</title><rect x="804.1" y="1541" width="2.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="807.14" y="1551.5" ></text>
</g>
<g >
<title>schedule (146,710,115 samples, 0.49%)</title><rect x="459.8" y="1413" width="5.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="462.81" y="1423.5" ></text>
</g>
<g >
<title>__slab_free (7,785,482 samples, 0.03%)</title><rect x="522.2" y="1285" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="525.15" y="1295.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (7,785,482 samples, 0.03%)</title><rect x="522.2" y="1269" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="525.15" y="1279.5" ></text>
</g>
<g >
<title>apparmor_file_permission (51,214,806 samples, 0.17%)</title><rect x="447.9" y="1461" width="2.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="450.90" y="1471.5" ></text>
</g>
<g >
<title>[bash] (12,346,463 samples, 0.04%)</title><rect x="805.7" y="1317" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="808.67" y="1327.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (197,392,919 samples, 0.66%)</title><rect x="902.4" y="1285" width="7.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="905.40" y="1295.5" ></text>
</g>
<g >
<title>security_file_alloc (126,255,944 samples, 0.42%)</title><rect x="492.4" y="1317" width="5.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="495.38" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1365" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="304.53" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1317" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="421" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="431.5" ></text>
</g>
<g >
<title>expr (61,325,947 samples, 0.21%)</title><rect x="299.4" y="1573" width="2.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="302.37" y="1583.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (148,247,482 samples, 0.50%)</title><rect x="729.4" y="917" width="5.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="732.43" y="927.5" ></text>
</g>
<g >
<title>__alloc_pages (2,025,876,482 samples, 6.78%)</title><rect x="553.5" y="1349" width="79.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="556.45" y="1359.5" >__alloc_p..</text>
</g>
<g >
<title>__release_sock (399,473,180 samples, 1.34%)</title><rect x="520.1" y="1397" width="15.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="523.13" y="1407.5" ></text>
</g>
<g >
<title>__alloc_skb (97,874,804 samples, 0.33%)</title><rect x="240.9" y="1333" width="3.9" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="243.89" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (51,081,542 samples, 0.17%)</title><rect x="691.6" y="1109" width="2.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="694.57" y="1119.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (680,875,437 samples, 2.28%)</title><rect x="633.4" y="1397" width="26.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="636.43" y="1407.5" >s..</text>
</g>
<g >
<title>InotifyBackend::handleEvent (181,180,099 samples, 0.61%)</title><rect x="306.3" y="1541" width="7.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="309.30" y="1551.5" ></text>
</g>
<g >
<title>__switch_to (84,218,526 samples, 0.28%)</title><rect x="866.3" y="1557" width="3.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="869.34" y="1567.5" ></text>
</g>
<g >
<title>get_cached_acl (51,170,521 samples, 0.17%)</title><rect x="488.3" y="1333" width="2.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="491.34" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (575,096,819 samples, 1.92%)</title><rect x="457.7" y="1541" width="22.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="460.70" y="1551.5" >e..</text>
</g>
<g >
<title>uv__spawn_and_init_child (76,148,864 samples, 0.25%)</title><rect x="334.1" y="1461" width="3.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="337.08" y="1471.5" ></text>
</g>
<g >
<title>loopback_xmit (50,758,924 samples, 0.17%)</title><rect x="746.1" y="1173" width="2.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="749.08" y="1183.5" ></text>
</g>
<g >
<title>__x64_sys_write (7,420,860,810 samples, 24.83%)</title><rect x="509.2" y="1509" width="293.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="512.24" y="1519.5" >__x64_sys_write</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="789" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="799.5" ></text>
</g>
<g >
<title>exec_binprm (6,733,808 samples, 0.02%)</title><rect x="806.2" y="1461" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="809.16" y="1471.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (4,675,208 samples, 0.02%)</title><rect x="360.6" y="1381" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="363.65" y="1391.5" ></text>
</g>
<g >
<title>vfs_write (7,420,860,810 samples, 24.83%)</title><rect x="509.2" y="1477" width="293.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="512.24" y="1487.5" >vfs_write</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="581" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1285" width="9.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.85" y="1295.5" ></text>
</g>
<g >
<title>copy_p4d_range (74,950,216 samples, 0.25%)</title><rect x="334.1" y="1253" width="2.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="337.08" y="1263.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (52,503,840 samples, 0.18%)</title><rect x="530.1" y="1333" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="533.14" y="1343.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,575,393 samples, 0.01%)</title><rect x="301.4" y="1317" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="304.43" y="1327.5" ></text>
</g>
<g >
<title>skb_free_head (7,785,482 samples, 0.03%)</title><rect x="522.2" y="1317" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="525.15" y="1327.5" ></text>
</g>
<g >
<title>__ip_finish_output (1,984,336,999 samples, 6.64%)</title><rect x="671.4" y="1253" width="78.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="674.42" y="1263.5" >__ip_fini..</text>
</g>
<g >
<title>ep_poll (3,431,189 samples, 0.01%)</title><rect x="359.6" y="1461" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="362.57" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="469" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="479.5" ></text>
</g>
<g >
<title>free_compound_page (90,366,899 samples, 0.30%)</title><rect x="524.7" y="1253" width="3.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="527.66" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (515,435,359 samples, 1.72%)</title><rect x="873.7" y="1541" width="20.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="876.74" y="1551.5" ></text>
</g>
<g >
<title>set_next_entity (20,904,711 samples, 0.07%)</title><rect x="1147.8" y="1429" width="0.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1150.83" y="1439.5" ></text>
</g>
<g >
<title>do_sys_poll (206,368,341 samples, 0.69%)</title><rect x="873.8" y="1509" width="8.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="876.76" y="1519.5" ></text>
</g>
<g >
<title>ip_output (2,150,191,885 samples, 7.19%)</title><rect x="666.4" y="1285" width="84.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="669.39" y="1295.5" >ip_output</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="181" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="191.5" ></text>
</g>
<g >
<title>tcp_send_ack (1,163,773,670 samples, 3.89%)</title><rect x="240.9" y="1365" width="45.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="243.89" y="1375.5" >tcp_..</text>
</g>
<g >
<title>native_sched_clock (46,953,952 samples, 0.16%)</title><rect x="1170.0" y="1333" width="1.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1173.04" y="1343.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (51,264,292 samples, 0.17%)</title><rect x="366.9" y="1397" width="2.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="369.89" y="1407.5" ></text>
</g>
<g >
<title>bprm_execve (6,733,808 samples, 0.02%)</title><rect x="806.2" y="1493" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="809.16" y="1503.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (148,617,561 samples, 0.50%)</title><rect x="438.9" y="1349" width="5.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="441.86" y="1359.5" ></text>
</g>
<g >
<title>psi_group_change (208,073,625 samples, 0.70%)</title><rect x="1122.3" y="1397" width="8.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1125.28" y="1407.5" ></text>
</g>
<g >
<title>__mod_memcg_state (48,272,128 samples, 0.16%)</title><rect x="528.2" y="1253" width="1.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="531.23" y="1263.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1461" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="304.53" y="1471.5" ></text>
</g>
<g >
<title>irq_exit_rcu (200,334,801 samples, 0.67%)</title><rect x="902.3" y="1397" width="7.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="905.30" y="1407.5" ></text>
</g>
<g >
<title>ip_local_out (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1317" width="8.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="19.23" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="885" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="895.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (117,851,472 samples, 0.39%)</title><rect x="290.9" y="1429" width="4.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="293.91" y="1439.5" ></text>
</g>
<g >
<title>mas_replace (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1125" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="304.53" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1461" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (54,691,532 samples, 0.18%)</title><rect x="299.4" y="1461" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="302.37" y="1471.5" ></text>
</g>
<g >
<title>__tcp_select_window (8,352,853 samples, 0.03%)</title><rect x="664.1" y="1333" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="667.10" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_read (7,373,605 samples, 0.02%)</title><rect x="314.2" y="1429" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="317.17" y="1439.5" ></text>
</g>
<g >
<title>__mod_memcg_state (156,418,094 samples, 0.52%)</title><rect x="788.0" y="1317" width="6.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="791.02" y="1327.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1,065,898,866 samples, 3.57%)</title><rect x="244.8" y="1301" width="42.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="247.75" y="1311.5" >__i..</text>
</g>
<g >
<title>exit_to_user_mode_loop (219,749,110 samples, 0.74%)</title><rect x="288.9" y="1461" width="8.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="291.90" y="1471.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (46,249,800 samples, 0.15%)</title><rect x="275.3" y="917" width="1.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="278.30" y="927.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (1,213,024,622 samples, 4.06%)</title><rect x="238.9" y="1397" width="47.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="241.94" y="1407.5" >tcp_..</text>
</g>
<g >
<title>[perf-1062684.map] (326,594,409 samples, 1.09%)</title><rect x="334.1" y="1557" width="12.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="337.08" y="1567.5" ></text>
</g>
<g >
<title>recv (48,620,286 samples, 0.16%)</title><rect x="503.4" y="1557" width="1.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="506.37" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,634,415 samples, 0.02%)</title><rect x="301.5" y="1429" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="304.53" y="1439.5" ></text>
</g>
<g >
<title>check_tsc_unstable (51,250,292 samples, 0.17%)</title><rect x="900.3" y="1477" width="2.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="903.27" y="1487.5" ></text>
</g>
<g >
<title>tcp_sendmsg (482,422,419 samples, 1.61%)</title><rect x="13.3" y="1445" width="19.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="16.26" y="1455.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1189" width="8.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="19.23" y="1199.5" ></text>
</g>
<g >
<title>sleep (3,425,670 samples, 0.01%)</title><rect x="806.4" y="1573" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="809.44" y="1583.5" ></text>
</g>
<g >
<title>destroy_large_folio (90,366,899 samples, 0.30%)</title><rect x="524.7" y="1269" width="3.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="527.66" y="1279.5" ></text>
</g>
<g >
<title>intel_idle (111,673,825 samples, 0.37%)</title><rect x="910.2" y="1429" width="4.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="913.21" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (178,192,515 samples, 0.60%)</title><rect x="306.4" y="1509" width="7.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="309.41" y="1519.5" ></text>
</g>
<g >
<title>__sched_setaffinity (18,285,859 samples, 0.06%)</title><rect x="359.9" y="1413" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="362.92" y="1423.5" ></text>
</g>
<g >
<title>getname (51,284,465 samples, 0.17%)</title><rect x="501.3" y="1477" width="2.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="504.35" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="213" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="223.5" ></text>
</g>
<g >
<title>drain_stock (34,329,028 samples, 0.11%)</title><rect x="275.8" y="837" width="1.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="278.76" y="847.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (212,538,161 samples, 0.71%)</title><rect x="16.2" y="1205" width="8.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="19.23" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,007,909 samples, 0.81%)</title><rect x="347.9" y="1109" width="9.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.85" y="1119.5" ></text>
</g>
</g>
</svg>
