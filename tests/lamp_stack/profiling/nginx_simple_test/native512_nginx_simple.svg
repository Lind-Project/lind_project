<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1654" onload="init(evt)" viewBox="0 0 1200 1654" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1654.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1637" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1637" > </text>
<g id="frames">
<g >
<title>__ip_queue_xmit (364,091,308 samples, 0.54%)</title><rect x="941.2" y="901" width="6.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="944.18" y="911.5" ></text>
</g>
<g >
<title>run_rebalance_domains (24,175,499 samples, 0.04%)</title><rect x="447.2" y="1349" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="450.23" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1253" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1263.5" ></text>
</g>
<g >
<title>process_one_work (10,381,081 samples, 0.02%)</title><rect x="380.6" y="1509" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="383.55" y="1519.5" ></text>
</g>
<g >
<title>tcp_options_write (51,215,405 samples, 0.08%)</title><rect x="697.5" y="1317" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="700.54" y="1327.5" ></text>
</g>
<g >
<title>rest_init (204,151,227 samples, 0.30%)</title><rect x="1186.4" y="1493" width="3.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1189.45" y="1503.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (694,552,848 samples, 1.02%)</title><rect x="684.6" y="1301" width="12.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="687.57" y="1311.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (4,518,128,722 samples, 6.66%)</title><rect x="913.0" y="1221" width="78.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="916.04" y="1231.5" >__local_b..</text>
</g>
<g >
<title>fib6_dump_table.isra.0 (10,048,801 samples, 0.01%)</title><rect x="377.7" y="1397" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="380.67" y="1407.5" ></text>
</g>
<g >
<title>tcp_wmem_schedule (663,572,043 samples, 0.98%)</title><rect x="1020.4" y="1413" width="11.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1023.39" y="1423.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1237" width="4.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1098.40" y="1247.5" ></text>
</g>
<g >
<title>[bash] (497,305,305 samples, 0.73%)</title><rect x="1034.8" y="1317" width="8.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1037.83" y="1327.5" ></text>
</g>
<g >
<title>ip_rcv_core (100,663,930 samples, 0.15%)</title><rect x="973.3" y="1077" width="1.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="976.25" y="1087.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (11,006,196 samples, 0.02%)</title><rect x="377.5" y="1349" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="380.47" y="1359.5" ></text>
</g>
<g >
<title>kfree_skbmem (51,330,513 samples, 0.08%)</title><rect x="678.3" y="1349" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="681.27" y="1359.5" ></text>
</g>
<g >
<title>copy_process (258,728,138 samples, 0.38%)</title><rect x="1034.8" y="1077" width="4.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1037.84" y="1087.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (7,445,876,074 samples, 10.98%)</title><rect x="498.0" y="1445" width="129.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="501.02" y="1455.5" >do_iter_readv_wr..</text>
</g>
<g >
<title>__ip_finish_output (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1285" width="4.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1098.40" y="1295.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (204,407,972 samples, 0.30%)</title><rect x="672.1" y="1397" width="3.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="675.05" y="1407.5" ></text>
</g>
<g >
<title>ip_output (312,801,268 samples, 0.46%)</title><rect x="942.1" y="869" width="5.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="945.07" y="879.5" ></text>
</g>
<g >
<title>v8::internal::OptimizedCompilationJob::ExecuteJob (252,882,773 samples, 0.37%)</title><rect x="314.8" y="1493" width="4.4" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="317.82" y="1503.5" ></text>
</g>
<g >
<title>path_lookupat (9,665,359 samples, 0.01%)</title><rect x="304.9" y="1429" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="307.92" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,857,517 samples, 0.02%)</title><rect x="308.7" y="1061" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1071.5" ></text>
</g>
<g >
<title>[libc.so.6] (829,181,630 samples, 1.22%)</title><rect x="1034.6" y="1541" width="14.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1037.60" y="1551.5" ></text>
</g>
<g >
<title>security_inode_getattr (51,120,577 samples, 0.08%)</title><rect x="637.7" y="1461" width="0.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="640.73" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="85" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="95.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (18,282,747 samples, 0.03%)</title><rect x="1049.0" y="1493" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1052.02" y="1503.5" ></text>
</g>
<g >
<title>tcp_recvmsg (14,470,465,442 samples, 21.33%)</title><rect x="36.3" y="1461" width="251.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="39.28" y="1471.5" >tcp_recvmsg</text>
</g>
<g >
<title>tcp_validate_incoming (50,903,453 samples, 0.08%)</title><rect x="712.3" y="1365" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="715.32" y="1375.5" ></text>
</g>
<g >
<title>search_binary_handler (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1461" width="3.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="334.11" y="1471.5" ></text>
</g>
<g >
<title>tcp_sendmsg (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1461" width="4.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1098.40" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,267,540 samples, 0.01%)</title><rect x="377.0" y="1573" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="380.02" y="1583.5" ></text>
</g>
<g >
<title>switch_fpu_return (24,608,637 samples, 0.04%)</title><rect x="294.4" y="1493" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="297.43" y="1503.5" ></text>
</g>
<g >
<title>filemap_read (7,431,393,237 samples, 10.95%)</title><rect x="498.3" y="1397" width="129.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="501.28" y="1407.5" >filemap_read</text>
</g>
<g >
<title>__x64_sys_write (14,304,591 samples, 0.02%)</title><rect x="342.8" y="1429" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="345.83" y="1439.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3,215,310,004 samples, 4.74%)</title><rect x="919.9" y="1125" width="55.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="922.92" y="1135.5" >__net..</text>
</g>
<g >
<title>begin_new_exec (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1429" width="3.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="334.11" y="1439.5" ></text>
</g>
<g >
<title>ttwu_do_activate (250,438,728 samples, 0.37%)</title><rect x="1168.0" y="1461" width="4.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1171.03" y="1471.5" ></text>
</g>
<g >
<title>update_min_vruntime (86,104,034 samples, 0.13%)</title><rect x="85.8" y="1301" width="1.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="88.82" y="1311.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (163,116,483 samples, 0.24%)</title><rect x="305.7" y="1413" width="2.8" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="308.71" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="117" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="127.5" ></text>
</g>
<g >
<title>rest_init (174,197,715 samples, 0.26%)</title><rect x="469.5" y="1493" width="3.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="472.53" y="1503.5" ></text>
</g>
<g >
<title>free_tail_page_prepare (51,922,786 samples, 0.08%)</title><rect x="989.0" y="1045" width="0.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="991.96" y="1055.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (153,125,068 samples, 0.23%)</title><rect x="1016.0" y="1365" width="2.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1018.95" y="1375.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (36,652,073 samples, 0.05%)</title><rect x="1185.8" y="1525" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1188.81" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,663,655 samples, 0.02%)</title><rect x="308.7" y="677" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.73" y="687.5" ></text>
</g>
<g >
<title>apparmor_bprm_creds_for_exec (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1397" width="3.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="342.45" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,628,498 samples, 0.01%)</title><rect x="1049.7" y="1493" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1052.72" y="1503.5" ></text>
</g>
<g >
<title>prep_compound_page (489,928,440 samples, 0.72%)</title><rect x="817.9" y="1333" width="8.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="820.87" y="1343.5" ></text>
</g>
<g >
<title>v8::internal::Handle&lt;v8::internal::NameDictionary&gt; v8::internal::HashTable&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::NewInternal&lt;v8::internal::Isolate&gt; (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1333" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="327.89" y="1343.5" ></text>
</g>
<g >
<title>rtnl_dump_all (10,048,801 samples, 0.01%)</title><rect x="377.7" y="1429" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="380.67" y="1439.5" ></text>
</g>
<g >
<title>exec_binprm (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1477" width="3.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="334.11" y="1487.5" ></text>
</g>
<g >
<title>string_escape_mem (11,106,716 samples, 0.02%)</title><rect x="377.3" y="1413" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="380.26" y="1423.5" ></text>
</g>
<g >
<title>__kfree_skb (175,222,351 samples, 0.26%)</title><rect x="705.6" y="1333" width="3.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="708.59" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1493" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="1503.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (167,916,118 samples, 0.25%)</title><rect x="290.8" y="1477" width="2.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="293.82" y="1487.5" ></text>
</g>
<g >
<title>__do_sys_clone (12,095,848 samples, 0.02%)</title><rect x="1048.5" y="1173" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1051.45" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (9,322,447 samples, 0.01%)</title><rect x="338.7" y="53" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="341.70" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="805" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="815.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,137,434 samples, 0.01%)</title><rect x="1049.7" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1052.73" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,682,856 samples, 0.01%)</title><rect x="303.7" y="1493" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="306.74" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1269" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1279.5" ></text>
</g>
<g >
<title>kmem_cache_free (105,607,381 samples, 0.16%)</title><rect x="679.2" y="1317" width="1.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="682.17" y="1327.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1493" width="3.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="334.11" y="1503.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (42,150,859 samples, 0.06%)</title><rect x="380.7" y="1493" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="383.74" y="1503.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (41,313,569 samples, 0.06%)</title><rect x="88.9" y="1333" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="91.92" y="1343.5" ></text>
</g>
<g >
<title>__schedule (42,129,882 samples, 0.06%)</title><rect x="70.0" y="1381" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="73.00" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (11,917,248 samples, 0.02%)</title><rect x="304.5" y="1525" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="307.51" y="1535.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (26,556,153 samples, 0.04%)</title><rect x="324.0" y="1205" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="326.98" y="1215.5" ></text>
</g>
<g >
<title>__alloc_skb (835,376,805 samples, 1.23%)</title><rect x="1005.9" y="1397" width="14.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1008.86" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="997" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1007.5" ></text>
</g>
<g >
<title>_raw_spin_lock (42,559,458 samples, 0.06%)</title><rect x="459.0" y="1477" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="462.00" y="1487.5" ></text>
</g>
<g >
<title>tcp_push_one (5,385,169,579 samples, 7.94%)</title><rect x="906.9" y="1413" width="93.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="909.93" y="1423.5" >tcp_push_one</text>
</g>
<g >
<title>ip_local_deliver_finish (404,972,351 samples, 0.60%)</title><rect x="686.7" y="1013" width="7.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="689.73" y="1023.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,137,434 samples, 0.01%)</title><rect x="1049.7" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1052.73" y="1391.5" ></text>
</g>
<g >
<title>[anon] (40,532,347 samples, 0.06%)</title><rect x="314.0" y="1573" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="317.05" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_read (19,304,836 samples, 0.03%)</title><rect x="301.4" y="1525" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="304.39" y="1535.5" ></text>
</g>
<g >
<title>__switch_to_asm (42,530,229 samples, 0.06%)</title><rect x="26.7" y="1557" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="29.73" y="1567.5" ></text>
</g>
<g >
<title>execute_command_internal (788,151,366 samples, 1.16%)</title><rect x="1034.7" y="1365" width="13.7" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1037.73" y="1375.5" ></text>
</g>
<g >
<title>cpu_startup_entry (204,151,227 samples, 0.30%)</title><rect x="1186.4" y="1477" width="3.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1189.45" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (198,060,845 samples, 0.29%)</title><rect x="1186.5" y="1397" width="3.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1189.46" y="1407.5" ></text>
</g>
<g >
<title>ktime_get (82,957,662 samples, 0.12%)</title><rect x="285.9" y="1397" width="1.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="288.93" y="1407.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,844,967 samples, 0.02%)</title><rect x="384.5" y="1413" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="387.52" y="1423.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (42,376,827 samples, 0.06%)</title><rect x="449.4" y="1461" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="452.39" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="197" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (98,670,073 samples, 0.15%)</title><rect x="302.0" y="1445" width="1.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="304.96" y="1455.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (52,517,788 samples, 0.08%)</title><rect x="699.3" y="1333" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="702.32" y="1343.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (472,540,037 samples, 0.70%)</title><rect x="106.3" y="1365" width="8.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="109.34" y="1375.5" ></text>
</g>
<g >
<title>do_user_addr_fault (7,783,453 samples, 0.01%)</title><rect x="300.4" y="1525" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="303.35" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1557" width="3.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="334.11" y="1567.5" ></text>
</g>
<g >
<title>ttwu_do_activate (128,033,116 samples, 0.19%)</title><rect x="450.1" y="1461" width="2.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="453.12" y="1471.5" ></text>
</g>
<g >
<title>ip_finish_output (4,886,077,665 samples, 7.20%)</title><rect x="911.0" y="1301" width="85.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="913.99" y="1311.5" >ip_finish_..</text>
</g>
<g >
<title>tcp_push (406,796,307 samples, 0.60%)</title><rect x="14.5" y="1445" width="7.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="17.46" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,216,814 samples, 0.01%)</title><rect x="1043.2" y="1013" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1046.17" y="1023.5" ></text>
</g>
<g >
<title>do_group_exit (163,116,483 samples, 0.24%)</title><rect x="305.7" y="1525" width="2.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="308.71" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="549" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (50,812,759 samples, 0.07%)</title><rect x="676.5" y="1397" width="0.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="679.50" y="1407.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (42,624,505 samples, 0.06%)</title><rect x="56.2" y="1333" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="59.19" y="1343.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (9,758,518 samples, 0.01%)</title><rect x="1050.0" y="1493" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1053.00" y="1503.5" ></text>
</g>
<g >
<title>mas_store_prealloc (5,972,814 samples, 0.01%)</title><rect x="1050.1" y="1349" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1053.06" y="1359.5" ></text>
</g>
<g >
<title>inet_recvmsg (103,230,089 samples, 0.15%)</title><rect x="655.1" y="1477" width="1.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="658.11" y="1487.5" ></text>
</g>
<g >
<title>__switch_to_asm (42,444,580 samples, 0.06%)</title><rect x="376.3" y="1573" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="379.29" y="1583.5" ></text>
</g>
<g >
<title>path_openat (430,198,228 samples, 0.63%)</title><rect x="647.6" y="1477" width="7.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="650.59" y="1487.5" ></text>
</g>
<g >
<title>skb_try_coalesce (42,243,939 samples, 0.06%)</title><rect x="42.8" y="1333" width="0.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="45.76" y="1343.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (5,972,814 samples, 0.01%)</title><rect x="1050.1" y="1381" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1053.06" y="1391.5" ></text>
</g>
<g >
<title>__sys_recvfrom (105,426,630 samples, 0.16%)</title><rect x="655.1" y="1509" width="1.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="658.07" y="1519.5" ></text>
</g>
<g >
<title>__do_sys_clone (58,089,665 samples, 0.09%)</title><rect x="323.8" y="1365" width="1.0" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="326.84" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_read (23,467,346 samples, 0.03%)</title><rect x="377.3" y="1541" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="380.26" y="1551.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (4,861,628,982 samples, 7.17%)</title><rect x="1105.4" y="1573" width="84.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1108.44" y="1583.5" >secondary..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1413" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="1423.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (42,469,175 samples, 0.06%)</title><rect x="466.6" y="1509" width="0.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="469.61" y="1519.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (51,313,500 samples, 0.08%)</title><rect x="1031.9" y="1525" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1034.93" y="1535.5" ></text>
</g>
<g >
<title>command_substitute (15,005,848 samples, 0.02%)</title><rect x="1048.5" y="1285" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1051.45" y="1295.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (320,948,605 samples, 0.47%)</title><rect x="15.9" y="1253" width="5.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="18.95" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (108,929,690 samples, 0.16%)</title><rect x="478.2" y="1541" width="1.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="481.22" y="1551.5" ></text>
</g>
<g >
<title>seq_read_iter (19,304,836 samples, 0.03%)</title><rect x="301.4" y="1477" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="304.39" y="1487.5" ></text>
</g>
<g >
<title>ovl_path_realdata (51,271,518 samples, 0.08%)</title><rect x="495.5" y="1445" width="0.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="498.48" y="1455.5" ></text>
</g>
<g >
<title>tcp_recvmsg (103,230,089 samples, 0.15%)</title><rect x="655.1" y="1461" width="1.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="658.11" y="1471.5" ></text>
</g>
<g >
<title>ipv4_mtu (102,000,744 samples, 0.15%)</title><rect x="1002.3" y="1381" width="1.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1005.31" y="1391.5" ></text>
</g>
<g >
<title>ksys_write (14,304,591 samples, 0.02%)</title><rect x="342.8" y="1413" width="0.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="345.83" y="1423.5" ></text>
</g>
<g >
<title>ip_local_out (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1333" width="4.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1098.40" y="1343.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk.part.0 (6,372,693 samples, 0.01%)</title><rect x="304.0" y="1285" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="306.98" y="1295.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (277,173,548 samples, 0.41%)</title><rect x="308.7" y="1557" width="4.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="311.68" y="1567.5" ></text>
</g>
<g >
<title>refill_stock (49,733,748 samples, 0.07%)</title><rect x="708.6" y="1285" width="0.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="711.63" y="1295.5" ></text>
</g>
<g >
<title>_compound_head (6,327,910 samples, 0.01%)</title><rect x="1034.6" y="1269" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1037.60" y="1279.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,474,210,087 samples, 5.12%)</title><rect x="1107.6" y="1509" width="60.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1110.60" y="1519.5" >cpuidl..</text>
</g>
<g >
<title>security_file_permission (162,191,190 samples, 0.24%)</title><rect x="627.5" y="1429" width="2.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="630.53" y="1439.5" ></text>
</g>
<g >
<title>[bash] (7,023,961 samples, 0.01%)</title><rect x="1043.2" y="1077" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1046.16" y="1087.5" ></text>
</g>
<g >
<title>arch_call_rest_init (174,197,715 samples, 0.26%)</title><rect x="469.5" y="1509" width="3.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="472.53" y="1519.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2,180,437,421 samples, 3.21%)</title><rect x="934.4" y="997" width="38.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="937.44" y="1007.5" >tcp..</text>
</g>
<g >
<title>epoll_wait (17,981,794 samples, 0.03%)</title><rect x="338.9" y="1557" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="341.93" y="1567.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (242,507,809 samples, 0.36%)</title><rect x="1101.2" y="1445" width="4.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1104.16" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="69" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="79.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5,931,372 samples, 0.01%)</title><rect x="1186.5" y="1365" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1189.46" y="1375.5" ></text>
</g>
<g >
<title>__refill_stock (49,733,748 samples, 0.07%)</title><rect x="708.6" y="1269" width="0.9" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="711.63" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (45,480,458 samples, 0.07%)</title><rect x="377.2" y="1573" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="380.15" y="1583.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (101,534,305 samples, 0.15%)</title><rect x="494.6" y="1461" width="1.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="497.61" y="1471.5" ></text>
</g>
<g >
<title>begin_new_exec (18,282,747 samples, 0.03%)</title><rect x="1049.0" y="1429" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1052.02" y="1439.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (6,290,121 samples, 0.01%)</title><rect x="1043.4" y="1077" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1046.37" y="1087.5" ></text>
</g>
<g >
<title>neigh_hh_output (261,466,903 samples, 0.39%)</title><rect x="943.0" y="805" width="4.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="945.96" y="815.5" ></text>
</g>
<g >
<title>ip_finish_output2 (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1269" width="4.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1098.40" y="1279.5" ></text>
</g>
<g >
<title>__alloc_skb (112,265,720 samples, 0.17%)</title><rect x="21.5" y="1429" width="2.0" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="24.53" y="1439.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (48,825,118 samples, 0.07%)</title><rect x="936.3" y="917" width="0.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="939.27" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,663,655 samples, 0.02%)</title><rect x="308.7" y="661" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.73" y="671.5" ></text>
</g>
<g >
<title>__ip_finish_output (320,948,605 samples, 0.47%)</title><rect x="15.9" y="1301" width="5.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="18.95" y="1311.5" ></text>
</g>
<g >
<title>ret_from_fork (299,913,018 samples, 0.44%)</title><rect x="1100.2" y="1557" width="5.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1103.22" y="1567.5" ></text>
</g>
<g >
<title>mas_store_prealloc (6,372,693 samples, 0.01%)</title><rect x="304.0" y="1333" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="306.98" y="1343.5" ></text>
</g>
<g >
<title>skb_free_head (51,021,612 samples, 0.08%)</title><rect x="707.7" y="1301" width="0.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="710.75" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="229" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15,302,018,331 samples, 22.56%)</title><rect x="29.4" y="1557" width="266.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="32.42" y="1567.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,581,780 samples, 0.02%)</title><rect x="308.7" y="885" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="895.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (6,327,910 samples, 0.01%)</title><rect x="1034.6" y="1365" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1037.60" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (271,029,121 samples, 0.40%)</title><rect x="308.7" y="1461" width="4.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.68" y="1471.5" ></text>
</g>
<g >
<title>release_sock (2,161,392,044 samples, 3.19%)</title><rect x="675.6" y="1429" width="37.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="678.61" y="1439.5" >rel..</text>
</g>
<g >
<title>__switch_to_asm (84,298,619 samples, 0.12%)</title><rect x="1093.5" y="1573" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1096.52" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (268,991,173 samples, 0.40%)</title><rect x="308.7" y="1269" width="4.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1279.5" ></text>
</g>
<g >
<title>Glob::isIgnored (271,218,525 samples, 0.40%)</title><rect x="308.7" y="1509" width="4.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="311.68" y="1519.5" ></text>
</g>
<g >
<title>__virt_addr_valid (95,719,725 samples, 0.14%)</title><rect x="831.8" y="1349" width="1.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="834.78" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="933" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="943.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (249,393,402 samples, 0.37%)</title><rect x="1163.7" y="1493" width="4.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1166.69" y="1503.5" ></text>
</g>
<g >
<title>skb_release_data (105,607,381 samples, 0.16%)</title><rect x="679.2" y="1349" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="682.17" y="1359.5" ></text>
</g>
<g >
<title>[ls] (9,665,359 samples, 0.01%)</title><rect x="304.9" y="1557" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="307.92" y="1567.5" ></text>
</g>
<g >
<title>copy_pte_range (11,513,621 samples, 0.02%)</title><rect x="324.4" y="1253" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="327.45" y="1263.5" ></text>
</g>
<g >
<title>__do_softirq (148,206,324 samples, 0.22%)</title><rect x="378.0" y="1493" width="2.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="380.98" y="1503.5" ></text>
</g>
<g >
<title>tcp_ack (40,122,223 samples, 0.06%)</title><rect x="280.0" y="965" width="0.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="282.96" y="975.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (50,812,759 samples, 0.07%)</title><rect x="676.5" y="1381" width="0.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="679.50" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,268,899 samples, 0.02%)</title><rect x="308.7" y="757" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="767.5" ></text>
</g>
<g >
<title>task_work_run (102,396,010 samples, 0.15%)</title><rect x="475.3" y="1477" width="1.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="478.29" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (12,095,848 samples, 0.02%)</title><rect x="1048.5" y="1205" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1051.45" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="725" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="735.5" ></text>
</g>
<g >
<title>__do_softirq (292,860,804 samples, 0.43%)</title><rect x="277.7" y="1173" width="5.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="280.74" y="1183.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (8,659,374 samples, 0.01%)</title><rect x="710.4" y="1333" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="713.39" y="1343.5" ></text>
</g>
<g >
<title>release_pages (163,116,483 samples, 0.24%)</title><rect x="305.7" y="1381" width="2.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="308.71" y="1391.5" ></text>
</g>
<g >
<title>tcp_rcv_established (42,624,505 samples, 0.06%)</title><rect x="56.2" y="1381" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="59.19" y="1391.5" ></text>
</g>
<g >
<title>free_tail_page_prepare (51,063,807 samples, 0.08%)</title><rect x="983.6" y="1061" width="0.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="986.63" y="1071.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1349" width="4.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1098.40" y="1359.5" ></text>
</g>
<g >
<title>run_ksoftirqd (148,206,324 samples, 0.22%)</title><rect x="378.0" y="1509" width="2.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="380.98" y="1519.5" ></text>
</g>
<g >
<title>sock_rfree (84,336,340 samples, 0.12%)</title><rect x="46.2" y="1445" width="1.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="49.21" y="1455.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2,059,615,020 samples, 3.04%)</title><rect x="677.4" y="1381" width="35.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="680.38" y="1391.5" >tcp..</text>
</g>
<g >
<title>_compound_head (11,460,844 samples, 0.02%)</title><rect x="1054.1" y="1365" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1057.07" y="1375.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (51,143,880 samples, 0.08%)</title><rect x="476.2" y="1413" width="0.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="479.18" y="1423.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (7,763,383 samples, 0.01%)</title><rect x="308.5" y="1429" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="311.54" y="1439.5" ></text>
</g>
<g >
<title>load_elf_binary (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1445" width="3.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="334.11" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,857,517 samples, 0.02%)</title><rect x="308.7" y="997" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1007.5" ></text>
</g>
<g >
<title>recv (105,426,630 samples, 0.16%)</title><rect x="655.1" y="1573" width="1.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="658.07" y="1583.5" ></text>
</g>
<g >
<title>current_time (66,514,754 samples, 0.10%)</title><rect x="492.3" y="1429" width="1.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="495.35" y="1439.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (308,712,219 samples, 0.46%)</title><rect x="1168.0" y="1477" width="5.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1171.03" y="1487.5" ></text>
</g>
<g >
<title>euidaccess (6,590,627 samples, 0.01%)</title><rect x="1043.2" y="1045" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1046.16" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1109" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1119.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (51,214,213 samples, 0.08%)</title><rect x="1032.8" y="1541" width="0.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1035.82" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,581,780 samples, 0.02%)</title><rect x="308.7" y="901" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.72" y="911.5" ></text>
</g>
<g >
<title>rcu_core (26,959,220 samples, 0.04%)</title><rect x="469.6" y="1285" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="472.59" y="1295.5" ></text>
</g>
<g >
<title>psi_group_change (165,388,210 samples, 0.24%)</title><rect x="461.6" y="1461" width="2.9" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="464.60" y="1471.5" ></text>
</g>
<g >
<title>kernel_clone (12,095,848 samples, 0.02%)</title><rect x="1048.5" y="1157" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1051.45" y="1167.5" ></text>
</g>
<g >
<title>cpuidle_enter (198,245,249 samples, 0.29%)</title><rect x="1186.5" y="1413" width="3.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1189.46" y="1423.5" ></text>
</g>
<g >
<title>ovl_real_fdget (113,065,423 samples, 0.17%)</title><rect x="494.4" y="1477" width="2.0" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="497.41" y="1487.5" ></text>
</g>
<g >
<title>__do_softirq (594,098,960 samples, 0.88%)</title><rect x="685.4" y="1141" width="10.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="688.37" y="1151.5" ></text>
</g>
<g >
<title>llist_reverse_order (42,113,470 samples, 0.06%)</title><rect x="1173.4" y="1493" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1176.40" y="1503.5" ></text>
</g>
<g >
<title>__open64_nocancel (7,763,383 samples, 0.01%)</title><rect x="308.5" y="1541" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="311.54" y="1551.5" ></text>
</g>
<g >
<title>__mmput (235,687,500 samples, 0.35%)</title><rect x="1050.2" y="1461" width="4.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1053.17" y="1471.5" ></text>
</g>
<g >
<title>tcp_add_backlog (48,411,760 samples, 0.07%)</title><rect x="692.0" y="965" width="0.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="695.04" y="975.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (202,651,506 samples, 0.30%)</title><rect x="16.4" y="1045" width="3.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="19.45" y="1055.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (5,278,945,720 samples, 7.78%)</title><rect x="380.7" y="1573" width="91.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="383.74" y="1583.5" >secondary_..</text>
</g>
<g >
<title>[libc.so.6] (252,035,004 samples, 0.37%)</title><rect x="334.3" y="53" width="4.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="337.32" y="63.5" ></text>
</g>
<g >
<title>ip_finish_output (320,948,605 samples, 0.47%)</title><rect x="15.9" y="1317" width="5.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="18.95" y="1327.5" ></text>
</g>
<g >
<title>gc_worker (6,831,327 samples, 0.01%)</title><rect x="380.6" y="1493" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="383.60" y="1503.5" ></text>
</g>
<g >
<title>__ip_finish_output (648,384,334 samples, 0.96%)</title><rect x="685.4" y="1237" width="11.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="688.37" y="1247.5" ></text>
</g>
<g >
<title>revert_creds (51,264,201 samples, 0.08%)</title><rect x="630.5" y="1493" width="0.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="633.48" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (268,991,173 samples, 0.40%)</title><rect x="308.7" y="1317" width="4.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1189" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1109" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="1119.5" ></text>
</g>
<g >
<title>init_file (68,142,011 samples, 0.10%)</title><rect x="647.6" y="1445" width="1.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="650.59" y="1455.5" ></text>
</g>
<g >
<title>enqueue_task (128,033,116 samples, 0.19%)</title><rect x="450.1" y="1445" width="2.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="453.12" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="389" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="399.5" ></text>
</g>
<g >
<title>__virt_addr_valid (49,374,352 samples, 0.07%)</title><rect x="830.4" y="1365" width="0.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="833.41" y="1375.5" ></text>
</g>
<g >
<title>__xas_next (92,294,242 samples, 0.14%)</title><rect x="622.5" y="1349" width="1.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="625.52" y="1359.5" ></text>
</g>
<g >
<title>path_openat (16,322,107 samples, 0.02%)</title><rect x="1095.1" y="1493" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1098.09" y="1503.5" ></text>
</g>
<g >
<title>__do_softirq (320,948,605 samples, 0.47%)</title><rect x="15.9" y="1205" width="5.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="18.95" y="1215.5" ></text>
</g>
<g >
<title>[[stack]] (30,929,097 samples, 0.05%)</title><rect x="313.5" y="1573" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="316.51" y="1583.5" ></text>
</g>
<g >
<title>do_sys_openat2 (7,763,383 samples, 0.01%)</title><rect x="308.5" y="1477" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="311.54" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (105,426,630 samples, 0.16%)</title><rect x="655.1" y="1557" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="658.07" y="1567.5" ></text>
</g>
<g >
<title>tcp_ack (590,046,025 samples, 0.87%)</title><rect x="701.2" y="1365" width="10.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="704.16" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,581,780 samples, 0.02%)</title><rect x="308.7" y="837" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.72" y="847.5" ></text>
</g>
<g >
<title>ip_finish_output (648,384,334 samples, 0.96%)</title><rect x="685.4" y="1253" width="11.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="688.37" y="1263.5" ></text>
</g>
<g >
<title>kthread (299,913,018 samples, 0.44%)</title><rect x="1100.2" y="1541" width="5.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1103.22" y="1551.5" ></text>
</g>
<g >
<title>copy_page_to_iter (5,896,090,159 samples, 8.69%)</title><rect x="505.5" y="1381" width="102.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="508.48" y="1391.5" >copy_page_to..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (206,654,957 samples, 0.30%)</title><rect x="635.0" y="1557" width="3.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="638.02" y="1567.5" ></text>
</g>
<g >
<title>mod_memcg_state (101,931,308 samples, 0.15%)</title><rect x="1026.6" y="1349" width="1.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1029.58" y="1359.5" ></text>
</g>
<g >
<title>elf_map (5,972,814 samples, 0.01%)</title><rect x="1050.1" y="1413" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1053.06" y="1423.5" ></text>
</g>
<g >
<title>docker (67,641,253 samples, 0.10%)</title><rect x="300.2" y="1589" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="303.21" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1477" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="1487.5" ></text>
</g>
<g >
<title>do_iter_write (9,960,599 samples, 0.01%)</title><rect x="342.9" y="1349" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="345.91" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1541" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="308.17" y="1551.5" ></text>
</g>
<g >
<title>_Fork (259,161,472 samples, 0.38%)</title><rect x="1034.8" y="1173" width="4.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1037.84" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1461" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1471.5" ></text>
</g>
<g >
<title>v8::internal::JSObject::DefineOwnPropertyIgnoreAttributes (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1445" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="327.89" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,128,978 samples, 0.01%)</title><rect x="304.0" y="1573" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="306.98" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,628,498 samples, 0.01%)</title><rect x="1049.7" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1052.72" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1445" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="308.17" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1381" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (17,816,233 samples, 0.03%)</title><rect x="1048.7" y="1477" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1051.71" y="1487.5" ></text>
</g>
<g >
<title>arch_call_rest_init (204,151,227 samples, 0.30%)</title><rect x="1186.4" y="1509" width="3.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1189.45" y="1519.5" ></text>
</g>
<g >
<title>__kfree_skb (39,096,351 samples, 0.06%)</title><rect x="17.9" y="965" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="20.89" y="975.5" ></text>
</g>
<g >
<title>ip_rcv (3,115,480,530 samples, 4.59%)</title><rect x="920.8" y="1093" width="54.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="923.82" y="1103.5" >ip_rcv</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="325" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="335.5" ></text>
</g>
<g >
<title>string_escape_mem (19,304,836 samples, 0.03%)</title><rect x="301.4" y="1397" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="304.39" y="1407.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (42,591,450 samples, 0.06%)</title><rect x="448.6" y="1445" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="451.58" y="1455.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (697,031,215 samples, 1.03%)</title><rect x="936.3" y="949" width="12.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="939.27" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (268,991,173 samples, 0.40%)</title><rect x="308.7" y="1285" width="4.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.72" y="1295.5" ></text>
</g>
<g >
<title>free_unref_page_list (163,116,483 samples, 0.24%)</title><rect x="305.7" y="1365" width="2.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="308.71" y="1375.5" ></text>
</g>
<g >
<title>bpf_skops_write_hdr_opt.isra.0 (47,349,956 samples, 0.07%)</title><rect x="940.4" y="917" width="0.8" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="943.35" y="927.5" ></text>
</g>
<g >
<title>__sk_mem_raise_allocated (44,013,528 samples, 0.06%)</title><rect x="43.5" y="1333" width="0.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="46.50" y="1343.5" ></text>
</g>
<g >
<title>pick_next_task (83,942,944 samples, 0.12%)</title><rect x="1180.1" y="1477" width="1.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1183.11" y="1487.5" ></text>
</g>
<g >
<title>dquot_file_open (51,284,785 samples, 0.08%)</title><rect x="651.5" y="1333" width="0.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="654.48" y="1343.5" ></text>
</g>
<g >
<title>ovl_getattr (58,141,762 samples, 0.09%)</title><rect x="479.1" y="1461" width="1.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="482.10" y="1471.5" ></text>
</g>
<g >
<title>update_load_avg (24,175,499 samples, 0.04%)</title><rect x="447.2" y="1301" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="450.23" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (78,069,967 samples, 0.12%)</title><rect x="56.9" y="1429" width="1.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="59.93" y="1439.5" ></text>
</g>
<g >
<title>m_show (19,304,836 samples, 0.03%)</title><rect x="301.4" y="1461" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="304.39" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1509" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1519.5" ></text>
</g>
<g >
<title>handle_pte_fault (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1221" width="1.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="327.89" y="1231.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (4,783,585,830 samples, 7.05%)</title><rect x="911.0" y="1237" width="83.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="913.99" y="1247.5" >__dev_que..</text>
</g>
<g >
<title>check_heap_object (471,554,971 samples, 0.70%)</title><rect x="106.4" y="1349" width="8.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="109.36" y="1359.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (648,384,334 samples, 0.96%)</title><rect x="685.4" y="1189" width="11.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="688.37" y="1199.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (49,893,922 samples, 0.07%)</title><rect x="634.1" y="1557" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="637.11" y="1567.5" ></text>
</g>
<g >
<title>file_free_rcu (50,799,940 samples, 0.07%)</title><rect x="1100.3" y="1429" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1103.27" y="1439.5" ></text>
</g>
<g >
<title>__napi_poll (278,353,934 samples, 0.41%)</title><rect x="16.0" y="1173" width="4.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="18.96" y="1183.5" ></text>
</g>
<g >
<title>parse_and_execute (811,365,397 samples, 1.20%)</title><rect x="1034.6" y="1493" width="14.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1037.60" y="1503.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (50,940,147 samples, 0.08%)</title><rect x="833.4" y="1365" width="0.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="836.45" y="1375.5" ></text>
</g>
<g >
<title>load_elf_binary (18,282,747 samples, 0.03%)</title><rect x="1049.0" y="1445" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1052.02" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1573" width="3.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="334.11" y="1583.5" ></text>
</g>
<g >
<title>execute_command_internal (20,187,069 samples, 0.03%)</title><rect x="1043.1" y="1157" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1046.13" y="1167.5" ></text>
</g>
<g >
<title>tick_nohz_stop_idle (41,688,605 samples, 0.06%)</title><rect x="466.6" y="1493" width="0.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="469.63" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1045" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1055.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (42,591,450 samples, 0.06%)</title><rect x="448.6" y="1429" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="451.58" y="1439.5" ></text>
</g>
<g >
<title>_copy_to_iter (127,806,955 samples, 0.19%)</title><rect x="104.1" y="1397" width="2.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="107.12" y="1407.5" ></text>
</g>
<g >
<title>rcu_do_batch (26,959,220 samples, 0.04%)</title><rect x="469.6" y="1269" width="0.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="472.59" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (35,919,196 samples, 0.05%)</title><rect x="13.8" y="1461" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="16.82" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="885" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="895.5" ></text>
</g>
<g >
<title>[bash] (15,005,848 samples, 0.02%)</title><rect x="1048.5" y="1365" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1051.45" y="1375.5" ></text>
</g>
<g >
<title>__kfree_skb (156,937,894 samples, 0.23%)</title><rect x="678.3" y="1365" width="2.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="681.27" y="1375.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (27,098,253 samples, 0.04%)</title><rect x="469.6" y="1333" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="472.59" y="1343.5" ></text>
</g>
<g >
<title>native_sched_clock (42,471,736 samples, 0.06%)</title><rect x="395.2" y="1413" width="0.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="398.16" y="1423.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::OrdinaryDefineOwnProperty (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1493" width="1.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="327.89" y="1503.5" ></text>
</g>
<g >
<title>operator new (252,035,004 samples, 0.37%)</title><rect x="334.3" y="85" width="4.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="337.32" y="95.5" ></text>
</g>
<g >
<title>search_binary_handler (7,128,978 samples, 0.01%)</title><rect x="304.0" y="1461" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="306.98" y="1471.5" ></text>
</g>
<g >
<title>ext4_writepages (242,507,809 samples, 0.36%)</title><rect x="1101.2" y="1381" width="4.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1104.16" y="1391.5" ></text>
</g>
<g >
<title>ip_local_out (320,948,605 samples, 0.47%)</title><rect x="15.9" y="1349" width="5.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="18.95" y="1359.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2,758,521,632 samples, 4.07%)</title><rect x="924.4" y="1045" width="48.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="927.38" y="1055.5" >ip_p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="805" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="815.5" ></text>
</g>
<g >
<title>lookup_fast (16,322,107 samples, 0.02%)</title><rect x="1095.1" y="1461" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1098.09" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (108,929,690 samples, 0.16%)</title><rect x="478.2" y="1557" width="1.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="481.22" y="1567.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (315,902,369 samples, 0.47%)</title><rect x="289.4" y="1525" width="5.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="292.36" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_newfstat (108,929,690 samples, 0.16%)</title><rect x="478.2" y="1525" width="1.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="481.22" y="1535.5" ></text>
</g>
<g >
<title>alloc_pages (5,723,026,550 samples, 8.44%)</title><rect x="728.2" y="1381" width="99.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="731.18" y="1391.5" >alloc_pages</text>
</g>
<g >
<title>tcp_wfree (51,309,155 samples, 0.08%)</title><rect x="993.3" y="1205" width="0.9" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="996.30" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="901" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="677" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="687.5" ></text>
</g>
<g >
<title>__get_task_ioprio (51,223,371 samples, 0.08%)</title><rect x="667.6" y="1477" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="670.58" y="1487.5" ></text>
</g>
<g >
<title>load_elf_binary (7,128,978 samples, 0.01%)</title><rect x="304.0" y="1445" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="306.98" y="1455.5" ></text>
</g>
<g >
<title>mod_memcg_state (26,556,153 samples, 0.04%)</title><rect x="324.0" y="1173" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="326.98" y="1183.5" ></text>
</g>
<g >
<title>cpuidle_enter (3,715,612,238 samples, 5.48%)</title><rect x="383.0" y="1477" width="64.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="386.02" y="1487.5" >cpuidle..</text>
</g>
<g >
<title>tcp_write_xmit (153,739,317 samples, 0.23%)</title><rect x="904.3" y="1381" width="2.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="907.26" y="1391.5" ></text>
</g>
<g >
<title>search_for_command (7,023,961 samples, 0.01%)</title><rect x="1043.2" y="1109" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1046.16" y="1119.5" ></text>
</g>
<g >
<title>[bash] (7,023,961 samples, 0.01%)</title><rect x="1043.2" y="1093" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1046.16" y="1103.5" ></text>
</g>
<g >
<title>__wake_up_common (715,135,048 samples, 1.05%)</title><rect x="956.4" y="901" width="12.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="959.37" y="911.5" ></text>
</g>
<g >
<title>reweight_entity (85,124,177 samples, 0.13%)</title><rect x="74.5" y="1285" width="1.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="77.52" y="1295.5" ></text>
</g>
<g >
<title>execute_command_internal (788,868,361 samples, 1.16%)</title><rect x="1034.7" y="1397" width="13.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1037.73" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="901" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="911.5" ></text>
</g>
<g >
<title>psi_flags_change (35,165,822 samples, 0.05%)</title><rect x="92.2" y="1333" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="95.19" y="1343.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (61,507,112 samples, 0.09%)</title><rect x="629.3" y="1413" width="1.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="632.28" y="1423.5" ></text>
</g>
<g >
<title>__napi_poll (567,452,773 samples, 0.84%)</title><rect x="685.8" y="1109" width="9.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="688.83" y="1119.5" ></text>
</g>
<g >
<title>update_load_avg (166,760,138 samples, 0.25%)</title><rect x="82.9" y="1301" width="2.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="85.92" y="1311.5" ></text>
</g>
<g >
<title>strncpy_from_user (51,073,427 samples, 0.08%)</title><rect x="635.0" y="1445" width="0.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="638.02" y="1455.5" ></text>
</g>
<g >
<title>__fsnotify_parent (146,313,640 samples, 0.22%)</title><rect x="488.9" y="1493" width="2.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="491.91" y="1503.5" ></text>
</g>
<g >
<title>sched_clock_cpu (82,874,866 samples, 0.12%)</title><rect x="95.2" y="1333" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="98.24" y="1343.5" ></text>
</g>
<g >
<title>xas_descend (51,217,059 samples, 0.08%)</title><rect x="624.1" y="1333" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="627.12" y="1343.5" ></text>
</g>
<g >
<title>open_last_lookups (16,322,107 samples, 0.02%)</title><rect x="1095.1" y="1477" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1098.09" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,012,053 samples, 0.01%)</title><rect x="1049.5" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1052.49" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,628,498 samples, 0.01%)</title><rect x="1049.7" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1052.72" y="1551.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (248,664,967 samples, 0.37%)</title><rect x="290.1" y="1493" width="4.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="293.10" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1061" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1071.5" ></text>
</g>
<g >
<title>kernel_clone (58,089,665 samples, 0.09%)</title><rect x="323.8" y="1349" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="326.84" y="1359.5" ></text>
</g>
<g >
<title>sleep (282,293,651 samples, 0.42%)</title><rect x="1049.4" y="1589" width="4.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1052.36" y="1599.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (29,282,685 samples, 0.04%)</title><rect x="469.5" y="1365" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="472.55" y="1375.5" ></text>
</g>
<g >
<title>intel_idle (129,514,419 samples, 0.19%)</title><rect x="1186.8" y="1381" width="2.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1189.76" y="1391.5" ></text>
</g>
<g >
<title>vm_mmap (5,972,814 samples, 0.01%)</title><rect x="1050.1" y="1397" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1053.06" y="1407.5" ></text>
</g>
<g >
<title>fstatat64 (206,654,957 samples, 0.30%)</title><rect x="635.0" y="1573" width="3.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="638.02" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1445" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1455.5" ></text>
</g>
<g >
<title>do_filp_open (16,322,107 samples, 0.02%)</title><rect x="1095.1" y="1509" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1098.09" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,491,178,466 samples, 12.52%)</title><rect x="485.4" y="1541" width="147.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="488.40" y="1551.5" >do_syscall_64</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1157" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="1167.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,318,377 samples, 0.01%)</title><rect x="1049.6" y="1573" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1052.61" y="1583.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (52,517,788 samples, 0.08%)</title><rect x="699.3" y="1317" width="0.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="702.32" y="1327.5" ></text>
</g>
<g >
<title>rb_first (51,272,943 samples, 0.08%)</title><rect x="998.0" y="1365" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1000.99" y="1375.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7,783,453 samples, 0.01%)</title><rect x="300.4" y="1493" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="303.35" y="1503.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (14,304,591 samples, 0.02%)</title><rect x="342.8" y="1557" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="345.83" y="1567.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1525" width="3.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="334.11" y="1535.5" ></text>
</g>
<g >
<title>[ls] (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1525" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="308.17" y="1535.5" ></text>
</g>
<g >
<title>__mmput (163,116,483 samples, 0.24%)</title><rect x="305.7" y="1461" width="2.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="308.71" y="1471.5" ></text>
</g>
<g >
<title>place_entity (42,630,941 samples, 0.06%)</title><rect x="1170.2" y="1397" width="0.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1173.16" y="1407.5" ></text>
</g>
<g >
<title>tcp_try_coalesce (36,181,490 samples, 0.05%)</title><rect x="45.0" y="1365" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="47.99" y="1375.5" ></text>
</g>
<g >
<title>__libc_fork (259,417,652 samples, 0.38%)</title><rect x="1034.8" y="1189" width="4.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1037.84" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,581,780 samples, 0.02%)</title><rect x="308.7" y="853" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="863.5" ></text>
</g>
<g >
<title>schedule_idle (517,286,517 samples, 0.76%)</title><rect x="456.9" y="1509" width="9.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="459.87" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="309" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="319.5" ></text>
</g>
<g >
<title>__fsnotify_parent (50,695,196 samples, 0.07%)</title><rect x="654.2" y="1381" width="0.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="657.19" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (102,049,378 samples, 0.15%)</title><rect x="301.9" y="1493" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="304.90" y="1503.5" ></text>
</g>
<g >
<title>__refill_stock (124,127,620 samples, 0.18%)</title><rect x="273.4" y="1365" width="2.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="276.37" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="917" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="927.5" ></text>
</g>
<g >
<title>sk_wait_data (2,228,609,404 samples, 3.29%)</title><rect x="58.3" y="1429" width="38.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="61.29" y="1439.5" >sk_..</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (17,180,210 samples, 0.03%)</title><rect x="1049.0" y="1301" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1052.04" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1525" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1535.5" ></text>
</g>
<g >
<title>tcp_write_xmit (83,136,029 samples, 0.12%)</title><rect x="16.4" y="981" width="1.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="19.45" y="991.5" ></text>
</g>
<g >
<title>exit_mmap (18,020,641 samples, 0.03%)</title><rect x="1049.0" y="1365" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1052.03" y="1375.5" ></text>
</g>
<g >
<title>rb_next (42,334,788 samples, 0.06%)</title><rect x="1180.1" y="1445" width="0.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1183.11" y="1455.5" ></text>
</g>
<g >
<title>read_tsc (51,167,197 samples, 0.08%)</title><rect x="906.0" y="1365" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="909.04" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="789" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1189" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1199.5" ></text>
</g>
<g >
<title>napi_consume_skb (907,375,101 samples, 1.34%)</title><rect x="975.8" y="1157" width="15.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="978.85" y="1167.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (49,152,976 samples, 0.07%)</title><rect x="632.2" y="1461" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="635.24" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="517" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="661" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="671.5" ></text>
</g>
<g >
<title>get_cached_acl (53,151,002 samples, 0.08%)</title><rect x="653.3" y="1333" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="656.26" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,628,498 samples, 0.01%)</title><rect x="1049.7" y="1413" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1052.72" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,535,484 samples, 0.03%)</title><rect x="308.7" y="1205" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="693" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="703.5" ></text>
</g>
<g >
<title>do_user_addr_fault (216,924,683 samples, 0.32%)</title><rect x="1039.4" y="1157" width="3.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1042.35" y="1167.5" ></text>
</g>
<g >
<title>bprm_execve (9,758,518 samples, 0.01%)</title><rect x="1050.0" y="1509" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1053.00" y="1519.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (84,914,251 samples, 0.13%)</title><rect x="83.7" y="1285" width="1.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="86.66" y="1295.5" ></text>
</g>
<g >
<title>pick_next_task_fair (27,973,521 samples, 0.04%)</title><rect x="89.6" y="1333" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="92.64" y="1343.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (10,023,289,687 samples, 14.77%)</title><rect x="98.5" y="1413" width="174.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="101.51" y="1423.5" >__skb_datagram_iter</text>
</g>
<g >
<title>exit_mmap (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1365" width="3.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="334.11" y="1375.5" ></text>
</g>
<g >
<title>__do_softirq (26,959,220 samples, 0.04%)</title><rect x="469.6" y="1317" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="472.59" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="469" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="479.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (11,917,248 samples, 0.02%)</title><rect x="304.5" y="1509" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="307.51" y="1519.5" ></text>
</g>
<g >
<title>vfs_write (20,999,566,630 samples, 30.95%)</title><rect x="666.7" y="1493" width="365.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="669.68" y="1503.5" >vfs_write</text>
</g>
<g >
<title>do_softirq.part.0 (4,518,128,722 samples, 6.66%)</title><rect x="913.0" y="1205" width="78.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="916.04" y="1215.5" >do_softir..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1365" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="1375.5" ></text>
</g>
<g >
<title>do_group_exit (235,687,500 samples, 0.35%)</title><rect x="1050.2" y="1525" width="4.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1053.17" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (251,455,689 samples, 0.37%)</title><rect x="309.0" y="1253" width="4.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="312.02" y="1263.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (292,860,804 samples, 0.43%)</title><rect x="277.7" y="1221" width="5.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="280.74" y="1231.5" ></text>
</g>
<g >
<title>exc_page_fault (7,783,453 samples, 0.01%)</title><rect x="300.4" y="1541" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="303.35" y="1551.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (117,487,418 samples, 0.17%)</title><rect x="285.9" y="1413" width="2.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="288.93" y="1423.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (9,665,359 samples, 0.01%)</title><rect x="304.9" y="1349" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="307.92" y="1359.5" ></text>
</g>
<g >
<title>perf_event_mmap_event (11,917,248 samples, 0.02%)</title><rect x="304.5" y="1429" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="307.51" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,581,780 samples, 0.02%)</title><rect x="308.7" y="869" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="879.5" ></text>
</g>
<g >
<title>schedule_idle (367,681,675 samples, 0.54%)</title><rect x="1178.6" y="1509" width="6.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1181.62" y="1519.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (24,175,499 samples, 0.04%)</title><rect x="447.2" y="1381" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="450.23" y="1391.5" ></text>
</g>
<g >
<title>user_path_at_empty (9,665,359 samples, 0.01%)</title><rect x="304.9" y="1461" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="307.92" y="1471.5" ></text>
</g>
<g >
<title>ima_get_action (51,221,990 samples, 0.08%)</title><rect x="650.6" y="1413" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="653.59" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (251,455,689 samples, 0.37%)</title><rect x="309.0" y="1221" width="4.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="312.02" y="1231.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (41,612,660 samples, 0.06%)</title><rect x="61.9" y="1381" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="64.91" y="1391.5" ></text>
</g>
<g >
<title>execve (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1525" width="3.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="342.45" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_write (21,306,397,847 samples, 31.41%)</title><rect x="661.3" y="1525" width="370.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="664.34" y="1535.5" >__x64_sys_write</text>
</g>
<g >
<title>try_to_wake_up (562,802,708 samples, 0.83%)</title><rect x="959.0" y="853" width="9.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="962.02" y="863.5" ></text>
</g>
<g >
<title>__netif_rx (51,299,662 samples, 0.08%)</title><rect x="943.9" y="741" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="946.85" y="751.5" ></text>
</g>
<g >
<title>unmap_page_range (17,180,210 samples, 0.03%)</title><rect x="1049.0" y="1317" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1052.04" y="1327.5" ></text>
</g>
<g >
<title>netif_skb_features (89,438,816 samples, 0.13%)</title><rect x="946.0" y="757" width="1.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="948.95" y="767.5" ></text>
</g>
<g >
<title>non-virtual thunk to v8::internal::CancelableTask::Run (252,882,773 samples, 0.37%)</title><rect x="314.8" y="1525" width="4.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="317.82" y="1535.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (41,688,605 samples, 0.06%)</title><rect x="466.6" y="1477" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="469.63" y="1487.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1413" width="4.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1098.40" y="1423.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (49,733,748 samples, 0.07%)</title><rect x="708.6" y="1317" width="0.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="711.63" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,514,299 samples, 0.01%)</title><rect x="308.7" y="469" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.73" y="479.5" ></text>
</g>
<g >
<title>refill_stock (124,127,620 samples, 0.18%)</title><rect x="273.4" y="1381" width="2.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="276.37" y="1391.5" ></text>
</g>
<g >
<title>napi_consume_skb (41,713,651 samples, 0.06%)</title><rect x="282.1" y="1141" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="285.11" y="1151.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineImpl::CreateGraph (5,802,075 samples, 0.01%)</title><rect x="314.8" y="1461" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="317.82" y="1471.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (320,948,605 samples, 0.47%)</title><rect x="15.9" y="1237" width="5.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="18.95" y="1247.5" ></text>
</g>
<g >
<title>do_set_pte (216,924,683 samples, 0.32%)</title><rect x="1039.4" y="1045" width="3.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1042.35" y="1055.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2,809,808,633 samples, 4.14%)</title><rect x="924.4" y="1061" width="48.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="927.38" y="1071.5" >ip_l..</text>
</g>
<g >
<title>_raw_spin_unlock_bh (34,391,927 samples, 0.05%)</title><rect x="45.6" y="1429" width="0.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="48.61" y="1439.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (6,453,145 samples, 0.01%)</title><rect x="1049.9" y="1573" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1052.89" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1013" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1023.5" ></text>
</g>
<g >
<title>skb_network_protocol (47,741,724 samples, 0.07%)</title><rect x="946.7" y="741" width="0.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="949.68" y="751.5" ></text>
</g>
<g >
<title>5_ (13,524,040 samples, 0.02%)</title><rect x="10.0" y="1589" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" ></text>
</g>
<g >
<title>__libc_pread (8,903,745,819 samples, 13.12%)</title><rect x="480.1" y="1573" width="154.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="483.11" y="1583.5" >__libc_pread</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="453" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="463.5" ></text>
</g>
<g >
<title>ip_output (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1317" width="4.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1098.40" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1381" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1391.5" ></text>
</g>
<g >
<title>select_idle_sibling (255,814,200 samples, 0.38%)</title><rect x="962.6" y="821" width="4.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="965.58" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1477" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1487.5" ></text>
</g>
<g >
<title>__fdget (34,280,263 samples, 0.05%)</title><rect x="23.5" y="1477" width="0.6" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="26.48" y="1487.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (224,226,656 samples, 0.33%)</title><rect x="1050.2" y="1413" width="3.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1053.17" y="1423.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (58,275,529 samples, 0.09%)</title><rect x="633.1" y="1541" width="1.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="636.10" y="1551.5" ></text>
</g>
<g >
<title>mntput (51,252,130 samples, 0.08%)</title><rect x="475.3" y="1429" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="478.29" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="869" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="879.5" ></text>
</g>
<g >
<title>psi_task_switch (166,519,637 samples, 0.25%)</title><rect x="461.6" y="1477" width="2.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="464.60" y="1487.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (40,783,430 samples, 0.06%)</title><rect x="39.9" y="1397" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="42.88" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (245,446,018 samples, 0.36%)</title><rect x="1050.0" y="1573" width="4.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1053.00" y="1583.5" ></text>
</g>
<g >
<title>generic_permission (53,151,002 samples, 0.08%)</title><rect x="653.3" y="1365" width="0.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="656.26" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1077" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1087.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2,059,615,020 samples, 3.04%)</title><rect x="677.4" y="1397" width="35.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="680.38" y="1407.5" >tcp..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1429" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,663,655 samples, 0.02%)</title><rect x="308.7" y="565" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.73" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="709" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (163,116,483 samples, 0.24%)</title><rect x="305.7" y="1557" width="2.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="308.71" y="1567.5" ></text>
</g>
<g >
<title>do_fault (7,783,453 samples, 0.01%)</title><rect x="300.4" y="1461" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="303.35" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,845,633 samples, 0.01%)</title><rect x="303.7" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="306.74" y="1535.5" ></text>
</g>
<g >
<title>[sleep] (9,628,498 samples, 0.01%)</title><rect x="1049.7" y="1525" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1052.72" y="1535.5" ></text>
</g>
<g >
<title>intel_idle (731,701,552 samples, 1.08%)</title><rect x="1109.9" y="1445" width="12.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1112.88" y="1455.5" ></text>
</g>
<g >
<title>netif_rx_internal (51,299,662 samples, 0.08%)</title><rect x="943.9" y="725" width="0.8" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="946.85" y="735.5" ></text>
</g>
<g >
<title>process_backlog (3,251,105,298 samples, 4.79%)</title><rect x="919.3" y="1141" width="56.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="922.30" y="1151.5" >proce..</text>
</g>
<g >
<title>inet_ehashfn (51,265,580 samples, 0.08%)</title><rect x="691.2" y="949" width="0.8" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="694.15" y="959.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_skmem (124,127,620 samples, 0.18%)</title><rect x="273.4" y="1397" width="2.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="276.37" y="1407.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (174,197,715 samples, 0.26%)</title><rect x="469.5" y="1541" width="3.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="472.53" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1285" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="181" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="191.5" ></text>
</g>
<g >
<title>irq_exit_rcu (24,175,499 samples, 0.04%)</title><rect x="447.2" y="1397" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="450.23" y="1407.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (8,530,823 samples, 0.01%)</title><rect x="323.8" y="1269" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="326.84" y="1279.5" ></text>
</g>
<g >
<title>__do_fault (7,783,453 samples, 0.01%)</title><rect x="300.4" y="1429" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="303.35" y="1439.5" ></text>
</g>
<g >
<title>set_default_locale (17,816,233 samples, 0.03%)</title><rect x="1048.7" y="1509" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1051.71" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="261" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="271.5" ></text>
</g>
<g >
<title>run_ksoftirqd (50,799,940 samples, 0.07%)</title><rect x="1100.3" y="1509" width="0.9" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1103.27" y="1519.5" ></text>
</g>
<g >
<title>__inet_lookup_established (221,047,494 samples, 0.33%)</title><rect x="928.8" y="1013" width="3.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="931.82" y="1023.5" ></text>
</g>
<g >
<title>tcp_data_ready (38,942,958 samples, 0.06%)</title><rect x="19.3" y="981" width="0.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="22.30" y="991.5" ></text>
</g>
<g >
<title>recv (15,731,233,934 samples, 23.19%)</title><rect x="26.5" y="1573" width="273.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="29.50" y="1583.5" >recv</text>
</g>
<g >
<title>[bash] (13,896,948 samples, 0.02%)</title><rect x="1043.1" y="1141" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1046.13" y="1151.5" ></text>
</g>
<g >
<title>ct_kernel_exit.constprop.0 (10,965,637 samples, 0.02%)</title><rect x="1186.6" y="1365" width="0.2" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1189.57" y="1375.5" ></text>
</g>
<g >
<title>try_to_unlazy_next (9,665,359 samples, 0.01%)</title><rect x="304.9" y="1381" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="307.92" y="1391.5" ></text>
</g>
<g >
<title>__libc_start_main (9,628,498 samples, 0.01%)</title><rect x="1049.7" y="1557" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1052.72" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1493" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,663,655 samples, 0.02%)</title><rect x="308.7" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.73" y="511.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (62,509,065 samples, 0.09%)</title><rect x="323.8" y="1509" width="1.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="326.77" y="1519.5" ></text>
</g>
<g >
<title>__do_sys_newfstat (108,929,690 samples, 0.16%)</title><rect x="478.2" y="1509" width="1.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="481.22" y="1519.5" ></text>
</g>
<g >
<title>__update_load_avg_se (41,033,030 samples, 0.06%)</title><rect x="451.6" y="1381" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="454.61" y="1391.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (24,175,499 samples, 0.04%)</title><rect x="447.2" y="1429" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="450.23" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="485" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (294,969,967 samples, 0.43%)</title><rect x="62.6" y="1397" width="5.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="65.63" y="1407.5" ></text>
</g>
<g >
<title>filemap_get_folios_tag (242,507,809 samples, 0.36%)</title><rect x="1101.2" y="1333" width="4.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1104.16" y="1343.5" ></text>
</g>
<g >
<title>netlink_dump (10,048,801 samples, 0.01%)</title><rect x="377.7" y="1445" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="380.67" y="1455.5" ></text>
</g>
<g >
<title>search_binary_handler (18,282,747 samples, 0.03%)</title><rect x="1049.0" y="1461" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1052.02" y="1471.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (5,824,574,932 samples, 8.59%)</title><rect x="726.4" y="1413" width="101.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="729.41" y="1423.5" >sk_page_frag..</text>
</g>
<g >
<title>load_elf_interp.constprop.0 (9,758,518 samples, 0.01%)</title><rect x="1050.0" y="1429" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1053.00" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (42,591,450 samples, 0.06%)</title><rect x="448.6" y="1397" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="451.58" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,373,956 samples, 0.02%)</title><rect x="338.9" y="1541" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="341.93" y="1551.5" ></text>
</g>
<g >
<title>neigh_hh_output (648,384,334 samples, 0.96%)</title><rect x="685.4" y="1205" width="11.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="688.37" y="1215.5" ></text>
</g>
<g >
<title>ovl_read_iter (7,985,859,544 samples, 11.77%)</title><rect x="491.5" y="1493" width="138.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="494.45" y="1503.5" >ovl_read_iter</text>
</g>
<g >
<title>copy_page_range (38,069,774 samples, 0.06%)</title><rect x="324.0" y="1285" width="0.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="326.98" y="1295.5" ></text>
</g>
<g >
<title>[ls] (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1573" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="308.17" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1093" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="1103.5" ></text>
</g>
<g >
<title>__get_user_8 (41,353,664 samples, 0.06%)</title><rect x="291.5" y="1445" width="0.8" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="294.54" y="1455.5" ></text>
</g>
<g >
<title>tcp_data_queue (38,942,958 samples, 0.06%)</title><rect x="19.3" y="997" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="22.30" y="1007.5" ></text>
</g>
<g >
<title>update_load_avg (82,032,888 samples, 0.12%)</title><rect x="450.9" y="1397" width="1.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="453.89" y="1407.5" ></text>
</g>
<g >
<title>sched_clock (40,675,714 samples, 0.06%)</title><rect x="96.0" y="1317" width="0.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="98.98" y="1327.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,845,633 samples, 0.01%)</title><rect x="303.7" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="306.74" y="1567.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (51,600,343 samples, 0.08%)</title><rect x="730.0" y="1349" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="732.95" y="1359.5" ></text>
</g>
<g >
<title>free_unref_page_prepare (307,372,653 samples, 0.45%)</title><rect x="984.5" y="1061" width="5.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="987.52" y="1071.5" ></text>
</g>
<g >
<title>[libc.so.6] (265,935,690 samples, 0.39%)</title><rect x="314.8" y="1573" width="4.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="317.75" y="1583.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,012,053 samples, 0.01%)</title><rect x="1049.5" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1052.49" y="1535.5" ></text>
</g>
<g >
<title>expr (137,878,631 samples, 0.20%)</title><rect x="301.8" y="1589" width="2.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="304.77" y="1599.5" ></text>
</g>
<g >
<title>mmap_region (11,917,248 samples, 0.02%)</title><rect x="304.5" y="1461" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="307.51" y="1471.5" ></text>
</g>
<g >
<title>read_tsc (34,529,756 samples, 0.05%)</title><rect x="287.4" y="1397" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="290.37" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,290,121 samples, 0.01%)</title><rect x="1043.4" y="1093" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1046.37" y="1103.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_skmem (49,733,748 samples, 0.07%)</title><rect x="708.6" y="1301" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="711.63" y="1311.5" ></text>
</g>
<g >
<title>_copy_to_iter (5,564,906,973 samples, 8.20%)</title><rect x="507.6" y="1365" width="96.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="510.65" y="1375.5" >_copy_to_iter</text>
</g>
<g >
<title>elf_map (6,372,693 samples, 0.01%)</title><rect x="304.0" y="1413" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="306.98" y="1423.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (404,972,351 samples, 0.60%)</title><rect x="686.7" y="1061" width="7.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="689.73" y="1071.5" ></text>
</g>
<g >
<title>vfs_read (23,467,346 samples, 0.03%)</title><rect x="377.3" y="1509" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="380.26" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1349" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1359.5" ></text>
</g>
<g >
<title>do_mmap (11,917,248 samples, 0.02%)</title><rect x="304.5" y="1477" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="307.51" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15,144,274 samples, 0.02%)</title><rect x="308.7" y="1173" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1183.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (51,344,994 samples, 0.08%)</title><rect x="919.9" y="1093" width="0.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="922.92" y="1103.5" ></text>
</g>
<g >
<title>v8::internal::Accessors::ReconfigureToDataProperty (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1413" width="1.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="327.89" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21,408,925,560 samples, 31.56%)</title><rect x="661.3" y="1557" width="372.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="664.34" y="1567.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>do_syscall_64 (7,128,978 samples, 0.01%)</title><rect x="304.0" y="1557" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="306.98" y="1567.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (295,404,312 samples, 0.44%)</title><rect x="282.8" y="1429" width="5.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="285.84" y="1439.5" ></text>
</g>
<g >
<title>do_fault (98,670,073 samples, 0.15%)</title><rect x="302.0" y="1349" width="1.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="304.96" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,514,299 samples, 0.01%)</title><rect x="308.7" y="453" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.73" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="981" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="991.5" ></text>
</g>
<g >
<title>call_cpuidle (198,245,249 samples, 0.29%)</title><rect x="1186.5" y="1429" width="3.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1189.46" y="1439.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (42,150,859 samples, 0.06%)</title><rect x="380.7" y="1509" width="0.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="383.74" y="1519.5" ></text>
</g>
<g >
<title>process_backlog (516,166,732 samples, 0.76%)</title><rect x="686.7" y="1093" width="9.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="689.73" y="1103.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,435,560 samples, 0.01%)</title><rect x="1049.4" y="1557" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1052.36" y="1567.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (29,282,685 samples, 0.04%)</title><rect x="469.5" y="1381" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="472.55" y="1391.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (208,877,296 samples, 0.31%)</title><rect x="277.7" y="1045" width="3.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="280.74" y="1055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (259,227,551 samples, 0.38%)</title><rect x="1095.0" y="1573" width="4.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1098.00" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="149" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="159.5" ></text>
</g>
<g >
<title>wait_for (6,290,121 samples, 0.01%)</title><rect x="1043.4" y="1141" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1046.37" y="1151.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (108,929,690 samples, 0.16%)</title><rect x="478.2" y="1477" width="1.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="481.22" y="1487.5" ></text>
</g>
<g >
<title>tcp_data_ready (41,621,506 samples, 0.06%)</title><rect x="44.3" y="1381" width="0.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="47.26" y="1391.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (204,267,902 samples, 0.30%)</title><rect x="473.5" y="1509" width="3.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="476.52" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (153,068,205 samples, 0.23%)</title><rect x="959.0" y="837" width="2.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="962.02" y="847.5" ></text>
</g>
<g >
<title>cpuidle_select (96,073,229 samples, 0.14%)</title><rect x="447.7" y="1493" width="1.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="450.65" y="1503.5" ></text>
</g>
<g >
<title>tcp_send_ack (293,337,965 samples, 0.43%)</title><rect x="277.7" y="1397" width="5.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="280.73" y="1407.5" ></text>
</g>
<g >
<title>llist_reverse_order (169,161,079 samples, 0.25%)</title><rect x="453.9" y="1493" width="3.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="456.93" y="1503.5" ></text>
</g>
<g >
<title>file_free_rcu (97,199,772 samples, 0.14%)</title><rect x="378.0" y="1429" width="1.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="380.98" y="1439.5" ></text>
</g>
<g >
<title>write (14,304,591 samples, 0.02%)</title><rect x="342.8" y="1477" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="345.83" y="1487.5" ></text>
</g>
<g >
<title>destroy_large_folio (598,880,562 samples, 0.88%)</title><rect x="980.3" y="1109" width="10.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="983.33" y="1119.5" ></text>
</g>
<g >
<title>__pmd_alloc (26,556,153 samples, 0.04%)</title><rect x="324.0" y="1253" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="326.98" y="1263.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (230,864,421 samples, 0.34%)</title><rect x="16.0" y="1125" width="4.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="18.96" y="1135.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (163,116,483 samples, 0.24%)</title><rect x="305.7" y="1541" width="2.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="308.71" y="1551.5" ></text>
</g>
<g >
<title>_Fork (58,089,665 samples, 0.09%)</title><rect x="323.8" y="1429" width="1.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="326.84" y="1439.5" ></text>
</g>
<g >
<title>os_xsave (260,804,004 samples, 0.38%)</title><rect x="295.6" y="1557" width="4.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="298.58" y="1567.5" ></text>
</g>
<g >
<title>security_file_permission (99,211,917 samples, 0.15%)</title><rect x="631.4" y="1477" width="1.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="634.37" y="1487.5" ></text>
</g>
<g >
<title>__mmput (18,282,747 samples, 0.03%)</title><rect x="1049.0" y="1381" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1052.02" y="1391.5" ></text>
</g>
<g >
<title>mpage_prepare_extent_to_map (242,507,809 samples, 0.36%)</title><rect x="1101.2" y="1349" width="4.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1104.16" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="837" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="847.5" ></text>
</g>
<g >
<title>enqueue_task_fair (84,751,097 samples, 0.12%)</title><rect x="1169.4" y="1429" width="1.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1172.43" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (87,110,747 samples, 0.13%)</title><rect x="980.3" y="1077" width="1.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="983.33" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1221" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1231.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (97,199,772 samples, 0.14%)</title><rect x="378.0" y="1381" width="1.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="380.98" y="1391.5" ></text>
</g>
<g >
<title>__netif_receive_skb (404,972,351 samples, 0.60%)</title><rect x="686.7" y="1077" width="7.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="689.73" y="1087.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (42,626,477 samples, 0.06%)</title><rect x="465.9" y="1509" width="0.7" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="468.87" y="1519.5" ></text>
</g>
<g >
<title>[bash] (7,491,188 samples, 0.01%)</title><rect x="1034.6" y="1413" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1037.60" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock (50,200,686 samples, 0.07%)</title><rect x="924.4" y="1029" width="0.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="927.38" y="1039.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (16,322,107 samples, 0.02%)</title><rect x="1095.1" y="1445" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1098.09" y="1455.5" ></text>
</g>
<g >
<title>ip_output (4,886,077,665 samples, 7.20%)</title><rect x="911.0" y="1317" width="85.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="913.99" y="1327.5" >ip_output</text>
</g>
<g >
<title>__release_sock (42,624,505 samples, 0.06%)</title><rect x="56.2" y="1413" width="0.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="59.19" y="1423.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (271,218,525 samples, 0.40%)</title><rect x="308.7" y="1525" width="4.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="311.68" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_execve (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1477" width="3.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="342.45" y="1487.5" ></text>
</g>
<g >
<title>ext4_file_open (51,284,785 samples, 0.08%)</title><rect x="651.5" y="1349" width="0.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="654.48" y="1359.5" ></text>
</g>
<g >
<title>ip_finish_output2 (320,948,605 samples, 0.47%)</title><rect x="15.9" y="1285" width="5.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="18.95" y="1295.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (50,752,036 samples, 0.07%)</title><rect x="1033.7" y="1557" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1036.71" y="1567.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (41,654,811 samples, 0.06%)</title><rect x="1182.9" y="1477" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1185.90" y="1487.5" ></text>
</g>
<g >
<title>xas_load (51,217,059 samples, 0.08%)</title><rect x="624.1" y="1349" width="0.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="627.12" y="1359.5" ></text>
</g>
<g >
<title>task_fork_fair (11,667,185 samples, 0.02%)</title><rect x="1048.5" y="1109" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1051.46" y="1119.5" ></text>
</g>
<g >
<title>__alloc_skb (48,825,118 samples, 0.07%)</title><rect x="936.3" y="933" width="0.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="939.27" y="943.5" ></text>
</g>
<g >
<title>__sk_mem_schedule (612,621,108 samples, 0.90%)</title><rect x="1021.3" y="1397" width="10.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1024.28" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="149" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="159.5" ></text>
</g>
<g >
<title>do_user_addr_fault (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1269" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="327.89" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1221" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="1231.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (50,376,694 samples, 0.07%)</title><rect x="932.7" y="1013" width="0.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="935.67" y="1023.5" ></text>
</g>
<g >
<title>setlocale (102,049,378 samples, 0.15%)</title><rect x="301.9" y="1509" width="1.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="304.90" y="1519.5" ></text>
</g>
<g >
<title>walk_component (9,665,359 samples, 0.01%)</title><rect x="304.9" y="1413" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="307.92" y="1423.5" ></text>
</g>
<g >
<title>rw_verify_area (162,191,190 samples, 0.24%)</title><rect x="627.5" y="1445" width="2.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="630.53" y="1455.5" ></text>
</g>
<g >
<title>native_sched_clock (51,234,655 samples, 0.08%)</title><rect x="967.9" y="773" width="0.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="970.92" y="783.5" ></text>
</g>
<g >
<title>__libc_start_main (829,181,630 samples, 1.22%)</title><rect x="1034.6" y="1557" width="14.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1037.60" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15,144,274 samples, 0.02%)</title><rect x="308.7" y="1093" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.72" y="1103.5" ></text>
</g>
<g >
<title>[libc.so.6] (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1541" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="342.45" y="1551.5" ></text>
</g>
<g >
<title>do_idle (4,979,293,287 samples, 7.34%)</title><rect x="380.7" y="1525" width="86.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="383.74" y="1535.5" >do_idle</text>
</g>
<g >
<title>__x64_sys_execve (18,282,747 samples, 0.03%)</title><rect x="1049.0" y="1541" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1052.02" y="1551.5" ></text>
</g>
<g >
<title>statx (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1461" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="308.17" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (17,816,233 samples, 0.03%)</title><rect x="1048.7" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1051.71" y="1423.5" ></text>
</g>
<g >
<title>getname_flags (51,073,427 samples, 0.08%)</title><rect x="635.0" y="1477" width="0.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="638.02" y="1487.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (292,860,804 samples, 0.43%)</title><rect x="277.7" y="1333" width="5.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="280.74" y="1343.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::OrdinaryDefineOwnProperty (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1477" width="1.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="327.89" y="1487.5" ></text>
</g>
<g >
<title>start_secondary (5,104,748,005 samples, 7.52%)</title><rect x="380.7" y="1557" width="88.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="383.74" y="1567.5" >start_seco..</text>
</g>
<g >
<title>[bash] (15,005,848 samples, 0.02%)</title><rect x="1048.5" y="1349" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1051.45" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1237" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="1247.5" ></text>
</g>
<g >
<title>vfs_write (14,304,591 samples, 0.02%)</title><rect x="342.8" y="1397" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="345.83" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_lock (28,212,915 samples, 0.04%)</title><rect x="16.0" y="1045" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="18.96" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,514,299 samples, 0.01%)</title><rect x="308.7" y="437" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.73" y="447.5" ></text>
</g>
<g >
<title>__slab_free (39,096,351 samples, 0.06%)</title><rect x="17.9" y="901" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="20.89" y="911.5" ></text>
</g>
<g >
<title>v8::internal::compiler::LoopFinderImpl::PropagateBackward (245,734,228 samples, 0.36%)</title><rect x="314.9" y="1429" width="4.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="317.92" y="1439.5" ></text>
</g>
<g >
<title>__slab_free (97,199,772 samples, 0.14%)</title><rect x="378.0" y="1397" width="1.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="380.98" y="1407.5" ></text>
</g>
<g >
<title>ovl_write_iter (11,593,400 samples, 0.02%)</title><rect x="342.9" y="1381" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="345.88" y="1391.5" ></text>
</g>
<g >
<title>override_creds (52,062,444 samples, 0.08%)</title><rect x="493.5" y="1461" width="0.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="496.50" y="1471.5" ></text>
</g>
<g >
<title>copyout (154,801,085 samples, 0.23%)</title><rect x="604.4" y="1365" width="2.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="607.44" y="1375.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (58,141,762 samples, 0.09%)</title><rect x="479.1" y="1429" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="482.10" y="1439.5" ></text>
</g>
<g >
<title>__sk_mem_raise_allocated (561,441,864 samples, 0.83%)</title><rect x="1022.2" y="1381" width="9.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1025.17" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (20,477,234 samples, 0.03%)</title><rect x="304.4" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="307.36" y="1583.5" ></text>
</g>
<g >
<title>alloc_empty_file (120,397,046 samples, 0.18%)</title><rect x="647.6" y="1461" width="2.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="650.59" y="1471.5" ></text>
</g>
<g >
<title>ip_output (292,860,804 samples, 0.43%)</title><rect x="277.7" y="1301" width="5.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="280.74" y="1311.5" ></text>
</g>
<g >
<title>cpu_startup_entry (4,657,477,755 samples, 6.87%)</title><rect x="1105.4" y="1541" width="81.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1108.44" y="1551.5" >cpu_start..</text>
</g>
<g >
<title>copy_process (58,089,665 samples, 0.09%)</title><rect x="323.8" y="1333" width="1.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="326.84" y="1343.5" ></text>
</g>
<g >
<title>ip_queue_xmit (292,860,804 samples, 0.43%)</title><rect x="277.7" y="1349" width="5.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="280.74" y="1359.5" ></text>
</g>
<g >
<title>ct_idle_exit (52,698,933 samples, 0.08%)</title><rect x="384.9" y="1445" width="0.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="387.86" y="1455.5" ></text>
</g>
<g >
<title>anon_vma_fork (8,530,823 samples, 0.01%)</title><rect x="323.8" y="1285" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="326.84" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,857,517 samples, 0.02%)</title><rect x="308.7" y="981" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="991.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (102,517,825 samples, 0.15%)</title><rect x="943.0" y="773" width="1.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="945.96" y="783.5" ></text>
</g>
<g >
<title>sock_write_iter (20,843,970,392 samples, 30.72%)</title><rect x="669.4" y="1477" width="362.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="672.38" y="1487.5" >sock_write_iter</text>
</g>
<g >
<title>ipv4_mtu (50,514,359 samples, 0.07%)</title><rect x="1001.4" y="1397" width="0.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1004.43" y="1407.5" ></text>
</g>
<g >
<title>setlocale (9,628,498 samples, 0.01%)</title><rect x="1049.7" y="1509" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1052.72" y="1519.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (51,299,662 samples, 0.08%)</title><rect x="943.9" y="709" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="946.85" y="719.5" ></text>
</g>
<g >
<title>sock_def_readable (38,942,958 samples, 0.06%)</title><rect x="19.3" y="965" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="22.30" y="975.5" ></text>
</g>
<g >
<title>ip_local_deliver (230,864,421 samples, 0.34%)</title><rect x="16.0" y="1093" width="4.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="18.96" y="1103.5" ></text>
</g>
<g >
<title>update_rq_clock (58,273,491 samples, 0.09%)</title><rect x="1172.4" y="1461" width="1.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1175.39" y="1471.5" ></text>
</g>
<g >
<title>psi_task_change (85,455,739 samples, 0.13%)</title><rect x="1170.9" y="1429" width="1.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1173.90" y="1439.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (34,023,730 samples, 0.05%)</title><rect x="22.9" y="1413" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="25.89" y="1423.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (51,326,419 samples, 0.08%)</title><rect x="918.4" y="1141" width="0.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="921.41" y="1151.5" ></text>
</g>
<g >
<title>remove_wait_queue (294,969,967 samples, 0.43%)</title><rect x="62.6" y="1413" width="5.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="65.63" y="1423.5" ></text>
</g>
<g >
<title>__rcu_read_lock (51,222,988 samples, 0.08%)</title><rect x="921.7" y="1077" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="924.71" y="1087.5" ></text>
</g>
<g >
<title>fsnotify (50,695,196 samples, 0.07%)</title><rect x="654.2" y="1365" width="0.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="657.19" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (268,991,173 samples, 0.40%)</title><rect x="308.7" y="1413" width="4.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.72" y="1423.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (18,282,747 samples, 0.03%)</title><rect x="1049.0" y="1525" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1052.02" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2,605,807,298 samples, 3.84%)</title><rect x="927.0" y="1029" width="45.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="930.04" y="1039.5" >tcp_..</text>
</g>
<g >
<title>__tcp_ack_snd_check (697,031,215 samples, 1.03%)</title><rect x="936.3" y="981" width="12.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="939.27" y="991.5" ></text>
</g>
<g >
<title>__fput (102,396,010 samples, 0.15%)</title><rect x="475.3" y="1445" width="1.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="478.29" y="1455.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (42,941,127 samples, 0.06%)</title><rect x="471.8" y="1445" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="474.79" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,917,248 samples, 0.02%)</title><rect x="304.5" y="1541" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="307.51" y="1551.5" ></text>
</g>
<g >
<title>neigh_hh_output (320,948,605 samples, 0.47%)</title><rect x="15.9" y="1269" width="5.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="18.95" y="1279.5" ></text>
</g>
<g >
<title>vfs_fstatat (206,654,957 samples, 0.30%)</title><rect x="635.0" y="1493" width="3.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="638.02" y="1503.5" ></text>
</g>
<g >
<title>vfs_open (206,354,602 samples, 0.30%)</title><rect x="651.5" y="1445" width="3.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="654.48" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (9,665,359 samples, 0.01%)</title><rect x="304.9" y="1493" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="307.92" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (51,286,041 samples, 0.08%)</title><rect x="685.8" y="1093" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="688.83" y="1103.5" ></text>
</g>
<g >
<title>dequeue_task_fair (861,542,440 samples, 1.27%)</title><rect x="72.3" y="1333" width="15.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="75.33" y="1343.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (142,404,062 samples, 0.21%)</title><rect x="323.8" y="1557" width="2.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="326.77" y="1567.5" ></text>
</g>
<g >
<title>[[stack]] (7,435,560 samples, 0.01%)</title><rect x="1049.4" y="1573" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1052.36" y="1583.5" ></text>
</g>
<g >
<title>readlink (9,665,359 samples, 0.01%)</title><rect x="304.9" y="1541" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="307.92" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="245" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="255.5" ></text>
</g>
<g >
<title>ip_queue_xmit (320,948,605 samples, 0.47%)</title><rect x="15.9" y="1381" width="5.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="18.95" y="1391.5" ></text>
</g>
<g >
<title>ovl_show_options (19,304,836 samples, 0.03%)</title><rect x="301.4" y="1429" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="304.39" y="1439.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (51,073,427 samples, 0.08%)</title><rect x="635.0" y="1461" width="0.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="638.02" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1125" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1135.5" ></text>
</g>
<g >
<title>sock_recvmsg (12,360,630 samples, 0.02%)</title><rect x="377.5" y="1477" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="380.45" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (589,779,207 samples, 0.87%)</title><rect x="13.8" y="1525" width="10.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="16.82" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="757" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="767.5" ></text>
</g>
<g >
<title>[expr] (102,049,378 samples, 0.15%)</title><rect x="301.9" y="1573" width="1.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="304.90" y="1583.5" ></text>
</g>
<g >
<title>[bash] (6,290,121 samples, 0.01%)</title><rect x="1043.4" y="1125" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1046.37" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="869" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="405" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (268,991,173 samples, 0.40%)</title><rect x="308.7" y="1301" width="4.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1311.5" ></text>
</g>
<g >
<title>wb_writeback (242,507,809 samples, 0.36%)</title><rect x="1101.2" y="1461" width="4.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1104.16" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (65,742,455 samples, 0.10%)</title><rect x="477.1" y="1557" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="480.07" y="1567.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (924,850,956 samples, 1.36%)</title><rect x="608.9" y="1365" width="16.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="611.93" y="1375.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1429" width="3.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="342.45" y="1439.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (50,695,196 samples, 0.07%)</title><rect x="654.2" y="1397" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="657.19" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1061" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1071.5" ></text>
</g>
<g >
<title>sched_cgroup_fork (11,667,185 samples, 0.02%)</title><rect x="1048.5" y="1125" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1051.46" y="1135.5" ></text>
</g>
<g >
<title>net_rx_action (292,860,804 samples, 0.43%)</title><rect x="277.7" y="1157" width="5.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="280.74" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15,144,274 samples, 0.02%)</title><rect x="308.7" y="1141" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1151.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (153,068,205 samples, 0.23%)</title><rect x="959.0" y="821" width="2.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="962.02" y="831.5" ></text>
</g>
<g >
<title>pick_next_task_fair (83,942,944 samples, 0.12%)</title><rect x="1180.1" y="1461" width="1.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1183.11" y="1471.5" ></text>
</g>
<g >
<title>main (95,989,197 samples, 0.14%)</title><rect x="24.8" y="1573" width="1.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="27.83" y="1583.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (53,159,262 samples, 0.08%)</title><rect x="952.0" y="949" width="0.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="954.98" y="959.5" ></text>
</g>
<g >
<title>default_wake_function (562,802,708 samples, 0.83%)</title><rect x="959.0" y="869" width="9.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="962.02" y="879.5" ></text>
</g>
<g >
<title>worker_thread (246,419,745 samples, 0.36%)</title><rect x="1101.2" y="1525" width="4.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1104.15" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,268,899 samples, 0.02%)</title><rect x="308.7" y="805" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="815.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (41,612,660 samples, 0.06%)</title><rect x="61.9" y="1397" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="64.91" y="1407.5" ></text>
</g>
<g >
<title>__sys_recvfrom (14,860,907,399 samples, 21.91%)</title><rect x="30.9" y="1509" width="258.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="33.88" y="1519.5" >__sys_recvfrom</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (268,991,173 samples, 0.40%)</title><rect x="308.7" y="1381" width="4.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1391.5" ></text>
</g>
<g >
<title>fib6_walk_continue (10,048,801 samples, 0.01%)</title><rect x="377.7" y="1381" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="380.67" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (12,663,655 samples, 0.02%)</title><rect x="308.7" y="517" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.73" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1205" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1215.5" ></text>
</g>
<g >
<title>skb_free_head (51,062,814 samples, 0.08%)</title><rect x="990.7" y="1125" width="0.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="993.74" y="1135.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (112,181,127 samples, 0.17%)</title><rect x="27.5" y="1557" width="1.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="30.47" y="1567.5" ></text>
</g>
<g >
<title>Builtins_KeyedLoadIC_Megamorphic (231,949,138 samples, 0.34%)</title><rect x="319.5" y="1557" width="4.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="322.50" y="1567.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineImpl::OptimizeGraph (247,080,698 samples, 0.36%)</title><rect x="314.9" y="1461" width="4.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="317.92" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (262,336,554 samples, 0.39%)</title><rect x="334.3" y="1573" width="4.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.30" y="1583.5" ></text>
</g>
<g >
<title>touch_atime (66,514,754 samples, 0.10%)</title><rect x="492.3" y="1461" width="1.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="495.35" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,857,517 samples, 0.02%)</title><rect x="308.7" y="949" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,514,299 samples, 0.01%)</title><rect x="308.7" y="485" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.73" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="277" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="287.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (51,091,944 samples, 0.08%)</title><rect x="1027.5" y="1317" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1030.46" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (17,816,233 samples, 0.03%)</title><rect x="1048.7" y="1461" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1051.71" y="1471.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (36,181,490 samples, 0.05%)</title><rect x="45.0" y="1381" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="47.99" y="1391.5" ></text>
</g>
<g >
<title>kfree_skbmem (51,263,955 samples, 0.08%)</title><rect x="709.5" y="1333" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="712.50" y="1343.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (277,533,517 samples, 0.41%)</title><rect x="308.7" y="1573" width="4.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="311.68" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="885" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="895.5" ></text>
</g>
<g >
<title>___slab_alloc (52,255,035 samples, 0.08%)</title><rect x="648.8" y="1429" width="0.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="651.77" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (51,265,642 samples, 0.08%)</title><rect x="730.9" y="1333" width="0.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="733.85" y="1343.5" ></text>
</g>
<g >
<title>rb_erase (45,207,067 samples, 0.07%)</title><rect x="460.1" y="1445" width="0.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="463.08" y="1455.5" ></text>
</g>
<g >
<title>update_curr (11,667,185 samples, 0.02%)</title><rect x="1048.5" y="1093" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1051.46" y="1103.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,559,986 samples, 0.01%)</title><rect x="304.4" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="307.36" y="1535.5" ></text>
</g>
<g >
<title>show_mountinfo (19,304,836 samples, 0.03%)</title><rect x="301.4" y="1445" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="304.39" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,628,498 samples, 0.01%)</title><rect x="1049.7" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1052.72" y="1487.5" ></text>
</g>
<g >
<title>_IO_fflush (6,327,910 samples, 0.01%)</title><rect x="1034.6" y="1397" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1037.60" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,581,780 samples, 0.02%)</title><rect x="308.7" y="821" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="831.5" ></text>
</g>
<g >
<title>memcg_account_kmem (26,556,153 samples, 0.04%)</title><rect x="324.0" y="1189" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="326.98" y="1199.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (49,733,748 samples, 0.07%)</title><rect x="708.6" y="1333" width="0.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="711.63" y="1343.5" ></text>
</g>
<g >
<title>tcp_try_rmem_schedule (44,013,528 samples, 0.06%)</title><rect x="43.5" y="1365" width="0.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="46.50" y="1375.5" ></text>
</g>
<g >
<title>v8::internal::Handle&lt;v8::internal::NameDictionary&gt; v8::internal::BaseNameDictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::New&lt;v8::internal::Isolate&gt; (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1349" width="1.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="327.89" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,535,484 samples, 0.03%)</title><rect x="308.7" y="1237" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1247.5" ></text>
</g>
<g >
<title>page_remove_rmap (17,180,210 samples, 0.03%)</title><rect x="1049.0" y="1269" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1052.04" y="1279.5" ></text>
</g>
<g >
<title>do_filp_open (430,198,228 samples, 0.63%)</title><rect x="647.6" y="1493" width="7.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="650.59" y="1503.5" ></text>
</g>
<g >
<title>unmap_vmas (17,395,449 samples, 0.03%)</title><rect x="1049.0" y="1349" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1052.04" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1301" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (268,991,173 samples, 0.40%)</title><rect x="308.7" y="1365" width="4.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,917,248 samples, 0.02%)</title><rect x="304.5" y="1557" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="307.51" y="1567.5" ></text>
</g>
<g >
<title>ip_queue_xmit (43,278,641 samples, 0.06%)</title><rect x="278.5" y="917" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="281.48" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="597" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="607.5" ></text>
</g>
<g >
<title>down_write (52,224,590 samples, 0.08%)</title><rect x="649.7" y="1413" width="0.9" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="652.68" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (235,687,500 samples, 0.35%)</title><rect x="1050.2" y="1541" width="4.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1053.17" y="1551.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (273,273,604 samples, 0.40%)</title><rect x="290.1" y="1509" width="4.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="293.10" y="1519.5" ></text>
</g>
<g >
<title>bprm_execve (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1509" width="3.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="334.11" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1333" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1343.5" ></text>
</g>
<g >
<title>get_page_from_freelist (5,493,107,368 samples, 8.10%)</title><rect x="730.9" y="1349" width="95.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="733.85" y="1359.5" >get_page_fr..</text>
</g>
<g >
<title>__rcu_read_lock (51,290,040 samples, 0.08%)</title><rect x="941.2" y="869" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="944.18" y="879.5" ></text>
</g>
<g >
<title>vfs_iter_read (7,702,938,816 samples, 11.35%)</title><rect x="496.4" y="1477" width="134.0" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="499.37" y="1487.5" >vfs_iter_read</text>
</g>
<g >
<title>mmput (235,687,500 samples, 0.35%)</title><rect x="1050.2" y="1477" width="4.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1053.17" y="1487.5" ></text>
</g>
<g >
<title>read_tsc (102,441,930 samples, 0.15%)</title><rect x="970.6" y="965" width="1.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="973.58" y="975.5" ></text>
</g>
<g >
<title>apparmor_file_permission (100,684,078 samples, 0.15%)</title><rect x="627.5" y="1413" width="1.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="630.53" y="1423.5" ></text>
</g>
<g >
<title>handle_pte_fault (216,924,683 samples, 0.32%)</title><rect x="1039.4" y="1109" width="3.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1042.35" y="1119.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (11,460,844 samples, 0.02%)</title><rect x="1054.1" y="1381" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1057.07" y="1391.5" ></text>
</g>
<g >
<title>schedule (1,512,947,609 samples, 2.23%)</title><rect x="70.7" y="1381" width="26.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.74" y="1391.5" >s..</text>
</g>
<g >
<title>sk_reset_timer (50,753,774 samples, 0.07%)</title><rect x="998.9" y="1365" width="0.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1001.88" y="1375.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1125" width="1.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="327.89" y="1135.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (202,651,506 samples, 0.30%)</title><rect x="16.4" y="1029" width="3.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="19.45" y="1039.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (519,062,027 samples, 0.77%)</title><rect x="14.5" y="1461" width="9.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="17.46" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1509" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (430,198,228 samples, 0.63%)</title><rect x="647.6" y="1541" width="7.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="650.59" y="1551.5" ></text>
</g>
<g >
<title>poll_idle (2,975,446,563 samples, 4.39%)</title><rect x="395.9" y="1445" width="51.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="398.89" y="1455.5" >poll_..</text>
</g>
<g >
<title>ext4_do_writepages (242,507,809 samples, 0.36%)</title><rect x="1101.2" y="1365" width="4.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1104.16" y="1375.5" ></text>
</g>
<g >
<title>__folio_put (598,880,562 samples, 0.88%)</title><rect x="980.3" y="1125" width="10.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="983.33" y="1135.5" ></text>
</g>
<g >
<title>__put_user_8 (41,364,509 samples, 0.06%)</title><rect x="290.8" y="1461" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="293.82" y="1471.5" ></text>
</g>
<g >
<title>ip_finish_output2 (648,384,334 samples, 0.96%)</title><rect x="685.4" y="1221" width="11.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="688.37" y="1231.5" ></text>
</g>
<g >
<title>__switch_to (34,748,733 samples, 0.05%)</title><rect x="1092.9" y="1573" width="0.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1095.92" y="1583.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (835,376,805 samples, 1.23%)</title><rect x="1005.9" y="1413" width="14.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1008.86" y="1423.5" ></text>
</g>
<g >
<title>__switch_to_asm (18,305,601 samples, 0.03%)</title><rect x="96.7" y="1365" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="99.73" y="1375.5" ></text>
</g>
<g >
<title>do_idle (203,914,720 samples, 0.30%)</title><rect x="1186.4" y="1461" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1189.45" y="1471.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (204,151,227 samples, 0.30%)</title><rect x="1186.4" y="1541" width="3.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.45" y="1551.5" ></text>
</g>
<g >
<title>start_kernel (174,197,715 samples, 0.26%)</title><rect x="469.5" y="1525" width="3.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="472.53" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="165" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="175.5" ></text>
</g>
<g >
<title>open64 (430,198,228 samples, 0.63%)</title><rect x="647.6" y="1573" width="7.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="650.59" y="1583.5" ></text>
</g>
<g >
<title>available_idle_cpu (51,201,864 samples, 0.08%)</title><rect x="962.6" y="805" width="0.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="965.58" y="815.5" ></text>
</g>
<g >
<title>wb_workfn (242,507,809 samples, 0.36%)</title><rect x="1101.2" y="1493" width="4.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1104.16" y="1503.5" ></text>
</g>
<g >
<title>security_bprm_creds_for_exec (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1413" width="3.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="342.45" y="1423.5" ></text>
</g>
<g >
<title>clear_page_erms (4,689,657,628 samples, 6.91%)</title><rect x="731.7" y="1333" width="81.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="734.74" y="1343.5" >clear_pag..</text>
</g>
<g >
<title>vfs_iter_write (9,960,599 samples, 0.01%)</title><rect x="342.9" y="1365" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="345.91" y="1375.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (276,733,835 samples, 0.41%)</title><rect x="829.5" y="1381" width="4.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="832.52" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="565" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="575.5" ></text>
</g>
<g >
<title>ls (251,374,847 samples, 0.37%)</title><rect x="304.3" y="1589" width="4.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="307.31" y="1599.5" ></text>
</g>
<g >
<title>ksys_read (23,467,346 samples, 0.03%)</title><rect x="377.3" y="1525" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="380.26" y="1535.5" ></text>
</g>
<g >
<title>ip_local_out (4,886,077,665 samples, 7.20%)</title><rect x="911.0" y="1333" width="85.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="913.99" y="1343.5" >ip_local_out</text>
</g>
<g >
<title>do_syscall_64 (21,357,711,347 samples, 31.48%)</title><rect x="661.3" y="1541" width="371.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="664.34" y="1551.5" >do_syscall_64</text>
</g>
<g >
<title>[libc.so.6] (265,935,690 samples, 0.39%)</title><rect x="314.8" y="1557" width="4.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="317.75" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="549" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="559.5" ></text>
</g>
<g >
<title>rcu_core_si (50,799,940 samples, 0.07%)</title><rect x="1100.3" y="1477" width="0.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1103.27" y="1487.5" ></text>
</g>
<g >
<title>tcp_rcv_established (247,355,029 samples, 0.36%)</title><rect x="41.3" y="1397" width="4.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="44.31" y="1407.5" ></text>
</g>
<g >
<title>unmap_single_vma (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1333" width="3.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="334.11" y="1343.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (308,712,219 samples, 0.46%)</title><rect x="1168.0" y="1493" width="5.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1171.03" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="517" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="527.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (404,972,351 samples, 0.60%)</title><rect x="686.7" y="997" width="7.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="689.73" y="1007.5" ></text>
</g>
<g >
<title>tcp_send_mss (251,450,908 samples, 0.37%)</title><rect x="1000.6" y="1413" width="4.4" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1003.60" y="1423.5" ></text>
</g>
<g >
<title>ip_local_deliver (404,972,351 samples, 0.60%)</title><rect x="686.7" y="1029" width="7.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="689.73" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,304,591 samples, 0.02%)</title><rect x="342.8" y="1461" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="345.83" y="1471.5" ></text>
</g>
<g >
<title>wait_woken (1,683,945,800 samples, 2.48%)</title><rect x="67.8" y="1413" width="29.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="70.76" y="1423.5" >wa..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (430,198,228 samples, 0.63%)</title><rect x="647.6" y="1557" width="7.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="650.59" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1173" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1183.5" ></text>
</g>
<g >
<title>sock_def_readable (914,306,761 samples, 1.35%)</title><rect x="952.9" y="949" width="15.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="955.91" y="959.5" ></text>
</g>
<g >
<title>post_alloc_hook (262,255,658 samples, 0.39%)</title><rect x="813.3" y="1333" width="4.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="816.31" y="1343.5" ></text>
</g>
<g >
<title>start_kernel (204,151,227 samples, 0.30%)</title><rect x="1186.4" y="1525" width="3.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1189.45" y="1535.5" ></text>
</g>
<g >
<title>ip_rcv (404,972,351 samples, 0.60%)</title><rect x="686.7" y="1045" width="7.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="689.73" y="1055.5" ></text>
</g>
<g >
<title>__filemap_get_folio (7,783,453 samples, 0.01%)</title><rect x="300.4" y="1413" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="303.35" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,581,780 samples, 0.02%)</title><rect x="308.7" y="917" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="927.5" ></text>
</g>
<g >
<title>rw_verify_area (99,211,917 samples, 0.15%)</title><rect x="631.4" y="1493" width="1.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="634.37" y="1503.5" ></text>
</g>
<g >
<title>ovl_open (155,659,406 samples, 0.23%)</title><rect x="651.5" y="1413" width="2.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="654.48" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15,144,274 samples, 0.02%)</title><rect x="308.7" y="1077" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1087.5" ></text>
</g>
<g >
<title>ovl_inode_upper (7,763,383 samples, 0.01%)</title><rect x="308.5" y="1397" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="311.54" y="1407.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (206,654,957 samples, 0.30%)</title><rect x="635.0" y="1509" width="3.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="638.02" y="1519.5" ></text>
</g>
<g >
<title>v8::internal::compiler::BuildGraphFromBytecode (5,802,075 samples, 0.01%)</title><rect x="314.8" y="1445" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="317.82" y="1455.5" ></text>
</g>
<g >
<title>exc_page_fault (216,924,683 samples, 0.32%)</title><rect x="1039.4" y="1173" width="3.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1042.35" y="1183.5" ></text>
</g>
<g >
<title>exit_mmap (235,687,500 samples, 0.35%)</title><rect x="1050.2" y="1445" width="4.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1053.17" y="1455.5" ></text>
</g>
<g >
<title>set_next_entity (41,608,156 samples, 0.06%)</title><rect x="1180.8" y="1445" width="0.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1183.85" y="1455.5" ></text>
</g>
<g >
<title>tcp_skb_entail (51,009,663 samples, 0.08%)</title><rect x="1005.0" y="1413" width="0.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1007.97" y="1423.5" ></text>
</g>
<g >
<title>__memset (273,206,032 samples, 0.40%)</title><rect x="1011.2" y="1381" width="4.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1014.18" y="1391.5" ></text>
</g>
<g >
<title>prep_compound_page (51,085,959 samples, 0.08%)</title><rect x="826.4" y="1349" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="829.40" y="1359.5" ></text>
</g>
<g >
<title>do_statx (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1397" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="308.17" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="981" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="991.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (41,094,372 samples, 0.06%)</title><rect x="18.6" y="965" width="0.7" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="21.58" y="975.5" ></text>
</g>
<g >
<title>enqueue_entity (126,337,745 samples, 0.19%)</title><rect x="450.1" y="1413" width="2.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="453.12" y="1423.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (52,255,035 samples, 0.08%)</title><rect x="648.8" y="1445" width="0.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="651.77" y="1455.5" ></text>
</g>
<g >
<title>tcp_data_queue (42,624,505 samples, 0.06%)</title><rect x="56.2" y="1365" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="59.19" y="1375.5" ></text>
</g>
<g >
<title>ret_from_fork (161,123,886 samples, 0.24%)</title><rect x="377.9" y="1557" width="2.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="380.94" y="1567.5" ></text>
</g>
<g >
<title>get_page_from_freelist (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1141" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="327.89" y="1151.5" ></text>
</g>
<g >
<title>__handle_mm_fault (216,924,683 samples, 0.32%)</title><rect x="1039.4" y="1125" width="3.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1042.35" y="1135.5" ></text>
</g>
<g >
<title>__schedule (1,453,249,677 samples, 2.14%)</title><rect x="71.5" y="1365" width="25.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="74.46" y="1375.5" >_..</text>
</g>
<g >
<title>inet_sendmsg (555,498,944 samples, 0.82%)</title><rect x="13.8" y="1493" width="9.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="16.82" y="1503.5" ></text>
</g>
<g >
<title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (271,218,525 samples, 0.40%)</title><rect x="308.7" y="1493" width="4.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="311.68" y="1503.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (216,924,683 samples, 0.32%)</title><rect x="1039.4" y="1189" width="3.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1042.35" y="1199.5" ></text>
</g>
<g >
<title>inet_recvmsg (14,532,332,835 samples, 21.42%)</title><rect x="35.2" y="1477" width="252.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="38.21" y="1487.5" >inet_recvmsg</text>
</g>
<g >
<title>kmem_cache_free (42,117,510 samples, 0.06%)</title><rect x="20.8" y="1141" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="23.80" y="1151.5" ></text>
</g>
<g >
<title>filemap_map_pages (98,670,073 samples, 0.15%)</title><rect x="302.0" y="1317" width="1.7" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="304.96" y="1327.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (40,122,223 samples, 0.06%)</title><rect x="280.0" y="853" width="0.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="282.96" y="863.5" ></text>
</g>
<g >
<title>tcp_check_space (51,049,414 samples, 0.08%)</title><rect x="996.0" y="1381" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="999.04" y="1391.5" ></text>
</g>
<g >
<title>cpu_startup_entry (5,021,404,870 samples, 7.40%)</title><rect x="380.7" y="1541" width="87.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="383.74" y="1551.5" >cpu_startu..</text>
</g>
<g >
<title>dup_mm.constprop.0 (58,089,665 samples, 0.09%)</title><rect x="323.8" y="1317" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="326.84" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (258,728,138 samples, 0.38%)</title><rect x="1034.8" y="1157" width="4.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1037.84" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="293" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="303.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (39,096,351 samples, 0.06%)</title><rect x="17.9" y="885" width="0.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="20.89" y="895.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (320,948,605 samples, 0.47%)</title><rect x="15.9" y="1221" width="5.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="18.95" y="1231.5" ></text>
</g>
<g >
<title>Builtins_KeyedLoadIC_PolymorphicName (8,973,707 samples, 0.01%)</title><rect x="330.9" y="1557" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="333.90" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="357" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="367.5" ></text>
</g>
<g >
<title>do_read_fault (216,924,683 samples, 0.32%)</title><rect x="1039.4" y="1077" width="3.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1042.35" y="1087.5" ></text>
</g>
<g >
<title>vm_mmap (6,372,693 samples, 0.01%)</title><rect x="304.0" y="1397" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="306.98" y="1407.5" ></text>
</g>
<g >
<title>kfree_skbmem (55,434,235 samples, 0.08%)</title><rect x="705.6" y="1317" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="708.59" y="1327.5" ></text>
</g>
<g >
<title>handle_mm_fault (98,670,073 samples, 0.15%)</title><rect x="302.0" y="1397" width="1.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="304.96" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1445" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1455.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (43,278,641 samples, 0.06%)</title><rect x="278.5" y="901" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="281.48" y="911.5" ></text>
</g>
<g >
<title>handle_mm_fault (216,924,683 samples, 0.32%)</title><rect x="1039.4" y="1141" width="3.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1042.35" y="1151.5" ></text>
</g>
<g >
<title>v8::internal::compiler::BytecodeGraphBuilder::BuildLoopExitsUntilLoop (5,802,075 samples, 0.01%)</title><rect x="314.8" y="1365" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="317.82" y="1375.5" ></text>
</g>
<g >
<title>prepare_task_switch (42,379,543 samples, 0.06%)</title><rect x="460.9" y="1477" width="0.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="463.86" y="1487.5" ></text>
</g>
<g >
<title>ip_local_out (648,384,334 samples, 0.96%)</title><rect x="685.4" y="1285" width="11.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="688.37" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,763,383 samples, 0.01%)</title><rect x="308.5" y="1557" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="311.54" y="1567.5" ></text>
</g>
<g >
<title>ip_queue_xmit (364,091,308 samples, 0.54%)</title><rect x="941.2" y="917" width="6.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="944.18" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,857,517 samples, 0.02%)</title><rect x="308.7" y="1045" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,083,791 samples, 0.02%)</title><rect x="308.7" y="709" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.73" y="719.5" ></text>
</g>
<g >
<title>fsnotify (51,207,856 samples, 0.08%)</title><rect x="490.6" y="1477" width="0.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="493.56" y="1487.5" ></text>
</g>
<g >
<title>skb_free_head (40,122,223 samples, 0.06%)</title><rect x="280.0" y="901" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="282.96" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1461" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1471.5" ></text>
</g>
<g >
<title>ip_rcv (230,864,421 samples, 0.34%)</title><rect x="16.0" y="1109" width="4.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="18.96" y="1119.5" ></text>
</g>
<g >
<title>__libc_start_main (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1557" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="308.17" y="1567.5" ></text>
</g>
<g >
<title>page_counter_cancel (49,733,748 samples, 0.07%)</title><rect x="708.6" y="1221" width="0.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="711.63" y="1231.5" ></text>
</g>
<g >
<title>path_lookupat (104,460,953 samples, 0.15%)</title><rect x="635.9" y="1445" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="638.91" y="1455.5" ></text>
</g>
<g >
<title>release_sock (402,666,000 samples, 0.59%)</title><rect x="39.2" y="1445" width="7.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="42.21" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,857,517 samples, 0.02%)</title><rect x="308.7" y="933" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="943.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,886,411 samples, 0.01%)</title><rect x="300.3" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="303.33" y="1583.5" ></text>
</g>
<g >
<title>__alloc_pages (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1157" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="327.89" y="1167.5" ></text>
</g>
<g >
<title>__kfree_skb (40,122,223 samples, 0.06%)</title><rect x="280.0" y="933" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="282.96" y="943.5" ></text>
</g>
<g >
<title>try_to_unlazy (53,161,906 samples, 0.08%)</title><rect x="635.9" y="1413" width="0.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="638.91" y="1423.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (18,324,663,811 samples, 27.01%)</title><rect x="713.2" y="1429" width="318.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="716.20" y="1439.5" >tcp_sendmsg_locked</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="677" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="687.5" ></text>
</g>
<g >
<title>generic_file_open (51,284,785 samples, 0.08%)</title><rect x="651.5" y="1317" width="0.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="654.48" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_openat (7,763,383 samples, 0.01%)</title><rect x="308.5" y="1493" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="311.54" y="1503.5" ></text>
</g>
<g >
<title>__folio_alloc (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1173" width="1.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="327.89" y="1183.5" ></text>
</g>
<g >
<title>__fstat64 (174,672,145 samples, 0.26%)</title><rect x="477.1" y="1573" width="3.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="480.07" y="1583.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1557" width="3.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="342.45" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (128,738,799 samples, 0.19%)</title><rect x="469.5" y="1445" width="2.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="472.55" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,857,517 samples, 0.02%)</title><rect x="308.7" y="1029" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.72" y="1039.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (41,634,394 samples, 0.06%)</title><rect x="1185.1" y="1509" width="0.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1188.09" y="1519.5" ></text>
</g>
<g >
<title>skb_free_head (39,096,351 samples, 0.06%)</title><rect x="17.9" y="933" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="20.89" y="943.5" ></text>
</g>
<g >
<title>all (67,841,800,757 samples, 100%)</title><rect x="10.0" y="1605" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="357" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="367.5" ></text>
</g>
<g >
<title>sock_recvmsg (10,048,801 samples, 0.01%)</title><rect x="377.7" y="1477" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="380.67" y="1487.5" ></text>
</g>
<g >
<title>sk_reset_timer (52,517,788 samples, 0.08%)</title><rect x="699.3" y="1301" width="0.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="702.32" y="1311.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (50,926,567 samples, 0.08%)</title><rect x="951.1" y="965" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="954.10" y="975.5" ></text>
</g>
<g >
<title>tcp_send_ack (697,031,215 samples, 1.03%)</title><rect x="936.3" y="965" width="12.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="939.27" y="975.5" ></text>
</g>
<g >
<title>tcp_data_ready (967,466,023 samples, 1.43%)</title><rect x="952.0" y="965" width="16.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="954.98" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,763,383 samples, 0.01%)</title><rect x="308.5" y="1509" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="311.54" y="1519.5" ></text>
</g>
<g >
<title>process_backlog (278,353,934 samples, 0.41%)</title><rect x="16.0" y="1157" width="4.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="18.96" y="1167.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,646,402 samples, 0.02%)</title><rect x="384.5" y="1381" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="387.53" y="1391.5" ></text>
</g>
<g >
<title>enqueue_entity (42,630,941 samples, 0.06%)</title><rect x="1170.2" y="1413" width="0.7" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1173.16" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (19,304,836 samples, 0.03%)</title><rect x="301.4" y="1573" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="304.39" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="917" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="927.5" ></text>
</g>
<g >
<title>kmem_cache_free (51,021,612 samples, 0.08%)</title><rect x="707.7" y="1285" width="0.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="710.75" y="1295.5" ></text>
</g>
<g >
<title>do_anonymous_page (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1205" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="327.89" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="469" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="341" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="351.5" ></text>
</g>
<g >
<title>[perf-854639.map] (238,148,993 samples, 0.35%)</title><rect x="319.4" y="1573" width="4.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="322.45" y="1583.5" ></text>
</g>
<g >
<title>d_path (11,917,248 samples, 0.02%)</title><rect x="304.5" y="1413" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="307.51" y="1423.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (38,332,799 samples, 0.06%)</title><rect x="39.2" y="1429" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="42.21" y="1439.5" ></text>
</g>
<g >
<title>do_fault (216,924,683 samples, 0.32%)</title><rect x="1039.4" y="1093" width="3.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1042.35" y="1103.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (6,372,693 samples, 0.01%)</title><rect x="304.0" y="1381" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="306.98" y="1391.5" ></text>
</g>
<g >
<title>perf (22,685,967 samples, 0.03%)</title><rect x="342.7" y="1589" width="0.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="345.69" y="1599.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (43,278,641 samples, 0.06%)</title><rect x="278.5" y="933" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="281.48" y="943.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (3,139,410,221 samples, 4.63%)</title><rect x="1109.0" y="1461" width="54.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1112.05" y="1471.5" >cpuid..</text>
</g>
<g >
<title>exit_mmap (163,116,483 samples, 0.24%)</title><rect x="305.7" y="1445" width="2.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="308.71" y="1455.5" ></text>
</g>
<g >
<title>net_rx_action (567,452,773 samples, 0.84%)</title><rect x="685.8" y="1125" width="9.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="688.83" y="1135.5" ></text>
</g>
<g >
<title>sh (848,614,907 samples, 1.25%)</title><rect x="1034.6" y="1589" width="14.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1037.60" y="1599.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (161,123,886 samples, 0.24%)</title><rect x="377.9" y="1573" width="2.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="380.94" y="1583.5" ></text>
</g>
<g >
<title>alloc_pages (26,556,153 samples, 0.04%)</title><rect x="324.0" y="1237" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="326.98" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,663,655 samples, 0.02%)</title><rect x="308.7" y="597" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.73" y="607.5" ></text>
</g>
<g >
<title>kfree_skbmem (42,117,510 samples, 0.06%)</title><rect x="20.8" y="1157" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="23.80" y="1167.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (153,739,317 samples, 0.23%)</title><rect x="904.3" y="1397" width="2.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="907.26" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="421" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="431.5" ></text>
</g>
<g >
<title>poll_idle (2,360,138,296 samples, 3.48%)</title><rect x="1122.6" y="1445" width="41.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1125.60" y="1455.5" >pol..</text>
</g>
<g >
<title>tcp_v4_do_rcv (42,624,505 samples, 0.06%)</title><rect x="56.2" y="1397" width="0.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="59.19" y="1407.5" ></text>
</g>
<g >
<title>__fget_light (99,540,264 samples, 0.15%)</title><rect x="485.4" y="1493" width="1.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="488.40" y="1503.5" ></text>
</g>
<g >
<title>filemap_get_pages (976,025,367 samples, 1.44%)</title><rect x="608.0" y="1381" width="17.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="611.04" y="1391.5" ></text>
</g>
<g >
<title>v8::internal::compiler::BytecodeGraphBuilder::BuildJumpIfTrue (5,802,075 samples, 0.01%)</title><rect x="314.8" y="1397" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="317.82" y="1407.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (103,230,089 samples, 0.15%)</title><rect x="655.1" y="1445" width="1.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="658.11" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1317" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1327.5" ></text>
</g>
<g >
<title>worker_thread (11,015,633 samples, 0.02%)</title><rect x="380.6" y="1525" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="383.55" y="1535.5" ></text>
</g>
<g >
<title>do_idle (83,343,135 samples, 0.12%)</title><rect x="468.1" y="1541" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="471.08" y="1551.5" ></text>
</g>
<g >
<title>v8::internal::Accessors::ReplaceAccessorWithDataProperty (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1397" width="1.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="327.89" y="1407.5" ></text>
</g>
<g >
<title>native_load_tls (41,204,763 samples, 0.06%)</title><rect x="1099.5" y="1573" width="0.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1102.51" y="1583.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (42,591,450 samples, 0.06%)</title><rect x="448.6" y="1381" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="451.58" y="1391.5" ></text>
</g>
<g >
<title>tcp_rcv_established (41,802,815 samples, 0.06%)</title><rect x="40.6" y="1413" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="43.59" y="1423.5" ></text>
</g>
<g >
<title>tcp_sendmsg (555,498,944 samples, 0.82%)</title><rect x="13.8" y="1477" width="9.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="16.82" y="1487.5" ></text>
</g>
<g >
<title>call_cpuidle (3,757,334,243 samples, 5.54%)</title><rect x="382.3" y="1493" width="65.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="385.29" y="1503.5" >call_cp..</text>
</g>
<g >
<title>__x64_sys_clone (258,728,138 samples, 0.38%)</title><rect x="1034.8" y="1125" width="4.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1037.84" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1285" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1295.5" ></text>
</g>
<g >
<title>__get_user_8 (50,845,974 samples, 0.07%)</title><rect x="474.4" y="1445" width="0.9" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="477.41" y="1455.5" ></text>
</g>
<g >
<title>do_exit (163,116,483 samples, 0.24%)</title><rect x="305.7" y="1509" width="2.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="308.71" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_lock (51,184,723 samples, 0.08%)</title><rect x="913.9" y="1173" width="0.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="916.94" y="1183.5" ></text>
</g>
<g >
<title>geteuid (6,216,814 samples, 0.01%)</title><rect x="1043.2" y="1029" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1046.17" y="1039.5" ></text>
</g>
<g >
<title>zap_pte_range (45,474,125 samples, 0.07%)</title><rect x="333.5" y="1285" width="0.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="336.51" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,665,359 samples, 0.01%)</title><rect x="304.9" y="1525" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="307.92" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="629" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="639.5" ></text>
</g>
<g >
<title>sched_clock_cpu (51,234,655 samples, 0.08%)</title><rect x="967.9" y="821" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="970.92" y="831.5" ></text>
</g>
<g >
<title>tcp_leave_memory_pressure (38,450,638 samples, 0.06%)</title><rect x="43.6" y="1317" width="0.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="46.59" y="1327.5" ></text>
</g>
<g >
<title>inode_owner_or_capable (51,223,619 samples, 0.08%)</title><rect x="652.4" y="1381" width="0.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="655.37" y="1391.5" ></text>
</g>
<g >
<title>__sk_mem_schedule (44,013,528 samples, 0.06%)</title><rect x="43.5" y="1349" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="46.50" y="1359.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1445" width="4.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1098.40" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (268,991,173 samples, 0.40%)</title><rect x="308.7" y="1333" width="4.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1343.5" ></text>
</g>
<g >
<title>handle_mm_fault (7,783,453 samples, 0.01%)</title><rect x="300.4" y="1509" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="303.35" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="965" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (10,048,801 samples, 0.01%)</title><rect x="377.7" y="1541" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="380.67" y="1551.5" ></text>
</g>
<g >
<title>dup_mmap (58,089,665 samples, 0.09%)</title><rect x="323.8" y="1301" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="326.84" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="325" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="335.5" ></text>
</g>
<g >
<title>execute_command_internal (15,005,848 samples, 0.02%)</title><rect x="1048.5" y="1413" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1051.45" y="1423.5" ></text>
</g>
<g >
<title>ip_finish_output2 (261,466,903 samples, 0.39%)</title><rect x="943.0" y="821" width="4.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="945.96" y="831.5" ></text>
</g>
<g >
<title>__slab_free (40,122,223 samples, 0.06%)</title><rect x="280.0" y="869" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="282.96" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="661" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="671.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (11,006,196 samples, 0.02%)</title><rect x="377.5" y="1333" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="380.47" y="1343.5" ></text>
</g>
<g >
<title>bprm_execve (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1445" width="3.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="342.45" y="1455.5" ></text>
</g>
<g >
<title>generic_file_read_iter (7,431,393,237 samples, 10.95%)</title><rect x="498.3" y="1413" width="129.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="501.28" y="1423.5" >generic_file_rea..</text>
</g>
<g >
<title>skb_release_data (856,861,180 samples, 1.26%)</title><rect x="976.7" y="1141" width="14.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="979.73" y="1151.5" ></text>
</g>
<g >
<title>ip_local_deliver (2,912,293,053 samples, 4.29%)</title><rect x="922.6" y="1077" width="50.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="925.60" y="1087.5" >ip_lo..</text>
</g>
<g >
<title>free_compound_page (598,880,562 samples, 0.88%)</title><rect x="980.3" y="1093" width="10.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="983.33" y="1103.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (204,151,227 samples, 0.30%)</title><rect x="1186.4" y="1557" width="3.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1189.45" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15,144,274 samples, 0.02%)</title><rect x="308.7" y="1189" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1199.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,559,986 samples, 0.01%)</title><rect x="304.4" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="307.36" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (125,106,444 samples, 0.18%)</title><rect x="278.5" y="997" width="2.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="281.48" y="1007.5" ></text>
</g>
<g >
<title>sock_def_readable (41,621,506 samples, 0.06%)</title><rect x="44.3" y="1365" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="47.26" y="1375.5" ></text>
</g>
<g >
<title>napi_consume_skb (42,117,510 samples, 0.06%)</title><rect x="20.8" y="1173" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="23.80" y="1183.5" ></text>
</g>
<g >
<title>do_syscall_64 (14,304,591 samples, 0.02%)</title><rect x="342.8" y="1445" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="345.83" y="1455.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (40,675,714 samples, 0.06%)</title><rect x="96.0" y="1301" width="0.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="98.98" y="1311.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (293,337,965 samples, 0.43%)</title><rect x="277.7" y="1381" width="5.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="280.73" y="1391.5" ></text>
</g>
<g >
<title>__cmd_record.constprop.0 (22,685,967 samples, 0.03%)</title><rect x="342.7" y="1573" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="345.69" y="1583.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (34,280,263 samples, 0.05%)</title><rect x="23.5" y="1493" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="26.48" y="1503.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (7,445,876,074 samples, 10.98%)</title><rect x="498.0" y="1429" width="129.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="501.02" y="1439.5" >ext4_file_read_i..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="101" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="111.5" ></text>
</g>
<g >
<title>skb_clone (51,057,432 samples, 0.08%)</title><rect x="696.6" y="1317" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="699.65" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1013" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1023.5" ></text>
</g>
<g >
<title>do_read_fault (98,670,073 samples, 0.15%)</title><rect x="302.0" y="1333" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="304.96" y="1343.5" ></text>
</g>
<g >
<title>server (32,310,641,150 samples, 47.63%)</title><rect x="472.6" y="1589" width="562.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="475.61" y="1599.5" >server</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (19,715,217 samples, 0.03%)</title><rect x="384.5" y="1429" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="387.52" y="1439.5" ></text>
</g>
<g >
<title>kmem_cache_free (40,122,223 samples, 0.06%)</title><rect x="280.0" y="885" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="282.96" y="895.5" ></text>
</g>
<g >
<title>execute_command_internal (811,365,397 samples, 1.20%)</title><rect x="1034.6" y="1429" width="14.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1037.60" y="1439.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (174,197,715 samples, 0.26%)</title><rect x="469.5" y="1557" width="3.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="472.53" y="1567.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (163,331,640 samples, 0.24%)</title><rect x="996.9" y="1381" width="2.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="999.92" y="1391.5" ></text>
</g>
<g >
<title>[expr] (102,049,378 samples, 0.15%)</title><rect x="301.9" y="1525" width="1.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="304.90" y="1535.5" ></text>
</g>
<g >
<title>[bash] (15,005,848 samples, 0.02%)</title><rect x="1048.5" y="1333" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1051.45" y="1343.5" ></text>
</g>
<g >
<title>ip_finish_output (312,801,268 samples, 0.46%)</title><rect x="942.1" y="853" width="5.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="945.07" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="437" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_execve (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1541" width="3.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="334.11" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="485" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="495.5" ></text>
</g>
<g >
<title>page_counter_try_charge (50,926,567 samples, 0.08%)</title><rect x="951.1" y="917" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="954.10" y="927.5" ></text>
</g>
<g >
<title>__rcu_read_lock (51,314,424 samples, 0.08%)</title><rect x="628.4" y="1397" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="631.39" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1317" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1327.5" ></text>
</g>
<g >
<title>handle_mm_fault (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1253" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="327.89" y="1263.5" ></text>
</g>
<g >
<title>__put_user_8 (51,025,918 samples, 0.08%)</title><rect x="473.5" y="1461" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="476.52" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="117" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,628,498 samples, 0.01%)</title><rect x="1049.7" y="1445" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1052.72" y="1455.5" ></text>
</g>
<g >
<title>mod_timer (52,517,788 samples, 0.08%)</title><rect x="699.3" y="1285" width="0.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="702.32" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (157,943,596 samples, 0.23%)</title><rect x="10.3" y="1573" width="2.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.32" y="1583.5" ></text>
</g>
<g >
<title>tcp_filter (51,280,349 samples, 0.08%)</title><rect x="926.1" y="1029" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="929.15" y="1039.5" ></text>
</g>
<g >
<title>update_curr (397,973,979 samples, 0.59%)</title><rect x="76.0" y="1301" width="6.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="79.00" y="1311.5" ></text>
</g>
<g >
<title>validate_xmit_skb (158,949,078 samples, 0.23%)</title><rect x="944.7" y="773" width="2.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="947.75" y="783.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (13,815,237,909 samples, 20.36%)</title><rect x="47.7" y="1445" width="240.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="50.68" y="1455.5" >tcp_recvmsg_locked</text>
</g>
<g >
<title>menu_select (96,073,229 samples, 0.14%)</title><rect x="447.7" y="1477" width="1.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="450.65" y="1487.5" ></text>
</g>
<g >
<title>wait4 (6,290,121 samples, 0.01%)</title><rect x="1043.4" y="1109" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1046.37" y="1119.5" ></text>
</g>
<g >
<title>uv_spawn (62,509,065 samples, 0.09%)</title><rect x="323.8" y="1493" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="326.77" y="1503.5" ></text>
</g>
<g >
<title>irq_exit_rcu (27,098,253 samples, 0.04%)</title><rect x="469.6" y="1349" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="472.59" y="1359.5" ></text>
</g>
<g >
<title>tcp_established_options (51,278,427 samples, 0.08%)</title><rect x="1004.1" y="1381" width="0.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1007.08" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (14,860,907,399 samples, 21.91%)</title><rect x="30.9" y="1525" width="258.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="33.88" y="1535.5" >__x64_sys_recvfrom</text>
</g>
<g >
<title>neigh_hh_output (4,834,901,884 samples, 7.13%)</title><rect x="911.0" y="1253" width="84.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="913.99" y="1263.5" >neigh_hh_..</text>
</g>
<g >
<title>perf-exec (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1589" width="3.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="342.45" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="309" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="319.5" ></text>
</g>
<g >
<title>ip_queue_xmit (694,552,848 samples, 1.02%)</title><rect x="684.6" y="1317" width="12.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="687.57" y="1327.5" ></text>
</g>
<g >
<title>rcu_do_batch (148,206,324 samples, 0.22%)</title><rect x="378.0" y="1445" width="2.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="380.98" y="1455.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (85,197,945 samples, 0.13%)</title><rect x="292.3" y="1461" width="1.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="295.26" y="1471.5" ></text>
</g>
<g >
<title>[ls] (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1477" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="308.17" y="1487.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (5,824,574,932 samples, 8.59%)</title><rect x="726.4" y="1397" width="101.3" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="729.41" y="1407.5" >skb_page_fra..</text>
</g>
<g >
<title>__flush_smp_call_function_queue (42,941,127 samples, 0.06%)</title><rect x="471.8" y="1429" width="0.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="474.79" y="1439.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (64,099,447 samples, 0.09%)</title><rect x="323.8" y="1541" width="1.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="326.77" y="1551.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (292,860,804 samples, 0.43%)</title><rect x="277.7" y="1205" width="5.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="280.74" y="1215.5" ></text>
</g>
<g >
<title>___sys_recvmsg (10,048,801 samples, 0.01%)</title><rect x="377.7" y="1509" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="380.67" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,665,359 samples, 0.01%)</title><rect x="304.9" y="1509" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="307.92" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter (126,309,481 samples, 0.19%)</title><rect x="469.5" y="1413" width="2.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="472.55" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1173" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="1183.5" ></text>
</g>
<g >
<title>vfs_write (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1509" width="4.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1098.40" y="1519.5" ></text>
</g>
<g >
<title>security_file_free (51,143,880 samples, 0.08%)</title><rect x="476.2" y="1429" width="0.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="479.18" y="1439.5" ></text>
</g>
<g >
<title>tcp_data_queue (86,257,467 samples, 0.13%)</title><rect x="42.8" y="1381" width="1.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="45.76" y="1391.5" ></text>
</g>
<g >
<title>__tcp_select_window (51,329,496 samples, 0.08%)</title><rect x="939.5" y="917" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="942.46" y="927.5" ></text>
</g>
<g >
<title>__release_sock (2,161,392,044 samples, 3.19%)</title><rect x="675.6" y="1413" width="37.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="678.61" y="1423.5" >__r..</text>
</g>
<g >
<title>exc_page_fault (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1285" width="1.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="327.89" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1509" width="3.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="342.45" y="1519.5" ></text>
</g>
<g >
<title>skb_free_head (105,607,381 samples, 0.16%)</title><rect x="679.2" y="1333" width="1.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="682.17" y="1343.5" ></text>
</g>
<g >
<title>[bash] (811,365,397 samples, 1.20%)</title><rect x="1034.6" y="1461" width="14.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1037.60" y="1471.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1381" width="4.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1098.40" y="1391.5" ></text>
</g>
<g >
<title>tcp_push (153,739,317 samples, 0.23%)</title><rect x="904.3" y="1413" width="2.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="907.26" y="1423.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (230,864,421 samples, 0.34%)</title><rect x="16.0" y="1077" width="4.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="18.96" y="1087.5" ></text>
</g>
<g >
<title>aa_sk_perm (37,315,058 samples, 0.06%)</title><rect x="288.7" y="1445" width="0.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="291.71" y="1455.5" ></text>
</g>
<g >
<title>____sys_recvmsg (10,048,801 samples, 0.01%)</title><rect x="377.7" y="1493" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="380.67" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1333" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="997" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1007.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (83,839,405 samples, 0.12%)</title><rect x="97.1" y="1429" width="1.4" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="100.05" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,663,655 samples, 0.02%)</title><rect x="308.7" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.73" y="623.5" ></text>
</g>
<g >
<title>do_sys_openat2 (430,198,228 samples, 0.63%)</title><rect x="647.6" y="1509" width="7.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="650.59" y="1519.5" ></text>
</g>
<g >
<title>____fput (102,396,010 samples, 0.15%)</title><rect x="475.3" y="1461" width="1.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="478.29" y="1471.5" ></text>
</g>
<g >
<title>dup_mmap (258,142,670 samples, 0.38%)</title><rect x="1034.8" y="1045" width="4.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1037.84" y="1055.5" ></text>
</g>
<g >
<title>exec_binprm (7,128,978 samples, 0.01%)</title><rect x="304.0" y="1477" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="306.98" y="1487.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (42,471,736 samples, 0.06%)</title><rect x="395.2" y="1429" width="0.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="398.16" y="1439.5" ></text>
</g>
<g >
<title>__handle_mm_fault (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1237" width="1.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="327.89" y="1247.5" ></text>
</g>
<g >
<title>__rcu_read_lock (51,126,185 samples, 0.08%)</title><rect x="917.5" y="1141" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="920.52" y="1151.5" ></text>
</g>
<g >
<title>native_sched_clock (40,675,714 samples, 0.06%)</title><rect x="96.0" y="1285" width="0.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="98.98" y="1295.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (42,591,450 samples, 0.06%)</title><rect x="448.6" y="1413" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="451.58" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,231,781 samples, 0.01%)</title><rect x="301.8" y="1557" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="304.77" y="1567.5" ></text>
</g>
<g >
<title>rw_verify_area (52,508,576 samples, 0.08%)</title><rect x="668.5" y="1477" width="0.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="671.47" y="1487.5" ></text>
</g>
<g >
<title>raw_v4_input (51,233,299 samples, 0.08%)</title><rect x="925.3" y="1013" width="0.8" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="928.25" y="1023.5" ></text>
</g>
<g >
<title>poll_idle (88,746,379 samples, 0.13%)</title><rect x="470.2" y="1381" width="1.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="473.20" y="1391.5" ></text>
</g>
<g >
<title>__tsearch (17,816,233 samples, 0.03%)</title><rect x="1048.7" y="1381" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1051.71" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (15,176,809,768 samples, 22.37%)</title><rect x="30.9" y="1541" width="264.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="33.88" y="1551.5" >do_syscall_64</text>
</g>
<g >
<title>__tcp_push_pending_frames (84,984,221 samples, 0.13%)</title><rect x="278.5" y="965" width="1.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="281.48" y="975.5" ></text>
</g>
<g >
<title>__cond_resched (41,451,524 samples, 0.06%)</title><rect x="55.5" y="1429" width="0.7" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="58.47" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,763,383 samples, 0.01%)</title><rect x="308.5" y="1525" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="311.54" y="1535.5" ></text>
</g>
<g >
<title>do_mmap (5,972,814 samples, 0.01%)</title><rect x="1050.1" y="1365" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1053.06" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1269" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1279.5" ></text>
</g>
<g >
<title>__x64_sys_close (52,527,141 samples, 0.08%)</title><rect x="472.6" y="1541" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="475.61" y="1551.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (79,341,310 samples, 0.12%)</title><rect x="37.0" y="1445" width="1.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="40.02" y="1455.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (11,006,196 samples, 0.02%)</title><rect x="377.5" y="1461" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="380.47" y="1471.5" ></text>
</g>
<g >
<title>tick_nohz_stop_idle (41,634,394 samples, 0.06%)</title><rect x="1185.1" y="1493" width="0.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1188.09" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="421" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="431.5" ></text>
</g>
<g >
<title>load_elf_binary (9,758,518 samples, 0.01%)</title><rect x="1050.0" y="1445" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1053.00" y="1455.5" ></text>
</g>
<g >
<title>__mod_memcg_state (51,091,944 samples, 0.08%)</title><rect x="1027.5" y="1333" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1030.46" y="1343.5" ></text>
</g>
<g >
<title>unmap_page_range (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1317" width="3.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="334.11" y="1327.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (79,778,683 samples, 0.12%)</title><rect x="288.0" y="1477" width="1.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="290.97" y="1487.5" ></text>
</g>
<g >
<title>ip_rcv_core (48,484,480 samples, 0.07%)</title><rect x="975.0" y="1093" width="0.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="978.00" y="1103.5" ></text>
</g>
<g >
<title>__check_object_size (276,733,835 samples, 0.41%)</title><rect x="829.5" y="1397" width="4.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="832.52" y="1407.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (353,668,049 samples, 0.52%)</title><rect x="687.6" y="981" width="6.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="690.62" y="991.5" ></text>
</g>
<g >
<title>[libc.so.6] (102,049,378 samples, 0.15%)</title><rect x="301.9" y="1541" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="304.90" y="1551.5" ></text>
</g>
<g >
<title>tcp_push (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1429" width="4.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1098.40" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="133" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="143.5" ></text>
</g>
<g >
<title>page_copy_sane (51,921,456 samples, 0.08%)</title><rect x="607.1" y="1365" width="0.9" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="610.13" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (245,446,018 samples, 0.36%)</title><rect x="1050.0" y="1557" width="4.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1053.00" y="1567.5" ></text>
</g>
<g >
<title>seq_read_iter (11,106,716 samples, 0.02%)</title><rect x="377.3" y="1493" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="380.26" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="565" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,535,484 samples, 0.03%)</title><rect x="308.7" y="1253" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1263.5" ></text>
</g>
<g >
<title>m_show (11,106,716 samples, 0.02%)</title><rect x="377.3" y="1477" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="380.26" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="405" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="415.5" ></text>
</g>
<g >
<title>ovl_show_options (11,106,716 samples, 0.02%)</title><rect x="377.3" y="1445" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="380.26" y="1455.5" ></text>
</g>
<g >
<title>exec_binprm (9,758,518 samples, 0.01%)</title><rect x="1050.0" y="1477" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1053.00" y="1487.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (80,572,519 samples, 0.12%)</title><rect x="17.9" y="981" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="20.89" y="991.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (53,161,906 samples, 0.08%)</title><rect x="635.9" y="1397" width="0.9" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="638.91" y="1407.5" ></text>
</g>
<g >
<title>parse_and_execute (237,111,752 samples, 0.35%)</title><rect x="1039.4" y="1205" width="4.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1042.35" y="1215.5" ></text>
</g>
<g >
<title>process_one_work (242,738,397 samples, 0.36%)</title><rect x="1101.2" y="1509" width="4.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1104.15" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_statx (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1413" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="308.17" y="1423.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5,931,372 samples, 0.01%)</title><rect x="1186.5" y="1381" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1189.46" y="1391.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (9,960,599 samples, 0.01%)</title><rect x="342.9" y="1333" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="345.91" y="1343.5" ></text>
</g>
<g >
<title>bprm_execve (18,282,747 samples, 0.03%)</title><rect x="1049.0" y="1509" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1052.02" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (6,162,328 samples, 0.01%)</title><rect x="303.9" y="1573" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="306.88" y="1583.5" ></text>
</g>
<g >
<title>inode_permission (7,763,383 samples, 0.01%)</title><rect x="308.5" y="1413" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="311.54" y="1423.5" ></text>
</g>
<g >
<title>tcp_check_space (51,184,680 samples, 0.08%)</title><rect x="933.5" y="997" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="936.55" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="837" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="847.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (406,796,307 samples, 0.60%)</title><rect x="14.5" y="1429" width="7.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="17.46" y="1439.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6,327,910 samples, 0.01%)</title><rect x="1034.6" y="1301" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1037.60" y="1311.5" ></text>
</g>
<g >
<title>main (829,181,630 samples, 1.22%)</title><rect x="1034.6" y="1525" width="14.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1037.60" y="1535.5" ></text>
</g>
<g >
<title>__check_object_size (472,540,037 samples, 0.70%)</title><rect x="106.3" y="1381" width="8.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="109.34" y="1391.5" ></text>
</g>
<g >
<title>__do_softirq (24,175,499 samples, 0.04%)</title><rect x="447.2" y="1365" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="450.23" y="1375.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (50,799,940 samples, 0.07%)</title><rect x="1100.3" y="1397" width="0.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1103.27" y="1407.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (320,948,605 samples, 0.47%)</title><rect x="15.9" y="1365" width="5.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.95" y="1375.5" ></text>
</g>
<g >
<title>optimize_connection_fork (285,285,289 samples, 0.42%)</title><rect x="1043.5" y="1349" width="4.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1046.48" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15,144,274 samples, 0.02%)</title><rect x="308.7" y="1125" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1135.5" ></text>
</g>
<g >
<title>exe (21,996,698 samples, 0.03%)</title><rect x="301.4" y="1589" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="304.39" y="1599.5" ></text>
</g>
<g >
<title>command_substitute (496,903,217 samples, 0.73%)</title><rect x="1034.8" y="1221" width="8.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1037.84" y="1231.5" ></text>
</g>
<g >
<title>unix_write_space (11,006,196 samples, 0.02%)</title><rect x="377.5" y="1365" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="380.47" y="1375.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (152,896,486 samples, 0.23%)</title><rect x="969.7" y="981" width="2.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="972.70" y="991.5" ></text>
</g>
<g >
<title>handle_pte_fault (98,670,073 samples, 0.15%)</title><rect x="302.0" y="1365" width="1.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="304.96" y="1375.5" ></text>
</g>
<g >
<title>[sleep] (9,628,498 samples, 0.01%)</title><rect x="1049.7" y="1573" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1052.72" y="1583.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (292,860,804 samples, 0.43%)</title><rect x="277.7" y="1365" width="5.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="280.74" y="1375.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (154,239,514 samples, 0.23%)</title><rect x="272.8" y="1413" width="2.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="275.85" y="1423.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (51,316,054 samples, 0.08%)</title><rect x="994.2" y="1237" width="0.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="997.20" y="1247.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (62,509,065 samples, 0.09%)</title><rect x="323.8" y="1477" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="326.77" y="1487.5" ></text>
</g>
<g >
<title>__handle_mm_fault (98,670,073 samples, 0.15%)</title><rect x="302.0" y="1381" width="1.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="304.96" y="1391.5" ></text>
</g>
<g >
<title>[bash] (811,365,397 samples, 1.20%)</title><rect x="1034.6" y="1509" width="14.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1037.60" y="1519.5" ></text>
</g>
<g >
<title>[bash] (497,305,305 samples, 0.73%)</title><rect x="1034.8" y="1301" width="8.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1037.83" y="1311.5" ></text>
</g>
<g >
<title>tick_sched_handle (10,646,402 samples, 0.02%)</title><rect x="384.5" y="1349" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="387.53" y="1359.5" ></text>
</g>
<g >
<title>irq_exit_rcu (5,931,372 samples, 0.01%)</title><rect x="1186.5" y="1349" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1189.46" y="1359.5" ></text>
</g>
<g >
<title>copyin (3,833,168,562 samples, 5.65%)</title><rect x="837.6" y="1381" width="66.7" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="840.59" y="1391.5" >copyin</text>
</g>
<g >
<title>__alloc_pages (5,646,704,799 samples, 8.32%)</title><rect x="729.1" y="1365" width="98.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="732.07" y="1375.5" >__alloc_pages</text>
</g>
<g >
<title>grep (7,742,523 samples, 0.01%)</title><rect x="304.2" y="1589" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="307.17" y="1599.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1365" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="308.17" y="1375.5" ></text>
</g>
<g >
<title>skb_release_data (39,096,351 samples, 0.06%)</title><rect x="17.9" y="949" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="20.89" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="773" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="783.5" ></text>
</g>
<g >
<title>expand_string_assignment (497,305,305 samples, 0.73%)</title><rect x="1034.8" y="1253" width="8.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1037.83" y="1263.5" ></text>
</g>
<g >
<title>__switch_to (41,784,729 samples, 0.06%)</title><rect x="458.3" y="1477" width="0.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="461.28" y="1487.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (41,964,064 samples, 0.06%)</title><rect x="1183.6" y="1477" width="0.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1186.62" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (53,569,139 samples, 0.08%)</title><rect x="656.0" y="1429" width="0.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="658.97" y="1439.5" ></text>
</g>
<g >
<title>do_sys_openat2 (16,322,107 samples, 0.02%)</title><rect x="1095.1" y="1525" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1098.09" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,644,508 samples, 0.01%)</title><rect x="1049.5" y="1493" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1052.49" y="1503.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (147,589,180 samples, 0.22%)</title><rect x="991.6" y="1221" width="2.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="994.63" y="1231.5" ></text>
</g>
<g >
<title>v8::internal::LookupIterator::ReconfigureDataProperty (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1381" width="1.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="327.89" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15,144,274 samples, 0.02%)</title><rect x="308.7" y="1157" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.72" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="501" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (8,491,178,466 samples, 12.52%)</title><rect x="485.4" y="1525" width="147.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="488.40" y="1535.5" >__x64_sys_pread64</text>
</g>
<g >
<title>bpf_skops_write_hdr_opt.isra.0 (51,031,151 samples, 0.08%)</title><rect x="947.5" y="933" width="0.9" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="950.51" y="943.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (43,170,803 samples, 0.06%)</title><rect x="17.1" y="965" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="20.14" y="975.5" ></text>
</g>
<g >
<title>[bash] (497,305,305 samples, 0.73%)</title><rect x="1034.8" y="1237" width="8.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1037.83" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_lock (8,143,707 samples, 0.01%)</title><rect x="334.0" y="1269" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="336.95" y="1279.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (7,783,453 samples, 0.01%)</title><rect x="300.4" y="1557" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="303.35" y="1567.5" ></text>
</g>
<g >
<title>tcp_grow_window (51,259,317 samples, 0.08%)</title><rect x="968.8" y="949" width="0.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="971.81" y="959.5" ></text>
</g>
<g >
<title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (64,099,447 samples, 0.09%)</title><rect x="323.8" y="1525" width="1.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="326.77" y="1535.5" ></text>
</g>
<g >
<title>call_cpuidle (126,309,481 samples, 0.19%)</title><rect x="469.5" y="1429" width="2.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="472.55" y="1439.5" ></text>
</g>
<g >
<title>execute_command_internal (500,985,979 samples, 0.74%)</title><rect x="1034.8" y="1349" width="8.7" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1037.77" y="1359.5" ></text>
</g>
<g >
<title>tcp_write_xmit (406,611,291 samples, 0.60%)</title><rect x="14.5" y="1413" width="7.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="17.46" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="277" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="287.5" ></text>
</g>
<g >
<title>__get_task_ioprio (50,655,573 samples, 0.07%)</title><rect x="487.1" y="1509" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="490.14" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,628,498 samples, 0.01%)</title><rect x="1049.7" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1052.72" y="1471.5" ></text>
</g>
<g >
<title>mmput (18,282,747 samples, 0.03%)</title><rect x="1049.0" y="1397" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1052.02" y="1407.5" ></text>
</g>
<g >
<title>folio_mark_accessed (144,924,097 samples, 0.21%)</title><rect x="625.0" y="1381" width="2.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="628.01" y="1391.5" ></text>
</g>
<g >
<title>consume_stock (103,271,032 samples, 0.15%)</title><rect x="1029.2" y="1333" width="1.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1032.24" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="591.5" ></text>
</g>
<g >
<title>kernel_clone (258,728,138 samples, 0.38%)</title><rect x="1034.8" y="1093" width="4.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1037.84" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (206,654,957 samples, 0.30%)</title><rect x="635.0" y="1525" width="3.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="638.02" y="1535.5" ></text>
</g>
<g >
<title>ktime_get (51,331,406 samples, 0.08%)</title><rect x="905.1" y="1365" width="0.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="908.15" y="1375.5" ></text>
</g>
<g >
<title>apparmor_cred_free (26,959,220 samples, 0.04%)</title><rect x="469.6" y="1237" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="472.59" y="1247.5" ></text>
</g>
<g >
<title>loopback_xmit (51,309,496 samples, 0.08%)</title><rect x="992.4" y="1205" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="995.41" y="1215.5" ></text>
</g>
<g >
<title>kmem_cache_free (51,062,814 samples, 0.08%)</title><rect x="990.7" y="1109" width="0.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="993.74" y="1119.5" ></text>
</g>
<g >
<title>__libc_fork (13,258,625 samples, 0.02%)</title><rect x="1048.5" y="1253" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1051.45" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18,282,747 samples, 0.03%)</title><rect x="1049.0" y="1573" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1052.02" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (204,187,975 samples, 0.30%)</title><rect x="481.9" y="1557" width="3.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="484.85" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (252,035,004 samples, 0.37%)</title><rect x="334.3" y="37" width="4.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="337.32" y="47.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (8,530,823 samples, 0.01%)</title><rect x="323.8" y="1253" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="326.84" y="1263.5" ></text>
</g>
<g >
<title>[ls] (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1493" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="308.17" y="1503.5" ></text>
</g>
<g >
<title>read_tsc (42,626,477 samples, 0.06%)</title><rect x="465.9" y="1493" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="468.87" y="1503.5" ></text>
</g>
<g >
<title>pick_next_task_fair (45,404,299 samples, 0.07%)</title><rect x="460.1" y="1461" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="463.07" y="1471.5" ></text>
</g>
<g >
<title>__update_load_avg_se (39,332,410 samples, 0.06%)</title><rect x="85.1" y="1285" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="88.14" y="1295.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (78,796,774 samples, 0.12%)</title><rect x="464.5" y="1477" width="1.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="467.50" y="1487.5" ></text>
</g>
<g >
<title>tcp_current_mss (51,260,249 samples, 0.08%)</title><rect x="711.4" y="1365" width="0.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="714.43" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,559,986 samples, 0.01%)</title><rect x="304.4" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="307.36" y="1567.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (42,111,583 samples, 0.06%)</title><rect x="467.4" y="1525" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="470.35" y="1535.5" ></text>
</g>
<g >
<title>tcp_ack (80,572,519 samples, 0.12%)</title><rect x="17.9" y="997" width="1.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="20.89" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (256,795,043 samples, 0.38%)</title><rect x="472.6" y="1557" width="4.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="475.61" y="1567.5" ></text>
</g>
<g >
<title>psi_task_switch (76,392,399 samples, 0.11%)</title><rect x="1181.6" y="1477" width="1.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1184.57" y="1487.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::DefineOwnProperty (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1509" width="1.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="327.89" y="1519.5" ></text>
</g>
<g >
<title>do_user_addr_fault (98,670,073 samples, 0.15%)</title><rect x="302.0" y="1413" width="1.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="304.96" y="1423.5" ></text>
</g>
<g >
<title>copy_p4d_range (38,069,774 samples, 0.06%)</title><rect x="324.0" y="1269" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="326.98" y="1279.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (133,261,375 samples, 0.20%)</title><rect x="87.3" y="1349" width="2.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="90.32" y="1359.5" ></text>
</g>
<g >
<title>dst_release (48,411,760 samples, 0.07%)</title><rect x="692.0" y="949" width="0.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="695.04" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (58,089,665 samples, 0.09%)</title><rect x="323.8" y="1397" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="326.84" y="1407.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (950,535,515 samples, 1.40%)</title><rect x="681.9" y="1333" width="16.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="684.89" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="949" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="959.5" ></text>
</g>
<g >
<title>sock_rfree (154,239,514 samples, 0.23%)</title><rect x="272.8" y="1429" width="2.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="275.85" y="1439.5" ></text>
</g>
<g >
<title>_IO_file_sync (6,327,910 samples, 0.01%)</title><rect x="1034.6" y="1381" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1037.60" y="1391.5" ></text>
</g>
<g >
<title>_copy_from_iter (4,020,200,188 samples, 5.93%)</title><rect x="834.3" y="1397" width="70.0" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="837.33" y="1407.5" >_copy_f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="741" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="751.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (261,065,388 samples, 0.38%)</title><rect x="449.4" y="1477" width="4.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="452.39" y="1487.5" ></text>
</g>
<g >
<title>rcu_core (50,799,940 samples, 0.07%)</title><rect x="1100.3" y="1461" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1103.27" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_write (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1541" width="4.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1098.40" y="1551.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (406,611,291 samples, 0.60%)</title><rect x="14.5" y="1397" width="7.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="17.46" y="1407.5" ></text>
</g>
<g >
<title>dequeue_entity (817,750,048 samples, 1.21%)</title><rect x="73.1" y="1317" width="14.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="76.10" y="1327.5" ></text>
</g>
<g >
<title>__ip_finish_output (4,886,077,665 samples, 7.20%)</title><rect x="911.0" y="1285" width="85.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="913.99" y="1295.5" >__ip_finis..</text>
</g>
<g >
<title>[libc.so.6] (17,816,233 samples, 0.03%)</title><rect x="1048.7" y="1445" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1051.71" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1029" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="1039.5" ></text>
</g>
<g >
<title>unmap_page_range (11,460,844 samples, 0.02%)</title><rect x="1054.1" y="1397" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1057.07" y="1407.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (47,962,603 samples, 0.07%)</title><rect x="999.8" y="1381" width="0.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1002.76" y="1391.5" ></text>
</g>
<g >
<title>ip_finish_output2 (292,860,804 samples, 0.43%)</title><rect x="277.7" y="1253" width="5.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="280.74" y="1263.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,559,986 samples, 0.01%)</title><rect x="304.4" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="307.36" y="1551.5" ></text>
</g>
<g >
<title>tcp_write_xmit (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1397" width="4.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1098.40" y="1407.5" ></text>
</g>
<g >
<title>vfs_fstat (108,929,690 samples, 0.16%)</title><rect x="478.2" y="1493" width="1.9" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="481.22" y="1503.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (41,546,813 samples, 0.06%)</title><rect x="1106.9" y="1509" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1109.88" y="1519.5" ></text>
</g>
<g >
<title>__do_sys_clone (258,728,138 samples, 0.38%)</title><rect x="1034.8" y="1109" width="4.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1037.84" y="1119.5" ></text>
</g>
<g >
<title>ktime_get (50,454,556 samples, 0.07%)</title><rect x="969.7" y="965" width="0.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="972.70" y="975.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (594,098,960 samples, 0.88%)</title><rect x="685.4" y="1157" width="10.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="688.37" y="1167.5" ></text>
</g>
<g >
<title>skb_release_data (40,122,223 samples, 0.06%)</title><rect x="280.0" y="917" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="282.96" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (58,089,665 samples, 0.09%)</title><rect x="323.8" y="1413" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="326.84" y="1423.5" ></text>
</g>
<g >
<title>rcu_core_si (148,206,324 samples, 0.22%)</title><rect x="378.0" y="1477" width="2.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="380.98" y="1487.5" ></text>
</g>
<g >
<title>__napi_poll (3,353,557,902 samples, 4.94%)</title><rect x="917.5" y="1157" width="58.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="920.52" y="1167.5" >__napi..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1253" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1263.5" ></text>
</g>
<g >
<title>execute_command_internal (811,365,397 samples, 1.20%)</title><rect x="1034.6" y="1477" width="14.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1037.60" y="1487.5" ></text>
</g>
<g >
<title>page_remove_rmap (8,143,707 samples, 0.01%)</title><rect x="334.1" y="1269" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="337.10" y="1279.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (208,877,296 samples, 0.31%)</title><rect x="277.7" y="1029" width="3.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="280.74" y="1039.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (4,400,441,907 samples, 6.49%)</title><rect x="827.7" y="1413" width="76.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="830.72" y="1423.5" >skb_do_c..</text>
</g>
<g >
<title>smpboot_thread_fn (148,206,324 samples, 0.22%)</title><rect x="378.0" y="1525" width="2.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="380.98" y="1535.5" ></text>
</g>
<g >
<title>runc:[1:CHILD] (7,433,079,720 samples, 10.96%)</title><rect x="343.3" y="1589" width="129.3" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="346.28" y="1599.5" >runc:[1:CHILD]</text>
</g>
<g >
<title>__copy_skb_header (51,057,432 samples, 0.08%)</title><rect x="696.6" y="1285" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="699.65" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="965" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="261" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,083,791 samples, 0.02%)</title><rect x="308.7" y="725" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.73" y="735.5" ></text>
</g>
<g >
<title>lock_sock_nested (46,543,377 samples, 0.07%)</title><rect x="38.4" y="1445" width="0.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="41.40" y="1455.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (49,764,974 samples, 0.07%)</title><rect x="300.5" y="1573" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="303.49" y="1583.5" ></text>
</g>
<g >
<title>do_open (309,801,182 samples, 0.46%)</title><rect x="649.7" y="1461" width="5.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="652.68" y="1471.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (51,234,655 samples, 0.08%)</title><rect x="967.9" y="789" width="0.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="970.92" y="799.5" ></text>
</g>
<g >
<title>page_counter_uncharge (49,733,748 samples, 0.07%)</title><rect x="708.6" y="1237" width="0.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="711.63" y="1247.5" ></text>
</g>
<g >
<title>psi_group_change (41,788,644 samples, 0.06%)</title><rect x="1181.6" y="1461" width="0.7" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1184.57" y="1471.5" ></text>
</g>
<g >
<title>zap_pte_range (17,180,210 samples, 0.03%)</title><rect x="1049.0" y="1285" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1052.04" y="1295.5" ></text>
</g>
<g >
<title>__fdget_pos (51,206,408 samples, 0.08%)</title><rect x="661.3" y="1509" width="0.9" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="664.34" y="1519.5" ></text>
</g>
<g >
<title>vfs_getattr (58,141,762 samples, 0.09%)</title><rect x="479.1" y="1445" width="1.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="482.10" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,845,633 samples, 0.01%)</title><rect x="303.7" y="1509" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="306.74" y="1519.5" ></text>
</g>
<g >
<title>_Fork (12,095,848 samples, 0.02%)</title><rect x="1048.5" y="1237" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1051.45" y="1247.5" ></text>
</g>
<g >
<title>enqueue_task_fair (126,337,745 samples, 0.19%)</title><rect x="450.1" y="1429" width="2.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="453.12" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="389" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="399.5" ></text>
</g>
<g >
<title>unmap_vmas (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1349" width="3.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="334.11" y="1359.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (249,393,402 samples, 0.37%)</title><rect x="1163.7" y="1477" width="4.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1166.69" y="1487.5" ></text>
</g>
<g >
<title>try_charge_memcg (205,765,457 samples, 0.30%)</title><rect x="1028.4" y="1349" width="3.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1031.35" y="1359.5" ></text>
</g>
<g >
<title>do_cow_fault (7,783,453 samples, 0.01%)</title><rect x="300.4" y="1445" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="303.35" y="1455.5" ></text>
</g>
<g >
<title>cpus_share_cache (204,612,336 samples, 0.30%)</title><rect x="963.5" y="805" width="3.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="966.47" y="815.5" ></text>
</g>
<g >
<title>free_unref_page_prepare (163,116,483 samples, 0.24%)</title><rect x="305.7" y="1349" width="2.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="308.71" y="1359.5" ></text>
</g>
<g >
<title>__skb_clone (51,057,432 samples, 0.08%)</title><rect x="696.6" y="1301" width="0.9" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="699.65" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (258,728,138 samples, 0.38%)</title><rect x="1034.8" y="1141" width="4.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1037.84" y="1151.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (51,809,227 samples, 0.08%)</title><rect x="671.2" y="1429" width="0.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="674.15" y="1439.5" ></text>
</g>
<g >
<title>execute_command (788,868,361 samples, 1.16%)</title><rect x="1034.7" y="1413" width="13.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1037.73" y="1423.5" ></text>
</g>
<g >
<title>__libc_fork (62,174,681 samples, 0.09%)</title><rect x="323.8" y="1445" width="1.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="326.77" y="1455.5" ></text>
</g>
<g >
<title>pick_next_task (45,404,299 samples, 0.07%)</title><rect x="460.1" y="1477" width="0.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="463.07" y="1487.5" ></text>
</g>
<g >
<title>rw_verify_area (50,931,620 samples, 0.08%)</title><rect x="665.8" y="1493" width="0.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="668.79" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="645" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="655.5" ></text>
</g>
<g >
<title>security_capable (51,223,619 samples, 0.08%)</title><rect x="652.4" y="1349" width="0.9" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="655.37" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (268,991,173 samples, 0.40%)</title><rect x="308.7" y="1349" width="4.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.72" y="1359.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.constprop.0 (42,269,857 samples, 0.06%)</title><rect x="281.4" y="1061" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="284.37" y="1071.5" ></text>
</g>
<g >
<title>__alloc_pages (26,556,153 samples, 0.04%)</title><rect x="324.0" y="1221" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="326.98" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1541" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1551.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (101,871,892 samples, 0.15%)</title><rect x="473.5" y="1477" width="1.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="476.52" y="1487.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (41,634,394 samples, 0.06%)</title><rect x="1185.1" y="1477" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1188.09" y="1487.5" ></text>
</g>
<g >
<title>exc_page_fault (6,327,910 samples, 0.01%)</title><rect x="1034.6" y="1349" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1037.60" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="581" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="591.5" ></text>
</g>
<g >
<title>exec_binprm (18,282,747 samples, 0.03%)</title><rect x="1049.0" y="1477" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1052.02" y="1487.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (258,728,138 samples, 0.38%)</title><rect x="1034.8" y="1061" width="4.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1037.84" y="1071.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (199,682,833 samples, 0.29%)</title><rect x="1186.5" y="1445" width="3.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1189.46" y="1455.5" ></text>
</g>
<g >
<title>[ls] (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1509" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="308.17" y="1519.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (52,255,035 samples, 0.08%)</title><rect x="648.8" y="1413" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="651.77" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="373" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="383.5" ></text>
</g>
<g >
<title>update_blocked_averages (24,175,499 samples, 0.04%)</title><rect x="447.2" y="1333" width="0.4" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="450.23" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (268,991,173 samples, 0.40%)</title><rect x="308.7" y="1445" width="4.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1455.5" ></text>
</g>
<g >
<title>worker (8,185,589 samples, 0.01%)</title><rect x="319.2" y="1541" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="322.23" y="1551.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (204,267,902 samples, 0.30%)</title><rect x="473.5" y="1493" width="3.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="476.52" y="1503.5" ></text>
</g>
<g >
<title>do_exit (235,687,500 samples, 0.35%)</title><rect x="1050.2" y="1509" width="4.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1053.17" y="1519.5" ></text>
</g>
<g >
<title>ip_output (320,948,605 samples, 0.47%)</title><rect x="15.9" y="1333" width="5.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="18.95" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="709" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="437" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="447.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (8,560,849 samples, 0.01%)</title><rect x="305.6" y="1573" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="308.56" y="1583.5" ></text>
</g>
<g >
<title>setlocale (17,816,233 samples, 0.03%)</title><rect x="1048.7" y="1493" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1051.71" y="1503.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (257,952,946 samples, 0.38%)</title><rect x="1174.1" y="1509" width="4.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1177.13" y="1519.5" ></text>
</g>
<g >
<title>unmap_vmas (11,460,844 samples, 0.02%)</title><rect x="1054.1" y="1429" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1057.07" y="1439.5" ></text>
</g>
<g >
<title>filemap_map_pages (216,924,683 samples, 0.32%)</title><rect x="1039.4" y="1061" width="3.7" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1042.35" y="1071.5" ></text>
</g>
<g >
<title>put_prev_task_fair (42,991,327 samples, 0.06%)</title><rect x="90.8" y="1333" width="0.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="93.84" y="1343.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (419,863,893 samples, 0.62%)</title><rect x="275.5" y="1429" width="7.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="278.53" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1301" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1311.5" ></text>
</g>
<g >
<title>tcp_data_queue (1,222,001,610 samples, 1.80%)</title><rect x="948.4" y="981" width="21.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="951.45" y="991.5" >t..</text>
</g>
<g >
<title>__rcu_read_unlock (51,174,411 samples, 0.08%)</title><rect x="608.0" y="1365" width="0.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="611.04" y="1375.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (40,999,858 samples, 0.06%)</title><rect x="450.9" y="1381" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="453.89" y="1391.5" ></text>
</g>
<g >
<title>woken_wake_function (614,104,303 samples, 0.91%)</title><rect x="958.1" y="885" width="10.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="961.13" y="895.5" ></text>
</g>
<g >
<title>qdisc_pkt_len_init (54,285,374 samples, 0.08%)</title><rect x="695.7" y="1173" width="0.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="698.70" y="1183.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (41,323,784 samples, 0.06%)</title><rect x="279.2" y="933" width="0.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="282.24" y="943.5" ></text>
</g>
<g >
<title>load_elf_interp.constprop.0 (7,128,978 samples, 0.01%)</title><rect x="304.0" y="1429" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="306.98" y="1439.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (335,508,496 samples, 0.49%)</title><rect x="277.0" y="1413" width="5.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="280.00" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,268,899 samples, 0.02%)</title><rect x="308.7" y="789" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="799.5" ></text>
</g>
<g >
<title>pick_next_task (112,449,121 samples, 0.17%)</title><rect x="89.6" y="1349" width="2.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="92.64" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (45,480,458 samples, 0.07%)</title><rect x="377.2" y="1557" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="380.15" y="1567.5" ></text>
</g>
<g >
<title>ion (14,304,591 samples, 0.02%)</title><rect x="342.8" y="1493" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="345.83" y="1503.5" ></text>
</g>
<g >
<title>tcp_write_xmit (84,984,221 samples, 0.13%)</title><rect x="278.5" y="949" width="1.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="281.48" y="959.5" ></text>
</g>
<g >
<title>kmem_cache_free (50,513,921 samples, 0.07%)</title><rect x="975.8" y="1125" width="0.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="978.85" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1125" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1135.5" ></text>
</g>
<g >
<title>__fdget_pos (204,693,189 samples, 0.30%)</title><rect x="662.2" y="1493" width="3.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="665.23" y="1503.5" ></text>
</g>
<g >
<title>free_pgtables (224,226,656 samples, 0.33%)</title><rect x="1050.2" y="1429" width="3.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1053.17" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (100,751,217 samples, 0.15%)</title><rect x="659.6" y="1557" width="1.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="662.59" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (4,415,630,330 samples, 6.51%)</title><rect x="914.8" y="1173" width="76.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="917.83" y="1183.5" >net_rx_a..</text>
</g>
<g >
<title>ovl_override_creds (52,062,444 samples, 0.08%)</title><rect x="493.5" y="1477" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="496.50" y="1487.5" ></text>
</g>
<g >
<title>[bash] (15,005,848 samples, 0.02%)</title><rect x="1048.5" y="1381" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1051.45" y="1391.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (42,111,084 samples, 0.06%)</title><rect x="457.5" y="1477" width="0.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="460.54" y="1487.5" ></text>
</g>
<g >
<title>[bash] (15,005,848 samples, 0.02%)</title><rect x="1048.5" y="1397" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1051.45" y="1407.5" ></text>
</g>
<g >
<title>__schedule (516,993,297 samples, 0.76%)</title><rect x="456.9" y="1493" width="9.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="459.87" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="629" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="639.5" ></text>
</g>
<g >
<title>cpuidle_enter (3,139,410,221 samples, 4.63%)</title><rect x="1109.0" y="1477" width="54.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1112.05" y="1487.5" >cpuid..</text>
</g>
<g >
<title>consume_obj_stock (8,530,823 samples, 0.01%)</title><rect x="323.8" y="1237" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="326.84" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="757" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="767.5" ></text>
</g>
<g >
<title>search_binary_handler (9,758,518 samples, 0.01%)</title><rect x="1050.0" y="1461" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1053.00" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1077" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1087.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (766,422,676 samples, 1.13%)</title><rect x="955.5" y="917" width="13.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="958.48" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="821" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="831.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (273,794,813 samples, 0.40%)</title><rect x="308.7" y="1541" width="4.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="311.68" y="1551.5" ></text>
</g>
<g >
<title>node (1,769,225,043 samples, 2.61%)</title><rect x="308.7" y="1589" width="30.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="311.68" y="1599.5" >node</text>
</g>
<g >
<title>handle_pte_fault (7,783,453 samples, 0.01%)</title><rect x="300.4" y="1477" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="303.35" y="1487.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (403,155,279 samples, 0.59%)</title><rect x="1024.9" y="1365" width="7.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1027.92" y="1375.5" ></text>
</g>
<g >
<title>do_user_addr_fault (6,327,910 samples, 0.01%)</title><rect x="1034.6" y="1333" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1037.60" y="1343.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (163,116,483 samples, 0.24%)</title><rect x="305.7" y="1429" width="2.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="308.71" y="1439.5" ></text>
</g>
<g >
<title>intel_idle (8,008,960 samples, 0.01%)</title><rect x="470.1" y="1381" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="473.06" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (111,194,381 samples, 0.16%)</title><rect x="693.8" y="1077" width="1.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="696.77" y="1087.5" ></text>
</g>
<g >
<title>get_page_from_freelist (25,081,171 samples, 0.04%)</title><rect x="827.3" y="1365" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="830.28" y="1375.5" ></text>
</g>
<g >
<title>local_clock_noinstr (42,471,736 samples, 0.06%)</title><rect x="395.2" y="1445" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="398.16" y="1455.5" ></text>
</g>
<g >
<title>mmput (163,116,483 samples, 0.24%)</title><rect x="305.7" y="1477" width="2.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="308.71" y="1487.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (62,509,065 samples, 0.09%)</title><rect x="323.8" y="1461" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="326.77" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15,144,274 samples, 0.02%)</title><rect x="308.7" y="1109" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1119.5" ></text>
</g>
<g >
<title>__x64_sys_openat (430,198,228 samples, 0.63%)</title><rect x="647.6" y="1525" width="7.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="650.59" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1557" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="1567.5" ></text>
</g>
<g >
<title>v8::internal::compiler::BytecodeGraphBuilder::MergeIntoSuccessorEnvironment (5,802,075 samples, 0.01%)</title><rect x="314.8" y="1381" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="317.82" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="533" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="543.5" ></text>
</g>
<g >
<title>ip_rcv (251,147,153 samples, 0.37%)</title><rect x="277.7" y="1077" width="4.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="280.74" y="1087.5" ></text>
</g>
<g >
<title>quiet_vmstat (249,393,402 samples, 0.37%)</title><rect x="1163.7" y="1461" width="4.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1166.69" y="1471.5" ></text>
</g>
<g >
<title>write (21,714,844,897 samples, 32.01%)</title><rect x="656.9" y="1573" width="377.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="659.90" y="1583.5" >write</text>
</g>
<g >
<title>sock_recvmsg (105,426,630 samples, 0.16%)</title><rect x="655.1" y="1493" width="1.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="658.07" y="1503.5" ></text>
</g>
<g >
<title>refill_obj_stock (50,799,940 samples, 0.07%)</title><rect x="1100.3" y="1381" width="0.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1103.27" y="1391.5" ></text>
</g>
<g >
<title>do_filp_open (7,763,383 samples, 0.01%)</title><rect x="308.5" y="1461" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="311.54" y="1471.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (6,372,693 samples, 0.01%)</title><rect x="304.0" y="1301" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="306.98" y="1311.5" ></text>
</g>
<g >
<title>ovl_file_accessed.part.0 (66,514,754 samples, 0.10%)</title><rect x="492.3" y="1477" width="1.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="495.35" y="1487.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (261,466,903 samples, 0.39%)</title><rect x="943.0" y="789" width="4.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="945.96" y="799.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.0 (53,551,342 samples, 0.08%)</title><rect x="700.2" y="1333" width="1.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="703.23" y="1343.5" ></text>
</g>
<g >
<title>__release_sock (329,941,274 samples, 0.49%)</title><rect x="39.9" y="1429" width="5.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="42.88" y="1439.5" ></text>
</g>
<g >
<title>drain_stock (49,733,748 samples, 0.07%)</title><rect x="708.6" y="1253" width="0.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="711.63" y="1263.5" ></text>
</g>
<g >
<title>cpuacct_charge (42,106,596 samples, 0.06%)</title><rect x="82.2" y="1285" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="85.19" y="1295.5" ></text>
</g>
<g >
<title>complete_walk (53,161,906 samples, 0.08%)</title><rect x="635.9" y="1429" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="638.91" y="1439.5" ></text>
</g>
<g >
<title>memchr_inv (249,393,402 samples, 0.37%)</title><rect x="1163.7" y="1445" width="4.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1166.69" y="1455.5" ></text>
</g>
<g >
<title>generic_perform_write (9,960,599 samples, 0.01%)</title><rect x="342.9" y="1285" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="345.91" y="1295.5" ></text>
</g>
<g >
<title>uv__io_poll (32,609,691 samples, 0.05%)</title><rect x="338.9" y="1573" width="0.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="341.88" y="1583.5" ></text>
</g>
<g >
<title>llist_add_batch (51,270,316 samples, 0.08%)</title><rect x="967.0" y="821" width="0.9" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="970.03" y="831.5" ></text>
</g>
<g >
<title>start_secondary (4,657,477,755 samples, 6.87%)</title><rect x="1105.4" y="1557" width="81.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1108.44" y="1567.5" >start_sec..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="373" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="181" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="533" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="229" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="239.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (38,073,058 samples, 0.06%)</title><rect x="1184.4" y="1493" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1187.35" y="1503.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (83,136,029 samples, 0.12%)</title><rect x="16.4" y="997" width="1.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="19.45" y="1007.5" ></text>
</g>
<g >
<title>__napi_poll (251,147,153 samples, 0.37%)</title><rect x="277.7" y="1141" width="4.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="280.74" y="1151.5" ></text>
</g>
<g >
<title>make_child (259,417,652 samples, 0.38%)</title><rect x="1034.8" y="1205" width="4.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1037.84" y="1215.5" ></text>
</g>
<g >
<title>ovl_getattr (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1349" width="0.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="308.17" y="1359.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (41,572,114 samples, 0.06%)</title><rect x="294.9" y="1541" width="0.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="297.86" y="1551.5" ></text>
</g>
<g >
<title>sock_wfree (11,006,196 samples, 0.02%)</title><rect x="377.5" y="1381" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="380.47" y="1391.5" ></text>
</g>
<g >
<title>v8::internal::OptimizingCompileDispatcher::CompileNext (252,882,773 samples, 0.37%)</title><rect x="314.8" y="1509" width="4.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="317.82" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="741" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (268,991,173 samples, 0.40%)</title><rect x="308.7" y="1429" width="4.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1439.5" ></text>
</g>
<g >
<title>put_prev_entity (42,991,327 samples, 0.06%)</title><rect x="90.8" y="1317" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="93.84" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,083,791 samples, 0.02%)</title><rect x="308.7" y="693" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.73" y="703.5" ></text>
</g>
<g >
<title>expand_string_assignment (15,005,848 samples, 0.02%)</title><rect x="1048.5" y="1317" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1051.45" y="1327.5" ></text>
</g>
<g >
<title>poll_idle (51,202,905 samples, 0.08%)</title><rect x="1189.0" y="1381" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.01" y="1391.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (34,391,927 samples, 0.05%)</title><rect x="45.6" y="1413" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="48.61" y="1423.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (51,287,001 samples, 0.08%)</title><rect x="972.4" y="1045" width="0.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="975.36" y="1055.5" ></text>
</g>
<g >
<title>refill_stock (51,213,844 samples, 0.08%)</title><rect x="1031.0" y="1333" width="0.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1034.04" y="1343.5" ></text>
</g>
<g >
<title>sock_write_iter (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1493" width="4.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1098.40" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,282,747 samples, 0.03%)</title><rect x="1049.0" y="1557" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1052.02" y="1567.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectDefineProperties (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1541" width="1.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="327.89" y="1551.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (47,489,513 samples, 0.07%)</title><rect x="20.0" y="1141" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="22.97" y="1151.5" ></text>
</g>
<g >
<title>skb_release_head_state (11,006,196 samples, 0.02%)</title><rect x="377.5" y="1413" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="380.47" y="1423.5" ></text>
</g>
<g >
<title>__do_softirq (4,518,128,722 samples, 6.66%)</title><rect x="913.0" y="1189" width="78.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="916.04" y="1199.5" >__do_soft..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1461" width="3.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="342.45" y="1471.5" ></text>
</g>
<g >
<title>tcp_sendmsg (20,792,874,641 samples, 30.65%)</title><rect x="670.3" y="1445" width="361.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="673.27" y="1455.5" >tcp_sendmsg</text>
</g>
<g >
<title>cpuidle_enter_state (3,715,389,415 samples, 5.48%)</title><rect x="383.0" y="1461" width="64.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="386.02" y="1471.5" >cpuidle..</text>
</g>
<g >
<title>cpu_startup_entry (174,197,715 samples, 0.26%)</title><rect x="469.5" y="1477" width="3.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="472.53" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (126,309,481 samples, 0.19%)</title><rect x="469.5" y="1397" width="2.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="472.55" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,012,053 samples, 0.01%)</title><rect x="1049.5" y="1573" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1052.49" y="1583.5" ></text>
</g>
<g >
<title>add_wait_queue (41,612,660 samples, 0.06%)</title><rect x="61.9" y="1413" width="0.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="64.91" y="1423.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (11,006,196 samples, 0.02%)</title><rect x="377.5" y="1445" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="380.47" y="1455.5" ></text>
</g>
<g >
<title>swapper (7,803,644,450 samples, 11.50%)</title><rect x="1054.3" y="1589" width="135.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1057.27" y="1599.5" >swapper</text>
</g>
<g >
<title>__wake_up_common (11,006,196 samples, 0.02%)</title><rect x="377.5" y="1317" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="380.47" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (271,029,121 samples, 0.40%)</title><rect x="308.7" y="1477" width="4.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.68" y="1487.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (50,366,925 samples, 0.07%)</title><rect x="702.0" y="1349" width="0.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="705.04" y="1359.5" ></text>
</g>
<g >
<title>execute_command (788,151,366 samples, 1.16%)</title><rect x="1034.7" y="1381" width="13.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1037.73" y="1391.5" ></text>
</g>
<g >
<title>kmem_cache_free (39,096,351 samples, 0.06%)</title><rect x="17.9" y="917" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="20.89" y="927.5" ></text>
</g>
<g >
<title>ima_match_policy (51,221,990 samples, 0.08%)</title><rect x="650.6" y="1397" width="0.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="653.59" y="1407.5" ></text>
</g>
<g >
<title>tcp_inbound_md5_hash (51,304,302 samples, 0.08%)</title><rect x="686.7" y="981" width="0.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="689.73" y="991.5" ></text>
</g>
<g >
<title>__do_softirq (50,799,940 samples, 0.07%)</title><rect x="1100.3" y="1493" width="0.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1103.27" y="1503.5" ></text>
</g>
<g >
<title>main (515,739,055 samples, 0.76%)</title><rect x="638.6" y="1573" width="9.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="641.62" y="1583.5" ></text>
</g>
<g >
<title>[bash] (497,305,305 samples, 0.73%)</title><rect x="1034.8" y="1269" width="8.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1037.83" y="1279.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (112,265,720 samples, 0.17%)</title><rect x="21.5" y="1445" width="2.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="24.53" y="1455.5" ></text>
</g>
<g >
<title>__close (256,795,043 samples, 0.38%)</title><rect x="472.6" y="1573" width="4.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="475.61" y="1583.5" ></text>
</g>
<g >
<title>vfs_read (19,304,836 samples, 0.03%)</title><rect x="301.4" y="1493" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="304.39" y="1503.5" ></text>
</g>
<g >
<title>v8::internal::JSObject::MigrateToMap (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1365" width="1.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="327.89" y="1375.5" ></text>
</g>
<g >
<title>lookup_fast (9,665,359 samples, 0.01%)</title><rect x="304.9" y="1397" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="307.92" y="1407.5" ></text>
</g>
<g >
<title>copy_process (12,095,848 samples, 0.02%)</title><rect x="1048.5" y="1141" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1051.45" y="1151.5" ></text>
</g>
<g >
<title>do_writepages (242,507,809 samples, 0.36%)</title><rect x="1101.2" y="1397" width="4.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1104.16" y="1407.5" ></text>
</g>
<g >
<title>tcp_wfree (51,309,496 samples, 0.08%)</title><rect x="992.4" y="1189" width="0.9" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="995.41" y="1199.5" ></text>
</g>
<g >
<title>__fdget (99,540,264 samples, 0.15%)</title><rect x="485.4" y="1509" width="1.7" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="488.40" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="821" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_execve (7,128,978 samples, 0.01%)</title><rect x="304.0" y="1541" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="306.98" y="1551.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (86,390,205 samples, 0.13%)</title><rect x="447.8" y="1461" width="1.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="450.82" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="623.5" ></text>
</g>
<g >
<title>copyout (5,206,525,118 samples, 7.67%)</title><rect x="513.9" y="1349" width="90.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="516.88" y="1359.5" >copyout</text>
</g>
<g >
<title>_copy_to_iter (9,002,075,674 samples, 13.27%)</title><rect x="114.6" y="1381" width="156.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="117.56" y="1391.5" >_copy_to_iter</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,663,655 samples, 0.02%)</title><rect x="308.7" y="629" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.73" y="639.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1,159,142,163 samples, 1.71%)</title><rect x="681.0" y="1365" width="20.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="684.00" y="1375.5" ></text>
</g>
<g >
<title>intel_idle (538,202,768 samples, 0.79%)</title><rect x="385.8" y="1445" width="9.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="388.79" y="1455.5" ></text>
</g>
<g >
<title>exit_mm (235,687,500 samples, 0.35%)</title><rect x="1050.2" y="1493" width="4.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1053.17" y="1503.5" ></text>
</g>
<g >
<title>vfs_statx (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1381" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="308.17" y="1391.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (9,758,518 samples, 0.01%)</title><rect x="1050.0" y="1525" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1053.00" y="1535.5" ></text>
</g>
<g >
<title>v8::internal::compiler::BytecodeGraphBuilder::VisitBytecodes (5,802,075 samples, 0.01%)</title><rect x="314.8" y="1413" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="317.82" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_execve (9,758,518 samples, 0.01%)</title><rect x="1050.0" y="1541" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1053.00" y="1551.5" ></text>
</g>
<g >
<title>process_backlog (251,147,153 samples, 0.37%)</title><rect x="277.7" y="1125" width="4.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="280.74" y="1135.5" ></text>
</g>
<g >
<title>d_namespace_path.constprop.0 (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1349" width="3.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="342.45" y="1359.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (597,174,946 samples, 0.88%)</title><rect x="937.1" y="933" width="10.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="940.12" y="943.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (43,135,527 samples, 0.06%)</title><rect x="447.8" y="1445" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="450.82" y="1455.5" ></text>
</g>
<g >
<title>select_task_rq_fair (307,229,532 samples, 0.45%)</title><rect x="961.7" y="837" width="5.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="964.68" y="847.5" ></text>
</g>
<g >
<title>ksys_read (19,304,836 samples, 0.03%)</title><rect x="301.4" y="1509" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="304.39" y="1519.5" ></text>
</g>
<g >
<title>check_spread.isra.0 (42,120,156 samples, 0.06%)</title><rect x="1169.4" y="1413" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1172.43" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (250,896,222 samples, 0.37%)</title><rect x="309.0" y="1205" width="4.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="312.03" y="1215.5" ></text>
</g>
<g >
<title>do_mmap (6,372,693 samples, 0.01%)</title><rect x="304.0" y="1365" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="306.98" y="1375.5" ></text>
</g>
<g >
<title>netlink_recvmsg (10,048,801 samples, 0.01%)</title><rect x="377.7" y="1461" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="380.67" y="1471.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (251,147,153 samples, 0.37%)</title><rect x="277.7" y="1093" width="4.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="280.74" y="1103.5" ></text>
</g>
<g >
<title>malloc (252,035,004 samples, 0.37%)</title><rect x="334.3" y="69" width="4.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="337.32" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,663,655 samples, 0.02%)</title><rect x="308.7" y="549" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.73" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_free (51,330,513 samples, 0.08%)</title><rect x="678.3" y="1333" width="0.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="681.27" y="1343.5" ></text>
</g>
<g >
<title>__cmd_record.constprop.0 (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1573" width="3.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="342.45" y="1583.5" ></text>
</g>
<g >
<title>do_dentry_open (51,284,785 samples, 0.08%)</title><rect x="651.5" y="1365" width="0.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="654.48" y="1375.5" ></text>
</g>
<g >
<title>tcp_rcv_established (202,651,506 samples, 0.30%)</title><rect x="16.4" y="1013" width="3.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="19.45" y="1023.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (11,917,248 samples, 0.02%)</title><rect x="304.5" y="1493" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="307.51" y="1503.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (51,259,317 samples, 0.08%)</title><rect x="968.8" y="965" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="971.81" y="975.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (7,128,978 samples, 0.01%)</title><rect x="304.0" y="1525" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="306.98" y="1535.5" ></text>
</g>
<g >
<title>inet_ehashfn (50,596,496 samples, 0.07%)</title><rect x="931.8" y="997" width="0.9" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="934.79" y="1007.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (5,024,766,440 samples, 7.41%)</title><rect x="908.6" y="1381" width="87.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="911.64" y="1391.5" >__tcp_tran..</text>
</g>
<g >
<title>_compound_head (22,651,728 samples, 0.03%)</title><rect x="333.1" y="1285" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="336.12" y="1295.5" ></text>
</g>
<g >
<title>kfree_skbmem (50,513,921 samples, 0.07%)</title><rect x="975.8" y="1141" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="978.85" y="1151.5" ></text>
</g>
<g >
<title>ip_queue_xmit (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1365" width="4.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1098.40" y="1375.5" ></text>
</g>
<g >
<title>__mmput (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1381" width="3.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="334.11" y="1391.5" ></text>
</g>
<g >
<title>process_measurement (103,446,580 samples, 0.15%)</title><rect x="649.7" y="1429" width="1.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="652.68" y="1439.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2,231,622,101 samples, 3.29%)</title><rect x="933.5" y="1013" width="38.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="936.55" y="1023.5" >tcp..</text>
</g>
<g >
<title>exec_mmap (18,282,747 samples, 0.03%)</title><rect x="1049.0" y="1413" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1052.02" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (259,227,551 samples, 0.38%)</title><rect x="1095.0" y="1557" width="4.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1098.00" y="1567.5" ></text>
</g>
<g >
<title>ct_idle_enter (10,965,637 samples, 0.02%)</title><rect x="1186.6" y="1381" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1189.57" y="1391.5" ></text>
</g>
<g >
<title>__send (632,954,738 samples, 0.93%)</title><rect x="13.1" y="1573" width="11.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="16.07" y="1583.5" ></text>
</g>
<g >
<title>[bash] (13,896,948 samples, 0.02%)</title><rect x="1043.1" y="1125" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1046.13" y="1135.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (3,215,310,004 samples, 4.74%)</title><rect x="919.9" y="1109" width="55.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="922.92" y="1119.5" >__net..</text>
</g>
<g >
<title>__update_load_avg_se (24,175,499 samples, 0.04%)</title><rect x="447.2" y="1285" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="450.23" y="1295.5" ></text>
</g>
<g >
<title>__sys_sendto (589,779,207 samples, 0.87%)</title><rect x="13.8" y="1509" width="10.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="16.82" y="1519.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1,159,142,163 samples, 1.71%)</title><rect x="681.0" y="1349" width="20.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="684.00" y="1359.5" ></text>
</g>
<g >
<title>_start (829,181,630 samples, 1.22%)</title><rect x="1034.6" y="1573" width="14.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1037.60" y="1583.5" ></text>
</g>
<g >
<title>inet6_dump_fib (10,048,801 samples, 0.01%)</title><rect x="377.7" y="1413" width="0.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="380.67" y="1423.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (252,882,773 samples, 0.37%)</title><rect x="314.8" y="1477" width="4.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="317.82" y="1487.5" ></text>
</g>
<g >
<title>__fget_light (204,693,189 samples, 0.30%)</title><rect x="662.2" y="1477" width="3.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="665.23" y="1487.5" ></text>
</g>
<g >
<title>[bash] (15,005,848 samples, 0.02%)</title><rect x="1048.5" y="1301" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1051.45" y="1311.5" ></text>
</g>
<g >
<title>unix_destruct_scm (11,006,196 samples, 0.02%)</title><rect x="377.5" y="1397" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="380.47" y="1407.5" ></text>
</g>
<g >
<title>record__pushfn (14,304,591 samples, 0.02%)</title><rect x="342.8" y="1525" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="345.83" y="1535.5" ></text>
</g>
<g >
<title>blkcg_maybe_throttle_current (39,427,696 samples, 0.06%)</title><rect x="293.7" y="1477" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="296.74" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (19,304,836 samples, 0.03%)</title><rect x="301.4" y="1541" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="304.39" y="1551.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::DefineProperties (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1525" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="327.89" y="1535.5" ></text>
</g>
<g >
<title>sched_clock (51,234,655 samples, 0.08%)</title><rect x="967.9" y="805" width="0.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="970.92" y="815.5" ></text>
</g>
<g >
<title>exec_mmap (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1413" width="3.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="334.11" y="1423.5" ></text>
</g>
<g >
<title>do_readlinkat (9,665,359 samples, 0.01%)</title><rect x="304.9" y="1477" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="307.92" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,663,655 samples, 0.02%)</title><rect x="308.7" y="533" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.73" y="543.5" ></text>
</g>
<g >
<title>__virt_addr_valid (74,825,334 samples, 0.11%)</title><rect x="113.3" y="1333" width="1.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="116.26" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (17,816,233 samples, 0.03%)</title><rect x="1048.7" y="1365" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1051.71" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1349" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="1359.5" ></text>
</g>
<g >
<title>ip_skb_dst_mtu (51,175,781 samples, 0.08%)</title><rect x="995.1" y="1269" width="0.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="998.09" y="1279.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (50,926,567 samples, 0.08%)</title><rect x="951.1" y="949" width="0.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="954.10" y="959.5" ></text>
</g>
<g >
<title>schedule_timeout (1,601,943,005 samples, 2.36%)</title><rect x="69.2" y="1397" width="27.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="72.19" y="1407.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1525" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1535.5" ></text>
</g>
<g >
<title>folio_test_hugetlb (98,670,073 samples, 0.15%)</title><rect x="302.0" y="1301" width="1.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="304.96" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="197" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="207.5" ></text>
</g>
<g >
<title>cap_capable (51,223,619 samples, 0.08%)</title><rect x="652.4" y="1333" width="0.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="655.37" y="1343.5" ></text>
</g>
<g >
<title>__libc_start_main (102,049,378 samples, 0.15%)</title><rect x="301.9" y="1557" width="1.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="304.90" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1429" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="308.17" y="1439.5" ></text>
</g>
<g >
<title>ovl_real_fdget (7,095,189 samples, 0.01%)</title><rect x="630.4" y="1493" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="633.35" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (12,663,655 samples, 0.02%)</title><rect x="308.7" y="581" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.73" y="591.5" ></text>
</g>
<g >
<title>rcu_core_si (26,959,220 samples, 0.04%)</title><rect x="469.6" y="1301" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="472.59" y="1311.5" ></text>
</g>
<g >
<title>ksys_write (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1525" width="4.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1098.40" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,549,453,995 samples, 12.60%)</title><rect x="485.4" y="1557" width="148.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="488.40" y="1567.5" >entry_SYSCALL_64_af..</text>
</g>
<g >
<title>dst_release (106,034,688 samples, 0.16%)</title><rect x="949.3" y="965" width="1.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="952.25" y="975.5" ></text>
</g>
<g >
<title>tcp_try_coalesce (42,243,939 samples, 0.06%)</title><rect x="42.8" y="1349" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="45.76" y="1359.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,012,053 samples, 0.01%)</title><rect x="1049.5" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1052.49" y="1551.5" ></text>
</g>
<g >
<title>sock_recvmsg (14,653,911,120 samples, 21.60%)</title><rect x="34.5" y="1493" width="254.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="37.48" y="1503.5" >sock_recvmsg</text>
</g>
<g >
<title>raw_local_deliver (51,233,299 samples, 0.08%)</title><rect x="925.3" y="1029" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="928.25" y="1039.5" ></text>
</g>
<g >
<title>check_heap_object (125,259,490 samples, 0.18%)</title><rect x="831.3" y="1365" width="2.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="834.27" y="1375.5" ></text>
</g>
<g >
<title>security_file_open (50,695,196 samples, 0.07%)</title><rect x="654.2" y="1413" width="0.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="657.19" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12,095,848 samples, 0.02%)</title><rect x="1048.5" y="1221" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1051.45" y="1231.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (46,543,377 samples, 0.07%)</title><rect x="38.4" y="1429" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="41.40" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="773" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1493" width="3.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="342.45" y="1503.5" ></text>
</g>
<g >
<title>__switch_to (38,462,101 samples, 0.06%)</title><rect x="1179.4" y="1477" width="0.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1182.44" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_clone (58,089,665 samples, 0.09%)</title><rect x="323.8" y="1381" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="326.84" y="1391.5" ></text>
</g>
<g >
<title>Builtins_StringEqual (233,500,864 samples, 0.34%)</title><rect x="326.5" y="1557" width="4.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="329.51" y="1567.5" ></text>
</g>
<g >
<title>handle_mm_fault (6,327,910 samples, 0.01%)</title><rect x="1034.6" y="1317" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1037.60" y="1327.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (9,573,165,557 samples, 14.11%)</title><rect x="106.3" y="1397" width="166.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="109.34" y="1407.5" >simple_copy_to_iter</text>
</g>
<g >
<title>[[heap]] (7,231,781 samples, 0.01%)</title><rect x="301.8" y="1573" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="304.77" y="1583.5" ></text>
</g>
<g >
<title>ip_queue_xmit (4,916,455,715 samples, 7.25%)</title><rect x="910.5" y="1365" width="85.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="913.47" y="1375.5" >ip_queue_x..</text>
</g>
<g >
<title>ip_finish_output2 (4,834,901,884 samples, 7.13%)</title><rect x="911.0" y="1269" width="84.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="913.99" y="1279.5" >ip_finish..</text>
</g>
<g >
<title>__refill_stock (51,213,844 samples, 0.08%)</title><rect x="1031.0" y="1317" width="0.9" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1034.04" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="165" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (105,426,630 samples, 0.16%)</title><rect x="655.1" y="1525" width="1.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="658.07" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="613" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="623.5" ></text>
</g>
<g >
<title>bprm_execve (7,128,978 samples, 0.01%)</title><rect x="304.0" y="1509" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="306.98" y="1519.5" ></text>
</g>
<g >
<title>loopback_xmit (51,299,662 samples, 0.08%)</title><rect x="943.9" y="757" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="946.85" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,535,484 samples, 0.03%)</title><rect x="308.7" y="1221" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.72" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1093" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1103.5" ></text>
</g>
<g >
<title>__inet_lookup_established (254,429,431 samples, 0.38%)</title><rect x="687.6" y="965" width="4.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="690.62" y="975.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (101,997,846 samples, 0.15%)</title><rect x="1018.6" y="1381" width="1.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1021.62" y="1391.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (208,877,296 samples, 0.31%)</title><rect x="277.7" y="1013" width="3.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="280.74" y="1023.5" ></text>
</g>
<g >
<title>get_inode_acl (53,151,002 samples, 0.08%)</title><rect x="653.3" y="1349" width="0.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="656.26" y="1359.5" ></text>
</g>
<g >
<title>__calc_delta (33,258,369 samples, 0.05%)</title><rect x="81.6" y="1285" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="84.61" y="1295.5" ></text>
</g>
<g >
<title>v8::internal::compiler::LoopFinder::BuildLoopTree (245,734,228 samples, 0.36%)</title><rect x="314.9" y="1445" width="4.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="317.92" y="1455.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (242,507,809 samples, 0.36%)</title><rect x="1101.2" y="1429" width="4.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1104.16" y="1439.5" ></text>
</g>
<g >
<title>execute_command_internal (20,187,069 samples, 0.03%)</title><rect x="1043.1" y="1189" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1046.13" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1541" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (632,954,738 samples, 0.93%)</title><rect x="13.1" y="1541" width="11.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="16.07" y="1551.5" ></text>
</g>
<g >
<title>do_idle (4,620,825,682 samples, 6.81%)</title><rect x="1105.4" y="1525" width="80.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1108.44" y="1535.5" >do_idle</text>
</g>
<g >
<title>inode_permission (53,151,002 samples, 0.08%)</title><rect x="653.3" y="1381" width="0.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="656.26" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,857,517 samples, 0.02%)</title><rect x="308.7" y="1013" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1023.5" ></text>
</g>
<g >
<title>file_status (7,023,961 samples, 0.01%)</title><rect x="1043.2" y="1061" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1046.16" y="1071.5" ></text>
</g>
<g >
<title>lock_sock_nested (204,407,972 samples, 0.30%)</title><rect x="672.1" y="1429" width="3.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="675.05" y="1439.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (102,504,971 samples, 0.15%)</title><rect x="967.0" y="837" width="1.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="970.03" y="847.5" ></text>
</g>
<g >
<title>__mod_timer (52,517,788 samples, 0.08%)</title><rect x="699.3" y="1269" width="0.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="702.32" y="1279.5" ></text>
</g>
<g >
<title>do_iter_read (7,702,938,816 samples, 11.35%)</title><rect x="496.4" y="1461" width="134.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="499.37" y="1471.5" >do_iter_read</text>
</g>
<g >
<title>sk_forced_mem_schedule (42,624,505 samples, 0.06%)</title><rect x="56.2" y="1349" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="59.19" y="1359.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (766,422,676 samples, 1.13%)</title><rect x="955.5" y="933" width="13.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="958.48" y="943.5" ></text>
</g>
<g >
<title>__inet_lookup_established (42,658,983 samples, 0.06%)</title><rect x="277.7" y="997" width="0.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="280.74" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1045" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="1055.5" ></text>
</g>
<g >
<title>__x64_sys_clone (12,095,848 samples, 0.02%)</title><rect x="1048.5" y="1189" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1051.45" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="853" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="863.5" ></text>
</g>
<g >
<title>ima_file_check (103,446,580 samples, 0.15%)</title><rect x="649.7" y="1445" width="1.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="652.68" y="1455.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (253,792,936 samples, 0.37%)</title><rect x="314.8" y="1541" width="4.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="317.82" y="1551.5" ></text>
</g>
<g >
<title>kthread (161,123,886 samples, 0.24%)</title><rect x="377.9" y="1541" width="2.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="380.94" y="1551.5" ></text>
</g>
<g >
<title>ip_output (648,384,334 samples, 0.96%)</title><rect x="685.4" y="1269" width="11.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="688.37" y="1279.5" ></text>
</g>
<g >
<title>mas_destroy (6,372,693 samples, 0.01%)</title><rect x="304.0" y="1317" width="0.1" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="306.98" y="1327.5" ></text>
</g>
<g >
<title>[perf-855407.map] (27,316,266 samples, 0.04%)</title><rect x="330.6" y="1573" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="333.60" y="1583.5" ></text>
</g>
<g >
<title>vma_alloc_folio (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1189" width="1.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="327.89" y="1199.5" ></text>
</g>
<g >
<title>net_rx_action (320,948,605 samples, 0.47%)</title><rect x="15.9" y="1189" width="5.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="18.95" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (24,373,820 samples, 0.04%)</title><rect x="304.7" y="1573" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="307.72" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (206,654,957 samples, 0.30%)</title><rect x="635.0" y="1541" width="3.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="638.02" y="1551.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,845,633 samples, 0.01%)</title><rect x="303.7" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="306.74" y="1551.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (40,122,223 samples, 0.06%)</title><rect x="280.0" y="949" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="282.96" y="959.5" ></text>
</g>
<g >
<title>apparmor_file_permission (52,508,576 samples, 0.08%)</title><rect x="668.5" y="1445" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="671.47" y="1455.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (50,919,473 samples, 0.08%)</title><rect x="710.5" y="1349" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="713.54" y="1359.5" ></text>
</g>
<g >
<title>skb_release_head_state (41,713,651 samples, 0.06%)</title><rect x="282.1" y="1125" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="285.11" y="1135.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (438,502,903 samples, 0.65%)</title><rect x="702.9" y="1349" width="7.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="705.91" y="1359.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (7,128,978 samples, 0.01%)</title><rect x="304.0" y="1493" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="306.98" y="1503.5" ></text>
</g>
<g >
<title>do_idle (174,197,715 samples, 0.26%)</title><rect x="469.5" y="1461" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="472.53" y="1471.5" ></text>
</g>
<g >
<title>mmap_region (6,372,693 samples, 0.01%)</title><rect x="304.0" y="1349" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="306.98" y="1359.5" ></text>
</g>
<g >
<title>execute_command (20,187,069 samples, 0.03%)</title><rect x="1043.1" y="1173" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1046.13" y="1183.5" ></text>
</g>
<g >
<title>call_cpuidle (3,139,410,221 samples, 4.63%)</title><rect x="1109.0" y="1493" width="54.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1112.05" y="1503.5" >call_..</text>
</g>
<g >
<title>seq_escape_mem (19,304,836 samples, 0.03%)</title><rect x="301.4" y="1413" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="304.39" y="1423.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (261,065,388 samples, 0.38%)</title><rect x="449.4" y="1493" width="4.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="452.39" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (13,524,040 samples, 0.02%)</title><rect x="10.0" y="1573" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" ></text>
</g>
<g >
<title>[perf-854694.map] (400,817,930 samples, 0.59%)</title><rect x="323.6" y="1573" width="7.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="326.62" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (632,954,738 samples, 0.93%)</title><rect x="13.1" y="1557" width="11.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.07" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (105,426,630 samples, 0.16%)</title><rect x="655.1" y="1541" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="658.07" y="1551.5" ></text>
</g>
<g >
<title>refill_stock (42,624,505 samples, 0.06%)</title><rect x="56.2" y="1317" width="0.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="59.19" y="1327.5" ></text>
</g>
<g >
<title>filename_lookup (9,665,359 samples, 0.01%)</title><rect x="304.9" y="1445" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="307.92" y="1455.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (163,116,483 samples, 0.24%)</title><rect x="305.7" y="1397" width="2.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="308.71" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (268,991,173 samples, 0.40%)</title><rect x="308.7" y="1397" width="4.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="1407.5" ></text>
</g>
<g >
<title>d_absolute_path (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1333" width="3.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="342.45" y="1343.5" ></text>
</g>
<g >
<title>backing_file_open (51,284,785 samples, 0.08%)</title><rect x="651.5" y="1381" width="0.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="654.48" y="1391.5" ></text>
</g>
<g >
<title>tcp_current_mss (153,279,171 samples, 0.23%)</title><rect x="1002.3" y="1397" width="2.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1005.31" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1205" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1215.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (42,228,553 samples, 0.06%)</title><rect x="30.1" y="1541" width="0.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="33.14" y="1551.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (18,463,171 samples, 0.03%)</title><rect x="459.8" y="1477" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="462.75" y="1487.5" ></text>
</g>
<g >
<title>copyout (9,002,075,674 samples, 13.27%)</title><rect x="114.6" y="1365" width="156.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="117.56" y="1375.5" >copyout</text>
</g>
<g >
<title>__irq_exit_rcu (5,931,372 samples, 0.01%)</title><rect x="1186.5" y="1333" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1189.46" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="693" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="703.5" ></text>
</g>
<g >
<title>writen (14,304,591 samples, 0.02%)</title><rect x="342.8" y="1509" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="345.83" y="1519.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (594,098,960 samples, 0.88%)</title><rect x="685.4" y="1173" width="10.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="688.37" y="1183.5" ></text>
</g>
<g >
<title>copyout (98,549,846 samples, 0.15%)</title><rect x="271.1" y="1381" width="1.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="274.14" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="725" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="735.5" ></text>
</g>
<g >
<title>vfs_statx (155,581,530 samples, 0.23%)</title><rect x="635.9" y="1477" width="2.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="638.91" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1141" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1151.5" ></text>
</g>
<g >
<title>aa_file_perm (52,508,576 samples, 0.08%)</title><rect x="668.5" y="1429" width="0.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="671.47" y="1439.5" ></text>
</g>
<g >
<title>consume_skb (11,006,196 samples, 0.02%)</title><rect x="377.5" y="1429" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="380.47" y="1439.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (68,125,853 samples, 0.10%)</title><rect x="333.1" y="1301" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="336.12" y="1311.5" ></text>
</g>
<g >
<title>do_dentry_open (206,354,602 samples, 0.30%)</title><rect x="651.5" y="1429" width="3.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="654.48" y="1439.5" ></text>
</g>
<g >
<title>enqueue_task (170,206,836 samples, 0.25%)</title><rect x="1169.4" y="1445" width="3.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1172.43" y="1455.5" ></text>
</g>
<g >
<title>ovl_open_realfile (155,659,406 samples, 0.23%)</title><rect x="651.5" y="1397" width="2.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="654.48" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="133" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="213" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="933" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="943.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::ValidateAndApplyPropertyDescriptor (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1461" width="1.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="327.89" y="1471.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (430,226,467 samples, 0.63%)</title><rect x="449.4" y="1509" width="7.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="452.39" y="1519.5" ></text>
</g>
<g >
<title>__fget_light (34,280,263 samples, 0.05%)</title><rect x="23.5" y="1461" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="26.48" y="1471.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (247,355,029 samples, 0.36%)</title><rect x="41.3" y="1413" width="4.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="44.31" y="1423.5" ></text>
</g>
<g >
<title>make_child (13,258,625 samples, 0.02%)</title><rect x="1048.5" y="1269" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1051.45" y="1279.5" ></text>
</g>
<g >
<title>runc (11,231,970 samples, 0.02%)</title><rect x="343.1" y="1589" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="346.08" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1397" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1407.5" ></text>
</g>
<g >
<title>kmalloc_reserve (154,015,716 samples, 0.23%)</title><rect x="1015.9" y="1381" width="2.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1018.94" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (163,116,483 samples, 0.24%)</title><rect x="305.7" y="1573" width="2.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="308.71" y="1583.5" ></text>
</g>
<g >
<title>setlocale (7,763,383 samples, 0.01%)</title><rect x="308.5" y="1573" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="311.54" y="1583.5" ></text>
</g>
<g >
<title>ip_finish_output (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1301" width="4.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1098.40" y="1311.5" ></text>
</g>
<g >
<title>skb_release_data (119,788,116 samples, 0.18%)</title><rect x="706.5" y="1317" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="709.55" y="1327.5" ></text>
</g>
<g >
<title>filemap_read (14,482,837 samples, 0.02%)</title><rect x="498.0" y="1413" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="501.02" y="1423.5" ></text>
</g>
<g >
<title>rcu_do_batch (50,799,940 samples, 0.07%)</title><rect x="1100.3" y="1445" width="0.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1103.27" y="1455.5" ></text>
</g>
<g >
<title>__netif_receive_skb (230,864,421 samples, 0.34%)</title><rect x="16.0" y="1141" width="4.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="18.96" y="1151.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (9,960,599 samples, 0.01%)</title><rect x="342.9" y="1317" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="345.91" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1413" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1423.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (294,969,967 samples, 0.43%)</title><rect x="62.6" y="1381" width="5.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="65.63" y="1391.5" ></text>
</g>
<g >
<title>__netif_receive_skb (251,147,153 samples, 0.37%)</title><rect x="277.7" y="1109" width="4.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="280.74" y="1119.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (230,864,421 samples, 0.34%)</title><rect x="16.0" y="1061" width="4.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="18.96" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,268,899 samples, 0.02%)</title><rect x="308.7" y="741" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="311.72" y="751.5" ></text>
</g>
<g >
<title>record_times (34,603,755 samples, 0.05%)</title><rect x="1182.3" y="1461" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1185.30" y="1471.5" ></text>
</g>
<g >
<title>__update_blocked_fair (24,175,499 samples, 0.04%)</title><rect x="447.2" y="1317" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="450.23" y="1327.5" ></text>
</g>
<g >
<title>dequeue_task (861,542,440 samples, 1.27%)</title><rect x="72.3" y="1349" width="15.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="75.33" y="1359.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (51,006,552 samples, 0.08%)</title><rect x="379.7" y="1429" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="382.67" y="1439.5" ></text>
</g>
<g >
<title>update_cfs_group (85,124,177 samples, 0.13%)</title><rect x="74.5" y="1301" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="77.52" y="1311.5" ></text>
</g>
<g >
<title>cfree (251,455,689 samples, 0.37%)</title><rect x="309.0" y="1237" width="4.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="312.02" y="1247.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (24,175,499 samples, 0.04%)</title><rect x="447.2" y="1413" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="450.23" y="1423.5" ></text>
</g>
<g >
<title>vm_area_dup (8,769,445 samples, 0.01%)</title><rect x="324.7" y="1285" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="327.69" y="1295.5" ></text>
</g>
<g >
<title>kmem_cache_free (97,199,772 samples, 0.14%)</title><rect x="378.0" y="1413" width="1.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="380.98" y="1423.5" ></text>
</g>
<g >
<title>neigh_hh_output (292,860,804 samples, 0.43%)</title><rect x="277.7" y="1237" width="5.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="280.74" y="1247.5" ></text>
</g>
<g >
<title>tcp_write_xmit (5,385,169,579 samples, 7.94%)</title><rect x="906.9" y="1397" width="93.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="909.93" y="1407.5" >tcp_write_x..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (19,895,732 samples, 0.03%)</title><rect x="384.5" y="1445" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="387.52" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (17,816,233 samples, 0.03%)</title><rect x="1048.7" y="1397" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1051.71" y="1407.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (37,315,058 samples, 0.06%)</title><rect x="288.7" y="1461" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="291.71" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,035,004 samples, 0.37%)</title><rect x="334.3" y="453" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.32" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (42,876,927 samples, 0.06%)</title><rect x="24.1" y="1573" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="27.08" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="245" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="255.5" ></text>
</g>
<g >
<title>rcu_core (148,206,324 samples, 0.22%)</title><rect x="378.0" y="1461" width="2.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="380.98" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,857,517 samples, 0.02%)</title><rect x="308.7" y="965" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.72" y="975.5" ></text>
</g>
<g >
<title>__do_softirq (5,931,372 samples, 0.01%)</title><rect x="1186.5" y="1317" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.46" y="1327.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (9,960,599 samples, 0.01%)</title><rect x="342.9" y="1301" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="345.91" y="1311.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (204,267,902 samples, 0.30%)</title><rect x="473.5" y="1525" width="3.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="476.52" y="1535.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (50,845,974 samples, 0.07%)</title><rect x="474.4" y="1461" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="477.41" y="1471.5" ></text>
</g>
<g >
<title>filename_lookup (104,460,953 samples, 0.15%)</title><rect x="635.9" y="1461" width="1.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="638.91" y="1471.5" ></text>
</g>
<g >
<title>wb_do_writeback (242,507,809 samples, 0.36%)</title><rect x="1101.2" y="1477" width="4.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1104.16" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1429" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (12,663,655 samples, 0.02%)</title><rect x="308.7" y="645" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.73" y="655.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (4,916,455,715 samples, 7.25%)</title><rect x="910.5" y="1349" width="85.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="913.47" y="1359.5" >__ip_queue..</text>
</g>
<g >
<title>handle_pte_fault (6,327,910 samples, 0.01%)</title><rect x="1034.6" y="1285" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1037.60" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="511.5" ></text>
</g>
<g >
<title>ima_match_rules (51,221,990 samples, 0.08%)</title><rect x="650.6" y="1381" width="0.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="653.59" y="1391.5" ></text>
</g>
<g >
<title>rw_verify_area (51,238,138 samples, 0.08%)</title><rect x="488.0" y="1509" width="0.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="491.02" y="1519.5" ></text>
</g>
<g >
<title>[bash] (497,305,305 samples, 0.73%)</title><rect x="1034.8" y="1285" width="8.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1037.83" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,268,899 samples, 0.02%)</title><rect x="308.7" y="773" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.72" y="783.5" ></text>
</g>
<g >
<title>sock_read_iter (12,360,630 samples, 0.02%)</title><rect x="377.5" y="1493" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="380.45" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (102,049,378 samples, 0.15%)</title><rect x="301.9" y="1461" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="304.90" y="1471.5" ></text>
</g>
<g >
<title>neigh_hh_output (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1253" width="4.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1098.40" y="1263.5" ></text>
</g>
<g >
<title>__writeback_single_inode (242,507,809 samples, 0.36%)</title><rect x="1101.2" y="1413" width="4.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1104.16" y="1423.5" ></text>
</g>
<g >
<title>path_init (51,299,047 samples, 0.08%)</title><rect x="636.8" y="1429" width="0.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="639.83" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (253,014,107 samples, 0.37%)</title><rect x="334.3" y="1557" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.30" y="1567.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (350,825,689 samples, 0.52%)</title><rect x="1168.0" y="1509" width="6.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1171.03" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (11,627,931 samples, 0.02%)</title><rect x="303.7" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="306.67" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19,304,836 samples, 0.03%)</title><rect x="301.4" y="1557" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="304.39" y="1567.5" ></text>
</g>
<g >
<title>ip_local_out (364,091,308 samples, 0.54%)</title><rect x="941.2" y="885" width="6.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="944.18" y="895.5" ></text>
</g>
<g >
<title>unmap_single_vma (17,395,449 samples, 0.03%)</title><rect x="1049.0" y="1333" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1052.04" y="1343.5" ></text>
</g>
<g >
<title>security_inode_getattr (22,304,982 samples, 0.03%)</title><rect x="305.2" y="1333" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="308.17" y="1343.5" ></text>
</g>
<g >
<title>mmput (183,482,297 samples, 0.27%)</title><rect x="331.1" y="1397" width="3.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="334.11" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="789" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="799.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,162,328 samples, 0.01%)</title><rect x="303.9" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="306.88" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (204,407,972 samples, 0.30%)</title><rect x="672.1" y="1413" width="3.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="675.05" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="293" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1237" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1397" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1407.5" ></text>
</g>
<g >
<title>perf_event_mmap (11,917,248 samples, 0.02%)</title><rect x="304.5" y="1445" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="307.51" y="1455.5" ></text>
</g>
<g >
<title>__sys_recvmsg (10,048,801 samples, 0.01%)</title><rect x="377.7" y="1525" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="380.67" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="213" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="223.5" ></text>
</g>
<g >
<title>aa_path_name (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1365" width="3.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="342.45" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_openat (16,322,107 samples, 0.02%)</title><rect x="1095.1" y="1541" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1098.09" y="1551.5" ></text>
</g>
<g >
<title>__sk_flush_backlog (42,624,505 samples, 0.06%)</title><rect x="56.2" y="1429" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="59.19" y="1439.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (10,023,289,687 samples, 14.77%)</title><rect x="98.5" y="1429" width="174.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="101.51" y="1439.5" >skb_copy_datagram_iter</text>
</g>
<g >
<title>ns_capable (51,223,619 samples, 0.08%)</title><rect x="652.4" y="1365" width="0.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="655.37" y="1375.5" ></text>
</g>
<g >
<title>unmap_single_vma (11,460,844 samples, 0.02%)</title><rect x="1054.1" y="1413" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1057.07" y="1423.5" ></text>
</g>
<g >
<title>perf_mmap__push (14,304,591 samples, 0.02%)</title><rect x="342.8" y="1541" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="345.83" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="597" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="607.5" ></text>
</g>
<g >
<title>tick_sched_timer (10,646,402 samples, 0.02%)</title><rect x="384.5" y="1365" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="387.53" y="1375.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (40,783,430 samples, 0.06%)</title><rect x="39.9" y="1413" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="42.88" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (102,049,378 samples, 0.15%)</title><rect x="301.9" y="1477" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="304.90" y="1487.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (41,111,869 samples, 0.06%)</title><rect x="280.7" y="997" width="0.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="283.66" y="1007.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,903,122,248 samples, 5.75%)</title><rect x="381.5" y="1509" width="67.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="384.48" y="1519.5" >cpuidle..</text>
</g>
<g >
<title>free_unref_page (461,219,092 samples, 0.68%)</title><rect x="981.8" y="1077" width="8.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="984.84" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (252,035,004 samples, 0.37%)</title><rect x="334.3" y="101" width="4.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="337.32" y="111.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,012,053 samples, 0.01%)</title><rect x="1049.5" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1052.49" y="1519.5" ></text>
</g>
<g >
<title>inet_sendmsg (235,594,471 samples, 0.35%)</title><rect x="1095.4" y="1477" width="4.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1098.40" y="1487.5" ></text>
</g>
<g >
<title>execute_command (811,365,397 samples, 1.20%)</title><rect x="1034.6" y="1445" width="14.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1037.60" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (204,267,902 samples, 0.30%)</title><rect x="473.5" y="1541" width="3.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="476.52" y="1551.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (299,913,018 samples, 0.44%)</title><rect x="1100.2" y="1573" width="5.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1103.22" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,149,356 samples, 0.01%)</title><rect x="308.8" y="485" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="311.84" y="495.5" ></text>
</g>
<g >
<title>__getdelim (6,848,173 samples, 0.01%)</title><rect x="304.2" y="1573" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="307.19" y="1583.5" ></text>
</g>
<g >
<title>vfs_read (8,289,744,491 samples, 12.22%)</title><rect x="488.9" y="1509" width="144.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="491.91" y="1519.5" >vfs_read</text>
</g>
<g >
<title>seq_escape_mem (11,106,716 samples, 0.02%)</title><rect x="377.3" y="1429" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="380.26" y="1439.5" ></text>
</g>
<g >
<title>ip_finish_output (292,860,804 samples, 0.43%)</title><rect x="277.7" y="1285" width="5.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="280.74" y="1295.5" ></text>
</g>
<g >
<title>inet_sendmsg (20,792,874,641 samples, 30.65%)</title><rect x="670.3" y="1461" width="361.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="673.27" y="1471.5" >inet_sendmsg</text>
</g>
<g >
<title>v8::internal::compiler::BytecodeGraphBuilder::CreateGraph (5,802,075 samples, 0.01%)</title><rect x="314.8" y="1429" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="317.82" y="1439.5" ></text>
</g>
<g >
<title>tcp_inbound_md5_hash (50,826,858 samples, 0.07%)</title><rect x="692.9" y="965" width="0.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="695.89" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_geteuid (6,216,814 samples, 0.01%)</title><rect x="1043.2" y="997" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1046.17" y="1007.5" ></text>
</g>
<g >
<title>profile_transition (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1381" width="3.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="342.45" y="1391.5" ></text>
</g>
<g >
<title>__ip_finish_output (292,860,804 samples, 0.43%)</title><rect x="277.7" y="1269" width="5.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="280.74" y="1279.5" ></text>
</g>
<g >
<title>put_cred_rcu (26,959,220 samples, 0.04%)</title><rect x="469.6" y="1253" width="0.5" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="472.59" y="1263.5" ></text>
</g>
<g >
<title>prepare_task_switch (34,642,003 samples, 0.05%)</title><rect x="91.6" y="1349" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="94.59" y="1359.5" ></text>
</g>
<g >
<title>pick_next_task_idle (41,484,273 samples, 0.06%)</title><rect x="90.1" y="1333" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="93.12" y="1343.5" ></text>
</g>
<g >
<title>exit_mm (163,116,483 samples, 0.24%)</title><rect x="305.7" y="1493" width="2.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="308.71" y="1503.5" ></text>
</g>
<g >
<title>client (16,660,998,392 samples, 24.56%)</title><rect x="10.3" y="1589" width="289.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="13.32" y="1599.5" >client</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1157" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1167.5" ></text>
</g>
<g >
<title>psi_group_change (139,967,411 samples, 0.21%)</title><rect x="92.8" y="1333" width="2.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="95.81" y="1343.5" ></text>
</g>
<g >
<title>__ip_finish_output (261,466,903 samples, 0.39%)</title><rect x="943.0" y="837" width="4.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="945.96" y="847.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,844,967 samples, 0.02%)</title><rect x="384.5" y="1397" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="387.52" y="1407.5" ></text>
</g>
<g >
<title>[bash] (500,985,979 samples, 0.74%)</title><rect x="1034.8" y="1333" width="8.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1037.77" y="1343.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (40,251,875 samples, 0.06%)</title><rect x="314.0" y="1557" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="317.05" y="1567.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1301" width="1.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="327.89" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="645" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="655.5" ></text>
</g>
<g >
<title>path_openat (7,763,383 samples, 0.01%)</title><rect x="308.5" y="1445" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="311.54" y="1455.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::UpdateDescriptorForValue (30,106,311 samples, 0.04%)</title><rect x="313.5" y="1557" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="316.52" y="1567.5" ></text>
</g>
<g >
<title>atime_needs_update (66,514,754 samples, 0.10%)</title><rect x="492.3" y="1445" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="495.35" y="1455.5" ></text>
</g>
<g >
<title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1317" width="1.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="327.89" y="1327.5" ></text>
</g>
<g >
<title>__legitimize_path (9,665,359 samples, 0.01%)</title><rect x="304.9" y="1365" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="307.92" y="1375.5" ></text>
</g>
<g >
<title>v8::internal::compiler::BytecodeAnalysis::GetLoopInfoFor (5,802,075 samples, 0.01%)</title><rect x="314.8" y="1349" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="317.82" y="1359.5" ></text>
</g>
<g >
<title>security_file_permission (52,508,576 samples, 0.08%)</title><rect x="668.5" y="1461" width="0.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="671.47" y="1471.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (41,353,664 samples, 0.06%)</title><rect x="291.5" y="1461" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="294.54" y="1471.5" ></text>
</g>
<g >
<title>psi_task_switch (258,008,099 samples, 0.38%)</title><rect x="92.2" y="1349" width="4.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="95.19" y="1359.5" ></text>
</g>
<g >
<title>exc_page_fault (98,670,073 samples, 0.15%)</title><rect x="302.0" y="1429" width="1.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="304.96" y="1439.5" ></text>
</g>
<g >
<title>uv__async_io (8,142,708 samples, 0.01%)</title><rect x="339.2" y="1557" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="342.25" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,322,447 samples, 0.01%)</title><rect x="338.7" y="341" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="341.70" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1029" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1039.5" ></text>
</g>
<g >
<title>__schedule (329,608,617 samples, 0.49%)</title><rect x="1178.6" y="1493" width="5.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1181.62" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="1365" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="1375.5" ></text>
</g>
<g >
<title>try_charge_memcg (50,926,567 samples, 0.08%)</title><rect x="951.1" y="933" width="0.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="954.10" y="943.5" ></text>
</g>
<g >
<title>__sk_mem_schedule (60,224,584 samples, 0.09%)</title><rect x="725.3" y="1413" width="1.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="728.34" y="1423.5" ></text>
</g>
<g >
<title>v8::internal::Object::SetPropertyWithAccessor (76,057,065 samples, 0.11%)</title><rect x="324.9" y="1429" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="327.89" y="1439.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (42,243,939 samples, 0.06%)</title><rect x="42.8" y="1365" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="45.76" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="949" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="959.5" ></text>
</g>
<g >
<title>show_mountinfo (11,106,716 samples, 0.02%)</title><rect x="377.3" y="1461" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="380.26" y="1471.5" ></text>
</g>
<g >
<title>ksys_write (21,255,191,439 samples, 31.33%)</title><rect x="662.2" y="1509" width="369.7" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="665.23" y="1519.5" >ksys_write</text>
</g>
<g >
<title>tcp_rcv_established (125,106,444 samples, 0.18%)</title><rect x="278.5" y="981" width="2.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="281.48" y="991.5" ></text>
</g>
<g >
<title>cache_from_obj (42,117,510 samples, 0.06%)</title><rect x="20.8" y="1125" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="23.80" y="1135.5" ></text>
</g>
<g >
<title>ip_local_out (292,860,804 samples, 0.43%)</title><rect x="277.7" y="1317" width="5.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="280.74" y="1327.5" ></text>
</g>
<g >
<title>prepend_path (186,024,294 samples, 0.27%)</title><rect x="339.5" y="1317" width="3.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="342.45" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,322,447 samples, 0.01%)</title><rect x="338.7" y="1141" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="341.70" y="1151.5" ></text>
</g>
<g >
<title>[libc.so.6] (17,816,233 samples, 0.03%)</title><rect x="1048.7" y="1429" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1051.71" y="1439.5" ></text>
</g>
<g >
<title>ip_local_deliver (208,877,296 samples, 0.31%)</title><rect x="277.7" y="1061" width="3.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="280.74" y="1071.5" ></text>
</g>
<g >
<title>tcp_check_space (51,199,981 samples, 0.08%)</title><rect x="698.4" y="1333" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="701.43" y="1343.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (50,799,940 samples, 0.07%)</title><rect x="1100.3" y="1525" width="0.9" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1103.27" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,035,004 samples, 0.37%)</title><rect x="334.3" y="853" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="337.32" y="863.5" ></text>
</g>
<g >
<title>kmem_cache_free (50,799,940 samples, 0.07%)</title><rect x="1100.3" y="1413" width="0.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1103.27" y="1423.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (292,860,804 samples, 0.43%)</title><rect x="277.7" y="1189" width="5.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="280.74" y="1199.5" ></text>
</g>
<g >
<title>free_unref_page_commit (50,550,723 samples, 0.07%)</title><rect x="989.9" y="1077" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="992.86" y="1087.5" ></text>
</g>
<g >
<title>update_rq_clock (90,655,445 samples, 0.13%)</title><rect x="452.4" y="1461" width="1.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="455.35" y="1471.5" ></text>
</g>
<g >
<title>__rcu_read_lock (7,888,169 samples, 0.01%)</title><rect x="88.8" y="1333" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="91.78" y="1343.5" ></text>
</g>
</g>
</svg>
