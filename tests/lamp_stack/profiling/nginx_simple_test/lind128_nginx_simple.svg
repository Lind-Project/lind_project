<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1670.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1653" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1653" > </text>
<g id="frames">
<g >
<title>update_process_times (52,449,901 samples, 0.05%)</title><rect x="476.0" y="1349" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="479.05" y="1359.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloadsHelper (843,977,642 samples, 0.73%)</title><rect x="81.9" y="1461" width="8.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="84.93" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,883,420 samples, 0.04%)</title><rect x="100.8" y="1029" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.80" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="677" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="687.5" ></text>
</g>
<g >
<title>v8::internal::compiler::GraphReducer::ReduceTop (13,436,462 samples, 0.01%)</title><rect x="104.8" y="1429" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="107.82" y="1439.5" ></text>
</g>
<g >
<title>__mod_memcg_state (67,524,451 samples, 0.06%)</title><rect x="277.6" y="1381" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="280.64" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1493" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="293" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="303.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (17,191,247 samples, 0.01%)</title><rect x="255.4" y="1061" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="258.39" y="1071.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1221" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="101.70" y="1231.5" ></text>
</g>
<g >
<title>anon_vma_clone (20,170,842 samples, 0.02%)</title><rect x="108.8" y="1285" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="111.81" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="917" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="885" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="895.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (10,629,741 samples, 0.01%)</title><rect x="116.4" y="1557" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="119.43" y="1567.5" ></text>
</g>
<g >
<title>vma_complete (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1029" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="101.70" y="1039.5" ></text>
</g>
<g >
<title>enqueue_task (88,354,199 samples, 0.08%)</title><rect x="475.0" y="1317" width="0.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="478.04" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1077" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="965" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (241,178,285 samples, 0.21%)</title><rect x="111.7" y="1413" width="2.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="114.67" y="1423.5" ></text>
</g>
<g >
<title>operator new (36,924,639 samples, 0.03%)</title><rect x="114.4" y="1381" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="117.44" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (18,208,306 samples, 0.02%)</title><rect x="186.8" y="1333" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="189.80" y="1343.5" ></text>
</g>
<g >
<title>uv__stream_io (17,576,533 samples, 0.02%)</title><rect x="132.7" y="1573" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="135.73" y="1583.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (22,920,725 samples, 0.02%)</title><rect x="189.7" y="1493" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="192.71" y="1503.5" ></text>
</g>
<g >
<title>__handle_mm_fault (25,061,264 samples, 0.02%)</title><rect x="282.4" y="1157" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="285.38" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="517" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="527.5" ></text>
</g>
<g >
<title>_ZN7dashmap24DashMap$LT$K$C$V$C$S$GT$10hash_usize17h5c261d95cd60d323E.llvm.4461577519387968875 (25,118,197 samples, 0.02%)</title><rect x="154.1" y="1445" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="157.12" y="1455.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloads (843,977,642 samples, 0.73%)</title><rect x="81.9" y="1493" width="8.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="84.93" y="1503.5" ></text>
</g>
<g >
<title>uv__work_submit (241,178,285 samples, 0.21%)</title><rect x="111.7" y="1477" width="2.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="114.67" y="1487.5" ></text>
</g>
<g >
<title>_copy_to_iter (181,025,637 samples, 0.16%)</title><rect x="79.0" y="1381" width="1.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="82.05" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1125" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="1135.5" ></text>
</g>
<g >
<title>node::InternalMakeCallback (16,193,809 samples, 0.01%)</title><rect x="132.6" y="1477" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="135.56" y="1487.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (26,864,536 samples, 0.02%)</title><rect x="210.3" y="1445" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="213.32" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (311,138,436 samples, 0.27%)</title><rect x="104.0" y="1573" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="107.00" y="1583.5" ></text>
</g>
<g >
<title>kmalloc_trace (14,316,603 samples, 0.01%)</title><rect x="200.4" y="1349" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="203.38" y="1359.5" ></text>
</g>
<g >
<title>malloc (20,037,680 samples, 0.02%)</title><rect x="100.5" y="165" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="103.53" y="175.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (269,599,561 samples, 0.23%)</title><rect x="138.0" y="1573" width="2.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="140.96" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15,846,771 samples, 0.01%)</title><rect x="205.4" y="1589" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="208.44" y="1599.5" ></text>
</g>
<g >
<title>remove_wait_queue (94,887,597 samples, 0.08%)</title><rect x="27.3" y="1413" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="30.34" y="1423.5" ></text>
</g>
<g >
<title>do_user_addr_fault (269,599,561 samples, 0.23%)</title><rect x="138.0" y="1541" width="2.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="140.96" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="325" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="335.5" ></text>
</g>
<g >
<title>[perf-686758.map] (32,650,514 samples, 0.03%)</title><rect x="116.8" y="1589" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="119.77" y="1599.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (19,998,200 samples, 0.02%)</title><rect x="201.9" y="1477" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="204.94" y="1487.5" ></text>
</g>
<g >
<title>skb_push (49,061,928 samples, 0.04%)</title><rect x="68.4" y="1365" width="0.5" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="71.45" y="1375.5" ></text>
</g>
<g >
<title>putname (14,627,746 samples, 0.01%)</title><rect x="153.9" y="1381" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="156.90" y="1391.5" ></text>
</g>
<g >
<title>ima_file_check (22,522,519 samples, 0.02%)</title><rect x="199.3" y="1445" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="202.33" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (29,652,379 samples, 0.03%)</title><rect x="106.6" y="1461" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="109.60" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (375,981,929 samples, 0.33%)</title><rect x="136.9" y="1589" width="3.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="139.87" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,617,636 samples, 0.02%)</title><rect x="100.8" y="933" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="943.5" ></text>
</g>
<g >
<title>ip_local_deliver (326,196,299 samples, 0.28%)</title><rect x="63.9" y="1061" width="3.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="66.93" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (47,185,789 samples, 0.04%)</title><rect x="100.8" y="1365" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.79" y="1375.5" ></text>
</g>
<g >
<title>__mmput (134,716,303 samples, 0.12%)</title><rect x="92.5" y="1477" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="95.47" y="1487.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (519,295,392 samples, 0.45%)</title><rect x="1173.2" y="1509" width="5.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1176.19" y="1519.5" ></text>
</g>
<g >
<title>sock_def_readable (374,924,771 samples, 0.32%)</title><rect x="261.5" y="981" width="3.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="264.53" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (225,632,151 samples, 0.20%)</title><rect x="101.3" y="1397" width="2.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="104.28" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1237" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1247.5" ></text>
</g>
<g >
<title>execute_command_internal (143,060,617 samples, 0.12%)</title><rect x="281.3" y="1493" width="1.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="284.33" y="1503.5" ></text>
</g>
<g >
<title>__skb_clone (31,217,844 samples, 0.03%)</title><rect x="270.2" y="1381" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="273.23" y="1391.5" ></text>
</g>
<g >
<title>_copy_to_iter (1,720,712,827 samples, 1.49%)</title><rect x="39.8" y="1381" width="17.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="42.76" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_clock_nanosleep (232,389,176 samples, 0.20%)</title><rect x="186.5" y="1413" width="2.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="189.45" y="1423.5" ></text>
</g>
<g >
<title>code_store::statement_t::step (843,977,642 samples, 0.73%)</title><rect x="81.9" y="1413" width="8.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="84.93" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1333" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1343.5" ></text>
</g>
<g >
<title>_compound_head (131,472,045 samples, 0.11%)</title><rect x="92.5" y="1381" width="1.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="95.50" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="789" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="799.5" ></text>
</g>
<g >
<title>rmqueue (260,604,618 samples, 0.23%)</title><rect x="138.0" y="1397" width="2.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="140.96" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="709" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="719.5" ></text>
</g>
<g >
<title>unmap_vmas (579,198,139 samples, 0.50%)</title><rect x="120.2" y="1365" width="5.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="123.17" y="1375.5" ></text>
</g>
<g >
<title>tcp_data_queue (505,701,249 samples, 0.44%)</title><rect x="260.3" y="1013" width="5.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="263.28" y="1023.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (230,369,127 samples, 0.20%)</title><rect x="192.0" y="1525" width="2.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="195.04" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="213" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="373" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="383.5" ></text>
</g>
<g >
<title>free_p4d_range (30,590,720 samples, 0.03%)</title><rect x="119.9" y="1333" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="122.85" y="1343.5" ></text>
</g>
<g >
<title>path_lookupat (85,982,033 samples, 0.07%)</title><rect x="97.6" y="1445" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="100.58" y="1455.5" ></text>
</g>
<g >
<title>getgrgid (17,921,471 samples, 0.02%)</title><rect x="99.1" y="1477" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="102.08" y="1487.5" ></text>
</g>
<g >
<title>pthread_cond_wait (10,261,698 samples, 0.01%)</title><rect x="104.1" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="107.07" y="1487.5" ></text>
</g>
<g >
<title>do_iter_write (32,748,831 samples, 0.03%)</title><rect x="135.2" y="1365" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="138.19" y="1375.5" ></text>
</g>
<g >
<title>apparmor_file_permission (10,500,780 samples, 0.01%)</title><rect x="182.9" y="1285" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="185.92" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="341" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (25,061,264 samples, 0.02%)</title><rect x="282.4" y="1237" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="285.38" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="405" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="415.5" ></text>
</g>
<g >
<title>path_lookupat (29,652,379 samples, 0.03%)</title><rect x="106.6" y="1365" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="109.60" y="1375.5" ></text>
</g>
<g >
<title>tcp_cwnd_validate (54,249,023 samples, 0.05%)</title><rect x="17.2" y="1397" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="20.16" y="1407.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (16,193,809 samples, 0.01%)</title><rect x="132.6" y="1397" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="135.56" y="1407.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_skmem (17,537,942 samples, 0.02%)</title><rect x="210.0" y="1413" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="213.05" y="1423.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.0 (17,796,819 samples, 0.02%)</title><rect x="273.1" y="1413" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="276.10" y="1423.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (55,642,871 samples, 0.05%)</title><rect x="469.7" y="1589" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="472.71" y="1599.5" ></text>
</g>
<g >
<title>lind_fxstat (19,522,639 samples, 0.02%)</title><rect x="148.4" y="1525" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="151.43" y="1535.5" ></text>
</g>
<g >
<title>skb_release_data (50,326,498 samples, 0.04%)</title><rect x="67.8" y="1125" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="70.83" y="1135.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (14,316,603 samples, 0.01%)</title><rect x="200.4" y="1333" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="203.38" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (52,436,347 samples, 0.05%)</title><rect x="99.1" y="1557" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.08" y="1567.5" ></text>
</g>
<g >
<title>fsnotify (11,119,433 samples, 0.01%)</title><rect x="200.0" y="1397" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="203.00" y="1407.5" ></text>
</g>
<g >
<title>NaClSysClose (136,027,672 samples, 0.12%)</title><rect x="146.7" y="1541" width="1.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="149.75" y="1551.5" ></text>
</g>
<g >
<title>ip_local_deliver (204,887,186 samples, 0.18%)</title><rect x="14.4" y="1093" width="2.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="17.43" y="1103.5" ></text>
</g>
<g >
<title>mod_timer (35,207,130 samples, 0.03%)</title><rect x="271.6" y="1365" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="274.64" y="1375.5" ></text>
</g>
<g >
<title>cfree (39,007,857 samples, 0.03%)</title><rect x="205.0" y="1589" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="207.96" y="1599.5" ></text>
</g>
<g >
<title>menu_select (61,298,970 samples, 0.05%)</title><rect x="1172.5" y="1493" width="0.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1175.55" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,261,698 samples, 0.01%)</title><rect x="104.1" y="1461" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="107.07" y="1471.5" ></text>
</g>
<g >
<title>NaClSysRecvDecoder (40,663,825 samples, 0.04%)</title><rect x="184.9" y="1557" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="187.90" y="1567.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (13,487,560 samples, 0.01%)</title><rect x="155.3" y="1525" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="158.29" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_write (54,969,638 samples, 0.05%)</title><rect x="471.7" y="1557" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="474.71" y="1567.5" ></text>
</g>
<g >
<title>[bash] (13,163,886 samples, 0.01%)</title><rect x="282.0" y="1173" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.98" y="1183.5" ></text>
</g>
<g >
<title>pick_next_task_fair (317,500,939 samples, 0.27%)</title><rect x="1178.6" y="1477" width="3.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1181.57" y="1487.5" ></text>
</g>
<g >
<title>v8::internal::ApiNatives::InstantiateObject (13,501,981 samples, 0.01%)</title><rect x="107.4" y="1509" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="110.38" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,877,951 samples, 0.01%)</title><rect x="99.1" y="1381" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.08" y="1391.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (17,426,410 samples, 0.02%)</title><rect x="275.9" y="1413" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="278.89" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (67,703,878 samples, 0.06%)</title><rect x="90.6" y="1461" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="93.62" y="1471.5" ></text>
</g>
<g >
<title>folio_mark_accessed (34,854,356 samples, 0.03%)</title><rect x="182.4" y="1253" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="185.39" y="1263.5" ></text>
</g>
<g >
<title>non-virtual thunk to v8::internal::CancelableTask::Run (91,474,817 samples, 0.08%)</title><rect x="104.3" y="1541" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="107.27" y="1551.5" ></text>
</g>
<g >
<title>_raw_spin_lock (32,227,858 samples, 0.03%)</title><rect x="254.9" y="1061" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="257.91" y="1071.5" ></text>
</g>
<g >
<title>pick_next_task_fair (18,092,909 samples, 0.02%)</title><rect x="969.4" y="1477" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="972.40" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="533" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="543.5" ></text>
</g>
<g >
<title>filemap_read (1,678,018,609 samples, 1.45%)</title><rect x="165.7" y="1269" width="17.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="168.70" y="1279.5" ></text>
</g>
<g >
<title>update_process_times (47,080,038 samples, 0.04%)</title><rect x="470.3" y="1477" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="473.32" y="1487.5" ></text>
</g>
<g >
<title>[ls] (51,293,141 samples, 0.04%)</title><rect x="97.1" y="1557" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="100.06" y="1567.5" ></text>
</g>
<g >
<title>[perf-1062684.map] (883,043,843 samples, 0.76%)</title><rect x="107.5" y="1589" width="9.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="110.53" y="1599.5" ></text>
</g>
<g >
<title>update_load_avg (10,680,863 samples, 0.01%)</title><rect x="1052.0" y="1333" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1055.03" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1221" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1231.5" ></text>
</g>
<g >
<title>lookup_fast (16,999,976 samples, 0.01%)</title><rect x="208.2" y="1429" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="211.24" y="1439.5" ></text>
</g>
<g >
<title>update_load_avg (14,294,739 samples, 0.01%)</title><rect x="475.5" y="1269" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="478.47" y="1279.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (54,138,176 samples, 0.05%)</title><rect x="1181.3" y="1429" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1184.26" y="1439.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,736,014,772 samples, 1.50%)</title><rect x="165.2" y="1317" width="17.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="168.19" y="1327.5" ></text>
</g>
<g >
<title>node::LoadSnapshotDataAndRun (20,795,678 samples, 0.02%)</title><rect x="117.3" y="1525" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="120.28" y="1535.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (50,899,159 samples, 0.04%)</title><rect x="17.8" y="1413" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="20.78" y="1423.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,669,208 samples, 0.01%)</title><rect x="1045.3" y="1557" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1048.27" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.constprop.0 (26,333,356 samples, 0.02%)</title><rect x="267.0" y="1109" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="269.99" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,715,534 samples, 0.02%)</title><rect x="100.8" y="869" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1445" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="261" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="271.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (974,481,733 samples, 0.84%)</title><rect x="59.0" y="1429" width="9.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="62.00" y="1439.5" ></text>
</g>
<g >
<title>__switch_to_asm (10,634,754 samples, 0.01%)</title><rect x="469.6" y="1589" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="472.60" y="1599.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1589" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="103.53" y="1599.5" ></text>
</g>
<g >
<title>record__pushfn (34,390,842 samples, 0.03%)</title><rect x="135.2" y="1541" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="138.18" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,481,270 samples, 0.04%)</title><rect x="287.1" y="1445" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="290.12" y="1455.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (38,065,885 samples, 0.03%)</title><rect x="98.7" y="997" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="101.70" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1045" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1055.5" ></text>
</g>
<g >
<title>do_syscall_64 (198,399,937 samples, 0.17%)</title><rect x="208.9" y="1557" width="2.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="211.92" y="1567.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (173,153,217 samples, 0.15%)</title><rect x="277.5" y="1413" width="1.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="280.47" y="1423.5" ></text>
</g>
<g >
<title>tcp_rcv_established (204,887,186 samples, 0.18%)</title><rect x="14.4" y="1013" width="2.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="17.43" y="1023.5" ></text>
</g>
<g >
<title>syscall (29,652,379 samples, 0.03%)</title><rect x="106.6" y="1477" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="109.60" y="1487.5" ></text>
</g>
<g >
<title>dispatcher (421,783,616 samples, 0.36%)</title><rect x="185.4" y="1509" width="4.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="188.41" y="1519.5" ></text>
</g>
<g >
<title>[anon] (18,622,158 samples, 0.02%)</title><rect x="103.8" y="1589" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="106.81" y="1599.5" ></text>
</g>
<g >
<title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (16,302,225 samples, 0.01%)</title><rect x="154.6" y="1461" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="157.56" y="1471.5" ></text>
</g>
<g >
<title>skb_release_head_state (49,108,953 samples, 0.04%)</title><rect x="65.7" y="917" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="68.72" y="927.5" ></text>
</g>
<g >
<title>inet_sendmsg (455,020,877 samples, 0.39%)</title><rect x="13.7" y="1493" width="4.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="16.66" y="1503.5" ></text>
</g>
<g >
<title>malloc@plt (36,924,639 samples, 0.03%)</title><rect x="114.4" y="1365" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="117.44" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,731,485 samples, 0.01%)</title><rect x="100.8" y="629" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="639.5" ></text>
</g>
<g >
<title>core::ffi::c_str::CStr::to_str (17,968,809 samples, 0.02%)</title><rect x="148.9" y="1477" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="151.89" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="629" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="639.5" ></text>
</g>
<g >
<title>__fdget_pos (78,808,516 samples, 0.07%)</title><rect x="159.3" y="1381" width="0.8" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="162.27" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="933" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="943.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (752,569,224 samples, 0.65%)</title><rect x="258.3" y="1045" width="7.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="261.32" y="1055.5" ></text>
</g>
<g >
<title>do_dentry_open (28,440,159 samples, 0.02%)</title><rect x="200.5" y="1365" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="203.52" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="581" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="591.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (198,668,209 samples, 0.17%)</title><rect x="474.8" y="1429" width="2.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="477.84" y="1439.5" ></text>
</g>
<g >
<title>generic_file_read_iter (282,323,019 samples, 0.24%)</title><rect x="78.5" y="1429" width="2.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="81.52" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="341" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="351.5" ></text>
</g>
<g >
<title>code_store::results_statement_t&lt;code_store::code_items_set_t, code_store::schema::code_items::read_statement_t, code_store::code_items_set&gt;::move_next (843,977,642 samples, 0.73%)</title><rect x="81.9" y="1429" width="8.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="84.93" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,552,584 samples, 0.02%)</title><rect x="107.0" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="109.99" y="1519.5" ></text>
</g>
<g >
<title>uv__fs_work (103,495,102 samples, 0.09%)</title><rect x="105.8" y="1541" width="1.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="108.85" y="1551.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::normpath (16,302,225 samples, 0.01%)</title><rect x="154.6" y="1477" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="157.56" y="1487.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (13,588,114 samples, 0.01%)</title><rect x="189.0" y="1381" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="192.04" y="1391.5" ></text>
</g>
<g >
<title>statx (27,352,458 samples, 0.02%)</title><rect x="100.2" y="1589" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="103.25" y="1599.5" ></text>
</g>
<g >
<title>do_group_exit (134,716,303 samples, 0.12%)</title><rect x="92.5" y="1541" width="1.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="95.47" y="1551.5" ></text>
</g>
<g >
<title>seq_read_iter (23,336,403 samples, 0.02%)</title><rect x="106.3" y="1381" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="109.29" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1205" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="101.70" y="1215.5" ></text>
</g>
<g >
<title>kmalloc_reserve (49,051,721 samples, 0.04%)</title><rect x="59.5" y="1349" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="62.50" y="1359.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (47,080,038 samples, 0.04%)</title><rect x="470.3" y="1541" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="473.32" y="1551.5" ></text>
</g>
<g >
<title>unmap_single_vma (131,472,045 samples, 0.11%)</title><rect x="92.5" y="1429" width="1.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="95.50" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,252,342 samples, 0.01%)</title><rect x="100.8" y="661" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.82" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1093" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="709" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="719.5" ></text>
</g>
<g >
<title>parse_and_execute (32,599,331 samples, 0.03%)</title><rect x="282.0" y="1221" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="284.98" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="501" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="511.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (273,135,951 samples, 0.24%)</title><rect x="64.5" y="1013" width="2.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="67.47" y="1023.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (19,823,936 samples, 0.02%)</title><rect x="201.7" y="1493" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="204.74" y="1503.5" ></text>
</g>
<g >
<title>[bash] (12,359,363 samples, 0.01%)</title><rect x="282.0" y="1125" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.98" y="1135.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (25,948,942 samples, 0.02%)</title><rect x="104.0" y="1557" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="107.00" y="1567.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (17,755,633 samples, 0.02%)</title><rect x="280.3" y="1541" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="283.25" y="1551.5" ></text>
</g>
<g >
<title>[ls] (60,915,681 samples, 0.05%)</title><rect x="98.5" y="1557" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="101.46" y="1567.5" ></text>
</g>
<g >
<title>path_lookupat (27,352,458 samples, 0.02%)</title><rect x="100.2" y="1477" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="103.25" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb (259,789,637 samples, 0.22%)</title><rect x="14.4" y="1141" width="2.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="17.43" y="1151.5" ></text>
</g>
<g >
<title>backing_file_open (83,116,953 samples, 0.07%)</title><rect x="200.1" y="1381" width="0.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="203.11" y="1391.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (9,943,537 samples, 0.01%)</title><rect x="969.3" y="1493" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="972.28" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (199,570,025 samples, 0.17%)</title><rect x="10.0" y="1573" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.02" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,731,485 samples, 0.01%)</title><rect x="100.8" y="613" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="623.5" ></text>
</g>
<g >
<title>execute_command_internal (32,599,331 samples, 0.03%)</title><rect x="282.0" y="1205" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="284.98" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="197" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="207.5" ></text>
</g>
<g >
<title>ovl_real_fdget (56,940,446 samples, 0.05%)</title><rect x="164.4" y="1349" width="0.6" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="167.43" y="1359.5" ></text>
</g>
<g >
<title>[[vdso]] (14,402,442 samples, 0.01%)</title><rect x="146.6" y="1493" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="149.60" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (22,033,599 samples, 0.02%)</title><rect x="151.9" y="1429" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="154.93" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (375,557,085 samples, 0.32%)</title><rect x="77.6" y="1573" width="3.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="80.57" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16,129,806 samples, 0.01%)</title><rect x="100.8" y="741" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (250,721,547 samples, 0.22%)</title><rect x="1045.4" y="1589" width="2.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1048.39" y="1599.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (17,288,448 samples, 0.01%)</title><rect x="160.9" y="1397" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="163.90" y="1407.5" ></text>
</g>
<g >
<title>enqueue_task_fair (191,768,411 samples, 0.17%)</title><rect x="964.6" y="1445" width="1.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="967.59" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (85,982,033 samples, 0.07%)</title><rect x="97.6" y="1525" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="100.58" y="1535.5" ></text>
</g>
<g >
<title>free_unref_page_prepare (23,779,952 samples, 0.02%)</title><rect x="218.1" y="1285" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="221.08" y="1295.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1541" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="102.78" y="1551.5" ></text>
</g>
<g >
<title>_compound_head (336,819,062 samples, 0.29%)</title><rect x="120.4" y="1301" width="3.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="123.39" y="1311.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (54,950,041 samples, 0.05%)</title><rect x="282.9" y="1349" width="0.6" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="285.93" y="1359.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (13,220,156 samples, 0.01%)</title><rect x="265.9" y="1013" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="268.87" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="645" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::_$u7b$$u7b$closure$u7d$$u7d$::h1d4506ed861ed344 (17,968,809 samples, 0.02%)</title><rect x="148.9" y="1493" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="151.89" y="1503.5" ></text>
</g>
<g >
<title>process_backlog (259,789,637 samples, 0.22%)</title><rect x="14.4" y="1157" width="2.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="17.43" y="1167.5" ></text>
</g>
<g >
<title>NaClSysClockGetTimeDecoder (47,575,729 samples, 0.04%)</title><rect x="146.3" y="1557" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="149.26" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (212,283,817 samples, 0.18%)</title><rect x="132.9" y="1557" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="135.93" y="1567.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloads (843,977,642 samples, 0.73%)</title><rect x="81.9" y="1477" width="8.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="84.93" y="1487.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (572,136,074 samples, 0.50%)</title><rect x="120.2" y="1317" width="5.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="123.24" y="1327.5" ></text>
</g>
<g >
<title>__nss_next2 (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1493" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="101.70" y="1503.5" ></text>
</g>
<g >
<title>page_remove_rmap (67,889,242 samples, 0.06%)</title><rect x="125.3" y="1285" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="128.26" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="869" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="879.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (12,054,333 samples, 0.01%)</title><rect x="148.7" y="1493" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="151.68" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="383.5" ></text>
</g>
<g >
<title>lock_timer_base (34,781,755 samples, 0.03%)</title><rect x="272.7" y="1349" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="275.75" y="1359.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (14,546,432 samples, 0.01%)</title><rect x="120.2" y="1301" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="123.24" y="1311.5" ></text>
</g>
<g >
<title>start (843,977,642 samples, 0.73%)</title><rect x="81.9" y="1589" width="8.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="84.93" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1573" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="1583.5" ></text>
</g>
<g >
<title>__folio_alloc (260,604,618 samples, 0.23%)</title><rect x="138.0" y="1445" width="2.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="140.96" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,559,194 samples, 0.04%)</title><rect x="100.8" y="1157" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1167.5" ></text>
</g>
<g >
<title>ip_queue_xmit (775,289,954 samples, 0.67%)</title><rect x="60.5" y="1349" width="7.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="63.52" y="1359.5" ></text>
</g>
<g >
<title>___slab_alloc (15,197,192 samples, 0.01%)</title><rect x="109.0" y="1269" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="112.04" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="821" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="341" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (59,097,908 samples, 0.05%)</title><rect x="282.9" y="1589" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="285.92" y="1599.5" ></text>
</g>
<g >
<title>v8::internal::TranslatedState::TranslatedState (17,426,988 samples, 0.02%)</title><rect x="115.0" y="1429" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="118.02" y="1439.5" ></text>
</g>
<g >
<title>__select (214,461,882 samples, 0.19%)</title><rect x="195.7" y="1573" width="2.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="198.71" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="901" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="911.5" ></text>
</g>
<g >
<title>napi_consume_skb (17,215,424 samples, 0.01%)</title><rect x="252.9" y="1205" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="255.90" y="1215.5" ></text>
</g>
<g >
<title>read_tsc (14,912,677 samples, 0.01%)</title><rect x="219.2" y="1397" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="222.20" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (27,352,458 samples, 0.02%)</title><rect x="100.2" y="1557" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="103.25" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1141" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1151.5" ></text>
</g>
<g >
<title>__fget_light (52,270,291 samples, 0.05%)</title><rect x="69.6" y="1461" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="72.58" y="1471.5" ></text>
</g>
<g >
<title>NaClLog (28,692,658 samples, 0.02%)</title><rect x="155.0" y="1525" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="158.00" y="1535.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (13,588,114 samples, 0.01%)</title><rect x="189.0" y="1365" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="192.04" y="1375.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (49,362,004 samples, 0.04%)</title><rect x="260.9" y="997" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="263.93" y="1007.5" ></text>
</g>
<g >
<title>v8::internal::OptimizingCompileDispatcher::CompileNext (90,719,247 samples, 0.08%)</title><rect x="104.3" y="1525" width="0.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="107.28" y="1535.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (283,084,697 samples, 0.24%)</title><rect x="14.2" y="1253" width="2.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="17.23" y="1263.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (53,228,139 samples, 0.05%)</title><rect x="152.5" y="1317" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="155.47" y="1327.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (14,523,441 samples, 0.01%)</title><rect x="207.0" y="1413" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="210.04" y="1423.5" ></text>
</g>
<g >
<title>do_wp_page (35,070,896 samples, 0.03%)</title><rect x="281.4" y="1157" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="284.44" y="1167.5" ></text>
</g>
<g >
<title>mutex_lock (22,544,633 samples, 0.02%)</title><rect x="159.8" y="1365" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="162.84" y="1375.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::CreateDataProperty (25,021,973 samples, 0.02%)</title><rect x="114.2" y="1541" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="117.18" y="1551.5" ></text>
</g>
<g >
<title>[bash] (45,470,974 samples, 0.04%)</title><rect x="281.9" y="1253" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.86" y="1263.5" ></text>
</g>
<g >
<title>command_substitute (45,470,974 samples, 0.04%)</title><rect x="281.9" y="1237" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="284.86" y="1247.5" ></text>
</g>
<g >
<title>load_elf_binary (609,788,859 samples, 0.53%)</title><rect x="119.9" y="1461" width="6.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="122.85" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,532,166 samples, 0.17%)</title><rect x="284.2" y="1589" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="287.19" y="1599.5" ></text>
</g>
<g >
<title>sock_def_readable (42,140,542 samples, 0.04%)</title><rect x="265.4" y="997" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="268.44" y="1007.5" ></text>
</g>
<g >
<title>sched_clock_cpu (49,985,837 samples, 0.04%)</title><rect x="972.5" y="1493" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="975.48" y="1503.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (282,323,019 samples, 0.24%)</title><rect x="78.5" y="1461" width="2.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="81.52" y="1471.5" ></text>
</g>
<g >
<title>os_xsave (35,514,218 samples, 0.03%)</title><rect x="189.2" y="1445" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="192.18" y="1455.5" ></text>
</g>
<g >
<title>__fdget_pos (43,637,671 samples, 0.04%)</title><rect x="471.7" y="1525" width="0.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="474.71" y="1535.5" ></text>
</g>
<g >
<title>kmem_cache_free (41,272,097 samples, 0.04%)</title><rect x="215.4" y="1365" width="0.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="218.43" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (49,946,330 samples, 0.04%)</title><rect x="77.1" y="1573" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="80.06" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (20,499,978 samples, 0.02%)</title><rect x="100.5" y="197" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="103.53" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="325" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="335.5" ></text>
</g>
<g >
<title>update_load_avg (11,669,208 samples, 0.01%)</title><rect x="1045.3" y="1429" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1048.27" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="565" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="575.5" ></text>
</g>
<g >
<title>exec_binprm (609,788,859 samples, 0.53%)</title><rect x="119.9" y="1493" width="6.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="122.85" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (9,877,951 samples, 0.01%)</title><rect x="99.1" y="1317" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="102.08" y="1327.5" ></text>
</g>
<g >
<title>path_openat (317,973,253 samples, 0.28%)</title><rect x="198.5" y="1477" width="3.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="201.49" y="1487.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,669,208 samples, 0.01%)</title><rect x="1045.3" y="1589" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1048.27" y="1599.5" ></text>
</g>
<g >
<title>override_creds (14,801,497 samples, 0.01%)</title><rect x="160.4" y="1349" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="163.40" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1397" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1407.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (102,331,382 samples, 0.09%)</title><rect x="962.4" y="1461" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="965.40" y="1471.5" ></text>
</g>
<g >
<title>page_counter_try_charge (21,921,101 samples, 0.02%)</title><rect x="279.0" y="1381" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="282.01" y="1391.5" ></text>
</g>
<g >
<title>copyout (1,672,258,251 samples, 1.45%)</title><rect x="40.3" y="1365" width="17.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="43.26" y="1375.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::fstat_syscall (19,522,639 samples, 0.02%)</title><rect x="148.4" y="1493" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="151.43" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,877,951 samples, 0.01%)</title><rect x="99.1" y="1333" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.08" y="1343.5" ></text>
</g>
<g >
<title>exit_mmap (59,097,908 samples, 0.05%)</title><rect x="282.9" y="1381" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="285.92" y="1391.5" ></text>
</g>
<g >
<title>v8::internal::OptimizedFrame::GetDeoptimizationData (20,297,413 samples, 0.02%)</title><rect x="114.8" y="1429" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="117.82" y="1439.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (74,031,978 samples, 0.06%)</title><rect x="213.4" y="1445" width="0.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="216.38" y="1455.5" ></text>
</g>
<g >
<title>tcp_recvmsg (4,673,483,383 samples, 4.04%)</title><rect x="21.8" y="1461" width="47.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="24.78" y="1471.5" >tcp_..</text>
</g>
<g >
<title>filename_lookup (85,982,033 samples, 0.07%)</title><rect x="97.6" y="1461" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="100.58" y="1471.5" ></text>
</g>
<g >
<title>skb_network_protocol (17,385,784 samples, 0.02%)</title><rect x="269.9" y="1221" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="272.87" y="1231.5" ></text>
</g>
<g >
<title>node::ThreadPoolWork::ScheduleWork (241,178,285 samples, 0.21%)</title><rect x="111.7" y="1509" width="2.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="114.67" y="1519.5" ></text>
</g>
<g >
<title>mod_timer (35,648,593 samples, 0.03%)</title><rect x="218.8" y="1365" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="221.84" y="1375.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (59,097,908 samples, 0.05%)</title><rect x="282.9" y="1541" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="285.92" y="1551.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (55,698,782 samples, 0.05%)</title><rect x="1014.3" y="1461" width="0.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1017.26" y="1471.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,669,208 samples, 0.01%)</title><rect x="1045.3" y="1573" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1048.27" y="1583.5" ></text>
</g>
<g >
<title>readlink (240,943,272 samples, 0.21%)</title><rect x="206.3" y="1589" width="2.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="209.28" y="1599.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (443,269,882 samples, 0.38%)</title><rect x="963.7" y="1525" width="4.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="966.71" y="1535.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (13,487,560 samples, 0.01%)</title><rect x="155.3" y="1509" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="158.29" y="1519.5" ></text>
</g>
<g >
<title>copy_mc_enhanced_fast_string (25,061,264 samples, 0.02%)</title><rect x="282.4" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="285.38" y="1087.5" ></text>
</g>
<g >
<title>v8::internal::TranslatedState::TranslatedState (36,924,639 samples, 0.03%)</title><rect x="114.4" y="1445" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="117.44" y="1455.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (38,196,028 samples, 0.03%)</title><rect x="469.1" y="1589" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="472.13" y="1599.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (32,748,831 samples, 0.03%)</title><rect x="135.2" y="1317" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="138.19" y="1327.5" ></text>
</g>
<g >
<title>task_work_run (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1413" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="102.78" y="1423.5" ></text>
</g>
<g >
<title>operator new (12,554,829 samples, 0.01%)</title><rect x="129.0" y="53" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="131.98" y="63.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::operator= (16,280,958 samples, 0.01%)</title><rect x="101.1" y="997" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="104.09" y="1007.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (1,000,171,446 samples, 0.87%)</title><rect x="239.9" y="1461" width="10.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="242.93" y="1471.5" ></text>
</g>
<g >
<title>vfs_getattr (21,824,710 samples, 0.02%)</title><rect x="153.4" y="1317" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="156.41" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (69,813,166 samples, 0.06%)</title><rect x="90.6" y="1493" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="93.62" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="325" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="335.5" ></text>
</g>
<g >
<title>ovl_read_iter (1,889,703,699 samples, 1.64%)</title><rect x="164.1" y="1365" width="19.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="167.07" y="1375.5" ></text>
</g>
<g >
<title>v8::internal::Object::GetProperty (74,649,040 samples, 0.06%)</title><rect x="114.4" y="1509" width="0.8" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="117.44" y="1519.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (50,980,941 samples, 0.04%)</title><rect x="482.8" y="1445" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="485.81" y="1455.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (47,080,038 samples, 0.04%)</title><rect x="470.3" y="1525" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="473.32" y="1535.5" ></text>
</g>
<g >
<title>walk_component (29,652,379 samples, 0.03%)</title><rect x="106.6" y="1349" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="109.60" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="389" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="399.5" ></text>
</g>
<g >
<title>NaClSysRecv (30,900,593 samples, 0.03%)</title><rect x="185.0" y="1541" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="188.00" y="1551.5" ></text>
</g>
<g >
<title>node::Start (20,795,678 samples, 0.02%)</title><rect x="117.3" y="1541" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="120.28" y="1551.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (9,877,951 samples, 0.01%)</title><rect x="99.1" y="1365" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="102.08" y="1375.5" ></text>
</g>
<g >
<title>__do_softirq (265,284,052 samples, 0.23%)</title><rect x="14.4" y="1205" width="2.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="17.38" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1301" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (187,224,505 samples, 0.16%)</title><rect x="129.1" y="85" width="1.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="132.14" y="95.5" ></text>
</g>
<g >
<title>copy_present_pte (64,628,420 samples, 0.06%)</title><rect x="109.9" y="1253" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="112.93" y="1263.5" ></text>
</g>
<g >
<title>read (2,301,995,983 samples, 1.99%)</title><rect x="161.3" y="1461" width="23.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="164.31" y="1471.5" >r..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="357" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="367.5" ></text>
</g>
<g >
<title>schedule_idle (28,787,160 samples, 0.02%)</title><rect x="1014.0" y="1461" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1016.97" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="117" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="127.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (21,552,134 samples, 0.02%)</title><rect x="257.9" y="1029" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="260.95" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="901" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="911.5" ></text>
</g>
<g >
<title>v8::internal::KeyAccumulator::CollectKeys (10,629,741 samples, 0.01%)</title><rect x="116.4" y="1509" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="119.43" y="1519.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::InstantiateObject (13,501,981 samples, 0.01%)</title><rect x="107.4" y="1493" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="110.38" y="1503.5" ></text>
</g>
<g >
<title>security_file_open (46,784,990 samples, 0.04%)</title><rect x="201.2" y="1413" width="0.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="204.18" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,573,582 samples, 0.01%)</title><rect x="283.8" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="286.82" y="1583.5" ></text>
</g>
<g >
<title>lind_pread (2,878,228,635 samples, 2.49%)</title><rect x="155.4" y="1525" width="29.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="158.43" y="1535.5" >li..</text>
</g>
<g >
<title>do_syscall_64 (179,688,773 samples, 0.16%)</title><rect x="196.1" y="1541" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="199.06" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="789" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="799.5" ></text>
</g>
<g >
<title>handle_mm_fault (50,063,258 samples, 0.04%)</title><rect x="80.4" y="1301" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="83.38" y="1311.5" ></text>
</g>
<g >
<title>__wp_page_copy_user (25,061,264 samples, 0.02%)</title><rect x="282.4" y="1093" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="285.38" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,505,545 samples, 0.01%)</title><rect x="126.1" y="1557" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1567.5" ></text>
</g>
<g >
<title>shell_glob_filename (10,213,695 samples, 0.01%)</title><rect x="281.2" y="1445" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="284.21" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="565" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="997" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1477" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="1487.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1141" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="101.70" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="511.5" ></text>
</g>
<g >
<title>node::SpinEventLoop (20,795,678 samples, 0.02%)</title><rect x="117.3" y="1493" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="120.28" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (17,759,552 samples, 0.02%)</title><rect x="219.4" y="1461" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="222.44" y="1471.5" ></text>
</g>
<g >
<title>enqueue_entity (44,698,178 samples, 0.04%)</title><rect x="475.2" y="1285" width="0.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="478.16" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1221" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="1231.5" ></text>
</g>
<g >
<title>mas_update_gap.part.0 (9,824,008 samples, 0.01%)</title><rect x="110.7" y="1237" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="113.65" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (21,715,534 samples, 0.02%)</title><rect x="100.8" y="853" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.82" y="863.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (26,474,796 samples, 0.02%)</title><rect x="203.2" y="1477" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="206.22" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (95,494,859 samples, 0.08%)</title><rect x="95.3" y="1589" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="98.30" y="1599.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (732,919,222 samples, 0.63%)</title><rect x="1182.5" y="1413" width="7.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1185.49" y="1423.5" ></text>
</g>
<g >
<title>[ls] (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1541" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="101.70" y="1551.5" ></text>
</g>
<g >
<title>vfs_statx (128,112,012 samples, 0.11%)</title><rect x="152.3" y="1365" width="1.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="155.32" y="1375.5" ></text>
</g>
<g >
<title>getgrgid_r (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1509" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.70" y="1519.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (17,565,573 samples, 0.02%)</title><rect x="973.0" y="1525" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="976.00" y="1535.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (105,330,208 samples, 0.09%)</title><rect x="38.7" y="1365" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="41.69" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="965" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1141" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1151.5" ></text>
</g>
<g >
<title>ovl_open (104,483,613 samples, 0.09%)</title><rect x="200.1" y="1413" width="1.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="203.11" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="725" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (609,788,859 samples, 0.53%)</title><rect x="119.9" y="1589" width="6.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="122.85" y="1599.5" ></text>
</g>
<g >
<title>_dl_catch_exception (9,877,951 samples, 0.01%)</title><rect x="99.1" y="1349" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="102.08" y="1359.5" ></text>
</g>
<g >
<title>import_single_range (15,512,112 samples, 0.01%)</title><rect x="280.0" y="1525" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="283.01" y="1535.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (10,231,026 samples, 0.01%)</title><rect x="188.2" y="1317" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="191.22" y="1327.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1285" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="101.70" y="1295.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (26,059,658 samples, 0.02%)</title><rect x="190.3" y="1477" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="193.27" y="1487.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (95,313,770 samples, 0.08%)</title><rect x="958.6" y="1429" width="1.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="961.64" y="1439.5" ></text>
</g>
<g >
<title>prepend (17,292,160 samples, 0.01%)</title><rect x="198.1" y="1477" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="201.08" y="1487.5" ></text>
</g>
<g >
<title>NaClSysOpen (591,766,019 samples, 0.51%)</title><rect x="148.7" y="1541" width="6.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="151.68" y="1551.5" ></text>
</g>
<g >
<title>next_uptodate_page (28,619,916 samples, 0.02%)</title><rect x="91.5" y="1381" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="94.51" y="1391.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (11,445,493 samples, 0.01%)</title><rect x="135.4" y="1269" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="138.41" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (78,278,513 samples, 0.07%)</title><rect x="150.9" y="1429" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="153.87" y="1439.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (28,221,335 samples, 0.02%)</title><rect x="472.4" y="1589" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="475.39" y="1599.5" ></text>
</g>
<g >
<title>rmqueue_bulk (260,604,618 samples, 0.23%)</title><rect x="138.0" y="1365" width="2.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="140.96" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (69,813,166 samples, 0.06%)</title><rect x="90.6" y="1509" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="93.62" y="1519.5" ></text>
</g>
<g >
<title>handle_mm_fault (269,599,561 samples, 0.23%)</title><rect x="138.0" y="1525" width="2.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="140.96" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (272,817,940 samples, 0.24%)</title><rect x="100.8" y="1461" width="2.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1471.5" ></text>
</g>
<g >
<title>net_rx_action (13,155,736 samples, 0.01%)</title><rect x="474.7" y="1381" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="477.71" y="1391.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (14,845,004 samples, 0.01%)</title><rect x="210.6" y="1509" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="213.59" y="1519.5" ></text>
</g>
<g >
<title>Builtins_KeyedLoadIC_Megamorphic (32,242,016 samples, 0.03%)</title><rect x="116.0" y="1573" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="118.99" y="1583.5" ></text>
</g>
<g >
<title>kthread (46,311,828 samples, 0.04%)</title><rect x="1048.0" y="1557" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1051.05" y="1567.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (15,615,186 samples, 0.01%)</title><rect x="218.5" y="1381" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="221.50" y="1391.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (538,356,415 samples, 0.47%)</title><rect x="108.7" y="1557" width="5.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="111.67" y="1567.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (39,350,381 samples, 0.03%)</title><rect x="1048.1" y="1541" width="0.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1051.06" y="1551.5" ></text>
</g>
<g >
<title>handle_pte_fault (28,619,916 samples, 0.02%)</title><rect x="91.5" y="1445" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="94.51" y="1455.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (18,208,306 samples, 0.02%)</title><rect x="186.8" y="1317" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="189.80" y="1327.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (42,140,542 samples, 0.04%)</title><rect x="265.4" y="981" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="268.44" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1109" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1119.5" ></text>
</g>
<g >
<title>set_next_entity (313,688,220 samples, 0.27%)</title><rect x="1178.6" y="1461" width="3.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1181.61" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,715,534 samples, 0.02%)</title><rect x="100.8" y="821" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="831.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (326,196,299 samples, 0.28%)</title><rect x="63.9" y="1029" width="3.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="66.93" y="1039.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (53,661,721 samples, 0.05%)</title><rect x="17.8" y="1429" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="20.75" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1445" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="437" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="181" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (69,813,166 samples, 0.06%)</title><rect x="90.6" y="1477" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="93.62" y="1487.5" ></text>
</g>
<g >
<title>inode_permission (16,006,371 samples, 0.01%)</title><rect x="199.6" y="1429" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="202.56" y="1439.5" ></text>
</g>
<g >
<title>__netif_receive_skb (329,785,678 samples, 0.29%)</title><rect x="63.9" y="1109" width="3.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="66.89" y="1119.5" ></text>
</g>
<g >
<title>rustposix::interface::file::openfile (363,827,957 samples, 0.31%)</title><rect x="150.3" y="1477" width="3.7" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="153.33" y="1487.5" ></text>
</g>
<g >
<title>sendto (6,811,966,135 samples, 5.89%)</title><rect x="211.0" y="1589" width="69.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="214.03" y="1599.5" >sendto</text>
</g>
<g >
<title>mas_wr_node_store (9,824,008 samples, 0.01%)</title><rect x="110.7" y="1253" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="113.65" y="1263.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (52,103,524 samples, 0.05%)</title><rect x="1172.6" y="1461" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1175.64" y="1471.5" ></text>
</g>
<g >
<title>native_sched_clock (49,985,837 samples, 0.04%)</title><rect x="972.5" y="1445" width="0.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="975.48" y="1455.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (4,515,465,691 samples, 3.91%)</title><rect x="23.4" y="1445" width="46.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="26.40" y="1455.5" >tcp_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="421" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="431.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (74,649,040 samples, 0.06%)</title><rect x="114.4" y="1525" width="0.8" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="117.44" y="1535.5" ></text>
</g>
<g >
<title>seq_read (23,336,403 samples, 0.02%)</title><rect x="106.3" y="1397" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="109.29" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1109" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="373" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="805" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="815.5" ></text>
</g>
<g >
<title>schedule_timeout (51,008,723 samples, 0.04%)</title><rect x="28.3" y="1413" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="31.31" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (284,144,481 samples, 0.25%)</title><rect x="108.7" y="1429" width="2.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="111.68" y="1439.5" ></text>
</g>
<g >
<title>__calc_delta (52,683,067 samples, 0.05%)</title><rect x="33.9" y="1285" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="36.94" y="1295.5" ></text>
</g>
<g >
<title>page_counter_uncharge (48,287,372 samples, 0.04%)</title><rect x="58.5" y="1333" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="61.50" y="1343.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (35,648,593 samples, 0.03%)</title><rect x="218.8" y="1397" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="221.84" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (34,781,755 samples, 0.03%)</title><rect x="272.7" y="1333" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="275.75" y="1343.5" ></text>
</g>
<g >
<title>ret_from_fork (28,221,335 samples, 0.02%)</title><rect x="472.4" y="1573" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="475.39" y="1583.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (208,476,436 samples, 0.18%)</title><rect x="180.2" y="1237" width="2.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="183.17" y="1247.5" ></text>
</g>
<g >
<title>irq_exit_rcu (14,061,580 samples, 0.01%)</title><rect x="474.7" y="1429" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="477.70" y="1439.5" ></text>
</g>
<g >
<title>do_mmap (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1109" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="101.70" y="1119.5" ></text>
</g>
<g >
<title>[perf-1063390.map] (22,248,873 samples, 0.02%)</title><rect x="116.5" y="1589" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="119.54" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="789" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1365" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1375.5" ></text>
</g>
<g >
<title>psi_task_switch (191,612,521 samples, 0.17%)</title><rect x="969.8" y="1493" width="1.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="972.77" y="1503.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (355,443,325 samples, 0.31%)</title><rect x="964.0" y="1493" width="3.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="967.05" y="1503.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (1,586,097,764 samples, 1.37%)</title><rect x="252.6" y="1237" width="16.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="255.63" y="1247.5" ></text>
</g>
<g >
<title>main (5,963,731,330 samples, 5.16%)</title><rect x="10.0" y="1589" width="60.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.02" y="1599.5" >main</text>
</g>
<g >
<title>[perf-687143.map] (14,129,051 samples, 0.01%)</title><rect x="117.1" y="1589" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="120.12" y="1599.5" ></text>
</g>
<g >
<title>skb_release_data (49,993,331 samples, 0.04%)</title><rect x="215.3" y="1397" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="218.34" y="1407.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (25,118,197 samples, 0.02%)</title><rect x="154.1" y="1461" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="157.12" y="1471.5" ></text>
</g>
<g >
<title>do_vmi_munmap (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1077" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="101.70" y="1087.5" ></text>
</g>
<g >
<title>execute_command_internal (46,123,643 samples, 0.04%)</title><rect x="282.3" y="1429" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="285.32" y="1439.5" ></text>
</g>
<g >
<title>free_pgd_range (30,590,720 samples, 0.03%)</title><rect x="119.9" y="1349" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="122.85" y="1359.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (14,570,846 samples, 0.01%)</title><rect x="1013.3" y="1445" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1016.28" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="549" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="559.5" ></text>
</g>
<g >
<title>handle_pte_fault (269,599,561 samples, 0.23%)</title><rect x="138.0" y="1493" width="2.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="140.96" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="293" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (374,306,027 samples, 0.32%)</title><rect x="198.4" y="1541" width="3.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="201.41" y="1551.5" ></text>
</g>
<g >
<title>skb_release_data (49,625,895 samples, 0.04%)</title><rect x="65.1" y="965" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="68.06" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (176,254,322 samples, 0.15%)</title><rect x="152.2" y="1413" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="155.25" y="1423.5" ></text>
</g>
<g >
<title>lind_select (421,783,616 samples, 0.36%)</title><rect x="185.4" y="1525" width="4.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="188.41" y="1535.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1445" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="102.78" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="741" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1381" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="101.70" y="1391.5" ></text>
</g>
<g >
<title>path_lookupat (39,214,206 samples, 0.03%)</title><rect x="105.8" y="1365" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="108.85" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (78,278,513 samples, 0.07%)</title><rect x="150.9" y="1413" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="153.87" y="1423.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (162,729,008 samples, 0.14%)</title><rect x="57.3" y="1413" width="1.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="60.33" y="1423.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (107,053,416 samples, 0.09%)</title><rect x="474.9" y="1381" width="1.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="477.94" y="1391.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (14,342,759 samples, 0.01%)</title><rect x="209.9" y="1429" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="212.90" y="1439.5" ></text>
</g>
<g >
<title>[bash] (45,716,577 samples, 0.04%)</title><rect x="281.3" y="1333" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.33" y="1343.5" ></text>
</g>
<g >
<title>tcp_send_mss (54,480,945 samples, 0.05%)</title><rect x="273.5" y="1461" width="0.5" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="276.47" y="1471.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1,724,088,703 samples, 1.49%)</title><rect x="165.3" y="1301" width="17.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="168.32" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="997" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1007.5" ></text>
</g>
<g >
<title>_compound_head (15,388,650 samples, 0.01%)</title><rect x="109.8" y="1253" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="112.77" y="1263.5" ></text>
</g>
<g >
<title>scheduler_tick (11,669,208 samples, 0.01%)</title><rect x="1045.3" y="1461" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1048.27" y="1471.5" ></text>
</g>
<g >
<title>do_read_fault (28,619,916 samples, 0.02%)</title><rect x="91.5" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="94.51" y="1423.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1,962,270,180 samples, 1.70%)</title><rect x="250.7" y="1413" width="20.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="253.69" y="1423.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1333" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="102.78" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="485" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (94,887,597 samples, 0.08%)</title><rect x="27.3" y="1397" width="1.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="30.34" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,883,420 samples, 0.04%)</title><rect x="100.8" y="1077" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.80" y="1087.5" ></text>
</g>
<g >
<title>glob_filename (10,213,695 samples, 0.01%)</title><rect x="281.2" y="1429" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="284.21" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="277" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="287.5" ></text>
</g>
<g >
<title>__memset (42,149,677 samples, 0.04%)</title><rect x="59.1" y="1349" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="62.07" y="1359.5" ></text>
</g>
<g >
<title>tcp_add_backlog (36,637,966 samples, 0.03%)</title><rect x="257.5" y="1045" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="260.52" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1109" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1119.5" ></text>
</g>
<g >
<title>[bash] (10,412,242 samples, 0.01%)</title><rect x="281.2" y="1509" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.21" y="1519.5" ></text>
</g>
<g >
<title>Builtins_JSBuiltinsConstructStub (13,501,981 samples, 0.01%)</title><rect x="107.4" y="1573" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="110.38" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,298,302 samples, 0.01%)</title><rect x="91.1" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="94.06" y="1439.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1,586,097,764 samples, 1.37%)</title><rect x="252.6" y="1253" width="16.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="255.63" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,870,597 samples, 0.01%)</title><rect x="93.8" y="1589" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="96.85" y="1599.5" ></text>
</g>
<g >
<title>sqlite3GetVarint (118,885,801 samples, 0.10%)</title><rect x="72.3" y="1573" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="75.29" y="1583.5" ></text>
</g>
<g >
<title>vfs_statx (29,652,379 samples, 0.03%)</title><rect x="106.6" y="1397" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="109.60" y="1407.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (36,103,794 samples, 0.03%)</title><rect x="973.2" y="1541" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="976.24" y="1551.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::PerformCheckpoint (16,193,809 samples, 0.01%)</title><rect x="132.6" y="1445" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="135.56" y="1455.5" ></text>
</g>
<g >
<title>try_to_wake_up (247,455,163 samples, 0.21%)</title><rect x="262.7" y="885" width="2.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="265.74" y="895.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (640,685,741 samples, 0.55%)</title><rect x="108.7" y="1573" width="6.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="111.67" y="1583.5" ></text>
</g>
<g >
<title>__fsnotify_parent (17,541,933 samples, 0.02%)</title><rect x="165.0" y="1317" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="168.01" y="1327.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (35,964,518 samples, 0.03%)</title><rect x="135.2" y="1573" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="138.16" y="1583.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (15,615,186 samples, 0.01%)</title><rect x="218.5" y="1365" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="221.50" y="1375.5" ></text>
</g>
<g >
<title>ovl_permission (32,028,515 samples, 0.03%)</title><rect x="207.6" y="1429" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="210.64" y="1439.5" ></text>
</g>
<g >
<title>[ls] (113,352,028 samples, 0.10%)</title><rect x="98.5" y="1589" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="101.46" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,617,636 samples, 0.02%)</title><rect x="100.8" y="949" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1365" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1375.5" ></text>
</g>
<g >
<title>[bash] (143,060,617 samples, 0.12%)</title><rect x="281.3" y="1525" width="1.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.33" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1205" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1215.5" ></text>
</g>
<g >
<title>sqlite3_step (843,977,642 samples, 0.73%)</title><rect x="81.9" y="1397" width="8.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="84.93" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="437" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="447.5" ></text>
</g>
<g >
<title>handle_pte_fault (12,993,479 samples, 0.01%)</title><rect x="97.4" y="1461" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="100.35" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="773" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="783.5" ></text>
</g>
<g >
<title>tcp_tso_segs (18,600,892 samples, 0.02%)</title><rect x="273.3" y="1413" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="276.28" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="213" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="223.5" ></text>
</g>
<g >
<title>filename_lookup (12,359,363 samples, 0.01%)</title><rect x="282.0" y="981" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="284.98" y="991.5" ></text>
</g>
<g >
<title>NaClLog (17,156,787 samples, 0.01%)</title><rect x="191.6" y="1525" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="194.62" y="1535.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (90,719,247 samples, 0.08%)</title><rect x="104.3" y="1493" width="0.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="107.28" y="1503.5" ></text>
</g>
<g >
<title>sel_ldr (14,224,022,662 samples, 12.31%)</title><rect x="135.5" y="1605" width="145.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="138.53" y="1615.5" >sel_ldr</text>
</g>
<g >
<title>__split_vma (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1045" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="101.70" y="1055.5" ></text>
</g>
<g >
<title>rest_init (735,772,619 samples, 0.64%)</title><rect x="1182.5" y="1509" width="7.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1185.49" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (143,060,617 samples, 0.12%)</title><rect x="281.3" y="1557" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="284.33" y="1567.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::CreateDataProperty (25,021,973 samples, 0.02%)</title><rect x="114.2" y="1525" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="117.18" y="1535.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (51,341,837 samples, 0.04%)</title><rect x="958.1" y="1397" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="961.12" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1125" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1135.5" ></text>
</g>
<g >
<title>Builtins_ObjectKeys (10,629,741 samples, 0.01%)</title><rect x="116.4" y="1573" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="119.43" y="1583.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (37,218,265 samples, 0.03%)</title><rect x="76.6" y="1445" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="79.61" y="1455.5" ></text>
</g>
<g >
<title>lind_xstat (108,901,435 samples, 0.09%)</title><rect x="190.0" y="1525" width="1.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="193.04" y="1535.5" ></text>
</g>
<g >
<title>tick_sched_timer (47,080,038 samples, 0.04%)</title><rect x="470.3" y="1509" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="473.32" y="1519.5" ></text>
</g>
<g >
<title>update_load_avg (23,130,572 samples, 0.02%)</title><rect x="1014.0" y="1381" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1017.01" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1093" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1103.5" ></text>
</g>
<g >
<title>alloc_empty_backing_file (31,705,165 samples, 0.03%)</title><rect x="200.2" y="1365" width="0.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="203.20" y="1375.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (52,103,524 samples, 0.05%)</title><rect x="1172.6" y="1477" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1175.64" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (35,070,896 samples, 0.03%)</title><rect x="281.4" y="1269" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="284.44" y="1279.5" ></text>
</g>
<g >
<title>begin_new_exec (609,788,859 samples, 0.53%)</title><rect x="119.9" y="1445" width="6.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="122.85" y="1455.5" ></text>
</g>
<g >
<title>update_load_avg (54,748,573 samples, 0.05%)</title><rect x="35.0" y="1301" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="38.00" y="1311.5" ></text>
</g>
<g >
<title>psi_group_change (128,877,856 samples, 0.11%)</title><rect x="970.3" y="1477" width="1.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="973.27" y="1487.5" ></text>
</g>
<g >
<title>__wake_up_common (42,140,542 samples, 0.04%)</title><rect x="265.4" y="949" width="0.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="268.44" y="959.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (49,051,721 samples, 0.04%)</title><rect x="59.5" y="1333" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="62.50" y="1343.5" ></text>
</g>
<g >
<title>handle_mm_fault (25,061,264 samples, 0.02%)</title><rect x="282.4" y="1173" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="285.38" y="1183.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (12,761,420 samples, 0.01%)</title><rect x="191.4" y="1525" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="194.37" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="837" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="847.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (26,314,267 samples, 0.02%)</title><rect x="473.6" y="1477" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="476.61" y="1487.5" ></text>
</g>
<g >
<title>cfree (35,070,896 samples, 0.03%)</title><rect x="281.4" y="1285" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="284.44" y="1295.5" ></text>
</g>
<g >
<title>__fsnotify_parent (89,014,957 samples, 0.08%)</title><rect x="183.6" y="1317" width="0.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="186.60" y="1327.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_skmem (162,326,146 samples, 0.14%)</title><rect x="57.3" y="1397" width="1.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="60.34" y="1407.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (50,114,032 samples, 0.04%)</title><rect x="80.9" y="1381" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="83.90" y="1391.5" ></text>
</g>
<g >
<title>path_lookupat (12,359,363 samples, 0.01%)</title><rect x="282.0" y="965" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="284.98" y="975.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (50,128,015 samples, 0.04%)</title><rect x="1182.0" y="1541" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1184.97" y="1551.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (53,095,467,324 samples, 45.95%)</title><rect x="472.7" y="1589" width="542.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="475.68" y="1599.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>lockref_put_return (17,400,289 samples, 0.02%)</title><rect x="206.6" y="1493" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="209.61" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (30,831,232 samples, 0.03%)</title><rect x="199.0" y="1445" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="202.02" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (15,304,439 samples, 0.01%)</title><rect x="287.8" y="1573" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="290.76" y="1583.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,699,645,864 samples, 1.47%)</title><rect x="222.4" y="1397" width="17.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="225.38" y="1407.5" ></text>
</g>
<g >
<title>start_kernel (4,034,054,228 samples, 3.49%)</title><rect x="973.6" y="1541" width="41.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="976.64" y="1551.5" >sta..</text>
</g>
<g >
<title>pthread_cond_wait (19,712,149 samples, 0.02%)</title><rect x="107.0" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="109.98" y="1535.5" ></text>
</g>
<g >
<title>execute_command (143,060,617 samples, 0.12%)</title><rect x="281.3" y="1461" width="1.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="284.33" y="1471.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8 (17,968,809 samples, 0.02%)</title><rect x="148.9" y="1461" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="151.89" y="1471.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (129,039,745 samples, 0.11%)</title><rect x="131.1" y="1461" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="134.06" y="1471.5" ></text>
</g>
<g >
<title>wake_up_process (107,053,416 samples, 0.09%)</title><rect x="474.9" y="1365" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="477.94" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,715,534 samples, 0.02%)</title><rect x="100.8" y="773" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="783.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (69,400,952 samples, 0.06%)</title><rect x="95.5" y="1525" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="98.51" y="1535.5" ></text>
</g>
<g >
<title>native_sched_clock (50,980,941 samples, 0.04%)</title><rect x="482.8" y="1429" width="0.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="485.81" y="1439.5" ></text>
</g>
<g >
<title>enqueue_task_fair (55,356,912 samples, 0.05%)</title><rect x="475.0" y="1301" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="478.05" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="165" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,559,194 samples, 0.04%)</title><rect x="100.8" y="1205" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1215.5" ></text>
</g>
<g >
<title>rebalance_domains (11,561,699 samples, 0.01%)</title><rect x="477.2" y="1365" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="480.17" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (18,191,264 samples, 0.02%)</title><rect x="101.1" y="1013" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="104.07" y="1023.5" ></text>
</g>
<g >
<title>set_next_entity (23,290,024 samples, 0.02%)</title><rect x="1014.0" y="1397" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1017.01" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (17,224,681 samples, 0.01%)</title><rect x="284.0" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="286.99" y="1583.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (15,560,476 samples, 0.01%)</title><rect x="146.4" y="1493" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="149.36" y="1503.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (212,283,817 samples, 0.18%)</title><rect x="132.9" y="1477" width="2.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="135.93" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="533" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="543.5" ></text>
</g>
<g >
<title>v8::internal::compiler::GraphReducer::Reduce (13,436,462 samples, 0.01%)</title><rect x="104.8" y="1413" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="107.82" y="1423.5" ></text>
</g>
<g >
<title>__libc_start_main (147,030,661 samples, 0.13%)</title><rect x="286.1" y="1573" width="1.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="289.14" y="1583.5" ></text>
</g>
<g >
<title>CopyPathFromUser (20,667,257 samples, 0.02%)</title><rect x="148.7" y="1525" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="151.68" y="1535.5" ></text>
</g>
<g >
<title>do_anonymous_page (50,063,258 samples, 0.04%)</title><rect x="80.4" y="1253" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="83.38" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="133" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="143.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (47,569,973,772 samples, 41.16%)</title><rect x="473.9" y="1477" width="485.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="476.88" y="1487.5" >cpuidle_enter_state</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="517" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="527.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (79,939,795 samples, 0.07%)</title><rect x="476.9" y="1413" width="0.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="479.92" y="1423.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (329,785,678 samples, 0.29%)</title><rect x="63.9" y="1093" width="3.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="66.89" y="1103.5" ></text>
</g>
<g >
<title>v8::internal::JSObject::DefineOwnPropertyIgnoreAttributes (25,021,973 samples, 0.02%)</title><rect x="114.2" y="1493" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="117.18" y="1503.5" ></text>
</g>
<g >
<title>v8::internal::compiler::BranchElimination::TakeConditionsFromFirstControl (13,436,462 samples, 0.01%)</title><rect x="104.8" y="1365" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="107.82" y="1375.5" ></text>
</g>
<g >
<title>dst_release (31,550,820 samples, 0.03%)</title><rect x="260.6" y="997" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="263.61" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="629" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="639.5" ></text>
</g>
<g >
<title>v8::internal::compiler::LoadEliminationPhase::Run (13,436,462 samples, 0.01%)</title><rect x="104.8" y="1461" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="107.82" y="1471.5" ></text>
</g>
<g >
<title>vfs_iter_read (282,323,019 samples, 0.24%)</title><rect x="78.5" y="1493" width="2.9" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="81.52" y="1503.5" ></text>
</g>
<g >
<title>__inet_lookup_established (137,374,621 samples, 0.12%)</title><rect x="256.1" y="1045" width="1.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="259.07" y="1055.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (17,168,526 samples, 0.01%)</title><rect x="135.2" y="1285" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="138.21" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="677" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="687.5" ></text>
</g>
<g >
<title>do_futex (10,261,698 samples, 0.01%)</title><rect x="104.1" y="1397" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="107.07" y="1407.5" ></text>
</g>
<g >
<title>vm_area_dup (81,033,053 samples, 0.07%)</title><rect x="110.8" y="1301" width="0.8" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="113.75" y="1311.5" ></text>
</g>
<g >
<title>getgrgid (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1525" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.70" y="1535.5" ></text>
</g>
<g >
<title>call_rcu (15,673,709 samples, 0.01%)</title><rect x="203.9" y="1445" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="206.89" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1285" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="869" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="879.5" ></text>
</g>
<g >
<title>file_free_rcu (17,208,839 samples, 0.01%)</title><rect x="477.0" y="1333" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="479.97" y="1343.5" ></text>
</g>
<g >
<title>update_cfs_group (15,686,684 samples, 0.01%)</title><rect x="475.3" y="1269" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="478.31" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1061" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="1071.5" ></text>
</g>
<g >
<title>node::fs::AfterStringPtr (16,193,809 samples, 0.01%)</title><rect x="132.6" y="1525" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="135.56" y="1535.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (280,306,817 samples, 0.24%)</title><rect x="100.7" y="1573" width="2.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="103.74" y="1583.5" ></text>
</g>
<g >
<title>tcp_data_queue (49,386,159 samples, 0.04%)</title><rect x="15.5" y="997" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="18.46" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,252,342 samples, 0.01%)</title><rect x="100.8" y="677" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="687.5" ></text>
</g>
<g >
<title>[[heap]] (50,851,649 samples, 0.04%)</title><rect x="135.7" y="1589" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="138.71" y="1599.5" ></text>
</g>
<g >
<title>do_iter_read (282,323,019 samples, 0.24%)</title><rect x="78.5" y="1477" width="2.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="81.52" y="1487.5" ></text>
</g>
<g >
<title>dispatcher (30,900,593 samples, 0.03%)</title><rect x="185.0" y="1509" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="188.00" y="1519.5" ></text>
</g>
<g >
<title>__do_softirq (13,155,736 samples, 0.01%)</title><rect x="474.7" y="1397" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="477.71" y="1407.5" ></text>
</g>
<g >
<title>inode_permission (16,006,371 samples, 0.01%)</title><rect x="199.6" y="1397" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="202.56" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="741" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="751.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (25,597,804 samples, 0.02%)</title><rect x="476.2" y="1301" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="479.23" y="1311.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (204,887,186 samples, 0.18%)</title><rect x="14.4" y="1061" width="2.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="17.43" y="1071.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (50,384,043 samples, 0.04%)</title><rect x="1051.6" y="1461" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1054.62" y="1471.5" ></text>
</g>
<g >
<title>try_to_unlazy (14,523,441 samples, 0.01%)</title><rect x="207.0" y="1445" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="210.04" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="885" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="981" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="991.5" ></text>
</g>
<g >
<title>__libc_start_main (52,436,347 samples, 0.05%)</title><rect x="99.1" y="1573" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="102.08" y="1583.5" ></text>
</g>
<g >
<title>__mmput (212,283,817 samples, 0.18%)</title><rect x="132.9" y="1429" width="2.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="135.93" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1493" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1503.5" ></text>
</g>
<g >
<title>wait_woken (824,438,197 samples, 0.71%)</title><rect x="28.8" y="1413" width="8.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="31.83" y="1423.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (40,640,395 samples, 0.04%)</title><rect x="279.4" y="1509" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="282.38" y="1519.5" ></text>
</g>
<g >
<title>update_cfs_group (50,547,087 samples, 0.04%)</title><rect x="33.4" y="1301" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.42" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1333" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1343.5" ></text>
</g>
<g >
<title>tcp_push (345,121,616 samples, 0.30%)</title><rect x="14.2" y="1445" width="3.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="17.19" y="1455.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (18,377,899 samples, 0.02%)</title><rect x="1013.3" y="1461" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1016.28" y="1471.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InliningPhase::Run (13,675,905 samples, 0.01%)</title><rect x="104.3" y="1461" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="107.28" y="1471.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1557" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="102.78" y="1567.5" ></text>
</g>
<g >
<title>[perf-1067918.map] (17,698,075 samples, 0.02%)</title><rect x="140.7" y="1589" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="143.71" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (17,671,337 samples, 0.02%)</title><rect x="206.4" y="1573" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="209.43" y="1583.5" ></text>
</g>
<g >
<title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (277,001,086 samples, 0.24%)</title><rect x="100.8" y="1509" width="2.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="103.75" y="1519.5" ></text>
</g>
<g >
<title>__kfree_skb (49,108,953 samples, 0.04%)</title><rect x="65.7" y="933" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="68.72" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="245" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="255.5" ></text>
</g>
<g >
<title>do_select (129,710,922 samples, 0.11%)</title><rect x="196.2" y="1477" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="199.21" y="1487.5" ></text>
</g>
<g >
<title>getgrgid_r (17,921,471 samples, 0.02%)</title><rect x="99.1" y="1461" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="102.08" y="1471.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Debounce::Debounce (23,547,526 samples, 0.02%)</title><rect x="104.0" y="1541" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="107.03" y="1551.5" ></text>
</g>
<g >
<title>[bash] (13,163,886 samples, 0.01%)</title><rect x="282.0" y="1189" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.98" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (85,982,033 samples, 0.07%)</title><rect x="97.6" y="1541" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="100.58" y="1551.5" ></text>
</g>
<g >
<title>exc_page_fault (50,063,258 samples, 0.04%)</title><rect x="80.4" y="1333" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="83.38" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="469" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="479.5" ></text>
</g>
<g >
<title>local_clock_noinstr (49,404,432 samples, 0.04%)</title><rect x="1172.0" y="1445" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1175.01" y="1455.5" ></text>
</g>
<g >
<title>alloc_pages (1,744,352,861 samples, 1.51%)</title><rect x="222.1" y="1429" width="17.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="225.12" y="1439.5" ></text>
</g>
<g >
<title>menu_select (12,167,699 samples, 0.01%)</title><rect x="1013.2" y="1429" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1016.15" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1157" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="1167.5" ></text>
</g>
<g >
<title>prep_compound_page (61,078,543 samples, 0.05%)</title><rect x="238.6" y="1381" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="241.60" y="1391.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (41,602,158 samples, 0.04%)</title><rect x="1051.7" y="1445" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1054.71" y="1455.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (50,544,567 samples, 0.04%)</title><rect x="1172.7" y="1397" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1175.66" y="1407.5" ></text>
</g>
<g >
<title>getcwd (50,354,456 samples, 0.04%)</title><rect x="197.9" y="1573" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="200.90" y="1583.5" ></text>
</g>
<g >
<title>pick_next_task (317,500,939 samples, 0.27%)</title><rect x="1178.6" y="1493" width="3.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1181.57" y="1503.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::RunMicrotasks (16,193,809 samples, 0.01%)</title><rect x="132.6" y="1429" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="135.56" y="1439.5" ></text>
</g>
<g >
<title>v8::internal::OptimizedFrame::Summarize (36,924,639 samples, 0.03%)</title><rect x="114.4" y="1461" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="117.44" y="1471.5" ></text>
</g>
<g >
<title>do_epoll_wait (129,039,745 samples, 0.11%)</title><rect x="131.1" y="1509" width="1.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="134.06" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="389" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="399.5" ></text>
</g>
<g >
<title>v8::internal::Runtime_ObjectKeys (10,629,741 samples, 0.01%)</title><rect x="116.4" y="1541" width="0.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="119.43" y="1551.5" ></text>
</g>
<g >
<title>_dl_catch_exception (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1397" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="101.70" y="1407.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (50,481,270 samples, 0.04%)</title><rect x="287.1" y="1429" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="290.12" y="1439.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (54,474,102 samples, 0.05%)</title><rect x="68.9" y="1429" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="71.95" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="757" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="767.5" ></text>
</g>
<g >
<title>dequeue_task_fair (359,927,268 samples, 0.31%)</title><rect x="32.4" y="1333" width="3.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="35.40" y="1343.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::log_metadata (79,677,441 samples, 0.07%)</title><rect x="147.3" y="1461" width="0.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="150.32" y="1471.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (13,849,010 samples, 0.01%)</title><rect x="184.1" y="1285" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="187.09" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1397" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="1407.5" ></text>
</g>
<g >
<title>open64 (374,306,027 samples, 0.32%)</title><rect x="198.4" y="1573" width="3.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="201.41" y="1583.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (17,224,681 samples, 0.01%)</title><rect x="284.0" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="286.99" y="1535.5" ></text>
</g>
<g >
<title>alloc::fmt::format::format_inner (24,494,991 samples, 0.02%)</title><rect x="150.1" y="1477" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="153.08" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27,014,921 samples, 0.02%)</title><rect x="106.3" y="1493" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="109.26" y="1503.5" ></text>
</g>
<g >
<title>__napi_poll (380,597,873 samples, 0.33%)</title><rect x="63.9" y="1141" width="3.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="66.89" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="261" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (74,031,978 samples, 0.06%)</title><rect x="213.4" y="1461" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="216.38" y="1471.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (241,178,285 samples, 0.21%)</title><rect x="111.7" y="1365" width="2.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="114.67" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (234,808,794 samples, 0.20%)</title><rect x="158.7" y="1429" width="2.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="161.68" y="1439.5" ></text>
</g>
<g >
<title>[ls] (60,915,681 samples, 0.05%)</title><rect x="98.5" y="1573" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="101.46" y="1583.5" ></text>
</g>
<g >
<title>available_idle_cpu (17,866,859 samples, 0.02%)</title><rect x="263.8" y="837" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="266.82" y="847.5" ></text>
</g>
<g >
<title>dispatcher (94,289,742 samples, 0.08%)</title><rect x="190.2" y="1509" width="0.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="193.18" y="1519.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (17,725,336 samples, 0.02%)</title><rect x="280.6" y="1589" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="283.59" y="1599.5" ></text>
</g>
<g >
<title>v8::internal::compiler::LateOptimizationPhase::Run (39,690,692 samples, 0.03%)</title><rect x="104.4" y="1461" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="107.41" y="1471.5" ></text>
</g>
<g >
<title>cpptools (1,922,759,561 samples, 1.66%)</title><rect x="70.9" y="1605" width="19.6" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="73.91" y="1615.5" ></text>
</g>
<g >
<title>fsnotify (39,877,208 samples, 0.03%)</title><rect x="163.7" y="1349" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="166.66" y="1359.5" ></text>
</g>
<g >
<title>_copy_from_iter (857,989,889 samples, 0.74%)</title><rect x="241.3" y="1445" width="8.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="244.29" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (208,524,475 samples, 0.18%)</title><rect x="206.6" y="1557" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="209.61" y="1567.5" ></text>
</g>
<g >
<title>llseek (324,207,858 samples, 0.28%)</title><rect x="158.0" y="1461" width="3.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="161.00" y="1471.5" ></text>
</g>
<g >
<title>select_idle_sibling (62,130,304 samples, 0.05%)</title><rect x="263.7" y="853" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="266.73" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="693" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="703.5" ></text>
</g>
<g >
<title>copyout (150,482,602 samples, 0.13%)</title><rect x="79.4" y="1365" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="82.36" y="1375.5" ></text>
</g>
<g >
<title>ovl_write_iter (32,748,831 samples, 0.03%)</title><rect x="135.2" y="1397" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="138.19" y="1407.5" ></text>
</g>
<g >
<title>dequeue_entity (26,946,585 samples, 0.02%)</title><rect x="187.9" y="1285" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="190.93" y="1295.5" ></text>
</g>
<g >
<title>path_lookupat (67,615,269 samples, 0.06%)</title><rect x="152.3" y="1333" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="155.32" y="1343.5" ></text>
</g>
<g >
<title>inode_permission (12,612,856 samples, 0.01%)</title><rect x="201.0" y="1381" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="203.96" y="1391.5" ></text>
</g>
<g >
<title>[expr] (73,408,812 samples, 0.06%)</title><rect x="90.6" y="1589" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="93.62" y="1599.5" ></text>
</g>
<g >
<title>Builtins_JSEntry (16,193,809 samples, 0.01%)</title><rect x="132.6" y="1381" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="135.56" y="1391.5" ></text>
</g>
<g >
<title>sched_clock (49,985,837 samples, 0.04%)</title><rect x="972.5" y="1477" width="0.5" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="975.48" y="1487.5" ></text>
</g>
<g >
<title>__handle_mm_fault (50,481,270 samples, 0.04%)</title><rect x="287.1" y="1365" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="290.12" y="1375.5" ></text>
</g>
<g >
<title>__kfree_skb (225,177,130 samples, 0.19%)</title><rect x="216.2" y="1381" width="2.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="219.20" y="1391.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (51,151,705 samples, 0.04%)</title><rect x="57.4" y="1365" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="60.42" y="1375.5" ></text>
</g>
<g >
<title>do_exit (12,879,626 samples, 0.01%)</title><rect x="287.8" y="1525" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="290.79" y="1535.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (4,034,054,228 samples, 3.49%)</title><rect x="973.6" y="1557" width="41.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="976.64" y="1567.5" >x86..</text>
</g>
<g >
<title>ip_local_deliver (1,135,933,333 samples, 0.98%)</title><rect x="254.8" y="1109" width="11.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="257.82" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="117" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="127.5" ></text>
</g>
<g >
<title>client (5,963,731,330 samples, 5.16%)</title><rect x="10.0" y="1605" width="60.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="13.02" y="1615.5" >client</text>
</g>
<g >
<title>__raw_spin_lock_irqsave (11,926,848 samples, 0.01%)</title><rect x="476.7" y="1397" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="479.66" y="1407.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (50,063,258 samples, 0.04%)</title><rect x="80.4" y="1349" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="83.38" y="1359.5" ></text>
</g>
<g >
<title>path_put (10,079,561 samples, 0.01%)</title><rect x="153.0" y="1349" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="156.01" y="1359.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (35,070,896 samples, 0.03%)</title><rect x="281.4" y="1125" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="284.44" y="1135.5" ></text>
</g>
<g >
<title>__sys_sendto (613,907,381 samples, 0.53%)</title><rect x="12.6" y="1509" width="6.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="15.59" y="1519.5" ></text>
</g>
<g >
<title>ip_rcv (259,789,637 samples, 0.22%)</title><rect x="14.4" y="1109" width="2.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="17.43" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="309" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (179,688,773 samples, 0.16%)</title><rect x="196.1" y="1557" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="199.06" y="1567.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (49,404,432 samples, 0.04%)</title><rect x="1172.0" y="1429" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1175.01" y="1439.5" ></text>
</g>
<g >
<title>dput (36,601,925 samples, 0.03%)</title><rect x="98.1" y="1397" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="101.09" y="1407.5" ></text>
</g>
<g >
<title>tick_sched_timer (11,669,208 samples, 0.01%)</title><rect x="1045.3" y="1509" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1048.27" y="1519.5" ></text>
</g>
<g >
<title>perf (42,083,779 samples, 0.04%)</title><rect x="135.1" y="1605" width="0.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="138.10" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,715,534 samples, 0.02%)</title><rect x="100.8" y="837" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="847.5" ></text>
</g>
<g >
<title>[ls] (164,243,205 samples, 0.14%)</title><rect x="96.8" y="1573" width="1.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="99.79" y="1583.5" ></text>
</g>
<g >
<title>[expr] (69,813,166 samples, 0.06%)</title><rect x="90.6" y="1541" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="93.62" y="1551.5" ></text>
</g>
<g >
<title>run_rebalance_domains (11,602,880 samples, 0.01%)</title><rect x="1052.0" y="1381" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1055.02" y="1391.5" ></text>
</g>
<g >
<title>__alloc_skb (94,507,846 samples, 0.08%)</title><rect x="59.0" y="1365" width="1.0" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="62.03" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1381" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1391.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (27,082,407 samples, 0.02%)</title><rect x="145.8" y="1557" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="148.81" y="1567.5" ></text>
</g>
<g >
<title>prepend_path (17,292,160 samples, 0.01%)</title><rect x="198.1" y="1493" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="201.08" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="581" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="591.5" ></text>
</g>
<g >
<title>getname_flags (14,283,709 samples, 0.01%)</title><rect x="208.6" y="1493" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="211.59" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,823,302 samples, 0.04%)</title><rect x="100.8" y="1221" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1231.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (26,510,346 samples, 0.02%)</title><rect x="147.4" y="1445" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="150.41" y="1455.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (40,482,318 samples, 0.04%)</title><rect x="157.2" y="1461" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="160.21" y="1471.5" ></text>
</g>
<g >
<title>do_readlinkat (85,982,033 samples, 0.07%)</title><rect x="97.6" y="1493" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="100.58" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_free (35,723,801 samples, 0.03%)</title><rect x="215.0" y="1381" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="217.98" y="1391.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::metawalkandparent (41,841,963 samples, 0.04%)</title><rect x="190.5" y="1477" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="193.54" y="1487.5" ></text>
</g>
<g >
<title>sched_clock (17,707,329 samples, 0.02%)</title><rect x="265.1" y="837" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="268.09" y="847.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (17,288,448 samples, 0.01%)</title><rect x="160.9" y="1413" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="163.90" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (39,214,206 samples, 0.03%)</title><rect x="105.8" y="1461" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="108.85" y="1471.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectGetOwnPropertyDescriptors (100,500,062 samples, 0.09%)</title><rect x="114.2" y="1557" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="117.18" y="1567.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1557" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="103.53" y="1567.5" ></text>
</g>
<g >
<title>map_id_up (17,867,146 samples, 0.02%)</title><rect x="151.1" y="1333" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="154.06" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,185,789 samples, 0.04%)</title><rect x="100.8" y="1397" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1407.5" ></text>
</g>
<g >
<title>execute_command (96,936,974 samples, 0.08%)</title><rect x="281.3" y="1429" width="1.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="284.33" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,731,485 samples, 0.01%)</title><rect x="100.8" y="581" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1349" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="597" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="607.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (10,944,422 samples, 0.01%)</title><rect x="210.8" y="1541" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="213.83" y="1551.5" ></text>
</g>
<g >
<title>copy_page_range (130,627,623 samples, 0.11%)</title><rect x="109.3" y="1301" width="1.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="112.26" y="1311.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (735,772,619 samples, 0.64%)</title><rect x="1182.5" y="1557" width="7.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1185.49" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1349" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="1359.5" ></text>
</g>
<g >
<title>may_open (16,006,371 samples, 0.01%)</title><rect x="199.6" y="1445" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="202.56" y="1455.5" ></text>
</g>
<g >
<title>swapper (17,155,098,885 samples, 14.84%)</title><rect x="1014.8" y="1605" width="175.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1017.83" y="1615.5" >swapper</text>
</g>
<g >
<title>do_syscall_64 (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1477" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="102.78" y="1487.5" ></text>
</g>
<g >
<title>v8::internal::compiler::GraphReducer::ReduceNode (13,436,462 samples, 0.01%)</title><rect x="104.8" y="1445" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="107.82" y="1455.5" ></text>
</g>
<g >
<title>poll_idle (46,644,116,549 samples, 40.36%)</title><rect x="483.3" y="1461" width="476.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="486.33" y="1471.5" >poll_idle</text>
</g>
<g >
<title>filemap_get_pages (224,709,864 samples, 0.19%)</title><rect x="180.0" y="1253" width="2.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="183.00" y="1263.5" ></text>
</g>
<g >
<title>__release_sock (510,860,413 samples, 0.44%)</title><rect x="214.2" y="1461" width="5.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="217.23" y="1471.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (17,537,942 samples, 0.02%)</title><rect x="210.0" y="1429" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="213.05" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="165" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="175.5" ></text>
</g>
<g >
<title>mutex_unlock (17,852,924 samples, 0.02%)</title><rect x="160.1" y="1381" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="163.13" y="1391.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (212,283,817 samples, 0.18%)</title><rect x="132.9" y="1573" width="2.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="135.93" y="1583.5" ></text>
</g>
<g >
<title>std::fs::File::metadata (100,551,023 samples, 0.09%)</title><rect x="150.7" y="1461" width="1.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="153.73" y="1471.5" ></text>
</g>
<g >
<title>user_path_at_empty (191,124,186 samples, 0.17%)</title><rect x="206.8" y="1509" width="1.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="209.78" y="1519.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (609,788,859 samples, 0.53%)</title><rect x="119.9" y="1541" width="6.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="122.85" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1541" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="645" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="655.5" ></text>
</g>
<g >
<title>security_file_alloc (13,789,676 samples, 0.01%)</title><rect x="198.9" y="1429" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="201.88" y="1439.5" ></text>
</g>
<g >
<title>dequeue_task (100,849,996 samples, 0.09%)</title><rect x="131.1" y="1413" width="1.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="134.06" y="1423.5" ></text>
</g>
<g >
<title>clockevents_program_event (27,706,972 samples, 0.02%)</title><rect x="187.1" y="1301" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="190.05" y="1311.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (49,380,108 samples, 0.04%)</title><rect x="97.6" y="1429" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="100.58" y="1439.5" ></text>
</g>
<g >
<title>exc_page_fault (13,501,981 samples, 0.01%)</title><rect x="107.4" y="1445" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="110.38" y="1455.5" ></text>
</g>
<g >
<title>inet_recvmsg (155,099,930 samples, 0.13%)</title><rect x="209.0" y="1493" width="1.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="212.01" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="805" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="815.5" ></text>
</g>
<g >
<title>__schedule (28,392,271 samples, 0.02%)</title><rect x="1014.0" y="1445" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1016.97" y="1455.5" ></text>
</g>
<g >
<title>netif_skb_features (17,385,784 samples, 0.02%)</title><rect x="269.9" y="1237" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="272.87" y="1247.5" ></text>
</g>
<g >
<title>__x64_sys_execve (212,283,817 samples, 0.18%)</title><rect x="132.9" y="1493" width="2.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="135.93" y="1503.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (15,114,620 samples, 0.01%)</title><rect x="1052.0" y="1413" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1054.98" y="1423.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1,258,678,840 samples, 1.09%)</title><rect x="254.4" y="1141" width="12.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="257.40" y="1151.5" ></text>
</g>
<g >
<title>mmap_region (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1093" width="0.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="101.70" y="1103.5" ></text>
</g>
<g >
<title>intel_idle (471,536,760 samples, 0.41%)</title><rect x="478.0" y="1461" width="4.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="481.00" y="1471.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (13,588,114 samples, 0.01%)</title><rect x="189.0" y="1413" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="192.04" y="1423.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (50,886,217 samples, 0.04%)</title><rect x="35.0" y="1285" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="38.03" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1333" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1343.5" ></text>
</g>
<g >
<title>xas_load (14,651,010 samples, 0.01%)</title><rect x="182.1" y="1221" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="185.15" y="1231.5" ></text>
</g>
<g >
<title>setlocale (145,670,260 samples, 0.13%)</title><rect x="286.1" y="1525" width="1.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="289.14" y="1535.5" ></text>
</g>
<g >
<title>tcp_sendmsg (50,664,466 samples, 0.04%)</title><rect x="18.3" y="1493" width="0.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="21.34" y="1503.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (12,359,363 samples, 0.01%)</title><rect x="282.0" y="1029" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="284.98" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1061" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="661" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="671.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (52,536,981 samples, 0.05%)</title><rect x="22.8" y="1349" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="25.83" y="1359.5" ></text>
</g>
<g >
<title>strncpy_from_user (14,585,697 samples, 0.01%)</title><rect x="151.5" y="1349" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="154.52" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1317" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1327.5" ></text>
</g>
<g >
<title>__schedule (124,226,497 samples, 0.11%)</title><rect x="131.1" y="1429" width="1.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="134.06" y="1439.5" ></text>
</g>
<g >
<title>uv_cond_wait (19,712,149 samples, 0.02%)</title><rect x="107.0" y="1541" width="0.2" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="109.98" y="1551.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (52,270,291 samples, 0.05%)</title><rect x="69.6" y="1493" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="72.58" y="1503.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (46,311,828 samples, 0.04%)</title><rect x="1048.0" y="1589" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1051.05" y="1599.5" ></text>
</g>
<g >
<title>try_to_wake_up (24,152,390 samples, 0.02%)</title><rect x="265.6" y="901" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="268.63" y="911.5" ></text>
</g>
<g >
<title>HandleStackContext (115,511,146 samples, 0.10%)</title><rect x="144.6" y="1557" width="1.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="147.63" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,782,552 samples, 0.02%)</title><rect x="99.3" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.29" y="1439.5" ></text>
</g>
<g >
<title>schedule_idle (400,575,845 samples, 0.35%)</title><rect x="968.3" y="1525" width="4.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="971.28" y="1535.5" ></text>
</g>
<g >
<title>tcp_filter (27,151,180 samples, 0.02%)</title><rect x="257.9" y="1045" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="260.89" y="1055.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (16,999,976 samples, 0.01%)</title><rect x="208.2" y="1413" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="211.24" y="1423.5" ></text>
</g>
<g >
<title>thread_pool::do_work (843,977,642 samples, 0.73%)</title><rect x="81.9" y="1557" width="8.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="84.93" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1333" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="101.70" y="1343.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1573" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="103.53" y="1583.5" ></text>
</g>
<g >
<title>[sel_ldr] (17,961,679 samples, 0.02%)</title><rect x="195.2" y="1573" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="198.25" y="1583.5" ></text>
</g>
<g >
<title>[bash] (25,061,264 samples, 0.02%)</title><rect x="282.4" y="1269" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="285.38" y="1279.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (14,283,709 samples, 0.01%)</title><rect x="208.6" y="1477" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="211.59" y="1487.5" ></text>
</g>
<g >
<title>intel_idle (130,992,353 samples, 0.11%)</title><rect x="1052.2" y="1461" width="1.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1055.19" y="1471.5" ></text>
</g>
<g >
<title>__cmd_record.constprop.0 (42,083,779 samples, 0.04%)</title><rect x="135.1" y="1589" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="138.10" y="1599.5" ></text>
</g>
<g >
<title>__do_sys_clone (284,144,481 samples, 0.25%)</title><rect x="108.7" y="1381" width="2.9" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="111.68" y="1391.5" ></text>
</g>
<g >
<title>_ZN9rustposix9safeposix8syscalls8fs_calls50_$LT$impl$u20$rustposix..safeposix..cage..Cage$GT$13_close_helper17haa65c3d34a23c8c4E.llvm.3610554567128930750 (136,027,672 samples, 0.12%)</title><rect x="146.7" y="1493" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="149.75" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (184,931,953 samples, 0.16%)</title><rect x="152.2" y="1429" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="155.16" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (34,390,842 samples, 0.03%)</title><rect x="135.2" y="1461" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="138.18" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="181" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="191.5" ></text>
</g>
<g >
<title>uv__read (10,163,949 samples, 0.01%)</title><rect x="132.8" y="1557" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="135.80" y="1567.5" ></text>
</g>
<g >
<title>tcp_sendmsg (6,513,042,725 samples, 5.64%)</title><rect x="212.9" y="1493" width="66.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="215.88" y="1503.5" >tcp_sen..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="405" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="415.5" ></text>
</g>
<g >
<title>getname (19,998,200 samples, 0.02%)</title><rect x="201.9" y="1493" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="204.94" y="1503.5" ></text>
</g>
<g >
<title>[bash] (19,435,445 samples, 0.02%)</title><rect x="282.1" y="1157" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="285.12" y="1167.5" ></text>
</g>
<g >
<title>do_syscall_64 (27,014,921 samples, 0.02%)</title><rect x="106.3" y="1477" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="109.26" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1397" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1317" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1327.5" ></text>
</g>
<g >
<title>__fdget (52,270,291 samples, 0.05%)</title><rect x="69.6" y="1477" width="0.5" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="72.58" y="1487.5" ></text>
</g>
<g >
<title>_nss_systemd_getgrgid_r (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1573" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="102.78" y="1583.5" ></text>
</g>
<g >
<title>v8::internal::Factory::CopyJSObjectWithAllocationSite (13,501,981 samples, 0.01%)</title><rect x="107.4" y="1477" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="110.38" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (3,868,196,938 samples, 3.35%)</title><rect x="973.7" y="1413" width="39.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="976.65" y="1423.5" >cpu..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,505,545 samples, 0.01%)</title><rect x="126.1" y="1573" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1583.5" ></text>
</g>
<g >
<title>__tcp_select_window (14,430,317 samples, 0.01%)</title><rect x="251.1" y="1397" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="254.13" y="1407.5" ></text>
</g>
<g >
<title>vfs_statx (27,352,458 samples, 0.02%)</title><rect x="100.2" y="1509" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="103.25" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (21,022,733 samples, 0.02%)</title><rect x="109.0" y="1285" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="112.04" y="1295.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1429" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="102.78" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1397" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="517" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="527.5" ></text>
</g>
<g >
<title>fault_in_iov_iter_readable (11,445,493 samples, 0.01%)</title><rect x="135.4" y="1285" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="138.41" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_pselect6 (143,649,910 samples, 0.12%)</title><rect x="196.1" y="1525" width="1.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="199.06" y="1535.5" ></text>
</g>
<g >
<title>__fget_light (14,845,004 samples, 0.01%)</title><rect x="210.6" y="1477" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="213.59" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (43,817,362 samples, 0.04%)</title><rect x="91.4" y="1589" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="94.37" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="853" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="485" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15,304,439 samples, 0.01%)</title><rect x="287.8" y="1589" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="290.76" y="1599.5" ></text>
</g>
<g >
<title>try_charge_memcg (52,536,981 samples, 0.05%)</title><rect x="22.8" y="1333" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="25.83" y="1343.5" ></text>
</g>
<g >
<title>parse_and_execute (143,060,617 samples, 0.12%)</title><rect x="281.3" y="1509" width="1.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="284.33" y="1519.5" ></text>
</g>
<g >
<title>setlocale (69,813,166 samples, 0.06%)</title><rect x="90.6" y="1525" width="0.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="93.62" y="1535.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (345,121,616 samples, 0.30%)</title><rect x="14.2" y="1429" width="3.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="17.19" y="1439.5" ></text>
</g>
<g >
<title>task_work_run (118,774,415 samples, 0.10%)</title><rect x="203.6" y="1493" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="206.57" y="1503.5" ></text>
</g>
<g >
<title>do_user_addr_fault (28,619,916 samples, 0.02%)</title><rect x="91.5" y="1493" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="94.51" y="1503.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (84,823,441 samples, 0.07%)</title><rect x="268.8" y="1253" width="0.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="271.83" y="1263.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (326,196,299 samples, 0.28%)</title><rect x="63.9" y="1045" width="3.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="66.93" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1285" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1295.5" ></text>
</g>
<g >
<title>v8::internal::TranslatedState::Init (17,426,988 samples, 0.02%)</title><rect x="115.0" y="1413" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="118.02" y="1423.5" ></text>
</g>
<g >
<title>dst_release (36,637,966 samples, 0.03%)</title><rect x="257.5" y="1029" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="260.52" y="1039.5" ></text>
</g>
<g >
<title>uv_queue_work (241,178,285 samples, 0.21%)</title><rect x="111.7" y="1493" width="2.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="114.67" y="1503.5" ></text>
</g>
<g >
<title>__mmput (59,097,908 samples, 0.05%)</title><rect x="282.9" y="1397" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="285.92" y="1407.5" ></text>
</g>
<g >
<title>sk_wait_data (1,020,792,795 samples, 0.88%)</title><rect x="26.8" y="1429" width="10.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.82" y="1439.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (413,035,771 samples, 0.36%)</title><rect x="185.5" y="1477" width="4.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="188.50" y="1487.5" ></text>
</g>
<g >
<title>release_sock (537,485,612 samples, 0.47%)</title><rect x="214.1" y="1477" width="5.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="217.14" y="1487.5" ></text>
</g>
<g >
<title>dequeue_entity (257,066,890 samples, 0.22%)</title><rect x="32.9" y="1317" width="2.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="35.93" y="1327.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::_$u7b$$u7b$closure$u7d$$u7d$::h4c6515e8023c7b81 (30,900,593 samples, 0.03%)</title><rect x="185.0" y="1493" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="188.00" y="1503.5" ></text>
</g>
<g >
<title>vfs_read (282,323,019 samples, 0.24%)</title><rect x="78.5" y="1525" width="2.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="81.52" y="1535.5" ></text>
</g>
<g >
<title>do_anonymous_page (260,604,618 samples, 0.23%)</title><rect x="138.0" y="1477" width="2.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="140.96" y="1487.5" ></text>
</g>
<g >
<title>rest_init (4,034,054,228 samples, 3.49%)</title><rect x="973.6" y="1509" width="41.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="976.64" y="1519.5" >res..</text>
</g>
<g >
<title>__x64_sys_exit_group (12,879,626 samples, 0.01%)</title><rect x="287.8" y="1557" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="290.79" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1013" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (23,617,636 samples, 0.02%)</title><rect x="100.8" y="917" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.82" y="927.5" ></text>
</g>
<g >
<title>read_tsc (51,287,614 samples, 0.04%)</title><rect x="1014.3" y="1445" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1017.31" y="1455.5" ></text>
</g>
<g >
<title>do_user_addr_fault (9,884,839 samples, 0.01%)</title><rect x="105.0" y="1365" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="108.00" y="1375.5" ></text>
</g>
<g >
<title>kfree_skbmem (35,723,801 samples, 0.03%)</title><rect x="215.0" y="1397" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="217.98" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="821" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="709" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="719.5" ></text>
</g>
<g >
<title>schedule (39,350,381 samples, 0.03%)</title><rect x="1048.1" y="1525" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1051.06" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16,129,806 samples, 0.01%)</title><rect x="100.8" y="709" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (39,214,206 samples, 0.03%)</title><rect x="105.8" y="1445" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="108.85" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1173" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1183.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (61,930,744 samples, 0.05%)</title><rect x="26.2" y="1429" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="29.16" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="437" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="447.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (42,496,558 samples, 0.04%)</title><rect x="135.7" y="1573" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="138.71" y="1583.5" ></text>
</g>
<g >
<title>psi_task_switch (31,310,224 samples, 0.03%)</title><rect x="188.5" y="1317" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="191.50" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (618,352,662 samples, 0.54%)</title><rect x="12.5" y="1541" width="6.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="15.55" y="1551.5" ></text>
</g>
<g >
<title>execute_command_internal (96,936,974 samples, 0.08%)</title><rect x="281.3" y="1381" width="1.0" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="284.33" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (50,812,195 samples, 0.04%)</title><rect x="67.3" y="1109" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="70.26" y="1119.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (200,720,599 samples, 0.17%)</title><rect x="202.8" y="1573" width="2.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="205.82" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_close (15,988,139 samples, 0.01%)</title><rect x="202.9" y="1541" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="205.87" y="1551.5" ></text>
</g>
<g >
<title>sqlite3VdbeMemFromBtreeZeroOffset (30,305,128 samples, 0.03%)</title><rect x="88.2" y="1365" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="91.18" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1205" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="597" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="607.5" ></text>
</g>
<g >
<title>[libc.so.6] (311,138,436 samples, 0.27%)</title><rect x="104.0" y="1589" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="107.00" y="1599.5" ></text>
</g>
<g >
<title>cpus_share_cache (35,508,562 samples, 0.03%)</title><rect x="264.0" y="837" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="267.00" y="847.5" ></text>
</g>
<g >
<title>update_load_avg (73,827,280 samples, 0.06%)</title><rect x="1181.1" y="1445" width="0.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1184.06" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="837" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="847.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1,713,174,085 samples, 1.48%)</title><rect x="165.4" y="1285" width="17.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="168.43" y="1295.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (9,877,951 samples, 0.01%)</title><rect x="99.1" y="1253" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="102.08" y="1263.5" ></text>
</g>
<g >
<title>v8::internal::JSObject::CreateDataProperty (25,021,973 samples, 0.02%)</title><rect x="114.2" y="1509" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="117.18" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1173" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="101.70" y="1183.5" ></text>
</g>
<g >
<title>anon_vma_fork (43,435,426 samples, 0.04%)</title><rect x="108.8" y="1301" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="111.81" y="1311.5" ></text>
</g>
<g >
<title>[[stack]] (14,230,148 samples, 0.01%)</title><rect x="103.7" y="1589" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="106.67" y="1599.5" ></text>
</g>
<g >
<title>[ls] (52,436,347 samples, 0.05%)</title><rect x="99.1" y="1541" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="102.08" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (613,907,381 samples, 0.53%)</title><rect x="12.6" y="1525" width="6.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="15.59" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (129,039,745 samples, 0.11%)</title><rect x="131.1" y="1525" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="134.06" y="1535.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (10,231,026 samples, 0.01%)</title><rect x="188.2" y="1301" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="191.22" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1381" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1391.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (287,055,458 samples, 0.25%)</title><rect x="14.2" y="1365" width="2.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="17.19" y="1375.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (24,616,074 samples, 0.02%)</title><rect x="191.8" y="1509" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="194.79" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (27,682,690 samples, 0.02%)</title><rect x="99.3" y="1461" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.27" y="1471.5" ></text>
</g>
<g >
<title>tcp_data_queue (55,761,812 samples, 0.05%)</title><rect x="22.8" y="1381" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="25.83" y="1391.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (286,938,032 samples, 0.25%)</title><rect x="100.7" y="1589" width="3.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="103.74" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="997" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="181" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="191.5" ></text>
</g>
<g >
<title>select_idle_sibling (15,477,193 samples, 0.01%)</title><rect x="265.7" y="869" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="268.72" y="879.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (61,287,171 samples, 0.05%)</title><rect x="186.7" y="1349" width="0.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="189.71" y="1359.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (37,651,793 samples, 0.03%)</title><rect x="115.2" y="1573" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="118.25" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="613" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="623.5" ></text>
</g>
<g >
<title>__inet_lookup_established (49,801,605 samples, 0.04%)</title><rect x="64.5" y="997" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="67.47" y="1007.5" ></text>
</g>
<g >
<title>execute_command (96,936,974 samples, 0.08%)</title><rect x="281.3" y="1397" width="1.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="284.33" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1269" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="773" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="783.5" ></text>
</g>
<g >
<title>ttwu_do_activate (284,348,650 samples, 0.25%)</title><rect x="1175.4" y="1477" width="2.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1178.45" y="1487.5" ></text>
</g>
<g >
<title>__fget_light (93,234,066 samples, 0.08%)</title><rect x="77.6" y="1509" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="80.57" y="1519.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (265,284,052 samples, 0.23%)</title><rect x="14.4" y="1237" width="2.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="17.38" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (281,964,020 samples, 0.24%)</title><rect x="126.2" y="69" width="2.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="129.24" y="79.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (12,359,363 samples, 0.01%)</title><rect x="282.0" y="1045" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="284.98" y="1055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15,166,411 samples, 0.01%)</title><rect x="107.0" y="1493" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="110.02" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (241,178,285 samples, 0.21%)</title><rect x="111.7" y="1397" width="2.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="114.67" y="1407.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (19,070,632 samples, 0.02%)</title><rect x="477.7" y="1429" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="480.74" y="1439.5" ></text>
</g>
<g >
<title>[ls] (17,921,471 samples, 0.02%)</title><rect x="99.1" y="1525" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="102.08" y="1535.5" ></text>
</g>
<g >
<title>mmput (10,189,303 samples, 0.01%)</title><rect x="287.8" y="1493" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="290.79" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (46,823,302 samples, 0.04%)</title><rect x="100.8" y="1237" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.79" y="1247.5" ></text>
</g>
<g >
<title>handle_mm_fault (50,481,270 samples, 0.04%)</title><rect x="287.1" y="1381" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="290.12" y="1391.5" ></text>
</g>
<g >
<title>uv_cond_signal (241,178,285 samples, 0.21%)</title><rect x="111.7" y="1445" width="2.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="114.67" y="1455.5" ></text>
</g>
<g >
<title>filename_lookup (176,840,477 samples, 0.15%)</title><rect x="206.8" y="1493" width="1.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="209.78" y="1503.5" ></text>
</g>
<g >
<title>expand_string_assignment (46,123,643 samples, 0.04%)</title><rect x="282.3" y="1333" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="285.32" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1509" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="1519.5" ></text>
</g>
<g >
<title>lookup_fast (29,652,379 samples, 0.03%)</title><rect x="106.6" y="1333" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="109.60" y="1343.5" ></text>
</g>
<g >
<title>page_counter_try_charge (24,898,573 samples, 0.02%)</title><rect x="261.2" y="949" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="264.18" y="959.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (14,570,846 samples, 0.01%)</title><rect x="1013.3" y="1429" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1016.28" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (153,922,358 samples, 0.13%)</title><rect x="466.7" y="1589" width="1.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="469.66" y="1599.5" ></text>
</g>
<g >
<title>skb_release_data (210,850,332 samples, 0.18%)</title><rect x="216.3" y="1365" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="219.26" y="1375.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1061" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="101.70" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (134,716,303 samples, 0.12%)</title><rect x="92.5" y="1557" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="95.47" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,084,388 samples, 0.02%)</title><rect x="99.3" y="1445" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.27" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,123,147 samples, 0.02%)</title><rect x="100.8" y="965" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="975.5" ></text>
</g>
<g >
<title>process_backlog (380,597,873 samples, 0.33%)</title><rect x="63.9" y="1125" width="3.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="66.89" y="1135.5" ></text>
</g>
<g >
<title>rcu_do_batch (17,208,839 samples, 0.01%)</title><rect x="477.0" y="1349" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="479.97" y="1359.5" ></text>
</g>
<g >
<title>check_heap_object (104,300,795 samples, 0.09%)</title><rect x="38.7" y="1349" width="1.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="41.70" y="1359.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (34,001,966 samples, 0.03%)</title><rect x="239.4" y="1365" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="242.39" y="1375.5" ></text>
</g>
<g >
<title>exit_mmap (134,716,303 samples, 0.12%)</title><rect x="92.5" y="1461" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="95.47" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (144,820,898 samples, 0.13%)</title><rect x="470.8" y="1573" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="473.80" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,877,951 samples, 0.01%)</title><rect x="99.1" y="1397" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.08" y="1407.5" ></text>
</g>
<g >
<title>schedule (145,759,571 samples, 0.13%)</title><rect x="187.3" y="1349" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.34" y="1359.5" ></text>
</g>
<g >
<title>sk_reset_timer (35,648,593 samples, 0.03%)</title><rect x="218.8" y="1381" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="221.84" y="1391.5" ></text>
</g>
<g >
<title>step_into (36,601,925 samples, 0.03%)</title><rect x="98.1" y="1413" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="101.09" y="1423.5" ></text>
</g>
<g >
<title>zap_pte_range (97,243,113 samples, 0.08%)</title><rect x="125.1" y="1301" width="1.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="128.09" y="1311.5" ></text>
</g>
<g >
<title>v8::internal::OptimizedCompilationJob::ExecuteJob (90,719,247 samples, 0.08%)</title><rect x="104.3" y="1509" width="0.9" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="107.28" y="1519.5" ></text>
</g>
<g >
<title>apparmor_file_open (14,866,176 samples, 0.01%)</title><rect x="201.2" y="1397" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="204.18" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,883,420 samples, 0.04%)</title><rect x="100.8" y="1061" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.80" y="1071.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,000,850,541 samples, 4.33%)</title><rect x="19.8" y="1541" width="51.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="22.81" y="1551.5" >do_sy..</text>
</g>
<g >
<title>__x64_sys_sendto (6,625,658,520 samples, 5.73%)</title><rect x="212.6" y="1541" width="67.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="215.60" y="1551.5" >__x64_s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="981" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="991.5" ></text>
</g>
<g >
<title>[libc.so.6] (92,818,608 samples, 0.08%)</title><rect x="286.2" y="1429" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="289.17" y="1439.5" ></text>
</g>
<g >
<title>[[heap]] (16,741,884 samples, 0.01%)</title><rect x="283.8" y="1589" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="286.82" y="1599.5" ></text>
</g>
<g >
<title>__mmput (10,189,303 samples, 0.01%)</title><rect x="287.8" y="1477" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="290.79" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="389" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="399.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (48,741,086 samples, 0.04%)</title><rect x="1013.5" y="1461" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1016.47" y="1471.5" ></text>
</g>
<g >
<title>__fsnotify_parent (39,877,208 samples, 0.03%)</title><rect x="163.7" y="1365" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="166.66" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,559,194 samples, 0.04%)</title><rect x="100.8" y="1141" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1151.5" ></text>
</g>
<g >
<title>v8::internal::Accessors::FunctionArgumentsGetter (36,924,639 samples, 0.03%)</title><rect x="114.4" y="1477" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="117.44" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (145,670,260 samples, 0.13%)</title><rect x="286.1" y="1509" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="289.14" y="1519.5" ></text>
</g>
<g >
<title>write (34,390,842 samples, 0.03%)</title><rect x="135.2" y="1493" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="138.18" y="1503.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (155,099,930 samples, 0.13%)</title><rect x="209.0" y="1461" width="1.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="212.01" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="613" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="623.5" ></text>
</g>
<g >
<title>NaClSysPreadDecoder (2,955,556,766 samples, 2.56%)</title><rect x="154.7" y="1557" width="30.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="157.73" y="1567.5" >Na..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1061" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1071.5" ></text>
</g>
<g >
<title>begin_new_exec (59,097,908 samples, 0.05%)</title><rect x="282.9" y="1445" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="285.92" y="1455.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1,288,978,963 samples, 1.12%)</title><rect x="166.8" y="1253" width="13.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="169.84" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1301" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1311.5" ></text>
</g>
<g >
<title>[bash] (10,213,695 samples, 0.01%)</title><rect x="281.2" y="1477" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.21" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="149" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="159.5" ></text>
</g>
<g >
<title>enqueue_task_fair (14,022,785 samples, 0.01%)</title><rect x="1013.3" y="1381" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1016.28" y="1391.5" ></text>
</g>
<g >
<title>execute_command_internal (96,936,974 samples, 0.08%)</title><rect x="281.3" y="1413" width="1.0" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="284.33" y="1423.5" ></text>
</g>
<g >
<title>copyout (31,669,722 samples, 0.03%)</title><rect x="179.7" y="1237" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="182.68" y="1247.5" ></text>
</g>
<g >
<title>v8::internal::TranslatedState::Init (36,924,639 samples, 0.03%)</title><rect x="114.4" y="1429" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="117.44" y="1439.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1,729,699,929 samples, 1.50%)</title><rect x="252.4" y="1269" width="17.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="255.39" y="1279.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (129,039,745 samples, 0.11%)</title><rect x="131.1" y="1477" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="134.06" y="1487.5" ></text>
</g>
<g >
<title>alloc_empty_file (44,620,908 samples, 0.04%)</title><rect x="198.9" y="1461" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="201.88" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (33,801,218 samples, 0.03%)</title><rect x="19.0" y="1557" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="21.95" y="1567.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (161,716,789 samples, 0.14%)</title><rect x="203.1" y="1509" width="1.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="206.13" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (208,524,475 samples, 0.18%)</title><rect x="206.6" y="1541" width="2.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="209.61" y="1551.5" ></text>
</g>
<g >
<title>__fget_light (43,637,671 samples, 0.04%)</title><rect x="471.7" y="1509" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="474.71" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,106,160 samples, 0.08%)</title><rect x="286.2" y="1413" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="289.17" y="1423.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (45,146,511 samples, 0.04%)</title><rect x="147.7" y="1445" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="150.68" y="1455.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (12,359,363 samples, 0.01%)</title><rect x="282.0" y="949" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="284.98" y="959.5" ></text>
</g>
<g >
<title>__fget_light (39,844,041 samples, 0.03%)</title><rect x="162.5" y="1365" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="165.52" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (21,715,534 samples, 0.02%)</title><rect x="100.8" y="789" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.82" y="799.5" ></text>
</g>
<g >
<title>__mod_memcg_state (15,615,186 samples, 0.01%)</title><rect x="218.5" y="1333" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="221.50" y="1343.5" ></text>
</g>
<g >
<title>do_open (227,144,457 samples, 0.20%)</title><rect x="199.3" y="1461" width="2.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="202.33" y="1471.5" ></text>
</g>
<g >
<title>schedule_timeout (726,576,474 samples, 0.63%)</title><rect x="29.8" y="1397" width="7.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="32.83" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_select (12,167,699 samples, 0.01%)</title><rect x="1013.2" y="1445" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1016.15" y="1455.5" ></text>
</g>
<g >
<title>execve (212,283,817 samples, 0.18%)</title><rect x="132.9" y="1541" width="2.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="135.93" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (26,968,031 samples, 0.02%)</title><rect x="96.8" y="1557" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="99.79" y="1567.5" ></text>
</g>
<g >
<title>v8::internal::compiler::(anonymous namespace)::SourcePositionWrapper::Reduce (13,436,462 samples, 0.01%)</title><rect x="104.8" y="1397" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="107.82" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (208,524,475 samples, 0.18%)</title><rect x="206.6" y="1573" width="2.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="209.61" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="565" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="575.5" ></text>
</g>
<g >
<title>tcp_inbound_md5_hash (15,327,730 samples, 0.01%)</title><rect x="258.2" y="1045" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="261.17" y="1055.5" ></text>
</g>
<g >
<title>sleep (401,599,335 samples, 0.35%)</title><rect x="283.8" y="1605" width="4.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="286.82" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,185,789 samples, 0.04%)</title><rect x="100.8" y="1285" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1295.5" ></text>
</g>
<g >
<title>v8::internal::FindCaller (37,724,401 samples, 0.03%)</title><rect x="114.8" y="1461" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="117.82" y="1471.5" ></text>
</g>
<g >
<title>rmqueue (50,162,738 samples, 0.04%)</title><rect x="239.2" y="1381" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="242.22" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="245" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="255.5" ></text>
</g>
<g >
<title>tcp_rcv_established (463,641,791 samples, 0.40%)</title><rect x="214.7" y="1429" width="4.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="217.71" y="1439.5" ></text>
</g>
<g >
<title>dget_parent (46,172,318 samples, 0.04%)</title><rect x="183.8" y="1301" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="186.76" y="1311.5" ></text>
</g>
<g >
<title>v8::internal::OptimizedFrame::Summarize (37,724,401 samples, 0.03%)</title><rect x="114.8" y="1445" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="117.82" y="1455.5" ></text>
</g>
<g >
<title>uv__fs_statx (39,214,206 samples, 0.03%)</title><rect x="105.8" y="1509" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="108.85" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="757" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1461" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="1471.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserZStr (12,054,333 samples, 0.01%)</title><rect x="148.7" y="1509" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="151.68" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1045" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1055.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (103,462,492 samples, 0.09%)</title><rect x="104.3" y="1557" width="1.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="107.27" y="1567.5" ></text>
</g>
<g >
<title>do_sys_openat2 (374,306,027 samples, 0.32%)</title><rect x="198.4" y="1509" width="3.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="201.41" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="629" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="639.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (31,918,814 samples, 0.03%)</title><rect x="201.3" y="1397" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="204.33" y="1407.5" ></text>
</g>
<g >
<title>tcp_rcv_established (219,315,251 samples, 0.19%)</title><rect x="65.0" y="981" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="68.02" y="991.5" ></text>
</g>
<g >
<title>lind_open (571,098,762 samples, 0.49%)</title><rect x="148.9" y="1525" width="5.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="151.89" y="1535.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (17,277,030 samples, 0.01%)</title><rect x="476.3" y="1269" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="479.31" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,617,636 samples, 0.02%)</title><rect x="100.8" y="901" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="911.5" ></text>
</g>
<g >
<title>copy_p4d_range (130,627,623 samples, 0.11%)</title><rect x="109.3" y="1285" width="1.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="112.26" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="917" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="927.5" ></text>
</g>
<g >
<title>rcu_core_si (18,357,855 samples, 0.02%)</title><rect x="477.0" y="1381" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="479.96" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,559,194 samples, 0.04%)</title><rect x="100.8" y="1173" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.79" y="1183.5" ></text>
</g>
<g >
<title>epoll_wait (138,427,942 samples, 0.12%)</title><rect x="131.1" y="1573" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="134.06" y="1583.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (23,130,572 samples, 0.02%)</title><rect x="1014.0" y="1365" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1017.01" y="1375.5" ></text>
</g>
<g >
<title>__run_timers (11,059,705 samples, 0.01%)</title><rect x="477.4" y="1365" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="480.39" y="1375.5" ></text>
</g>
<g >
<title>__irqentry_text_start (243,942,297 samples, 0.21%)</title><rect x="1048.7" y="1477" width="2.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1051.66" y="1487.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (669,131,520 samples, 0.58%)</title><rect x="61.6" y="1221" width="6.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="64.60" y="1231.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (169,352,445 samples, 0.15%)</title><rect x="474.9" y="1397" width="1.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="477.93" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1461" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1471.5" ></text>
</g>
<g >
<title>__fsnotify_parent (11,119,433 samples, 0.01%)</title><rect x="200.0" y="1413" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="203.00" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_read (27,014,921 samples, 0.02%)</title><rect x="106.3" y="1461" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="109.26" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (137,929,679 samples, 0.12%)</title><rect x="131.1" y="1557" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="134.06" y="1567.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (42,140,542 samples, 0.04%)</title><rect x="265.4" y="965" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="268.44" y="975.5" ></text>
</g>
<g >
<title>rustposix::interface::file::assert_is_allowed_filename (14,262,243 samples, 0.01%)</title><rect x="150.6" y="1461" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="153.59" y="1471.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (35,135,123 samples, 0.03%)</title><rect x="209.5" y="1445" width="0.4" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="212.54" y="1455.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (55,801,332 samples, 0.05%)</title><rect x="972.4" y="1509" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="975.43" y="1519.5" ></text>
</g>
<g >
<title>[sel_ldr] (5,240,017,266 samples, 4.53%)</title><rect x="140.9" y="1589" width="53.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="143.89" y="1599.5" >[sel_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1237" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1247.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (20,685,467 samples, 0.02%)</title><rect x="70.7" y="1509" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="73.66" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="773" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,261,698 samples, 0.01%)</title><rect x="104.1" y="1445" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="107.07" y="1455.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (18,709,352 samples, 0.02%)</title><rect x="197.7" y="1525" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="200.71" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,051,368,787 samples, 4.37%)</title><rect x="19.3" y="1557" width="51.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="22.30" y="1567.5" >entry..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="693" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="703.5" ></text>
</g>
<g >
<title>get_page_from_freelist (260,604,618 samples, 0.23%)</title><rect x="138.0" y="1413" width="2.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="140.96" y="1423.5" ></text>
</g>
<g >
<title>call_cpuidle (47,600,579,310 samples, 41.19%)</title><rect x="473.6" y="1509" width="486.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="476.58" y="1519.5" >call_cpuidle</text>
</g>
<g >
<title>igc_poll (13,155,736 samples, 0.01%)</title><rect x="474.7" y="1349" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="477.71" y="1359.5" ></text>
</g>
<g >
<title>walk_component (25,749,094 samples, 0.02%)</title><rect x="208.2" y="1445" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="211.24" y="1455.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (51,341,837 samples, 0.04%)</title><rect x="958.1" y="1429" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="961.12" y="1439.5" ></text>
</g>
<g >
<title>vfs_read (14,247,000 samples, 0.01%)</title><rect x="471.3" y="1525" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="474.30" y="1535.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::open_syscall (553,129,953 samples, 0.48%)</title><rect x="149.1" y="1493" width="5.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="152.08" y="1503.5" ></text>
</g>
<g >
<title>loopback_xmit (67,465,900 samples, 0.06%)</title><rect x="268.9" y="1237" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="271.91" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1109" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="645" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="655.5" ></text>
</g>
<g >
<title>sqlite3VdbeSerialGet (150,711,060 samples, 0.13%)</title><rect x="89.0" y="1365" width="1.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="92.01" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="725" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,184,336,641 samples, 1.89%)</title><rect x="162.4" y="1429" width="22.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="165.43" y="1439.5" >d..</text>
</g>
<g >
<title>execute_command_internal (10,213,695 samples, 0.01%)</title><rect x="281.2" y="1493" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="284.21" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (95,188,990 samples, 0.08%)</title><rect x="286.1" y="1445" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="289.14" y="1455.5" ></text>
</g>
<g >
<title>psi_task_change (61,002,764 samples, 0.05%)</title><rect x="966.5" y="1445" width="0.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="969.54" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (267,384,450 samples, 0.23%)</title><rect x="186.5" y="1429" width="2.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="189.45" y="1439.5" ></text>
</g>
<g >
<title>cfree (224,890,951 samples, 0.19%)</title><rect x="101.3" y="1381" width="2.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="104.28" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="373" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="389" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="399.5" ></text>
</g>
<g >
<title>node::fs::FStat (37,651,793 samples, 0.03%)</title><rect x="115.2" y="1557" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="118.25" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_lock (51,023,351 samples, 0.04%)</title><rect x="31.9" y="1349" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="34.87" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1461" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="773" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="783.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::metawalkandparent (50,037,816 samples, 0.04%)</title><rect x="154.0" y="1477" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="157.05" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1365" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1375.5" ></text>
</g>
<g >
<title>run_timer_softirq (11,059,705 samples, 0.01%)</title><rect x="477.4" y="1381" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="480.39" y="1391.5" ></text>
</g>
<g >
<title>schedule (671,842,767 samples, 0.58%)</title><rect x="30.4" y="1381" width="6.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="33.39" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1509" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1519.5" ></text>
</g>
<g >
<title>[ls] (17,921,471 samples, 0.02%)</title><rect x="99.1" y="1493" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="102.08" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="853" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="863.5" ></text>
</g>
<g >
<title>exec_mmap (609,788,859 samples, 0.53%)</title><rect x="119.9" y="1429" width="6.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="122.85" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="485" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="495.5" ></text>
</g>
<g >
<title>NaClSysFstat (42,053,135 samples, 0.04%)</title><rect x="148.2" y="1541" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="151.20" y="1551.5" ></text>
</g>
<g >
<title>v8::internal::KeyAccumulator::GetKeys (10,629,741 samples, 0.01%)</title><rect x="116.4" y="1525" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="119.43" y="1535.5" ></text>
</g>
<g >
<title>NaClSysWrite (283,564,823 samples, 0.25%)</title><rect x="191.5" y="1541" width="2.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="194.50" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="869" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="341" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="351.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1461" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="102.78" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (118,885,801 samples, 0.10%)</title><rect x="72.3" y="1589" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="75.29" y="1599.5" ></text>
</g>
<g >
<title>clock_gettime (22,944,260 samples, 0.02%)</title><rect x="146.5" y="1509" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="149.51" y="1519.5" ></text>
</g>
<g >
<title>task_h_load (240,155,545 samples, 0.21%)</title><rect x="1045.4" y="1445" width="2.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1048.40" y="1455.5" ></text>
</g>
<g >
<title>cpptools_context::handle_create_decl_def_scan (843,977,642 samples, 0.73%)</title><rect x="81.9" y="1525" width="8.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="84.93" y="1535.5" ></text>
</g>
<g >
<title>Glob::isIgnored (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1541" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="103.53" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (375,557,085 samples, 0.32%)</title><rect x="77.6" y="1557" width="3.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="80.57" y="1567.5" ></text>
</g>
<g >
<title>update_load_avg (47,080,038 samples, 0.04%)</title><rect x="470.3" y="1429" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="473.32" y="1439.5" ></text>
</g>
<g >
<title>__update_blocked_fair (11,168,944 samples, 0.01%)</title><rect x="1052.0" y="1349" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1055.02" y="1359.5" ></text>
</g>
<g >
<title>exc_page_fault (35,070,896 samples, 0.03%)</title><rect x="281.4" y="1237" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="284.44" y="1247.5" ></text>
</g>
<g >
<title>llist_reverse_order (54,725,497 samples, 0.05%)</title><rect x="967.7" y="1509" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="970.68" y="1519.5" ></text>
</g>
<g >
<title>inet_recvmsg (4,722,370,843 samples, 4.09%)</title><rect x="21.3" y="1477" width="48.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="24.31" y="1487.5" >inet..</text>
</g>
<g >
<title>tick_sched_handle (47,080,038 samples, 0.04%)</title><rect x="470.3" y="1493" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="473.32" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (31,263,429 samples, 0.03%)</title><rect x="213.1" y="1477" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="216.06" y="1487.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (50,544,567 samples, 0.04%)</title><rect x="1172.7" y="1445" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1175.66" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="469" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="479.5" ></text>
</g>
<g >
<title>exec_mmap (59,097,908 samples, 0.05%)</title><rect x="282.9" y="1429" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="285.92" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="437" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_clone (284,144,481 samples, 0.25%)</title><rect x="108.7" y="1397" width="2.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="111.68" y="1407.5" ></text>
</g>
<g >
<title>tick_sched_timer (53,917,016 samples, 0.05%)</title><rect x="476.0" y="1381" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="479.03" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="405" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="415.5" ></text>
</g>
<g >
<title>do_group_exit (12,879,626 samples, 0.01%)</title><rect x="287.8" y="1541" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="290.79" y="1551.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (11,878,879,618 samples, 10.28%)</title><rect x="1051.2" y="1477" width="121.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1054.22" y="1487.5" >cpuidle_enter_s..</text>
</g>
<g >
<title>v8::internal::Object::GetPropertyWithAccessor (74,649,040 samples, 0.06%)</title><rect x="114.4" y="1493" width="0.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="117.44" y="1503.5" ></text>
</g>
<g >
<title>__sk_mem_raise_allocated (232,977,984 samples, 0.20%)</title><rect x="277.0" y="1429" width="2.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="280.00" y="1439.5" ></text>
</g>
<g >
<title>__mod_timer (52,037,118 samples, 0.05%)</title><rect x="272.6" y="1365" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="275.57" y="1375.5" ></text>
</g>
<g >
<title>pick_next_task (23,290,024 samples, 0.02%)</title><rect x="1014.0" y="1429" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1017.01" y="1439.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.constprop.0 (54,902,451 samples, 0.05%)</title><rect x="16.5" y="1093" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="19.53" y="1103.5" ></text>
</g>
<g >
<title>__sys_recvfrom (4,926,542,321 samples, 4.26%)</title><rect x="19.8" y="1509" width="50.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="22.81" y="1519.5" >__sys..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="645" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="655.5" ></text>
</g>
<g >
<title>[libc.so.6] (95,188,990 samples, 0.08%)</title><rect x="286.1" y="1461" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="289.14" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1413" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1423.5" ></text>
</g>
<g >
<title>[bash] (10,213,695 samples, 0.01%)</title><rect x="281.2" y="1461" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.21" y="1471.5" ></text>
</g>
<g >
<title>vm_normal_page (46,621,835 samples, 0.04%)</title><rect x="110.1" y="1237" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="113.12" y="1247.5" ></text>
</g>
<g >
<title>do_anonymous_page (37,218,265 samples, 0.03%)</title><rect x="76.6" y="1477" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="79.61" y="1487.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (68,888,692 samples, 0.06%)</title><rect x="156.9" y="1477" width="0.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="159.92" y="1487.5" ></text>
</g>
<g >
<title>release_sock (63,396,924 samples, 0.05%)</title><rect x="22.7" y="1445" width="0.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="25.75" y="1455.5" ></text>
</g>
<g >
<title>place_entity (212,438,453 samples, 0.18%)</title><rect x="1176.1" y="1429" width="2.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1179.10" y="1439.5" ></text>
</g>
<g >
<title>tcp_ack (328,032,123 samples, 0.28%)</title><rect x="215.9" y="1413" width="3.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="218.85" y="1423.5" ></text>
</g>
<g >
<title>__wake_up_common (323,403,295 samples, 0.28%)</title><rect x="262.0" y="933" width="3.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="264.96" y="943.5" ></text>
</g>
<g >
<title>do_user_addr_fault (50,063,258 samples, 0.04%)</title><rect x="80.4" y="1317" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="83.38" y="1327.5" ></text>
</g>
<g >
<title>setlocale (34,514,876 samples, 0.03%)</title><rect x="99.3" y="1525" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="102.27" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1541" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1525" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="1535.5" ></text>
</g>
<g >
<title>NaClLog (13,856,195 samples, 0.01%)</title><rect x="148.3" y="1525" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="151.28" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="965" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1381" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="1391.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (340,641,674 samples, 0.29%)</title><rect x="261.9" y="949" width="3.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="264.88" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="101" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="111.5" ></text>
</g>
<g >
<title>kernel_clone (284,144,481 samples, 0.25%)</title><rect x="108.7" y="1365" width="2.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="111.68" y="1375.5" ></text>
</g>
<g >
<title>copyout (1,129,264,314 samples, 0.98%)</title><rect x="168.1" y="1221" width="11.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="171.15" y="1231.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (13,501,981 samples, 0.01%)</title><rect x="107.4" y="1557" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="110.38" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="485" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="495.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (170,906,340 samples, 0.15%)</title><rect x="203.1" y="1525" width="1.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="206.13" y="1535.5" ></text>
</g>
<g >
<title>do_statx (39,214,206 samples, 0.03%)</title><rect x="105.8" y="1413" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="108.85" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (44,883,420 samples, 0.04%)</title><rect x="100.8" y="1045" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.80" y="1055.5" ></text>
</g>
<g >
<title>skb_free_head (49,993,331 samples, 0.04%)</title><rect x="215.3" y="1381" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="218.34" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="469" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="479.5" ></text>
</g>
<g >
<title>__napi_poll (259,789,637 samples, 0.22%)</title><rect x="14.4" y="1173" width="2.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="17.43" y="1183.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (15,673,709 samples, 0.01%)</title><rect x="203.9" y="1413" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="206.89" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="245" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="255.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (48,007,286,494 samples, 41.54%)</title><rect x="473.5" y="1525" width="490.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="476.49" y="1535.5" >cpuidle_idle_call</text>
</g>
<g >
<title>revert_creds (26,773,069 samples, 0.02%)</title><rect x="208.0" y="1429" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="210.96" y="1439.5" ></text>
</g>
<g >
<title>__fput (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1381" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="102.78" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="197" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="207.5" ></text>
</g>
<g >
<title>init_file (17,388,562 samples, 0.02%)</title><rect x="200.2" y="1349" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="203.20" y="1359.5" ></text>
</g>
<g >
<title>do_pselect.constprop.0 (143,649,910 samples, 0.12%)</title><rect x="196.1" y="1509" width="1.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="199.06" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="821" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="85" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1269" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1029" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="1039.5" ></text>
</g>
<g >
<title>start_secondary (13,120,002,400 samples, 11.35%)</title><rect x="1048.5" y="1573" width="134.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1051.52" y="1583.5" >start_secondary</text>
</g>
<g >
<title>skb_copy_datagram_iter (1,967,132,006 samples, 1.70%)</title><rect x="37.2" y="1429" width="20.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="40.25" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1253" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="101.70" y="1263.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (49,770,634 samples, 0.04%)</title><rect x="71.4" y="1573" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="74.43" y="1583.5" ></text>
</g>
<g >
<title>sqlite3VdbeMemFromBtreeZeroOffset (35,048,021 samples, 0.03%)</title><rect x="71.9" y="1573" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="74.94" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1429" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="101.70" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27,352,458 samples, 0.02%)</title><rect x="100.2" y="1573" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="103.25" y="1583.5" ></text>
</g>
<g >
<title>sock_recvmsg (4,819,120,736 samples, 4.17%)</title><rect x="20.4" y="1493" width="49.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="23.37" y="1503.5" >sock..</text>
</g>
<g >
<title>do_exit (134,716,303 samples, 0.12%)</title><rect x="92.5" y="1525" width="1.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="95.47" y="1535.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (1,967,132,006 samples, 1.70%)</title><rect x="37.2" y="1413" width="20.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="40.25" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="933" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="943.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (1,826,043,035 samples, 1.58%)</title><rect x="38.7" y="1397" width="18.6" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="41.69" y="1407.5" ></text>
</g>
<g >
<title>ovl_file_accessed.part.0 (26,954,946 samples, 0.02%)</title><rect x="164.2" y="1349" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="167.16" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (34,390,842 samples, 0.03%)</title><rect x="135.2" y="1477" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="138.18" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1253" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,831,018 samples, 0.01%)</title><rect x="100.8" y="565" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="165" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="175.5" ></text>
</g>
<g >
<title>[bash] (143,060,617 samples, 0.12%)</title><rect x="281.3" y="1477" width="1.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.33" y="1487.5" ></text>
</g>
<g >
<title>tcp_wfree (28,275,016 samples, 0.02%)</title><rect x="269.3" y="1221" width="0.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="272.31" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (13,268,642 samples, 0.01%)</title><rect x="205.6" y="1589" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="208.61" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1285" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="1295.5" ></text>
</g>
<g >
<title>uv_run (20,795,678 samples, 0.02%)</title><rect x="117.3" y="1477" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="120.28" y="1487.5" ></text>
</g>
<g >
<title>__handle_mm_fault (50,063,258 samples, 0.04%)</title><rect x="80.4" y="1285" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="83.38" y="1295.5" ></text>
</g>
<g >
<title>_dl_catch_exception (9,877,951 samples, 0.01%)</title><rect x="99.1" y="1269" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="102.08" y="1279.5" ></text>
</g>
<g >
<title>vm_normal_page (123,527,467 samples, 0.11%)</title><rect x="123.8" y="1301" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="126.83" y="1311.5" ></text>
</g>
<g >
<title>NaClSysSelectDecoder (430,399,609 samples, 0.37%)</title><rect x="185.3" y="1557" width="4.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="188.32" y="1567.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1,276,083,659 samples, 1.10%)</title><rect x="254.3" y="1157" width="13.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="257.32" y="1167.5" ></text>
</g>
<g >
<title>do_statx (135,196,455 samples, 0.12%)</title><rect x="152.2" y="1381" width="1.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="155.25" y="1391.5" ></text>
</g>
<g >
<title>__release_sock (63,396,924 samples, 0.05%)</title><rect x="22.7" y="1429" width="0.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="25.75" y="1439.5" ></text>
</g>
<g >
<title>common_interrupt (15,697,127 samples, 0.01%)</title><rect x="474.7" y="1445" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="477.68" y="1455.5" ></text>
</g>
<g >
<title>native_write_msr (17,277,030 samples, 0.01%)</title><rect x="476.3" y="1253" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="479.31" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="277" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_statx (39,214,206 samples, 0.03%)</title><rect x="105.8" y="1429" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="108.85" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,252,342 samples, 0.01%)</title><rect x="100.8" y="693" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="703.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1,057,412,959 samples, 0.92%)</title><rect x="255.6" y="1061" width="10.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="258.57" y="1071.5" ></text>
</g>
<g >
<title>handle_mm_fault (35,070,896 samples, 0.03%)</title><rect x="281.4" y="1205" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="284.44" y="1215.5" ></text>
</g>
<g >
<title>sshd (71,189,477,449 samples, 61.60%)</title><rect x="287.9" y="1605" width="726.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="290.92" y="1615.5" >sshd</text>
</g>
<g >
<title>sched_clock_noinstr (49,985,837 samples, 0.04%)</title><rect x="972.5" y="1461" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="975.48" y="1471.5" ></text>
</g>
<g >
<title>ksys_read (14,744,216 samples, 0.01%)</title><rect x="471.3" y="1541" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="474.30" y="1551.5" ></text>
</g>
<g >
<title>v8::internal::SaveContext::~SaveContext (16,193,809 samples, 0.01%)</title><rect x="132.6" y="1365" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="135.56" y="1375.5" ></text>
</g>
<g >
<title>cpu_startup_entry (4,034,054,228 samples, 3.49%)</title><rect x="973.6" y="1493" width="41.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="976.64" y="1503.5" >cpu..</text>
</g>
<g >
<title>__ip_finish_output (283,084,697 samples, 0.24%)</title><rect x="14.2" y="1301" width="2.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="17.23" y="1311.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1413" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="101.70" y="1423.5" ></text>
</g>
<g >
<title>__fput (89,976,334 samples, 0.08%)</title><rect x="203.8" y="1461" width="0.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="206.80" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_enter (12,133,384,451 samples, 10.50%)</title><rect x="1048.6" y="1493" width="123.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1051.62" y="1503.5" >cpuidle_enter</text>
</g>
<g >
<title>tcp_recvmsg (155,099,930 samples, 0.13%)</title><rect x="209.0" y="1477" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="212.01" y="1487.5" ></text>
</g>
<g >
<title>raw_v4_input (48,688,980 samples, 0.04%)</title><rect x="64.0" y="1013" width="0.5" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="66.98" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1413" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1423.5" ></text>
</g>
<g >
<title>v8::internal::compiler::GraphReducer::Reduce (39,690,692 samples, 0.03%)</title><rect x="104.4" y="1413" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="107.41" y="1423.5" ></text>
</g>
<g >
<title>unmap_vmas (131,472,045 samples, 0.11%)</title><rect x="92.5" y="1445" width="1.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="95.50" y="1455.5" ></text>
</g>
<g >
<title>enqueue_task (284,348,650 samples, 0.25%)</title><rect x="1175.4" y="1461" width="2.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1178.45" y="1471.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (51,016,735 samples, 0.04%)</title><rect x="16.0" y="997" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="19.00" y="1007.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (971,022,373 samples, 0.84%)</title><rect x="59.0" y="1381" width="9.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="62.03" y="1391.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (128,246,812 samples, 0.11%)</title><rect x="207.2" y="1461" width="1.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="210.19" y="1471.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (231,664,350 samples, 0.20%)</title><rect x="117.5" y="1589" width="2.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="120.49" y="1599.5" ></text>
</g>
<g >
<title>NaClSysStat (140,356,278 samples, 0.12%)</title><rect x="189.7" y="1541" width="1.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="192.71" y="1551.5" ></text>
</g>
<g >
<title>readlink (85,982,033 samples, 0.07%)</title><rect x="97.6" y="1557" width="0.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="100.58" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="933" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="943.5" ></text>
</g>
<g >
<title>tcp_ack (163,433,460 samples, 0.14%)</title><rect x="65.6" y="965" width="1.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="68.56" y="975.5" ></text>
</g>
<g >
<title>[libc.so.6] (145,670,260 samples, 0.13%)</title><rect x="286.1" y="1477" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="289.14" y="1487.5" ></text>
</g>
<g >
<title>__update_load_avg_se (47,080,038 samples, 0.04%)</title><rect x="470.3" y="1413" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="473.32" y="1423.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (198,456,660 samples, 0.17%)</title><rect x="474.8" y="1413" width="2.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="477.85" y="1423.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (775,289,954 samples, 0.67%)</title><rect x="60.5" y="1333" width="7.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="63.52" y="1343.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (116,245,604 samples, 0.10%)</title><rect x="962.4" y="1477" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="965.39" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="357" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="367.5" ></text>
</g>
<g >
<title>exc_page_fault (50,481,270 samples, 0.04%)</title><rect x="287.1" y="1413" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="290.12" y="1423.5" ></text>
</g>
<g >
<title>node::AsyncWrap::MakeCallback (16,193,809 samples, 0.01%)</title><rect x="132.6" y="1493" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="135.56" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="805" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="815.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (12,759,347 samples, 0.01%)</title><rect x="474.7" y="1301" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="477.71" y="1311.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (241,178,285 samples, 0.21%)</title><rect x="111.7" y="1381" width="2.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="114.67" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,883,420 samples, 0.04%)</title><rect x="100.8" y="1093" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.80" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__nothrow_wait_cv::wait (10,261,698 samples, 0.01%)</title><rect x="104.1" y="1525" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="107.07" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="661" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="671.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (47,080,038 samples, 0.04%)</title><rect x="470.3" y="1589" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="473.32" y="1599.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (20,795,678 samples, 0.02%)</title><rect x="117.3" y="1509" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="120.28" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1189" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (224,131,088 samples, 0.19%)</title><rect x="101.3" y="1317" width="2.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="104.29" y="1327.5" ></text>
</g>
<g >
<title>uv__statx (39,214,206 samples, 0.03%)</title><rect x="105.8" y="1493" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="108.85" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="661" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="671.5" ></text>
</g>
<g >
<title>tcp_current_mss (17,386,920 samples, 0.02%)</title><rect x="273.9" y="1445" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="276.85" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="149" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="159.5" ></text>
</g>
<g >
<title>mmput (609,788,859 samples, 0.53%)</title><rect x="119.9" y="1413" width="6.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="122.85" y="1423.5" ></text>
</g>
<g >
<title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17hd7fe3f84a3ebd9c5E.llvm.12483590319729368095 (14,774,291 samples, 0.01%)</title><rect x="157.5" y="1445" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="160.47" y="1455.5" ></text>
</g>
<g >
<title>[libcrypto.so.3] (39,493,073 samples, 0.03%)</title><rect x="468.2" y="1589" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="471.23" y="1599.5" ></text>
</g>
<g >
<title>proc_reg_read (23,336,403 samples, 0.02%)</title><rect x="106.3" y="1413" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="109.29" y="1423.5" ></text>
</g>
<g >
<title>copyin (843,409,156 samples, 0.73%)</title><rect x="241.4" y="1429" width="8.7" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="244.44" y="1439.5" ></text>
</g>
<g >
<title>task_tick_fair (47,080,038 samples, 0.04%)</title><rect x="470.3" y="1445" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="473.32" y="1455.5" ></text>
</g>
<g >
<title>irq_exit_rcu (79,939,795 samples, 0.07%)</title><rect x="476.9" y="1429" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="479.92" y="1439.5" ></text>
</g>
<g >
<title>__sys_sendto (6,580,881,480 samples, 5.69%)</title><rect x="212.6" y="1525" width="67.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="215.60" y="1535.5" >__sys_s..</text>
</g>
<g >
<title>_start (143,060,617 samples, 0.12%)</title><rect x="281.3" y="1589" width="1.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="284.33" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="549" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="559.5" ></text>
</g>
<g >
<title>poll_idle (654,860,863 samples, 0.57%)</title><rect x="1183.3" y="1397" width="6.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.28" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="469" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="479.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (12,206,429,660 samples, 10.56%)</title><rect x="1048.6" y="1525" width="124.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1051.55" y="1535.5" >cpuidle_idle_call</text>
</g>
<g >
<title>post_alloc_hook (159,757,896 samples, 0.14%)</title><rect x="237.0" y="1381" width="1.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="239.97" y="1391.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (486,761,220 samples, 0.42%)</title><rect x="214.5" y="1445" width="4.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="217.47" y="1455.5" ></text>
</g>
<g >
<title>tcp_data_ready (383,604,336 samples, 0.33%)</title><rect x="261.4" y="997" width="4.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="264.44" y="1007.5" ></text>
</g>
<g >
<title>__fdget (14,845,004 samples, 0.01%)</title><rect x="210.6" y="1493" width="0.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="213.59" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="789" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="421" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,185,789 samples, 0.04%)</title><rect x="100.8" y="1317" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1327.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (284,144,481 samples, 0.25%)</title><rect x="108.7" y="1333" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="111.68" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1077" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1087.5" ></text>
</g>
<g >
<title>start_kernel (735,772,619 samples, 0.64%)</title><rect x="1182.5" y="1541" width="7.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1185.49" y="1551.5" ></text>
</g>
<g >
<title>ksys_write (54,969,638 samples, 0.05%)</title><rect x="471.7" y="1541" width="0.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="474.71" y="1551.5" ></text>
</g>
<g >
<title>do_user_addr_fault (37,218,265 samples, 0.03%)</title><rect x="76.6" y="1541" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="79.61" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="549" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="559.5" ></text>
</g>
<g >
<title>exc_page_fault (28,619,916 samples, 0.02%)</title><rect x="91.5" y="1509" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="94.51" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="901" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1525" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1535.5" ></text>
</g>
<g >
<title>[bash] (19,435,445 samples, 0.02%)</title><rect x="282.1" y="1141" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="285.12" y="1151.5" ></text>
</g>
<g >
<title>ttwu_do_activate (14,570,846 samples, 0.01%)</title><rect x="1013.3" y="1413" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1016.28" y="1423.5" ></text>
</g>
<g >
<title>free_compound_page (102,700,934 samples, 0.09%)</title><rect x="217.3" y="1317" width="1.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="220.28" y="1327.5" ></text>
</g>
<g >
<title>void node::(anonymous namespace)::CompressionStream&lt;node::(anonymous namespace)::ZlibContext&gt;::Write&lt;true&gt; (241,178,285 samples, 0.21%)</title><rect x="111.7" y="1525" width="2.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="114.67" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1333" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="229" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (272,817,940 samples, 0.24%)</title><rect x="100.8" y="1477" width="2.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="277" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (178,685,488 samples, 0.15%)</title><rect x="129.1" y="53" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="132.14" y="63.5" ></text>
</g>
<g >
<title>wake_affine (14,192,742 samples, 0.01%)</title><rect x="264.4" y="853" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="267.36" y="863.5" ></text>
</g>
<g >
<title>mas_wr_modify (9,824,008 samples, 0.01%)</title><rect x="110.7" y="1269" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="113.65" y="1279.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (27,352,458 samples, 0.02%)</title><rect x="100.2" y="1461" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="103.25" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="133" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="143.5" ></text>
</g>
<g >
<title>enqueue_task (306,935,627 samples, 0.27%)</title><rect x="964.1" y="1461" width="3.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="967.08" y="1471.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (14,709,616 samples, 0.01%)</title><rect x="276.4" y="1429" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="279.45" y="1439.5" ></text>
</g>
<g >
<title>tick_sched_handle (53,917,016 samples, 0.05%)</title><rect x="476.0" y="1365" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="479.03" y="1375.5" ></text>
</g>
<g >
<title>NaClSysClockGetTime (47,575,729 samples, 0.04%)</title><rect x="146.3" y="1541" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="149.26" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="421" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="431.5" ></text>
</g>
<g >
<title>napi_consume_skb (126,962,291 samples, 0.11%)</title><rect x="267.5" y="1189" width="1.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="270.53" y="1199.5" ></text>
</g>
<g >
<title>node::InternalCallbackScope::Close (16,193,809 samples, 0.01%)</title><rect x="132.6" y="1461" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="135.56" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (85,982,033 samples, 0.07%)</title><rect x="97.6" y="1509" width="0.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="100.58" y="1519.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (13,501,981 samples, 0.01%)</title><rect x="107.4" y="1541" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="110.38" y="1551.5" ></text>
</g>
<g >
<title>__update_load_avg_se (47,005,846 samples, 0.04%)</title><rect x="966.1" y="1397" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="969.06" y="1407.5" ></text>
</g>
<g >
<title>__handle_mm_fault (28,619,916 samples, 0.02%)</title><rect x="91.5" y="1461" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="94.51" y="1471.5" ></text>
</g>
<g >
<title>rw_verify_area (103,259,540 samples, 0.09%)</title><rect x="183.5" y="1365" width="1.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="186.46" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,559,194 samples, 0.04%)</title><rect x="100.8" y="1125" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1135.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (388,544,385 samples, 0.34%)</title><rect x="963.7" y="1509" width="4.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="966.71" y="1519.5" ></text>
</g>
<g >
<title>_dl_catch_exception (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1269" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="101.70" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (717,566,197 samples, 0.62%)</title><rect x="195.4" y="1589" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="198.43" y="1599.5" ></text>
</g>
<g >
<title>v8::internal::compiler::Reducer::Reduce (13,436,462 samples, 0.01%)</title><rect x="104.8" y="1381" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="107.82" y="1391.5" ></text>
</g>
<g >
<title>__memcpy_fwd (303,995,474 samples, 0.26%)</title><rect x="73.5" y="1589" width="3.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="76.51" y="1599.5" ></text>
</g>
<g >
<title>update_rq_clock (14,342,271 samples, 0.01%)</title><rect x="1178.3" y="1477" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1181.35" y="1487.5" ></text>
</g>
<g >
<title>recvfrom (222,478,172 samples, 0.19%)</title><rect x="208.7" y="1589" width="2.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="211.74" y="1599.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (28,619,916 samples, 0.02%)</title><rect x="91.5" y="1525" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="94.51" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (79,839,387 samples, 0.07%)</title><rect x="95.4" y="1557" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="98.43" y="1567.5" ></text>
</g>
<g >
<title>mas_store_prealloc (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1013" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="101.70" y="1023.5" ></text>
</g>
<g >
<title>inet_ehashfn (18,130,593 samples, 0.02%)</title><rect x="257.3" y="1029" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="260.29" y="1039.5" ></text>
</g>
<g >
<title>__x64_sys_statx (29,652,379 samples, 0.03%)</title><rect x="106.6" y="1429" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="109.60" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,261,698 samples, 0.01%)</title><rect x="104.1" y="1429" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="107.07" y="1439.5" ></text>
</g>
<g >
<title>uv__async_io (24,892,459 samples, 0.02%)</title><rect x="132.5" y="1573" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="135.47" y="1583.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (14,342,759 samples, 0.01%)</title><rect x="209.9" y="1413" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="212.90" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (64,108,232 samples, 0.06%)</title><rect x="90.6" y="1445" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="93.62" y="1455.5" ></text>
</g>
<g >
<title>lockref_put_or_lock (36,601,925 samples, 0.03%)</title><rect x="98.1" y="1381" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="101.09" y="1391.5" ></text>
</g>
<g >
<title>generic_permission (16,006,371 samples, 0.01%)</title><rect x="199.6" y="1381" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="202.56" y="1391.5" ></text>
</g>
<g >
<title>dispatcher (136,027,672 samples, 0.12%)</title><rect x="146.7" y="1509" width="1.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="149.75" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1237" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="101.70" y="1247.5" ></text>
</g>
<g >
<title>node::MakeLibuvRequestCallback&lt;uv_fs_s, void  (16,193,809 samples, 0.01%)</title><rect x="132.6" y="1541" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="135.56" y="1551.5" ></text>
</g>
<g >
<title>napi_complete_done (12,759,347 samples, 0.01%)</title><rect x="474.7" y="1333" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="477.71" y="1343.5" ></text>
</g>
<g >
<title>__read_nocancel (103,755,621 samples, 0.09%)</title><rect x="94.1" y="1589" width="1.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="97.15" y="1599.5" ></text>
</g>
<g >
<title>enqueue_entity (53,869,940 samples, 0.05%)</title><rect x="1175.5" y="1429" width="0.6" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1178.55" y="1439.5" ></text>
</g>
<g >
<title>file_status (12,359,363 samples, 0.01%)</title><rect x="282.0" y="1109" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="284.98" y="1119.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (53,661,721 samples, 0.05%)</title><rect x="17.8" y="1445" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="20.75" y="1455.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (9,884,839 samples, 0.01%)</title><rect x="105.0" y="1397" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="108.00" y="1407.5" ></text>
</g>
<g >
<title>kmalloc_reserve (57,065,962 samples, 0.05%)</title><rect x="275.6" y="1429" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="278.58" y="1439.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (49,341,982 samples, 0.04%)</title><rect x="473.0" y="1525" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="475.98" y="1535.5" ></text>
</g>
<g >
<title>ip_rcv (326,196,299 samples, 0.28%)</title><rect x="63.9" y="1077" width="3.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="66.93" y="1087.5" ></text>
</g>
<g >
<title>ovl_permission (16,006,371 samples, 0.01%)</title><rect x="199.6" y="1413" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="202.56" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,210,077,808 samples, 1.91%)</title><rect x="162.3" y="1445" width="22.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="165.25" y="1455.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="725" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="735.5" ></text>
</g>
<g >
<title>filename_lookup (67,615,269 samples, 0.06%)</title><rect x="152.3" y="1349" width="0.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="155.32" y="1359.5" ></text>
</g>
<g >
<title>rb_next (13,201,076 samples, 0.01%)</title><rect x="65.6" y="949" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="68.58" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1301" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1311.5" ></text>
</g>
<g >
<title>lock_sock_nested (74,031,978 samples, 0.06%)</title><rect x="213.4" y="1477" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="216.38" y="1487.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (51,341,837 samples, 0.04%)</title><rect x="958.1" y="1381" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="961.12" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="965" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_execve (609,788,859 samples, 0.53%)</title><rect x="119.9" y="1557" width="6.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="122.85" y="1567.5" ></text>
</g>
<g >
<title>irq_exit_rcu (15,114,620 samples, 0.01%)</title><rect x="1052.0" y="1429" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1054.98" y="1439.5" ></text>
</g>
<g >
<title>step_into (27,352,458 samples, 0.02%)</title><rect x="100.2" y="1445" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="103.25" y="1455.5" ></text>
</g>
<g >
<title>do_statx (54,572,256 samples, 0.05%)</title><rect x="150.9" y="1381" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="153.87" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="277" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (46,738,613 samples, 0.04%)</title><rect x="91.8" y="1589" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="94.82" y="1599.5" ></text>
</g>
<g >
<title>_ZN7dashmap24DashMap$LT$K$C$V$C$S$GT$10hash_usize17h6cfe3366d499c3fcE.llvm.4461577519387968875 (17,436,554 samples, 0.02%)</title><rect x="147.5" y="1429" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="150.50" y="1439.5" ></text>
</g>
<g >
<title>unmap_page_range (131,472,045 samples, 0.11%)</title><rect x="92.5" y="1413" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="95.50" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1285" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1295.5" ></text>
</g>
<g >
<title>tcp_ack (100,916,798 samples, 0.09%)</title><rect x="14.4" y="997" width="1.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="17.43" y="1007.5" ></text>
</g>
<g >
<title>[libc.so.6] (224,131,088 samples, 0.19%)</title><rect x="101.3" y="1333" width="2.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="104.29" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1413" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="1423.5" ></text>
</g>
<g >
<title>handle_pte_fault (50,063,258 samples, 0.04%)</title><rect x="80.4" y="1269" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="83.38" y="1279.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::_$u7b$$u7b$closure$u7d$$u7d$::h0f435614b81be07b (413,035,771 samples, 0.36%)</title><rect x="185.5" y="1493" width="4.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="188.50" y="1503.5" ></text>
</g>
<g >
<title>dup_mmap (284,144,481 samples, 0.25%)</title><rect x="108.7" y="1317" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="111.68" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1269" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="149" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="159.5" ></text>
</g>
<g >
<title>common_nsleep (21,407,160 samples, 0.02%)</title><rect x="188.8" y="1413" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="191.82" y="1423.5" ></text>
</g>
<g >
<title>NaClSysStatDecoder (140,356,278 samples, 0.12%)</title><rect x="189.7" y="1557" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="192.71" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="677" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="687.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (35,070,896 samples, 0.03%)</title><rect x="281.4" y="1253" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="284.44" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="213" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="223.5" ></text>
</g>
<g >
<title>__legitimize_path (14,523,441 samples, 0.01%)</title><rect x="207.0" y="1429" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="210.04" y="1439.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (843,977,642 samples, 0.73%)</title><rect x="81.9" y="1381" width="8.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="84.93" y="1391.5" ></text>
</g>
<g >
<title>execute_command_internal (51,466,000 samples, 0.04%)</title><rect x="281.3" y="1349" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="284.33" y="1359.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (17,956,115 samples, 0.02%)</title><rect x="202.5" y="1573" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="205.50" y="1583.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (15,560,476 samples, 0.01%)</title><rect x="146.4" y="1509" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="149.36" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (137,929,679 samples, 0.12%)</title><rect x="131.1" y="1541" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="134.06" y="1551.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (10,764,355 samples, 0.01%)</title><rect x="148.5" y="1477" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="151.52" y="1487.5" ></text>
</g>
<g >
<title>_ZN7dashmap24DashMap$LT$K$C$V$C$S$GT$10hash_usize17h6cfe3366d499c3fcE.llvm.4461577519387968875 (10,764,355 samples, 0.01%)</title><rect x="148.5" y="1461" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="151.52" y="1471.5" ></text>
</g>
<g >
<title>dequeue_task_fair (100,849,996 samples, 0.09%)</title><rect x="131.1" y="1397" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="134.06" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,715,534 samples, 0.02%)</title><rect x="100.8" y="805" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,731,485 samples, 0.01%)</title><rect x="100.8" y="597" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.82" y="607.5" ></text>
</g>
<g >
<title>__switch_to_asm (17,790,236 samples, 0.02%)</title><rect x="186.1" y="1445" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="189.09" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,185,789 samples, 0.04%)</title><rect x="100.8" y="1333" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1343.5" ></text>
</g>
<g >
<title>exec_binprm (59,097,908 samples, 0.05%)</title><rect x="282.9" y="1493" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="285.92" y="1503.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (93,855,604 samples, 0.08%)</title><rect x="240.2" y="1429" width="1.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="243.21" y="1439.5" ></text>
</g>
<g >
<title>__mod_timer (18,288,107 samples, 0.02%)</title><rect x="218.9" y="1349" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="221.93" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (27,682,690 samples, 0.02%)</title><rect x="99.3" y="1477" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.27" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="757" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="767.5" ></text>
</g>
<g >
<title>read (27,014,921 samples, 0.02%)</title><rect x="106.3" y="1509" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="109.26" y="1519.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (22,920,725 samples, 0.02%)</title><rect x="189.7" y="1509" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="192.71" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1237" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1247.5" ></text>
</g>
<g >
<title>skb_release_data (109,604,608 samples, 0.09%)</title><rect x="267.7" y="1173" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="270.71" y="1183.5" ></text>
</g>
<g >
<title>_ZN7dashmap24DashMap$LT$K$C$V$C$S$GT$10hash_usize17h6cfe3366d499c3fcE.llvm.4461577519387968875 (14,004,419 samples, 0.01%)</title><rect x="157.1" y="1461" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="160.07" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1429" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1439.5" ></text>
</g>
<g >
<title>node::fs::FSReqCallback::SetReturnValue (37,651,793 samples, 0.03%)</title><rect x="115.2" y="1541" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="118.25" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="309" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="319.5" ></text>
</g>
<g >
<title>do_fault (28,619,916 samples, 0.02%)</title><rect x="91.5" y="1429" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="94.51" y="1439.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (50,394,547 samples, 0.04%)</title><rect x="962.4" y="1445" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="965.42" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (272,817,940 samples, 0.24%)</title><rect x="100.8" y="1413" width="2.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1423.5" ></text>
</g>
<g >
<title>_dl_catch_exception (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1349" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="101.70" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (293,531,480 samples, 0.25%)</title><rect x="126.1" y="1589" width="3.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1599.5" ></text>
</g>
<g >
<title>v8::internal::Object::TransitionAndWriteDataProperty (25,021,973 samples, 0.02%)</title><rect x="114.2" y="1461" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="117.18" y="1471.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (17,281,189 samples, 0.01%)</title><rect x="153.7" y="1365" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="156.72" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="229" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="239.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (34,350,465 samples, 0.03%)</title><rect x="187.0" y="1333" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="189.99" y="1343.5" ></text>
</g>
<g >
<title>__send (666,255,139 samples, 0.58%)</title><rect x="12.1" y="1573" width="6.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="15.06" y="1583.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (290,872,593 samples, 0.25%)</title><rect x="14.2" y="1397" width="3.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="17.19" y="1407.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (21,552,134 samples, 0.02%)</title><rect x="257.9" y="1013" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="260.95" y="1023.5" ></text>
</g>
<g >
<title>v8::internal::Object::AddDataProperty (25,021,973 samples, 0.02%)</title><rect x="114.2" y="1477" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="117.18" y="1487.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (735,772,619 samples, 0.64%)</title><rect x="1182.5" y="1573" width="7.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1185.49" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="981" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="991.5" ></text>
</g>
<g >
<title>__do_softirq (535,818,207 samples, 0.46%)</title><rect x="62.9" y="1173" width="5.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="65.87" y="1183.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (17,533,220 samples, 0.02%)</title><rect x="1051.7" y="1397" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1054.71" y="1407.5" ></text>
</g>
<g >
<title>recv (5,097,906,166 samples, 4.41%)</title><rect x="18.9" y="1573" width="52.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="21.86" y="1583.5" >recv</text>
</g>
<g >
<title>InotifyBackend::handleSubscription (279,785,960 samples, 0.24%)</title><rect x="100.7" y="1557" width="2.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="103.74" y="1567.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,374,251 samples, 0.01%)</title><rect x="474.7" y="1413" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="477.71" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (609,788,859 samples, 0.53%)</title><rect x="119.9" y="1573" width="6.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="122.85" y="1583.5" ></text>
</g>
<g >
<title>do_idle (13,069,505,707 samples, 11.31%)</title><rect x="1048.5" y="1541" width="133.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1051.52" y="1551.5" >do_idle</text>
</g>
<g >
<title>ttwu_do_activate (89,269,909 samples, 0.08%)</title><rect x="475.0" y="1333" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="478.03" y="1343.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (588,214,920 samples, 0.51%)</title><rect x="62.3" y="1189" width="6.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="65.33" y="1199.5" ></text>
</g>
<g >
<title>__pmd_alloc (40,835,274 samples, 0.04%)</title><rect x="109.3" y="1269" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="112.26" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="629" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="639.5" ></text>
</g>
<g >
<title>drain_stock (48,287,372 samples, 0.04%)</title><rect x="58.5" y="1349" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="61.50" y="1359.5" ></text>
</g>
<g >
<title>sk_reset_timer (52,037,118 samples, 0.05%)</title><rect x="272.6" y="1397" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="275.57" y="1407.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (24,616,074 samples, 0.02%)</title><rect x="191.8" y="1525" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="194.79" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="837" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="309" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="319.5" ></text>
</g>
<g >
<title>ip_finish_output2 (283,084,697 samples, 0.24%)</title><rect x="14.2" y="1285" width="2.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="17.23" y="1295.5" ></text>
</g>
<g >
<title>writen (34,390,842 samples, 0.03%)</title><rect x="135.2" y="1525" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="138.18" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1141" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1151.5" ></text>
</g>
<g >
<title>check_heap_object (50,287,172 samples, 0.04%)</title><rect x="240.6" y="1413" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="243.57" y="1423.5" ></text>
</g>
<g >
<title>v8::internal::KeyAccumulator::CollectOwnJSProxyTargetKeys (10,629,741 samples, 0.01%)</title><rect x="116.4" y="1477" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="119.43" y="1487.5" ></text>
</g>
<g >
<title>exc_page_fault (9,884,839 samples, 0.01%)</title><rect x="105.0" y="1381" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="108.00" y="1391.5" ></text>
</g>
<g >
<title>perf_mmap__push (35,964,518 samples, 0.03%)</title><rect x="135.2" y="1557" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="138.16" y="1567.5" ></text>
</g>
<g >
<title>handle_mm_fault (28,619,916 samples, 0.02%)</title><rect x="91.5" y="1477" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="94.51" y="1487.5" ></text>
</g>
<g >
<title>handle_pte_fault (37,218,265 samples, 0.03%)</title><rect x="76.6" y="1493" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="79.61" y="1503.5" ></text>
</g>
<g >
<title>fstatat64 (12,359,363 samples, 0.01%)</title><rect x="282.0" y="1093" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="284.98" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,123,147 samples, 0.02%)</title><rect x="100.8" y="981" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.82" y="991.5" ></text>
</g>
<g >
<title>__napi_poll (1,311,381,374 samples, 1.13%)</title><rect x="254.1" y="1189" width="13.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="257.14" y="1199.5" ></text>
</g>
<g >
<title>try_charge_memcg (30,962,978 samples, 0.03%)</title><rect x="261.1" y="965" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="264.12" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1525" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1535.5" ></text>
</g>
<g >
<title>v8::internal::TranslatedState::CreateNextTranslatedValue (17,426,988 samples, 0.02%)</title><rect x="115.0" y="1397" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="118.02" y="1407.5" ></text>
</g>
<g >
<title>run_rebalance_domains (23,327,267 samples, 0.02%)</title><rect x="477.1" y="1381" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="480.15" y="1391.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineImpl::CreateGraph (13,675,905 samples, 0.01%)</title><rect x="104.3" y="1477" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="107.28" y="1487.5" ></text>
</g>
<g >
<title>__check_object_size (105,330,208 samples, 0.09%)</title><rect x="38.7" y="1381" width="1.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="41.69" y="1391.5" ></text>
</g>
<g >
<title>getname_flags (23,706,257 samples, 0.02%)</title><rect x="151.4" y="1381" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="154.43" y="1391.5" ></text>
</g>
<g >
<title>local_clock_noinstr (50,980,941 samples, 0.04%)</title><rect x="482.8" y="1461" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="485.81" y="1471.5" ></text>
</g>
<g >
<title>worker (175,754,406 samples, 0.15%)</title><rect x="105.4" y="1557" width="1.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="108.38" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,252,342 samples, 0.01%)</title><rect x="100.8" y="645" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="655.5" ></text>
</g>
<g >
<title>[bash] (46,123,643 samples, 0.04%)</title><rect x="282.3" y="1381" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="285.32" y="1391.5" ></text>
</g>
<g >
<title>[bash] (45,470,974 samples, 0.04%)</title><rect x="281.9" y="1285" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.86" y="1295.5" ></text>
</g>
<g >
<title>mod_memcg_state (67,524,451 samples, 0.06%)</title><rect x="277.6" y="1397" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="280.64" y="1407.5" ></text>
</g>
<g >
<title>__pte_offset_map (50,063,258 samples, 0.04%)</title><rect x="80.4" y="1237" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="83.38" y="1247.5" ></text>
</g>
<g >
<title>capable_wrt_inode_uidgid (12,612,856 samples, 0.01%)</title><rect x="201.0" y="1349" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="203.96" y="1359.5" ></text>
</g>
<g >
<title>ksys_read (27,014,921 samples, 0.02%)</title><rect x="106.3" y="1445" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="109.26" y="1455.5" ></text>
</g>
<g >
<title>__ip_finish_output (669,131,520 samples, 0.58%)</title><rect x="61.6" y="1269" width="6.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="64.60" y="1279.5" ></text>
</g>
<g >
<title>load_elf_binary (59,097,908 samples, 0.05%)</title><rect x="282.9" y="1461" width="0.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="285.92" y="1471.5" ></text>
</g>
<g >
<title>cache_from_obj (14,021,029 samples, 0.01%)</title><rect x="215.7" y="1349" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="218.71" y="1359.5" ></text>
</g>
<g >
<title>_start (20,795,678 samples, 0.02%)</title><rect x="117.3" y="1589" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="120.28" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (50,112,859 samples, 0.04%)</title><rect x="962.9" y="1445" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="965.93" y="1455.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (131,472,045 samples, 0.11%)</title><rect x="92.5" y="1397" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="95.50" y="1407.5" ></text>
</g>
<g >
<title>tcp_ack (47,138,520 samples, 0.04%)</title><rect x="259.8" y="1013" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="262.80" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (12,359,363 samples, 0.01%)</title><rect x="282.0" y="1061" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="284.98" y="1071.5" ></text>
</g>
<g >
<title>ksys_read (2,171,232,360 samples, 1.88%)</title><rect x="162.4" y="1397" width="22.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="165.43" y="1407.5" >k..</text>
</g>
<g >
<title>neigh_hh_output (283,084,697 samples, 0.24%)</title><rect x="14.2" y="1269" width="2.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="17.23" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (34,204,336 samples, 0.03%)</title><rect x="158.3" y="1445" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="161.33" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,882,281,106 samples, 3.36%)</title><rect x="973.6" y="1461" width="39.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="976.64" y="1471.5" >cpu..</text>
</g>
<g >
<title>v8::internal::compiler::Reducer::Reduce (9,884,839 samples, 0.01%)</title><rect x="104.3" y="1381" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="107.31" y="1391.5" ></text>
</g>
<g >
<title>malloc (50,481,270 samples, 0.04%)</title><rect x="287.1" y="1461" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="290.12" y="1471.5" ></text>
</g>
<g >
<title>__slab_free (19,794,656 samples, 0.02%)</title><rect x="215.0" y="1365" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="218.05" y="1375.5" ></text>
</g>
<g >
<title>tcp_poll (41,096,512 samples, 0.04%)</title><rect x="197.1" y="1445" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="200.11" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1077" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12,359,363 samples, 0.01%)</title><rect x="282.0" y="1077" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="284.98" y="1087.5" ></text>
</g>
<g >
<title>[bash] (46,123,643 samples, 0.04%)</title><rect x="282.3" y="1317" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="285.32" y="1327.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (37,218,265 samples, 0.03%)</title><rect x="76.6" y="1573" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="79.61" y="1583.5" ></text>
</g>
<g >
<title>dequeue_task_fair (28,738,319 samples, 0.02%)</title><rect x="187.9" y="1301" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="190.93" y="1311.5" ></text>
</g>
<g >
<title>pcache1Unpin (50,335,409 samples, 0.04%)</title><rect x="70.9" y="1573" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="73.91" y="1583.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (12,418,848 samples, 0.01%)</title><rect x="91.4" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="94.38" y="1551.5" ></text>
</g>
<g >
<title>try_charge_memcg (88,133,743 samples, 0.08%)</title><rect x="278.3" y="1397" width="0.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="281.33" y="1407.5" ></text>
</g>
<g >
<title>blk_cgroup_congested (50,481,270 samples, 0.04%)</title><rect x="287.1" y="1301" width="0.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="290.12" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33,105,745 samples, 0.03%)</title><rect x="198.1" y="1557" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="201.08" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1093" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1103.5" ></text>
</g>
<g >
<title>void std::deque&lt;v8::internal::TranslatedValue, std::allocator&lt;v8::internal::TranslatedValue&gt; &gt;::_M_push_back_aux&lt;v8::internal::TranslatedValue const&amp;&gt; (36,924,639 samples, 0.03%)</title><rect x="114.4" y="1397" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="117.44" y="1407.5" ></text>
</g>
<g >
<title>tcp_check_space (52,365,118 samples, 0.05%)</title><rect x="258.4" y="1029" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="261.42" y="1039.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (14,709,616 samples, 0.01%)</title><rect x="276.4" y="1445" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="279.45" y="1455.5" ></text>
</g>
<g >
<title>net_rx_action (265,284,052 samples, 0.23%)</title><rect x="14.4" y="1189" width="2.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="17.38" y="1199.5" ></text>
</g>
<g >
<title>pick_next_task (20,082,540 samples, 0.02%)</title><rect x="969.4" y="1493" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="972.38" y="1503.5" ></text>
</g>
<g >
<title>__alloc_skb (210,065,014 samples, 0.18%)</title><rect x="274.3" y="1445" width="2.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="277.30" y="1455.5" ></text>
</g>
<g >
<title>sock_rfree (162,729,008 samples, 0.14%)</title><rect x="57.3" y="1429" width="1.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="60.33" y="1439.5" ></text>
</g>
<g >
<title>exc_page_fault (37,218,265 samples, 0.03%)</title><rect x="76.6" y="1557" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="79.61" y="1567.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloadsHelper (843,977,642 samples, 0.73%)</title><rect x="81.9" y="1445" width="8.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="84.93" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="949" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="959.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,720,563 samples, 0.01%)</title><rect x="99.4" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.36" y="1423.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (20,685,467 samples, 0.02%)</title><rect x="70.7" y="1493" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="73.66" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1429" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1439.5" ></text>
</g>
<g >
<title>__fdget_pos (66,565,109 samples, 0.06%)</title><rect x="162.4" y="1381" width="0.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="165.43" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (17,202,797 samples, 0.01%)</title><rect x="209.4" y="1445" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="212.37" y="1455.5" ></text>
</g>
<g >
<title>sk_reset_timer (44,316,263 samples, 0.04%)</title><rect x="271.5" y="1381" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="274.54" y="1391.5" ></text>
</g>
<g >
<title>vfs_write (34,390,842 samples, 0.03%)</title><rect x="135.2" y="1413" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="138.18" y="1423.5" ></text>
</g>
<g >
<title>__do_softirq (15,114,620 samples, 0.01%)</title><rect x="1052.0" y="1397" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1054.98" y="1407.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSequence::SetSourcePosition (9,884,839 samples, 0.01%)</title><rect x="105.0" y="1413" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="108.00" y="1423.5" ></text>
</g>
<g >
<title>sock_poll (115,131,163 samples, 0.10%)</title><rect x="196.4" y="1461" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="199.36" y="1471.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (45,848,460 samples, 0.04%)</title><rect x="111.1" y="1285" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="114.11" y="1295.5" ></text>
</g>
<g >
<title>ion (34,390,842 samples, 0.03%)</title><rect x="135.2" y="1509" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="138.18" y="1519.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (293,891,204 samples, 0.25%)</title><rect x="108.7" y="1525" width="3.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="111.67" y="1535.5" ></text>
</g>
<g >
<title>rw_verify_area (26,621,010 samples, 0.02%)</title><rect x="182.9" y="1317" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="185.92" y="1327.5" ></text>
</g>
<g >
<title>security_file_permission (103,259,540 samples, 0.09%)</title><rect x="183.5" y="1349" width="1.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="186.46" y="1359.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (41,869,238 samples, 0.04%)</title><rect x="153.2" y="1349" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="156.20" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_execve (59,097,908 samples, 0.05%)</title><rect x="282.9" y="1557" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="285.92" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1237" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1247.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (17,224,681 samples, 0.01%)</title><rect x="284.0" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="286.99" y="1567.5" ></text>
</g>
<g >
<title>enqueue_task_fair (276,187,963 samples, 0.24%)</title><rect x="1175.4" y="1445" width="2.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1178.45" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1301" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="101.70" y="1311.5" ></text>
</g>
<g >
<title>neigh_hh_output (1,738,069,366 samples, 1.50%)</title><rect x="252.3" y="1285" width="17.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="255.30" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1445" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="917" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="927.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSelector::VisitBlock (9,884,839 samples, 0.01%)</title><rect x="105.0" y="1429" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="108.00" y="1439.5" ></text>
</g>
<g >
<title>[bash] (45,470,974 samples, 0.04%)</title><rect x="281.9" y="1349" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.86" y="1359.5" ></text>
</g>
<g >
<title>update_blocked_averages (11,168,944 samples, 0.01%)</title><rect x="1052.0" y="1365" width="0.1" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1055.02" y="1375.5" ></text>
</g>
<g >
<title>mutex_lock (18,101,875 samples, 0.02%)</title><rect x="162.9" y="1365" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="165.93" y="1375.5" ></text>
</g>
<g >
<title>update_curr (103,744,748 samples, 0.09%)</title><rect x="33.9" y="1301" width="1.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="36.94" y="1311.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (340,641,674 samples, 0.29%)</title><rect x="261.9" y="965" width="3.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="264.88" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="901" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="911.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (609,788,859 samples, 0.53%)</title><rect x="119.9" y="1509" width="6.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="122.85" y="1519.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_insert (16,720,859 samples, 0.01%)</title><rect x="150.3" y="1461" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="153.33" y="1471.5" ></text>
</g>
<g >
<title>check_stack_object (11,625,161 samples, 0.01%)</title><rect x="241.2" y="1429" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="244.17" y="1439.5" ></text>
</g>
<g >
<title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;true&gt; (13,501,981 samples, 0.01%)</title><rect x="107.4" y="1525" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="110.38" y="1535.5" ></text>
</g>
<g >
<title>mod_timer (52,037,118 samples, 0.05%)</title><rect x="272.6" y="1381" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="275.57" y="1391.5" ></text>
</g>
<g >
<title>tick_sched_handle (11,669,208 samples, 0.01%)</title><rect x="1045.3" y="1493" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1048.27" y="1503.5" ></text>
</g>
<g >
<title>ip_finish_output (1,780,258,374 samples, 1.54%)</title><rect x="252.0" y="1333" width="18.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="254.96" y="1343.5" ></text>
</g>
<g >
<title>vfs_write (11,331,967 samples, 0.01%)</title><rect x="472.2" y="1525" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="475.16" y="1535.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (12,152,852 samples, 0.01%)</title><rect x="282.8" y="1589" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="285.80" y="1599.5" ></text>
</g>
<g >
<title>[bash] (10,645,681 samples, 0.01%)</title><rect x="281.3" y="1317" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.33" y="1327.5" ></text>
</g>
<g >
<title>v8::internal::TranslationArrayIterator::Next (17,426,988 samples, 0.02%)</title><rect x="115.0" y="1381" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="118.02" y="1391.5" ></text>
</g>
<g >
<title>generic_perform_write (32,748,831 samples, 0.03%)</title><rect x="135.2" y="1301" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="138.19" y="1311.5" ></text>
</g>
<g >
<title>psi_task_switch (48,215,988 samples, 0.04%)</title><rect x="971.8" y="1509" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="974.83" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1477" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1487.5" ></text>
</g>
<g >
<title>woken_wake_function (247,455,163 samples, 0.21%)</title><rect x="262.7" y="917" width="2.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="265.74" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1541" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1551.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (22,164,411 samples, 0.02%)</title><rect x="268.9" y="1173" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="271.91" y="1183.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (56,697,268 samples, 0.05%)</title><rect x="961.8" y="1477" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="964.80" y="1487.5" ></text>
</g>
<g >
<title>uv__fs_stat (29,652,379 samples, 0.03%)</title><rect x="106.6" y="1525" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="109.60" y="1535.5" ></text>
</g>
<g >
<title>user_path_at_empty (85,982,033 samples, 0.07%)</title><rect x="97.6" y="1477" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="100.58" y="1487.5" ></text>
</g>
<g >
<title>v8::internal::Map::TransitionToDataProperty (25,021,973 samples, 0.02%)</title><rect x="114.2" y="1429" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="117.18" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,185,789 samples, 0.04%)</title><rect x="100.8" y="1381" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1391.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (40,578,003 samples, 0.04%)</title><rect x="261.0" y="981" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="264.02" y="991.5" ></text>
</g>
<g >
<title>tcp_write_xmit (2,249,206,019 samples, 1.95%)</title><rect x="250.5" y="1429" width="23.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="253.51" y="1439.5" >t..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="933" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="943.5" ></text>
</g>
<g >
<title>ovl_permission (26,341,502 samples, 0.02%)</title><rect x="152.7" y="1285" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="155.74" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="197" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1349" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1359.5" ></text>
</g>
<g >
<title>rcu_gp_fqs_loop (12,381,892 samples, 0.01%)</title><rect x="472.4" y="1525" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="475.40" y="1535.5" ></text>
</g>
<g >
<title>cpu_startup_entry (735,772,619 samples, 0.64%)</title><rect x="1182.5" y="1493" width="7.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1185.49" y="1503.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (30,003,387 samples, 0.03%)</title><rect x="268.9" y="1189" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="271.91" y="1199.5" ></text>
</g>
<g >
<title>handle_pte_fault (35,070,896 samples, 0.03%)</title><rect x="281.4" y="1173" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="284.44" y="1183.5" ></text>
</g>
<g >
<title>__refill_stock (48,287,372 samples, 0.04%)</title><rect x="58.5" y="1365" width="0.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="61.50" y="1375.5" ></text>
</g>
<g >
<title>uv__io_poll (182,589,385 samples, 0.16%)</title><rect x="131.0" y="1589" width="1.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="134.05" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (212,283,817 samples, 0.18%)</title><rect x="132.9" y="1509" width="2.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="135.93" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (16,129,806 samples, 0.01%)</title><rect x="100.8" y="725" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.82" y="735.5" ></text>
</g>
<g >
<title>copy_pte_range (87,369,813 samples, 0.08%)</title><rect x="109.7" y="1269" width="0.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="112.70" y="1279.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (242,854,747 samples, 0.21%)</title><rect x="274.1" y="1461" width="2.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="277.12" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (4,930,441,947 samples, 4.27%)</title><rect x="19.8" y="1525" width="50.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="22.81" y="1535.5" >__x64..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1205" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="1215.5" ></text>
</g>
<g >
<title>[libc.so.6] (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1477" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="101.70" y="1487.5" ></text>
</g>
<g >
<title>prepare_task_switch (17,624,869 samples, 0.02%)</title><rect x="969.6" y="1493" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="972.58" y="1503.5" ></text>
</g>
<g >
<title>free_pgtables (30,590,720 samples, 0.03%)</title><rect x="119.9" y="1365" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="122.85" y="1375.5" ></text>
</g>
<g >
<title>psi_task_change (23,588,072 samples, 0.02%)</title><rect x="475.7" y="1301" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="478.70" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="133" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="143.5" ></text>
</g>
<g >
<title>mas_wr_modify (38,065,885 samples, 0.03%)</title><rect x="98.7" y="981" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="101.70" y="991.5" ></text>
</g>
<g >
<title>exit_mm (10,189,303 samples, 0.01%)</title><rect x="287.8" y="1509" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="290.79" y="1519.5" ></text>
</g>
<g >
<title>do_futex (240,155,545 samples, 0.21%)</title><rect x="1045.4" y="1541" width="2.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1048.40" y="1551.5" ></text>
</g>
<g >
<title>ip_local_out (287,055,458 samples, 0.25%)</title><rect x="14.2" y="1349" width="2.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="17.19" y="1359.5" ></text>
</g>
<g >
<title>try_to_wake_up (240,155,545 samples, 0.21%)</title><rect x="1045.4" y="1493" width="2.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1048.40" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (34,514,876 samples, 0.03%)</title><rect x="99.3" y="1493" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.27" y="1503.5" ></text>
</g>
<g >
<title>main (10,412,242 samples, 0.01%)</title><rect x="281.2" y="1573" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="284.21" y="1583.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (17,224,681 samples, 0.01%)</title><rect x="284.0" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="286.99" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1125" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1135.5" ></text>
</g>
<g >
<title>destroy_large_folio (111,284,064 samples, 0.10%)</title><rect x="217.2" y="1333" width="1.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="220.19" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="549" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="559.5" ></text>
</g>
<g >
<title>process_backlog (1,302,777,887 samples, 1.13%)</title><rect x="254.2" y="1173" width="13.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="257.23" y="1183.5" ></text>
</g>
<g >
<title>ip_output (1,789,069,104 samples, 1.55%)</title><rect x="251.9" y="1349" width="18.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="254.87" y="1359.5" ></text>
</g>
<g >
<title>select_task_rq_fair (240,155,545 samples, 0.21%)</title><rect x="1045.4" y="1477" width="2.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1048.40" y="1487.5" ></text>
</g>
<g >
<title>cp_statx (27,492,158 samples, 0.02%)</title><rect x="151.0" y="1365" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="153.96" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1461" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="101.70" y="1471.5" ></text>
</g>
<g >
<title>__alloc_pages (260,604,618 samples, 0.23%)</title><rect x="138.0" y="1429" width="2.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="140.96" y="1439.5" ></text>
</g>
<g >
<title>refactoring::get_counterparts (843,977,642 samples, 0.73%)</title><rect x="81.9" y="1509" width="8.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="84.93" y="1519.5" ></text>
</g>
<g >
<title>ksys_write (34,390,842 samples, 0.03%)</title><rect x="135.2" y="1429" width="0.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="138.18" y="1439.5" ></text>
</g>
<g >
<title>syscall (39,214,206 samples, 0.03%)</title><rect x="105.8" y="1477" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="108.85" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (19,497,501 samples, 0.02%)</title><rect x="284.0" y="1589" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="286.99" y="1599.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (41,038,764 samples, 0.04%)</title><rect x="91.4" y="1557" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="94.38" y="1567.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1,763,972,613 samples, 1.53%)</title><rect x="252.0" y="1301" width="18.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="255.04" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (59,097,908 samples, 0.05%)</title><rect x="282.9" y="1573" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="285.92" y="1583.5" ></text>
</g>
<g >
<title>____fput (89,976,334 samples, 0.08%)</title><rect x="203.8" y="1477" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="206.80" y="1487.5" ></text>
</g>
<g >
<title>vfs_statx (17,835,987 samples, 0.02%)</title><rect x="151.2" y="1365" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="154.24" y="1375.5" ></text>
</g>
<g >
<title>__folio_put (119,845,056 samples, 0.10%)</title><rect x="217.1" y="1349" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="220.10" y="1359.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1349" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="102.78" y="1359.5" ></text>
</g>
<g >
<title>do_dentry_open (171,307,750 samples, 0.15%)</title><rect x="199.9" y="1429" width="1.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="202.90" y="1439.5" ></text>
</g>
<g >
<title>command_substitute (46,123,643 samples, 0.04%)</title><rect x="282.3" y="1301" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="285.32" y="1311.5" ></text>
</g>
<g >
<title>[sleep] (147,030,661 samples, 0.13%)</title><rect x="286.1" y="1589" width="1.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="289.14" y="1599.5" ></text>
</g>
<g >
<title>napi_consume_skb (54,829,682 samples, 0.05%)</title><rect x="67.8" y="1141" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="70.78" y="1151.5" ></text>
</g>
<g >
<title>do_idle (4,034,054,228 samples, 3.49%)</title><rect x="973.6" y="1477" width="41.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="976.64" y="1487.5" >do_..</text>
</g>
<g >
<title>cpuidle_enter (47,599,397,233 samples, 41.19%)</title><rect x="473.6" y="1493" width="486.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="476.59" y="1503.5" >cpuidle_enter</text>
</g>
<g >
<title>security_file_permission (26,621,010 samples, 0.02%)</title><rect x="182.9" y="1301" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="185.92" y="1311.5" ></text>
</g>
<g >
<title>NaClSysCloseDecoder (136,027,672 samples, 0.12%)</title><rect x="146.7" y="1557" width="1.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="149.75" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="453" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="463.5" ></text>
</g>
<g >
<title>__handle_mm_fault (269,599,561 samples, 0.23%)</title><rect x="138.0" y="1509" width="2.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="140.96" y="1519.5" ></text>
</g>
<g >
<title>std::__condvar::wait (10,261,698 samples, 0.01%)</title><rect x="104.1" y="1509" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="107.07" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="325" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="335.5" ></text>
</g>
<g >
<title>v8::internal::TranslatedState::CreateNextTranslatedValue (36,924,639 samples, 0.03%)</title><rect x="114.4" y="1413" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="117.44" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="869" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1509" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1519.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (14,912,677 samples, 0.01%)</title><rect x="219.2" y="1413" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="222.20" y="1423.5" ></text>
</g>
<g >
<title>ip_finish_output (283,084,697 samples, 0.24%)</title><rect x="14.2" y="1317" width="2.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="17.23" y="1327.5" ></text>
</g>
<g >
<title>_Fork (284,144,481 samples, 0.25%)</title><rect x="108.7" y="1445" width="2.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="111.68" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,823,302 samples, 0.04%)</title><rect x="100.8" y="1269" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1279.5" ></text>
</g>
<g >
<title>sqlite3VdbeFinishMoveto (509,969,772 samples, 0.44%)</title><rect x="83.0" y="1365" width="5.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="85.97" y="1375.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (35,671,184 samples, 0.03%)</title><rect x="145.4" y="1541" width="0.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="148.36" y="1551.5" ></text>
</g>
<g >
<title>call_cpuidle (732,919,222 samples, 0.63%)</title><rect x="1182.5" y="1445" width="7.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1185.49" y="1455.5" ></text>
</g>
<g >
<title>cpu_startup_entry (49,058,884,054 samples, 42.45%)</title><rect x="472.7" y="1557" width="500.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="475.68" y="1567.5" >cpu_startup_entry</text>
</g>
<g >
<title>copy_process (284,144,481 samples, 0.25%)</title><rect x="108.7" y="1349" width="2.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="111.68" y="1359.5" ></text>
</g>
<g >
<title>v8::internal::LookupIterator::PrepareTransitionToDataProperty (25,021,973 samples, 0.02%)</title><rect x="114.2" y="1445" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="117.18" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (212,283,817 samples, 0.18%)</title><rect x="132.9" y="1525" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="135.93" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_write (34,390,842 samples, 0.03%)</title><rect x="135.2" y="1445" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="138.18" y="1455.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (17,348,854 samples, 0.02%)</title><rect x="136.7" y="1573" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="139.69" y="1583.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::_open (15,650,906 samples, 0.01%)</title><rect x="151.8" y="1461" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="154.76" y="1471.5" ></text>
</g>
<g >
<title>do_idle (735,772,619 samples, 0.64%)</title><rect x="1182.5" y="1477" width="7.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1185.49" y="1487.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (47,575,729 samples, 0.04%)</title><rect x="146.3" y="1525" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="149.26" y="1535.5" ></text>
</g>
<g >
<title>getgrgid_r (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1589" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="102.78" y="1599.5" ></text>
</g>
<g >
<title>common_nsleep (224,521,343 samples, 0.19%)</title><rect x="186.5" y="1397" width="2.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="189.53" y="1407.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSelector::SelectInstructions (9,884,839 samples, 0.01%)</title><rect x="105.0" y="1445" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="108.00" y="1455.5" ></text>
</g>
<g >
<title>load_balance (11,067,620 samples, 0.01%)</title><rect x="477.2" y="1349" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="480.18" y="1359.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (12,759,347 samples, 0.01%)</title><rect x="474.7" y="1317" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="477.71" y="1327.5" ></text>
</g>
<g >
<title>execute_command_internal (45,470,974 samples, 0.04%)</title><rect x="281.9" y="1365" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="284.86" y="1375.5" ></text>
</g>
<g >
<title>_ZN9rustposix9safeposix8syscalls9net_calls50_$LT$impl$u20$rustposix..safeposix..cage..Cage$GT$11recv_common17h6d060feac21fc6c0E.llvm.3610554567128930750 (30,900,593 samples, 0.03%)</title><rect x="185.0" y="1477" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="188.00" y="1487.5" ></text>
</g>
<g >
<title>inode_permission (44,582,616 samples, 0.04%)</title><rect x="152.6" y="1301" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="155.56" y="1311.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (18,043,330 samples, 0.02%)</title><rect x="148.0" y="1413" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="150.95" y="1423.5" ></text>
</g>
<g >
<title>free_unref_page (32,744,338 samples, 0.03%)</title><rect x="218.0" y="1301" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="220.99" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (34,514,876 samples, 0.03%)</title><rect x="99.3" y="1509" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.27" y="1519.5" ></text>
</g>
<g >
<title>fsnotify (10,138,017 samples, 0.01%)</title><rect x="201.5" y="1365" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="204.55" y="1375.5" ></text>
</g>
<g >
<title>native_sched_clock (95,313,770 samples, 0.08%)</title><rect x="958.6" y="1413" width="1.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="961.64" y="1423.5" ></text>
</g>
<g >
<title>execute_command_internal (143,060,617 samples, 0.12%)</title><rect x="281.3" y="1445" width="1.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="284.33" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1493" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1503.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (97,706,299 samples, 0.08%)</title><rect x="183.5" y="1333" width="1.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="186.51" y="1343.5" ></text>
</g>
<g >
<title>__slab_free (27,251,068 samples, 0.02%)</title><rect x="215.4" y="1349" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="218.43" y="1359.5" ></text>
</g>
<g >
<title>cpuacct_charge (51,061,681 samples, 0.04%)</title><rect x="34.5" y="1285" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="37.47" y="1295.5" ></text>
</g>
<g >
<title>do_user_addr_fault (25,061,264 samples, 0.02%)</title><rect x="282.4" y="1189" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="285.38" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (618,352,662 samples, 0.54%)</title><rect x="12.5" y="1557" width="6.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="15.55" y="1567.5" ></text>
</g>
<g >
<title>from_kuid_munged (17,867,146 samples, 0.02%)</title><rect x="151.1" y="1349" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="154.06" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="261" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="271.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::pread_syscall (2,848,479,559 samples, 2.46%)</title><rect x="155.7" y="1493" width="29.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="158.73" y="1503.5" >ru..</text>
</g>
<g >
<title>tcp_ack_update_rtt (96,223,537 samples, 0.08%)</title><rect x="66.2" y="933" width="1.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="69.25" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_statx (27,352,458 samples, 0.02%)</title><rect x="100.2" y="1541" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="103.25" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="677" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="687.5" ></text>
</g>
<g >
<title>dispatcher (19,522,639 samples, 0.02%)</title><rect x="148.4" y="1509" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="151.43" y="1519.5" ></text>
</g>
<g >
<title>NaClSysPread (2,929,792,522 samples, 2.54%)</title><rect x="154.9" y="1541" width="29.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="157.90" y="1551.5" >Na..</text>
</g>
<g >
<title>lockref_put_return (10,079,561 samples, 0.01%)</title><rect x="153.0" y="1333" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="156.01" y="1343.5" ></text>
</g>
<g >
<title>[perf-1062659.map] (18,835,728 samples, 0.02%)</title><rect x="107.3" y="1589" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="110.33" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1365" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1375.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (204,887,186 samples, 0.18%)</title><rect x="14.4" y="1077" width="2.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="17.43" y="1087.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (36,558,922 samples, 0.03%)</title><rect x="147.8" y="1429" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="150.76" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="885" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="895.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (4,962,276,014 samples, 4.29%)</title><rect x="143.7" y="1573" width="50.7" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="146.73" y="1583.5" >NaClS..</text>
</g>
<g >
<title>NaClSysOpenDecoder (597,406,856 samples, 0.52%)</title><rect x="148.6" y="1557" width="6.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="151.63" y="1567.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (5,837,730,824 samples, 5.05%)</title><rect x="219.8" y="1477" width="59.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="222.77" y="1487.5" >tcp_se..</text>
</g>
<g >
<title>mod_memcg_state (14,709,616 samples, 0.01%)</title><rect x="276.4" y="1413" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="279.45" y="1423.5" ></text>
</g>
<g >
<title>woken_wake_function (24,152,390 samples, 0.02%)</title><rect x="265.6" y="933" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="268.63" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1589" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="661" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1509" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1519.5" ></text>
</g>
<g >
<title>__schedule (124,024,436 samples, 0.11%)</title><rect x="187.6" y="1333" width="1.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="190.56" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (143,028,822 samples, 0.12%)</title><rect x="92.4" y="1589" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="95.38" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1189" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="1199.5" ></text>
</g>
<g >
<title>ls (514,401,773 samples, 0.45%)</title><rect x="95.3" y="1605" width="5.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="98.28" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1557" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1567.5" ></text>
</g>
<g >
<title>native_sched_clock (17,707,329 samples, 0.02%)</title><rect x="265.1" y="805" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="268.09" y="815.5" ></text>
</g>
<g >
<title>futex_wake (240,155,545 samples, 0.21%)</title><rect x="1045.4" y="1525" width="2.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1048.40" y="1535.5" ></text>
</g>
<g >
<title>mmput (134,716,303 samples, 0.12%)</title><rect x="92.5" y="1493" width="1.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="95.47" y="1503.5" ></text>
</g>
<g >
<title>reweight_entity (50,547,087 samples, 0.04%)</title><rect x="33.4" y="1285" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="36.42" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (375,557,085 samples, 0.32%)</title><rect x="77.6" y="1541" width="3.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="80.57" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1125" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="1135.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (318,076,375 samples, 0.28%)</title><rect x="191.1" y="1557" width="3.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="194.15" y="1567.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (277,001,086 samples, 0.24%)</title><rect x="100.8" y="1541" width="2.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="103.75" y="1551.5" ></text>
</g>
<g >
<title>filemap_get_pages (50,114,032 samples, 0.04%)</title><rect x="80.9" y="1397" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="83.90" y="1407.5" ></text>
</g>
<g >
<title>lind_close (136,027,672 samples, 0.12%)</title><rect x="146.7" y="1525" width="1.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="149.75" y="1535.5" ></text>
</g>
<g >
<title>uv__fs_fstat (39,214,206 samples, 0.03%)</title><rect x="105.8" y="1525" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="108.85" y="1535.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (54,950,041 samples, 0.05%)</title><rect x="282.9" y="1365" width="0.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="285.93" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="693" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1013" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,185,789 samples, 0.04%)</title><rect x="100.8" y="1349" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (257,773,176 samples, 0.22%)</title><rect x="158.7" y="1445" width="2.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="161.68" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1269" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1279.5" ></text>
</g>
<g >
<title>path_put (17,400,289 samples, 0.02%)</title><rect x="206.6" y="1509" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="209.61" y="1519.5" ></text>
</g>
<g >
<title>_dl_catch_exception (9,877,951 samples, 0.01%)</title><rect x="99.1" y="1301" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="102.08" y="1311.5" ></text>
</g>
<g >
<title>sqlite3BtreeTableMoveto (509,969,772 samples, 0.44%)</title><rect x="83.0" y="1349" width="5.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="85.97" y="1359.5" ></text>
</g>
<g >
<title>handle_pte_fault (25,061,264 samples, 0.02%)</title><rect x="282.4" y="1141" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="285.38" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="229" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="239.5" ></text>
</g>
<g >
<title>mod_memcg_state (50,899,159 samples, 0.04%)</title><rect x="17.8" y="1397" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="20.78" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1349" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1359.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (15,560,476 samples, 0.01%)</title><rect x="146.4" y="1477" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="149.36" y="1487.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (180,445,040 samples, 0.16%)</title><rect x="203.0" y="1541" width="1.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="206.03" y="1551.5" ></text>
</g>
<g >
<title>exc_page_fault (269,599,561 samples, 0.23%)</title><rect x="138.0" y="1557" width="2.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="140.96" y="1567.5" ></text>
</g>
<g >
<title>v8::internal::compiler::(anonymous namespace)::SourcePositionWrapper::Reduce (9,884,839 samples, 0.01%)</title><rect x="104.3" y="1397" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="107.31" y="1407.5" ></text>
</g>
<g >
<title>std::sys::pal::unix::fs::stat (208,399,616 samples, 0.18%)</title><rect x="151.9" y="1461" width="2.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="154.92" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1173" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1183.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (23,706,257 samples, 0.02%)</title><rect x="151.4" y="1365" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="154.43" y="1375.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (51,341,837 samples, 0.04%)</title><rect x="958.1" y="1445" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="961.12" y="1455.5" ></text>
</g>
<g >
<title>default_wake_function (247,455,163 samples, 0.21%)</title><rect x="262.7" y="901" width="2.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="265.74" y="911.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (41,038,764 samples, 0.04%)</title><rect x="91.4" y="1573" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="94.38" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_openat (374,306,027 samples, 0.32%)</title><rect x="198.4" y="1525" width="3.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="201.41" y="1535.5" ></text>
</g>
<g >
<title>enqueue_task (14,570,846 samples, 0.01%)</title><rect x="1013.3" y="1397" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1016.28" y="1407.5" ></text>
</g>
<g >
<title>find_busiest_group (10,583,053 samples, 0.01%)</title><rect x="477.2" y="1333" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="480.18" y="1343.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (224,521,343 samples, 0.19%)</title><rect x="186.5" y="1381" width="2.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="189.53" y="1391.5" ></text>
</g>
<g >
<title>uv__fs_read (27,014,921 samples, 0.02%)</title><rect x="106.3" y="1525" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="109.26" y="1535.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (16,120,230 samples, 0.01%)</title><rect x="183.0" y="1285" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="186.03" y="1295.5" ></text>
</g>
<g >
<title>ip_finish_output2 (669,131,520 samples, 0.58%)</title><rect x="61.6" y="1253" width="6.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="64.60" y="1263.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (9,824,008 samples, 0.01%)</title><rect x="110.7" y="1285" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="113.65" y="1295.5" ></text>
</g>
<g >
<title>[sleep] (145,670,260 samples, 0.13%)</title><rect x="286.1" y="1541" width="1.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="289.14" y="1551.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (13,588,114 samples, 0.01%)</title><rect x="189.0" y="1397" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="192.04" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="725" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="735.5" ></text>
</g>
<g >
<title>generic_permission (12,612,856 samples, 0.01%)</title><rect x="201.0" y="1365" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="203.96" y="1375.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (51,181,833 samples, 0.04%)</title><rect x="81.4" y="1589" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="84.41" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (50,458,278 samples, 0.04%)</title><rect x="26.8" y="1413" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="29.82" y="1423.5" ></text>
</g>
<g >
<title>operator new (20,037,680 samples, 0.02%)</title><rect x="100.5" y="181" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="103.53" y="191.5" ></text>
</g>
<g >
<title>wp_page_copy (25,061,264 samples, 0.02%)</title><rect x="282.4" y="1109" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="285.38" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1477" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1487.5" ></text>
</g>
<g >
<title>search_binary_handler (609,788,859 samples, 0.53%)</title><rect x="119.9" y="1477" width="6.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="122.85" y="1487.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (10,944,422 samples, 0.01%)</title><rect x="210.8" y="1525" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="213.83" y="1535.5" ></text>
</g>
<g >
<title>ip_rcv_core (55,685,014 samples, 0.05%)</title><rect x="266.4" y="1109" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="269.42" y="1119.5" ></text>
</g>
<g >
<title>psi_flags_change (39,350,381 samples, 0.03%)</title><rect x="1048.1" y="1477" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1051.06" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (61,058,344 samples, 0.05%)</title><rect x="217.4" y="1301" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="220.37" y="1311.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (62,167,978 samples, 0.05%)</title><rect x="271.4" y="1413" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="274.36" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="261" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="271.5" ></text>
</g>
<g >
<title>wake_affine (240,155,545 samples, 0.21%)</title><rect x="1045.4" y="1461" width="2.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1048.40" y="1471.5" ></text>
</g>
<g >
<title>page_counter_cancel (48,287,372 samples, 0.04%)</title><rect x="58.5" y="1317" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="61.50" y="1327.5" ></text>
</g>
<g >
<title>fsnotify (27,024,658 samples, 0.02%)</title><rect x="184.2" y="1301" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="187.24" y="1311.5" ></text>
</g>
<g >
<title>malloc (12,554,829 samples, 0.01%)</title><rect x="129.0" y="37" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="131.98" y="47.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (46,707,436 samples, 0.04%)</title><rect x="22.3" y="1413" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="25.27" y="1423.5" ></text>
</g>
<g >
<title>handle_mm_fault (37,218,265 samples, 0.03%)</title><rect x="76.6" y="1525" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="79.61" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (49,086,434 samples, 0.04%)</title><rect x="468.6" y="1589" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="471.63" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="245" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (15,166,411 samples, 0.01%)</title><rect x="107.0" y="1477" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="110.02" y="1487.5" ></text>
</g>
<g >
<title>sock_recvmsg (155,099,930 samples, 0.13%)</title><rect x="209.0" y="1509" width="1.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="212.01" y="1519.5" ></text>
</g>
<g >
<title>[bash] (46,123,643 samples, 0.04%)</title><rect x="282.3" y="1349" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="285.32" y="1359.5" ></text>
</g>
<g >
<title>____fput (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1397" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="102.78" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (77,215,193 samples, 0.07%)</title><rect x="95.4" y="1541" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="98.43" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="533" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="543.5" ></text>
</g>
<g >
<title>execute_command (51,466,000 samples, 0.04%)</title><rect x="281.3" y="1365" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="284.33" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (144,820,898 samples, 0.13%)</title><rect x="470.8" y="1589" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="473.80" y="1599.5" ></text>
</g>
<g >
<title>intel_idle (22,927,099 samples, 0.02%)</title><rect x="973.7" y="1397" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="976.74" y="1407.5" ></text>
</g>
<g >
<title>neigh_hh_output (669,131,520 samples, 0.58%)</title><rect x="61.6" y="1237" width="6.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="64.60" y="1247.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,877,951 samples, 0.01%)</title><rect x="99.1" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.08" y="1423.5" ></text>
</g>
<g >
<title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (538,356,415 samples, 0.47%)</title><rect x="108.7" y="1541" width="5.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="111.67" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1413" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1423.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_skmem (15,615,186 samples, 0.01%)</title><rect x="218.5" y="1349" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="221.50" y="1359.5" ></text>
</g>
<g >
<title>[perf-1061275.map] (14,343,541 samples, 0.01%)</title><rect x="107.2" y="1589" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="110.18" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16,129,806 samples, 0.01%)</title><rect x="100.8" y="757" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="767.5" ></text>
</g>
<g >
<title>fput (20,487,897 samples, 0.02%)</title><rect x="279.8" y="1525" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="282.80" y="1535.5" ></text>
</g>
<g >
<title>process_measurement (18,025,011 samples, 0.02%)</title><rect x="199.3" y="1429" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="202.33" y="1439.5" ></text>
</g>
<g >
<title>intel_idle (78,058,359 samples, 0.07%)</title><rect x="1182.5" y="1397" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1185.49" y="1407.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (15,673,709 samples, 0.01%)</title><rect x="203.9" y="1429" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="206.89" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1077" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1087.5" ></text>
</g>
<g >
<title>filename_lookup (39,214,206 samples, 0.03%)</title><rect x="105.8" y="1381" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="108.85" y="1391.5" ></text>
</g>
<g >
<title>__fget_light (40,640,395 samples, 0.04%)</title><rect x="279.4" y="1477" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="282.38" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,559,194 samples, 0.04%)</title><rect x="100.8" y="1189" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1199.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (51,341,837 samples, 0.04%)</title><rect x="958.1" y="1413" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="961.12" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="853" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="591.5" ></text>
</g>
<g >
<title>vfs_statx (39,214,206 samples, 0.03%)</title><rect x="105.8" y="1397" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="108.85" y="1407.5" ></text>
</g>
<g >
<title>path_lookupat (168,259,578 samples, 0.15%)</title><rect x="206.9" y="1477" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="209.87" y="1487.5" ></text>
</g>
<g >
<title>schedule_idle (336,113,817 samples, 0.29%)</title><rect x="1178.5" y="1525" width="3.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1181.50" y="1535.5" ></text>
</g>
<g >
<title>scheduler_tick (44,933,525 samples, 0.04%)</title><rect x="476.1" y="1333" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="479.12" y="1343.5" ></text>
</g>
<g >
<title>select_task_rq_fair (113,545,655 samples, 0.10%)</title><rect x="263.3" y="869" width="1.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="266.35" y="879.5" ></text>
</g>
<g >
<title>[libc.so.6] (224,131,088 samples, 0.19%)</title><rect x="101.3" y="1365" width="2.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="104.29" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1461" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (213,656,268 samples, 0.18%)</title><rect x="208.8" y="1573" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="211.83" y="1583.5" ></text>
</g>
<g >
<title>clear_page_erms (1,371,805,183 samples, 1.19%)</title><rect x="223.0" y="1381" width="14.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="225.96" y="1391.5" ></text>
</g>
<g >
<title>try_to_wake_up (107,053,416 samples, 0.09%)</title><rect x="474.9" y="1349" width="1.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="477.94" y="1359.5" ></text>
</g>
<g >
<title>do_user_addr_fault (12,993,479 samples, 0.01%)</title><rect x="97.4" y="1509" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="100.35" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,658,200,128 samples, 5.76%)</title><rect x="212.5" y="1573" width="68.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="215.51" y="1583.5" >entry_S..</text>
</g>
<g >
<title>ip_finish_output (720,140,977 samples, 0.62%)</title><rect x="61.1" y="1285" width="7.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="64.08" y="1295.5" ></text>
</g>
<g >
<title>__mod_timer (26,257,651 samples, 0.02%)</title><rect x="271.6" y="1349" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="274.64" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1157" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1167.5" ></text>
</g>
<g >
<title>vfs_statx (12,359,363 samples, 0.01%)</title><rect x="282.0" y="997" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="284.98" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1477" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1487.5" ></text>
</g>
<g >
<title>[bash] (45,470,974 samples, 0.04%)</title><rect x="281.9" y="1317" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.86" y="1327.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (94,887,597 samples, 0.08%)</title><rect x="27.3" y="1381" width="1.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="30.34" y="1391.5" ></text>
</g>
<g >
<title>do_anonymous_page (50,481,270 samples, 0.04%)</title><rect x="287.1" y="1333" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="290.12" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1189" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="101.70" y="1199.5" ></text>
</g>
<g >
<title>ovl_override_creds (14,801,497 samples, 0.01%)</title><rect x="160.4" y="1365" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="163.40" y="1375.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1,855,830,244 samples, 1.61%)</title><rect x="251.3" y="1397" width="18.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="254.28" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (272,817,940 samples, 0.24%)</title><rect x="100.8" y="1445" width="2.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,795,678 samples, 0.02%)</title><rect x="117.3" y="1557" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="120.28" y="1567.5" ></text>
</g>
<g >
<title>__do_softirq (1,568,700,144 samples, 1.36%)</title><rect x="252.8" y="1221" width="16.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="255.81" y="1231.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (32,748,831 samples, 0.03%)</title><rect x="135.2" y="1349" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="138.19" y="1359.5" ></text>
</g>
<g >
<title>expand_string_assignment (45,470,974 samples, 0.04%)</title><rect x="281.9" y="1269" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="284.86" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1061" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1071.5" ></text>
</g>
<g >
<title>__do_softirq (56,879,934 samples, 0.05%)</title><rect x="476.9" y="1397" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="479.92" y="1407.5" ></text>
</g>
<g >
<title>malloc (35,343,688 samples, 0.03%)</title><rect x="205.9" y="1589" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="208.89" y="1599.5" ></text>
</g>
<g >
<title>execute_command_internal (19,435,445 samples, 0.02%)</title><rect x="282.1" y="1173" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="285.12" y="1183.5" ></text>
</g>
<g >
<title>mod_memcg_state (59,507,344 samples, 0.05%)</title><rect x="57.3" y="1381" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="60.34" y="1391.5" ></text>
</g>
<g >
<title>__schedule (671,842,767 samples, 0.58%)</title><rect x="30.4" y="1365" width="6.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="33.39" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (73,408,812 samples, 0.06%)</title><rect x="90.6" y="1557" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="93.62" y="1567.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (519,295,392 samples, 0.45%)</title><rect x="1173.2" y="1493" width="5.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1176.19" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="917" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="927.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (51,341,837 samples, 0.04%)</title><rect x="958.1" y="1365" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="961.12" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="453" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_statx (78,278,513 samples, 0.07%)</title><rect x="150.9" y="1397" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="153.87" y="1407.5" ></text>
</g>
<g >
<title>enqueue_entity (49,384,280 samples, 0.04%)</title><rect x="964.1" y="1445" width="0.5" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="967.08" y="1455.5" ></text>
</g>
<g >
<title>ksys_lseek (204,111,930 samples, 0.18%)</title><rect x="158.8" y="1397" width="2.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="161.82" y="1407.5" ></text>
</g>
<g >
<title>update_process_times (11,669,208 samples, 0.01%)</title><rect x="1045.3" y="1477" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1048.27" y="1487.5" ></text>
</g>
<g >
<title>exit_mmap (10,189,303 samples, 0.01%)</title><rect x="287.8" y="1461" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="290.79" y="1471.5" ></text>
</g>
<g >
<title>asm_common_interrupt (15,697,127 samples, 0.01%)</title><rect x="474.7" y="1461" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="477.68" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (224,131,088 samples, 0.19%)</title><rect x="101.3" y="1349" width="2.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="104.29" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,877,951 samples, 0.01%)</title><rect x="99.1" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.08" y="1439.5" ></text>
</g>
<g >
<title>skb_clone (31,217,844 samples, 0.03%)</title><rect x="270.2" y="1397" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="273.23" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (44,294,319 samples, 0.04%)</title><rect x="12.1" y="1557" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="15.09" y="1567.5" ></text>
</g>
<g >
<title>generic_permission (12,359,363 samples, 0.01%)</title><rect x="282.0" y="901" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="284.98" y="911.5" ></text>
</g>
<g >
<title>execute_command_internal (13,607,874 samples, 0.01%)</title><rect x="282.6" y="1269" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="285.64" y="1279.5" ></text>
</g>
<g >
<title>search_binary_handler (59,097,908 samples, 0.05%)</title><rect x="282.9" y="1477" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="285.92" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (147,030,661 samples, 0.13%)</title><rect x="286.1" y="1557" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="289.14" y="1567.5" ></text>
</g>
<g >
<title>handle_mm_fault (12,993,479 samples, 0.01%)</title><rect x="97.4" y="1493" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="100.35" y="1503.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (26,487,538 samples, 0.02%)</title><rect x="1051.7" y="1429" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1054.71" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="533" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="543.5" ></text>
</g>
<g >
<title>dequeue_task (28,738,319 samples, 0.02%)</title><rect x="187.9" y="1317" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="190.93" y="1327.5" ></text>
</g>
<g >
<title>__mmdrop (212,283,817 samples, 0.18%)</title><rect x="132.9" y="1413" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.93" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="949" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="959.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (374,306,027 samples, 0.32%)</title><rect x="198.4" y="1557" width="3.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="201.41" y="1567.5" ></text>
</g>
<g >
<title>[bash] (10,412,242 samples, 0.01%)</title><rect x="281.2" y="1557" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.21" y="1567.5" ></text>
</g>
<g >
<title>sock_rfree (17,537,942 samples, 0.02%)</title><rect x="210.0" y="1445" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="213.05" y="1455.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (455,020,877 samples, 0.39%)</title><rect x="13.7" y="1461" width="4.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="16.66" y="1471.5" ></text>
</g>
<g >
<title>scheduler_tick (47,080,038 samples, 0.04%)</title><rect x="470.3" y="1461" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="473.32" y="1471.5" ></text>
</g>
<g >
<title>__do_sys_getcwd (17,292,160 samples, 0.01%)</title><rect x="198.1" y="1509" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="201.08" y="1519.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (106,059,101 samples, 0.09%)</title><rect x="36.1" y="1349" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="39.07" y="1359.5" ></text>
</g>
<g >
<title>poll_idle (3,836,151,695 samples, 3.32%)</title><rect x="974.0" y="1397" width="39.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="976.98" y="1407.5" >pol..</text>
</g>
<g >
<title>inode_permission (12,359,363 samples, 0.01%)</title><rect x="282.0" y="933" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="284.98" y="943.5" ></text>
</g>
<g >
<title>vfs_iter_write (32,748,831 samples, 0.03%)</title><rect x="135.2" y="1381" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="138.19" y="1391.5" ></text>
</g>
<g >
<title>ret_from_fork (46,311,828 samples, 0.04%)</title><rect x="1048.0" y="1573" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1051.05" y="1583.5" ></text>
</g>
<g >
<title>v8::internal::Accessors::FunctionCallerGetter (37,724,401 samples, 0.03%)</title><rect x="114.8" y="1477" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="117.82" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1381" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="1391.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (14,342,759 samples, 0.01%)</title><rect x="209.9" y="1445" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="212.90" y="1455.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (293,891,204 samples, 0.25%)</title><rect x="108.7" y="1493" width="3.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="111.67" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (213,920,579 samples, 0.19%)</title><rect x="96.3" y="1589" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="99.28" y="1599.5" ></text>
</g>
<g >
<title>psi_task_switch (9,904,969 samples, 0.01%)</title><rect x="1181.8" y="1493" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1184.82" y="1503.5" ></text>
</g>
<g >
<title>malloc (25,061,264 samples, 0.02%)</title><rect x="282.4" y="1253" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="285.38" y="1263.5" ></text>
</g>
<g >
<title>parse_and_execute (10,412,242 samples, 0.01%)</title><rect x="281.2" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="284.21" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (47,185,789 samples, 0.04%)</title><rect x="100.8" y="1301" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.79" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,831,018 samples, 0.01%)</title><rect x="100.8" y="549" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="559.5" ></text>
</g>
<g >
<title>refill_stock (102,818,802 samples, 0.09%)</title><rect x="57.9" y="1381" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="60.95" y="1391.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (41,841,963 samples, 0.04%)</title><rect x="190.5" y="1461" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="193.54" y="1471.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (148,507,494 samples, 0.13%)</title><rect x="65.7" y="949" width="1.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="68.72" y="959.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (61,167,862 samples, 0.05%)</title><rect x="972.4" y="1525" width="0.6" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="975.37" y="1535.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (1,770,105,640 samples, 1.53%)</title><rect x="221.9" y="1461" width="18.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="224.85" y="1471.5" ></text>
</g>
<g >
<title>parse_and_execute (38,669,138 samples, 0.03%)</title><rect x="282.4" y="1285" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="285.38" y="1295.5" ></text>
</g>
<g >
<title>security_file_free (32,824,479 samples, 0.03%)</title><rect x="204.4" y="1445" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="207.39" y="1455.5" ></text>
</g>
<g >
<title>execute_command (19,435,445 samples, 0.02%)</title><rect x="282.1" y="1189" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="285.12" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="821" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1013" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="1023.5" ></text>
</g>
<g >
<title>v8::internal::compiler::GraphReducer::ReduceNode (39,690,692 samples, 0.03%)</title><rect x="104.4" y="1445" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="107.41" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1493" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="102.78" y="1503.5" ></text>
</g>
<g >
<title>v8::internal::compiler::DeadCodeElimination::ReduceNode (9,884,839 samples, 0.01%)</title><rect x="104.3" y="1365" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="107.31" y="1375.5" ></text>
</g>
<g >
<title>v8::internal::compiler::GraphReducer::ReduceNode (13,675,905 samples, 0.01%)</title><rect x="104.3" y="1445" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="107.28" y="1455.5" ></text>
</g>
<g >
<title>mas_wr_node_store (38,065,885 samples, 0.03%)</title><rect x="98.7" y="965" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="101.70" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1157" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1167.5" ></text>
</g>
<g >
<title>uv__fs_statx (29,652,379 samples, 0.03%)</title><rect x="106.6" y="1509" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="109.60" y="1519.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (59,097,908 samples, 0.05%)</title><rect x="282.9" y="1509" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="285.92" y="1519.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (22,164,411 samples, 0.02%)</title><rect x="268.9" y="1157" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="271.91" y="1167.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (25,061,264 samples, 0.02%)</title><rect x="282.4" y="1221" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="285.38" y="1231.5" ></text>
</g>
<g >
<title>copy_page_to_iter (181,025,637 samples, 0.16%)</title><rect x="79.0" y="1397" width="1.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="82.05" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="501" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="511.5" ></text>
</g>
<g >
<title>ovl_path_realdata (46,749,252 samples, 0.04%)</title><rect x="164.5" y="1333" width="0.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="167.54" y="1343.5" ></text>
</g>
<g >
<title>___slab_alloc (29,372,065 samples, 0.03%)</title><rect x="111.3" y="1269" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="114.28" y="1279.5" ></text>
</g>
<g >
<title>__memset (17,382,495 samples, 0.02%)</title><rect x="275.4" y="1429" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="278.40" y="1439.5" ></text>
</g>
<g >
<title>arch_call_rest_init (4,034,054,228 samples, 3.49%)</title><rect x="973.6" y="1525" width="41.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="976.64" y="1535.5" >arc..</text>
</g>
<g >
<title>cpuidle_select (392,152,975 samples, 0.34%)</title><rect x="959.6" y="1509" width="4.0" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="962.62" y="1519.5" ></text>
</g>
<g >
<title>netif_rx_internal (30,003,387 samples, 0.03%)</title><rect x="268.9" y="1205" width="0.3" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="271.91" y="1215.5" ></text>
</g>
<g >
<title>filemap_map_pages (28,619,916 samples, 0.02%)</title><rect x="91.5" y="1397" width="0.3" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="94.51" y="1407.5" ></text>
</g>
<g >
<title>__libc_start_main (20,795,678 samples, 0.02%)</title><rect x="117.3" y="1573" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="120.28" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (178,639,203 samples, 0.15%)</title><rect x="208.9" y="1541" width="1.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="211.92" y="1551.5" ></text>
</g>
<g >
<title>tcp_push (14,658,008 samples, 0.01%)</title><rect x="219.6" y="1477" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="222.62" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,823,302 samples, 0.04%)</title><rect x="100.8" y="1253" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.79" y="1263.5" ></text>
</g>
<g >
<title>update_load_avg (97,909,776 samples, 0.08%)</title><rect x="965.5" y="1413" width="1.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="968.54" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="709" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="719.5" ></text>
</g>
<g >
<title>idle_cpu (23,059,861 samples, 0.02%)</title><rect x="477.5" y="1397" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="480.50" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1429" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1439.5" ></text>
</g>
<g >
<title>kfree_skbmem (17,357,683 samples, 0.02%)</title><rect x="267.5" y="1173" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="270.53" y="1183.5" ></text>
</g>
<g >
<title>do_readlinkat (208,524,475 samples, 0.18%)</title><rect x="206.6" y="1525" width="2.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="209.61" y="1535.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,669,208 samples, 0.01%)</title><rect x="1045.3" y="1541" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1048.27" y="1551.5" ></text>
</g>
<g >
<title>record_times (10,861,673 samples, 0.01%)</title><rect x="971.5" y="1461" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="974.48" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1253" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1263.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1,130,363,922 samples, 0.98%)</title><rect x="254.8" y="1077" width="11.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="257.82" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1205" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1215.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (13,104,281 samples, 0.01%)</title><rect x="184.6" y="1397" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="187.60" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (17,505,085 samples, 0.02%)</title><rect x="263.2" y="869" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="266.17" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1557" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1567.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (22,920,725 samples, 0.02%)</title><rect x="189.7" y="1525" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="192.71" y="1535.5" ></text>
</g>
<g >
<title>walk_component (36,601,925 samples, 0.03%)</title><rect x="98.1" y="1429" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="101.09" y="1439.5" ></text>
</g>
<g >
<title>sccp (425,503,415 samples, 0.37%)</title><rect x="77.1" y="1589" width="4.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="80.06" y="1599.5" ></text>
</g>
<g >
<title>___slab_alloc (14,316,603 samples, 0.01%)</title><rect x="200.4" y="1317" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="203.38" y="1327.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineImpl::SelectInstructions (13,254,038 samples, 0.01%)</title><rect x="105.0" y="1461" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="108.00" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="565" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,692,156 samples, 0.02%)</title><rect x="100.8" y="1013" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.80" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (284,144,481 samples, 0.25%)</title><rect x="108.7" y="1413" width="2.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="111.68" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (143,028,822 samples, 0.12%)</title><rect x="92.4" y="1573" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="95.38" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1221" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1445" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="1455.5" ></text>
</g>
<g >
<title>do_statx (27,352,458 samples, 0.02%)</title><rect x="100.2" y="1525" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="103.25" y="1535.5" ></text>
</g>
<g >
<title>vfs_read (27,014,921 samples, 0.02%)</title><rect x="106.3" y="1429" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="109.26" y="1439.5" ></text>
</g>
<g >
<title>all (115,562,304,264 samples, 100%)</title><rect x="10.0" y="1621" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" ></text>
</g>
<g >
<title>do_nanosleep (207,046,742 samples, 0.18%)</title><rect x="186.7" y="1365" width="2.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="189.71" y="1375.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (13,855,775,019 samples, 11.99%)</title><rect x="1048.5" y="1589" width="141.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1051.52" y="1599.5" >secondary_startup..</text>
</g>
<g >
<title>tcp_rcv_established (59,703,933 samples, 0.05%)</title><rect x="22.8" y="1397" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="25.79" y="1407.5" ></text>
</g>
<g >
<title>exit_mm (134,716,303 samples, 0.12%)</title><rect x="92.5" y="1509" width="1.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="95.47" y="1519.5" ></text>
</g>
<g >
<title>v8::internal::compiler::GraphReducer::Reduce (9,884,839 samples, 0.01%)</title><rect x="104.3" y="1413" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="107.31" y="1423.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (25,845,810 samples, 0.02%)</title><rect x="272.8" y="1317" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="275.84" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="117" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="127.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (17,078,083 samples, 0.01%)</title><rect x="153.4" y="1285" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="156.41" y="1295.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (259,789,637 samples, 0.22%)</title><rect x="14.4" y="1125" width="2.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="17.43" y="1135.5" ></text>
</g>
<g >
<title>default_wake_function (24,152,390 samples, 0.02%)</title><rect x="265.6" y="917" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="268.63" y="927.5" ></text>
</g>
<g >
<title>__fdget (93,234,066 samples, 0.08%)</title><rect x="77.6" y="1525" width="0.9" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="80.57" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1189" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1199.5" ></text>
</g>
<g >
<title>ip_output (287,055,458 samples, 0.25%)</title><rect x="14.2" y="1333" width="2.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="17.19" y="1343.5" ></text>
</g>
<g >
<title>clock_nanosleep (338,484,380 samples, 0.29%)</title><rect x="186.1" y="1461" width="3.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="189.09" y="1471.5" ></text>
</g>
<g >
<title>vfs_iter_read (1,797,330,018 samples, 1.56%)</title><rect x="165.0" y="1349" width="18.4" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="168.01" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1253" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1263.5" ></text>
</g>
<g >
<title>__libc_fork (286,406,522 samples, 0.25%)</title><rect x="108.7" y="1461" width="2.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="111.67" y="1471.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (265,284,052 samples, 0.23%)</title><rect x="14.4" y="1221" width="2.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="17.38" y="1231.5" ></text>
</g>
<g >
<title>v8::internal::compiler::GraphReducer::ReduceTop (39,690,692 samples, 0.03%)</title><rect x="104.4" y="1429" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="107.41" y="1439.5" ></text>
</g>
<g >
<title>__sys_recvfrom (178,639,203 samples, 0.15%)</title><rect x="208.9" y="1525" width="1.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="211.92" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_statx (176,254,322 samples, 0.15%)</title><rect x="152.2" y="1397" width="1.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="155.25" y="1407.5" ></text>
</g>
<g >
<title>ip_queue_xmit (290,872,593 samples, 0.25%)</title><rect x="14.2" y="1381" width="3.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="17.19" y="1391.5" ></text>
</g>
<g >
<title>inet_sendmsg (6,513,042,725 samples, 5.64%)</title><rect x="212.9" y="1509" width="66.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="215.88" y="1519.5" >inet_se..</text>
</g>
<g >
<title>[bash] (45,470,974 samples, 0.04%)</title><rect x="281.9" y="1301" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.86" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_rq_lock_irqsave (33,101,060 samples, 0.03%)</title><rect x="963.7" y="1493" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="966.71" y="1503.5" ></text>
</g>
<g >
<title>put_prev_task_fair (19,738,364 samples, 0.02%)</title><rect x="132.1" y="1413" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="135.12" y="1423.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (17,505,085 samples, 0.02%)</title><rect x="263.2" y="853" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="266.17" y="863.5" ></text>
</g>
<g >
<title>do_user_addr_fault (35,070,896 samples, 0.03%)</title><rect x="281.4" y="1221" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="284.44" y="1231.5" ></text>
</g>
<g >
<title>msvc::thread_helper_t::thread_entry (843,977,642 samples, 0.73%)</title><rect x="81.9" y="1573" width="8.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="84.93" y="1583.5" ></text>
</g>
<g >
<title>[anon] (63,071,218 samples, 0.05%)</title><rect x="136.2" y="1589" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="139.23" y="1599.5" ></text>
</g>
<g >
<title>wp_page_copy (35,070,896 samples, 0.03%)</title><rect x="281.4" y="1141" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="284.44" y="1151.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (49,723,127 samples, 0.04%)</title><rect x="70.2" y="1525" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.16" y="1535.5" ></text>
</g>
<g >
<title>dispatcher (2,865,624,763 samples, 2.48%)</title><rect x="155.6" y="1509" width="29.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="158.56" y="1519.5" >di..</text>
</g>
<g >
<title>perf-exec (212,283,817 samples, 0.18%)</title><rect x="132.9" y="1605" width="2.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="135.93" y="1615.5" ></text>
</g>
<g >
<title>integrity_iint_find (15,238,735 samples, 0.01%)</title><rect x="204.1" y="1445" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="207.14" y="1455.5" ></text>
</g>
<g >
<title>psi_group_change (21,911,989 samples, 0.02%)</title><rect x="188.5" y="1301" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="191.51" y="1311.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (28,329,583 samples, 0.02%)</title><rect x="276.2" y="1429" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="279.16" y="1439.5" ></text>
</g>
<g >
<title>free_pud_range (30,590,720 samples, 0.03%)</title><rect x="119.9" y="1317" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="122.85" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (52,580,901 samples, 0.05%)</title><rect x="280.8" y="1589" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="283.78" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (217,520,346 samples, 0.19%)</title><rect x="158.7" y="1413" width="2.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="161.68" y="1423.5" ></text>
</g>
<g >
<title>do_user_addr_fault (50,481,270 samples, 0.04%)</title><rect x="287.1" y="1397" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="290.12" y="1407.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (47,080,038 samples, 0.04%)</title><rect x="470.3" y="1557" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="473.32" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,643,414,153 samples, 5.75%)</title><rect x="212.6" y="1557" width="67.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="215.60" y="1567.5" >do_sysc..</text>
</g>
<g >
<title>uv__work_done (16,193,809 samples, 0.01%)</title><rect x="132.6" y="1557" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="135.56" y="1567.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (1,770,105,640 samples, 1.53%)</title><rect x="221.9" y="1445" width="18.0" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="224.85" y="1455.5" ></text>
</g>
<g >
<title>sh (298,723,242 samples, 0.26%)</title><rect x="280.8" y="1605" width="3.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="283.77" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1173" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1183.5" ></text>
</g>
<g >
<title>do_syscall_64 (33,105,745 samples, 0.03%)</title><rect x="198.1" y="1541" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="201.08" y="1551.5" ></text>
</g>
<g >
<title>getdents64 (14,132,346 samples, 0.01%)</title><rect x="283.6" y="1589" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="286.61" y="1599.5" ></text>
</g>
<g >
<title>mas_store (9,824,008 samples, 0.01%)</title><rect x="110.7" y="1301" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="113.65" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1029" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (277,001,086 samples, 0.24%)</title><rect x="100.8" y="1493" width="2.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.75" y="1503.5" ></text>
</g>
<g >
<title>[unknown]  (101,442,763 samples, 0.09%)</title><rect x="194.4" y="1589" width="1.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="197.40" y="1599.5" ></text>
</g>
<g >
<title>post (241,178,285 samples, 0.21%)</title><rect x="111.7" y="1461" width="2.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="114.67" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (267,384,450 samples, 0.23%)</title><rect x="186.5" y="1445" width="2.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="189.45" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1317" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="997" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="1007.5" ></text>
</g>
<g >
<title>ktime_get (10,946,990 samples, 0.01%)</title><rect x="187.1" y="1285" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="190.14" y="1295.5" ></text>
</g>
<g >
<title>bprm_execve (609,788,859 samples, 0.53%)</title><rect x="119.9" y="1525" width="6.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="122.85" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (204,887,186 samples, 0.18%)</title><rect x="14.4" y="1029" width="2.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="17.43" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="741" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="751.5" ></text>
</g>
<g >
<title>[ls] (17,921,471 samples, 0.02%)</title><rect x="99.1" y="1509" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="102.08" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (46,707,436 samples, 0.04%)</title><rect x="22.3" y="1429" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="25.27" y="1439.5" ></text>
</g>
<g >
<title>exit_mmap (609,788,859 samples, 0.53%)</title><rect x="119.9" y="1381" width="6.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="122.85" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (272,817,940 samples, 0.24%)</title><rect x="100.8" y="1429" width="2.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.79" y="1439.5" ></text>
</g>
<g >
<title>cpu_startup_entry (13,120,002,400 samples, 11.35%)</title><rect x="1048.5" y="1557" width="134.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1051.52" y="1567.5" >cpu_startup_entry</text>
</g>
<g >
<title>enqueue_entity (128,931,802 samples, 0.11%)</title><rect x="965.2" y="1429" width="1.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="968.23" y="1439.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (827,452,599 samples, 0.72%)</title><rect x="60.0" y="1365" width="8.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="63.00" y="1375.5" ></text>
</g>
<g >
<title>sched_clock_cpu (17,707,329 samples, 0.02%)</title><rect x="265.1" y="853" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="268.09" y="863.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (50,112,859 samples, 0.04%)</title><rect x="962.9" y="1429" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="965.93" y="1439.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (13,501,981 samples, 0.01%)</title><rect x="107.4" y="1461" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="110.38" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (732,919,222 samples, 0.63%)</title><rect x="1182.5" y="1461" width="7.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1185.49" y="1471.5" ></text>
</g>
<g >
<title>[bash] (13,163,886 samples, 0.01%)</title><rect x="282.0" y="1141" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.98" y="1151.5" ></text>
</g>
<g >
<title>__fdget (40,640,395 samples, 0.04%)</title><rect x="279.4" y="1493" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="282.38" y="1503.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (50,544,567 samples, 0.04%)</title><rect x="1172.7" y="1429" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1175.66" y="1439.5" ></text>
</g>
<g >
<title>__libc_start_main (143,060,617 samples, 0.12%)</title><rect x="281.3" y="1573" width="1.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="284.33" y="1583.5" ></text>
</g>
<g >
<title>task_tick_fair (11,669,208 samples, 0.01%)</title><rect x="1045.3" y="1445" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1048.27" y="1455.5" ></text>
</g>
<g >
<title>v8::internal::Code::GetSafepointEntry (20,297,413 samples, 0.02%)</title><rect x="114.8" y="1413" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="117.82" y="1423.5" ></text>
</g>
<g >
<title>__libc_start_main (73,408,812 samples, 0.06%)</title><rect x="90.6" y="1573" width="0.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="93.62" y="1583.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (26,487,538 samples, 0.02%)</title><rect x="1051.7" y="1413" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1054.71" y="1423.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (44,316,263 samples, 0.04%)</title><rect x="271.5" y="1397" width="0.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="274.54" y="1407.5" ></text>
</g>
<g >
<title>uv_spawn (293,891,204 samples, 0.25%)</title><rect x="108.7" y="1509" width="3.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="111.67" y="1519.5" ></text>
</g>
<g >
<title>call_rcu (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1365" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="102.78" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="581" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="591.5" ></text>
</g>
<g >
<title>__schedule (39,350,381 samples, 0.03%)</title><rect x="1048.1" y="1509" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1051.06" y="1519.5" ></text>
</g>
<g >
<title>start_secondary (49,061,413,096 samples, 42.45%)</title><rect x="472.7" y="1573" width="500.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="475.68" y="1583.5" >start_secondary</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (44,883,420 samples, 0.04%)</title><rect x="100.8" y="1109" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.80" y="1119.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (15,418,557 samples, 0.01%)</title><rect x="264.6" y="853" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="267.60" y="863.5" ></text>
</g>
<g >
<title>tcp_write_xmit (345,121,616 samples, 0.30%)</title><rect x="14.2" y="1413" width="3.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="17.19" y="1423.5" ></text>
</g>
<g >
<title>tcp_push (2,285,302,102 samples, 1.98%)</title><rect x="250.1" y="1461" width="23.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="253.14" y="1471.5" >t..</text>
</g>
<g >
<title>NaClSysFstatDecoder (47,760,018 samples, 0.04%)</title><rect x="148.1" y="1557" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="151.14" y="1567.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::open_syscall (13,922,481 samples, 0.01%)</title><rect x="136.4" y="1573" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="139.41" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1573" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1583.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (82,034,556 samples, 0.07%)</title><rect x="95.4" y="1573" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="98.41" y="1583.5" ></text>
</g>
<g >
<title>statx (206,965,552 samples, 0.18%)</title><rect x="151.9" y="1445" width="2.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="154.93" y="1455.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::stat_syscall (94,289,742 samples, 0.08%)</title><rect x="190.2" y="1493" width="0.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="193.18" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_free (24,101,964 samples, 0.02%)</title><rect x="204.5" y="1429" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="207.48" y="1439.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (10,146,820 samples, 0.01%)</title><rect x="971.7" y="1493" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="974.72" y="1503.5" ></text>
</g>
<g >
<title>v8::internal::KeyAccumulator::CollectOwnJSProxyKeys (10,629,741 samples, 0.01%)</title><rect x="116.4" y="1493" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="119.43" y="1503.5" ></text>
</g>
<g >
<title>do_wp_page (25,061,264 samples, 0.02%)</title><rect x="282.4" y="1125" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="285.38" y="1135.5" ></text>
</g>
<g >
<title>__percpu_counter_sum (212,283,817 samples, 0.18%)</title><rect x="132.9" y="1397" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="135.93" y="1407.5" ></text>
</g>
<g >
<title>NaClSysSelect (430,399,609 samples, 0.37%)</title><rect x="185.3" y="1541" width="4.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="188.32" y="1551.5" ></text>
</g>
<g >
<title>__netif_rx (30,003,387 samples, 0.03%)</title><rect x="268.9" y="1221" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="271.91" y="1231.5" ></text>
</g>
<g >
<title>ep_poll (129,039,745 samples, 0.11%)</title><rect x="131.1" y="1493" width="1.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="134.06" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (250,721,547 samples, 0.22%)</title><rect x="1045.4" y="1573" width="2.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1048.39" y="1583.5" ></text>
</g>
<g >
<title>do_statx (29,652,379 samples, 0.03%)</title><rect x="106.6" y="1413" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="109.60" y="1423.5" ></text>
</g>
<g >
<title>bprm_execve (59,097,908 samples, 0.05%)</title><rect x="282.9" y="1525" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="285.92" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_read (2,171,232,360 samples, 1.88%)</title><rect x="162.4" y="1413" width="22.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="165.43" y="1423.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="693" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="703.5" ></text>
</g>
<g >
<title>__napi_poll (13,155,736 samples, 0.01%)</title><rect x="474.7" y="1365" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="477.71" y="1375.5" ></text>
</g>
<g >
<title>do_idle (49,002,618,682 samples, 42.40%)</title><rect x="472.8" y="1541" width="500.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="475.82" y="1551.5" >do_idle</text>
</g>
<g >
<title>[libc.so.6] (145,670,260 samples, 0.13%)</title><rect x="286.1" y="1493" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="289.14" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (9,877,951 samples, 0.01%)</title><rect x="99.1" y="1285" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="102.08" y="1295.5" ></text>
</g>
<g >
<title>unmap_page_range (579,198,139 samples, 0.50%)</title><rect x="120.2" y="1333" width="5.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="123.17" y="1343.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (13,474,901 samples, 0.01%)</title><rect x="472.4" y="1541" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="475.39" y="1551.5" ></text>
</g>
<g >
<title>poll_idle (11,649,301,190 samples, 10.08%)</title><rect x="1053.6" y="1461" width="118.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1056.56" y="1471.5" >poll_idle</text>
</g>
<g >
<title>openat64 (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1509" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="102.78" y="1519.5" ></text>
</g>
<g >
<title>__ip_finish_output (1,763,972,613 samples, 1.53%)</title><rect x="252.0" y="1317" width="18.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="255.04" y="1327.5" ></text>
</g>
<g >
<title>sqlite3GetVarint (163,258,937 samples, 0.14%)</title><rect x="86.5" y="1333" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="89.51" y="1343.5" ></text>
</g>
<g >
<title>exc_page_fault (12,993,479 samples, 0.01%)</title><rect x="97.4" y="1525" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="100.35" y="1535.5" ></text>
</g>
<g >
<title>do_user_addr_fault (13,501,981 samples, 0.01%)</title><rect x="107.4" y="1429" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="110.38" y="1439.5" ></text>
</g>
<g >
<title>vfs_read (2,086,990,623 samples, 1.81%)</title><rect x="163.3" y="1381" width="21.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="166.29" y="1391.5" >v..</text>
</g>
<g >
<title>_ZN7dashmap24DashMap$LT$K$C$V$C$S$GT$10hash_usize17h6cfe3366d499c3fcE.llvm.4461577519387968875 (17,361,563 samples, 0.02%)</title><rect x="190.3" y="1461" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="193.27" y="1471.5" ></text>
</g>
<g >
<title>Glob::isIgnored (277,001,086 samples, 0.24%)</title><rect x="100.8" y="1525" width="2.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="103.75" y="1535.5" ></text>
</g>
<g >
<title>init_file (13,789,676 samples, 0.01%)</title><rect x="198.9" y="1445" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="201.88" y="1455.5" ></text>
</g>
<g >
<title>v8::platform::DefaultJobWorker::Run (11,987,675 samples, 0.01%)</title><rect x="105.2" y="1541" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="108.20" y="1551.5" ></text>
</g>
<g >
<title>filename_lookup (27,352,458 samples, 0.02%)</title><rect x="100.2" y="1493" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="103.25" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock (42,178,394 samples, 0.04%)</title><rect x="968.8" y="1493" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="971.85" y="1503.5" ></text>
</g>
<g >
<title>grep (140,385,559 samples, 0.12%)</title><rect x="93.8" y="1605" width="1.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="96.84" y="1615.5" ></text>
</g>
<g >
<title>policy_nodemask (10,771,666 samples, 0.01%)</title><rect x="239.8" y="1413" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="242.82" y="1423.5" ></text>
</g>
<g >
<title>llist_add_batch (32,445,757 samples, 0.03%)</title><rect x="264.8" y="853" width="0.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="267.75" y="863.5" ></text>
</g>
<g >
<title>ip_rcv (1,235,281,440 samples, 1.07%)</title><rect x="254.6" y="1125" width="12.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="257.64" y="1135.5" ></text>
</g>
<g >
<title>__x64_sys_getcwd (25,979,243 samples, 0.02%)</title><rect x="198.1" y="1525" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="201.08" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="885" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="895.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (519,295,392 samples, 0.45%)</title><rect x="1173.2" y="1525" width="5.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1176.19" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (196,433,179 samples, 0.17%)</title><rect x="202.9" y="1557" width="2.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="205.87" y="1567.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (275,635,694 samples, 0.24%)</title><rect x="216.0" y="1397" width="2.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="219.02" y="1407.5" ></text>
</g>
<g >
<title>ovl_permission (12,359,363 samples, 0.01%)</title><rect x="282.0" y="917" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="284.98" y="927.5" ></text>
</g>
<g >
<title>arch_call_rest_init (735,772,619 samples, 0.64%)</title><rect x="1182.5" y="1525" width="7.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1185.49" y="1535.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,669,208 samples, 0.01%)</title><rect x="1045.3" y="1525" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1048.27" y="1535.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (26,474,796 samples, 0.02%)</title><rect x="203.2" y="1493" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="206.22" y="1503.5" ></text>
</g>
<g >
<title>v8::internal::Execution::TryRunMicrotasks (16,193,809 samples, 0.01%)</title><rect x="132.6" y="1413" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="135.56" y="1423.5" ></text>
</g>
<g >
<title>main (143,060,617 samples, 0.12%)</title><rect x="281.3" y="1541" width="1.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="284.33" y="1551.5" ></text>
</g>
<g >
<title>dispatcher (571,098,762 samples, 0.49%)</title><rect x="148.9" y="1509" width="5.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="151.89" y="1519.5" ></text>
</g>
<g >
<title>[bash] (45,470,974 samples, 0.04%)</title><rect x="281.9" y="1333" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="284.86" y="1343.5" ></text>
</g>
<g >
<title>[anon] (135,154,064 samples, 0.12%)</title><rect x="70.9" y="1589" width="1.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="73.91" y="1599.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (47,080,038 samples, 0.04%)</title><rect x="470.3" y="1573" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="473.32" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_futex (240,155,545 samples, 0.21%)</title><rect x="1045.4" y="1557" width="2.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1048.40" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="453" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (305,819,213 samples, 0.26%)</title><rect x="474.8" y="1445" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="477.84" y="1455.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (35,070,896 samples, 0.03%)</title><rect x="281.4" y="1109" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="284.44" y="1119.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (12,993,479 samples, 0.01%)</title><rect x="97.4" y="1541" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="100.35" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1045" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1055.5" ></text>
</g>
<g >
<title>security_inode_getattr (17,078,083 samples, 0.01%)</title><rect x="153.4" y="1301" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="156.41" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__nothrow_wait_cv::wait (10,261,698 samples, 0.01%)</title><rect x="104.1" y="1493" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="107.07" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="213" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="223.5" ></text>
</g>
<g >
<title>wmemcmp (28,619,916 samples, 0.02%)</title><rect x="91.5" y="1541" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="94.51" y="1551.5" ></text>
</g>
<g >
<title>ip_output (775,289,954 samples, 0.67%)</title><rect x="60.5" y="1301" width="7.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="63.52" y="1311.5" ></text>
</g>
<g >
<title>expr (322,572,336 samples, 0.28%)</title><rect x="90.5" y="1605" width="3.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="93.55" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1429" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="853" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (17,376,312 samples, 0.02%)</title><rect x="195.9" y="1557" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="198.89" y="1567.5" ></text>
</g>
<g >
<title>[bash] (46,123,643 samples, 0.04%)</title><rect x="282.3" y="1413" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="285.32" y="1423.5" ></text>
</g>
<g >
<title>rcu_core (18,357,855 samples, 0.02%)</title><rect x="477.0" y="1365" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="479.96" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (10,331,483 samples, 0.01%)</title><rect x="91.4" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="94.38" y="1535.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (12,761,420 samples, 0.01%)</title><rect x="191.4" y="1541" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="194.37" y="1551.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (260,604,618 samples, 0.23%)</title><rect x="138.0" y="1381" width="2.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="140.96" y="1391.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (74,476,296 samples, 0.06%)</title><rect x="264.5" y="869" width="0.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="267.51" y="879.5" ></text>
</g>
<g >
<title>ip_local_out (775,289,954 samples, 0.67%)</title><rect x="60.5" y="1317" width="7.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="63.52" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="613" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="623.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (13,104,281 samples, 0.01%)</title><rect x="184.6" y="1413" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="187.60" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,123,147 samples, 0.02%)</title><rect x="100.8" y="997" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="1007.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (305,819,213 samples, 0.26%)</title><rect x="474.8" y="1461" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="477.84" y="1471.5" ></text>
</g>
<g >
<title>pthread_cond_signal (241,178,285 samples, 0.21%)</title><rect x="111.7" y="1429" width="2.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="114.67" y="1439.5" ></text>
</g>
<g >
<title>ip_local_out (1,821,027,526 samples, 1.58%)</title><rect x="251.5" y="1365" width="18.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="254.54" y="1375.5" ></text>
</g>
<g >
<title>cpuidle_select (61,298,970 samples, 0.05%)</title><rect x="1172.5" y="1509" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1175.55" y="1519.5" ></text>
</g>
<g >
<title>search_for_command (13,163,886 samples, 0.01%)</title><rect x="282.0" y="1157" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="284.98" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1045" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1493" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1445" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="101.70" y="1455.5" ></text>
</g>
<g >
<title>__close (200,720,599 samples, 0.17%)</title><rect x="202.8" y="1589" width="2.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="205.82" y="1599.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (17,707,329 samples, 0.02%)</title><rect x="265.1" y="821" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="268.09" y="831.5" ></text>
</g>
<g >
<title>update_curr (18,420,668 samples, 0.02%)</title><rect x="188.0" y="1269" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="191.01" y="1279.5" ></text>
</g>
<g >
<title>select_task_rq_fair (15,477,193 samples, 0.01%)</title><rect x="265.7" y="885" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="268.72" y="895.5" ></text>
</g>
<g >
<title>[bash] (46,123,643 samples, 0.04%)</title><rect x="282.3" y="1397" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="285.32" y="1407.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (34,678,417 samples, 0.03%)</title><rect x="266.0" y="1045" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="269.01" y="1055.5" ></text>
</g>
<g >
<title>net_rx_action (535,818,207 samples, 0.46%)</title><rect x="62.9" y="1157" width="5.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="65.87" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="453" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="463.5" ></text>
</g>
<g >
<title>psi_task_switch (39,350,381 samples, 0.03%)</title><rect x="1048.1" y="1493" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1051.06" y="1503.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (46,346,334 samples, 0.04%)</title><rect x="99.8" y="1525" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="102.78" y="1535.5" ></text>
</g>
<g >
<title>dispose_words (35,070,896 samples, 0.03%)</title><rect x="281.4" y="1317" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="284.44" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1221" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1231.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (2,663,128,136 samples, 2.30%)</title><rect x="157.6" y="1477" width="27.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="160.63" y="1487.5" >r..</text>
</g>
<g >
<title>__calc_delta (92,266,810 samples, 0.08%)</title><rect x="131.1" y="1365" width="0.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="134.06" y="1375.5" ></text>
</g>
<g >
<title>update_rq_clock (41,566,337 samples, 0.04%)</title><rect x="967.3" y="1477" width="0.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="970.25" y="1487.5" ></text>
</g>
<g >
<title>net_rx_action (1,542,794,407 samples, 1.34%)</title><rect x="253.1" y="1205" width="15.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="256.07" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,715,534 samples, 0.02%)</title><rect x="100.8" y="885" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.82" y="895.5" ></text>
</g>
<g >
<title>perf_event_task_tick (25,816,181 samples, 0.02%)</title><rect x="476.2" y="1317" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="479.23" y="1327.5" ></text>
</g>
<g >
<title>lock_sock_nested (46,707,436 samples, 0.04%)</title><rect x="22.3" y="1445" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="25.27" y="1455.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (60,972,426 samples, 0.05%)</title><rect x="272.5" y="1413" width="0.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="275.48" y="1423.5" ></text>
</g>
<g >
<title>tcp_wmem_schedule (272,611,977 samples, 0.24%)</title><rect x="276.6" y="1461" width="2.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="279.60" y="1471.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (219,315,251 samples, 0.19%)</title><rect x="65.0" y="997" width="2.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="68.02" y="1007.5" ></text>
</g>
<g >
<title>call_cpuidle (12,133,384,451 samples, 10.50%)</title><rect x="1048.6" y="1509" width="123.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1051.62" y="1519.5" >call_cpuidle</text>
</g>
<g >
<title>__handle_mm_fault (37,218,265 samples, 0.03%)</title><rect x="76.6" y="1509" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="79.61" y="1519.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (13,671,289 samples, 0.01%)</title><rect x="963.4" y="1461" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="966.44" y="1471.5" ></text>
</g>
<g >
<title>lind_recv (30,900,593 samples, 0.03%)</title><rect x="185.0" y="1525" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="188.00" y="1535.5" ></text>
</g>
<g >
<title>vfs_fstatat (12,359,363 samples, 0.01%)</title><rect x="282.0" y="1013" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="284.98" y="1023.5" ></text>
</g>
<g >
<title>cfree (210,085,679 samples, 0.18%)</title><rect x="126.8" y="53" width="2.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="129.84" y="63.5" ></text>
</g>
<g >
<title>dequeue_task (359,927,268 samples, 0.31%)</title><rect x="32.4" y="1349" width="3.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="35.40" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="405" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="837" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="847.5" ></text>
</g>
<g >
<title>statx (91,602,050 samples, 0.08%)</title><rect x="150.7" y="1445" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="153.73" y="1455.5" ></text>
</g>
<g >
<title>tcp_rcv_established (691,131,771 samples, 0.60%)</title><rect x="259.0" y="1029" width="7.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="261.95" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1029" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="1039.5" ></text>
</g>
<g >
<title>uv__statx (29,652,379 samples, 0.03%)</title><rect x="106.6" y="1493" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="109.60" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="357" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_read (14,744,216 samples, 0.01%)</title><rect x="471.3" y="1557" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="474.30" y="1567.5" ></text>
</g>
<g >
<title>update_cfs_group (50,587,991 samples, 0.04%)</title><rect x="35.6" y="1317" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.55" y="1327.5" ></text>
</g>
<g >
<title>ttwu_do_activate (310,738,488 samples, 0.27%)</title><rect x="964.1" y="1477" width="3.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="967.08" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1173" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1183.5" ></text>
</g>
<g >
<title>vma_alloc_folio (260,604,618 samples, 0.23%)</title><rect x="138.0" y="1461" width="2.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="140.96" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="1141" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="1151.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (14,172,991 samples, 0.01%)</title><rect x="161.2" y="1429" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="164.17" y="1439.5" ></text>
</g>
<g >
<title>validate_xmit_skb (26,468,259 samples, 0.02%)</title><rect x="269.8" y="1253" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="272.78" y="1263.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (52,536,981 samples, 0.05%)</title><rect x="22.8" y="1365" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="25.83" y="1375.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineImpl::OptimizeGraph (77,043,342 samples, 0.07%)</title><rect x="104.4" y="1477" width="0.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="107.41" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1093" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1103.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1125" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="101.70" y="1135.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1157" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="101.70" y="1167.5" ></text>
</g>
<g >
<title>__fsnotify_parent (23,174,019 samples, 0.02%)</title><rect x="201.4" y="1381" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="204.42" y="1391.5" ></text>
</g>
<g >
<title>do_iter_read (1,789,172,081 samples, 1.55%)</title><rect x="165.0" y="1333" width="18.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="168.01" y="1343.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper_inner (136,027,672 samples, 0.12%)</title><rect x="146.7" y="1477" width="1.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="149.75" y="1487.5" ></text>
</g>
<g >
<title>__check_object_size (116,218,931 samples, 0.10%)</title><rect x="240.1" y="1445" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="243.10" y="1455.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1,135,933,333 samples, 0.98%)</title><rect x="254.8" y="1093" width="11.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="257.82" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="805" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="815.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1365" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="101.70" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="421" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="431.5" ></text>
</g>
<g >
<title>node::fs::FSReqCallback::Resolve (16,193,809 samples, 0.01%)</title><rect x="132.6" y="1509" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="135.56" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (82,358,086 samples, 0.07%)</title><rect x="286.2" y="1397" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="289.20" y="1407.5" ></text>
</g>
<g >
<title>tcp_rtt_estimator (46,437,629 samples, 0.04%)</title><rect x="66.8" y="917" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="69.76" y="927.5" ></text>
</g>
<g >
<title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1525" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="103.53" y="1535.5" ></text>
</g>
<g >
<title>Builtins_CompileLazy (21,449,638 samples, 0.02%)</title><rect x="115.7" y="1573" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="118.70" y="1583.5" ></text>
</g>
<g >
<title>ovl_llseek (49,438,001 samples, 0.04%)</title><rect x="160.3" y="1381" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="163.31" y="1391.5" ></text>
</g>
<g >
<title>cfree (178,685,488 samples, 0.15%)</title><rect x="129.1" y="69" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="132.14" y="79.5" ></text>
</g>
<g >
<title>psi_group_change (17,973,592 samples, 0.02%)</title><rect x="475.8" y="1285" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="478.76" y="1295.5" ></text>
</g>
<g >
<title>__schedule (347,154,743 samples, 0.30%)</title><rect x="968.3" y="1509" width="3.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="971.28" y="1519.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (37,218,265 samples, 0.03%)</title><rect x="76.6" y="1461" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="79.61" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="597" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="607.5" ></text>
</g>
<g >
<title>sqlite3VdbeRecordCompareWithSkip (50,799,083 samples, 0.04%)</title><rect x="88.5" y="1365" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="91.49" y="1375.5" ></text>
</g>
<g >
<title>mmput (59,097,908 samples, 0.05%)</title><rect x="282.9" y="1413" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="285.92" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="293" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="303.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (974,481,733 samples, 0.84%)</title><rect x="59.0" y="1413" width="9.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="62.00" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (50,544,567 samples, 0.04%)</title><rect x="1172.7" y="1413" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1175.66" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (29,652,379 samples, 0.03%)</title><rect x="106.6" y="1445" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="109.60" y="1455.5" ></text>
</g>
<g >
<title>inode_permission (93,416,688 samples, 0.08%)</title><rect x="207.3" y="1445" width="0.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="210.28" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1013" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1023.5" ></text>
</g>
<g >
<title>dequeue_entity (100,849,996 samples, 0.09%)</title><rect x="131.1" y="1381" width="1.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="134.06" y="1391.5" ></text>
</g>
<g >
<title>__sk_mem_schedule (241,742,180 samples, 0.21%)</title><rect x="276.9" y="1445" width="2.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="279.91" y="1455.5" ></text>
</g>
<g >
<title>enframe (37,218,265 samples, 0.03%)</title><rect x="76.6" y="1589" width="0.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="79.61" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="949" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="959.5" ></text>
</g>
<g >
<title>tcp_mtu_probe (34,761,587 samples, 0.03%)</title><rect x="272.0" y="1413" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="275.00" y="1423.5" ></text>
</g>
<g >
<title>touch_atime (18,343,554 samples, 0.02%)</title><rect x="164.2" y="1333" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="167.25" y="1343.5" ></text>
</g>
<g >
<title>do_filp_open (317,973,253 samples, 0.28%)</title><rect x="198.5" y="1493" width="3.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="201.49" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (47,913,332 samples, 0.04%)</title><rect x="21.8" y="1445" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="24.78" y="1455.5" ></text>
</g>
<g >
<title>thread_pool::queue_item&lt;thread_pool::enqueue&lt;deque_thread&lt;cpptools_context::create_decl_def_scan_entry, true&gt;::defer (843,977,642 samples, 0.73%)</title><rect x="81.9" y="1541" width="8.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="84.93" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="357" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="101" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="111.5" ></text>
</g>
<g >
<title>__schedule (332,867,254 samples, 0.29%)</title><rect x="1178.5" y="1509" width="3.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1181.53" y="1519.5" ></text>
</g>
<g >
<title>schedule (129,039,745 samples, 0.11%)</title><rect x="131.1" y="1445" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.06" y="1455.5" ></text>
</g>
<g >
<title>[bash] (46,123,643 samples, 0.04%)</title><rect x="282.3" y="1365" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="285.32" y="1375.5" ></text>
</g>
<g >
<title>dput (39,214,206 samples, 0.03%)</title><rect x="105.8" y="1349" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="108.85" y="1359.5" ></text>
</g>
<g >
<title>handle_pte_fault (50,481,270 samples, 0.04%)</title><rect x="287.1" y="1349" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="290.12" y="1359.5" ></text>
</g>
<g >
<title>__handle_mm_fault (35,070,896 samples, 0.03%)</title><rect x="281.4" y="1189" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="284.44" y="1199.5" ></text>
</g>
<g >
<title>ovl_read_iter (282,323,019 samples, 0.24%)</title><rect x="78.5" y="1509" width="2.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="81.52" y="1519.5" ></text>
</g>
<g >
<title>filemap_read (282,323,019 samples, 0.24%)</title><rect x="78.5" y="1413" width="2.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="81.52" y="1423.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (11,076,824 samples, 0.01%)</title><rect x="472.5" y="1541" width="0.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="475.53" y="1551.5" ></text>
</g>
<g >
<title>dispose_word (35,070,896 samples, 0.03%)</title><rect x="281.4" y="1301" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="284.44" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (101,471,284 samples, 0.09%)</title><rect x="211.5" y="1573" width="1.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="214.47" y="1583.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (282,323,019 samples, 0.24%)</title><rect x="78.5" y="1445" width="2.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="81.52" y="1455.5" ></text>
</g>
<g >
<title>__mmput (609,788,859 samples, 0.53%)</title><rect x="119.9" y="1397" width="6.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="122.85" y="1407.5" ></text>
</g>
<g >
<title>copy_page_to_iter (17,263,267 samples, 0.01%)</title><rect x="165.5" y="1269" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="168.52" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (189,184,708 samples, 0.16%)</title><rect x="129.1" y="309" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.12" y="319.5" ></text>
</g>
<g >
<title>mmput (212,283,817 samples, 0.18%)</title><rect x="132.9" y="1445" width="2.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="135.93" y="1455.5" ></text>
</g>
<g >
<title>ovl_open_realfile (104,483,613 samples, 0.09%)</title><rect x="200.1" y="1397" width="1.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="203.11" y="1407.5" ></text>
</g>
<g >
<title>menu_select (387,185,491 samples, 0.34%)</title><rect x="959.6" y="1493" width="4.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="962.63" y="1503.5" ></text>
</g>
<g >
<title>_dl_catch_exception (38,065,885 samples, 0.03%)</title><rect x="98.7" y="1317" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="101.70" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="229" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="239.5" ></text>
</g>
<g >
<title>__fget_light (50,618,744 samples, 0.04%)</title><rect x="159.3" y="1365" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="162.32" y="1375.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::send_syscall (203,271,562 samples, 0.18%)</title><rect x="192.3" y="1509" width="2.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="195.32" y="1519.5" ></text>
</g>
<g >
<title>v8::internal::compiler::GraphReducer::ReduceTop (13,675,905 samples, 0.01%)</title><rect x="104.3" y="1429" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="107.28" y="1439.5" ></text>
</g>
<g >
<title>node (3,173,242,921 samples, 2.75%)</title><rect x="100.5" y="1605" width="32.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="103.53" y="1615.5" >node</text>
</g>
<g >
<title>ovl_getattr (41,869,238 samples, 0.04%)</title><rect x="153.2" y="1333" width="0.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="156.20" y="1343.5" ></text>
</g>
<g >
<title>read_tsc (28,340,325 samples, 0.02%)</title><rect x="270.8" y="1413" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="273.84" y="1423.5" ></text>
</g>
<g >
<title>__nss_next2 (9,877,951 samples, 0.01%)</title><rect x="99.1" y="1445" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="102.08" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="1189" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="1199.5" ></text>
</g>
<g >
<title>tcp_sendmsg (455,020,877 samples, 0.39%)</title><rect x="13.7" y="1477" width="4.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="16.66" y="1487.5" ></text>
</g>
<g >
<title>[bash] (13,607,874 samples, 0.01%)</title><rect x="282.6" y="1253" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="285.64" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="597" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,254,487 samples, 0.01%)</title><rect x="126.1" y="517" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.12" y="527.5" ></text>
</g>
<g >
<title>getname_flags (17,281,189 samples, 0.01%)</title><rect x="153.7" y="1381" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="156.72" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1317" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="1327.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (32,748,831 samples, 0.03%)</title><rect x="135.2" y="1333" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="138.19" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1301" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_enter (732,919,222 samples, 0.63%)</title><rect x="1182.5" y="1429" width="7.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1185.49" y="1439.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (14,294,739 samples, 0.01%)</title><rect x="475.5" y="1253" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="478.47" y="1263.5" ></text>
</g>
<g >
<title>execute_command_internal (10,412,242 samples, 0.01%)</title><rect x="281.2" y="1525" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="284.21" y="1535.5" ></text>
</g>
<g >
<title>local_clock_noinstr (95,313,770 samples, 0.08%)</title><rect x="958.6" y="1445" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="961.64" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,184,708 samples, 0.16%)</title><rect x="129.1" y="741" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="132.12" y="751.5" ></text>
</g>
<g >
<title>cpuidle_enter (3,868,783,922 samples, 3.35%)</title><rect x="973.6" y="1429" width="39.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="976.65" y="1439.5" >cpu..</text>
</g>
<g >
<title>tcp_seq_next (14,815,646 samples, 0.01%)</title><rect x="106.3" y="1365" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="109.29" y="1375.5" ></text>
</g>
<g >
<title>vfs_open (180,014,416 samples, 0.16%)</title><rect x="199.8" y="1445" width="1.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="202.82" y="1455.5" ></text>
</g>
<g >
<title>[bash] (13,607,874 samples, 0.01%)</title><rect x="282.6" y="1237" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="285.64" y="1247.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (204,887,186 samples, 0.18%)</title><rect x="14.4" y="1045" width="2.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="17.43" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="757" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="767.5" ></text>
</g>
<g >
<title>kthread (28,221,335 samples, 0.02%)</title><rect x="472.4" y="1557" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="475.39" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (9,877,951 samples, 0.01%)</title><rect x="99.1" y="1237" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="102.08" y="1247.5" ></text>
</g>
<g >
<title>x86_pmu_enable (17,277,030 samples, 0.01%)</title><rect x="476.3" y="1285" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="479.31" y="1295.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (2,276,331,214 samples, 1.97%)</title><rect x="250.2" y="1445" width="23.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="253.23" y="1455.5" >_..</text>
</g>
<g >
<title>tcp_send_ack (971,022,373 samples, 0.84%)</title><rect x="59.0" y="1397" width="9.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="62.03" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (283,025,935 samples, 0.24%)</title><rect x="126.2" y="613" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="129.23" y="623.5" ></text>
</g>
<g >
<title>_copy_to_iter (1,216,922,017 samples, 1.05%)</title><rect x="167.3" y="1237" width="12.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="170.25" y="1247.5" ></text>
</g>
<g >
<title>__folio_throttle_swaprate (50,481,270 samples, 0.04%)</title><rect x="287.1" y="1317" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="290.12" y="1327.5" ></text>
</g>
<g >
<title>handle_mm_fault (13,501,981 samples, 0.01%)</title><rect x="107.4" y="1413" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="110.38" y="1423.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (293,891,204 samples, 0.25%)</title><rect x="108.7" y="1477" width="3.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="111.67" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1029" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="103.53" y="1039.5" ></text>
</g>
<g >
<title>__handle_mm_fault (12,993,479 samples, 0.01%)</title><rect x="97.4" y="1477" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="100.35" y="1487.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (4,034,054,228 samples, 3.49%)</title><rect x="973.6" y="1573" width="41.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="976.64" y="1583.5" >x86..</text>
</g>
<g >
<title>unmap_single_vma (579,198,139 samples, 0.50%)</title><rect x="120.2" y="1349" width="5.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="123.17" y="1359.5" ></text>
</g>
<g >
<title>filename_lookup (29,652,379 samples, 0.03%)</title><rect x="106.6" y="1381" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="109.60" y="1391.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_remove (38,379,379 samples, 0.03%)</title><rect x="146.8" y="1461" width="0.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="149.84" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="949" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="959.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (18,241,161 samples, 0.02%)</title><rect x="190.8" y="1445" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="193.78" y="1455.5" ></text>
</g>
<g >
<title>__memset (13,604,245 samples, 0.01%)</title><rect x="275.8" y="1413" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="278.75" y="1423.5" ></text>
</g>
<g >
<title>tick_program_event (34,350,465 samples, 0.03%)</title><rect x="187.0" y="1317" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="189.99" y="1327.5" ></text>
</g>
<g >
<title>__alloc_skb (51,313,821 samples, 0.04%)</title><rect x="13.7" y="1445" width="0.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="16.67" y="1455.5" ></text>
</g>
<g >
<title>call_cpuidle (3,868,783,922 samples, 3.35%)</title><rect x="973.6" y="1445" width="39.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="976.65" y="1455.5" >cal..</text>
</g>
<g >
<title>free_swap_cache (53,978,325 samples, 0.05%)</title><rect x="282.9" y="1333" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="285.94" y="1343.5" ></text>
</g>
<g >
<title>complete_walk (23,153,767 samples, 0.02%)</title><rect x="207.0" y="1461" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="209.96" y="1471.5" ></text>
</g>
<g >
<title>exc_page_fault (25,061,264 samples, 0.02%)</title><rect x="282.4" y="1205" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="285.38" y="1215.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (59,703,933 samples, 0.05%)</title><rect x="22.8" y="1413" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="25.79" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_futex (10,261,698 samples, 0.01%)</title><rect x="104.1" y="1413" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="107.07" y="1423.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (20,685,467 samples, 0.02%)</title><rect x="70.7" y="1525" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="73.66" y="1535.5" ></text>
</g>
<g >
<title>core_sys_select (138,017,714 samples, 0.12%)</title><rect x="196.1" y="1493" width="1.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="199.12" y="1503.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (74,649,040 samples, 0.06%)</title><rect x="114.4" y="1541" width="0.8" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="117.44" y="1551.5" ></text>
</g>
<g >
<title>free_bprm (212,283,817 samples, 0.18%)</title><rect x="132.9" y="1461" width="2.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="135.93" y="1471.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1,838,436,129 samples, 1.59%)</title><rect x="251.4" y="1381" width="18.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="254.37" y="1391.5" ></text>
</g>
<g >
<title>wake_up_q (240,155,545 samples, 0.21%)</title><rect x="1045.4" y="1509" width="2.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1048.40" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,499,978 samples, 0.02%)</title><rect x="100.5" y="1253" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="103.53" y="1263.5" ></text>
</g>
<g >
<title>cache_from_obj (10,611,282 samples, 0.01%)</title><rect x="204.6" y="1413" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.61" y="1423.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (29,652,379 samples, 0.03%)</title><rect x="106.6" y="1317" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="109.60" y="1327.5" ></text>
</g>
<g >
<title>__kfree_skb (85,717,132 samples, 0.07%)</title><rect x="215.0" y="1413" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="217.98" y="1423.5" ></text>
</g>
<g >
<title>security_file_alloc (17,388,562 samples, 0.02%)</title><rect x="200.2" y="1333" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="203.20" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,254,487 samples, 0.01%)</title><rect x="126.1" y="981" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.12" y="991.5" ></text>
</g>
<g >
<title>__alloc_pages (1,717,131,276 samples, 1.49%)</title><rect x="222.2" y="1413" width="17.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="225.20" y="1423.5" ></text>
</g>
<g >
<title>tcp_data_ready (42,140,542 samples, 0.04%)</title><rect x="265.4" y="1013" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="268.44" y="1023.5" ></text>
</g>
<g >
<title>consume_stock (23,355,817 samples, 0.02%)</title><rect x="278.8" y="1381" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="281.77" y="1391.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (588,214,920 samples, 0.51%)</title><rect x="62.3" y="1205" width="6.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="65.33" y="1215.5" ></text>
</g>
<g >
<title>__cmd_record.constprop.0 (212,283,817 samples, 0.18%)</title><rect x="132.9" y="1589" width="2.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="135.93" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,025,935 samples, 0.24%)</title><rect x="126.2" y="1157" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="129.23" y="1167.5" ></text>
</g>
<g >
<title>pick_next_task_fair (23,290,024 samples, 0.02%)</title><rect x="1014.0" y="1413" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1017.01" y="1423.5" ></text>
</g>
<g >
<title>v8::internal::SafepointTable::FindEntry (20,297,413 samples, 0.02%)</title><rect x="114.8" y="1397" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="117.82" y="1407.5" ></text>
</g>
</g>
</svg>
