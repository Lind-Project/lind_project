<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1654" onload="init(evt)" viewBox="0 0 1200 1654" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1654.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1637" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1637" > </text>
<g id="frames">
<g >
<title>do_exit (501,920,202 samples, 0.01%)</title><rect x="1030.6" y="1509" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1033.62" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,232,003,145 samples, 0.06%)</title><rect x="1188.0" y="1413" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1191.02" y="1423.5" ></text>
</g>
<g >
<title>rest_init (3,680,614,853 samples, 0.09%)</title><rect x="1188.0" y="1493" width="1.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1190.98" y="1503.5" ></text>
</g>
<g >
<title>alloc_fd (446,481,859 samples, 0.01%)</title><rect x="775.8" y="1349" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="778.76" y="1359.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (449,898,874 samples, 0.01%)</title><rect x="54.2" y="1541" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="57.24" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="485" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="495.5" ></text>
</g>
<g >
<title>rcu_core (521,554,456 samples, 0.01%)</title><rect x="60.1" y="1349" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="63.12" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_lock (629,584,658 samples, 0.02%)</title><rect x="43.5" y="1477" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="46.45" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1077" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1087.5" ></text>
</g>
<g >
<title>make_child (373,848,088 samples, 0.01%)</title><rect x="1016.4" y="1189" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1019.39" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (591,041,720 samples, 0.01%)</title><rect x="14.2" y="1477" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.16" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1173" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="1183.5" ></text>
</g>
<g >
<title>v8::internal::Heap::PerformGarbageCollection (476,631,761 samples, 0.01%)</title><rect x="53.9" y="1445" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="56.90" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="149" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="517" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="527.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (772,570,290 samples, 0.02%)</title><rect x="761.5" y="1349" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="764.51" y="1359.5" ></text>
</g>
<g >
<title>pick_next_task_fair (484,998,353 samples, 0.01%)</title><rect x="676.4" y="1333" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="679.41" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (344,757,616 samples, 0.01%)</title><rect x="1189.1" y="1445" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1192.13" y="1455.5" ></text>
</g>
<g >
<title>futex_q_lock (13,127,734,735 samples, 0.33%)</title><rect x="626.8" y="1301" width="3.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="629.77" y="1311.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (997,328,223 samples, 0.02%)</title><rect x="622.1" y="1269" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="625.14" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="517" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="527.5" ></text>
</g>
<g >
<title>ext4_do_writepages (615,814,246 samples, 0.02%)</title><rect x="1034.5" y="1365" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1037.49" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,612,325,471 samples, 0.06%)</title><rect x="51.4" y="1237" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.40" y="1247.5" ></text>
</g>
<g >
<title>unmap_single_vma (4,028,843,002 samples, 0.10%)</title><rect x="1029.4" y="1333" width="1.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1032.35" y="1343.5" ></text>
</g>
<g >
<title>execute_command_internal (549,637,072 samples, 0.01%)</title><rect x="1016.5" y="1173" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1019.50" y="1183.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (862,477,688 samples, 0.02%)</title><rect x="1187.2" y="1509" width="0.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1190.22" y="1519.5" ></text>
</g>
<g >
<title>sched_clock_cpu (6,507,212,450 samples, 0.16%)</title><rect x="678.7" y="1317" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="681.66" y="1327.5" ></text>
</g>
<g >
<title>thread_main (3,112,343,895 samples, 0.08%)</title><rect x="1189.1" y="1541" width="0.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1192.09" y="1551.5" ></text>
</g>
<g >
<title>locks_free_lock_context (397,437,197 samples, 0.01%)</title><rect x="927.3" y="1189" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="930.30" y="1199.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (49,434,011,478 samples, 1.23%)</title><rect x="25.0" y="1509" width="14.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="28.00" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="293" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="303.5" ></text>
</g>
<g >
<title>do_idle (3,441,156,783 samples, 0.09%)</title><rect x="15.1" y="1525" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="18.06" y="1535.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (7,759,121,568 samples, 0.19%)</title><rect x="1182.3" y="1493" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1185.27" y="1503.5" ></text>
</g>
<g >
<title>rcu_do_batch (2,127,351,945 samples, 0.05%)</title><rect x="23.9" y="1445" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="26.92" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1109" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1119.5" ></text>
</g>
<g >
<title>copy_process (4,245,307,056 samples, 0.11%)</title><rect x="48.7" y="1333" width="1.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="51.67" y="1343.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (346,095,002 samples, 0.01%)</title><rect x="864.0" y="1285" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="866.95" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,061,754,670 samples, 0.03%)</title><rect x="52.9" y="69" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="55.93" y="79.5" ></text>
</g>
<g >
<title>tcp_sendmsg (3,419,519,610 samples, 0.08%)</title><rect x="951.8" y="1381" width="1.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="954.84" y="1391.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (423,025,895 samples, 0.01%)</title><rect x="749.6" y="1317" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="752.58" y="1327.5" ></text>
</g>
<g >
<title>kernel_clone (4,245,307,056 samples, 0.11%)</title><rect x="48.7" y="1349" width="1.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="51.67" y="1359.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (528,899,900 samples, 0.01%)</title><rect x="1017.3" y="1573" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1020.34" y="1583.5" ></text>
</g>
<g >
<title>clock_gettime (893,074,718 samples, 0.02%)</title><rect x="175.5" y="1557" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="178.53" y="1567.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (2,204,757,752 samples, 0.05%)</title><rect x="1053.8" y="1253" width="0.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1056.81" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="197" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="207.5" ></text>
</g>
<g >
<title>rcu_core (1,561,888,710 samples, 0.04%)</title><rect x="1169.3" y="1461" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1172.26" y="1471.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (776,272,502 samples, 0.02%)</title><rect x="684.2" y="1365" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="687.18" y="1375.5" ></text>
</g>
<g >
<title>copy_page_from_iter_atomic (543,947,513 samples, 0.01%)</title><rect x="57.2" y="1237" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="60.23" y="1247.5" ></text>
</g>
<g >
<title>pick_next_task (17,360,231,190 samples, 0.43%)</title><rect x="560.9" y="1301" width="5.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="563.85" y="1311.5" ></text>
</g>
<g >
<title>__d_alloc (44,602,125,754 samples, 1.11%)</title><rect x="850.4" y="1285" width="13.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="853.42" y="1295.5" ></text>
</g>
<g >
<title>__alloc_pages (1,644,278,809 samples, 0.04%)</title><rect x="840.1" y="1189" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="843.10" y="1199.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (611,587,889 samples, 0.02%)</title><rect x="13.4" y="1397" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="16.36" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (627,941,035 samples, 0.02%)</title><rect x="904.4" y="1253" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="907.35" y="1263.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1,751,902,065 samples, 0.04%)</title><rect x="1154.3" y="1493" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1157.30" y="1503.5" ></text>
</g>
<g >
<title>update_curr (15,228,655,515 samples, 0.38%)</title><rect x="671.0" y="1301" width="4.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="673.99" y="1311.5" ></text>
</g>
<g >
<title>ksys_read (420,205,401 samples, 0.01%)</title><rect x="61.6" y="1525" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="64.56" y="1535.5" ></text>
</g>
<g >
<title>kmem_cache_free (6,605,779,304 samples, 0.16%)</title><rect x="1056.6" y="1301" width="2.0" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1059.62" y="1311.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (10,127,229,395 samples, 0.25%)</title><rect x="921.0" y="1141" width="2.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="923.98" y="1151.5" ></text>
</g>
<g >
<title>mod_objcg_state (3,682,348,380 samples, 0.09%)</title><rect x="846.9" y="1237" width="1.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="849.89" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (519,540,433 samples, 0.01%)</title><rect x="666.3" y="1333" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="669.29" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,480,504,784 samples, 0.04%)</title><rect x="1018.5" y="1413" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1021.53" y="1423.5" ></text>
</g>
<g >
<title>security_file_fcntl (506,006,452 samples, 0.01%)</title><rect x="758.7" y="1365" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="761.70" y="1375.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (479,326,889 samples, 0.01%)</title><rect x="15.8" y="1509" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="18.78" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1189" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (10,096,811,988 samples, 0.25%)</title><rect x="19.7" y="1573" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="22.67" y="1583.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,185,328,606 samples, 0.05%)</title><rect x="37.9" y="1413" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="40.95" y="1423.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (424,176,143 samples, 0.01%)</title><rect x="1030.3" y="1237" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1033.28" y="1247.5" ></text>
</g>
<g >
<title>record__write (5,861,940,568 samples, 0.15%)</title><rect x="57.0" y="1477" width="1.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="60.01" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (547,403,302 samples, 0.01%)</title><rect x="1015.3" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1018.28" y="1567.5" ></text>
</g>
<g >
<title>scheduler_tick (817,979,261 samples, 0.02%)</title><rect x="1040.3" y="1317" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1043.30" y="1327.5" ></text>
</g>
<g >
<title>check_spread.isra.0 (575,999,841 samples, 0.01%)</title><rect x="615.5" y="1237" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="618.52" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1493" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1503.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (940,752,157 samples, 0.02%)</title><rect x="674.5" y="1269" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="677.55" y="1279.5" ></text>
</g>
<g >
<title>rcu_core (1,973,359,874 samples, 0.05%)</title><rect x="570.3" y="1317" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="573.26" y="1327.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,401,368,395 samples, 0.06%)</title><rect x="1180.8" y="1413" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1183.81" y="1423.5" ></text>
</g>
<g >
<title>rcu_core_si (1,520,993,472 samples, 0.04%)</title><rect x="1142.6" y="1381" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1145.59" y="1391.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (3,424,805,393 samples, 0.08%)</title><rect x="1163.5" y="1429" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1166.51" y="1439.5" ></text>
</g>
<g >
<title>consume_obj_stock (1,737,166,148 samples, 0.04%)</title><rect x="848.3" y="1237" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="851.31" y="1247.5" ></text>
</g>
<g >
<title>sock_close (10,486,370,925 samples, 0.26%)</title><rect x="937.3" y="1285" width="3.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="940.33" y="1295.5" ></text>
</g>
<g >
<title>start_secondary (483,779,934 samples, 0.01%)</title><rect x="1017.3" y="1557" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1020.34" y="1567.5" ></text>
</g>
<g >
<title>copy_present_pte (1,125,150,194 samples, 0.03%)</title><rect x="1024.6" y="1381" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1027.56" y="1391.5" ></text>
</g>
<g >
<title>__memset (1,416,863,178 samples, 0.04%)</title><rect x="827.2" y="1269" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="830.21" y="1279.5" ></text>
</g>
<g >
<title>_Fork (4,245,307,056 samples, 0.11%)</title><rect x="48.7" y="1429" width="1.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="51.67" y="1439.5" ></text>
</g>
<g >
<title>__slab_free (734,056,805 samples, 0.02%)</title><rect x="28.2" y="1285" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="31.21" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (3,370,702,457 samples, 0.08%)</title><rect x="576.6" y="1397" width="1.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="579.63" y="1407.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (3,572,276,915 samples, 0.09%)</title><rect x="1004.0" y="1557" width="1.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1007.02" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="661" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="671.5" ></text>
</g>
<g >
<title>proc_reg_read (656,241,399 samples, 0.02%)</title><rect x="54.6" y="1397" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="57.58" y="1407.5" ></text>
</g>
<g >
<title>free_swap_cache (439,484,162 samples, 0.01%)</title><rect x="56.6" y="1237" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="59.60" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="117" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1381" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (1,944,211,904 samples, 0.05%)</title><rect x="947.3" y="1365" width="0.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="950.26" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,404,748,860 samples, 0.08%)</title><rect x="51.3" y="1413" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.35" y="1423.5" ></text>
</g>
<g >
<title>__do_softirq (5,063,880,086 samples, 0.13%)</title><rect x="1158.6" y="1317" width="1.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1161.57" y="1327.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,687,433,660 samples, 0.07%)</title><rect x="726.8" y="1381" width="0.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="729.78" y="1391.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (459,367,992 samples, 0.01%)</title><rect x="930.6" y="1205" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="933.58" y="1215.5" ></text>
</g>
<g >
<title>schedule_idle (393,364,909 samples, 0.01%)</title><rect x="15.9" y="1509" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="18.93" y="1519.5" ></text>
</g>
<g >
<title>i_callback (3,254,903,881 samples, 0.08%)</title><rect x="1110.9" y="1301" width="0.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1113.85" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1029" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1039.5" ></text>
</g>
<g >
<title>command_substitute (1,154,846,955 samples, 0.03%)</title><rect x="1016.4" y="1205" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1019.36" y="1215.5" ></text>
</g>
<g >
<title>main (4,239,235,233 samples, 0.11%)</title><rect x="1015.8" y="1525" width="1.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1018.81" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (695,470,900 samples, 0.02%)</title><rect x="54.6" y="1477" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="57.57" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="277" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="287.5" ></text>
</g>
<g >
<title>update_load_avg (7,643,803,967 samples, 0.19%)</title><rect x="1126.9" y="1397" width="2.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1129.88" y="1407.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1,349,069,210 samples, 0.03%)</title><rect x="58.2" y="1237" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="61.25" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,612,325,471 samples, 0.06%)</title><rect x="51.4" y="1221" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.40" y="1231.5" ></text>
</g>
<g >
<title>ktime_get (580,107,067 samples, 0.01%)</title><rect x="1155.1" y="1493" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1158.08" y="1503.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (7,842,151,284 samples, 0.19%)</title><rect x="949.4" y="1413" width="2.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="952.37" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (582,742,201 samples, 0.01%)</title><rect x="1015.6" y="1573" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1018.64" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="773" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="783.5" ></text>
</g>
<g >
<title>xas_descend (482,444,482 samples, 0.01%)</title><rect x="821.0" y="1221" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="823.96" y="1231.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,494,568,640 samples, 0.06%)</title><rect x="27.4" y="1285" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="30.37" y="1295.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (78,841,953,966 samples, 1.95%)</title><rect x="1040.8" y="1397" width="23.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1043.75" y="1407.5" >_..</text>
</g>
<g >
<title>pick_next_task (564,142,498 samples, 0.01%)</title><rect x="1165.0" y="1413" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1168.04" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="277" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="287.5" ></text>
</g>
<g >
<title>psi_group_change (5,381,031,186 samples, 0.13%)</title><rect x="1130.2" y="1413" width="1.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1133.24" y="1423.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1,507,910,340 samples, 0.04%)</title><rect x="934.3" y="1285" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="937.26" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (631,619,692 samples, 0.02%)</title><rect x="59.9" y="1573" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="62.85" y="1583.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (4,196,893,830 samples, 0.10%)</title><rect x="696.3" y="1429" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="699.28" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (91,841,824,526 samples, 2.28%)</title><rect x="657.7" y="1413" width="26.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="660.65" y="1423.5" >d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,843,446,606 samples, 0.07%)</title><rect x="51.4" y="1301" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.39" y="1311.5" ></text>
</g>
<g >
<title>__writeback_single_inode (615,814,246 samples, 0.02%)</title><rect x="1034.5" y="1413" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1037.49" y="1423.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (495,536,611 samples, 0.01%)</title><rect x="58.4" y="1157" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="61.36" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="949" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="959.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (706,591,666 samples, 0.02%)</title><rect x="666.4" y="1317" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="669.45" y="1327.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (3,224,395,044 samples, 0.08%)</title><rect x="676.9" y="1333" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="679.91" y="1343.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (639,603,917 samples, 0.02%)</title><rect x="1168.6" y="1477" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1171.60" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="869" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="879.5" ></text>
</g>
<g >
<title>psi_group_change (1,051,597,753 samples, 0.03%)</title><rect x="41.7" y="1413" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="44.70" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_statx (349,734,980 samples, 0.01%)</title><rect x="17.9" y="1525" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="20.94" y="1535.5" ></text>
</g>
<g >
<title>perf (6,476,282,954 samples, 0.16%)</title><rect x="56.9" y="1589" width="1.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="59.85" y="1599.5" ></text>
</g>
<g >
<title>pick_next_task (1,450,488,506 samples, 0.04%)</title><rect x="1185.7" y="1477" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1188.72" y="1487.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (6,800,712,265 samples, 0.17%)</title><rect x="892.2" y="1317" width="2.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="895.24" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_accept (442,832,919 samples, 0.01%)</title><rect x="771.1" y="1397" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="774.12" y="1407.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (603,538,939 samples, 0.01%)</title><rect x="785.2" y="1269" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="788.17" y="1279.5" ></text>
</g>
<g >
<title>sock_recvmsg (1,205,039,207 samples, 0.03%)</title><rect x="947.4" y="1333" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="950.36" y="1343.5" ></text>
</g>
<g >
<title>d_set_d_op (394,251,185 samples, 0.01%)</title><rect x="863.8" y="1285" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="866.84" y="1295.5" ></text>
</g>
<g >
<title>rcu_core_si (10,631,715,849 samples, 0.26%)</title><rect x="1170.6" y="1365" width="3.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1173.63" y="1375.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (720,745,286 samples, 0.02%)</title><rect x="564.4" y="1253" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="567.38" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,620,321,516 samples, 0.04%)</title><rect x="51.4" y="805" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.42" y="815.5" ></text>
</g>
<g >
<title>pick_next_task (10,030,176,448 samples, 0.25%)</title><rect x="1143.3" y="1477" width="2.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1146.29" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_select (2,495,313,484 samples, 0.06%)</title><rect x="38.7" y="1493" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="41.71" y="1503.5" ></text>
</g>
<g >
<title>__init_rwsem (1,230,849,220 samples, 0.03%)</title><rect x="793.3" y="1285" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="796.26" y="1295.5" ></text>
</g>
<g >
<title>rcu_core (1,443,685,070 samples, 0.04%)</title><rect x="685.4" y="1349" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="688.35" y="1359.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (703,956,256 samples, 0.02%)</title><rect x="56.4" y="1237" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="59.40" y="1247.5" ></text>
</g>
<g >
<title>__schedule (478,396,923 samples, 0.01%)</title><rect x="658.9" y="1365" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="661.93" y="1375.5" ></text>
</g>
<g >
<title>put_prev_task_fair (2,045,134,202 samples, 0.05%)</title><rect x="615.3" y="1253" width="0.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="618.35" y="1263.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,533,641,636 samples, 0.04%)</title><rect x="16.6" y="1573" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="19.59" y="1583.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (502,142,942 samples, 0.01%)</title><rect x="54.4" y="1541" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="57.38" y="1551.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (2,164,992,631 samples, 0.05%)</title><rect x="1049.2" y="1269" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1052.22" y="1279.5" ></text>
</g>
<g >
<title>__fget_light (1,026,271,114 samples, 0.03%)</title><rect x="750.8" y="1349" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="753.83" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="965" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="975.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (377,812,648 samples, 0.01%)</title><rect x="1117.4" y="1477" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1120.44" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1061" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1071.5" ></text>
</g>
<g >
<title>__switch_to_asm (632,520,944 samples, 0.02%)</title><rect x="1168.2" y="1573" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1171.20" y="1583.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,612,410,345 samples, 0.04%)</title><rect x="1142.6" y="1445" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1145.58" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (773,602,169 samples, 0.02%)</title><rect x="11.3" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.31" y="1407.5" ></text>
</g>
<g >
<title>discard_slab (396,057,562 samples, 0.01%)</title><rect x="1053.7" y="1221" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1056.68" y="1231.5" ></text>
</g>
<g >
<title>process_one_work (1,251,989,207 samples, 0.03%)</title><rect x="1034.3" y="1509" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1037.30" y="1519.5" ></text>
</g>
<g >
<title>do_idle (697,374,380 samples, 0.02%)</title><rect x="59.2" y="1525" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="62.17" y="1535.5" ></text>
</g>
<g >
<title>do_sys_poll (379,748,156 samples, 0.01%)</title><rect x="56.9" y="1461" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="59.86" y="1471.5" ></text>
</g>
<g >
<title>amd_clear_divider (461,969,867 samples, 0.01%)</title><rect x="756.4" y="1365" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="759.41" y="1375.5" ></text>
</g>
<g >
<title>newidle_balance (2,663,495,536 samples, 0.07%)</title><rect x="614.0" y="1237" width="0.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="616.98" y="1247.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (6,189,779,741 samples, 0.15%)</title><rect x="55.0" y="1525" width="1.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="57.97" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (465,208,380 samples, 0.01%)</title><rect x="915.8" y="1205" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="918.81" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (475,007,076 samples, 0.01%)</title><rect x="784.7" y="1301" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="787.68" y="1311.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (378,869,739 samples, 0.01%)</title><rect x="850.3" y="1285" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="853.28" y="1295.5" ></text>
</g>
<g >
<title>rseq_get_rseq_cs (1,832,788,481 samples, 0.05%)</title><rect x="891.7" y="1301" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="894.71" y="1311.5" ></text>
</g>
<g >
<title>start_secondary (3,522,859,483 samples, 0.09%)</title><rect x="15.1" y="1557" width="1.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="18.05" y="1567.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get_mut (636,725,011 samples, 0.02%)</title><rect x="62.5" y="1573" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="65.48" y="1583.5" ></text>
</g>
<g >
<title>update_cfs_group (5,187,521,631 samples, 0.13%)</title><rect x="601.8" y="1221" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="604.76" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,066,084,891 samples, 0.08%)</title><rect x="51.4" y="1349" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.39" y="1359.5" ></text>
</g>
<g >
<title>pick_next_task (33,369,102,975 samples, 0.83%)</title><rect x="666.7" y="1333" width="9.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="669.65" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,936,577,308 samples, 0.05%)</title><rect x="51.4" y="949" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.41" y="959.5" ></text>
</g>
<g >
<title>__switch_to (510,670,250 samples, 0.01%)</title><rect x="43.3" y="1477" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="46.30" y="1487.5" ></text>
</g>
<g >
<title>command_substitute (638,643,422 samples, 0.02%)</title><rect x="1016.7" y="1301" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1019.71" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (681,681,569 samples, 0.02%)</title><rect x="51.5" y="421" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.46" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_clone (4,773,652,195 samples, 0.12%)</title><rect x="1023.7" y="1525" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1026.69" y="1535.5" ></text>
</g>
<g >
<title>[anon] (392,821,626,329 samples, 9.74%)</title><rect x="62.7" y="1573" width="114.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="65.69" y="1583.5" >[anon]</text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (1,493,545,514 samples, 0.04%)</title><rect x="1007.3" y="1557" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1010.27" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_execve (611,429,845 samples, 0.02%)</title><rect x="23.3" y="1541" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="26.29" y="1551.5" ></text>
</g>
<g >
<title>sel_ldr (3,258,850,356,852 samples, 80.78%)</title><rect x="62.0" y="1589" width="953.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="64.99" y="1599.5" >sel_ldr</text>
</g>
<g >
<title>execute_command_internal (855,836,468 samples, 0.02%)</title><rect x="1015.8" y="1429" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1018.82" y="1439.5" ></text>
</g>
<g >
<title>__do_softirq (788,310,305 samples, 0.02%)</title><rect x="15.1" y="1381" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="18.13" y="1391.5" ></text>
</g>
<g >
<title>memcpy@plt (1,528,517,490 samples, 0.04%)</title><rect x="418.3" y="1493" width="0.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="421.31" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1157" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1167.5" ></text>
</g>
<g >
<title>sched_clock (688,433,689 samples, 0.02%)</title><rect x="678.5" y="1317" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="681.46" y="1327.5" ></text>
</g>
<g >
<title>__switch_to (378,431,063 samples, 0.01%)</title><rect x="22.7" y="1573" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="25.66" y="1583.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (752,340,611 samples, 0.02%)</title><rect x="175.8" y="1557" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="178.79" y="1567.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (461,269,723 samples, 0.01%)</title><rect x="558.1" y="1333" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="561.13" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock (682,212,430 samples, 0.02%)</title><rect x="1185.4" y="1477" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1188.39" y="1487.5" ></text>
</g>
<g >
<title>__switch_to (3,521,049,471 samples, 0.09%)</title><rect x="596.6" y="1269" width="1.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="599.64" y="1279.5" ></text>
</g>
<g >
<title>[bash] (538,404,859 samples, 0.01%)</title><rect x="1016.5" y="1157" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1019.50" y="1167.5" ></text>
</g>
<g >
<title>Glob::isIgnored (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1525" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="55.71" y="1535.5" ></text>
</g>
<g >
<title>native_sched_clock (2,004,423,414 samples, 0.05%)</title><rect x="622.8" y="1205" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="625.83" y="1215.5" ></text>
</g>
<g >
<title>do_idle (3,589,149,663 samples, 0.09%)</title><rect x="1188.0" y="1461" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1190.99" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,798,774,014 samples, 0.04%)</title><rect x="51.4" y="885" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.41" y="895.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (4,245,307,056 samples, 0.11%)</title><rect x="48.7" y="1317" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="51.67" y="1327.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (9,484,134,671 samples, 0.24%)</title><rect x="387.8" y="1461" width="2.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="390.79" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1461" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1471.5" ></text>
</g>
<g >
<title>inet_sendmsg (3,419,519,610 samples, 0.08%)</title><rect x="951.8" y="1397" width="1.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="954.84" y="1407.5" ></text>
</g>
<g >
<title>sock_free_inode (536,665,945 samples, 0.01%)</title><rect x="24.2" y="1413" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="27.17" y="1423.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::nonblock_accept (738,758,434,373 samples, 18.31%)</title><rect x="727.8" y="1445" width="216.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="730.76" y="1455.5" >rustposix::interface::comm::..</text>
</g>
<g >
<title>core::time::Duration::new (794,053,664 samples, 0.02%)</title><rect x="949.1" y="1349" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="952.14" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,318,217,144 samples, 0.08%)</title><rect x="51.4" y="1397" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.38" y="1407.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (26,854,647,561 samples, 0.67%)</title><rect x="1158.2" y="1541" width="7.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1161.23" y="1551.5" ></text>
</g>
<g >
<title>native_sched_clock (1,183,396,683 samples, 0.03%)</title><rect x="1134.5" y="1397" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1137.48" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="165" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="175.5" ></text>
</g>
<g >
<title>uv_spawn (4,342,163,786 samples, 0.11%)</title><rect x="48.7" y="1493" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="51.66" y="1503.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (6,883,617,948 samples, 0.17%)</title><rect x="921.9" y="1125" width="2.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="924.93" y="1135.5" ></text>
</g>
<g >
<title>arch_call_rest_init (3,680,614,853 samples, 0.09%)</title><rect x="1188.0" y="1509" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1190.98" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,086,762,164 samples, 0.05%)</title><rect x="51.4" y="1045" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.40" y="1055.5" ></text>
</g>
<g >
<title>vfs_read (411,309,797 samples, 0.01%)</title><rect x="59.9" y="1509" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="62.90" y="1519.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (517,782,934 samples, 0.01%)</title><rect x="344.4" y="1525" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="347.36" y="1535.5" ></text>
</g>
<g >
<title>NaClLog (6,106,252,215 samples, 0.15%)</title><rect x="998.8" y="1557" width="1.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1001.79" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,149,446,939 samples, 0.03%)</title><rect x="52.9" y="133" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="143.5" ></text>
</g>
<g >
<title>clock_gettime (93,049,754,547 samples, 2.31%)</title><rect x="355.4" y="1477" width="27.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="358.40" y="1487.5" >c..</text>
</g>
<g >
<title>__do_softirq (459,929,281 samples, 0.01%)</title><rect x="718.1" y="1221" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="721.05" y="1231.5" ></text>
</g>
<g >
<title>_compound_head (1,568,626,142 samples, 0.04%)</title><rect x="1024.1" y="1381" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1027.09" y="1391.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (407,625,102 samples, 0.01%)</title><rect x="952.6" y="965" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="955.56" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1157" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="1167.5" ></text>
</g>
<g >
<title>call_cpuidle (459,214,108 samples, 0.01%)</title><rect x="59.2" y="1493" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="62.17" y="1503.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1,973,112,130 samples, 0.05%)</title><rect x="674.2" y="1285" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="677.25" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1173" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="821" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="831.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (529,876,987 samples, 0.01%)</title><rect x="942.5" y="1349" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="945.48" y="1359.5" ></text>
</g>
<g >
<title>kmem_cache_free (499,100,361 samples, 0.01%)</title><rect x="1159.5" y="1237" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1162.54" y="1247.5" ></text>
</g>
<g >
<title>cpu_startup_entry (26,753,375,416 samples, 0.66%)</title><rect x="1158.2" y="1477" width="7.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1161.23" y="1487.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (5,542,658,873 samples, 0.14%)</title><rect x="48.6" y="1557" width="1.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="51.65" y="1567.5" ></text>
</g>
<g >
<title>mmput (635,898,657 samples, 0.02%)</title><rect x="23.5" y="1477" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="26.48" y="1487.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,385,735,094 samples, 0.28%)</title><rect x="1170.5" y="1445" width="3.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1173.51" y="1455.5" ></text>
</g>
<g >
<title>rcu_core (687,563,463 samples, 0.02%)</title><rect x="666.5" y="1237" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="669.45" y="1247.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,239,235,233 samples, 0.11%)</title><rect x="1015.8" y="1541" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1018.81" y="1551.5" ></text>
</g>
<g >
<title>dup_mmap (4,245,307,056 samples, 0.11%)</title><rect x="48.7" y="1301" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="51.67" y="1311.5" ></text>
</g>
<g >
<title>__do_sys_clone (1,836,403,277 samples, 0.05%)</title><rect x="50.3" y="1397" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="53.32" y="1407.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,992,426,818 samples, 0.05%)</title><rect x="570.3" y="1365" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="573.26" y="1375.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (764,965,258 samples, 0.02%)</title><rect x="1168.8" y="1525" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1171.79" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,612,325,471 samples, 0.06%)</title><rect x="51.4" y="1205" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.40" y="1215.5" ></text>
</g>
<g >
<title>fdarray__poll (404,398,272 samples, 0.01%)</title><rect x="56.9" y="1541" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="59.86" y="1551.5" ></text>
</g>
<g >
<title>futex_wake_mark (13,179,409,838 samples, 0.33%)</title><rect x="708.4" y="1333" width="3.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="711.43" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1381" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="757" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="767.5" ></text>
</g>
<g >
<title>sock_alloc_inode (74,357,001,099 samples, 1.84%)</title><rect x="801.5" y="1285" width="21.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="804.55" y="1295.5" >s..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7,530,333,939 samples, 0.19%)</title><rect x="649.7" y="1413" width="2.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="652.69" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (1,477,703,599 samples, 0.04%)</title><rect x="177.0" y="1557" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="180.04" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,035,880,122 samples, 0.03%)</title><rect x="51.4" y="597" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.44" y="607.5" ></text>
</g>
<g >
<title>tcp_seq_start (348,512,726 samples, 0.01%)</title><rect x="54.7" y="1349" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="57.67" y="1359.5" ></text>
</g>
<g >
<title>bprm_execve (459,769,403 samples, 0.01%)</title><rect x="1017.1" y="1509" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1020.11" y="1519.5" ></text>
</g>
<g >
<title>rcu_core (421,179,591 samples, 0.01%)</title><rect x="734.0" y="1301" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="736.97" y="1311.5" ></text>
</g>
<g >
<title>HandleStackContext (110,165,097,353 samples, 2.73%)</title><rect x="225.2" y="1541" width="32.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="228.23" y="1551.5" >Ha..</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2,819,066,926 samples, 0.07%)</title><rect x="605.9" y="1205" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="608.87" y="1215.5" ></text>
</g>
<g >
<title>unmap_single_vma (578,396,883 samples, 0.01%)</title><rect x="1168.8" y="1333" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1171.84" y="1343.5" ></text>
</g>
<g >
<title>ct_kernel_exit_state (992,804,655 samples, 0.02%)</title><rect x="1064.4" y="1429" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1067.43" y="1439.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (539,428,565 samples, 0.01%)</title><rect x="58.1" y="1189" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="61.08" y="1199.5" ></text>
</g>
<g >
<title>rcu_core_si (771,587,525 samples, 0.02%)</title><rect x="15.1" y="1365" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="18.13" y="1375.5" ></text>
</g>
<g >
<title>bprm_execve (5,474,635,341 samples, 0.14%)</title><rect x="1029.0" y="1509" width="1.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1032.01" y="1519.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (4,143,710,688 samples, 0.10%)</title><rect x="1155.8" y="1477" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1158.78" y="1487.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (424,802,724 samples, 0.01%)</title><rect x="1033.0" y="1381" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1036.05" y="1391.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (423,025,895 samples, 0.01%)</title><rect x="749.6" y="1301" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="752.58" y="1311.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (13,216,349,381 samples, 0.33%)</title><rect x="722.2" y="1301" width="3.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="725.24" y="1311.5" ></text>
</g>
<g >
<title>execute_command (2,838,965,786 samples, 0.07%)</title><rect x="1016.1" y="1445" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1019.07" y="1455.5" ></text>
</g>
<g >
<title>[perf-751824.map] (9,136,459,942 samples, 0.23%)</title><rect x="48.5" y="1573" width="2.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="51.48" y="1583.5" ></text>
</g>
<g >
<title>mod_objcg_state (2,060,364,957 samples, 0.05%)</title><rect x="1050.0" y="1285" width="0.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1053.03" y="1295.5" ></text>
</g>
<g >
<title>__sched_yield (56,800,261,265 samples, 1.41%)</title><rect x="553.5" y="1413" width="16.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="556.51" y="1423.5" ></text>
</g>
<g >
<title>__do_softirq (557,971,400 samples, 0.01%)</title><rect x="952.5" y="1125" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="955.55" y="1135.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (13,889,030,567 samples, 0.34%)</title><rect x="609.0" y="1269" width="4.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="611.98" y="1279.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (342,660,645 samples, 0.01%)</title><rect x="759.3" y="1333" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="762.26" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (705,301,392 samples, 0.02%)</title><rect x="51.4" y="453" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.45" y="463.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1,085,503,510 samples, 0.03%)</title><rect x="601.2" y="1221" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="604.23" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="981" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="991.5" ></text>
</g>
<g >
<title>set_default_locale (343,030,828 samples, 0.01%)</title><rect x="1017.0" y="1509" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1019.95" y="1519.5" ></text>
</g>
<g >
<title>psi_group_change (706,578,971 samples, 0.02%)</title><rect x="1165.3" y="1397" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1168.31" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="389" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="357" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="367.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1,085,494,084 samples, 0.03%)</title><rect x="761.2" y="1333" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="764.19" y="1343.5" ></text>
</g>
<g >
<title>setlocale (2,071,583,221 samples, 0.05%)</title><rect x="11.2" y="1509" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="14.22" y="1519.5" ></text>
</g>
<g >
<title>mntput_no_expire (917,540,935 samples, 0.02%)</title><rect x="934.0" y="1269" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="936.95" y="1279.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (3,756,429,944 samples, 0.09%)</title><rect x="945.9" y="1413" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="948.85" y="1423.5" ></text>
</g>
<g >
<title>copy_p4d_range (3,437,883,151 samples, 0.09%)</title><rect x="48.8" y="1269" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="51.78" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="309" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="319.5" ></text>
</g>
<g >
<title>sock_free_inode (16,752,487,260 samples, 0.42%)</title><rect x="1051.6" y="1301" width="4.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1054.57" y="1311.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (348,264,920 samples, 0.01%)</title><rect x="16.1" y="1541" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="19.08" y="1551.5" ></text>
</g>
<g >
<title>put_cpu_partial (347,829,884 samples, 0.01%)</title><rect x="1057.7" y="1269" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1060.66" y="1279.5" ></text>
</g>
<g >
<title>do_iter_read (1,975,450,116 samples, 0.05%)</title><rect x="453.5" y="1253" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="456.50" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1397" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1407.5" ></text>
</g>
<g >
<title>execute_command_internal (2,185,352,956 samples, 0.05%)</title><rect x="1016.1" y="1381" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1019.07" y="1391.5" ></text>
</g>
<g >
<title>pick_next_entity (1,515,870,042 samples, 0.04%)</title><rect x="562.4" y="1269" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="565.41" y="1279.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (720,652,104 samples, 0.02%)</title><rect x="16.6" y="1509" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="19.62" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,249,381,106 samples, 0.06%)</title><rect x="51.4" y="1061" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.40" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,798,774,014 samples, 0.04%)</title><rect x="51.4" y="869" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.41" y="879.5" ></text>
</g>
<g >
<title>wb_do_writeback (665,402,217 samples, 0.02%)</title><rect x="1034.5" y="1477" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1037.47" y="1487.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,871,124,403 samples, 0.10%)</title><rect x="15.1" y="1573" width="1.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="18.05" y="1583.5" ></text>
</g>
<g >
<title>sshd (78,508,713,732 samples, 1.95%)</title><rect x="1166.1" y="1589" width="23.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1169.10" y="1599.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="325" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="389" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="399.5" ></text>
</g>
<g >
<title>__slab_free (617,166,892 samples, 0.02%)</title><rect x="1172.9" y="1285" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1175.89" y="1295.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (523,421,473 samples, 0.01%)</title><rect x="726.6" y="1381" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="729.63" y="1391.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (833,897,555 samples, 0.02%)</title><rect x="1036.9" y="1509" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1039.93" y="1519.5" ></text>
</g>
<g >
<title>zap_pte_range (2,071,405,249 samples, 0.05%)</title><rect x="1029.9" y="1285" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1032.92" y="1295.5" ></text>
</g>
<g >
<title>rb_erase (750,622,100 samples, 0.02%)</title><rect x="1144.1" y="1445" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1147.09" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="757" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,255,654,819 samples, 0.06%)</title><rect x="51.4" y="1109" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.40" y="1119.5" ></text>
</g>
<g >
<title>do_idle (61,341,101,134 samples, 1.52%)</title><rect x="1169.9" y="1525" width="17.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1172.87" y="1535.5" ></text>
</g>
<g >
<title>_copy_to_iter (916,365,285 samples, 0.02%)</title><rect x="1189.5" y="1237" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1192.52" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (886,713,091 samples, 0.02%)</title><rect x="51.4" y="501" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.44" y="511.5" ></text>
</g>
<g >
<title>release_pages (414,241,684 samples, 0.01%)</title><rect x="1030.3" y="1221" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1033.29" y="1231.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (677,575,389 samples, 0.02%)</title><rect x="917.6" y="1189" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="920.59" y="1199.5" ></text>
</g>
<g >
<title>exec_binprm (5,423,376,445 samples, 0.13%)</title><rect x="1029.0" y="1477" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1032.02" y="1487.5" ></text>
</g>
<g >
<title>lind_select (1,700,965,220,343 samples, 42.16%)</title><rect x="454.1" y="1509" width="497.6" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="457.14" y="1519.5" >lind_select</text>
</g>
<g >
<title>[bash] (390,204,134 samples, 0.01%)</title><rect x="1016.5" y="1109" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1019.50" y="1119.5" ></text>
</g>
<g >
<title>recvfrom (3,416,980,582 samples, 0.08%)</title><rect x="947.0" y="1413" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="949.95" y="1423.5" ></text>
</g>
<g >
<title>psi_group_change (1,622,401,644 samples, 0.04%)</title><rect x="44.5" y="1461" width="0.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="47.53" y="1471.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::sub_timespec (2,187,108,949 samples, 0.05%)</title><rect x="948.7" y="1365" width="0.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="951.73" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (516,853,706 samples, 0.01%)</title><rect x="11.9" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.87" y="1519.5" ></text>
</g>
<g >
<title>record_times (683,350,859 samples, 0.02%)</title><rect x="1150.0" y="1445" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1152.95" y="1455.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (12,813,450,523 samples, 0.32%)</title><rect x="648.2" y="1429" width="3.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="651.17" y="1439.5" ></text>
</g>
<g >
<title>__do_softirq (1,466,741,655 samples, 0.04%)</title><rect x="685.4" y="1381" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="688.35" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,132,065,477 samples, 0.03%)</title><rect x="51.4" y="629" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.44" y="639.5" ></text>
</g>
<g >
<title>mm_cid_get (402,022,503 samples, 0.01%)</title><rect x="1143.2" y="1477" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1146.17" y="1487.5" ></text>
</g>
<g >
<title>epoll_wait (463,415,522 samples, 0.01%)</title><rect x="1189.1" y="1493" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1192.12" y="1503.5" ></text>
</g>
<g >
<title>free_pgtables (542,265,842 samples, 0.01%)</title><rect x="1029.0" y="1349" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1032.04" y="1359.5" ></text>
</g>
<g >
<title>plist_add (648,902,475 samples, 0.02%)</title><rect x="590.5" y="1301" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="593.46" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1509" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="55.71" y="1519.5" ></text>
</g>
<g >
<title>getgrgid_r (465,807,069 samples, 0.01%)</title><rect x="18.3" y="1445" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="21.26" y="1455.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (10,388,991,382 samples, 0.26%)</title><rect x="797.9" y="1253" width="3.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="800.86" y="1263.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (1,425,645,587 samples, 0.04%)</title><rect x="64.2" y="1557" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="67.22" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_enter (451,715,334 samples, 0.01%)</title><rect x="59.2" y="1477" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="62.17" y="1487.5" ></text>
</g>
<g >
<title>sleep (508,064,004,652 samples, 12.59%)</title><rect x="1017.5" y="1589" width="148.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1020.49" y="1599.5" >sleep</text>
</g>
<g >
<title>__slab_free (869,659,112 samples, 0.02%)</title><rect x="1032.6" y="1381" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1035.64" y="1391.5" ></text>
</g>
<g >
<title>inode_init_once (3,884,401,234 samples, 0.10%)</title><rect x="809.2" y="1157" width="1.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="812.18" y="1167.5" ></text>
</g>
<g >
<title>exit_mmap (629,850,246 samples, 0.02%)</title><rect x="23.5" y="1445" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="26.48" y="1455.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (377,163,677 samples, 0.01%)</title><rect x="1185.6" y="1477" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1188.59" y="1487.5" ></text>
</g>
<g >
<title>dequeue_entity (29,164,916,593 samples, 0.72%)</title><rect x="599.5" y="1237" width="8.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="602.51" y="1247.5" ></text>
</g>
<g >
<title>get_page_from_freelist (837,867,338 samples, 0.02%)</title><rect x="952.0" y="1285" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="955.03" y="1295.5" ></text>
</g>
<g >
<title>down_write (3,822,183,424 samples, 0.09%)</title><rect x="937.8" y="1253" width="1.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="940.76" y="1263.5" ></text>
</g>
<g >
<title>__do_softirq (2,344,898,612 samples, 0.06%)</title><rect x="1180.8" y="1365" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1183.83" y="1375.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (6,862,681,291 samples, 0.17%)</title><rect x="918.1" y="1173" width="2.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="921.08" y="1183.5" ></text>
</g>
<g >
<title>sched_clock (1,252,938,070 samples, 0.03%)</title><rect x="1154.4" y="1461" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1157.42" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (1,357,202,244 samples, 0.03%)</title><rect x="946.3" y="1349" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="949.32" y="1359.5" ></text>
</g>
<g >
<title>irq_exit_rcu (421,179,591 samples, 0.01%)</title><rect x="734.0" y="1365" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="736.97" y="1375.5" ></text>
</g>
<g >
<title>__fget_light (27,732,357,165 samples, 0.69%)</title><rect x="741.6" y="1333" width="8.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="744.59" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="661" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="671.5" ></text>
</g>
<g >
<title>__free_slab (355,999,903 samples, 0.01%)</title><rect x="1053.7" y="1189" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1056.70" y="1199.5" ></text>
</g>
<g >
<title>copy_page_range (1,521,839,422 samples, 0.04%)</title><rect x="50.4" y="1317" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="53.35" y="1327.5" ></text>
</g>
<g >
<title>kmem_cache_free (862,876,057 samples, 0.02%)</title><rect x="1172.8" y="1301" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1175.85" y="1311.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (554,057,298 samples, 0.01%)</title><rect x="47.4" y="1413" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="50.42" y="1423.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (407,625,102 samples, 0.01%)</title><rect x="952.6" y="981" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="955.56" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="511.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (5,474,635,341 samples, 0.14%)</title><rect x="1029.0" y="1493" width="1.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1032.01" y="1503.5" ></text>
</g>
<g >
<title>setfl (555,100,442 samples, 0.01%)</title><rect x="756.2" y="1349" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="759.24" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (505,308,516 samples, 0.01%)</title><rect x="1030.6" y="1541" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1033.62" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1285" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="1295.5" ></text>
</g>
<g >
<title>sched_clock_cpu (371,245,126 samples, 0.01%)</title><rect x="677.9" y="1333" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="680.85" y="1343.5" ></text>
</g>
<g >
<title>inode_free_by_rcu (1,346,350,296 samples, 0.03%)</title><rect x="1111.8" y="1301" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1114.80" y="1311.5" ></text>
</g>
<g >
<title>__filemap_add_folio (1,161,323,670 samples, 0.03%)</title><rect x="57.4" y="1189" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="60.43" y="1199.5" ></text>
</g>
<g >
<title>init_file (32,167,199,071 samples, 0.80%)</title><rect x="827.9" y="1269" width="9.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="830.89" y="1279.5" ></text>
</g>
<g >
<title>perf_mmap__push (5,958,845,058 samples, 0.15%)</title><rect x="57.0" y="1509" width="1.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="59.99" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="309" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,063,330,820 samples, 0.05%)</title><rect x="11.2" y="1477" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.22" y="1487.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (2,552,571,691 samples, 0.06%)</title><rect x="23.9" y="1573" width="0.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="26.85" y="1583.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (384,929,366 samples, 0.01%)</title><rect x="50.1" y="1509" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="53.11" y="1519.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::check_select_read (6,300,180,516 samples, 0.16%)</title><rect x="943.8" y="1445" width="1.9" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="946.84" y="1455.5" ></text>
</g>
<g >
<title>ksys_read (411,309,797 samples, 0.01%)</title><rect x="59.9" y="1525" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="62.90" y="1535.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2,572,717,569 samples, 0.06%)</title><rect x="568.9" y="1349" width="0.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="571.94" y="1359.5" ></text>
</g>
<g >
<title>reweight_entity (1,717,088,449 samples, 0.04%)</title><rect x="1126.1" y="1381" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1129.12" y="1391.5" ></text>
</g>
<g >
<title>new_slab (958,457,776 samples, 0.02%)</title><rect x="800.4" y="1221" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="803.41" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="357" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="367.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (503,556,351 samples, 0.01%)</title><rect x="1015.3" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1018.29" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,022,845,422 samples, 0.03%)</title><rect x="1166.9" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1169.93" y="1583.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (4,027,730,897 samples, 0.10%)</title><rect x="192.7" y="1557" width="1.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="195.71" y="1567.5" ></text>
</g>
<g >
<title>__fdget (7,637,929,318 samples, 0.19%)</title><rect x="772.4" y="1349" width="2.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="775.45" y="1359.5" ></text>
</g>
<g >
<title>expand_files (914,674,230 samples, 0.02%)</title><rect x="882.4" y="1317" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="885.44" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,091,647,812 samples, 0.10%)</title><rect x="403.4" y="1509" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="406.45" y="1519.5" ></text>
</g>
<g >
<title>prepare_task_switch (1,875,859,607 samples, 0.05%)</title><rect x="616.0" y="1269" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="619.04" y="1279.5" ></text>
</g>
<g >
<title>__schedule (108,128,888,486 samples, 2.68%)</title><rect x="591.8" y="1285" width="31.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="594.80" y="1295.5" >__..</text>
</g>
<g >
<title>ct_kernel_exit_state (572,004,023 samples, 0.01%)</title><rect x="1063.9" y="1429" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1066.90" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="837" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="847.5" ></text>
</g>
<g >
<title>load_elf_binary (5,412,768,600 samples, 0.13%)</title><rect x="1029.0" y="1445" width="1.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1032.02" y="1455.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (191,094,353,919 samples, 4.74%)</title><rect x="886.6" y="1349" width="55.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="889.59" y="1359.5" >exit_..</text>
</g>
<g >
<title>x86_64_start_reservations (3,680,614,853 samples, 0.09%)</title><rect x="1188.0" y="1541" width="1.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1190.98" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_statx (356,677,966 samples, 0.01%)</title><rect x="18.5" y="1429" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="21.52" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1317" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="1327.5" ></text>
</g>
<g >
<title>rcu_core_si (435,310,815 samples, 0.01%)</title><rect x="576.4" y="1317" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="579.44" y="1327.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (634,359,869 samples, 0.02%)</title><rect x="13.3" y="1445" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="16.35" y="1455.5" ></text>
</g>
<g >
<title>copy_pte_range (2,876,182,184 samples, 0.07%)</title><rect x="48.9" y="1253" width="0.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="51.94" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1461" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1471.5" ></text>
</g>
<g >
<title>__schedule (7,270,066,359 samples, 0.18%)</title><rect x="1185.0" y="1493" width="2.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1188.01" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (504,801,767 samples, 0.01%)</title><rect x="1017.8" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1020.77" y="1535.5" ></text>
</g>
<g >
<title>[libcrypto.so.3] (1,516,199,542 samples, 0.04%)</title><rect x="1167.4" y="1573" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1170.43" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,117,971,888 samples, 0.05%)</title><rect x="946.3" y="1365" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="949.29" y="1375.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (347,256,638 samples, 0.01%)</title><rect x="1016.2" y="1173" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1019.24" y="1183.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (601,392,054 samples, 0.01%)</title><rect x="1152.8" y="1493" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1155.75" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (8,685,343,794 samples, 0.22%)</title><rect x="768.0" y="1413" width="2.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="770.97" y="1423.5" ></text>
</g>
<g >
<title>seq_read_iter (367,776,726 samples, 0.01%)</title><rect x="59.9" y="1493" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="62.90" y="1503.5" ></text>
</g>
<g >
<title>lock_sock_nested (363,739,664 samples, 0.01%)</title><rect x="786.1" y="1317" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="789.13" y="1327.5" ></text>
</g>
<g >
<title>kernel_clone (1,836,403,277 samples, 0.05%)</title><rect x="50.3" y="1381" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="53.32" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="677" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="687.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3,171,528,636 samples, 0.08%)</title><rect x="866.7" y="1269" width="1.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="869.72" y="1279.5" ></text>
</g>
<g >
<title>epoll_wait (385,272,573 samples, 0.01%)</title><rect x="53.7" y="1541" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="56.73" y="1551.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (444,951,996 samples, 0.01%)</title><rect x="1188.7" y="1413" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1191.71" y="1423.5" ></text>
</g>
<g >
<title>tick_nohz_stop_idle (362,632,916 samples, 0.01%)</title><rect x="1165.9" y="1429" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1168.89" y="1439.5" ></text>
</g>
<g >
<title>cpu_startup_entry (470,166,544 samples, 0.01%)</title><rect x="1017.3" y="1541" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1020.34" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_futex (90,093,985,773 samples, 2.23%)</title><rect x="700.1" y="1381" width="26.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="703.07" y="1391.5" >_..</text>
</g>
<g >
<title>NaClLog (6,850,778,959 samples, 0.17%)</title><rect x="190.1" y="1557" width="2.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="193.15" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,340,749,297 samples, 0.03%)</title><rect x="51.4" y="709" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.42" y="719.5" ></text>
</g>
<g >
<title>getgrgid (465,807,069 samples, 0.01%)</title><rect x="18.3" y="1461" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="21.26" y="1471.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1,697,823,542 samples, 0.04%)</title><rect x="1189.4" y="1317" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.37" y="1327.5" ></text>
</g>
<g >
<title>schedule_idle (520,679,587 samples, 0.01%)</title><rect x="1188.9" y="1445" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1191.87" y="1455.5" ></text>
</g>
<g >
<title>kthread (2,522,430,548 samples, 0.06%)</title><rect x="23.9" y="1541" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="26.86" y="1551.5" ></text>
</g>
<g >
<title>irq_exit_rcu (413,509,894 samples, 0.01%)</title><rect x="749.6" y="1285" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="752.58" y="1295.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (439,845,259 samples, 0.01%)</title><rect x="849.2" y="1269" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="852.21" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1445" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (787,722,636 samples, 0.02%)</title><rect x="23.5" y="1541" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="26.47" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="597" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="607.5" ></text>
</g>
<g >
<title>rcu_do_batch (1,519,891,674 samples, 0.04%)</title><rect x="1169.3" y="1445" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1172.27" y="1455.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (611,429,845 samples, 0.02%)</title><rect x="23.3" y="1525" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="26.29" y="1535.5" ></text>
</g>
<g >
<title>__do_softirq (421,179,591 samples, 0.01%)</title><rect x="734.0" y="1333" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="736.97" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (543,674,588 samples, 0.01%)</title><rect x="51.5" y="389" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.46" y="399.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (8,273,906,312 samples, 0.21%)</title><rect x="889.8" y="1317" width="2.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="892.82" y="1327.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,466,741,655 samples, 0.04%)</title><rect x="685.4" y="1413" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="688.35" y="1423.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (1,891,469,508 samples, 0.05%)</title><rect x="1096.8" y="1429" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1099.77" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1333" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1343.5" ></text>
</g>
<g >
<title>search_binary_handler (5,419,565,671 samples, 0.13%)</title><rect x="1029.0" y="1461" width="1.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1032.02" y="1471.5" ></text>
</g>
<g >
<title>consume_stock (401,236,910 samples, 0.01%)</title><rect x="822.6" y="1205" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="825.63" y="1215.5" ></text>
</g>
<g >
<title>start_secondary (2,448,550,730 samples, 0.06%)</title><rect x="13.3" y="1557" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="16.32" y="1567.5" ></text>
</g>
<g >
<title>rcu_do_batch (13,825,167,684 samples, 0.34%)</title><rect x="1109.0" y="1317" width="4.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1111.99" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1205" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1215.5" ></text>
</g>
<g >
<title>filename_lookup (392,535,858 samples, 0.01%)</title><rect x="52.4" y="1397" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="55.40" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,639,089,153 samples, 0.04%)</title><rect x="51.4" y="853" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.41" y="863.5" ></text>
</g>
<g >
<title>pool-udisksd (1,027,525,425 samples, 0.03%)</title><rect x="59.1" y="1589" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="62.07" y="1599.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (659,847,212 samples, 0.02%)</title><rect x="62.7" y="1557" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="65.69" y="1567.5" ></text>
</g>
<g >
<title>futex_hash (1,854,847,109 samples, 0.05%)</title><rect x="626.2" y="1301" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="629.23" y="1311.5" ></text>
</g>
<g >
<title>rcu_core_si (2,112,423,554 samples, 0.05%)</title><rect x="38.0" y="1349" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="40.96" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,612,325,471 samples, 0.06%)</title><rect x="51.4" y="1189" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.40" y="1199.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (1,205,477,072 samples, 0.03%)</title><rect x="1007.7" y="1557" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1010.71" y="1567.5" ></text>
</g>
<g >
<title>copy_page_range (3,437,883,151 samples, 0.09%)</title><rect x="48.8" y="1285" width="1.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="51.78" y="1295.5" ></text>
</g>
<g >
<title>consume_obj_stock (1,032,053,062 samples, 0.03%)</title><rect x="862.6" y="1221" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="865.57" y="1231.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (6,581,386,674 samples, 0.16%)</title><rect x="901.2" y="1253" width="1.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="904.22" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,822,316,667 samples, 0.07%)</title><rect x="51.4" y="1269" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.40" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,939,782,829 samples, 0.05%)</title><rect x="1018.5" y="1541" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1021.49" y="1551.5" ></text>
</g>
<g >
<title>dequeue_task_fair (35,048,372,049 samples, 0.87%)</title><rect x="598.6" y="1253" width="10.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="601.60" y="1263.5" ></text>
</g>
<g >
<title>proc_reg_read (582,118,539 samples, 0.01%)</title><rect x="1025.4" y="1477" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1028.44" y="1487.5" ></text>
</g>
<g >
<title>refill_obj_stock (361,852,526 samples, 0.01%)</title><rect x="27.2" y="1269" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="30.16" y="1279.5" ></text>
</g>
<g >
<title>__get_user_8 (4,660,564,144 samples, 0.12%)</title><rect x="890.3" y="1301" width="1.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="893.34" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1285" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1295.5" ></text>
</g>
<g >
<title>inode_free_by_rcu (1,002,377,311 samples, 0.02%)</title><rect x="1033.2" y="1429" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1036.20" y="1439.5" ></text>
</g>
<g >
<title>update_process_times (1,004,286,029 samples, 0.02%)</title><rect x="1040.3" y="1333" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1043.26" y="1343.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,385,735,094 samples, 0.28%)</title><rect x="1170.5" y="1429" width="3.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1173.51" y="1439.5" ></text>
</g>
<g >
<title>refill_stock (372,699,608 samples, 0.01%)</title><rect x="1056.1" y="1221" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1059.10" y="1231.5" ></text>
</g>
<g >
<title>cpuidle_select (847,206,353 samples, 0.02%)</title><rect x="1163.2" y="1429" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1166.22" y="1439.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (1,694,307,940 samples, 0.04%)</title><rect x="566.2" y="1301" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="569.17" y="1311.5" ></text>
</g>
<g >
<title>__do_softirq (558,116,485 samples, 0.01%)</title><rect x="60.1" y="1381" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="63.12" y="1391.5" ></text>
</g>
<g >
<title>vfs_iter_write (5,448,007,772 samples, 0.14%)</title><rect x="57.1" y="1333" width="1.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="60.12" y="1343.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1,534,067,872 samples, 0.04%)</title><rect x="1014.7" y="1573" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1017.74" y="1583.5" ></text>
</g>
<g >
<title>do_fcntl (478,160,789 samples, 0.01%)</title><rect x="756.6" y="1365" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="759.55" y="1375.5" ></text>
</g>
<g >
<title>__memset (1,191,569,663 samples, 0.03%)</title><rect x="832.4" y="1237" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="835.37" y="1247.5" ></text>
</g>
<g >
<title>tick_nohz_stop_idle (616,943,923 samples, 0.02%)</title><rect x="1187.6" y="1493" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1190.60" y="1503.5" ></text>
</g>
<g >
<title>__srcu_read_lock (1,788,990,613 samples, 0.04%)</title><rect x="918.7" y="1125" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="921.69" y="1135.5" ></text>
</g>
<g >
<title>dentry_free (17,202,719,559 samples, 0.43%)</title><rect x="904.5" y="1253" width="5.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="907.54" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,774,894,317 samples, 0.04%)</title><rect x="948.2" y="1333" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="951.21" y="1343.5" ></text>
</g>
<g >
<title>__libc_start_main (2,076,518,509 samples, 0.05%)</title><rect x="11.2" y="1557" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="14.22" y="1567.5" ></text>
</g>
<g >
<title>write (5,852,419,133 samples, 0.15%)</title><rect x="57.0" y="1445" width="1.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="60.01" y="1455.5" ></text>
</g>
<g >
<title>__alloc_pages (854,750,354 samples, 0.02%)</title><rect x="952.0" y="1301" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="955.03" y="1311.5" ></text>
</g>
<g >
<title>[bash] (2,185,352,956 samples, 0.05%)</title><rect x="1016.1" y="1365" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1019.07" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (464,342,127 samples, 0.01%)</title><rect x="18.7" y="1477" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="21.68" y="1487.5" ></text>
</g>
<g >
<title>__put_user_8 (2,447,523,147 samples, 0.06%)</title><rect x="636.3" y="1301" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="639.26" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,322,262,535 samples, 0.03%)</title><rect x="51.4" y="677" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.43" y="687.5" ></text>
</g>
<g >
<title>vfs_read (695,470,900 samples, 0.02%)</title><rect x="54.6" y="1413" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="57.57" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="501" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="511.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1,817,123,025 samples, 0.05%)</title><rect x="725.6" y="1285" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="728.57" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="261" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="271.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (823,483,435 samples, 0.02%)</title><rect x="1017.8" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1020.76" y="1583.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (600,136,296 samples, 0.01%)</title><rect x="1124.9" y="1397" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1127.87" y="1407.5" ></text>
</g>
<g >
<title>[grep] (737,900,863 samples, 0.02%)</title><rect x="14.1" y="1525" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="17.11" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1333" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1343.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (12,349,592,975 samples, 0.31%)</title><rect x="252.9" y="1525" width="3.6" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="255.89" y="1535.5" ></text>
</g>
<g >
<title>ext4_fill_raw_inode (361,284,723 samples, 0.01%)</title><rect x="58.4" y="1125" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="61.39" y="1135.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (377,990,280 samples, 0.01%)</title><rect x="861.0" y="1221" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="863.99" y="1231.5" ></text>
</g>
<g >
<title>map_id_range_down (1,996,680,079 samples, 0.05%)</title><rect x="795.0" y="1253" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="798.01" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1493" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1503.5" ></text>
</g>
<g >
<title>mod_objcg_state (397,602,921 samples, 0.01%)</title><rect x="815.7" y="1253" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="818.72" y="1263.5" ></text>
</g>
<g >
<title>__schedule (597,749,760 samples, 0.01%)</title><rect x="47.6" y="1429" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="50.61" y="1439.5" ></text>
</g>
<g >
<title>rcu_core (14,003,761,659 samples, 0.35%)</title><rect x="1108.9" y="1333" width="4.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1111.94" y="1343.5" ></text>
</g>
<g >
<title>wake_q_add_safe (1,833,954,210 samples, 0.05%)</title><rect x="712.6" y="1333" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="715.65" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1237" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1247.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (6,250,853,726 samples, 0.15%)</title><rect x="925.2" y="1157" width="1.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="928.22" y="1167.5" ></text>
</g>
<g >
<title>page_remove_rmap (471,452,591 samples, 0.01%)</title><rect x="56.3" y="1269" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="59.26" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,399,744,806 samples, 0.18%)</title><rect x="1023.7" y="1541" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1026.68" y="1551.5" ></text>
</g>
<g >
<title>alloc_inode (103,714,164,030 samples, 2.57%)</title><rect x="793.0" y="1301" width="30.3" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="795.96" y="1311.5" >al..</text>
</g>
<g >
<title>mod_objcg_state (635,217,560 samples, 0.02%)</title><rect x="1111.5" y="1253" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1114.45" y="1263.5" ></text>
</g>
<g >
<title>cpuacct_charge (2,375,578,009 samples, 0.06%)</title><rect x="564.6" y="1253" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="567.64" y="1263.5" ></text>
</g>
<g >
<title>rcu_core (448,480,407 samples, 0.01%)</title><rect x="718.1" y="1189" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="721.05" y="1199.5" ></text>
</g>
<g >
<title>process_backlog (450,535,738 samples, 0.01%)</title><rect x="952.5" y="1077" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="955.55" y="1087.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (494,856,073 samples, 0.01%)</title><rect x="682.2" y="1397" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="685.19" y="1407.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,861,328,680 samples, 0.05%)</title><rect x="1031.9" y="1413" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1034.93" y="1423.5" ></text>
</g>
<g >
<title>accept (667,492,523 samples, 0.02%)</title><rect x="1010.2" y="1557" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1013.21" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="773" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="783.5" ></text>
</g>
<g >
<title>_compound_head (1,833,175,751 samples, 0.05%)</title><rect x="55.4" y="1285" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="58.40" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,022,606,929 samples, 0.03%)</title><rect x="51.4" y="549" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.44" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1301" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1311.5" ></text>
</g>
<g >
<title>i_callback (2,520,563,733 samples, 0.06%)</title><rect x="1172.1" y="1317" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1175.09" y="1327.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (675,521,146 samples, 0.02%)</title><rect x="46.0" y="1477" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="48.98" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (399,397,062 samples, 0.01%)</title><rect x="56.9" y="1509" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="59.86" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,011,572,844 samples, 0.05%)</title><rect x="18.9" y="1413" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.88" y="1423.5" ></text>
</g>
<g >
<title>sched_clock (2,118,370,602 samples, 0.05%)</title><rect x="621.4" y="1237" width="0.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="624.39" y="1247.5" ></text>
</g>
<g >
<title>xas_start (809,387,989 samples, 0.02%)</title><rect x="862.0" y="1205" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="865.00" y="1215.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1,845,974,738 samples, 0.05%)</title><rect x="1163.7" y="1365" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1166.70" y="1375.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (421,182,130 samples, 0.01%)</title><rect x="895.0" y="1333" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="897.97" y="1343.5" ></text>
</g>
<g >
<title>[perf-467.map] (860,342,319 samples, 0.02%)</title><rect x="48.2" y="1573" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="51.18" y="1583.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (4,842,585,538 samples, 0.12%)</title><rect x="55.4" y="1301" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="58.37" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (346,326,357 samples, 0.01%)</title><rect x="51.5" y="325" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.46" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="597" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (463,304,322 samples, 0.01%)</title><rect x="16.9" y="1541" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="19.90" y="1551.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (449,212,188,693 samples, 11.13%)</title><rect x="1034.7" y="1573" width="131.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1037.69" y="1583.5" >secondary_startu..</text>
</g>
<g >
<title>llist_add_batch (1,493,040,153 samples, 0.04%)</title><rect x="725.1" y="1285" width="0.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="728.07" y="1295.5" ></text>
</g>
<g >
<title>native_sched_clock (1,820,294,257 samples, 0.05%)</title><rect x="1096.8" y="1413" width="0.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1099.79" y="1423.5" ></text>
</g>
<g >
<title>psi_group_change (343,456,959 samples, 0.01%)</title><rect x="1164.3" y="1349" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1167.27" y="1359.5" ></text>
</g>
<g >
<title>zap_pte_range (2,731,747,367 samples, 0.07%)</title><rect x="56.0" y="1285" width="0.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="58.99" y="1295.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (768,993,132 samples, 0.02%)</title><rect x="942.2" y="1317" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="945.24" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="341" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="351.5" ></text>
</g>
<g >
<title>rcu_do_batch (10,199,737,342 samples, 0.25%)</title><rect x="1031.2" y="1445" width="3.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1034.22" y="1455.5" ></text>
</g>
<g >
<title>update_cfs_group (396,333,277 samples, 0.01%)</title><rect x="1183.2" y="1397" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1186.23" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="933" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="943.5" ></text>
</g>
<g >
<title>kmem_cache_free (404,605,449 samples, 0.01%)</title><rect x="685.5" y="1285" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="688.51" y="1295.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (1,073,334,174 samples, 0.03%)</title><rect x="1189.5" y="1253" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1192.47" y="1263.5" ></text>
</g>
<g >
<title>NaClXlateSysRet (1,256,355,227 samples, 0.03%)</title><rect x="452.9" y="1509" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="455.90" y="1519.5" ></text>
</g>
<g >
<title>__tsearch (455,676,393 samples, 0.01%)</title><rect x="11.6" y="1397" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="14.59" y="1407.5" ></text>
</g>
<g >
<title>exec_binprm (6,189,779,741 samples, 0.15%)</title><rect x="55.0" y="1477" width="1.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="57.97" y="1487.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (511,866,392 samples, 0.01%)</title><rect x="1163.0" y="1365" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1166.03" y="1375.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (627,594,497 samples, 0.02%)</title><rect x="755.7" y="1317" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="758.73" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1061" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1109" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1119.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,093,404,723 samples, 0.05%)</title><rect x="1040.1" y="1413" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1043.11" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock (6,978,527,507 samples, 0.17%)</title><rect x="911.7" y="1221" width="2.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="914.68" y="1231.5" ></text>
</g>
<g >
<title>dispatcher (1,700,955,527,250 samples, 42.16%)</title><rect x="454.1" y="1493" width="497.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="457.14" y="1503.5" >dispatcher</text>
</g>
<g >
<title>rcu_do_batch (10,387,360,748 samples, 0.26%)</title><rect x="1170.7" y="1333" width="3.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1173.70" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="405" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1429" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1439.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,570,625,457 samples, 0.04%)</title><rect x="1142.6" y="1413" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1145.59" y="1423.5" ></text>
</g>
<g >
<title>vfs_read (2,119,560,808 samples, 0.05%)</title><rect x="453.5" y="1301" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="456.47" y="1311.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5,224,011,312 samples, 0.13%)</title><rect x="1158.5" y="1381" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1161.53" y="1391.5" ></text>
</g>
<g >
<title>cache_from_obj (768,309,568 samples, 0.02%)</title><rect x="937.1" y="1253" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="940.10" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,945,949,198 samples, 0.05%)</title><rect x="51.4" y="965" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.41" y="975.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_duration_since (4,214,420,130 samples, 0.10%)</title><rect x="948.1" y="1397" width="1.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="951.14" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (399,612,887 samples, 0.01%)</title><rect x="1189.1" y="1477" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.13" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1333" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1343.5" ></text>
</g>
<g >
<title>psi_task_switch (995,777,736 samples, 0.02%)</title><rect x="1165.3" y="1413" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1168.28" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1237" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="1247.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (1,700,945,642,989 samples, 42.16%)</title><rect x="454.1" y="1461" width="497.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="457.15" y="1471.5" >rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposi..</text>
</g>
<g >
<title>__smp_call_single_queue (7,070,764,796 samples, 0.18%)</title><rect x="723.0" y="1285" width="2.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="725.98" y="1295.5" ></text>
</g>
<g >
<title>futex_get_value_locked (557,251,434 samples, 0.01%)</title><rect x="626.1" y="1301" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="629.07" y="1311.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (552,416,679 samples, 0.01%)</title><rect x="1188.7" y="1445" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1191.71" y="1455.5" ></text>
</g>
<g >
<title>pick_next_task_fair (29,075,063,712 samples, 0.72%)</title><rect x="667.6" y="1317" width="8.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="670.59" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,876,943,502 samples, 0.05%)</title><rect x="11.2" y="1445" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.22" y="1455.5" ></text>
</g>
<g >
<title>__sys_sendto (3,494,999,330 samples, 0.09%)</title><rect x="951.8" y="1413" width="1.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="954.84" y="1423.5" ></text>
</g>
<g >
<title>schedule (70,242,876,954 samples, 1.74%)</title><rect x="660.8" y="1365" width="20.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="663.76" y="1375.5" ></text>
</g>
<g >
<title>__fdget_raw (481,477,767 samples, 0.01%)</title><rect x="946.4" y="1333" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="949.36" y="1343.5" ></text>
</g>
<g >
<title>irq_exit_rcu (493,945,629 samples, 0.01%)</title><rect x="1163.0" y="1333" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1166.03" y="1343.5" ></text>
</g>
<g >
<title>copy_pte_range (1,234,112,239 samples, 0.03%)</title><rect x="50.4" y="1285" width="0.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="53.43" y="1295.5" ></text>
</g>
<g >
<title>parse_and_execute (549,813,899 samples, 0.01%)</title><rect x="1016.5" y="1189" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1019.50" y="1199.5" ></text>
</g>
<g >
<title>intel_idle (108,810,668,757 samples, 2.70%)</title><rect x="1064.8" y="1445" width="31.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1067.77" y="1455.5" >in..</text>
</g>
<g >
<title>__libc_fork (4,283,151,285 samples, 0.11%)</title><rect x="48.7" y="1445" width="1.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="51.66" y="1455.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (993,799,688 samples, 0.02%)</title><rect x="623.7" y="1285" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="626.67" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="693" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,112,343,895 samples, 0.08%)</title><rect x="1189.1" y="1557" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.09" y="1567.5" ></text>
</g>
<g >
<title>__calc_delta (4,829,039,630 samples, 0.12%)</title><rect x="672.8" y="1285" width="1.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="675.83" y="1295.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (554,116,072 samples, 0.01%)</title><rect x="910.0" y="1237" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="912.99" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2,569,609,124 samples, 0.06%)</title><rect x="865.3" y="1285" width="0.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="868.33" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="709" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="719.5" ></text>
</g>
<g >
<title>intel_idle (16,203,649,372 samples, 0.40%)</title><rect x="1174.0" y="1445" width="4.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1176.98" y="1455.5" ></text>
</g>
<g >
<title>ovl_write_iter (5,502,803,501 samples, 0.14%)</title><rect x="57.1" y="1349" width="1.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="60.10" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,650,171,584 samples, 0.07%)</title><rect x="1012.2" y="1573" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1015.21" y="1583.5" ></text>
</g>
<g >
<title>[[vdso]] (94,238,096,086 samples, 2.34%)</title><rect x="421.8" y="1493" width="27.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="424.79" y="1503.5" >[..</text>
</g>
<g >
<title>dup_mmap (4,703,311,731 samples, 0.12%)</title><rect x="1023.7" y="1445" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1026.70" y="1455.5" ></text>
</g>
<g >
<title>NaClClockGetTime (563,023,970 samples, 0.01%)</title><rect x="997.2" y="1557" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1000.23" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="181" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="191.5" ></text>
</g>
<g >
<title>inode_free_by_rcu (7,123,413,039 samples, 0.18%)</title><rect x="1056.5" y="1317" width="2.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1059.47" y="1327.5" ></text>
</g>
<g >
<title>[bash] (3,838,737,191 samples, 0.10%)</title><rect x="1015.8" y="1509" width="1.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1018.81" y="1519.5" ></text>
</g>
<g >
<title>cpu_startup_entry (466,131,805 samples, 0.01%)</title><rect x="61.7" y="1541" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="64.70" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,028,324,675 samples, 0.03%)</title><rect x="53.3" y="85" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="917" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="927.5" ></text>
</g>
<g >
<title>select_idle_sibling (981,542,188 samples, 0.02%)</title><rect x="719.3" y="1285" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="722.34" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_execve (347,256,638 samples, 0.01%)</title><rect x="1016.2" y="1189" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1019.24" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1269" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1279.5" ></text>
</g>
<g >
<title>__futex_unqueue (1,355,500,145 samples, 0.03%)</title><rect x="711.8" y="1317" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="714.75" y="1327.5" ></text>
</g>
<g >
<title>evict (383,247,245 samples, 0.01%)</title><rect x="910.2" y="1237" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="913.15" y="1247.5" ></text>
</g>
<g >
<title>rcu_do_batch (584,710,976 samples, 0.01%)</title><rect x="13.4" y="1333" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="16.36" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="405" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="415.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1,150,039,913 samples, 0.03%)</title><rect x="56.4" y="1269" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="59.39" y="1279.5" ></text>
</g>
<g >
<title>file_free_rcu (346,989,656 samples, 0.01%)</title><rect x="1134.9" y="1365" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1137.93" y="1375.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (361,541,186 samples, 0.01%)</title><rect x="177.5" y="1557" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="180.48" y="1567.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (9,795,835,590 samples, 0.24%)</title><rect x="39.6" y="1493" width="2.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="42.58" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (909,455,371 samples, 0.02%)</title><rect x="785.1" y="1285" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="788.08" y="1295.5" ></text>
</g>
<g >
<title>rcu_core (435,310,815 samples, 0.01%)</title><rect x="576.4" y="1301" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="579.44" y="1311.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (792,003,336 samples, 0.02%)</title><rect x="15.1" y="1429" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="18.13" y="1439.5" ></text>
</g>
<g >
<title>do_futex (89,093,064,285 samples, 2.21%)</title><rect x="700.3" y="1365" width="26.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="703.30" y="1375.5" >d..</text>
</g>
<g >
<title>__do_softirq (899,212,540 samples, 0.02%)</title><rect x="46.5" y="1317" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="49.52" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,493,517,621 samples, 0.09%)</title><rect x="51.3" y="1461" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.32" y="1471.5" ></text>
</g>
<g >
<title>rcu_core (771,587,525 samples, 0.02%)</title><rect x="15.1" y="1349" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="18.13" y="1359.5" ></text>
</g>
<g >
<title>___slab_alloc (2,921,030,433 samples, 0.07%)</title><rect x="799.8" y="1237" width="0.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="802.83" y="1247.5" ></text>
</g>
<g >
<title>security_file_free (8,990,973,905 samples, 0.22%)</title><rect x="934.7" y="1285" width="2.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="937.70" y="1295.5" ></text>
</g>
<g >
<title>NaClClockGetTime (112,164,809,490 samples, 2.78%)</title><rect x="350.4" y="1493" width="32.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="353.39" y="1503.5" >Na..</text>
</g>
<g >
<title>do_sched_yield (80,151,010,877 samples, 1.99%)</title><rect x="658.1" y="1381" width="23.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="661.08" y="1391.5" >d..</text>
</g>
<g >
<title>__schedule (349,382,536 samples, 0.01%)</title><rect x="15.9" y="1493" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="18.93" y="1503.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (472,803,570 samples, 0.01%)</title><rect x="859.1" y="1237" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="862.11" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="853" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="863.5" ></text>
</g>
<g >
<title>[bash] (908,649,938 samples, 0.02%)</title><rect x="1016.1" y="1269" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1019.07" y="1279.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (8,133,418,431 samples, 0.20%)</title><rect x="759.4" y="1365" width="2.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="762.36" y="1375.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (8,367,601,765 samples, 0.21%)</title><rect x="415.3" y="1477" width="2.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="418.28" y="1487.5" ></text>
</g>
<g >
<title>seq_read_iter (656,241,399 samples, 0.02%)</title><rect x="54.6" y="1365" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="57.58" y="1375.5" ></text>
</g>
<g >
<title>rest_init (4,739,610,922 samples, 0.12%)</title><rect x="46.5" y="1493" width="1.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="49.46" y="1503.5" ></text>
</g>
<g >
<title>[bash] (855,836,468 samples, 0.02%)</title><rect x="1015.8" y="1445" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1018.82" y="1455.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (4,739,610,922 samples, 0.12%)</title><rect x="46.5" y="1557" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="49.46" y="1567.5" ></text>
</g>
<g >
<title>kmem_cache_free (13,625,300,079 samples, 0.34%)</title><rect x="1047.4" y="1301" width="4.0" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1050.39" y="1311.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (748,738,708 samples, 0.02%)</title><rect x="1188.0" y="1365" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1191.02" y="1375.5" ></text>
</g>
<g >
<title>menu_select (2,353,427,388 samples, 0.06%)</title><rect x="38.7" y="1477" width="0.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="41.72" y="1487.5" ></text>
</g>
<g >
<title>inet_accept (21,562,098,838 samples, 0.53%)</title><rect x="780.0" y="1333" width="6.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="783.03" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="245" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="255.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (11,036,131,195 samples, 0.27%)</title><rect x="1031.1" y="1525" width="3.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1034.07" y="1535.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (412,154,519 samples, 0.01%)</title><rect x="1028.9" y="1573" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1031.87" y="1583.5" ></text>
</g>
<g >
<title>kthread (12,640,663,320 samples, 0.31%)</title><rect x="1031.0" y="1541" width="3.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1033.99" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="885" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="895.5" ></text>
</g>
<g >
<title>do_sys_poll (345,187,742 samples, 0.01%)</title><rect x="1025.3" y="1509" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1028.27" y="1519.5" ></text>
</g>
<g >
<title>rcu_core (2,112,423,554 samples, 0.05%)</title><rect x="38.0" y="1333" width="0.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="40.96" y="1343.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (419,882,366 samples, 0.01%)</title><rect x="767.7" y="1413" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="770.70" y="1423.5" ></text>
</g>
<g >
<title>intel_idle (990,840,533 samples, 0.02%)</title><rect x="1188.3" y="1381" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1191.25" y="1391.5" ></text>
</g>
<g >
<title>arch_call_rest_init (26,854,647,561 samples, 0.67%)</title><rect x="1158.2" y="1509" width="7.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1161.23" y="1519.5" ></text>
</g>
<g >
<title>worker (1,231,922,468 samples, 0.03%)</title><rect x="54.5" y="1541" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="57.53" y="1551.5" ></text>
</g>
<g >
<title>irq_exit_rcu (558,116,485 samples, 0.01%)</title><rect x="60.1" y="1413" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="63.12" y="1423.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (5,148,567,000 samples, 0.13%)</title><rect x="51.2" y="1557" width="1.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="54.20" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,533,779,369 samples, 0.06%)</title><rect x="52.9" y="1557" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.89" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (365,215,872 samples, 0.01%)</title><rect x="52.7" y="181" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="191.5" ></text>
</g>
<g >
<title>xa_load (366,473,398 samples, 0.01%)</title><rect x="822.9" y="1237" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="825.93" y="1247.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,821,392,752 samples, 0.34%)</title><rect x="25.5" y="1445" width="4.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="28.46" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="437" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,149,446,939 samples, 0.03%)</title><rect x="52.9" y="101" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="111.5" ></text>
</g>
<g >
<title>__switch_to (475,350,853 samples, 0.01%)</title><rect x="1168.1" y="1573" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1171.06" y="1583.5" ></text>
</g>
<g >
<title>reweight_entity (403,752,060 samples, 0.01%)</title><rect x="601.6" y="1221" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="604.64" y="1231.5" ></text>
</g>
<g >
<title>read_tsc (1,990,622,619 samples, 0.05%)</title><rect x="1153.7" y="1493" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1156.69" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="837" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="847.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (511,425,949 samples, 0.01%)</title><rect x="1150.8" y="1477" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1153.84" y="1487.5" ></text>
</g>
<g >
<title>tcp_push_one (851,137,557 samples, 0.02%)</title><rect x="952.5" y="1349" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="955.52" y="1359.5" ></text>
</g>
<g >
<title>record_times (615,393,375 samples, 0.02%)</title><rect x="1150.2" y="1461" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1153.15" y="1471.5" ></text>
</g>
<g >
<title>blkcg_maybe_throttle_current (722,550,906 samples, 0.02%)</title><rect x="894.5" y="1333" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="897.51" y="1343.5" ></text>
</g>
<g >
<title>__clone (2,204,736,881 samples, 0.05%)</title><rect x="54.2" y="1573" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="57.24" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_enter (394,095,727 samples, 0.01%)</title><rect x="14.7" y="1477" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="17.71" y="1487.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (595,417,747 samples, 0.01%)</title><rect x="676.7" y="1333" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="679.74" y="1343.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (5,064,581,227 samples, 0.13%)</title><rect x="1158.6" y="1333" width="1.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1161.57" y="1343.5" ></text>
</g>
<g >
<title>start_secondary (422,357,541,132 samples, 10.47%)</title><rect x="1034.7" y="1557" width="123.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1037.69" y="1567.5" >start_secondary</text>
</g>
<g >
<title>[libc.so.6] (797,789,703 samples, 0.02%)</title><rect x="19.0" y="1381" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.05" y="1391.5" ></text>
</g>
<g >
<title>run_ksoftirqd (10,667,125,934 samples, 0.26%)</title><rect x="1031.1" y="1509" width="3.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1034.10" y="1519.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (1,930,447,213 samples, 0.05%)</title><rect x="717.4" y="1285" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="720.36" y="1295.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (472,197,500 samples, 0.01%)</title><rect x="1017.8" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1020.78" y="1519.5" ></text>
</g>
<g >
<title>__do_softirq (731,398,427 samples, 0.02%)</title><rect x="1188.0" y="1317" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1191.03" y="1327.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (394,693,903 samples, 0.01%)</title><rect x="566.1" y="1301" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="569.06" y="1311.5" ></text>
</g>
<g >
<title>syscall (2,020,327,084 samples, 0.05%)</title><rect x="1011.4" y="1557" width="0.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1014.44" y="1567.5" ></text>
</g>
<g >
<title>copy_page_range (489,035,476 samples, 0.01%)</title><rect x="1168.6" y="1445" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1171.62" y="1455.5" ></text>
</g>
<g >
<title>refill_obj_stock (413,439,756 samples, 0.01%)</title><rect x="1033.0" y="1365" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1036.05" y="1375.5" ></text>
</g>
<g >
<title>check_cfs_rq_runtime (485,934,270 samples, 0.01%)</title><rect x="561.0" y="1285" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="564.04" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,071,218,172 samples, 0.05%)</title><rect x="51.4" y="1013" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.41" y="1023.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (3,342,166,329 samples, 0.08%)</title><rect x="568.8" y="1365" width="1.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="571.79" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="197" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="207.5" ></text>
</g>
<g >
<title>__update_idle_core (529,519,716 samples, 0.01%)</title><rect x="615.0" y="1237" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="618.04" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="629" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (535,837,895 samples, 0.01%)</title><rect x="51.5" y="357" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.46" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (466,682,464 samples, 0.01%)</title><rect x="991.2" y="1557" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="994.23" y="1567.5" ></text>
</g>
<g >
<title>ip_queue_xmit (769,612,139 samples, 0.02%)</title><rect x="952.5" y="1301" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="955.52" y="1311.5" ></text>
</g>
<g >
<title>seq_read (582,118,539 samples, 0.01%)</title><rect x="1025.4" y="1461" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1028.44" y="1471.5" ></text>
</g>
<g >
<title>exit_mmap (715,058,046 samples, 0.02%)</title><rect x="1168.8" y="1365" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1171.80" y="1375.5" ></text>
</g>
<g >
<title>pick_next_task_fair (4,639,881,761 samples, 0.12%)</title><rect x="613.4" y="1253" width="1.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="616.40" y="1263.5" ></text>
</g>
<g >
<title>rcu_core (10,536,352,779 samples, 0.26%)</title><rect x="1031.1" y="1461" width="3.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1034.14" y="1471.5" ></text>
</g>
<g >
<title>enqueue_task (6,841,632,174 samples, 0.17%)</title><rect x="40.1" y="1445" width="2.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="43.07" y="1455.5" ></text>
</g>
<g >
<title>make_kgid (440,135,117 samples, 0.01%)</title><rect x="801.2" y="1285" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="804.23" y="1295.5" ></text>
</g>
<g >
<title>_compound_head (1,240,971,015 samples, 0.03%)</title><rect x="49.1" y="1237" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="52.10" y="1247.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (38,201,841,884 samples, 0.95%)</title><rect x="1170.4" y="1461" width="11.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1173.36" y="1471.5" ></text>
</g>
<g >
<title>__unfreeze_partials (775,447,912 samples, 0.02%)</title><rect x="1053.6" y="1237" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1056.57" y="1247.5" ></text>
</g>
<g >
<title>__x64_sys_futex (174,746,800,034 samples, 4.33%)</title><rect x="580.2" y="1365" width="51.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="583.19" y="1375.5" >__x64..</text>
</g>
<g >
<title>cgroup_rstat_updated (416,581,633 samples, 0.01%)</title><rect x="604.6" y="1189" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="607.60" y="1199.5" ></text>
</g>
<g >
<title>update_load_avg (545,066,218 samples, 0.01%)</title><rect x="44.1" y="1429" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="47.09" y="1439.5" ></text>
</g>
<g >
<title>file_free_rcu (543,080,810 samples, 0.01%)</title><rect x="1142.6" y="1333" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1145.63" y="1343.5" ></text>
</g>
<g >
<title>consume_obj_stock (563,108,466 samples, 0.01%)</title><rect x="817.7" y="1237" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="820.70" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1093" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="1103.5" ></text>
</g>
<g >
<title>file_free_rcu (871,250,152 samples, 0.02%)</title><rect x="1180.9" y="1301" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1183.90" y="1311.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (3,850,977,193 samples, 0.10%)</title><rect x="951.7" y="1509" width="1.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="954.73" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="229" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (563,640,079 samples, 0.01%)</title><rect x="21.6" y="1557" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="24.63" y="1567.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (489,539,046 samples, 0.01%)</title><rect x="1111.6" y="1253" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1114.64" y="1263.5" ></text>
</g>
<g >
<title>enqueue_entity (1,229,134,803 samples, 0.03%)</title><rect x="1163.8" y="1349" width="0.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1166.80" y="1359.5" ></text>
</g>
<g >
<title>rcu_do_batch (833,694,848 samples, 0.02%)</title><rect x="46.5" y="1269" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="49.53" y="1279.5" ></text>
</g>
<g >
<title>anon_vma_fork (412,248,027 samples, 0.01%)</title><rect x="1023.7" y="1429" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1026.73" y="1439.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (490,117,550 samples, 0.01%)</title><rect x="43.6" y="1477" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="46.64" y="1487.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (2,999,120,305 samples, 0.07%)</title><rect x="859.7" y="1237" width="0.9" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="862.69" y="1247.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (3,302,831,069 samples, 0.08%)</title><rect x="817.9" y="1237" width="0.9" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="820.86" y="1247.5" ></text>
</g>
<g >
<title>i_callback (424,968,624 samples, 0.01%)</title><rect x="685.5" y="1317" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="688.51" y="1327.5" ></text>
</g>
<g >
<title>NaClSysClockGetTimeDecoder (205,855,364,787 samples, 5.10%)</title><rect x="333.4" y="1541" width="60.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="336.42" y="1551.5" >NaClSy..</text>
</g>
<g >
<title>__slab_free (1,030,215,148 samples, 0.03%)</title><rect x="27.5" y="1269" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="30.50" y="1279.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (375,556,131 samples, 0.01%)</title><rect x="27.2" y="1285" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="30.16" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,245,307,056 samples, 0.11%)</title><rect x="48.7" y="1397" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="51.67" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (229,050,910,316 samples, 5.68%)</title><rect x="577.6" y="1397" width="67.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="580.62" y="1407.5" >entry_S..</text>
</g>
<g >
<title>__unfreeze_partials (837,832,929 samples, 0.02%)</title><rect x="1049.0" y="1253" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1051.97" y="1263.5" ></text>
</g>
<g >
<title>alloc_pages (854,750,354 samples, 0.02%)</title><rect x="952.0" y="1317" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="955.03" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,798,774,014 samples, 0.04%)</title><rect x="51.4" y="901" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.41" y="911.5" ></text>
</g>
<g >
<title>__x64_sys_execve (372,180,195 samples, 0.01%)</title><rect x="13.0" y="1541" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="16.03" y="1551.5" ></text>
</g>
<g >
<title>sh (7,872,617,868 samples, 0.20%)</title><rect x="1015.2" y="1589" width="2.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1018.19" y="1599.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (1,871,525,287 samples, 0.05%)</title><rect x="50.3" y="1509" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="53.32" y="1519.5" ></text>
</g>
<g >
<title>irq_exit_rcu (78,847,137,632 samples, 1.95%)</title><rect x="1040.8" y="1413" width="23.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1043.75" y="1423.5" >i..</text>
</g>
<g >
<title>psi_task_switch (1,852,728,708 samples, 0.05%)</title><rect x="1186.3" y="1477" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1189.30" y="1487.5" ></text>
</g>
<g >
<title>rcu_core (852,386,876 samples, 0.02%)</title><rect x="46.5" y="1285" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="49.53" y="1295.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,262,985,039 samples, 0.06%)</title><rect x="810.5" y="1253" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="813.54" y="1263.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (911,092,327 samples, 0.02%)</title><rect x="1145.5" y="1413" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1148.47" y="1423.5" ></text>
</g>
<g >
<title>__do_softirq (1,584,674,094 samples, 0.04%)</title><rect x="1169.3" y="1493" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1172.26" y="1503.5" ></text>
</g>
<g >
<title>try_to_wake_up (42,111,656,503 samples, 1.04%)</title><rect x="713.9" y="1317" width="12.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="716.86" y="1327.5" ></text>
</g>
<g >
<title>exec_binprm (459,769,403 samples, 0.01%)</title><rect x="1017.1" y="1477" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1020.11" y="1487.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (434,620,457 samples, 0.01%)</title><rect x="564.5" y="1237" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="567.46" y="1247.5" ></text>
</g>
<g >
<title>ttwu_do_activate (7,263,680,530 samples, 0.18%)</title><rect x="40.0" y="1461" width="2.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="42.97" y="1471.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (442,418,611 samples, 0.01%)</title><rect x="560.7" y="1253" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="563.72" y="1263.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,977,224,653 samples, 0.07%)</title><rect x="46.5" y="1397" width="0.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="49.50" y="1407.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1,167,816,803 samples, 0.03%)</title><rect x="45.8" y="1509" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="48.84" y="1519.5" ></text>
</g>
<g >
<title>[sel_ldr] (2,625,213,467,076 samples, 65.07%)</title><rect x="185.0" y="1573" width="767.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="188.00" y="1583.5" >[sel_ldr]</text>
</g>
<g >
<title>sock_free_inode (480,793,360 samples, 0.01%)</title><rect x="1181.1" y="1285" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1184.15" y="1295.5" ></text>
</g>
<g >
<title>mmput (715,058,046 samples, 0.02%)</title><rect x="1168.8" y="1397" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1171.80" y="1407.5" ></text>
</g>
<g >
<title>[bash] (1,167,724,378 samples, 0.03%)</title><rect x="1016.4" y="1253" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1019.36" y="1263.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (1,430,825,989 samples, 0.04%)</title><rect x="393.6" y="1541" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="396.65" y="1551.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (364,777,182 samples, 0.01%)</title><rect x="13.0" y="1525" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="16.03" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,251,132,364 samples, 0.06%)</title><rect x="51.4" y="1077" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.40" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (381,915,560 samples, 0.01%)</title><rect x="18.5" y="1445" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="21.52" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,836,403,277 samples, 0.05%)</title><rect x="50.3" y="1429" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="53.32" y="1439.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (160,940,279,950 samples, 3.99%)</title><rect x="406.2" y="1525" width="47.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="409.19" y="1535.5" >NaCl..</text>
</g>
<g >
<title>irq_exit_rcu (2,344,898,612 samples, 0.06%)</title><rect x="1180.8" y="1397" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1183.83" y="1407.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (537,977,716 samples, 0.01%)</title><rect x="1181.3" y="1301" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1184.35" y="1311.5" ></text>
</g>
<g >
<title>_copy_to_iter (1,582,944,222 samples, 0.04%)</title><rect x="453.5" y="1157" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="456.54" y="1167.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1,441,931,636 samples, 0.04%)</title><rect x="943.4" y="1413" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="946.42" y="1423.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (11,137,507,740 samples, 0.28%)</title><rect x="400.2" y="1509" width="3.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="403.19" y="1519.5" ></text>
</g>
<g >
<title>refill_obj_stock (455,315,458 samples, 0.01%)</title><rect x="28.0" y="1253" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="30.95" y="1263.5" ></text>
</g>
<g >
<title>rcu_core (13,114,288,477 samples, 0.33%)</title><rect x="25.5" y="1349" width="3.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="28.55" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="901" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="911.5" ></text>
</g>
<g >
<title>tcp_recvmsg (819,858,114 samples, 0.02%)</title><rect x="947.4" y="1301" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="950.42" y="1311.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (598,625,852 samples, 0.01%)</title><rect x="884.7" y="1381" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="887.66" y="1391.5" ></text>
</g>
<g >
<title>mod_objcg_state (413,191,379 samples, 0.01%)</title><rect x="1032.9" y="1381" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1035.93" y="1391.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (634,359,869 samples, 0.02%)</title><rect x="13.3" y="1429" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="16.35" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (454,711,787 samples, 0.01%)</title><rect x="18.7" y="1445" width="0.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="21.68" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (6,459,933,348 samples, 0.16%)</title><rect x="56.9" y="1573" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="59.85" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,829,203,588 samples, 0.07%)</title><rect x="51.4" y="1285" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.39" y="1295.5" ></text>
</g>
<g >
<title>irq_exit_rcu (731,398,427 samples, 0.02%)</title><rect x="1188.0" y="1349" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1191.03" y="1359.5" ></text>
</g>
<g >
<title>refill_obj_stock (477,037,129 samples, 0.01%)</title><rect x="909.2" y="1221" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="912.22" y="1231.5" ></text>
</g>
<g >
<title>wb_workfn (665,402,217 samples, 0.02%)</title><rect x="1034.5" y="1493" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1037.47" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="437" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="447.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,444,572,137 samples, 0.04%)</title><rect x="841.7" y="1253" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="844.72" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,456,618,004 samples, 0.06%)</title><rect x="947.2" y="1397" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="950.22" y="1407.5" ></text>
</g>
<g >
<title>__d_instantiate (3,622,554,909 samples, 0.09%)</title><rect x="864.3" y="1285" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="867.27" y="1295.5" ></text>
</g>
<g >
<title>rcu_core (2,219,110,622 samples, 0.06%)</title><rect x="23.9" y="1461" width="0.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="26.89" y="1471.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (4,379,618,753 samples, 0.11%)</title><rect x="948.1" y="1413" width="1.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="951.09" y="1423.5" ></text>
</g>
<g >
<title>kworker/dying (4,376,026,210 samples, 0.11%)</title><rect x="14.9" y="1589" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="17.91" y="1599.5" ></text>
</g>
<g >
<title>update_rq_clock (3,173,969,933 samples, 0.08%)</title><rect x="622.5" y="1269" width="0.9" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="625.50" y="1279.5" ></text>
</g>
<g >
<title>__fput (408,232,148 samples, 0.01%)</title><rect x="941.2" y="1317" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="944.20" y="1327.5" ></text>
</g>
<g >
<title>__sched_yield (1,018,470,446 samples, 0.03%)</title><rect x="1009.9" y="1557" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1012.86" y="1567.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,466,741,655 samples, 0.04%)</title><rect x="685.4" y="1397" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="688.35" y="1407.5" ></text>
</g>
<g >
<title>update_blocked_averages (579,902,821 samples, 0.01%)</title><rect x="1063.6" y="1349" width="0.1" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1066.57" y="1359.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (3,698,311,095 samples, 0.09%)</title><rect x="848.1" y="1253" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="851.08" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (75,217,678,929 samples, 1.86%)</title><rect x="739.7" y="1381" width="22.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="742.73" y="1391.5" >d..</text>
</g>
<g >
<title>llist_reverse_order (484,808,552 samples, 0.01%)</title><rect x="1164.5" y="1429" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1167.52" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1317" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1327.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,237,039,759 samples, 0.06%)</title><rect x="853.2" y="1253" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="856.23" y="1263.5" ></text>
</g>
<g >
<title>init_once (4,380,881,757 samples, 0.11%)</title><rect x="809.0" y="1173" width="1.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="812.03" y="1183.5" ></text>
</g>
<g >
<title>__fget_light (383,884,309 samples, 0.01%)</title><rect x="946.4" y="1317" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="949.37" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,778,684,347 samples, 0.14%)</title><rect x="57.0" y="1429" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="60.04" y="1439.5" ></text>
</g>
<g >
<title>rcu_core_si (4,874,255,324 samples, 0.12%)</title><rect x="1158.6" y="1301" width="1.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1161.58" y="1311.5" ></text>
</g>
<g >
<title>__switch_to (2,389,696,127 samples, 0.06%)</title><rect x="1026.2" y="1573" width="0.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1029.21" y="1583.5" ></text>
</g>
<g >
<title>update_rq_clock (345,508,746 samples, 0.01%)</title><rect x="1164.4" y="1397" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1167.41" y="1407.5" ></text>
</g>
<g >
<title>rcu_do_batch (75,503,746,268 samples, 1.87%)</title><rect x="1041.1" y="1333" width="22.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1044.08" y="1343.5" >r..</text>
</g>
<g >
<title>call_cpuidle (16,339,886,092 samples, 0.41%)</title><rect x="1158.4" y="1429" width="4.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1161.43" y="1439.5" ></text>
</g>
<g >
<title>__get_user_nocheck_4 (3,350,342,718 samples, 0.08%)</title><rect x="624.6" y="1301" width="0.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="627.55" y="1311.5" ></text>
</g>
<g >
<title>rcu_do_batch (560,415,501 samples, 0.01%)</title><rect x="696.1" y="1317" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="699.10" y="1327.5" ></text>
</g>
<g >
<title>check_spread.isra.0 (726,310,197 samples, 0.02%)</title><rect x="1122.9" y="1413" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1125.93" y="1423.5" ></text>
</g>
<g >
<title>dput (99,974,293,635 samples, 2.48%)</title><rect x="903.3" y="1285" width="29.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="906.25" y="1295.5" >dput</text>
</g>
<g >
<title>futex_wait (361,395,767 samples, 0.01%)</title><rect x="631.2" y="1349" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="634.20" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_select (1,788,253,156 samples, 0.04%)</title><rect x="1181.6" y="1493" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1184.62" y="1503.5" ></text>
</g>
<g >
<title>put_prev_entity (501,777,417 samples, 0.01%)</title><rect x="615.2" y="1253" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="618.20" y="1263.5" ></text>
</g>
<g >
<title>NaClSysOpen (464,835,399 samples, 0.01%)</title><rect x="453.3" y="1525" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="456.27" y="1535.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,936,675,920 samples, 0.05%)</title><rect x="453.5" y="1237" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="456.51" y="1247.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1541" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="55.71" y="1551.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (65,801,022,108 samples, 1.63%)</title><rect x="1169.8" y="1573" width="19.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1172.81" y="1583.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (712,887,248 samples, 0.02%)</title><rect x="777.5" y="1333" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="780.54" y="1343.5" ></text>
</g>
<g >
<title>node::PerIsolatePlatformData::RunForegroundTask (509,936,867 samples, 0.01%)</title><rect x="53.9" y="1509" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="56.89" y="1519.5" ></text>
</g>
<g >
<title>do_sched_yield (40,065,301,135 samples, 0.99%)</title><rect x="556.6" y="1349" width="11.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="559.58" y="1359.5" ></text>
</g>
<g >
<title>__calc_delta (759,863,333 samples, 0.02%)</title><rect x="600.8" y="1221" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="603.76" y="1231.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (974,827,376 samples, 0.02%)</title><rect x="58.3" y="1205" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="61.25" y="1215.5" ></text>
</g>
<g >
<title>call_cpuidle (38,691,120,365 samples, 0.96%)</title><rect x="1170.3" y="1493" width="11.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1173.27" y="1503.5" ></text>
</g>
<g >
<title>wake_affine (8,779,285,249 samples, 0.22%)</title><rect x="719.6" y="1285" width="2.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="722.63" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1045" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (656,418,780 samples, 0.02%)</title><rect x="17.9" y="1557" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="20.86" y="1567.5" ></text>
</g>
<g >
<title>ip_finish_output2 (633,915,704 samples, 0.02%)</title><rect x="952.5" y="1205" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="955.54" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="421" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="431.5" ></text>
</g>
<g >
<title>restore_fpregs_from_fpstate (11,415,614,708 samples, 0.28%)</title><rect x="640.7" y="1317" width="3.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="643.73" y="1327.5" ></text>
</g>
<g >
<title>[[heap]] (405,815,080 samples, 0.01%)</title><rect x="1017.6" y="1573" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1020.59" y="1583.5" ></text>
</g>
<g >
<title>__schedule (32,240,572,049 samples, 0.80%)</title><rect x="558.4" y="1317" width="9.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="561.41" y="1327.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (544,262,088 samples, 0.01%)</title><rect x="1116.3" y="1461" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1119.32" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="437" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="447.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (349,078,238 samples, 0.01%)</title><rect x="60.7" y="1509" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="63.70" y="1519.5" ></text>
</g>
<g >
<title>irq_exit_rcu (690,590,006 samples, 0.02%)</title><rect x="666.5" y="1301" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="669.45" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,559,995,053 samples, 0.04%)</title><rect x="13.3" y="1477" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="16.34" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1365" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="1375.5" ></text>
</g>
<g >
<title>kmem_cache_free (392,473,646 samples, 0.01%)</title><rect x="932.6" y="1285" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="935.58" y="1295.5" ></text>
</g>
<g >
<title>try_charge_memcg (861,393,377 samples, 0.02%)</title><rect x="822.6" y="1221" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="825.55" y="1231.5" ></text>
</g>
<g >
<title>do_idle (635,947,210 samples, 0.02%)</title><rect x="14.7" y="1525" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="17.71" y="1535.5" ></text>
</g>
<g >
<title>execute_command (413,762,092 samples, 0.01%)</title><rect x="1016.5" y="1141" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1019.50" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1301" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="1311.5" ></text>
</g>
<g >
<title>__libc_start_main (4,239,235,233 samples, 0.11%)</title><rect x="1015.8" y="1557" width="1.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1018.81" y="1567.5" ></text>
</g>
<g >
<title>sock_read_iter (1,742,537,635 samples, 0.04%)</title><rect x="1189.4" y="1365" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1192.36" y="1375.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (3,918,267,896 samples, 0.10%)</title><rect x="951.7" y="1541" width="1.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="954.71" y="1551.5" ></text>
</g>
<g >
<title>inode_init_once (362,054,453 samples, 0.01%)</title><rect x="810.3" y="1173" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="813.31" y="1183.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (604,502,207 samples, 0.01%)</title><rect x="52.4" y="1493" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="55.37" y="1503.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (12,530,411,780 samples, 0.31%)</title><rect x="948.0" y="1445" width="3.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="951.00" y="1455.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (535,199,629 samples, 0.01%)</title><rect x="942.9" y="1365" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="945.88" y="1375.5" ></text>
</g>
<g >
<title>clear_page_erms (670,773,151 samples, 0.02%)</title><rect x="840.2" y="1157" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="843.20" y="1167.5" ></text>
</g>
<g >
<title>__get_random_u32_below (353,953,387 samples, 0.01%)</title><rect x="841.4" y="1189" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="844.38" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,912,828,395 samples, 0.05%)</title><rect x="1018.5" y="1493" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1021.49" y="1503.5" ></text>
</g>
<g >
<title>futex_wait (163,374,649,587 samples, 4.05%)</title><rect x="583.2" y="1333" width="47.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="586.18" y="1343.5" >fute..</text>
</g>
<g >
<title>start_secondary (648,686,216 samples, 0.02%)</title><rect x="14.7" y="1557" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="17.71" y="1567.5" ></text>
</g>
<g >
<title>native_load_tls (510,895,982 samples, 0.01%)</title><rect x="1030.8" y="1573" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1033.82" y="1583.5" ></text>
</g>
<g >
<title>tcp_write_xmit (851,137,557 samples, 0.02%)</title><rect x="952.5" y="1333" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="955.52" y="1343.5" ></text>
</g>
<g >
<title>memcpy@plt (1,242,641,469 samples, 0.03%)</title><rect x="344.0" y="1509" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="346.98" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="133" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="565" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="575.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (476,792,721 samples, 0.01%)</title><rect x="1015.3" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1018.29" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,646,121,976 samples, 0.04%)</title><rect x="1018.5" y="1445" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1021.51" y="1455.5" ></text>
</g>
<g >
<title>update_min_vruntime (1,000,609,552 samples, 0.02%)</title><rect x="565.5" y="1269" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="568.48" y="1279.5" ></text>
</g>
<g >
<title>___slab_alloc (439,921,905 samples, 0.01%)</title><rect x="840.9" y="1157" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="843.91" y="1167.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (415,658,130 samples, 0.01%)</title><rect x="767.7" y="1365" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="770.70" y="1375.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (3,531,337,910 samples, 0.09%)</title><rect x="638.5" y="1301" width="1.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="641.48" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1477" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1487.5" ></text>
</g>
<g >
<title>alloc_pages (13,533,370,124 samples, 0.34%)</title><rect x="803.8" y="1205" width="3.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="806.78" y="1215.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1,321,093,190 samples, 0.03%)</title><rect x="1185.7" y="1461" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1188.75" y="1471.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (17,365,164,504 samples, 0.43%)</title><rect x="858.2" y="1253" width="5.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="861.20" y="1263.5" ></text>
</g>
<g >
<title>5_ (563,984,293 samples, 0.01%)</title><rect x="10.0" y="1589" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" ></text>
</g>
<g >
<title>menu_select (12,582,265,793 samples, 0.31%)</title><rect x="1113.7" y="1477" width="3.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1116.70" y="1487.5" ></text>
</g>
<g >
<title>down_write (396,270,805 samples, 0.01%)</title><rect x="940.0" y="1269" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="942.98" y="1279.5" ></text>
</g>
<g >
<title>__sys_accept4 (577,221,228 samples, 0.01%)</title><rect x="771.5" y="1381" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="774.52" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,892,562,948 samples, 0.05%)</title><rect x="60.1" y="1477" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="63.11" y="1487.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (2,223,209,556 samples, 0.06%)</title><rect x="453.4" y="1413" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="456.45" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::open_syscall (441,483,346 samples, 0.01%)</title><rect x="453.3" y="1477" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="456.28" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (739,395,801 samples, 0.02%)</title><rect x="13.0" y="1573" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.03" y="1583.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (1,836,403,277 samples, 0.05%)</title><rect x="50.3" y="1349" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="53.32" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (631,619,692 samples, 0.02%)</title><rect x="59.9" y="1557" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="62.85" y="1567.5" ></text>
</g>
<g >
<title>new_inode_pseudo (475,147,858 samples, 0.01%)</title><rect x="786.5" y="1333" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="789.47" y="1343.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (25,322,713,526 samples, 0.63%)</title><rect x="397.5" y="1525" width="7.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="400.54" y="1535.5" ></text>
</g>
<g >
<title>fput (2,811,856,051 samples, 0.07%)</title><rect x="883.5" y="1365" width="0.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="886.53" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="581" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="591.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2,542,153,526 samples, 0.06%)</title><rect x="774.9" y="1349" width="0.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="777.95" y="1359.5" ></text>
</g>
<g >
<title>NaClSysOpenDecoder (464,835,399 samples, 0.01%)</title><rect x="453.3" y="1541" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="456.27" y="1551.5" ></text>
</g>
<g >
<title>lock_sock_nested (1,822,239,371 samples, 0.05%)</title><rect x="784.8" y="1301" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="787.82" y="1311.5" ></text>
</g>
<g >
<title>__memcpy (1,264,710,875 samples, 0.03%)</title><rect x="863.5" y="1285" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="866.47" y="1295.5" ></text>
</g>
<g >
<title>_Fork (1,839,974,287 samples, 0.05%)</title><rect x="50.3" y="1461" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="53.32" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="965" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="975.5" ></text>
</g>
<g >
<title>[libc.so.6] (737,900,863 samples, 0.02%)</title><rect x="14.1" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.11" y="1551.5" ></text>
</g>
<g >
<title>d_flags_for_inode (388,860,617 samples, 0.01%)</title><rect x="866.3" y="1285" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="869.33" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1397" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1407.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (19,390,090,328 samples, 0.48%)</title><rect x="871.6" y="1333" width="5.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="874.64" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (759,515,361 samples, 0.02%)</title><rect x="16.6" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="19.62" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (459,135,040 samples, 0.01%)</title><rect x="10.0" y="1573" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.02" y="1583.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (808,037,475 samples, 0.02%)</title><rect x="817.4" y="1237" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="820.44" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="885" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="895.5" ></text>
</g>
<g >
<title>cpu_startup_entry (348,264,920 samples, 0.01%)</title><rect x="16.1" y="1477" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="19.08" y="1487.5" ></text>
</g>
<g >
<title>refill_obj_stock (3,543,659,875 samples, 0.09%)</title><rect x="908.2" y="1205" width="1.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="911.18" y="1215.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (513,681,624 samples, 0.01%)</title><rect x="1017.8" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1020.77" y="1551.5" ></text>
</g>
<g >
<title>setfl (4,742,981,754 samples, 0.12%)</title><rect x="754.5" y="1333" width="1.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="757.53" y="1343.5" ></text>
</g>
<g >
<title>rcu_do_batch (415,658,130 samples, 0.01%)</title><rect x="767.7" y="1301" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="770.70" y="1311.5" ></text>
</g>
<g >
<title>psi_task_change (1,416,604,929 samples, 0.04%)</title><rect x="41.7" y="1429" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="44.65" y="1439.5" ></text>
</g>
<g >
<title>poll_idle (53,974,749,081 samples, 1.34%)</title><rect x="1097.3" y="1445" width="15.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1100.33" y="1455.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (10,600,411,762 samples, 0.26%)</title><rect x="499.0" y="1429" width="3.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="502.03" y="1439.5" ></text>
</g>
<g >
<title>rebalance_domains (1,091,365,886 samples, 0.03%)</title><rect x="1063.2" y="1349" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1066.25" y="1359.5" ></text>
</g>
<g >
<title>rcu_core_si (1,443,685,070 samples, 0.04%)</title><rect x="685.4" y="1365" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="688.35" y="1375.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (5,430,126,329 samples, 0.13%)</title><rect x="57.1" y="1285" width="1.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="60.12" y="1295.5" ></text>
</g>
<g >
<title>mod_objcg_state (3,250,868,036 samples, 0.08%)</title><rect x="857.0" y="1237" width="1.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="860.01" y="1247.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (769,612,139 samples, 0.02%)</title><rect x="952.5" y="1285" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="955.52" y="1295.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (1,060,208,181 samples, 0.03%)</title><rect x="807.9" y="1173" width="0.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="810.91" y="1183.5" ></text>
</g>
<g >
<title>mod_objcg_state (387,376,244 samples, 0.01%)</title><rect x="1172.5" y="1269" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1175.53" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,821,017,753 samples, 0.07%)</title><rect x="51.4" y="1253" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.40" y="1263.5" ></text>
</g>
<g >
<title>poll_idle (11,700,794,846 samples, 0.29%)</title><rect x="35.2" y="1445" width="3.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="38.17" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (347,355,481 samples, 0.01%)</title><rect x="61.7" y="1509" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="64.70" y="1519.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,153,828,639 samples, 0.05%)</title><rect x="811.2" y="1253" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="814.21" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,447,577,542 samples, 0.06%)</title><rect x="51.4" y="1173" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.40" y="1183.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (423,899,337 samples, 0.01%)</title><rect x="613.9" y="1237" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="616.86" y="1247.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (481,486,906 samples, 0.01%)</title><rect x="669.7" y="1301" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="672.70" y="1311.5" ></text>
</g>
<g >
<title>__kmalloc_node (1,812,963,887 samples, 0.04%)</title><rect x="840.6" y="1189" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="843.60" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (347,256,638 samples, 0.01%)</title><rect x="1016.2" y="1221" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1019.24" y="1231.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (11,507,721,948 samples, 0.29%)</title><rect x="899.8" y="1269" width="3.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="902.78" y="1279.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (921,184,321 samples, 0.02%)</title><rect x="45.6" y="1509" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="48.57" y="1519.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (579,671,896 samples, 0.01%)</title><rect x="1187.6" y="1477" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1190.62" y="1487.5" ></text>
</g>
<g >
<title>start_secondary (62,120,407,255 samples, 1.54%)</title><rect x="1169.8" y="1557" width="18.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1172.81" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1,051,739,782 samples, 0.03%)</title><rect x="785.7" y="1285" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="788.69" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,045,482,965 samples, 0.03%)</title><rect x="19.0" y="1397" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.97" y="1407.5" ></text>
</g>
<g >
<title>schedule (114,996,077,881 samples, 2.85%)</title><rect x="590.7" y="1301" width="33.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="593.65" y="1311.5" >sc..</text>
</g>
<g >
<title>update_rq_clock (1,149,068,490 samples, 0.03%)</title><rect x="1184.2" y="1461" width="0.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1187.19" y="1471.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (716,336,885 samples, 0.02%)</title><rect x="59.2" y="1573" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="62.16" y="1583.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (3,848,506,115 samples, 0.10%)</title><rect x="51.2" y="1509" width="1.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="54.24" y="1519.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (5,891,646,406 samples, 0.15%)</title><rect x="995.5" y="1557" width="1.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="998.51" y="1567.5" ></text>
</g>
<g >
<title>ret_from_fork (12,651,825,235 samples, 0.31%)</title><rect x="1031.0" y="1557" width="3.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1033.99" y="1567.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1557" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="55.71" y="1567.5" ></text>
</g>
<g >
<title>i_callback (600,963,155 samples, 0.01%)</title><rect x="570.5" y="1285" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="573.50" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_read (695,470,900 samples, 0.02%)</title><rect x="54.6" y="1445" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="57.57" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,774,894,317 samples, 0.04%)</title><rect x="948.2" y="1317" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="951.21" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="517" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="527.5" ></text>
</g>
<g >
<title>allocate_slab (5,212,553,130 samples, 0.13%)</title><rect x="840.0" y="1221" width="1.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="843.03" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,470,380,476 samples, 0.04%)</title><rect x="51.4" y="789" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.42" y="799.5" ></text>
</g>
<g >
<title>[libc.so.6] (642,941,385 samples, 0.02%)</title><rect x="11.3" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.35" y="1391.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1,932,334,609 samples, 0.05%)</title><rect x="453.5" y="1221" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="456.51" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="837" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="847.5" ></text>
</g>
<g >
<title>folio_create_empty_buffers (389,593,032 samples, 0.01%)</title><rect x="58.0" y="1189" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="60.96" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1269" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1279.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,186,450,582 samples, 0.05%)</title><rect x="15.1" y="1461" width="0.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="18.12" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1141" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1151.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2,022,962,377 samples, 0.05%)</title><rect x="717.3" y="1301" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="720.34" y="1311.5" ></text>
</g>
<g >
<title>__do_softirq (828,176,668 samples, 0.02%)</title><rect x="1134.9" y="1429" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1137.91" y="1439.5" ></text>
</g>
<g >
<title>aeProcessEvents.part.0 (3,111,520,358 samples, 0.08%)</title><rect x="1189.1" y="1509" width="0.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1192.09" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (5,758,770,583 samples, 0.14%)</title><rect x="1013.0" y="1573" width="1.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1015.99" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (449,352,815 samples, 0.01%)</title><rect x="16.3" y="1557" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.31" y="1567.5" ></text>
</g>
<g >
<title>read (695,470,900 samples, 0.02%)</title><rect x="54.6" y="1493" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="57.57" y="1503.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (487,759,335 samples, 0.01%)</title><rect x="1017.1" y="1525" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1020.11" y="1535.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (1,903,235,021 samples, 0.05%)</title><rect x="192.2" y="1557" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="195.15" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (512,922,337 samples, 0.01%)</title><rect x="58.8" y="1509" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="61.82" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_execve (6,189,779,741 samples, 0.15%)</title><rect x="55.0" y="1541" width="1.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="57.97" y="1551.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (450,177,672 samples, 0.01%)</title><rect x="680.8" y="1349" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="683.76" y="1359.5" ></text>
</g>
<g >
<title>rcu_do_batch (433,135,575 samples, 0.01%)</title><rect x="560.7" y="1189" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="563.72" y="1199.5" ></text>
</g>
<g >
<title>refill_obj_stock (446,259,802 samples, 0.01%)</title><rect x="1111.7" y="1237" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1114.65" y="1247.5" ></text>
</g>
<g >
<title>__rcu_read_lock (654,641,246 samples, 0.02%)</title><rect x="819.2" y="1221" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="822.23" y="1231.5" ></text>
</g>
<g >
<title>enqueue_task_fair (4,873,030,916 samples, 0.12%)</title><rect x="40.2" y="1429" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="43.19" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="773" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="783.5" ></text>
</g>
<g >
<title>___slab_alloc (25,580,044,073 samples, 0.63%)</title><rect x="803.0" y="1253" width="7.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="805.98" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (364,324,619 samples, 0.01%)</title><rect x="11.6" y="1381" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.61" y="1391.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14,439,769,712 samples, 0.36%)</title><rect x="1108.9" y="1413" width="4.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1111.88" y="1423.5" ></text>
</g>
<g >
<title>uv__fs_work (763,453,337 samples, 0.02%)</title><rect x="54.6" y="1525" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="57.57" y="1535.5" ></text>
</g>
<g >
<title>update_load_avg (573,740,946 samples, 0.01%)</title><rect x="1129.6" y="1413" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1132.59" y="1423.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (393,438,477 samples, 0.01%)</title><rect x="863.3" y="1269" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="866.28" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,936,577,308 samples, 0.05%)</title><rect x="51.4" y="933" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.41" y="943.5" ></text>
</g>
<g >
<title>iput (71,566,666,668 samples, 1.77%)</title><rect x="910.3" y="1237" width="20.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="913.26" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="725" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="735.5" ></text>
</g>
<g >
<title>[bash] (1,167,724,378 samples, 0.03%)</title><rect x="1016.4" y="1285" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1019.36" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="463.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (392,788,733 samples, 0.01%)</title><rect x="1063.4" y="1285" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1066.43" y="1295.5" ></text>
</g>
<g >
<title>setlocale (1,912,828,395 samples, 0.05%)</title><rect x="1018.5" y="1509" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1021.49" y="1519.5" ></text>
</g>
<g >
<title>enqueue_task (39,476,756,062 samples, 0.98%)</title><rect x="1120.9" y="1445" width="11.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1123.87" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (3,799,158,899 samples, 0.09%)</title><rect x="51.2" y="1477" width="1.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="54.24" y="1487.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,078,743,591 samples, 0.05%)</title><rect x="1040.1" y="1397" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1043.11" y="1407.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (344,838,270 samples, 0.01%)</title><rect x="13.8" y="1493" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="16.82" y="1503.5" ></text>
</g>
<g >
<title>update_curr (409,817,583 samples, 0.01%)</title><rect x="1129.5" y="1413" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1132.47" y="1423.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (40,695,000,536 samples, 1.01%)</title><rect x="837.3" y="1269" width="11.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="840.30" y="1279.5" ></text>
</g>
<g >
<title>kmem_cache_free (531,080,145 samples, 0.01%)</title><rect x="24.2" y="1397" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="27.17" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,130,981,402 samples, 0.13%)</title><rect x="18.2" y="1541" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.16" y="1551.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (478,807,558 samples, 0.01%)</title><rect x="568.7" y="1365" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="571.65" y="1375.5" ></text>
</g>
<g >
<title>clear_inode (4,444,996,937 samples, 0.11%)</title><rect x="916.1" y="1205" width="1.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="919.09" y="1215.5" ></text>
</g>
<g >
<title>bprm_execve (6,189,779,741 samples, 0.15%)</title><rect x="55.0" y="1509" width="1.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="57.97" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,634,337,751 samples, 0.04%)</title><rect x="1018.0" y="1573" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1021.01" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (408,038,309 samples, 0.01%)</title><rect x="1167.9" y="1573" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1170.88" y="1583.5" ></text>
</g>
<g >
<title>locks_remove_file (594,904,573 samples, 0.01%)</title><rect x="933.6" y="1285" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="936.56" y="1295.5" ></text>
</g>
<g >
<title>socket_readable (2,387,462,546 samples, 0.06%)</title><rect x="1189.3" y="1493" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.25" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="725" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="735.5" ></text>
</g>
<g >
<title>__update_load_avg_se (783,147,265 samples, 0.02%)</title><rect x="1145.7" y="1413" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1148.74" y="1423.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (2,775,422,708 samples, 0.07%)</title><rect x="919.2" y="1125" width="0.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="922.22" y="1135.5" ></text>
</g>
<g >
<title>native_sched_clock (1,787,196,379 samples, 0.04%)</title><rect x="621.5" y="1205" width="0.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="624.49" y="1215.5" ></text>
</g>
<g >
<title>__calc_delta (895,046,855 samples, 0.02%)</title><rect x="562.1" y="1269" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="565.07" y="1279.5" ></text>
</g>
<g >
<title>irq_exit_rcu (5,064,581,227 samples, 0.13%)</title><rect x="1158.6" y="1349" width="1.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1161.57" y="1359.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (42,958,310,664 samples, 1.06%)</title><rect x="631.7" y="1365" width="12.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="634.72" y="1375.5" ></text>
</g>
<g >
<title>__update_load_avg_se (820,951,196 samples, 0.02%)</title><rect x="1125.0" y="1397" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1128.05" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3,669,837,775 samples, 0.09%)</title><rect x="897.6" y="1285" width="1.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="900.56" y="1295.5" ></text>
</g>
<g >
<title>call_rcu (10,703,332,608 samples, 0.27%)</title><rect x="924.1" y="1189" width="3.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="927.08" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1301" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (23,239,539,043 samples, 0.58%)</title><rect x="1019.1" y="1573" width="6.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1022.06" y="1583.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (23,298,162,762 samples, 0.58%)</title><rect x="633.2" y="1333" width="6.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="636.16" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (620,492,179 samples, 0.02%)</title><rect x="917.2" y="1189" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="920.20" y="1199.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,185,328,606 samples, 0.05%)</title><rect x="37.9" y="1429" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="40.95" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1013" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_poll (347,301,210 samples, 0.01%)</title><rect x="1025.3" y="1525" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1028.27" y="1535.5" ></text>
</g>
<g >
<title>poll_idle (3,399,587,722 samples, 0.08%)</title><rect x="1162.2" y="1381" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1165.18" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_read (902,952,167 samples, 0.02%)</title><rect x="1025.4" y="1525" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1028.38" y="1535.5" ></text>
</g>
<g >
<title>call_cpuidle (2,247,623,823 samples, 0.06%)</title><rect x="1188.0" y="1429" width="0.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1191.01" y="1439.5" ></text>
</g>
<g >
<title>kmem_cache_free (930,070,609 samples, 0.02%)</title><rect x="1033.2" y="1413" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1036.22" y="1423.5" ></text>
</g>
<g >
<title>apparmor_inode_free_security (423,310,966 samples, 0.01%)</title><rect x="920.1" y="1173" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="923.08" y="1183.5" ></text>
</g>
<g >
<title>prepare_task_switch (2,606,325,888 samples, 0.06%)</title><rect x="1146.2" y="1477" width="0.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1149.24" y="1487.5" ></text>
</g>
<g >
<title>[bash] (1,167,724,378 samples, 0.03%)</title><rect x="1016.4" y="1269" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1019.36" y="1279.5" ></text>
</g>
<g >
<title>get_next_ino (899,699,327 samples, 0.02%)</title><rect x="779.8" y="1333" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="782.77" y="1343.5" ></text>
</g>
<g >
<title>memcg_list_lru_alloc (7,823,378,120 samples, 0.19%)</title><rect x="818.9" y="1237" width="2.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="821.87" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1093" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1103.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,401,368,395 samples, 0.06%)</title><rect x="1180.8" y="1429" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1183.81" y="1439.5" ></text>
</g>
<g >
<title>do_group_exit (505,308,516 samples, 0.01%)</title><rect x="1030.6" y="1525" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1033.62" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (54,842,731,309 samples, 1.36%)</title><rect x="740.4" y="1365" width="16.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="743.37" y="1375.5" ></text>
</g>
<g >
<title>prepare_task_switch (494,668,393 samples, 0.01%)</title><rect x="44.3" y="1477" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="47.28" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,464,680,291 samples, 0.09%)</title><rect x="51.3" y="1429" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.33" y="1439.5" ></text>
</g>
<g >
<title>do_idle (466,131,805 samples, 0.01%)</title><rect x="61.7" y="1525" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="64.70" y="1535.5" ></text>
</g>
<g >
<title>update_load_avg (3,224,219,465 samples, 0.08%)</title><rect x="1145.0" y="1429" width="1.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1148.02" y="1439.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1,512,069,376 samples, 0.04%)</title><rect x="1131.9" y="1413" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1134.93" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,650,052,407 samples, 0.04%)</title><rect x="13.3" y="1509" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="16.34" y="1519.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (1,150,039,913 samples, 0.03%)</title><rect x="56.4" y="1253" width="0.3" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="59.39" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,776,214,788 samples, 0.14%)</title><rect x="57.0" y="1413" width="1.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="60.04" y="1423.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (921,511,266 samples, 0.02%)</title><rect x="46.5" y="1333" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="49.52" y="1343.5" ></text>
</g>
<g >
<title>destroy_inode (34,326,222,252 samples, 0.85%)</title><rect x="917.4" y="1205" width="10.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="920.39" y="1215.5" ></text>
</g>
<g >
<title>do_sched_yield (620,838,127 samples, 0.02%)</title><rect x="682.0" y="1397" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="685.01" y="1407.5" ></text>
</g>
<g >
<title>HandleStackContext (3,429,615,649 samples, 0.09%)</title><rect x="993.6" y="1557" width="1.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="996.59" y="1567.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2,706,120,103 samples, 0.07%)</title><rect x="567.0" y="1285" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="570.05" y="1295.5" ></text>
</g>
<g >
<title>intel_idle (6,857,143,228 samples, 0.17%)</title><rect x="1160.1" y="1381" width="2.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1163.13" y="1391.5" ></text>
</g>
<g >
<title>rcu_core (10,631,715,849 samples, 0.26%)</title><rect x="1170.6" y="1349" width="3.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1173.63" y="1359.5" ></text>
</g>
<g >
<title>update_rq_clock (8,901,455,033 samples, 0.22%)</title><rect x="678.0" y="1333" width="2.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="680.96" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1253" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1263.5" ></text>
</g>
<g >
<title>do_fcntl (667,135,343 samples, 0.02%)</title><rect x="946.5" y="1333" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="949.50" y="1343.5" ></text>
</g>
<g >
<title>net_rx_action (557,971,400 samples, 0.01%)</title><rect x="952.5" y="1109" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="955.55" y="1119.5" ></text>
</g>
<g >
<title>cache_from_obj (599,834,685 samples, 0.01%)</title><rect x="1049.8" y="1285" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1052.85" y="1295.5" ></text>
</g>
<g >
<title>call_cpuidle (1,581,691,686 samples, 0.04%)</title><rect x="13.3" y="1493" width="0.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="16.34" y="1503.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (56,753,298,632 samples, 1.41%)</title><rect x="1118.3" y="1493" width="16.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1121.30" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,042,264,459 samples, 0.03%)</title><rect x="11.8" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.83" y="1583.5" ></text>
</g>
<g >
<title>exit_mm (415,730,636 samples, 0.01%)</title><rect x="1030.6" y="1493" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1033.62" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="485" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="495.5" ></text>
</g>
<g >
<title>errseq_sample (1,733,820,269 samples, 0.04%)</title><rect x="868.3" y="1301" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="871.27" y="1311.5" ></text>
</g>
<g >
<title>release_sock (418,260,949 samples, 0.01%)</title><rect x="951.9" y="1365" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="954.85" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="997" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1007.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (3,384,462,684 samples, 0.08%)</title><rect x="317.0" y="1541" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="319.98" y="1551.5" ></text>
</g>
<g >
<title>update_curr (1,095,275,150 samples, 0.03%)</title><rect x="676.1" y="1317" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="679.09" y="1327.5" ></text>
</g>
<g >
<title>__libc_start_main (5,130,981,402 samples, 0.13%)</title><rect x="18.2" y="1557" width="1.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="21.16" y="1567.5" ></text>
</g>
<g >
<title>clear_page_erms (678,002,088 samples, 0.02%)</title><rect x="952.0" y="1269" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="955.03" y="1279.5" ></text>
</g>
<g >
<title>__clone (3,112,343,895 samples, 0.08%)</title><rect x="1189.1" y="1573" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.09" y="1583.5" ></text>
</g>
<g >
<title>start_kernel (4,739,610,922 samples, 0.12%)</title><rect x="46.5" y="1525" width="1.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="49.46" y="1535.5" ></text>
</g>
<g >
<title>exit_mm (635,898,657 samples, 0.02%)</title><rect x="23.5" y="1493" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="26.48" y="1503.5" ></text>
</g>
<g >
<title>fput (6,087,432,852 samples, 0.15%)</title><rect x="756.9" y="1365" width="1.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="759.92" y="1375.5" ></text>
</g>
<g >
<title>_raw_spin_rq_lock_irqsave (1,636,955,865 samples, 0.04%)</title><rect x="1119.5" y="1461" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1122.53" y="1471.5" ></text>
</g>
<g >
<title>rcu_do_batch (762,094,895 samples, 0.02%)</title><rect x="15.1" y="1333" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="18.13" y="1343.5" ></text>
</g>
<g >
<title>psi_group_change (1,322,937,291 samples, 0.03%)</title><rect x="1186.4" y="1461" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1189.35" y="1471.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (490,066,374 samples, 0.01%)</title><rect x="718.0" y="1285" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="721.05" y="1295.5" ></text>
</g>
<g >
<title>mod_objcg_state (379,470,683 samples, 0.01%)</title><rect x="909.4" y="1237" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="912.36" y="1247.5" ></text>
</g>
<g >
<title>m_show (350,113,680 samples, 0.01%)</title><rect x="59.9" y="1477" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="62.90" y="1487.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (700,567,208 samples, 0.02%)</title><rect x="601.0" y="1221" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="604.03" y="1231.5" ></text>
</g>
<g >
<title>[[stack]] (372,293,847 samples, 0.01%)</title><rect x="11.0" y="1573" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="14.05" y="1583.5" ></text>
</g>
<g >
<title>update_load_avg (1,410,945,763 samples, 0.03%)</title><rect x="41.1" y="1397" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="44.08" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (347,256,638 samples, 0.01%)</title><rect x="1016.2" y="1205" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1019.24" y="1215.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (961,374,756 samples, 0.02%)</title><rect x="612.7" y="1253" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="615.69" y="1263.5" ></text>
</g>
<g >
<title>__do_sys_clone (4,773,652,195 samples, 0.12%)</title><rect x="1023.7" y="1509" width="1.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1026.69" y="1519.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (3,141,029,257 samples, 0.08%)</title><rect x="910.8" y="1221" width="0.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="913.77" y="1231.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (2,147,344,837 samples, 0.05%)</title><rect x="567.2" y="1253" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="570.19" y="1263.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (3,723,057,879 samples, 0.09%)</title><rect x="257.4" y="1541" width="1.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="260.45" y="1551.5" ></text>
</g>
<g >
<title>ksys_read (902,952,167 samples, 0.02%)</title><rect x="1025.4" y="1509" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1028.38" y="1519.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (558,116,485 samples, 0.01%)</title><rect x="60.1" y="1397" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="63.12" y="1407.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (7,474,739,831 samples, 0.19%)</title><rect x="1154.8" y="1509" width="2.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1157.81" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="357" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="367.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (4,917,355,374 samples, 0.12%)</title><rect x="683.0" y="1381" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="685.97" y="1391.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (2,557,628,663 samples, 0.06%)</title><rect x="862.4" y="1237" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="865.39" y="1247.5" ></text>
</g>
<g >
<title>cpuidle_enter (45,818,832,904 samples, 1.14%)</title><rect x="25.3" y="1477" width="13.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="28.25" y="1487.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (354,869,649 samples, 0.01%)</title><rect x="631.5" y="1365" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="634.50" y="1375.5" ></text>
</g>
<g >
<title>file_free_rcu (716,173,503 samples, 0.02%)</title><rect x="24.0" y="1429" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="26.96" y="1439.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (4,977,751,408 samples, 0.12%)</title><rect x="918.6" y="1141" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="921.57" y="1151.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (999,133,545 samples, 0.02%)</title><rect x="57.9" y="1221" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="60.95" y="1231.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,502,633,057 samples, 0.09%)</title><rect x="951.8" y="1445" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="954.84" y="1455.5" ></text>
</g>
<g >
<title>put_cpu_partial (1,008,330,556 samples, 0.02%)</title><rect x="1048.9" y="1269" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1051.92" y="1279.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (360,221,549 samples, 0.01%)</title><rect x="684.4" y="1381" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="687.41" y="1391.5" ></text>
</g>
<g >
<title>available_idle_cpu (578,722,362 samples, 0.01%)</title><rect x="719.2" y="1285" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="722.17" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1397" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1407.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1,936,522,037 samples, 0.05%)</title><rect x="1063.2" y="1365" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1066.18" y="1375.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,832,809,539 samples, 0.05%)</title><rect x="625.5" y="1301" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="628.53" y="1311.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,570,625,457 samples, 0.04%)</title><rect x="1142.6" y="1429" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1145.59" y="1439.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (1,028,448,539 samples, 0.03%)</title><rect x="1159.7" y="1253" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1162.70" y="1263.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (6,022,762,257 samples, 0.15%)</title><rect x="57.0" y="1525" width="1.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="59.98" y="1535.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (465,268,412 samples, 0.01%)</title><rect x="570.0" y="1397" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="572.99" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1349" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1359.5" ></text>
</g>
<g >
<title>set_next_entity (779,631,025 samples, 0.02%)</title><rect x="1185.9" y="1445" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1188.89" y="1455.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (117,790,744,705 samples, 2.92%)</title><rect x="729.1" y="1429" width="34.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="732.06" y="1439.5" >__..</text>
</g>
<g >
<title>call_rcu (11,980,096,343 samples, 0.30%)</title><rect x="899.8" y="1285" width="3.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="902.75" y="1295.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (2,088,820,514 samples, 0.05%)</title><rect x="997.4" y="1557" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1000.40" y="1567.5" ></text>
</g>
<g >
<title>[grep] (737,900,863 samples, 0.02%)</title><rect x="14.1" y="1573" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="17.11" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="853" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="863.5" ></text>
</g>
<g >
<title>execute_command (2,138,306,028 samples, 0.05%)</title><rect x="1016.1" y="1349" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1019.07" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="325" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="335.5" ></text>
</g>
<g >
<title>apparmor_inode_alloc_security (2,048,958,805 samples, 0.05%)</title><rect x="797.3" y="1253" width="0.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="800.25" y="1263.5" ></text>
</g>
<g >
<title>prep_compound_page (354,527,254 samples, 0.01%)</title><rect x="840.4" y="1157" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="843.43" y="1167.5" ></text>
</g>
<g >
<title>[ls] (5,113,831,107 samples, 0.13%)</title><rect x="18.2" y="1525" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.16" y="1535.5" ></text>
</g>
<g >
<title>rcu_core (560,415,501 samples, 0.01%)</title><rect x="696.1" y="1333" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="699.10" y="1343.5" ></text>
</g>
<g >
<title>begin_new_exec (718,590,795 samples, 0.02%)</title><rect x="1168.8" y="1429" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1171.80" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,886,240,605 samples, 0.05%)</title><rect x="60.1" y="1461" width="0.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="63.11" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,197,158,129 samples, 0.15%)</title><rect x="1029.0" y="1573" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1031.99" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1189" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1199.5" ></text>
</g>
<g >
<title>copy_process (1,836,403,277 samples, 0.05%)</title><rect x="50.3" y="1365" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="53.32" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1525" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_accept (385,974,924,413 samples, 9.57%)</title><rect x="771.7" y="1381" width="112.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="774.69" y="1391.5" >__x64_sys_acc..</text>
</g>
<g >
<title>find_busiest_group (595,415,503 samples, 0.01%)</title><rect x="1063.4" y="1317" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1066.38" y="1327.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (608,587,708 samples, 0.02%)</title><rect x="952.5" y="1173" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="955.54" y="1183.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (564,989,830 samples, 0.01%)</title><rect x="696.1" y="1381" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="699.10" y="1391.5" ></text>
</g>
<g >
<title>select_task_rq_fair (13,180,115,377 samples, 0.33%)</title><rect x="718.3" y="1301" width="3.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="721.35" y="1311.5" ></text>
</g>
<g >
<title>ktime_get (810,088,268 samples, 0.02%)</title><rect x="1153.5" y="1493" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1156.45" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,548,374,017 samples, 0.06%)</title><rect x="18.8" y="1461" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.84" y="1471.5" ></text>
</g>
<g >
<title>prep_compound_page (711,001,025 samples, 0.02%)</title><rect x="807.3" y="1157" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="810.28" y="1167.5" ></text>
</g>
<g >
<title>record_times (674,517,011 samples, 0.02%)</title><rect x="620.8" y="1237" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="623.79" y="1247.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (4,739,610,922 samples, 0.12%)</title><rect x="46.5" y="1541" width="1.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="49.46" y="1551.5" ></text>
</g>
<g >
<title>rcu_core (906,942,614 samples, 0.02%)</title><rect x="612.7" y="1157" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="615.70" y="1167.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (411,938,929 samples, 0.01%)</title><rect x="26.9" y="1269" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="29.92" y="1279.5" ></text>
</g>
<g >
<title>__fput (150,889,475,606 samples, 3.74%)</title><rect x="896.3" y="1301" width="44.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="899.26" y="1311.5" >__fput</text>
</g>
<g >
<title>psi_task_change (1,245,398,605 samples, 0.03%)</title><rect x="1183.8" y="1429" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1186.80" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="613" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="623.5" ></text>
</g>
<g >
<title>__fget_light (488,216,756 samples, 0.01%)</title><rect x="774.7" y="1349" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="777.68" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (95,376,030,478 samples, 2.36%)</title><rect x="657.0" y="1429" width="27.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="659.97" y="1439.5" >e..</text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (2,223,209,556 samples, 0.06%)</title><rect x="453.4" y="1397" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="456.45" y="1407.5" ></text>
</g>
<g >
<title>xa_load (4,874,148,435 samples, 0.12%)</title><rect x="819.5" y="1221" width="1.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="822.53" y="1231.5" ></text>
</g>
<g >
<title>show_mountinfo (402,072,973 samples, 0.01%)</title><rect x="61.6" y="1461" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="64.57" y="1471.5" ></text>
</g>
<g >
<title>cache_from_obj (607,569,548 samples, 0.02%)</title><rect x="904.9" y="1237" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="907.92" y="1247.5" ></text>
</g>
<g >
<title>__do_sys_clone (4,245,307,056 samples, 0.11%)</title><rect x="48.7" y="1365" width="1.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="51.67" y="1375.5" ></text>
</g>
<g >
<title>NaClSysClockGetTime (167,933,414,902 samples, 4.16%)</title><rect x="344.5" y="1525" width="49.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="347.51" y="1535.5" >NaCl..</text>
</g>
<g >
<title>kmem_cache_free (2,191,523,122 samples, 0.05%)</title><rect x="1032.5" y="1397" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1035.55" y="1407.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (365,684,290 samples, 0.01%)</title><rect x="819.4" y="1221" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="822.42" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="373" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1,065,924,655 samples, 0.03%)</title><rect x="1187.5" y="1509" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1190.47" y="1519.5" ></text>
</g>
<g >
<title>__update_load_avg_se (2,620,094,678 samples, 0.06%)</title><rect x="1128.3" y="1381" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1131.34" y="1391.5" ></text>
</g>
<g >
<title>refill_obj_stock (2,577,057,834 samples, 0.06%)</title><rect x="1055.5" y="1253" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1058.48" y="1263.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,142,324,206 samples, 0.05%)</title><rect x="38.0" y="1381" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="40.96" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_read (411,309,797 samples, 0.01%)</title><rect x="59.9" y="1541" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="62.90" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,336,366,596 samples, 0.06%)</title><rect x="1172.1" y="1285" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1175.12" y="1295.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,439,769,712 samples, 0.36%)</title><rect x="1108.9" y="1429" width="4.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1111.88" y="1439.5" ></text>
</g>
<g >
<title>task_work_run (161,800,996,607 samples, 4.01%)</title><rect x="895.2" y="1333" width="47.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="898.15" y="1343.5" >task..</text>
</g>
<g >
<title>call_cpuidle (394,095,727 samples, 0.01%)</title><rect x="14.7" y="1493" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="17.71" y="1503.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (375,798,996 samples, 0.01%)</title><rect x="823.2" y="1269" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="826.19" y="1279.5" ></text>
</g>
<g >
<title>local_clock_noinstr (2,458,260,665 samples, 0.06%)</title><rect x="1096.6" y="1445" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1099.61" y="1455.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectGetOwnPropertyDescriptors (661,449,321 samples, 0.02%)</title><rect x="50.1" y="1541" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="53.08" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="709" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="719.5" ></text>
</g>
<g >
<title>shell_execve (347,256,638 samples, 0.01%)</title><rect x="1016.2" y="1253" width="0.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1019.24" y="1263.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (11,331,538,706 samples, 0.28%)</title><rect x="854.6" y="1253" width="3.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="857.65" y="1263.5" ></text>
</g>
<g >
<title>consume_obj_stock (1,578,245,524 samples, 0.04%)</title><rect x="821.5" y="1221" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="824.50" y="1231.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (579,418,003 samples, 0.01%)</title><rect x="684.5" y="1413" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="687.52" y="1423.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,002,915,230 samples, 0.27%)</title><rect x="1170.6" y="1413" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1173.63" y="1423.5" ></text>
</g>
<g >
<title>native_sched_clock (1,126,870,811 samples, 0.03%)</title><rect x="725.8" y="1237" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="728.75" y="1247.5" ></text>
</g>
<g >
<title>ip_local_deliver (407,625,102 samples, 0.01%)</title><rect x="952.6" y="1013" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="955.56" y="1023.5" ></text>
</g>
<g >
<title>shuffle_freelist (1,029,644,251 samples, 0.03%)</title><rect x="841.3" y="1205" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="844.26" y="1215.5" ></text>
</g>
<g >
<title>folio_alloc (400,151,017 samples, 0.01%)</title><rect x="57.8" y="1189" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="60.81" y="1199.5" ></text>
</g>
<g >
<title>__do_softirq (1,992,426,818 samples, 0.05%)</title><rect x="570.3" y="1349" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="573.26" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (17,515,395,364 samples, 0.43%)</title><rect x="1158.4" y="1445" width="5.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1161.37" y="1455.5" ></text>
</g>
<g >
<title>alloc_empty_file (79,880,490,318 samples, 1.98%)</title><rect x="826.8" y="1285" width="23.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="829.77" y="1295.5" >a..</text>
</g>
<g >
<title>truncate_inode_pages_final (8,316,222,582 samples, 0.21%)</title><rect x="928.1" y="1205" width="2.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="931.15" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3,221,446,632 samples, 0.08%)</title><rect x="557.0" y="1333" width="1.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="560.05" y="1343.5" ></text>
</g>
<g >
<title>find_busiest_group (524,366,879 samples, 0.01%)</title><rect x="614.6" y="1205" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="617.56" y="1215.5" ></text>
</g>
<g >
<title>do_fcntl (16,364,922,963 samples, 0.41%)</title><rect x="751.1" y="1349" width="4.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="754.13" y="1359.5" ></text>
</g>
<g >
<title>native_sched_clock (4,791,875,255 samples, 0.12%)</title><rect x="679.1" y="1269" width="1.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="682.11" y="1279.5" ></text>
</g>
<g >
<title>dispatcher (2,430,410,521 samples, 0.06%)</title><rect x="453.4" y="1493" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="456.41" y="1503.5" ></text>
</g>
<g >
<title>__schedule (489,449,975 samples, 0.01%)</title><rect x="1188.9" y="1429" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1191.87" y="1439.5" ></text>
</g>
<g >
<title>tick_nohz_stop_idle (4,298,190,499 samples, 0.11%)</title><rect x="1155.7" y="1493" width="1.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1158.74" y="1503.5" ></text>
</g>
<g >
<title>irq_exit_rcu (415,658,130 samples, 0.01%)</title><rect x="767.7" y="1381" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="770.70" y="1391.5" ></text>
</g>
<g >
<title>__kmalloc_node (1,847,408,502 samples, 0.05%)</title><rect x="807.7" y="1189" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="810.75" y="1199.5" ></text>
</g>
<g >
<title>do_syscall_64 (643,104,922 samples, 0.02%)</title><rect x="17.9" y="1541" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="20.87" y="1551.5" ></text>
</g>
<g >
<title>alloc_file (382,765,954 samples, 0.01%)</title><rect x="823.9" y="1317" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="826.89" y="1327.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1,613,907,105 samples, 0.04%)</title><rect x="762.5" y="1397" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="765.47" y="1407.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (1,138,852,241 samples, 0.03%)</title><rect x="1189.5" y="1269" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1192.45" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,863,105,101 samples, 0.05%)</title><rect x="66.7" y="1557" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="69.71" y="1567.5" ></text>
</g>
<g >
<title>__sock_release (8,920,621,555 samples, 0.22%)</title><rect x="937.4" y="1269" width="2.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="940.38" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_lock (11,729,059,333 samples, 0.29%)</title><rect x="877.3" y="1333" width="3.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="880.31" y="1343.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::lock_exclusive_slow (562,766,629 samples, 0.01%)</title><rect x="1012.0" y="1573" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1015.05" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1413" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="1423.5" ></text>
</g>
<g >
<title>v8::internal::Heap::CollectGarbage (509,936,867 samples, 0.01%)</title><rect x="53.9" y="1461" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="56.89" y="1471.5" ></text>
</g>
<g >
<title>generic_perform_write (5,326,050,182 samples, 0.13%)</title><rect x="57.1" y="1253" width="1.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="60.15" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="613" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="623.5" ></text>
</g>
<g >
<title>rcu_core_si (687,563,463 samples, 0.02%)</title><rect x="666.5" y="1253" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="669.45" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,836,403,277 samples, 0.05%)</title><rect x="50.3" y="1445" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="53.32" y="1455.5" ></text>
</g>
<g >
<title>__rcu_read_lock (3,004,068,419 samples, 0.07%)</title><rect x="749.7" y="1333" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="752.70" y="1343.5" ></text>
</g>
<g >
<title>__sys_accept4 (381,780,820,955 samples, 9.46%)</title><rect x="771.8" y="1365" width="111.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="774.79" y="1375.5" >__sys_accept4</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1125" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="1135.5" ></text>
</g>
<g >
<title>__do_softirq (690,590,006 samples, 0.02%)</title><rect x="666.5" y="1269" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="669.45" y="1279.5" ></text>
</g>
<g >
<title>start_secondary (854,734,568 samples, 0.02%)</title><rect x="58.8" y="1557" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="61.81" y="1567.5" ></text>
</g>
<g >
<title>grep (2,040,451,313 samples, 0.05%)</title><rect x="14.1" y="1589" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="17.09" y="1599.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (500,909,283 samples, 0.01%)</title><rect x="660.6" y="1365" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="663.61" y="1375.5" ></text>
</g>
<g >
<title>memcg_account_kmem (553,002,063 samples, 0.01%)</title><rect x="848.8" y="1237" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="851.83" y="1247.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (499,494,854 samples, 0.01%)</title><rect x="27.9" y="1269" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="30.94" y="1279.5" ></text>
</g>
<g >
<title>yield_task_fair (385,044,243 samples, 0.01%)</title><rect x="681.8" y="1381" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="684.82" y="1391.5" ></text>
</g>
<g >
<title>rcu_do_batch (681,543,493 samples, 0.02%)</title><rect x="1188.0" y="1269" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1191.03" y="1279.5" ></text>
</g>
<g >
<title>psi_group_change (11,668,268,058 samples, 0.29%)</title><rect x="617.6" y="1253" width="3.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="620.58" y="1263.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDayDecoder (202,403,173,472 samples, 5.02%)</title><rect x="394.1" y="1541" width="59.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="397.07" y="1551.5" >NaClSy..</text>
</g>
<g >
<title>hashbrown::map::make_hash (1,580,078,866 samples, 0.04%)</title><rect x="176.1" y="1557" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="179.11" y="1567.5" ></text>
</g>
<g >
<title>put_prev_entity (885,699,700 samples, 0.02%)</title><rect x="615.7" y="1237" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="618.69" y="1247.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (731,398,427 samples, 0.02%)</title><rect x="1188.0" y="1333" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1191.03" y="1343.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::unlock_exclusive_slow (839,697,720 samples, 0.02%)</title><rect x="1010.6" y="1557" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1013.61" y="1567.5" ></text>
</g>
<g >
<title>sched_clock (1,271,255,339 samples, 0.03%)</title><rect x="1150.4" y="1445" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1153.41" y="1455.5" ></text>
</g>
<g >
<title>rcu_do_batch (775,569,974 samples, 0.02%)</title><rect x="1134.9" y="1381" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1137.92" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1141" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1151.5" ></text>
</g>
<g >
<title>allocate_slab (22,855,677,050 samples, 0.57%)</title><rect x="803.7" y="1221" width="6.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="806.73" y="1231.5" ></text>
</g>
<g >
<title>check_cfs_rq_runtime (846,317,792 samples, 0.02%)</title><rect x="667.0" y="1317" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="670.01" y="1327.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::checked_sub_instant (4,214,420,130 samples, 0.10%)</title><rect x="948.1" y="1381" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="951.14" y="1391.5" ></text>
</g>
<g >
<title>__put_user_8 (3,986,273,081 samples, 0.10%)</title><rect x="888.6" y="1317" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="891.57" y="1327.5" ></text>
</g>
<g >
<title>ovl_read_iter (2,015,469,178 samples, 0.05%)</title><rect x="453.5" y="1285" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="456.49" y="1295.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2,717,175,254 samples, 0.07%)</title><rect x="1127.5" y="1381" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1130.55" y="1391.5" ></text>
</g>
<g >
<title>rcu_core_si (10,547,131,961 samples, 0.26%)</title><rect x="1031.1" y="1477" width="3.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1034.13" y="1487.5" ></text>
</g>
<g >
<title>load_elf_binary (558,738,032 samples, 0.01%)</title><rect x="23.3" y="1445" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="26.30" y="1455.5" ></text>
</g>
<g >
<title>schedule_idle (615,777,610 samples, 0.02%)</title><rect x="47.6" y="1445" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="50.61" y="1455.5" ></text>
</g>
<g >
<title>CompareAndSwap (5,534,807,999 samples, 0.14%)</title><rect x="223.6" y="1541" width="1.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="226.61" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,502,633,057 samples, 0.09%)</title><rect x="951.8" y="1461" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="954.84" y="1471.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (671,779,995 samples, 0.02%)</title><rect x="347.0" y="1509" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="350.02" y="1519.5" ></text>
</g>
<g >
<title>CompareAndSwap (138,233,471,716 samples, 3.43%)</title><rect x="276.5" y="1525" width="40.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="279.54" y="1535.5" >Com..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1429" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="1439.5" ></text>
</g>
<g >
<title>__alloc_pages (13,397,599,413 samples, 0.33%)</title><rect x="803.8" y="1189" width="3.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="806.79" y="1199.5" ></text>
</g>
<g >
<title>i_callback (955,695,565 samples, 0.02%)</title><rect x="1159.3" y="1253" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1162.26" y="1263.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (375,224,779 samples, 0.01%)</title><rect x="55.1" y="1333" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="58.06" y="1343.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (588,254,509 samples, 0.01%)</title><rect x="1063.4" y="1301" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1066.38" y="1311.5" ></text>
</g>
<g >
<title>xas_descend (1,765,725,516 samples, 0.04%)</title><rect x="820.1" y="1205" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="823.12" y="1215.5" ></text>
</g>
<g >
<title>release_sock (369,634,339 samples, 0.01%)</title><rect x="786.2" y="1317" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="789.23" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (3,206,423,433 samples, 0.08%)</title><rect x="916.3" y="1189" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="919.26" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (343,030,828 samples, 0.01%)</title><rect x="1017.0" y="1461" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1019.95" y="1471.5" ></text>
</g>
<g >
<title>accept (616,541,806,808 samples, 15.28%)</title><rect x="763.5" y="1429" width="180.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="766.51" y="1439.5" >accept</text>
</g>
<g >
<title>discard_slab (350,497,186 samples, 0.01%)</title><rect x="1049.1" y="1237" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1052.11" y="1247.5" ></text>
</g>
<g >
<title>rcu_core_si (415,658,130 samples, 0.01%)</title><rect x="767.7" y="1333" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="770.70" y="1343.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get_mut (521,071,599 samples, 0.01%)</title><rect x="991.4" y="1557" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="994.36" y="1567.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (6,189,779,741 samples, 0.15%)</title><rect x="55.0" y="1493" width="1.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="57.97" y="1503.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (950,478,216 samples, 0.02%)</title><rect x="58.3" y="1189" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="61.26" y="1199.5" ></text>
</g>
<g >
<title>NaClSysSelect (1,700,969,732,876 samples, 42.16%)</title><rect x="454.1" y="1525" width="497.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="457.14" y="1535.5" >NaClSysSelect</text>
</g>
<g >
<title>[libc.so.6] (494,277,305 samples, 0.01%)</title><rect x="14.2" y="1461" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.16" y="1471.5" ></text>
</g>
<g >
<title>memcpy@plt (1,036,770,782 samples, 0.03%)</title><rect x="404.6" y="1509" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="407.65" y="1519.5" ></text>
</g>
<g >
<title>exec_mmap (5,158,385,664 samples, 0.13%)</title><rect x="1029.0" y="1413" width="1.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1032.02" y="1423.5" ></text>
</g>
<g >
<title>ls (108,072,633,630 samples, 2.68%)</title><rect x="16.2" y="1589" width="31.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="19.24" y="1599.5" >ls</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,346,444,906 samples, 0.06%)</title><rect x="946.2" y="1381" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="949.24" y="1391.5" ></text>
</g>
<g >
<title>dup_mmap (636,428,717 samples, 0.02%)</title><rect x="1168.6" y="1461" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1171.60" y="1471.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (6,059,218,069 samples, 0.15%)</title><rect x="835.4" y="1237" width="1.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="838.38" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (691,199,425 samples, 0.02%)</title><rect x="51.5" y="437" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.45" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (7,696,427,295 samples, 0.19%)</title><rect x="949.4" y="1397" width="2.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="952.41" y="1407.5" ></text>
</g>
<g >
<title>_start (4,239,235,233 samples, 0.11%)</title><rect x="1015.8" y="1573" width="1.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1018.81" y="1583.5" ></text>
</g>
<g >
<title>do_idle (2,832,128,846 samples, 0.07%)</title><rect x="60.1" y="1525" width="0.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="63.08" y="1535.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (3,011,525,819 samples, 0.07%)</title><rect x="28.5" y="1317" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="31.49" y="1327.5" ></text>
</g>
<g >
<title>i_callback (17,017,723,748 samples, 0.42%)</title><rect x="1051.5" y="1317" width="5.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1054.49" y="1327.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (410,806,737 samples, 0.01%)</title><rect x="13.8" y="1509" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="16.82" y="1519.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (490,036,736 samples, 0.01%)</title><rect x="847.8" y="1221" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="850.83" y="1231.5" ></text>
</g>
<g >
<title>dequeue_entity (382,505,159 samples, 0.01%)</title><rect x="598.5" y="1253" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="601.49" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1157" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1167.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (1,208,416,057 samples, 0.03%)</title><rect x="725.7" y="1253" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="728.73" y="1263.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (850,281,983 samples, 0.02%)</title><rect x="644.4" y="1381" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="647.36" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="645" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="655.5" ></text>
</g>
<g >
<title>__destroy_inode (21,482,428,336 samples, 0.53%)</title><rect x="917.8" y="1189" width="6.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="920.78" y="1199.5" ></text>
</g>
<g >
<title>sock_free_inode (574,343,079 samples, 0.01%)</title><rect x="570.5" y="1269" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="573.51" y="1279.5" ></text>
</g>
<g >
<title>read_tsc (1,378,711,654 samples, 0.03%)</title><rect x="1155.3" y="1493" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1158.28" y="1503.5" ></text>
</g>
<g >
<title>d_flags_for_inode (750,054,337 samples, 0.02%)</title><rect x="865.1" y="1269" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="868.11" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="549" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="559.5" ></text>
</g>
<g >
<title>execute_command_internal (2,838,965,786 samples, 0.07%)</title><rect x="1016.1" y="1429" width="0.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1019.07" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (343,030,828 samples, 0.01%)</title><rect x="1017.0" y="1477" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1019.95" y="1487.5" ></text>
</g>
<g >
<title>mod_memcg_state (417,517,334 samples, 0.01%)</title><rect x="862.9" y="1205" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="865.89" y="1215.5" ></text>
</g>
<g >
<title>module_put (437,071,130 samples, 0.01%)</title><rect x="940.2" y="1269" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="943.17" y="1279.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1,457,862,513 samples, 0.04%)</title><rect x="842.1" y="1253" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="845.14" y="1263.5" ></text>
</g>
<g >
<title>journal-offline (759,210,677 samples, 0.02%)</title><rect x="14.7" y="1589" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="17.68" y="1599.5" ></text>
</g>
<g >
<title>task_work_add (3,674,204,033 samples, 0.09%)</title><rect x="778.7" y="1317" width="1.1" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="781.70" y="1327.5" ></text>
</g>
<g >
<title>map_id_range_down (624,824,889 samples, 0.02%)</title><rect x="796.3" y="1269" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="799.29" y="1279.5" ></text>
</g>
<g >
<title>start_kernel (26,854,647,561 samples, 0.67%)</title><rect x="1158.2" y="1525" width="7.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1161.23" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1253" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="1263.5" ></text>
</g>
<g >
<title>sched_clock (2,442,845,633 samples, 0.06%)</title><rect x="567.1" y="1269" width="0.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="570.10" y="1279.5" ></text>
</g>
<g >
<title>kmem_cache_free (3,008,113,037 samples, 0.07%)</title><rect x="1110.9" y="1269" width="0.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1113.92" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1077" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1087.5" ></text>
</g>
<g >
<title>__calc_delta (2,297,066,067 samples, 0.06%)</title><rect x="563.7" y="1253" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="566.71" y="1263.5" ></text>
</g>
<g >
<title>ip_finish_output (719,899,835 samples, 0.02%)</title><rect x="952.5" y="1237" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="955.54" y="1247.5" ></text>
</g>
<g >
<title>read_tsc (357,518,673 samples, 0.01%)</title><rect x="45.6" y="1493" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="48.62" y="1503.5" ></text>
</g>
<g >
<title>__get_random_u32_below (524,471,638 samples, 0.01%)</title><rect x="808.7" y="1189" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="811.70" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="805" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="815.5" ></text>
</g>
<g >
<title>d_instantiate (14,404,296,749 samples, 0.36%)</title><rect x="864.1" y="1301" width="4.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="867.05" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1285" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1295.5" ></text>
</g>
<g >
<title>psi_task_switch (18,000,872,398 samples, 0.45%)</title><rect x="616.8" y="1269" width="5.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="619.77" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="245" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="255.5" ></text>
</g>
<g >
<title>tcp_get_idx (348,512,726 samples, 0.01%)</title><rect x="54.7" y="1333" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="57.67" y="1343.5" ></text>
</g>
<g >
<title>i_callback (2,797,479,110 samples, 0.07%)</title><rect x="27.3" y="1317" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="30.30" y="1327.5" ></text>
</g>
<g >
<title>[[heap]] (535,912,360 samples, 0.01%)</title><rect x="10.9" y="1573" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.89" y="1583.5" ></text>
</g>
<g >
<title>rcu_core (415,658,130 samples, 0.01%)</title><rect x="767.7" y="1317" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="770.70" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,314,752,767 samples, 0.08%)</title><rect x="51.4" y="1381" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.38" y="1391.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (466,646,037 samples, 0.01%)</title><rect x="61.7" y="1573" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="64.70" y="1583.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (613,607,171 samples, 0.02%)</title><rect x="676.6" y="1333" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="679.56" y="1343.5" ></text>
</g>
<g >
<title>inode_free_by_rcu (517,462,986 samples, 0.01%)</title><rect x="1159.5" y="1253" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1162.54" y="1263.5" ></text>
</g>
<g >
<title>i_callback (536,000,620 samples, 0.01%)</title><rect x="38.2" y="1301" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="41.22" y="1311.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (574,433,812 samples, 0.01%)</title><rect x="60.1" y="1445" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="63.12" y="1455.5" ></text>
</g>
<g >
<title>security_file_alloc (18,716,681,429 samples, 0.46%)</title><rect x="831.8" y="1253" width="5.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="834.83" y="1263.5" ></text>
</g>
<g >
<title>update_rq_clock (389,090,003 samples, 0.01%)</title><rect x="568.1" y="1317" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="571.09" y="1327.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (1,398,187,690 samples, 0.03%)</title><rect x="815.3" y="1221" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="818.31" y="1231.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (3,228,497,169 samples, 0.08%)</title><rect x="256.5" y="1525" width="0.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="259.50" y="1535.5" ></text>
</g>
<g >
<title>update_min_vruntime (614,153,857 samples, 0.02%)</title><rect x="608.7" y="1237" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="611.67" y="1247.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1,722,685,630 samples, 0.04%)</title><rect x="1134.3" y="1445" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1137.33" y="1455.5" ></text>
</g>
<g >
<title>expand_string_assignment (645,358,466 samples, 0.02%)</title><rect x="1016.7" y="1333" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1019.71" y="1343.5" ></text>
</g>
<g >
<title>cpu_startup_entry (713,633,585 samples, 0.02%)</title><rect x="59.2" y="1541" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="62.16" y="1551.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (4,379,618,753 samples, 0.11%)</title><rect x="948.1" y="1429" width="1.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="951.09" y="1439.5" ></text>
</g>
<g >
<title>create_empty_buffers (407,511,471 samples, 0.01%)</title><rect x="58.0" y="1205" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="60.96" y="1215.5" ></text>
</g>
<g >
<title>rcu_core (407,517,656 samples, 0.01%)</title><rect x="749.6" y="1221" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="752.58" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1013" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1023.5" ></text>
</g>
<g >
<title>seq_read_iter (408,811,652 samples, 0.01%)</title><rect x="61.6" y="1493" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="64.56" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1045" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1461" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1471.5" ></text>
</g>
<g >
<title>[[vdso]] (90,303,070,698 samples, 2.24%)</title><rect x="355.7" y="1461" width="26.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="358.72" y="1471.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,059,599,118 samples, 0.08%)</title><rect x="51.4" y="1317" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.39" y="1327.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (915,424,750 samples, 0.02%)</title><rect x="612.7" y="1205" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="615.70" y="1215.5" ></text>
</g>
<g >
<title>__slab_free (712,668,811 samples, 0.02%)</title><rect x="1033.2" y="1397" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1036.25" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="997" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1007.5" ></text>
</g>
<g >
<title>pick_next_entity (3,654,123,483 samples, 0.09%)</title><rect x="669.9" y="1301" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="672.92" y="1311.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (2,327,855,954 samples, 0.06%)</title><rect x="453.4" y="1461" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="456.44" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1013" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1023.5" ></text>
</g>
<g >
<title>irq_exit_rcu (921,511,266 samples, 0.02%)</title><rect x="46.5" y="1349" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="49.52" y="1359.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (4,447,488,758 samples, 0.11%)</title><rect x="48.6" y="1525" width="1.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="51.65" y="1535.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (446,185,456 samples, 0.01%)</title><rect x="576.4" y="1397" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="579.44" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="709" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,028,324,675 samples, 0.03%)</title><rect x="53.3" y="69" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="79.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (471,089,757 samples, 0.01%)</title><rect x="1168.4" y="1573" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1171.39" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="309" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="319.5" ></text>
</g>
<g >
<title>record_times (793,851,631 samples, 0.02%)</title><rect x="621.0" y="1253" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="623.99" y="1263.5" ></text>
</g>
<g >
<title>exec_mmap (718,590,795 samples, 0.02%)</title><rect x="1168.8" y="1413" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1171.80" y="1423.5" ></text>
</g>
<g >
<title>sock_alloc (122,133,595,874 samples, 3.03%)</title><rect x="787.8" y="1333" width="35.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="790.79" y="1343.5" >soc..</text>
</g>
<g >
<title>[libc.so.6] (461,858,078 samples, 0.01%)</title><rect x="14.2" y="1445" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.16" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (543,609,144 samples, 0.01%)</title><rect x="915.7" y="1205" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="918.65" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1045" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="1055.5" ></text>
</g>
<g >
<title>cache_from_obj (852,930,936 samples, 0.02%)</title><rect x="1054.5" y="1269" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1057.45" y="1279.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (680,475,252 samples, 0.02%)</title><rect x="14.7" y="1573" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="17.71" y="1583.5" ></text>
</g>
<g >
<title>node::PerIsolatePlatformData::FlushForegroundTasksInternal (509,936,867 samples, 0.01%)</title><rect x="53.9" y="1525" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="56.89" y="1535.5" ></text>
</g>
<g >
<title>cpu_startup_entry (637,574,114 samples, 0.02%)</title><rect x="14.7" y="1541" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="17.71" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1,836,403,277 samples, 0.05%)</title><rect x="50.3" y="1413" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="53.32" y="1423.5" ></text>
</g>
<g >
<title>update_rq_clock (3,848,360,329 samples, 0.10%)</title><rect x="566.7" y="1301" width="1.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="569.71" y="1311.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (360,640,880 samples, 0.01%)</title><rect x="837.2" y="1237" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="840.15" y="1247.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (1,148,760,625 samples, 0.03%)</title><rect x="1189.5" y="1285" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1192.45" y="1295.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (1,291,338,210 samples, 0.03%)</title><rect x="840.7" y="1173" width="0.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="843.67" y="1183.5" ></text>
</g>
<g >
<title>search_binary_handler (459,769,403 samples, 0.01%)</title><rect x="1017.1" y="1461" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1020.11" y="1471.5" ></text>
</g>
<g >
<title>NaClLog (27,158,124,182 samples, 0.67%)</title><rect x="318.0" y="1541" width="7.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="320.97" y="1551.5" ></text>
</g>
<g >
<title>__do_softirq (10,941,188,435 samples, 0.27%)</title><rect x="1170.6" y="1381" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1173.63" y="1391.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (828,722,619 samples, 0.02%)</title><rect x="761.7" y="1381" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="764.74" y="1391.5" ></text>
</g>
<g >
<title>rcu_do_batch (12,899,724,742 samples, 0.32%)</title><rect x="25.6" y="1333" width="3.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="28.61" y="1343.5" ></text>
</g>
<g >
<title>all (4,034,266,822,951 samples, 100%)</title><rect x="10.0" y="1605" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" ></text>
</g>
<g >
<title>pool-gsd-color (1,112,230,685 samples, 0.03%)</title><rect x="58.7" y="1589" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="61.75" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="917" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="927.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (2,924,385,295 samples, 0.07%)</title><rect x="952.0" y="1365" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="954.98" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="533" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="543.5" ></text>
</g>
<g >
<title>__schedule (3,171,830,079 samples, 0.08%)</title><rect x="1164.7" y="1429" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1167.75" y="1439.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (419,882,366 samples, 0.01%)</title><rect x="767.7" y="1397" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="770.70" y="1407.5" ></text>
</g>
<g >
<title>make_kuid (2,374,247,639 samples, 0.06%)</title><rect x="795.6" y="1269" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="798.60" y="1279.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (350,190,030 samples, 0.01%)</title><rect x="811.8" y="1253" width="0.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="814.84" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="949" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="959.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (45,516,813,981 samples, 1.13%)</title><rect x="25.3" y="1461" width="13.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="28.28" y="1471.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (476,378,103 samples, 0.01%)</title><rect x="1172.6" y="1269" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1175.64" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="213" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="469" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="479.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (445,723,427 samples, 0.01%)</title><rect x="24.4" y="1429" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="27.39" y="1439.5" ></text>
</g>
<g >
<title>filemap_alloc_folio (400,151,017 samples, 0.01%)</title><rect x="57.8" y="1205" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="60.81" y="1215.5" ></text>
</g>
<g >
<title>file_free_rcu (700,337,813 samples, 0.02%)</title><rect x="570.3" y="1285" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="573.29" y="1295.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7,069,713,575 samples, 0.18%)</title><rect x="500.0" y="1413" width="2.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="503.05" y="1423.5" ></text>
</g>
<g >
<title>update_min_vruntime (1,495,361,806 samples, 0.04%)</title><rect x="607.6" y="1221" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="610.60" y="1231.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (605,507,987 samples, 0.02%)</title><rect x="894.2" y="1333" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="897.23" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1205" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (365,215,872 samples, 0.01%)</title><rect x="52.7" y="149" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="159.5" ></text>
</g>
<g >
<title>__sys_recvfrom (1,832,513,268 samples, 0.05%)</title><rect x="947.3" y="1349" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="950.26" y="1359.5" ></text>
</g>
<g >
<title>__slab_free (5,745,399,032 samples, 0.14%)</title><rect x="1048.2" y="1285" width="1.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1051.17" y="1295.5" ></text>
</g>
<g >
<title>read (1,984,684,369 samples, 0.05%)</title><rect x="1189.3" y="1461" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1192.30" y="1471.5" ></text>
</g>
<g >
<title>page_remove_rmap (652,814,815 samples, 0.02%)</title><rect x="1030.1" y="1269" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1033.09" y="1279.5" ></text>
</g>
<g >
<title>[ls] (706,927,200 samples, 0.02%)</title><rect x="18.2" y="1477" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.20" y="1487.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1,621,081,330 samples, 0.04%)</title><rect x="382.1" y="1461" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="385.14" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (497,682,679 samples, 0.01%)</title><rect x="10.9" y="1557" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.89" y="1567.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (2,051,980,436 samples, 0.05%)</title><rect x="50.3" y="1557" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="53.32" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (789,551,699 samples, 0.02%)</title><rect x="1015.3" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1018.27" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1541" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="1551.5" ></text>
</g>
<g >
<title>inet_recvmsg (1,705,160,964 samples, 0.04%)</title><rect x="1189.4" y="1333" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1192.37" y="1343.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (565,292,114 samples, 0.01%)</title><rect x="1168.8" y="1301" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1171.84" y="1311.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (5,630,528,681 samples, 0.14%)</title><rect x="821.2" y="1237" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="824.16" y="1247.5" ></text>
</g>
<g >
<title>rcu_core_si (698,025,969 samples, 0.02%)</title><rect x="1188.0" y="1301" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1191.03" y="1311.5" ></text>
</g>
<g >
<title>pick_next_task_fair (9,119,809,818 samples, 0.23%)</title><rect x="1143.4" y="1461" width="2.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1146.42" y="1471.5" ></text>
</g>
<g >
<title>path_lookupat (381,795,392 samples, 0.01%)</title><rect x="52.4" y="1381" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="55.40" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1221" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1231.5" ></text>
</g>
<g >
<title>__mmput (5,158,385,664 samples, 0.13%)</title><rect x="1029.0" y="1381" width="1.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1032.02" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (751,708,119 samples, 0.02%)</title><rect x="946.0" y="1381" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="949.03" y="1391.5" ></text>
</g>
<g >
<title>refill_obj_stock (446,687,212 samples, 0.01%)</title><rect x="1172.6" y="1253" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1175.65" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_execve (5,500,136,331 samples, 0.14%)</title><rect x="1029.0" y="1541" width="1.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1032.01" y="1551.5" ></text>
</g>
<g >
<title>search_binary_handler (558,738,032 samples, 0.01%)</title><rect x="23.3" y="1461" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="26.30" y="1471.5" ></text>
</g>
<g >
<title>mod_objcg_state (361,970,523 samples, 0.01%)</title><rect x="848.0" y="1253" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="850.97" y="1263.5" ></text>
</g>
<g >
<title>xa_load (3,878,250,009 samples, 0.10%)</title><rect x="861.1" y="1221" width="1.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="864.10" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (81,464,921,390 samples, 2.02%)</title><rect x="738.5" y="1397" width="23.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="741.46" y="1407.5" >e..</text>
</g>
<g >
<title>vfs_statx (502,012,682 samples, 0.01%)</title><rect x="52.4" y="1413" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="55.40" y="1423.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (12,651,825,235 samples, 0.31%)</title><rect x="1031.0" y="1573" width="3.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1033.99" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,929,031,601 samples, 0.05%)</title><rect x="1189.3" y="1429" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.32" y="1439.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (29,267,613,961 samples, 0.73%)</title><rect x="383.2" y="1493" width="8.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="386.20" y="1503.5" ></text>
</g>
<g >
<title>[bash] (645,358,466 samples, 0.02%)</title><rect x="1016.7" y="1365" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1019.71" y="1375.5" ></text>
</g>
<g >
<title>begin_current_label_crit_section (1,815,330,778 samples, 0.04%)</title><rect x="834.7" y="1221" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="837.67" y="1231.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (4,813,106,758 samples, 0.12%)</title><rect x="51.2" y="1541" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="54.21" y="1551.5" ></text>
</g>
<g >
<title>rcu_core_si (13,114,288,477 samples, 0.33%)</title><rect x="25.5" y="1365" width="3.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="28.55" y="1375.5" ></text>
</g>
<g >
<title>runc:[2:INIT] (2,800,254,277 samples, 0.07%)</title><rect x="61.0" y="1589" width="0.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="64.02" y="1599.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (715,662,332 samples, 0.02%)</title><rect x="943.1" y="1397" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="946.12" y="1407.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (591,621,921 samples, 0.01%)</title><rect x="803.5" y="1237" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="806.51" y="1247.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (557,971,400 samples, 0.01%)</title><rect x="952.5" y="1141" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="955.55" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="693" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="703.5" ></text>
</g>
<g >
<title>ksys_read (2,176,369,729 samples, 0.05%)</title><rect x="453.5" y="1317" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="456.46" y="1327.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (626,910,050 samples, 0.02%)</title><rect x="58.4" y="1173" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="61.35" y="1183.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (395,295,618 samples, 0.01%)</title><rect x="923.9" y="1141" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="926.95" y="1151.5" ></text>
</g>
<g >
<title>__do_softirq (2,260,281,972 samples, 0.06%)</title><rect x="23.9" y="1493" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="26.88" y="1503.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (549,536,218 samples, 0.01%)</title><rect x="58.1" y="1205" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="61.08" y="1215.5" ></text>
</g>
<g >
<title>unmap_vmas (578,396,883 samples, 0.01%)</title><rect x="1168.8" y="1349" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1171.84" y="1359.5" ></text>
</g>
<g >
<title>[ls] (1,513,657,581 samples, 0.04%)</title><rect x="18.2" y="1493" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.19" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,421,979,779 samples, 0.18%)</title><rect x="1023.7" y="1557" width="2.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1026.68" y="1567.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (394,942,160 samples, 0.01%)</title><rect x="831.6" y="1253" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="834.63" y="1263.5" ></text>
</g>
<g >
<title>release_pages (656,059,083 samples, 0.02%)</title><rect x="56.4" y="1221" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="59.41" y="1231.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,985,415,976 samples, 0.05%)</title><rect x="560.1" y="1301" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="563.10" y="1311.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (376,786,012 samples, 0.01%)</title><rect x="818.7" y="1221" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="821.71" y="1231.5" ></text>
</g>
<g >
<title>evict (58,077,329,525 samples, 1.44%)</title><rect x="914.0" y="1221" width="17.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="916.99" y="1231.5" ></text>
</g>
<g >
<title>[perf-759537.map] (25,321,144,393 samples, 0.63%)</title><rect x="177.6" y="1573" width="7.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="180.59" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (463,304,322 samples, 0.01%)</title><rect x="16.9" y="1557" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="19.90" y="1567.5" ></text>
</g>
<g >
<title>ttwu_do_activate (362,538,008 samples, 0.01%)</title><rect x="47.5" y="1397" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="50.46" y="1407.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (21,924,493,994 samples, 0.54%)</title><rect x="326.9" y="1541" width="6.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="329.91" y="1551.5" ></text>
</g>
<g >
<title>sock_alloc_inode (487,716,768 samples, 0.01%)</title><rect x="823.4" y="1301" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="826.37" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,186,450,582 samples, 0.05%)</title><rect x="15.1" y="1477" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="18.12" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1125" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1135.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (67,489,913,888 samples, 1.67%)</title><rect x="1117.9" y="1509" width="19.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1120.92" y="1519.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (507,763,383 samples, 0.01%)</title><rect x="404.9" y="1525" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="407.95" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1221" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (3,962,665,430 samples, 0.10%)</title><rect x="698.4" y="1413" width="1.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="701.44" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,912,828,395 samples, 0.05%)</title><rect x="1018.5" y="1477" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1021.49" y="1487.5" ></text>
</g>
<g >
<title>readlink (464,342,127 samples, 0.01%)</title><rect x="18.7" y="1493" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="21.68" y="1503.5" ></text>
</g>
<g >
<title>shuffle_freelist (617,034,914 samples, 0.02%)</title><rect x="800.5" y="1189" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="803.51" y="1199.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1,595,862,208 samples, 0.04%)</title><rect x="453.5" y="1173" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="456.54" y="1183.5" ></text>
</g>
<g >
<title>rb_insert_color (388,223,681 samples, 0.01%)</title><rect x="1129.2" y="1413" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1132.24" y="1423.5" ></text>
</g>
<g >
<title>poll_idle (520,978,171 samples, 0.01%)</title><rect x="60.5" y="1445" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="63.51" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,059,599,118 samples, 0.08%)</title><rect x="51.4" y="1333" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.39" y="1343.5" ></text>
</g>
<g >
<title>__init_waitqueue_head (395,101,766 samples, 0.01%)</title><rect x="793.6" y="1285" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="796.62" y="1295.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,398,136,553 samples, 0.06%)</title><rect x="1188.0" y="1445" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1191.01" y="1455.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (3,309,683,998 samples, 0.08%)</title><rect x="1163.5" y="1413" width="1.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1166.54" y="1423.5" ></text>
</g>
<g >
<title>do_writepages (615,814,246 samples, 0.02%)</title><rect x="1034.5" y="1397" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1037.49" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="197" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="207.5" ></text>
</g>
<g >
<title>__switch_to (3,364,430,974 samples, 0.08%)</title><rect x="573.0" y="1397" width="1.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="575.97" y="1407.5" ></text>
</g>
<g >
<title>execute_command_internal (3,701,190,707 samples, 0.09%)</title><rect x="1015.8" y="1477" width="1.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1018.82" y="1487.5" ></text>
</g>
<g >
<title>rcu_do_batch (419,345,631 samples, 0.01%)</title><rect x="576.4" y="1285" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="579.44" y="1295.5" ></text>
</g>
<g >
<title>rest_init (26,854,647,561 samples, 0.67%)</title><rect x="1158.2" y="1493" width="7.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1161.23" y="1503.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (1,064,958,741 samples, 0.03%)</title><rect x="927.7" y="1189" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="930.66" y="1199.5" ></text>
</g>
<g >
<title>NaCl_trampoline_code_end (2,649,942,247 samples, 0.07%)</title><rect x="392.8" y="1493" width="0.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="395.84" y="1503.5" ></text>
</g>
<g >
<title>do_idle (854,734,568 samples, 0.02%)</title><rect x="58.8" y="1525" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="61.81" y="1535.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2,033,072,931 samples, 0.05%)</title><rect x="849.4" y="1269" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="852.42" y="1279.5" ></text>
</g>
<g >
<title>_compound_head (1,430,281,357 samples, 0.04%)</title><rect x="1029.4" y="1285" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1032.44" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,789,504,514 samples, 0.07%)</title><rect x="18.8" y="1477" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.83" y="1487.5" ></text>
</g>
<g >
<title>update_load_avg (485,632,663 samples, 0.01%)</title><rect x="1186.0" y="1429" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1188.98" y="1439.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (73,950,062,694 samples, 1.83%)</title><rect x="909.6" y="1253" width="21.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="912.57" y="1263.5" >d..</text>
</g>
<g >
<title>[unknown] (440,810,348 samples, 0.01%)</title><rect x="14.4" y="1573" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.44" y="1583.5" ></text>
</g>
<g >
<title>cfree (596,559,480 samples, 0.01%)</title><rect x="52.9" y="53" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="55.93" y="63.5" ></text>
</g>
<g >
<title>search_binary_handler (743,140,052 samples, 0.02%)</title><rect x="1168.8" y="1461" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1171.80" y="1471.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2,645,767,062 samples, 0.07%)</title><rect x="621.3" y="1253" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="624.26" y="1263.5" ></text>
</g>
<g >
<title>begin_new_exec (6,189,779,741 samples, 0.15%)</title><rect x="55.0" y="1429" width="1.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="57.97" y="1439.5" ></text>
</g>
<g >
<title>bit_waitqueue (476,964,064 samples, 0.01%)</title><rect x="928.0" y="1189" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="931.01" y="1199.5" ></text>
</g>
<g >
<title>rcu_core_si (852,386,876 samples, 0.02%)</title><rect x="46.5" y="1301" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="49.53" y="1311.5" ></text>
</g>
<g >
<title>wake_up_q (44,602,122,850 samples, 1.11%)</title><rect x="713.2" y="1333" width="13.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="716.18" y="1343.5" ></text>
</g>
<g >
<title>unmap_page_range (4,896,029,405 samples, 0.12%)</title><rect x="55.4" y="1317" width="1.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="58.35" y="1327.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (558,635,256 samples, 0.01%)</title><rect x="1034.5" y="1349" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1037.49" y="1359.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (738,234,592 samples, 0.02%)</title><rect x="1030.3" y="1269" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1033.28" y="1279.5" ></text>
</g>
<g >
<title>v8::internal::ScavengeJob::Task::RunInternal (509,936,867 samples, 0.01%)</title><rect x="53.9" y="1477" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="56.89" y="1487.5" ></text>
</g>
<g >
<title>rcu_do_batch (1,953,881,449 samples, 0.05%)</title><rect x="570.3" y="1301" width="0.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="573.26" y="1311.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,489,759,917 samples, 0.04%)</title><rect x="685.3" y="1429" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="688.35" y="1439.5" ></text>
</g>
<g >
<title>poll_idle (480,207,860 samples, 0.01%)</title><rect x="15.6" y="1445" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="18.62" y="1455.5" ></text>
</g>
<g >
<title>alloc_pages (395,982,104 samples, 0.01%)</title><rect x="57.8" y="1173" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="60.81" y="1183.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (384,695,392 samples, 0.01%)</title><rect x="903.1" y="1269" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="906.14" y="1279.5" ></text>
</g>
<g >
<title>gettimeofday@plt (1,967,428,757 samples, 0.05%)</title><rect x="449.8" y="1493" width="0.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="452.80" y="1503.5" ></text>
</g>
<g >
<title>__update_load_avg_se (585,091,738 samples, 0.01%)</title><rect x="41.3" y="1381" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="44.32" y="1391.5" ></text>
</g>
<g >
<title>rcu_core (698,025,969 samples, 0.02%)</title><rect x="1188.0" y="1285" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1191.03" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (40,754,958,919 samples, 1.01%)</title><rect x="556.5" y="1365" width="12.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="559.54" y="1375.5" ></text>
</g>
<g >
<title>file_free_rcu (393,874,445 samples, 0.01%)</title><rect x="612.7" y="1125" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="615.72" y="1135.5" ></text>
</g>
<g >
<title>execute_command_internal (645,358,466 samples, 0.02%)</title><rect x="1016.7" y="1397" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1019.71" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,201,142,111 samples, 0.05%)</title><rect x="453.5" y="1365" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="456.45" y="1375.5" ></text>
</g>
<g >
<title>alloc_fd (6,558,096,221 samples, 0.16%)</title><rect x="880.8" y="1333" width="1.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="883.79" y="1343.5" ></text>
</g>
<g >
<title>local_clock_noinstr (462,265,614 samples, 0.01%)</title><rect x="35.0" y="1445" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="38.04" y="1455.5" ></text>
</g>
<g >
<title>tcp_rcv_established (401,551,209 samples, 0.01%)</title><rect x="951.9" y="1317" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="954.85" y="1327.5" ></text>
</g>
<g >
<title>enqueue_task_fair (27,593,310,706 samples, 0.68%)</title><rect x="1121.7" y="1429" width="8.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1124.69" y="1439.5" ></text>
</g>
<g >
<title>__slab_free (6,109,794,428 samples, 0.15%)</title><rect x="1052.7" y="1269" width="1.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1055.66" y="1279.5" ></text>
</g>
<g >
<title>put_cpu_partial (828,794,797 samples, 0.02%)</title><rect x="1053.6" y="1253" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1056.56" y="1263.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (885,476,646 samples, 0.02%)</title><rect x="952.0" y="1349" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="955.02" y="1359.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1,170,083,471 samples, 0.03%)</title><rect x="884.8" y="1381" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="887.83" y="1391.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (1,659,984,425 samples, 0.04%)</title><rect x="1116.9" y="1461" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1119.86" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="997" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="1007.5" ></text>
</g>
<g >
<title>alloc_empty_file (439,689,765 samples, 0.01%)</title><rect x="825.7" y="1301" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="828.66" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="405" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="415.5" ></text>
</g>
<g >
<title>futex_hash (2,316,119,254 samples, 0.06%)</title><rect x="701.1" y="1349" width="0.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="704.13" y="1359.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (961,374,756 samples, 0.02%)</title><rect x="612.7" y="1237" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="615.69" y="1247.5" ></text>
</g>
<g >
<title>call_cpuidle (431,082,287 samples, 0.01%)</title><rect x="58.8" y="1493" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="61.82" y="1503.5" ></text>
</g>
<g >
<title>do_idle (4,646,023,138 samples, 0.12%)</title><rect x="46.5" y="1461" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="49.47" y="1471.5" ></text>
</g>
<g >
<title>do_readlinkat (454,711,787 samples, 0.01%)</title><rect x="18.7" y="1429" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="21.68" y="1439.5" ></text>
</g>
<g >
<title>sock_recvmsg (1,721,609,438 samples, 0.04%)</title><rect x="1189.4" y="1349" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1192.37" y="1359.5" ></text>
</g>
<g >
<title>prepare_task_switch (462,005,692 samples, 0.01%)</title><rect x="1186.2" y="1477" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1189.15" y="1487.5" ></text>
</g>
<g >
<title>cache_from_obj (348,705,533 samples, 0.01%)</title><rect x="1058.4" y="1285" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1061.36" y="1295.5" ></text>
</g>
<g >
<title>save_fpregs_to_fpstate (944,794,505 samples, 0.02%)</title><rect x="647.2" y="1397" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="650.23" y="1407.5" ></text>
</g>
<g >
<title>__rcu_read_lock (629,535,586 samples, 0.02%)</title><rect x="860.3" y="1221" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="863.29" y="1231.5" ></text>
</g>
<g >
<title>__poll (404,398,272 samples, 0.01%)</title><rect x="56.9" y="1525" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="59.86" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (464,342,127 samples, 0.01%)</title><rect x="18.7" y="1461" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="21.68" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="341" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="351.5" ></text>
</g>
<g >
<title>begin_new_exec (5,179,482,038 samples, 0.13%)</title><rect x="1029.0" y="1429" width="1.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1032.02" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (564,245,845 samples, 0.01%)</title><rect x="1116.5" y="1461" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1119.50" y="1471.5" ></text>
</g>
<g >
<title>rcu_core_si (1,569,973,886 samples, 0.04%)</title><rect x="1169.3" y="1477" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1172.26" y="1487.5" ></text>
</g>
<g >
<title>ttwu_do_activate (5,746,655,784 samples, 0.14%)</title><rect x="1182.5" y="1461" width="1.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1185.51" y="1471.5" ></text>
</g>
<g >
<title>load_elf_binary (6,189,779,741 samples, 0.15%)</title><rect x="55.0" y="1445" width="1.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="57.97" y="1455.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (385,737,759 samples, 0.01%)</title><rect x="897.0" y="1285" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="899.97" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (592,224,475 samples, 0.01%)</title><rect x="52.4" y="1461" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="55.37" y="1471.5" ></text>
</g>
<g >
<title>file_free_rcu (30,944,206,751 samples, 0.77%)</title><rect x="1042.4" y="1317" width="9.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1045.44" y="1327.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (5,437,496,274 samples, 0.13%)</title><rect x="57.1" y="1301" width="1.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="60.12" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="453" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="463.5" ></text>
</g>
<g >
<title>__xstat64 (616,302,482 samples, 0.02%)</title><rect x="52.4" y="1509" width="0.1" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="55.37" y="1519.5" ></text>
</g>
<g >
<title>__rcu_read_lock (450,369,898 samples, 0.01%)</title><rect x="860.9" y="1221" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="863.86" y="1231.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (364,888,030 samples, 0.01%)</title><rect x="681.0" y="1349" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="684.01" y="1359.5" ></text>
</g>
<g >
<title>__slab_free (803,199,483 samples, 0.02%)</title><rect x="1171.6" y="1285" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1174.61" y="1295.5" ></text>
</g>
<g >
<title>new_slab (5,284,038,958 samples, 0.13%)</title><rect x="840.0" y="1237" width="1.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="843.03" y="1247.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,002,915,230 samples, 0.27%)</title><rect x="1170.6" y="1397" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1173.63" y="1407.5" ></text>
</g>
<g >
<title>___slab_alloc (8,941,779,642 samples, 0.22%)</title><rect x="839.0" y="1253" width="2.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="841.97" y="1263.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (524,095,495 samples, 0.01%)</title><rect x="823.0" y="1269" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="826.03" y="1279.5" ></text>
</g>
<g >
<title>intel_idle (768,440,659 samples, 0.02%)</title><rect x="60.3" y="1445" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="63.28" y="1455.5" ></text>
</g>
<g >
<title>futex_wait_setup (22,321,350,950 samples, 0.55%)</title><rect x="624.3" y="1317" width="6.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="627.29" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,222,318,983 samples, 0.03%)</title><rect x="52.9" y="1525" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.90" y="1535.5" ></text>
</g>
<g >
<title>syscall (263,925,877,795 samples, 6.54%)</title><rect x="571.0" y="1413" width="77.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="573.98" y="1423.5" >syscall</text>
</g>
<g >
<title>uv__io_poll (1,738,694,632 samples, 0.04%)</title><rect x="53.7" y="1557" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="56.72" y="1567.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (626,787,420 samples, 0.02%)</title><rect x="860.1" y="1221" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="863.11" y="1231.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (28,996,057,866 samples, 0.72%)</title><rect x="410.3" y="1509" width="8.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="413.27" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1061" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="1071.5" ></text>
</g>
<g >
<title>rcu_core_si (76,560,987,456 samples, 1.90%)</title><rect x="1040.8" y="1365" width="22.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1043.78" y="1375.5" >r..</text>
</g>
<g >
<title>__x64_sys_write (5,759,637,653 samples, 0.14%)</title><rect x="57.0" y="1397" width="1.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="60.04" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1365" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1375.5" ></text>
</g>
<g >
<title>ret_from_fork (1,967,123,318 samples, 0.05%)</title><rect x="1169.2" y="1557" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1172.24" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_read (2,180,505,692 samples, 0.05%)</title><rect x="453.5" y="1333" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="456.46" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_rq_lock_irqsave (394,963,306 samples, 0.01%)</title><rect x="39.8" y="1461" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="42.81" y="1471.5" ></text>
</g>
<g >
<title>kmem_cache_free (4,685,269,747 samples, 0.12%)</title><rect x="936.0" y="1269" width="1.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="938.96" y="1279.5" ></text>
</g>
<g >
<title>inode_free_by_rcu (937,107,346 samples, 0.02%)</title><rect x="1172.8" y="1317" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1175.82" y="1327.5" ></text>
</g>
<g >
<title>copyin (486,607,665 samples, 0.01%)</title><rect x="952.3" y="1317" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="955.30" y="1327.5" ></text>
</g>
<g >
<title>update_load_avg (560,273,337 samples, 0.01%)</title><rect x="1164.0" y="1333" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1167.00" y="1343.5" ></text>
</g>
<g >
<title>futex_wake (83,484,990,066 samples, 2.07%)</title><rect x="701.8" y="1349" width="24.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="704.81" y="1359.5" >f..</text>
</g>
<g >
<title>__schedule (66,533,251,775 samples, 1.65%)</title><rect x="661.1" y="1349" width="19.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="664.11" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1445" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1189" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1199.5" ></text>
</g>
<g >
<title>[unknown]  (131,166,462,310 samples, 3.25%)</title><rect x="952.9" y="1573" width="38.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="955.86" y="1583.5" >[un..</text>
</g>
<g >
<title>__do_softirq (611,587,889 samples, 0.02%)</title><rect x="13.4" y="1381" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="16.36" y="1391.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4,007,977,998 samples, 0.10%)</title><rect x="1163.5" y="1445" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1166.50" y="1455.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (428,550,421 samples, 0.01%)</title><rect x="952.6" y="1045" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="955.55" y="1055.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (548,647,331 samples, 0.01%)</title><rect x="1017.8" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1020.77" y="1567.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (479,601,478 samples, 0.01%)</title><rect x="560.7" y="1301" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="563.71" y="1311.5" ></text>
</g>
<g >
<title>i_callback (407,680,465 samples, 0.01%)</title><rect x="1142.8" y="1333" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1145.79" y="1343.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1,700,955,527,250 samples, 42.16%)</title><rect x="454.1" y="1477" width="497.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="457.14" y="1487.5" >rustposix::safeposix::dispatcher::dispatcher::{{closure}}</text>
</g>
<g >
<title>rcu_cblist_dequeue (2,027,454,264 samples, 0.05%)</title><rect x="1173.1" y="1317" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1176.14" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (14,187,676,109 samples, 0.35%)</title><rect x="734.3" y="1397" width="4.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="737.31" y="1407.5" ></text>
</g>
<g >
<title>__cmd_record (6,446,826,059 samples, 0.16%)</title><rect x="56.9" y="1557" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.85" y="1567.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (153,722,600,276 samples, 3.81%)</title><rect x="824.0" y="1317" width="45.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="827.00" y="1327.5" >allo..</text>
</g>
<g >
<title>exit_mmap (414,445,128 samples, 0.01%)</title><rect x="1030.6" y="1445" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1033.62" y="1455.5" ></text>
</g>
<g >
<title>rcu_core_si (1,973,359,874 samples, 0.05%)</title><rect x="570.3" y="1333" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="573.26" y="1343.5" ></text>
</g>
<g >
<title>psi_task_change (8,291,065,730 samples, 0.21%)</title><rect x="1129.9" y="1429" width="2.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1132.94" y="1439.5" ></text>
</g>
<g >
<title>__slab_free (1,092,116,933 samples, 0.03%)</title><rect x="1111.8" y="1269" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1114.85" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (94,503,520,471 samples, 2.34%)</title><rect x="699.9" y="1397" width="27.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="702.92" y="1407.5" >d..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (769,022,883 samples, 0.02%)</title><rect x="1017.1" y="1573" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1020.10" y="1583.5" ></text>
</g>
<g >
<title>fput (2,956,497,163 samples, 0.07%)</title><rect x="870.7" y="1349" width="0.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="873.71" y="1359.5" ></text>
</g>
<g >
<title>__switch_to_asm (705,844,041 samples, 0.02%)</title><rect x="22.8" y="1573" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="25.77" y="1583.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,329,418,526 samples, 0.03%)</title><rect x="1111.8" y="1285" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1114.81" y="1295.5" ></text>
</g>
<g >
<title>xfd_validate_state (421,243,304 samples, 0.01%)</title><rect x="644.1" y="1317" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="647.07" y="1327.5" ></text>
</g>
<g >
<title>__memset (1,156,953,411 samples, 0.03%)</title><rect x="796.9" y="1253" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="799.92" y="1263.5" ></text>
</g>
<g >
<title>apparmor_inode_alloc_security (342,120,323 samples, 0.01%)</title><rect x="794.8" y="1269" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="797.77" y="1279.5" ></text>
</g>
<g >
<title>__rcu_read_lock (603,913,766 samples, 0.01%)</title><rect x="859.2" y="1237" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="862.25" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="789" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="799.5" ></text>
</g>
<g >
<title>update_load_avg (979,985,798 samples, 0.02%)</title><rect x="1183.4" y="1397" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1186.40" y="1407.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (46,710,373,107 samples, 1.16%)</title><rect x="850.4" y="1301" width="13.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="853.39" y="1311.5" ></text>
</g>
<g >
<title>rcu_do_batch (472,996,789 samples, 0.01%)</title><rect x="1163.0" y="1253" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1166.03" y="1263.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (343,022,553 samples, 0.01%)</title><rect x="1170.5" y="1397" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1173.52" y="1407.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (2,376,163,330 samples, 0.06%)</title><rect x="1028.2" y="1573" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1031.16" y="1583.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (593,519,592 samples, 0.01%)</title><rect x="57.5" y="1173" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="60.52" y="1183.5" ></text>
</g>
<g >
<title>__slab_free (1,017,374,676 samples, 0.03%)</title><rect x="1111.1" y="1253" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1114.09" y="1263.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (3,129,934,183 samples, 0.08%)</title><rect x="994.6" y="1557" width="0.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="997.59" y="1567.5" ></text>
</g>
<g >
<title>__update_load_avg_se (3,091,397,862 samples, 0.08%)</title><rect x="606.7" y="1205" width="0.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="609.70" y="1215.5" ></text>
</g>
<g >
<title>__x64_sys_clone (657,639,610 samples, 0.02%)</title><rect x="1168.6" y="1541" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1171.59" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (47,699,299,013 samples, 1.18%)</title><rect x="556.0" y="1397" width="13.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="558.98" y="1407.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (5,500,136,331 samples, 0.14%)</title><rect x="1029.0" y="1525" width="1.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1032.01" y="1535.5" ></text>
</g>
<g >
<title>kmem_cache_free (394,885,820 samples, 0.01%)</title><rect x="1181.2" y="1269" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1184.15" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (543,674,588 samples, 0.01%)</title><rect x="51.5" y="405" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.46" y="415.5" ></text>
</g>
<g >
<title>__schedule (47,949,789,027 samples, 1.19%)</title><rect x="1138.7" y="1493" width="14.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1141.65" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,155,123,084 samples, 0.03%)</title><rect x="51.4" y="661" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.43" y="671.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (3,895,442,043 samples, 0.10%)</title><rect x="1029.4" y="1301" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1032.39" y="1311.5" ></text>
</g>
<g >
<title>schedule_idle (7,724,610,950 samples, 0.19%)</title><rect x="1185.0" y="1509" width="2.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1187.96" y="1519.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (5,008,225,928 samples, 0.12%)</title><rect x="637.0" y="1301" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="640.01" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="757" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="767.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (4,832,738,973 samples, 0.12%)</title><rect x="679.1" y="1285" width="1.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="682.10" y="1295.5" ></text>
</g>
<g >
<title>rseq_get_rseq_cs (583,032,205 samples, 0.01%)</title><rect x="638.3" y="1285" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="641.31" y="1295.5" ></text>
</g>
<g >
<title>ip_output (723,368,522 samples, 0.02%)</title><rect x="952.5" y="1253" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="955.54" y="1263.5" ></text>
</g>
<g >
<title>ksys_read (695,470,900 samples, 0.02%)</title><rect x="54.6" y="1429" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="57.57" y="1439.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (8,145,030,503 samples, 0.20%)</title><rect x="187.8" y="1557" width="2.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="190.76" y="1567.5" ></text>
</g>
<g >
<title>exec_binprm (558,738,032 samples, 0.01%)</title><rect x="23.3" y="1477" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="26.30" y="1487.5" ></text>
</g>
<g >
<title>rcu_core (4,874,255,324 samples, 0.12%)</title><rect x="1158.6" y="1285" width="1.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1161.58" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1029" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1039.5" ></text>
</g>
<g >
<title>rcu_core_si (2,219,110,622 samples, 0.06%)</title><rect x="23.9" y="1477" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="26.89" y="1487.5" ></text>
</g>
<g >
<title>kmem_cache_free (14,573,071,697 samples, 0.36%)</title><rect x="905.1" y="1237" width="4.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="908.10" y="1247.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (4,342,163,786 samples, 0.11%)</title><rect x="48.7" y="1477" width="1.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="51.66" y="1487.5" ></text>
</g>
<g >
<title>sched_clock (1,271,154,671 samples, 0.03%)</title><rect x="1132.0" y="1397" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1134.98" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4,350,482,406 samples, 0.11%)</title><rect x="659.1" y="1365" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="662.07" y="1375.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (3,246,498,952 samples, 0.08%)</title><rect x="575.5" y="1397" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="578.49" y="1407.5" ></text>
</g>
<g >
<title>[sleep] (1,912,828,395 samples, 0.05%)</title><rect x="1018.5" y="1525" width="0.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1021.49" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="229" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="239.5" ></text>
</g>
<g >
<title>__update_load_avg_se (443,931,161 samples, 0.01%)</title><rect x="1144.9" y="1429" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1147.88" y="1439.5" ></text>
</g>
<g >
<title>execute_command (959,707,757 samples, 0.02%)</title><rect x="1016.1" y="1301" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1019.07" y="1311.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (840,096,726 samples, 0.02%)</title><rect x="685.0" y="1429" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="687.96" y="1439.5" ></text>
</g>
<g >
<title>copy_present_pte (951,921,433 samples, 0.02%)</title><rect x="49.5" y="1237" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="52.47" y="1247.5" ></text>
</g>
<g >
<title>update_cfs_group (408,884,277 samples, 0.01%)</title><rect x="1129.3" y="1413" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1132.35" y="1423.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2,649,449,813 samples, 0.07%)</title><rect x="1163.6" y="1397" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1166.63" y="1407.5" ></text>
</g>
<g >
<title>memcpy@plt (935,561,254 samples, 0.02%)</title><rect x="391.5" y="1477" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="394.49" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="325" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="335.5" ></text>
</g>
<g >
<title>irq_exit_rcu (459,929,281 samples, 0.01%)</title><rect x="718.1" y="1253" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="721.05" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_execve (487,759,335 samples, 0.01%)</title><rect x="1017.1" y="1541" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1020.11" y="1551.5" ></text>
</g>
<g >
<title>tick_nohz_stop_idle (689,712,784 samples, 0.02%)</title><rect x="46.0" y="1493" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="48.98" y="1503.5" ></text>
</g>
<g >
<title>load_elf_binary (743,140,052 samples, 0.02%)</title><rect x="1168.8" y="1445" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1171.80" y="1455.5" ></text>
</g>
<g >
<title>exec_binprm (743,140,052 samples, 0.02%)</title><rect x="1168.8" y="1477" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1171.80" y="1487.5" ></text>
</g>
<g >
<title>neigh_hh_output (619,810,120 samples, 0.02%)</title><rect x="952.5" y="1189" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="955.54" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (10,239,299,242 samples, 0.25%)</title><rect x="654.0" y="1429" width="3.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="656.97" y="1439.5" ></text>
</g>
<g >
<title>setlocale (343,030,828 samples, 0.01%)</title><rect x="1017.0" y="1493" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1019.95" y="1503.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (2,901,878,051 samples, 0.07%)</title><rect x="57.4" y="1237" width="0.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="60.40" y="1247.5" ></text>
</g>
<g >
<title>sock_free_inode (424,968,624 samples, 0.01%)</title><rect x="685.5" y="1301" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="688.51" y="1311.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (14,247,499,422 samples, 0.35%)</title><rect x="1108.9" y="1381" width="4.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1111.94" y="1391.5" ></text>
</g>
<g >
<title>tick_sched_timer (1,228,186,882 samples, 0.03%)</title><rect x="1040.2" y="1365" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1043.19" y="1375.5" ></text>
</g>
<g >
<title>intel_idle (1,176,006,838 samples, 0.03%)</title><rect x="46.8" y="1381" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="49.82" y="1391.5" ></text>
</g>
<g >
<title>do_futex (167,585,769,288 samples, 4.15%)</title><rect x="582.2" y="1349" width="49.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="585.18" y="1359.5" >do_f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="821" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,028,324,675 samples, 0.03%)</title><rect x="53.3" y="53" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="63.5" ></text>
</g>
<g >
<title>__dentry_kill (94,261,676,401 samples, 2.34%)</title><rect x="903.8" y="1269" width="27.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="906.82" y="1279.5" >_..</text>
</g>
<g >
<title>clock_gettime@plt (2,004,270,037 samples, 0.05%)</title><rect x="382.6" y="1477" width="0.6" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="385.61" y="1487.5" ></text>
</g>
<g >
<title>non-virtual thunk to v8::internal::CancelableTask::Run (509,936,867 samples, 0.01%)</title><rect x="53.9" y="1493" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="56.89" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_free (564,186,197 samples, 0.01%)</title><rect x="570.5" y="1253" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="573.51" y="1263.5" ></text>
</g>
<g >
<title>[ls] (5,237,698,750 samples, 0.13%)</title><rect x="18.1" y="1573" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.13" y="1583.5" ></text>
</g>
<g >
<title>__slab_free (1,007,035,974 samples, 0.02%)</title><rect x="26.7" y="1285" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="29.75" y="1295.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (558,171,740 samples, 0.01%)</title><rect x="639.7" y="1317" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="642.70" y="1327.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (805,782,962 samples, 0.02%)</title><rect x="21.4" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="24.39" y="1567.5" ></text>
</g>
<g >
<title>filemap_add_folio (1,314,548,991 samples, 0.03%)</title><rect x="57.4" y="1205" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="60.42" y="1215.5" ></text>
</g>
<g >
<title>begin_current_label_crit_section (431,941,851 samples, 0.01%)</title><rect x="835.2" y="1237" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="838.21" y="1247.5" ></text>
</g>
<g >
<title>__libc_fork (1,855,214,451 samples, 0.05%)</title><rect x="50.3" y="1477" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="53.32" y="1487.5" ></text>
</g>
<g >
<title>call_cpuidle (1,903,585,187 samples, 0.05%)</title><rect x="60.1" y="1493" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="63.11" y="1503.5" ></text>
</g>
<g >
<title>cpu_startup_entry (854,734,568 samples, 0.02%)</title><rect x="58.8" y="1541" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="61.81" y="1551.5" ></text>
</g>
<g >
<title>security_file_fcntl (1,111,675,816 samples, 0.03%)</title><rect x="755.9" y="1349" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="758.92" y="1359.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (5,723,846,269 samples, 0.14%)</title><rect x="759.8" y="1349" width="1.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="762.84" y="1359.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (9,281,327,974 samples, 0.23%)</title><rect x="39.7" y="1477" width="2.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="42.73" y="1487.5" ></text>
</g>
<g >
<title>irq_exit_rcu (915,424,750 samples, 0.02%)</title><rect x="612.7" y="1221" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="615.70" y="1231.5" ></text>
</g>
<g >
<title>read (2,213,675,227 samples, 0.05%)</title><rect x="453.4" y="1381" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="456.45" y="1391.5" ></text>
</g>
<g >
<title>call_cpuidle (257,268,833,727 samples, 6.38%)</title><rect x="1038.2" y="1493" width="75.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1041.22" y="1503.5" >call_cpu..</text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (1,871,525,287 samples, 0.05%)</title><rect x="50.3" y="1493" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="53.32" y="1503.5" ></text>
</g>
<g >
<title>irq_exit_rcu (564,989,830 samples, 0.01%)</title><rect x="696.1" y="1397" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="699.10" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (769,022,883 samples, 0.02%)</title><rect x="1017.1" y="1557" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1020.10" y="1567.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (1,774,894,317 samples, 0.04%)</title><rect x="948.2" y="1365" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="951.21" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="693" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="703.5" ></text>
</g>
<g >
<title>__rcu_read_lock (614,090,594 samples, 0.02%)</title><rect x="817.3" y="1237" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="820.26" y="1247.5" ></text>
</g>
<g >
<title>copy_p4d_range (1,497,588,938 samples, 0.04%)</title><rect x="50.4" y="1301" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="53.36" y="1311.5" ></text>
</g>
<g >
<title>copy_p4d_range (3,665,427,371 samples, 0.09%)</title><rect x="1023.9" y="1413" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1026.85" y="1423.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (2,106,572,304 samples, 0.05%)</title><rect x="1033.5" y="1429" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1036.52" y="1439.5" ></text>
</g>
<g >
<title>do_group_exit (787,722,636 samples, 0.02%)</title><rect x="23.5" y="1525" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="26.47" y="1535.5" ></text>
</g>
<g >
<title>__sched_yield (113,771,973,666 samples, 2.82%)</title><rect x="651.9" y="1445" width="33.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="654.92" y="1455.5" >__..</text>
</g>
<g >
<title>copy_process (4,772,947,251 samples, 0.12%)</title><rect x="1023.7" y="1477" width="1.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1026.69" y="1487.5" ></text>
</g>
<g >
<title>exec_mmap (6,167,468,758 samples, 0.15%)</title><rect x="55.0" y="1413" width="1.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="57.98" y="1423.5" ></text>
</g>
<g >
<title>sock_free_inode (381,865,766 samples, 0.01%)</title><rect x="1142.8" y="1317" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1145.80" y="1327.5" ></text>
</g>
<g >
<title>ksys_read (1,864,460,447 samples, 0.05%)</title><rect x="1189.3" y="1397" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.33" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,631,158,157 samples, 0.04%)</title><rect x="51.4" y="821" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.42" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,526,018,778 samples, 0.04%)</title><rect x="23.3" y="1557" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="26.27" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1077" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1087.5" ></text>
</g>
<g >
<title>check_preempt_curr (1,038,848,658 samples, 0.03%)</title><rect x="1120.6" y="1445" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1123.56" y="1455.5" ></text>
</g>
<g >
<title>psi_task_change (515,752,135 samples, 0.01%)</title><rect x="1164.2" y="1365" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1167.25" y="1375.5" ></text>
</g>
<g >
<title>vfs_read (420,205,401 samples, 0.01%)</title><rect x="61.6" y="1509" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="64.56" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="469" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="479.5" ></text>
</g>
<g >
<title>update_curr (8,994,412,087 samples, 0.22%)</title><rect x="562.9" y="1269" width="2.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="565.85" y="1279.5" ></text>
</g>
<g >
<title>cpuacct_charge (495,800,806 samples, 0.01%)</title><rect x="604.8" y="1205" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="607.75" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (587,304,461,746 samples, 14.56%)</title><rect x="771.3" y="1397" width="171.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="774.25" y="1407.5" >do_syscall_64</text>
</g>
<g >
<title>sched_clock_cpu (2,552,222,820 samples, 0.06%)</title><rect x="622.7" y="1253" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="625.68" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,495,662,792 samples, 0.04%)</title><rect x="763.1" y="1397" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="766.07" y="1407.5" ></text>
</g>
<g >
<title>inet_csk_accept (438,950,715 samples, 0.01%)</title><rect x="786.3" y="1333" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="789.34" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="581" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="591.5" ></text>
</g>
<g >
<title>ret_from_fork (2,552,571,691 samples, 0.06%)</title><rect x="23.9" y="1557" width="0.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="26.85" y="1567.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (549,738,858 samples, 0.01%)</title><rect x="952.3" y="1349" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="955.28" y="1359.5" ></text>
</g>
<g >
<title>rcu_core_si (421,179,591 samples, 0.01%)</title><rect x="734.0" y="1317" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="736.97" y="1327.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (2,304,491,000 samples, 0.06%)</title><rect x="23.9" y="1525" width="0.7" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="26.88" y="1535.5" ></text>
</g>
<g >
<title>sock_free_inode (2,376,880,623 samples, 0.06%)</title><rect x="1032.5" y="1413" width="0.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1035.51" y="1423.5" ></text>
</g>
<g >
<title>__do_sys_clone (657,639,610 samples, 0.02%)</title><rect x="1168.6" y="1525" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1171.59" y="1535.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (3,892,616,282 samples, 0.10%)</title><rect x="251.7" y="1525" width="1.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="254.75" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="213" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,929,004,007 samples, 0.05%)</title><rect x="417.7" y="1493" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="420.74" y="1503.5" ></text>
</g>
<g >
<title>inet_release (365,741,914 samples, 0.01%)</title><rect x="938.9" y="1253" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="941.88" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (738,190,106 samples, 0.02%)</title><rect x="1018.6" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1021.59" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (591,041,720 samples, 0.01%)</title><rect x="14.2" y="1493" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.16" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,466,599,162 samples, 0.04%)</title><rect x="51.4" y="757" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.42" y="767.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,161,153,794 samples, 0.03%)</title><rect x="1119.6" y="1445" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1122.62" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1269" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1279.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::send_syscall (3,626,057,566 samples, 0.09%)</title><rect x="951.8" y="1493" width="1.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="954.80" y="1503.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (20,393,292,759 samples, 0.51%)</title><rect x="384.6" y="1477" width="6.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="387.61" y="1487.5" ></text>
</g>
<g >
<title>__release_sock (408,019,543 samples, 0.01%)</title><rect x="951.9" y="1349" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="954.85" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (587,905,771 samples, 0.01%)</title><rect x="1018.6" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1021.63" y="1391.5" ></text>
</g>
<g >
<title>intel_idle (18,451,360,871 samples, 0.46%)</title><rect x="29.6" y="1445" width="5.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="32.64" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="229" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="239.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (1,810,645,108 samples, 0.04%)</title><rect x="621.5" y="1221" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="624.48" y="1231.5" ></text>
</g>
<g >
<title>__module_get (410,822,911 samples, 0.01%)</title><rect x="774.8" y="1349" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="777.83" y="1359.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (347,544,057 samples, 0.01%)</title><rect x="1170.5" y="1413" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1173.52" y="1423.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (3,690,008,706 samples, 0.09%)</title><rect x="63.1" y="1557" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="66.14" y="1567.5" ></text>
</g>
<g >
<title>module_put (582,864,209 samples, 0.01%)</title><rect x="940.7" y="1301" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="943.66" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,549,596,306 samples, 0.04%)</title><rect x="13.3" y="1461" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="16.35" y="1471.5" ></text>
</g>
<g >
<title>kernel_clone (4,773,652,195 samples, 0.12%)</title><rect x="1023.7" y="1493" width="1.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1026.69" y="1503.5" ></text>
</g>
<g >
<title>rustposix::interface::file::openfile (355,304,680 samples, 0.01%)</title><rect x="453.3" y="1461" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="456.30" y="1471.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (5,430,126,329 samples, 0.13%)</title><rect x="57.1" y="1269" width="1.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="60.12" y="1279.5" ></text>
</g>
<g >
<title>clock_gettime (7,562,128,901 samples, 0.19%)</title><rect x="949.5" y="1381" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="952.45" y="1391.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (79,481,420,998 samples, 1.97%)</title><rect x="24.6" y="1573" width="23.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="27.60" y="1583.5" >s..</text>
</g>
<g >
<title>entry_SYSCALL_64 (1,842,194,285 samples, 0.05%)</title><rect x="66.7" y="1541" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="69.71" y="1551.5" ></text>
</g>
<g >
<title>clock_gettime (1,077,769,355 samples, 0.03%)</title><rect x="393.3" y="1477" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="396.30" y="1487.5" ></text>
</g>
<g >
<title>cache_from_obj (1,057,861,528 samples, 0.03%)</title><rect x="906.7" y="1221" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="909.70" y="1231.5" ></text>
</g>
<g >
<title>copy_process (655,474,079 samples, 0.02%)</title><rect x="1168.6" y="1493" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1171.59" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (3,349,089,410 samples, 0.08%)</title><rect x="898.6" y="1285" width="1.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="901.64" y="1295.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (622,477,924 samples, 0.02%)</title><rect x="660.4" y="1365" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="663.43" y="1375.5" ></text>
</g>
<g >
<title>clear_buddies (381,805,793 samples, 0.01%)</title><rect x="599.4" y="1237" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="602.40" y="1247.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (439,354,008 samples, 0.01%)</title><rect x="576.4" y="1381" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="579.44" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="533" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="543.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5,214,629,246 samples, 0.13%)</title><rect x="1158.5" y="1365" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1161.53" y="1375.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (640,546,802 samples, 0.02%)</title><rect x="1005.1" y="1557" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1008.07" y="1567.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,142,324,206 samples, 0.05%)</title><rect x="38.0" y="1397" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="40.96" y="1407.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (199,820,044,083 samples, 4.95%)</title><rect x="258.5" y="1541" width="58.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="261.54" y="1551.5" >NaClAp..</text>
</g>
<g >
<title>strlen (915,012,351 samples, 0.02%)</title><rect x="869.3" y="1317" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="872.32" y="1327.5" ></text>
</g>
<g >
<title>inet_csk_accept (19,851,821,266 samples, 0.49%)</title><rect x="780.3" y="1317" width="5.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="783.32" y="1327.5" ></text>
</g>
<g >
<title>ct_idle_enter (856,122,846 samples, 0.02%)</title><rect x="1063.8" y="1445" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1066.84" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (385,101,262 samples, 0.01%)</title><rect x="10.7" y="1573" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.74" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,801,908,507 samples, 0.04%)</title><rect x="51.4" y="917" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.41" y="927.5" ></text>
</g>
<g >
<title>do_idle (2,400,084,555 samples, 0.06%)</title><rect x="13.3" y="1525" width="0.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="16.32" y="1535.5" ></text>
</g>
<g >
<title>inode_free_by_rcu (1,173,764,356 samples, 0.03%)</title><rect x="28.1" y="1317" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="31.12" y="1327.5" ></text>
</g>
<g >
<title>NaClHighResolutionTimerEnabled (934,443,002 samples, 0.02%)</title><rect x="405.6" y="1525" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="408.56" y="1535.5" ></text>
</g>
<g >
<title>stream_open (527,782,514 samples, 0.01%)</title><rect x="869.6" y="1333" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="872.59" y="1343.5" ></text>
</g>
<g >
<title>dispatcher (441,483,346 samples, 0.01%)</title><rect x="453.3" y="1493" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="456.28" y="1503.5" ></text>
</g>
<g >
<title>execute_command_internal (2,138,306,028 samples, 0.05%)</title><rect x="1016.1" y="1333" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1019.07" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,529,282,552 samples, 0.04%)</title><rect x="12.1" y="1573" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.14" y="1583.5" ></text>
</g>
<g >
<title>do_idle (1,250,409,104 samples, 0.03%)</title><rect x="1157.9" y="1541" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1160.86" y="1551.5" ></text>
</g>
<g >
<title>poll_idle (707,333,323 samples, 0.02%)</title><rect x="47.2" y="1381" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="50.17" y="1391.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (26,854,647,561 samples, 0.67%)</title><rect x="1158.2" y="1557" width="7.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1161.23" y="1567.5" ></text>
</g>
<g >
<title>__libc_start_main (737,900,863 samples, 0.02%)</title><rect x="14.1" y="1557" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="17.11" y="1567.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (593,163,205 samples, 0.01%)</title><rect x="1117.1" y="1445" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1120.11" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1413" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1423.5" ></text>
</g>
<g >
<title>sched_clock (2,320,084,466 samples, 0.06%)</title><rect x="622.7" y="1237" width="0.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="625.73" y="1247.5" ></text>
</g>
<g >
<title>sched_clock (1,468,346,516 samples, 0.04%)</title><rect x="1134.4" y="1429" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1137.40" y="1439.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (24,126,962,902 samples, 0.60%)</title><rect x="816.0" y="1253" width="7.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="818.98" y="1263.5" ></text>
</g>
<g >
<title>exe (649,440,319 samples, 0.02%)</title><rect x="10.7" y="1589" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="13.69" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1381" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="1391.5" ></text>
</g>
<g >
<title>poll_idle (9,326,879,305 samples, 0.23%)</title><rect x="1178.8" y="1445" width="2.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1181.80" y="1455.5" ></text>
</g>
<g >
<title>pick_next_entity (1,119,657,230 samples, 0.03%)</title><rect x="667.3" y="1317" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="670.26" y="1327.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (616,617,237 samples, 0.02%)</title><rect x="696.1" y="1413" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="699.09" y="1423.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (386,592,786 samples, 0.01%)</title><rect x="1011.3" y="1557" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1014.33" y="1567.5" ></text>
</g>
<g >
<title>psi_group_change (878,170,694 samples, 0.02%)</title><rect x="1183.8" y="1413" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1186.83" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,132,065,477 samples, 0.03%)</title><rect x="51.4" y="613" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.44" y="623.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (425,835,429 samples, 0.01%)</title><rect x="58.8" y="1461" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="61.83" y="1471.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (848,882,420 samples, 0.02%)</title><rect x="894.7" y="1333" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="897.72" y="1343.5" ></text>
</g>
<g >
<title>inet_accept (369,029,093 samples, 0.01%)</title><rect x="882.8" y="1349" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="885.79" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="453" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="463.5" ></text>
</g>
<g >
<title>native_sched_clock (968,522,546 samples, 0.02%)</title><rect x="1154.5" y="1429" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1157.51" y="1439.5" ></text>
</g>
<g >
<title>__memset (1,426,854,088 samples, 0.04%)</title><rect x="851.2" y="1269" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="854.22" y="1279.5" ></text>
</g>
<g >
<title>NaClSysClockGetTime (739,470,818 samples, 0.02%)</title><rect x="1005.3" y="1557" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1008.26" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1205" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1215.5" ></text>
</g>
<g >
<title>charge_memcg (371,924,075 samples, 0.01%)</title><rect x="57.5" y="1157" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="60.53" y="1167.5" ></text>
</g>
<g >
<title>i_callback (536,665,945 samples, 0.01%)</title><rect x="24.2" y="1429" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="27.17" y="1439.5" ></text>
</g>
<g >
<title>sock_free_inode (2,761,278,868 samples, 0.07%)</title><rect x="27.3" y="1301" width="0.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="30.31" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="629" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="639.5" ></text>
</g>
<g >
<title>psi_task_switch (12,240,269,285 samples, 0.30%)</title><rect x="1147.2" y="1477" width="3.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1150.22" y="1487.5" ></text>
</g>
<g >
<title>file_free_rcu (442,670,491 samples, 0.01%)</title><rect x="1169.3" y="1429" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1172.31" y="1439.5" ></text>
</g>
<g >
<title>cpu_startup_entry (354,199,551 samples, 0.01%)</title><rect x="10.6" y="1541" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="13.58" y="1551.5" ></text>
</g>
<g >
<title>record__pushfn (5,861,940,568 samples, 0.15%)</title><rect x="57.0" y="1493" width="1.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="60.01" y="1503.5" ></text>
</g>
<g >
<title>update_rq_clock (649,337,455 samples, 0.02%)</title><rect x="681.1" y="1349" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="684.11" y="1359.5" ></text>
</g>
<g >
<title>arch_call_rest_init (4,739,610,922 samples, 0.12%)</title><rect x="46.5" y="1509" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="49.46" y="1519.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (9,123,560,025 samples, 0.23%)</title><rect x="1182.2" y="1509" width="2.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1185.21" y="1519.5" ></text>
</g>
<g >
<title>map_id_range_down (2,085,727,760 samples, 0.05%)</title><rect x="795.7" y="1253" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="798.68" y="1263.5" ></text>
</g>
<g >
<title>vfs_fstatat (580,418,328 samples, 0.01%)</title><rect x="52.4" y="1429" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="55.38" y="1439.5" ></text>
</g>
<g >
<title>enqueue_task (2,545,389,024 samples, 0.06%)</title><rect x="1163.7" y="1381" width="0.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1166.66" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="549" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="559.5" ></text>
</g>
<g >
<title>shuffle_freelist (6,827,485,352 samples, 0.17%)</title><rect x="808.4" y="1205" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="811.42" y="1215.5" ></text>
</g>
<g >
<title>syscall (1,495,662,792 samples, 0.04%)</title><rect x="763.1" y="1413" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="766.07" y="1423.5" ></text>
</g>
<g >
<title>cpu_startup_entry (61,844,838,787 samples, 1.53%)</title><rect x="1169.8" y="1541" width="18.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1172.81" y="1551.5" ></text>
</g>
<g >
<title>__switch_to_asm (4,247,440,682 samples, 0.11%)</title><rect x="1026.9" y="1573" width="1.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1029.91" y="1583.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (3,399,193,923 samples, 0.08%)</title><rect x="1003.0" y="1557" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1006.03" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (275,157,242,696 samples, 6.82%)</title><rect x="1037.3" y="1509" width="80.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1040.26" y="1519.5" >cpuidle_i..</text>
</g>
<g >
<title>__cond_resched (603,538,396 samples, 0.01%)</title><rect x="780.7" y="1301" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="783.70" y="1311.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (19,013,927,287 samples, 0.47%)</title><rect x="412.2" y="1493" width="5.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="415.18" y="1503.5" ></text>
</g>
<g >
<title>llist_reverse_order (1,229,749,484 samples, 0.03%)</title><rect x="42.5" y="1493" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="45.49" y="1503.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (738,234,592 samples, 0.02%)</title><rect x="1030.3" y="1253" width="0.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1033.28" y="1263.5" ></text>
</g>
<g >
<title>poll_idle (412,198,579 samples, 0.01%)</title><rect x="1188.5" y="1381" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1191.55" y="1391.5" ></text>
</g>
<g >
<title>d_set_d_op (1,423,210,242 samples, 0.04%)</title><rect x="851.6" y="1269" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="854.65" y="1279.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (941,631,191 samples, 0.02%)</title><rect x="46.5" y="1365" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="49.52" y="1375.5" ></text>
</g>
<g >
<title>xas_start (1,080,283,341 samples, 0.03%)</title><rect x="820.6" y="1205" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="823.64" y="1215.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (508,367,771 samples, 0.01%)</title><rect x="614.6" y="1189" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="617.57" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="917" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="927.5" ></text>
</g>
<g >
<title>__do_softirq (564,989,830 samples, 0.01%)</title><rect x="696.1" y="1365" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="699.10" y="1375.5" ></text>
</g>
<g >
<title>NaClMaskRestore (4,088,099,008 samples, 0.10%)</title><rect x="1000.6" y="1557" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1003.57" y="1567.5" ></text>
</g>
<g >
<title>__mod_memcg_state (667,067,960 samples, 0.02%)</title><rect x="822.2" y="1189" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="825.17" y="1199.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (348,264,920 samples, 0.01%)</title><rect x="16.1" y="1557" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="19.08" y="1567.5" ></text>
</g>
<g >
<title>switch_fpu_return (13,739,093,730 samples, 0.34%)</title><rect x="640.2" y="1333" width="4.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="643.17" y="1343.5" ></text>
</g>
<g >
<title>____fput (347,757,011 samples, 0.01%)</title><rect x="888.3" y="1333" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="891.26" y="1343.5" ></text>
</g>
<g >
<title>setup_object (5,176,336,267 samples, 0.13%)</title><rect x="808.9" y="1189" width="1.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="811.91" y="1199.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,095,646,822 samples, 0.05%)</title><rect x="570.2" y="1413" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="573.23" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,028,324,675 samples, 0.03%)</title><rect x="53.3" y="101" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="111.5" ></text>
</g>
<g >
<title>exit_mmap (6,167,468,758 samples, 0.15%)</title><rect x="55.0" y="1365" width="1.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="57.98" y="1375.5" ></text>
</g>
<g >
<title>__rcu_read_lock (411,996,614 samples, 0.01%)</title><rect x="774.4" y="1333" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="777.44" y="1343.5" ></text>
</g>
<g >
<title>inet_recvmsg (857,519,197 samples, 0.02%)</title><rect x="947.4" y="1317" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="950.41" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (381,915,560 samples, 0.01%)</title><rect x="18.5" y="1461" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="21.52" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,158,152,391 samples, 0.05%)</title><rect x="1168.6" y="1573" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1171.59" y="1583.5" ></text>
</g>
<g >
<title>memcg_alloc_slab_cgroups (1,899,807,443 samples, 0.05%)</title><rect x="840.6" y="1205" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="843.59" y="1215.5" ></text>
</g>
<g >
<title>set_next_entity (868,880,616 samples, 0.02%)</title><rect x="44.0" y="1445" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="47.00" y="1455.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (4,710,817,431 samples, 0.12%)</title><rect x="1023.7" y="1461" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1026.70" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,604,344,354 samples, 0.09%)</title><rect x="945.9" y="1397" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="948.90" y="1407.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (81,157,033,619 samples, 2.01%)</title><rect x="1040.1" y="1429" width="23.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1043.10" y="1439.5" >s..</text>
</g>
<g >
<title>sock_read (2,002,618,540 samples, 0.05%)</title><rect x="1189.3" y="1477" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1192.30" y="1487.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (434,783,906 samples, 0.01%)</title><rect x="843.5" y="1237" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="846.52" y="1247.5" ></text>
</g>
<g >
<title>uv__async_io (1,073,305,456 samples, 0.03%)</title><rect x="53.8" y="1541" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="56.85" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (399,105,752 samples, 0.01%)</title><rect x="1189.1" y="1461" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.13" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2,778,762,212 samples, 0.07%)</title><rect x="931.4" y="1269" width="0.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="934.39" y="1279.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (792,003,336 samples, 0.02%)</title><rect x="15.1" y="1445" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="18.13" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,638,470,693 samples, 0.04%)</title><rect x="11.3" y="1413" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.26" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (535,837,895 samples, 0.01%)</title><rect x="51.5" y="373" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.46" y="383.5" ></text>
</g>
<g >
<title>[[vdso]] (3,935,887,836 samples, 0.10%)</title><rect x="696.3" y="1397" width="1.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="699.33" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1493" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1503.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (4,190,211,986 samples, 0.10%)</title><rect x="65.5" y="1557" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="68.45" y="1567.5" ></text>
</g>
<g >
<title>schedule_idle (51,083,490,098 samples, 1.27%)</title><rect x="1138.3" y="1509" width="15.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1141.32" y="1519.5" ></text>
</g>
<g >
<title>memcg_list_lru_alloc (6,245,487,806 samples, 0.15%)</title><rect x="860.6" y="1237" width="1.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="863.57" y="1247.5" ></text>
</g>
<g >
<title>menu_select (797,860,615 samples, 0.02%)</title><rect x="1163.2" y="1413" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1166.22" y="1423.5" ></text>
</g>
<g >
<title>security_d_instantiate (6,220,733,852 samples, 0.15%)</title><rect x="866.4" y="1285" width="1.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="869.45" y="1295.5" ></text>
</g>
<g >
<title>do_idle (73,636,382,944 samples, 1.83%)</title><rect x="24.7" y="1525" width="21.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="27.66" y="1535.5" >d..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (907,968,880 samples, 0.02%)</title><rect x="815.4" y="1205" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="818.44" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1509" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1519.5" ></text>
</g>
<g >
<title>execute_command (2,185,352,956 samples, 0.05%)</title><rect x="1016.1" y="1397" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1019.07" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_enter (16,222,381,257 samples, 0.40%)</title><rect x="1158.5" y="1413" width="4.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1161.46" y="1423.5" ></text>
</g>
<g >
<title>rcu_core (472,996,789 samples, 0.01%)</title><rect x="1163.0" y="1269" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1166.03" y="1279.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (2,560,777,492 samples, 0.06%)</title><rect x="13.3" y="1573" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="16.32" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="741" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="751.5" ></text>
</g>
<g >
<title>unmap_vmas (4,042,951,830 samples, 0.10%)</title><rect x="1029.4" y="1349" width="1.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1032.35" y="1359.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (616,617,237 samples, 0.02%)</title><rect x="696.1" y="1429" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="699.09" y="1439.5" ></text>
</g>
<g >
<title>native_sched_clock (2,044,646,363 samples, 0.05%)</title><rect x="567.2" y="1237" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="570.22" y="1247.5" ></text>
</g>
<g >
<title>unmap_page_range (565,292,114 samples, 0.01%)</title><rect x="1168.8" y="1317" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1171.84" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,255,654,819 samples, 0.06%)</title><rect x="51.4" y="1093" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.40" y="1103.5" ></text>
</g>
<g >
<title>sendto (3,545,531,773 samples, 0.09%)</title><rect x="951.8" y="1477" width="1.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="954.82" y="1487.5" ></text>
</g>
<g >
<title>mod_objcg_state (2,438,581,304 samples, 0.06%)</title><rect x="1054.7" y="1269" width="0.7" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1057.72" y="1279.5" ></text>
</g>
<g >
<title>task_work_add (3,292,700,116 samples, 0.08%)</title><rect x="869.7" y="1333" width="1.0" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="872.74" y="1343.5" ></text>
</g>
<g >
<title>cpuidle_enter (38,414,004,027 samples, 0.95%)</title><rect x="1170.3" y="1477" width="11.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1173.35" y="1487.5" ></text>
</g>
<g >
<title>pick_next_task (1,538,495,046 samples, 0.04%)</title><rect x="43.8" y="1477" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="46.83" y="1487.5" ></text>
</g>
<g >
<title>cpu_startup_entry (4,718,831,684 samples, 0.12%)</title><rect x="46.5" y="1477" width="1.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="49.46" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="645" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="655.5" ></text>
</g>
<g >
<title>[bash] (1,167,724,378 samples, 0.03%)</title><rect x="1016.4" y="1221" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1019.36" y="1231.5" ></text>
</g>
<g >
<title>locks_free_lock_context (702,092,582 samples, 0.02%)</title><rect x="920.4" y="1173" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="923.41" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="373" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="245" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="255.5" ></text>
</g>
<g >
<title>consume_obj_stock (490,956,715 samples, 0.01%)</title><rect x="842.6" y="1253" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="845.59" y="1263.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (3,421,501,169 samples, 0.08%)</title><rect x="1006.3" y="1557" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1009.27" y="1567.5" ></text>
</g>
<g >
<title>llist_reverse_order (1,057,224,685 samples, 0.03%)</title><rect x="1184.6" y="1493" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1187.56" y="1503.5" ></text>
</g>
<g >
<title>rcu_core_si (448,480,407 samples, 0.01%)</title><rect x="718.1" y="1205" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="721.05" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (895,430,222 samples, 0.02%)</title><rect x="717.9" y="1301" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="720.93" y="1311.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (14,693,601,392 samples, 0.36%)</title><rect x="843.7" y="1253" width="4.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="846.67" y="1263.5" ></text>
</g>
<g >
<title>start_secondary (2,895,098,221 samples, 0.07%)</title><rect x="60.1" y="1557" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="63.08" y="1567.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get_mut (546,088,428,784 samples, 13.54%)</title><rect x="492.2" y="1445" width="159.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="495.20" y="1455.5" >&lt;dashmap::DashMap&lt;K,..</text>
</g>
<g >
<title>smpboot_thread_fn (1,632,716,501 samples, 0.04%)</title><rect x="1169.2" y="1525" width="0.5" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1172.25" y="1535.5" ></text>
</g>
<g >
<title>Glob::isIgnored (3,803,218,187 samples, 0.09%)</title><rect x="51.2" y="1493" width="1.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="54.24" y="1503.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (38,362,362,905 samples, 0.95%)</title><rect x="871.6" y="1349" width="11.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="874.57" y="1359.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (822,698,212 samples, 0.02%)</title><rect x="909.0" y="1189" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="911.97" y="1199.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,988,487,427 samples, 0.07%)</title><rect x="46.5" y="1413" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="49.50" y="1423.5" ></text>
</g>
<g >
<title>put_unused_fd (402,227,075 samples, 0.01%)</title><rect x="884.5" y="1365" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="887.46" y="1375.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (634,682,490 samples, 0.02%)</title><rect x="836.9" y="1221" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="839.93" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,079,036,572 samples, 0.08%)</title><rect x="51.4" y="1365" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.38" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (503,556,351 samples, 0.01%)</title><rect x="1015.3" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1018.29" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,461,013,913 samples, 0.04%)</title><rect x="51.4" y="741" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.42" y="751.5" ></text>
</g>
<g >
<title>_copy_from_iter (498,279,743 samples, 0.01%)</title><rect x="952.3" y="1333" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="955.29" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="485" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="495.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (797,440,626 samples, 0.02%)</title><rect x="952.5" y="1317" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="955.52" y="1327.5" ></text>
</g>
<g >
<title>__init_rwsem (351,885,830 samples, 0.01%)</title><rect x="809.1" y="1157" width="0.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="812.07" y="1167.5" ></text>
</g>
<g >
<title>wb_writeback (615,886,445 samples, 0.02%)</title><rect x="1034.5" y="1461" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1037.49" y="1471.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (615,814,246 samples, 0.02%)</title><rect x="1034.5" y="1445" width="0.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1037.49" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,333,425,641 samples, 0.06%)</title><rect x="947.2" y="1381" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="950.24" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="869" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="879.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,344,898,612 samples, 0.06%)</title><rect x="1180.8" y="1381" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1183.83" y="1391.5" ></text>
</g>
<g >
<title>update_load_avg (8,874,892,519 samples, 0.22%)</title><rect x="605.0" y="1221" width="2.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="608.01" y="1231.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (495,589,159 samples, 0.01%)</title><rect x="59.2" y="1509" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="62.17" y="1519.5" ></text>
</g>
<g >
<title>expand_string_assignment (1,167,724,378 samples, 0.03%)</title><rect x="1016.4" y="1237" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1019.36" y="1247.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,872,201,181 samples, 0.07%)</title><rect x="60.1" y="1541" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="63.08" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (72,622,958,539 samples, 1.80%)</title><rect x="801.8" y="1269" width="21.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="804.79" y="1279.5" >k..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (358,086,499 samples, 0.01%)</title><rect x="51.5" y="341" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.46" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (432,297,245 samples, 0.01%)</title><rect x="1011.2" y="1557" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1014.17" y="1567.5" ></text>
</g>
<g >
<title>psi_group_change (569,116,275 samples, 0.01%)</title><rect x="1147.1" y="1477" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1150.05" y="1487.5" ></text>
</g>
<g >
<title>uv__fs_read (695,470,900 samples, 0.02%)</title><rect x="54.6" y="1509" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="57.57" y="1519.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (54,249,520,259 samples, 1.34%)</title><rect x="1119.0" y="1477" width="15.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1121.97" y="1487.5" ></text>
</g>
<g >
<title>yield_task_fair (753,731,624 samples, 0.02%)</title><rect x="681.3" y="1365" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="684.30" y="1375.5" ></text>
</g>
<g >
<title>load_elf_binary (459,769,403 samples, 0.01%)</title><rect x="1017.1" y="1445" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1020.11" y="1455.5" ></text>
</g>
<g >
<title>seq_read (656,241,399 samples, 0.02%)</title><rect x="54.6" y="1381" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="57.58" y="1391.5" ></text>
</g>
<g >
<title>rcu_core (76,560,739,817 samples, 1.90%)</title><rect x="1040.8" y="1349" width="22.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1043.78" y="1359.5" >r..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="805" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="815.5" ></text>
</g>
<g >
<title>file_free_rcu (350,268,317 samples, 0.01%)</title><rect x="15.1" y="1317" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="18.15" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,478,558,520 samples, 0.09%)</title><rect x="51.3" y="1445" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.33" y="1455.5" ></text>
</g>
<g >
<title>native_load_tls (843,720,348 samples, 0.02%)</title><rect x="644.6" y="1397" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="647.64" y="1407.5" ></text>
</g>
<g >
<title>__do_softirq (1,570,625,457 samples, 0.04%)</title><rect x="1142.6" y="1397" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1145.59" y="1407.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (642,196,127 samples, 0.02%)</title><rect x="998.0" y="1557" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1001.01" y="1567.5" ></text>
</g>
<g >
<title>update_rq_clock (7,789,967,968 samples, 0.19%)</title><rect x="1132.6" y="1461" width="2.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1135.56" y="1471.5" ></text>
</g>
<g >
<title>irq_exit_rcu (788,310,305 samples, 0.02%)</title><rect x="15.1" y="1413" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="18.13" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1349" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1359.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,434,356,010 samples, 0.04%)</title><rect x="1040.1" y="1381" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1043.13" y="1391.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (2,704,793,423 samples, 0.07%)</title><rect x="1112.2" y="1301" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1115.23" y="1311.5" ></text>
</g>
<g >
<title>arch_call_rest_init (348,264,920 samples, 0.01%)</title><rect x="16.1" y="1509" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="19.08" y="1519.5" ></text>
</g>
<g >
<title>copy_page_range (3,680,912,064 samples, 0.09%)</title><rect x="1023.9" y="1429" width="1.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1026.85" y="1439.5" ></text>
</g>
<g >
<title>rcu_core_si (591,425,429 samples, 0.01%)</title><rect x="13.4" y="1365" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="16.36" y="1375.5" ></text>
</g>
<g >
<title>irq_exit_rcu (14,247,499,422 samples, 0.35%)</title><rect x="1108.9" y="1397" width="4.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1111.94" y="1407.5" ></text>
</g>
<g >
<title>do_exit (787,722,636 samples, 0.02%)</title><rect x="23.5" y="1509" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="26.47" y="1519.5" ></text>
</g>
<g >
<title>free_pgtables (662,072,164 samples, 0.02%)</title><rect x="55.0" y="1349" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="57.98" y="1359.5" ></text>
</g>
<g >
<title>rcu_core (1,520,993,472 samples, 0.04%)</title><rect x="1142.6" y="1365" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1145.59" y="1375.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1,556,957,059 samples, 0.04%)</title><rect x="1154.4" y="1477" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1157.35" y="1487.5" ></text>
</g>
<g >
<title>NaClLog (1,222,512,022 samples, 0.03%)</title><rect x="405.8" y="1525" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="408.84" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,827,073,561 samples, 0.07%)</title><rect x="18.8" y="1493" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.83" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4,362,241,391 samples, 0.11%)</title><rect x="665.0" y="1333" width="1.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="668.02" y="1343.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (4,680,945,664 samples, 0.12%)</title><rect x="929.2" y="1189" width="1.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="932.21" y="1199.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (13,001,115,365 samples, 0.32%)</title><rect x="780.9" y="1301" width="3.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="783.87" y="1311.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (372,757,831 samples, 0.01%)</title><rect x="1055.3" y="1253" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1058.32" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (71,139,710,352 samples, 1.76%)</title><rect x="991.2" y="1573" width="20.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="994.23" y="1583.5" ></text>
</g>
<g >
<title>update_cfs_group (2,701,401,755 samples, 0.07%)</title><rect x="1125.8" y="1397" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1128.83" y="1407.5" ></text>
</g>
<g >
<title>unmap_vmas (4,986,410,813 samples, 0.12%)</title><rect x="55.3" y="1349" width="1.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="58.33" y="1359.5" ></text>
</g>
<g >
<title>execute_command_internal (413,762,092 samples, 0.01%)</title><rect x="1016.5" y="1125" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1019.50" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="885" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="389" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (365,215,872 samples, 0.01%)</title><rect x="52.7" y="133" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="143.5" ></text>
</g>
<g >
<title>os_xsave (8,023,970,563 samples, 0.20%)</title><rect x="644.9" y="1397" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="647.89" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (3,156,061,149 samples, 0.08%)</title><rect x="941.3" y="1317" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="944.32" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (543,812,705 samples, 0.01%)</title><rect x="754.4" y="1333" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="757.37" y="1343.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (794,005,086 samples, 0.02%)</title><rect x="843.1" y="1237" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="846.10" y="1247.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (438,765,455 samples, 0.01%)</title><rect x="59.2" y="1461" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="62.18" y="1471.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (626,873,809 samples, 0.02%)</title><rect x="1037.0" y="1493" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1039.99" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,198,488,031 samples, 0.15%)</title><rect x="55.0" y="1573" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="57.97" y="1583.5" ></text>
</g>
<g >
<title>std::time::Instant::now (7,842,151,284 samples, 0.19%)</title><rect x="949.4" y="1429" width="2.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="952.37" y="1439.5" ></text>
</g>
<g >
<title>wrk (3,196,663,833 samples, 0.08%)</title><rect x="1189.1" y="1589" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1192.06" y="1599.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (1,248,902,972 samples, 0.03%)</title><rect x="1134.5" y="1413" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1137.46" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_enter (254,955,882,223 samples, 6.32%)</title><rect x="1038.8" y="1477" width="74.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1041.81" y="1487.5" >cpuidle_..</text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (525,750,029 samples, 0.01%)</title><rect x="1040.4" y="1285" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1043.35" y="1295.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3,678,547,093 samples, 0.09%)</title><rect x="1141.2" y="1477" width="1.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1144.18" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (675,701,303 samples, 0.02%)</title><rect x="1167.2" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1170.23" y="1583.5" ></text>
</g>
<g >
<title>[bash] (2,138,306,028 samples, 0.05%)</title><rect x="1016.1" y="1317" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1019.07" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2,304,287,868 samples, 0.06%)</title><rect x="700.4" y="1349" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="703.41" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_read (420,205,401 samples, 0.01%)</title><rect x="61.6" y="1541" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="64.56" y="1551.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (564,104,075 samples, 0.01%)</title><rect x="681.5" y="1381" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="684.53" y="1391.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (1,531,535,724 samples, 0.04%)</title><rect x="1189.4" y="1301" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1192.42" y="1311.5" ></text>
</g>
<g >
<title>__slab_free (1,068,420,075 samples, 0.03%)</title><rect x="1110.3" y="1269" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1113.27" y="1279.5" ></text>
</g>
<g >
<title>[[vdso]] (7,242,105,874 samples, 0.18%)</title><rect x="949.5" y="1365" width="2.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="952.49" y="1375.5" ></text>
</g>
<g >
<title>clear_page_erms (11,335,408,714 samples, 0.28%)</title><rect x="803.9" y="1157" width="3.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="806.90" y="1167.5" ></text>
</g>
<g >
<title>consume_obj_stock (358,960,482 samples, 0.01%)</title><rect x="859.6" y="1237" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="862.58" y="1247.5" ></text>
</g>
<g >
<title>search_binary_handler (6,189,779,741 samples, 0.15%)</title><rect x="55.0" y="1461" width="1.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="57.97" y="1471.5" ></text>
</g>
<g >
<title>do_accept (324,135,634,738 samples, 8.03%)</title><rect x="775.9" y="1349" width="94.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="778.90" y="1359.5" >do_accept</text>
</g>
<g >
<title>setlocale (2,833,132,743 samples, 0.07%)</title><rect x="18.8" y="1509" width="0.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="21.83" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1029" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="1039.5" ></text>
</g>
<g >
<title>lind_pread (2,437,383,429 samples, 0.06%)</title><rect x="453.4" y="1509" width="0.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="456.41" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (695,470,900 samples, 0.02%)</title><rect x="54.6" y="1461" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="57.57" y="1471.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (638,953,062 samples, 0.02%)</title><rect x="47.4" y="1445" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="50.42" y="1455.5" ></text>
</g>
<g >
<title>inode_init_always (25,046,582,840 samples, 0.62%)</title><rect x="793.7" y="1285" width="7.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="796.73" y="1295.5" ></text>
</g>
<g >
<title>start_secondary (354,199,551 samples, 0.01%)</title><rect x="10.6" y="1557" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="13.58" y="1567.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (568,012,939 samples, 0.01%)</title><rect x="952.5" y="1157" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="955.54" y="1167.5" ></text>
</g>
<g >
<title>__sched_yield (360,172,545 samples, 0.01%)</title><rect x="762.9" y="1413" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="765.94" y="1423.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (407,625,102 samples, 0.01%)</title><rect x="952.6" y="997" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="955.56" y="1007.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (1,872,521,294 samples, 0.05%)</title><rect x="50.3" y="1541" width="0.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="53.32" y="1551.5" ></text>
</g>
<g >
<title>start_secondary (74,741,810,076 samples, 1.85%)</title><rect x="24.6" y="1557" width="21.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="27.60" y="1567.5" >s..</text>
</g>
<g >
<title>[libc.so.6] (596,559,480 samples, 0.01%)</title><rect x="52.9" y="37" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="55.93" y="47.5" ></text>
</g>
<g >
<title>lockref_put_return (2,949,814,383 samples, 0.07%)</title><rect x="932.7" y="1285" width="0.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="935.70" y="1295.5" ></text>
</g>
<g >
<title>execute_command_internal (1,175,092,474 samples, 0.03%)</title><rect x="1016.4" y="1301" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1019.35" y="1311.5" ></text>
</g>
<g >
<title>__do_softirq (493,945,629 samples, 0.01%)</title><rect x="1163.0" y="1301" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1166.03" y="1311.5" ></text>
</g>
<g >
<title>start_kernel (3,680,614,853 samples, 0.09%)</title><rect x="1188.0" y="1525" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1190.98" y="1535.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,437,940,394 samples, 0.06%)</title><rect x="13.3" y="1541" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="16.32" y="1551.5" ></text>
</g>
<g >
<title>enqueue_task_fair (3,733,813,317 samples, 0.09%)</title><rect x="1182.7" y="1429" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1185.67" y="1439.5" ></text>
</g>
<g >
<title>__do_softirq (415,658,130 samples, 0.01%)</title><rect x="767.7" y="1349" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="770.70" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (496,862,745 samples, 0.01%)</title><rect x="767.8" y="1413" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="770.82" y="1423.5" ></text>
</g>
<g >
<title>NaClMaskRestore (10,012,236,738 samples, 0.25%)</title><rect x="330.4" y="1525" width="2.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="333.40" y="1535.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (433,398,955 samples, 0.01%)</title><rect x="46.2" y="1525" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="49.20" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="725" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="735.5" ></text>
</g>
<g >
<title>do_idle (354,199,551 samples, 0.01%)</title><rect x="10.6" y="1525" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.58" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1477" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="1487.5" ></text>
</g>
<g >
<title>mntput (1,656,096,002 samples, 0.04%)</title><rect x="933.7" y="1285" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="936.74" y="1295.5" ></text>
</g>
<g >
<title>enqueue_entity (667,704,101 samples, 0.02%)</title><rect x="1121.5" y="1429" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1124.49" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,639,089,153 samples, 0.04%)</title><rect x="51.4" y="837" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.41" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (96,049,766,354 samples, 2.38%)</title><rect x="699.6" y="1413" width="28.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="702.60" y="1423.5" >e..</text>
</g>
<g >
<title>cpuidle_enter_state (2,225,284,963 samples, 0.06%)</title><rect x="1188.0" y="1397" width="0.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1191.02" y="1407.5" ></text>
</g>
<g >
<title>irq_exit_rcu (435,310,815 samples, 0.01%)</title><rect x="576.4" y="1365" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="579.44" y="1375.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (978,695,557 samples, 0.02%)</title><rect x="45.2" y="1477" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="48.16" y="1487.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (511,866,392 samples, 0.01%)</title><rect x="1163.0" y="1349" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1166.03" y="1359.5" ></text>
</g>
<g >
<title>rmqueue (696,919,046 samples, 0.02%)</title><rect x="807.5" y="1157" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="810.48" y="1167.5" ></text>
</g>
<g >
<title>rcu_do_batch (412,350,947 samples, 0.01%)</title><rect x="734.0" y="1285" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="736.97" y="1295.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,182,046,197 samples, 0.08%)</title><rect x="46.5" y="1445" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="49.49" y="1455.5" ></text>
</g>
<g >
<title>[[heap]] (653,530,619 samples, 0.02%)</title><rect x="16.3" y="1573" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="19.28" y="1583.5" ></text>
</g>
<g >
<title>mod_memcg_state (463,280,196 samples, 0.01%)</title><rect x="848.9" y="1221" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="851.85" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="565" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="575.5" ></text>
</g>
<g >
<title>clear_inode (406,670,952 samples, 0.01%)</title><rect x="913.8" y="1221" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="916.84" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="869" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="879.5" ></text>
</g>
<g >
<title>m_show (402,072,973 samples, 0.01%)</title><rect x="61.6" y="1477" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="64.57" y="1487.5" ></text>
</g>
<g >
<title>vfs_write (5,746,038,340 samples, 0.14%)</title><rect x="57.0" y="1365" width="1.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="60.04" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="181" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="191.5" ></text>
</g>
<g >
<title>[unknown] (1,031,830,202 samples, 0.03%)</title><rect x="12.6" y="1573" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.60" y="1583.5" ></text>
</g>
<g >
<title>update_curr (885,358,560 samples, 0.02%)</title><rect x="1126.6" y="1397" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1129.62" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,342,340,400 samples, 0.03%)</title><rect x="51.4" y="725" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.42" y="735.5" ></text>
</g>
<g >
<title>ext4_bio_write_folio (353,831,514 samples, 0.01%)</title><rect x="1034.5" y="1301" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1037.52" y="1311.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (584,411,384 samples, 0.01%)</title><rect x="942.6" y="1349" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="945.64" y="1359.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (11,333,584,869 samples, 0.28%)</title><rect x="636.2" y="1317" width="3.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="639.19" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1141" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1151.5" ></text>
</g>
<g >
<title>rcu_core (442,418,611 samples, 0.01%)</title><rect x="560.7" y="1205" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="563.72" y="1215.5" ></text>
</g>
<g >
<title>runc (512,072,102 samples, 0.01%)</title><rect x="61.8" y="1589" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="64.84" y="1599.5" ></text>
</g>
<g >
<title>__get_user_8 (3,327,309,898 samples, 0.08%)</title><rect x="637.3" y="1285" width="1.0" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="640.31" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,273,222,293 samples, 0.06%)</title><rect x="767.0" y="1413" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="770.03" y="1423.5" ></text>
</g>
<g >
<title>rcu_do_batch (4,742,420,543 samples, 0.12%)</title><rect x="1158.6" y="1269" width="1.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1161.61" y="1279.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (384,688,843 samples, 0.01%)</title><rect x="904.8" y="1237" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="907.81" y="1247.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::recvfrom_nonblocking (7,205,260,717 samples, 0.18%)</title><rect x="945.8" y="1429" width="2.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="948.84" y="1439.5" ></text>
</g>
<g >
<title>update_min_vruntime (377,644,009 samples, 0.01%)</title><rect x="604.9" y="1205" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="607.90" y="1215.5" ></text>
</g>
<g >
<title>llist_reverse_order (8,458,462,301 samples, 0.21%)</title><rect x="1135.1" y="1493" width="2.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1138.15" y="1503.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (749,875,707 samples, 0.02%)</title><rect x="1188.0" y="1381" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1191.02" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (45,912,947,414 samples, 1.14%)</title><rect x="556.3" y="1381" width="13.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="559.34" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="597" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (3,499,178,200 samples, 0.09%)</title><rect x="951.8" y="1429" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="954.84" y="1439.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (849,374,122 samples, 0.02%)</title><rect x="604.5" y="1205" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="607.47" y="1215.5" ></text>
</g>
<g >
<title>__update_load_avg_se (356,428,861 samples, 0.01%)</title><rect x="1183.6" y="1381" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1186.58" y="1391.5" ></text>
</g>
<g >
<title>__update_blocked_fair (430,972,009 samples, 0.01%)</title><rect x="1063.6" y="1333" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1066.57" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="549" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="559.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (381,810,175 samples, 0.01%)</title><rect x="23.0" y="1573" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="25.98" y="1583.5" ></text>
</g>
<g >
<title>__schedule (8,329,718,219 samples, 0.21%)</title><rect x="43.0" y="1493" width="2.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="46.01" y="1503.5" ></text>
</g>
<g >
<title>memcg_account_kmem (1,467,373,838 samples, 0.04%)</title><rect x="822.0" y="1221" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="824.97" y="1231.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (872,438,430 samples, 0.02%)</title><rect x="785.7" y="1269" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="788.74" y="1279.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (410,136,216 samples, 0.01%)</title><rect x="58.4" y="1141" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="61.38" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="277" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="287.5" ></text>
</g>
<g >
<title>unmap_page_range (3,903,160,393 samples, 0.10%)</title><rect x="1029.4" y="1317" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1032.39" y="1327.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::nonblock_accept (1,475,990,662 samples, 0.04%)</title><rect x="176.6" y="1557" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="179.58" y="1567.5" ></text>
</g>
<g >
<title>CompareAndSwap (7,060,004,565 samples, 0.18%)</title><rect x="991.5" y="1557" width="2.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="994.53" y="1567.5" ></text>
</g>
<g >
<title>mod_objcg_state (5,533,030,846 samples, 0.14%)</title><rect x="814.1" y="1237" width="1.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="817.10" y="1247.5" ></text>
</g>
<g >
<title>irq_exit_rcu (828,176,668 samples, 0.02%)</title><rect x="1134.9" y="1461" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1137.91" y="1471.5" ></text>
</g>
<g >
<title>perf_event_task_tick (573,203,650 samples, 0.01%)</title><rect x="1040.3" y="1301" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1043.35" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,022,606,929 samples, 0.03%)</title><rect x="51.4" y="565" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.44" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,443,562,966 samples, 0.06%)</title><rect x="18.8" y="1445" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.84" y="1455.5" ></text>
</g>
<g >
<title>irq_exit_rcu (611,587,889 samples, 0.02%)</title><rect x="13.4" y="1413" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="16.36" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="213" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,489,759,917 samples, 0.04%)</title><rect x="685.3" y="1445" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="688.35" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="981" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="991.5" ></text>
</g>
<g >
<title>run_ksoftirqd (2,260,281,972 samples, 0.06%)</title><rect x="23.9" y="1509" width="0.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="26.88" y="1519.5" ></text>
</g>
<g >
<title>__fdget_raw (32,017,050,093 samples, 0.79%)</title><rect x="741.5" y="1349" width="9.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="744.46" y="1359.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,660,288,359 samples, 0.09%)</title><rect x="1188.0" y="1477" width="1.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1190.98" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1253" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1263.5" ></text>
</g>
<g >
<title>pick_next_entity (1,327,660,656 samples, 0.03%)</title><rect x="1143.7" y="1445" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1146.70" y="1455.5" ></text>
</g>
<g >
<title>sock_alloc_file (157,535,118,910 samples, 3.90%)</title><rect x="823.5" y="1333" width="46.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="826.51" y="1343.5" >sock..</text>
</g>
<g >
<title>call_cpuidle (2,205,205,568 samples, 0.05%)</title><rect x="15.1" y="1493" width="0.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="18.11" y="1503.5" ></text>
</g>
<g >
<title>[bash] (645,358,466 samples, 0.02%)</title><rect x="1016.7" y="1349" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1019.71" y="1359.5" ></text>
</g>
<g >
<title>ksys_write (5,758,754,806 samples, 0.14%)</title><rect x="57.0" y="1381" width="1.7" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="60.04" y="1391.5" ></text>
</g>
<g >
<title>__do_softirq (915,424,750 samples, 0.02%)</title><rect x="612.7" y="1189" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="615.70" y="1199.5" ></text>
</g>
<g >
<title>rcu_do_batch (1,433,200,076 samples, 0.04%)</title><rect x="685.4" y="1333" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="688.35" y="1343.5" ></text>
</g>
<g >
<title>cpuacct_charge (877,850,047 samples, 0.02%)</title><rect x="674.9" y="1285" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="677.88" y="1295.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (197,819,852,512 samples, 4.90%)</title><rect x="885.2" y="1381" width="57.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="888.17" y="1391.5" >syscal..</text>
</g>
<g >
<title>start_kernel (348,264,920 samples, 0.01%)</title><rect x="16.1" y="1525" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="19.08" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="341" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="351.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (2,223,209,556 samples, 0.06%)</title><rect x="453.4" y="1429" width="0.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="456.45" y="1439.5" ></text>
</g>
<g >
<title>copy_pte_range (427,803,002 samples, 0.01%)</title><rect x="1168.6" y="1413" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1171.64" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,359,017,490 samples, 0.06%)</title><rect x="15.1" y="1509" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="18.09" y="1519.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (615,814,246 samples, 0.02%)</title><rect x="1034.5" y="1429" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1037.49" y="1439.5" ></text>
</g>
<g >
<title>[bash] (3,701,190,707 samples, 0.09%)</title><rect x="1015.8" y="1461" width="1.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1018.82" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,053,046,163 samples, 0.08%)</title><rect x="390.6" y="1477" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="393.57" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="789" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_futex (365,849,139 samples, 0.01%)</title><rect x="579.3" y="1381" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="582.27" y="1391.5" ></text>
</g>
<g >
<title>run_rebalance_domains (356,087,276 samples, 0.01%)</title><rect x="29.4" y="1365" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="32.38" y="1375.5" ></text>
</g>
<g >
<title>__switch_to (431,392,564 samples, 0.01%)</title><rect x="1185.3" y="1477" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1188.26" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (954,786,684 samples, 0.02%)</title><rect x="53.3" y="37" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="56.34" y="47.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (424,293,390 samples, 0.01%)</title><rect x="1051.1" y="1253" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1054.09" y="1263.5" ></text>
</g>
<g >
<title>i_callback (412,563,306 samples, 0.01%)</title><rect x="1169.4" y="1429" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1172.44" y="1439.5" ></text>
</g>
<g >
<title>get_random_u32 (502,044,016 samples, 0.01%)</title><rect x="808.7" y="1173" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="811.71" y="1183.5" ></text>
</g>
<g >
<title>psi_group_change (415,955,894 samples, 0.01%)</title><rect x="616.6" y="1269" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="619.65" y="1279.5" ></text>
</g>
<g >
<title>new_slab (22,953,583,360 samples, 0.57%)</title><rect x="803.7" y="1237" width="6.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="806.73" y="1247.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (509,148,934 samples, 0.01%)</title><rect x="38.4" y="1301" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="41.43" y="1311.5" ></text>
</g>
<g >
<title>parse_and_execute (3,701,190,707 samples, 0.09%)</title><rect x="1015.8" y="1493" width="1.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1018.82" y="1503.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::unlock_exclusive_slow (143,519,083,211 samples, 3.56%)</title><rect x="685.8" y="1445" width="42.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="688.78" y="1455.5" >das..</text>
</g>
<g >
<title>alloc_pages (1,681,035,653 samples, 0.04%)</title><rect x="840.1" y="1205" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="843.10" y="1215.5" ></text>
</g>
<g >
<title>rcu_core_si (521,554,456 samples, 0.01%)</title><rect x="60.1" y="1365" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="63.12" y="1375.5" ></text>
</g>
<g >
<title>[ls] (2,256,039,705 samples, 0.06%)</title><rect x="18.2" y="1509" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.16" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (376,700,280 samples, 0.01%)</title><rect x="913.7" y="1221" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="916.73" y="1231.5" ></text>
</g>
<g >
<title>ext4_writepages (615,814,246 samples, 0.02%)</title><rect x="1034.5" y="1381" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1037.49" y="1391.5" ></text>
</g>
<g >
<title>kmem_cache_free (349,484,897 samples, 0.01%)</title><rect x="24.1" y="1413" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="27.07" y="1423.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,079,792,665 samples, 0.03%)</title><rect x="28.1" y="1301" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="31.15" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="261" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="271.5" ></text>
</g>
<g >
<title>lind_open (441,483,346 samples, 0.01%)</title><rect x="453.3" y="1509" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="456.28" y="1519.5" ></text>
</g>
<g >
<title>do_idle (348,264,920 samples, 0.01%)</title><rect x="16.1" y="1461" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="19.08" y="1471.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (1,928,971,929 samples, 0.05%)</title><rect x="64.9" y="1557" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="67.88" y="1567.5" ></text>
</g>
<g >
<title>native_sched_clock (1,022,248,830 samples, 0.03%)</title><rect x="1132.1" y="1365" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1135.06" y="1375.5" ></text>
</g>
<g >
<title>update_min_vruntime (1,047,861,544 samples, 0.03%)</title><rect x="675.1" y="1285" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="678.13" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (382,208,707 samples, 0.01%)</title><rect x="1015.5" y="1573" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1018.50" y="1583.5" ></text>
</g>
<g >
<title>copy_present_pte (443,364,415 samples, 0.01%)</title><rect x="50.7" y="1269" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="53.66" y="1279.5" ></text>
</g>
<g >
<title>__do_softirq (2,142,324,206 samples, 0.05%)</title><rect x="38.0" y="1365" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="40.96" y="1375.5" ></text>
</g>
<g >
<title>rcu_core_si (560,415,501 samples, 0.01%)</title><rect x="696.1" y="1349" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="699.10" y="1359.5" ></text>
</g>
<g >
<title>rcu_core_si (821,143,868 samples, 0.02%)</title><rect x="1134.9" y="1413" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1137.91" y="1423.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (1,508,502,703 samples, 0.04%)</title><rect x="449.4" y="1493" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="452.36" y="1503.5" ></text>
</g>
<g >
<title>psi_task_switch (2,285,046,875 samples, 0.06%)</title><rect x="44.4" y="1477" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="47.45" y="1487.5" ></text>
</g>
<g >
<title>available_idle_cpu (7,904,302,959 samples, 0.20%)</title><rect x="719.9" y="1269" width="2.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="722.88" y="1279.5" ></text>
</g>
<g >
<title>put_unused_fd (1,353,613,177 samples, 0.03%)</title><rect x="882.9" y="1349" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="885.90" y="1359.5" ></text>
</g>
<g >
<title>futex_wait_queue (121,094,007,603 samples, 3.00%)</title><rect x="588.9" y="1317" width="35.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="591.87" y="1327.5" >fut..</text>
</g>
<g >
<title>schedule_idle (8,885,994,607 samples, 0.22%)</title><rect x="43.0" y="1509" width="2.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="45.97" y="1519.5" ></text>
</g>
<g >
<title>xas_descend (1,486,706,965 samples, 0.04%)</title><rect x="861.6" y="1205" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="864.57" y="1215.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,992,426,818 samples, 0.05%)</title><rect x="570.3" y="1381" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="573.26" y="1391.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13,539,066,850 samples, 0.34%)</title><rect x="25.5" y="1413" width="4.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="28.54" y="1423.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,612,410,345 samples, 0.04%)</title><rect x="1142.6" y="1461" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1145.58" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="645" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="655.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (1,967,123,318 samples, 0.05%)</title><rect x="1169.2" y="1573" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1172.24" y="1583.5" ></text>
</g>
<g >
<title>file_free_rcu (1,965,665,697 samples, 0.05%)</title><rect x="1158.7" y="1253" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1161.68" y="1263.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (4,366,409,963 samples, 0.11%)</title><rect x="48.7" y="1509" width="1.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="51.66" y="1519.5" ></text>
</g>
<g >
<title>enqueue_task (352,244,980 samples, 0.01%)</title><rect x="47.5" y="1381" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="50.46" y="1391.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (1,774,894,317 samples, 0.04%)</title><rect x="948.2" y="1349" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="951.21" y="1359.5" ></text>
</g>
<g >
<title>sock_free_inode (2,468,659,965 samples, 0.06%)</title><rect x="1172.1" y="1301" width="0.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1175.10" y="1311.5" ></text>
</g>
<g >
<title>refill_obj_stock (349,755,023 samples, 0.01%)</title><rect x="822.4" y="1221" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="825.45" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="469" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="479.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (430,475,022 samples, 0.01%)</title><rect x="899.6" y="1285" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="902.62" y="1295.5" ></text>
</g>
<g >
<title>[sel_ldr] (370,102,799,031 samples, 9.17%)</title><rect x="67.3" y="1557" width="108.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="70.25" y="1567.5" >[sel_ldr]</text>
</g>
<g >
<title>exit_to_user_mode_prepare (41,283,007,371 samples, 1.02%)</title><rect x="632.1" y="1349" width="12.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="635.12" y="1359.5" ></text>
</g>
<g >
<title>rcu_core_si (442,418,611 samples, 0.01%)</title><rect x="560.7" y="1221" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="563.72" y="1231.5" ></text>
</g>
<g >
<title>file_free_rcu (5,514,413,626 samples, 0.14%)</title><rect x="1109.2" y="1301" width="1.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1112.24" y="1311.5" ></text>
</g>
<g >
<title>i_callback (2,418,609,853 samples, 0.06%)</title><rect x="1032.5" y="1429" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1035.49" y="1439.5" ></text>
</g>
<g >
<title>new_inode_pseudo (105,282,387,228 samples, 2.61%)</title><rect x="792.7" y="1317" width="30.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="795.72" y="1327.5" >ne..</text>
</g>
<g >
<title>generic_write_end (1,328,455,165 samples, 0.03%)</title><rect x="58.2" y="1221" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="61.25" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1349" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="1359.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,300,127,598 samples, 0.06%)</title><rect x="26.6" y="1301" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="29.61" y="1311.5" ></text>
</g>
<g >
<title>bprm_execve (570,424,695 samples, 0.01%)</title><rect x="23.3" y="1509" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="26.30" y="1519.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (690,590,006 samples, 0.02%)</title><rect x="666.5" y="1285" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="669.45" y="1295.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (2,017,055,494 samples, 0.05%)</title><rect x="1050.6" y="1285" width="0.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1053.63" y="1295.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (342,660,645 samples, 0.01%)</title><rect x="759.3" y="1349" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="762.26" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (411,456,329 samples, 0.01%)</title><rect x="14.2" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.16" y="1423.5" ></text>
</g>
<g >
<title>execve (347,256,638 samples, 0.01%)</title><rect x="1016.2" y="1237" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1019.24" y="1247.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (2,740,662,311 samples, 0.07%)</title><rect x="1055.4" y="1269" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1058.43" y="1279.5" ></text>
</g>
<g >
<title>rcu_do_batch (687,563,463 samples, 0.02%)</title><rect x="666.5" y="1221" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="669.45" y="1231.5" ></text>
</g>
<g >
<title>rcu_core_si (2,308,893,763 samples, 0.06%)</title><rect x="1180.8" y="1349" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1183.83" y="1359.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (425,691,710 samples, 0.01%)</title><rect x="734.0" y="1381" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="736.97" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_execve (764,965,258 samples, 0.02%)</title><rect x="1168.8" y="1541" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1171.79" y="1551.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (1,590,388,432 samples, 0.04%)</title><rect x="405.1" y="1525" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="408.10" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,066,676,642 samples, 0.05%)</title><rect x="51.4" y="997" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.41" y="1007.5" ></text>
</g>
<g >
<title>v8::internal::Object::GetPropertyWithAccessor (384,929,366 samples, 0.01%)</title><rect x="50.1" y="1477" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="53.11" y="1487.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (490,066,374 samples, 0.01%)</title><rect x="718.0" y="1269" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="721.05" y="1279.5" ></text>
</g>
<g >
<title>file_free_rcu (475,708,565 samples, 0.01%)</title><rect x="685.4" y="1317" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="688.37" y="1327.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (2,461,071,951 samples, 0.06%)</title><rect x="927.4" y="1205" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="930.43" y="1215.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (7,899,861,619 samples, 0.20%)</title><rect x="945.7" y="1445" width="2.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="948.69" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (711,315,768 samples, 0.02%)</title><rect x="11.8" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.85" y="1567.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (38,360,468,557 samples, 0.95%)</title><rect x="852.1" y="1269" width="11.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="855.06" y="1279.5" ></text>
</g>
<g >
<title>kmem_cache_free (886,014,115 samples, 0.02%)</title><rect x="1159.3" y="1221" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1162.27" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="677" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="687.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (788,310,305 samples, 0.02%)</title><rect x="15.1" y="1397" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="18.13" y="1407.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (533,543,912 samples, 0.01%)</title><rect x="23.1" y="1573" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="26.11" y="1583.5" ></text>
</g>
<g >
<title>pick_next_task_fair (15,177,614,110 samples, 0.38%)</title><rect x="561.3" y="1285" width="4.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="564.34" y="1295.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (421,179,591 samples, 0.01%)</title><rect x="734.0" y="1349" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="736.97" y="1359.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (443,174,984 samples, 0.01%)</title><rect x="1005.8" y="1557" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1008.75" y="1567.5" ></text>
</g>
<g >
<title>do_iter_write (5,448,007,772 samples, 0.14%)</title><rect x="57.1" y="1317" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="60.12" y="1327.5" ></text>
</g>
<g >
<title>[bash] (643,773,959 samples, 0.02%)</title><rect x="1016.7" y="1317" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1019.71" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="421" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="431.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (3,115,092,525 samples, 0.08%)</title><rect x="1142.3" y="1477" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1145.26" y="1487.5" ></text>
</g>
<g >
<title>irq_exit_rcu (442,418,611 samples, 0.01%)</title><rect x="560.7" y="1269" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="563.72" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="533" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="543.5" ></text>
</g>
<g >
<title>call_rcu (10,621,702,427 samples, 0.26%)</title><rect x="921.0" y="1157" width="3.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="923.95" y="1167.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (5,659,254,583 samples, 0.14%)</title><rect x="1151.0" y="1477" width="1.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1154.02" y="1487.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (12,593,535,577 samples, 0.31%)</title><rect x="812.0" y="1253" width="3.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="815.03" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,440,928,554 samples, 0.06%)</title><rect x="51.4" y="1125" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.40" y="1135.5" ></text>
</g>
<g >
<title>__d_alloc (374,318,893 samples, 0.01%)</title><rect x="824.5" y="1301" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="827.51" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,929,931,488 samples, 0.05%)</title><rect x="1189.3" y="1445" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.32" y="1455.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (435,310,815 samples, 0.01%)</title><rect x="576.4" y="1349" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="579.44" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1093" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1103.5" ></text>
</g>
<g >
<title>mmput (415,730,636 samples, 0.01%)</title><rect x="1030.6" y="1477" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1033.62" y="1487.5" ></text>
</g>
<g >
<title>vfs_read (1,836,693,971 samples, 0.05%)</title><rect x="1189.3" y="1381" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1192.34" y="1391.5" ></text>
</g>
<g >
<title>copyout (870,813,418 samples, 0.02%)</title><rect x="1189.5" y="1221" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.53" y="1231.5" ></text>
</g>
<g >
<title>start_secondary (713,633,585 samples, 0.02%)</title><rect x="59.2" y="1557" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="62.16" y="1567.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (959,404,096 samples, 0.02%)</title><rect x="1150.5" y="1429" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1153.50" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,149,446,939 samples, 0.03%)</title><rect x="52.9" y="117" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="127.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1,021,341,888 samples, 0.03%)</title><rect x="682.3" y="1397" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="685.34" y="1407.5" ></text>
</g>
<g >
<title>get_page_from_freelist (13,228,566,230 samples, 0.33%)</title><rect x="803.8" y="1173" width="3.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="806.82" y="1183.5" ></text>
</g>
<g >
<title>unmap_single_vma (4,942,835,764 samples, 0.12%)</title><rect x="55.3" y="1333" width="1.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="58.34" y="1343.5" ></text>
</g>
<g >
<title>place_entity (412,210,169 samples, 0.01%)</title><rect x="1129.1" y="1413" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1132.12" y="1423.5" ></text>
</g>
<g >
<title>call_cpuidle (46,198,898,045 samples, 1.15%)</title><rect x="25.2" y="1493" width="13.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="28.15" y="1503.5" ></text>
</g>
<g >
<title>__rcu_read_lock (402,830,811 samples, 0.01%)</title><rect x="904.7" y="1237" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="907.69" y="1247.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (4,694,592,580 samples, 0.12%)</title><rect x="51.2" y="1525" width="1.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="54.21" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,313,711,253 samples, 0.06%)</title><rect x="18.8" y="1429" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.84" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (394,095,727 samples, 0.01%)</title><rect x="14.7" y="1509" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="17.71" y="1519.5" ></text>
</g>
<g >
<title>__do_softirq (14,233,770,373 samples, 0.35%)</title><rect x="1108.9" y="1365" width="4.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1111.94" y="1375.5" ></text>
</g>
<g >
<title>intel_idle (530,130,396 samples, 0.01%)</title><rect x="13.5" y="1445" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="16.54" y="1455.5" ></text>
</g>
<g >
<title>do_futex (486,327,370 samples, 0.01%)</title><rect x="631.4" y="1365" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="634.36" y="1375.5" ></text>
</g>
<g >
<title>rcu_core_si (906,942,614 samples, 0.02%)</title><rect x="612.7" y="1173" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="615.70" y="1183.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,956,404,947 samples, 0.05%)</title><rect x="11.2" y="1461" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.22" y="1471.5" ></text>
</g>
<g >
<title>up_write (348,068,570 samples, 0.01%)</title><rect x="940.3" y="1269" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="943.29" y="1279.5" ></text>
</g>
<g >
<title>free_slab (355,999,903 samples, 0.01%)</title><rect x="1053.7" y="1205" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1056.70" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,033,183,797 samples, 0.03%)</title><rect x="51.4" y="581" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.44" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="821" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="831.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (413,472,298 samples, 0.01%)</title><rect x="885.5" y="1365" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="888.49" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_clone (4,245,307,056 samples, 0.11%)</title><rect x="48.7" y="1381" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="51.67" y="1391.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (3,680,614,853 samples, 0.09%)</title><rect x="1188.0" y="1557" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1190.98" y="1567.5" ></text>
</g>
<g >
<title>aeMain (3,112,343,895 samples, 0.08%)</title><rect x="1189.1" y="1525" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1192.09" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (886,713,091 samples, 0.02%)</title><rect x="51.4" y="517" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.44" y="527.5" ></text>
</g>
<g >
<title>copyin (513,962,117 samples, 0.01%)</title><rect x="57.2" y="1221" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="60.24" y="1231.5" ></text>
</g>
<g >
<title>__calc_delta (1,560,974,435 samples, 0.04%)</title><rect x="604.0" y="1205" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="607.01" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1109" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="1119.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (586,057,654 samples, 0.01%)</title><rect x="1009.7" y="1557" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1012.69" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="901" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="911.5" ></text>
</g>
<g >
<title>mmput (6,167,468,758 samples, 0.15%)</title><rect x="55.0" y="1397" width="1.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="57.98" y="1407.5" ></text>
</g>
<g >
<title>rcu_core_si (14,003,761,659 samples, 0.35%)</title><rect x="1108.9" y="1349" width="4.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1111.94" y="1359.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (5,291,793,918 samples, 0.13%)</title><rect x="1153.3" y="1509" width="1.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1156.26" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (438,691,667 samples, 0.01%)</title><rect x="14.2" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.16" y="1439.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1,919,792,165 samples, 0.05%)</title><rect x="453.5" y="1205" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="456.51" y="1215.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (4,447,488,758 samples, 0.11%)</title><rect x="48.6" y="1541" width="1.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="51.65" y="1551.5" ></text>
</g>
<g >
<title>[ls] (719,009,704 samples, 0.02%)</title><rect x="21.8" y="1557" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="24.82" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,141,656,684 samples, 0.03%)</title><rect x="51.4" y="645" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.43" y="655.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (588,159,223 samples, 0.01%)</title><rect x="801.1" y="1285" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="804.06" y="1295.5" ></text>
</g>
<g >
<title>ttwu_do_activate (42,017,005,521 samples, 1.04%)</title><rect x="1120.3" y="1461" width="12.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1123.27" y="1471.5" ></text>
</g>
<g >
<title>filemap_read (1,904,024,493 samples, 0.05%)</title><rect x="453.5" y="1189" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="456.51" y="1199.5" ></text>
</g>
<g >
<title>runc:[1:CHILD] (5,449,968,857 samples, 0.14%)</title><rect x="59.4" y="1589" width="1.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="62.42" y="1599.5" ></text>
</g>
<g >
<title>__slab_free (788,569,245 samples, 0.02%)</title><rect x="1172.3" y="1269" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1175.25" y="1279.5" ></text>
</g>
<g >
<title>__mutex_init (603,016,835 samples, 0.01%)</title><rect x="827.6" y="1269" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="830.62" y="1279.5" ></text>
</g>
<g >
<title>setlocale (591,041,720 samples, 0.01%)</title><rect x="14.2" y="1509" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="17.16" y="1519.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (7,395,569,452 samples, 0.18%)</title><rect x="1182.4" y="1477" width="2.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1185.37" y="1487.5" ></text>
</g>
<g >
<title>memcg_alloc_slab_cgroups (1,927,323,980 samples, 0.05%)</title><rect x="807.7" y="1205" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="810.74" y="1215.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (425,691,710 samples, 0.01%)</title><rect x="734.0" y="1397" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="736.97" y="1407.5" ></text>
</g>
<g >
<title>cache_from_obj (469,375,295 samples, 0.01%)</title><rect x="935.8" y="1269" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="938.82" y="1279.5" ></text>
</g>
<g >
<title>mod_objcg_state (359,660,167 samples, 0.01%)</title><rect x="27.8" y="1269" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="30.83" y="1279.5" ></text>
</g>
<g >
<title>menu_select (1,680,433,995 samples, 0.04%)</title><rect x="1181.6" y="1477" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1184.63" y="1487.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (411,212,622 samples, 0.01%)</title><rect x="774.6" y="1333" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="777.56" y="1343.5" ></text>
</g>
<g >
<title>node (30,528,151,525 samples, 0.76%)</title><rect x="47.9" y="1589" width="8.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="50.86" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="149" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="159.5" ></text>
</g>
<g >
<title>worker_thread (1,326,141,549 samples, 0.03%)</title><rect x="1034.3" y="1525" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1037.30" y="1535.5" ></text>
</g>
<g >
<title>NaClIsValidClockId (3,698,983,526 samples, 0.09%)</title><rect x="391.8" y="1493" width="1.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="394.76" y="1503.5" ></text>
</g>
<g >
<title>execute_command_internal (959,707,757 samples, 0.02%)</title><rect x="1016.1" y="1285" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1019.07" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="981" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="991.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,095,646,822 samples, 0.05%)</title><rect x="570.2" y="1397" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="573.23" y="1407.5" ></text>
</g>
<g >
<title>get_futex_key (700,917,822 samples, 0.02%)</title><rect x="630.6" y="1301" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="633.61" y="1311.5" ></text>
</g>
<g >
<title>up_write (3,411,802,228 samples, 0.08%)</title><rect x="939.0" y="1253" width="1.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="941.99" y="1263.5" ></text>
</g>
<g >
<title>place_entity (1,534,473,590 samples, 0.04%)</title><rect x="1125.3" y="1397" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1128.31" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (571,868,276 samples, 0.01%)</title><rect x="61.5" y="1573" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="64.52" y="1583.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,499,642,906 samples, 0.04%)</title><rect x="840.1" y="1173" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="843.13" y="1183.5" ></text>
</g>
<g >
<title>NaClLog (593,270,819 samples, 0.01%)</title><rect x="64.7" y="1557" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="67.71" y="1567.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (479,601,478 samples, 0.01%)</title><rect x="560.7" y="1285" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="563.71" y="1295.5" ></text>
</g>
<g >
<title>__switch_to (3,010,728,888 samples, 0.07%)</title><rect x="1140.3" y="1477" width="0.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1143.30" y="1487.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (2,223,209,556 samples, 0.06%)</title><rect x="453.4" y="1445" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="456.45" y="1455.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,502,372,438 samples, 0.09%)</title><rect x="15.1" y="1541" width="1.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="18.05" y="1551.5" ></text>
</g>
<g >
<title>[sleep] (1,961,443,927 samples, 0.05%)</title><rect x="1018.5" y="1573" width="0.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1021.49" y="1583.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (602,146,324 samples, 0.01%)</title><rect x="11.9" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.86" y="1551.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (2,589,370,589 samples, 0.06%)</title><rect x="787.0" y="1317" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="790.03" y="1327.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (759,472,154 samples, 0.02%)</title><rect x="756.7" y="1365" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="759.69" y="1375.5" ></text>
</g>
<g >
<title>v8::internal::Heap::Scavenge (476,631,761 samples, 0.01%)</title><rect x="53.9" y="1429" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="56.90" y="1439.5" ></text>
</g>
<g >
<title>d_instantiate (660,326,114 samples, 0.02%)</title><rect x="869.1" y="1317" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="872.05" y="1327.5" ></text>
</g>
<g >
<title>__rcu_read_lock (666,348,359 samples, 0.02%)</title><rect x="843.3" y="1237" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="846.33" y="1247.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (574,433,812 samples, 0.01%)</title><rect x="60.1" y="1429" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="63.12" y="1439.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (1,659,145,443 samples, 0.04%)</title><rect x="572.5" y="1397" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="575.48" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_enter (425,835,429 samples, 0.01%)</title><rect x="58.8" y="1477" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="61.83" y="1487.5" ></text>
</g>
<g >
<title>rcu_core_si (472,996,789 samples, 0.01%)</title><rect x="1163.0" y="1285" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1166.03" y="1295.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (483,730,839 samples, 0.01%)</title><rect x="859.4" y="1237" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="862.42" y="1247.5" ></text>
</g>
<g >
<title>fput (4,583,372,915 samples, 0.11%)</title><rect x="778.4" y="1333" width="1.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="781.43" y="1343.5" ></text>
</g>
<g >
<title>exit_mmap (5,139,102,400 samples, 0.13%)</title><rect x="1029.0" y="1365" width="1.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1032.03" y="1375.5" ></text>
</g>
<g >
<title>do_idle (456,845,637 samples, 0.01%)</title><rect x="1017.3" y="1525" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1020.34" y="1535.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (540,536,813 samples, 0.01%)</title><rect x="1034.5" y="1333" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1037.49" y="1343.5" ></text>
</g>
<g >
<title>__calc_delta (1,533,475,198 samples, 0.04%)</title><rect x="669.3" y="1301" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="672.25" y="1311.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (761,443,748 samples, 0.02%)</title><rect x="1168.8" y="1493" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1171.79" y="1503.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (1,199,349,828 samples, 0.03%)</title><rect x="1025.9" y="1573" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1028.86" y="1583.5" ></text>
</g>
<g >
<title>sock_free_inode (925,277,891 samples, 0.02%)</title><rect x="1159.3" y="1237" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1162.27" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (660,495,047 samples, 0.02%)</title><rect x="866.1" y="1285" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="869.08" y="1295.5" ></text>
</g>
<g >
<title>__slab_free (5,060,128,989 samples, 0.13%)</title><rect x="1056.9" y="1285" width="1.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1059.88" y="1295.5" ></text>
</g>
<g >
<title>update_min_vruntime (524,105,642 samples, 0.01%)</title><rect x="565.3" y="1253" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="568.33" y="1263.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (459,769,403 samples, 0.01%)</title><rect x="1017.1" y="1493" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1020.11" y="1503.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (10,010,210,295 samples, 0.25%)</title><rect x="924.1" y="1173" width="3.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="927.12" y="1183.5" ></text>
</g>
<g >
<title>vfs_read (895,766,271 samples, 0.02%)</title><rect x="1025.4" y="1493" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1028.38" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,826,604,689 samples, 0.05%)</title><rect x="1171.5" y="1301" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1174.53" y="1311.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (805,701,063 samples, 0.02%)</title><rect x="16.6" y="1541" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="19.62" y="1551.5" ></text>
</g>
<g >
<title>__do_softirq (10,646,056,513 samples, 0.26%)</title><rect x="1031.1" y="1493" width="3.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1034.10" y="1503.5" ></text>
</g>
<g >
<title>file_free_rcu (4,967,944,676 samples, 0.12%)</title><rect x="25.8" y="1317" width="1.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="28.85" y="1327.5" ></text>
</g>
<g >
<title>sched_clock (1,439,642,543 samples, 0.04%)</title><rect x="725.7" y="1269" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="728.66" y="1279.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::lock_exclusive_slow (499,287,529,780 samples, 12.38%)</title><rect x="502.1" y="1429" width="146.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="505.13" y="1439.5" >dashmap::lock::Raw..</text>
</g>
<g >
<title>____fput (154,016,783,101 samples, 3.82%)</title><rect x="896.1" y="1317" width="45.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="899.15" y="1327.5" >____..</text>
</g>
<g >
<title>aa_sk_perm (2,051,248,121 samples, 0.05%)</title><rect x="787.2" y="1301" width="0.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="790.18" y="1311.5" ></text>
</g>
<g >
<title>aa_sk_perm (471,386,770 samples, 0.01%)</title><rect x="786.9" y="1317" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="789.89" y="1327.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (19,873,156,633 samples, 0.49%)</title><rect x="888.4" y="1333" width="5.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="891.42" y="1343.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (402,357,423 samples, 0.01%)</title><rect x="785.0" y="1285" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="787.96" y="1295.5" ></text>
</g>
<g >
<title>[expr] (2,310,224,620 samples, 0.06%)</title><rect x="11.2" y="1573" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="14.16" y="1583.5" ></text>
</g>
<g >
<title>security_inode_alloc (15,664,547,487 samples, 0.39%)</title><rect x="796.5" y="1269" width="4.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="799.47" y="1279.5" ></text>
</g>
<g >
<title>NaClLog (8,636,919,153 samples, 0.21%)</title><rect x="450.4" y="1509" width="2.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="453.37" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,083,705,511 samples, 0.05%)</title><rect x="51.4" y="1029" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.40" y="1039.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (706,591,666 samples, 0.02%)</title><rect x="666.4" y="1333" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="669.45" y="1343.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1,924,956,280 samples, 0.05%)</title><rect x="853.9" y="1253" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="856.88" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,625,508,838 samples, 0.04%)</title><rect x="1018.5" y="1429" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1021.51" y="1439.5" ></text>
</g>
<g >
<title>v8::internal::ScavengerCollector::CollectGarbage (476,631,761 samples, 0.01%)</title><rect x="53.9" y="1413" width="0.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="56.90" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1317" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1327.5" ></text>
</g>
<g >
<title>__mmput (6,167,468,758 samples, 0.15%)</title><rect x="55.0" y="1381" width="1.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="57.98" y="1391.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (8,493,513,961 samples, 0.21%)</title><rect x="832.7" y="1237" width="2.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="835.72" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,445,139,585 samples, 0.04%)</title><rect x="52.9" y="1541" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.90" y="1551.5" ></text>
</g>
<g >
<title>refill_obj_stock (1,899,877,728 samples, 0.05%)</title><rect x="1050.7" y="1269" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1053.67" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (561,973,619 samples, 0.01%)</title><rect x="653.8" y="1429" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="656.81" y="1439.5" ></text>
</g>
<g >
<title>kmem_cache_free (483,467,686 samples, 0.01%)</title><rect x="38.2" y="1269" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="41.23" y="1279.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (847,686,913 samples, 0.02%)</title><rect x="1056.0" y="1237" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1058.96" y="1247.5" ></text>
</g>
<g >
<title>syscall (103,329,168,962 samples, 2.56%)</title><rect x="697.5" y="1429" width="30.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="700.54" y="1439.5" >sy..</text>
</g>
<g >
<title>__do_softirq (442,418,611 samples, 0.01%)</title><rect x="560.7" y="1237" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="563.72" y="1247.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (573,132,797 samples, 0.01%)</title><rect x="11.9" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.86" y="1535.5" ></text>
</g>
<g >
<title>update_min_vruntime (2,234,679,526 samples, 0.06%)</title><rect x="675.4" y="1301" width="0.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="678.44" y="1311.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::nonblock_accept (367,126,986 samples, 0.01%)</title><rect x="1010.9" y="1557" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1013.94" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="949" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="959.5" ></text>
</g>
<g >
<title>[anon] (788,827,556 samples, 0.02%)</title><rect x="47.9" y="1573" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="50.89" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,037,129,397 samples, 0.10%)</title><rect x="342.8" y="1509" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="345.80" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="933" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (5,144,619,530 samples, 0.13%)</title><rect x="554.5" y="1397" width="1.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="557.48" y="1407.5" ></text>
</g>
<g >
<title>update_curr (5,915,574,469 samples, 0.15%)</title><rect x="603.3" y="1221" width="1.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="606.28" y="1231.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1,453,721,104 samples, 0.04%)</title><rect x="43.9" y="1461" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="46.85" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (590,873,455,555 samples, 14.65%)</title><rect x="770.5" y="1413" width="172.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="773.51" y="1423.5" >entry_SYSCALL_64_after..</text>
</g>
<g >
<title>iput (374,781,427 samples, 0.01%)</title><rect x="931.2" y="1253" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="934.20" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1429" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1439.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (1,909,865,690 samples, 0.05%)</title><rect x="1137.7" y="1509" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1140.74" y="1519.5" ></text>
</g>
<g >
<title>sock_close (548,859,523 samples, 0.01%)</title><rect x="941.0" y="1301" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="944.04" y="1311.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (394,016,635 samples, 0.01%)</title><rect x="631.6" y="1365" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="634.61" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,147,516,797 samples, 0.05%)</title><rect x="1168.6" y="1557" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1171.59" y="1567.5" ></text>
</g>
<g >
<title>__tls_get_addr (346,320,063 samples, 0.01%)</title><rect x="685.2" y="1445" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="688.20" y="1455.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,206,388,067 samples, 0.08%)</title><rect x="60.1" y="1573" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="63.08" y="1583.5" ></text>
</g>
<g >
<title>dup_mmap (1,834,847,920 samples, 0.05%)</title><rect x="50.3" y="1333" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="53.32" y="1343.5" ></text>
</g>
<g >
<title>rcu_core (591,425,429 samples, 0.01%)</title><rect x="13.4" y="1349" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="16.36" y="1359.5" ></text>
</g>
<g >
<title>NaClSysPreadDecoder (2,456,736,588 samples, 0.06%)</title><rect x="453.4" y="1541" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="456.40" y="1551.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1,749,102,875 samples, 0.04%)</title><rect x="758.8" y="1365" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="761.84" y="1375.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (561,556,580 samples, 0.01%)</title><rect x="47.4" y="1429" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="50.42" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,016,980,158 samples, 0.05%)</title><rect x="60.1" y="1509" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="63.11" y="1519.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (1,113,160,927 samples, 0.03%)</title><rect x="818.3" y="1221" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="821.26" y="1231.5" ></text>
</g>
<g >
<title>copy_p4d_range (489,035,476 samples, 0.01%)</title><rect x="1168.6" y="1429" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1171.62" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (621,123,681 samples, 0.02%)</title><rect x="762.3" y="1397" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="765.28" y="1407.5" ></text>
</g>
<g >
<title>do_idle (26,555,532,403 samples, 0.66%)</title><rect x="1158.2" y="1461" width="7.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1161.24" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1413" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1423.5" ></text>
</g>
<g >
<title>get_futex_key (987,701,944 samples, 0.02%)</title><rect x="712.3" y="1333" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="715.28" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,440,928,554 samples, 0.06%)</title><rect x="51.4" y="1141" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.40" y="1151.5" ></text>
</g>
<g >
<title>intel_idle (838,182,011 samples, 0.02%)</title><rect x="15.4" y="1445" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="18.37" y="1455.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,485,666,335 samples, 0.06%)</title><rect x="1110.1" y="1285" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1113.11" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1221" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="1231.5" ></text>
</g>
<g >
<title>__filemap_get_folio (1,861,874,727 samples, 0.05%)</title><rect x="57.4" y="1221" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="60.40" y="1231.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,057,407,120 samples, 0.03%)</title><rect x="1040.2" y="1349" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1043.24" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="165" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,917,810,444 samples, 0.10%)</title><rect x="1008.5" y="1557" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1011.54" y="1567.5" ></text>
</g>
<g >
<title>__do_sys_newstat (592,224,475 samples, 0.01%)</title><rect x="52.4" y="1445" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="55.37" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="901" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="911.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (401,551,209 samples, 0.01%)</title><rect x="951.9" y="1333" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="954.85" y="1343.5" ></text>
</g>
<g >
<title>kmem_cache_free (413,593,152 samples, 0.01%)</title><rect x="1181.0" y="1285" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1184.03" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="741" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="751.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (373,113,830 samples, 0.01%)</title><rect x="1112.1" y="1253" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1115.06" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_read (1,896,104,935 samples, 0.05%)</title><rect x="1189.3" y="1413" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1192.32" y="1423.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (158,658,976,216 samples, 3.93%)</title><rect x="347.2" y="1509" width="46.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="350.22" y="1519.5" >NaCl..</text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (470,809,959 samples, 0.01%)</title><rect x="841.6" y="1253" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="844.58" y="1263.5" ></text>
</g>
<g >
<title>release_sock (2,485,036,642 samples, 0.06%)</title><rect x="785.3" y="1301" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="788.35" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (709,300,512 samples, 0.02%)</title><rect x="51.4" y="469" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.45" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (221,913,999,001 samples, 5.50%)</title><rect x="579.4" y="1381" width="64.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="582.38" y="1391.5" >do_sysc..</text>
</g>
<g >
<title>skb_page_frag_refill (885,476,646 samples, 0.02%)</title><rect x="952.0" y="1333" width="0.3" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="955.02" y="1343.5" ></text>
</g>
<g >
<title>__mmput (715,058,046 samples, 0.02%)</title><rect x="1168.8" y="1381" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1171.80" y="1391.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (404,496,407 samples, 0.01%)</title><rect x="1143.0" y="1461" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1146.05" y="1471.5" ></text>
</g>
<g >
<title>security_inode_free (11,814,598,332 samples, 0.29%)</title><rect x="920.6" y="1173" width="3.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="923.61" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="965" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="56.32" y="975.5" ></text>
</g>
<g >
<title>shell_glob_filename (539,063,107 samples, 0.01%)</title><rect x="1015.9" y="1397" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1018.88" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (350,559,837 samples, 0.01%)</title><rect x="882.3" y="1317" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="885.33" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,204,736,881 samples, 0.05%)</title><rect x="54.2" y="1557" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="57.24" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="581" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="591.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (6,478,215,473 samples, 0.16%)</title><rect x="918.1" y="1157" width="1.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="921.13" y="1167.5" ></text>
</g>
<g >
<title>__slab_free (365,106,098 samples, 0.01%)</title><rect x="1159.3" y="1205" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1162.32" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (603,315,367 samples, 0.01%)</title><rect x="52.4" y="1477" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="55.37" y="1487.5" ></text>
</g>
<g >
<title>[[vdso]] (922,633,473 samples, 0.02%)</title><rect x="1008.3" y="1557" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1011.27" y="1567.5" ></text>
</g>
<g >
<title>sched_clock (5,553,756,778 samples, 0.14%)</title><rect x="678.9" y="1301" width="1.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="681.89" y="1311.5" ></text>
</g>
<g >
<title>set_next_entity (5,515,711,436 samples, 0.14%)</title><rect x="1144.4" y="1445" width="1.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1147.35" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (481,561,963 samples, 0.01%)</title><rect x="657.5" y="1413" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="660.51" y="1423.5" ></text>
</g>
<g >
<title>load_balance (691,979,194 samples, 0.02%)</title><rect x="614.5" y="1221" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="617.53" y="1231.5" ></text>
</g>
<g >
<title>ion (5,857,123,741 samples, 0.15%)</title><rect x="57.0" y="1461" width="1.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="60.01" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1173" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="629" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="639.5" ></text>
</g>
<g >
<title>kick_process (834,430,048 samples, 0.02%)</title><rect x="779.5" y="1301" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="782.53" y="1311.5" ></text>
</g>
<g >
<title>kmem_cache_free (371,792,298 samples, 0.01%)</title><rect x="1058.6" y="1317" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1061.56" y="1327.5" ></text>
</g>
<g >
<title>NaClXlateSysRet (608,885,148 samples, 0.02%)</title><rect x="421.6" y="1493" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="424.62" y="1503.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (840,728,465 samples, 0.02%)</title><rect x="1134.9" y="1477" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1137.90" y="1487.5" ></text>
</g>
<g >
<title>alloc_file (84,098,635,642 samples, 2.08%)</title><rect x="825.8" y="1301" width="24.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="828.79" y="1311.5" >a..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1509" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="1519.5" ></text>
</g>
<g >
<title>schedule (33,956,301,766 samples, 0.84%)</title><rect x="558.3" y="1333" width="9.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="561.27" y="1343.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (464,243,282 samples, 0.01%)</title><rect x="1188.7" y="1429" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1191.71" y="1439.5" ></text>
</g>
<g >
<title>[bash] (645,358,466 samples, 0.02%)</title><rect x="1016.7" y="1381" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1019.71" y="1391.5" ></text>
</g>
<g >
<title>__do_softirq (435,310,815 samples, 0.01%)</title><rect x="576.4" y="1333" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="579.44" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (368,535,888 samples, 0.01%)</title><rect x="52.7" y="661" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.71" y="671.5" ></text>
</g>
<g >
<title>memcg_account_kmem (451,685,639 samples, 0.01%)</title><rect x="862.9" y="1221" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="865.88" y="1231.5" ></text>
</g>
<g >
<title>kmem_cache_free (785,617,260 samples, 0.02%)</title><rect x="1159.0" y="1237" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1162.03" y="1247.5" ></text>
</g>
<g >
<title>schedule_idle (3,524,232,211 samples, 0.09%)</title><rect x="1164.7" y="1445" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1167.72" y="1455.5" ></text>
</g>
<g >
<title>kmem_cache_free (15,750,869,124 samples, 0.39%)</title><rect x="1051.8" y="1285" width="4.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1054.78" y="1295.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1,539,865,760 samples, 0.04%)</title><rect x="1150.3" y="1461" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1153.35" y="1471.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (392,348,000 samples, 0.01%)</title><rect x="680.9" y="1349" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="683.89" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (875,838,006 samples, 0.02%)</title><rect x="51.4" y="485" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.44" y="495.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (371,166,110 samples, 0.01%)</title><rect x="1010.5" y="1557" width="0.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1013.46" y="1567.5" ></text>
</g>
<g >
<title>vfs_iter_read (1,975,450,116 samples, 0.05%)</title><rect x="453.5" y="1269" width="0.6" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="456.50" y="1279.5" ></text>
</g>
<g >
<title>file_free_rcu (776,723,806 samples, 0.02%)</title><rect x="38.0" y="1301" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="40.99" y="1311.5" ></text>
</g>
<g >
<title>futex_wait_queue (660,490,622 samples, 0.02%)</title><rect x="631.0" y="1333" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="633.97" y="1343.5" ></text>
</g>
<g >
<title>[expr] (2,071,583,221 samples, 0.05%)</title><rect x="11.2" y="1525" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="14.22" y="1535.5" ></text>
</g>
<g >
<title>update_cfs_group (948,122,348 samples, 0.02%)</title><rect x="608.0" y="1237" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="611.04" y="1247.5" ></text>
</g>
<g >
<title>rcu_do_batch (2,092,308,563 samples, 0.05%)</title><rect x="38.0" y="1317" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="40.96" y="1327.5" ></text>
</g>
<g >
<title>__mmput (635,898,657 samples, 0.02%)</title><rect x="23.5" y="1461" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="26.48" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (392,918,575 samples, 0.01%)</title><rect x="56.9" y="1493" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="59.86" y="1503.5" ></text>
</g>
<g >
<title>native_sched_clock (875,213,910 samples, 0.02%)</title><rect x="1150.5" y="1413" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1153.53" y="1423.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (619,954,544 samples, 0.02%)</title><rect x="1165.8" y="1445" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1168.82" y="1455.5" ></text>
</g>
<g >
<title>call_function_single_prep_ipi (6,461,251,332 samples, 0.16%)</title><rect x="723.2" y="1269" width="1.8" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="726.15" y="1279.5" ></text>
</g>
<g >
<title>load_balance (1,020,285,377 samples, 0.03%)</title><rect x="1063.3" y="1333" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1066.27" y="1343.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (11,922,601,062 samples, 0.30%)</title><rect x="339.3" y="1509" width="3.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="342.31" y="1519.5" ></text>
</g>
<g >
<title>__mmput (415,730,636 samples, 0.01%)</title><rect x="1030.6" y="1461" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1033.62" y="1471.5" ></text>
</g>
<g >
<title>__slab_free (354,095,615 samples, 0.01%)</title><rect x="1159.6" y="1221" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1162.57" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,149,446,939 samples, 0.03%)</title><rect x="52.9" y="85" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="95.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (1,044,988,123 samples, 0.03%)</title><rect x="1154.5" y="1445" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1157.48" y="1455.5" ></text>
</g>
<g >
<title>mpage_submit_folio (447,500,405 samples, 0.01%)</title><rect x="1034.5" y="1317" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1037.52" y="1327.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (910,778,097 samples, 0.02%)</title><rect x="1186.9" y="1477" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1189.87" y="1487.5" ></text>
</g>
<g >
<title>bprm_execve (764,965,258 samples, 0.02%)</title><rect x="1168.8" y="1509" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1171.79" y="1519.5" ></text>
</g>
<g >
<title>ip_local_out (747,914,282 samples, 0.02%)</title><rect x="952.5" y="1269" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="955.53" y="1279.5" ></text>
</g>
<g >
<title>rcu_core_si (407,517,656 samples, 0.01%)</title><rect x="749.6" y="1237" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="752.58" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (531,571,782 samples, 0.01%)</title><rect x="61.5" y="1557" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="64.54" y="1567.5" ></text>
</g>
<g >
<title>rcu_do_batch (895,930,492 samples, 0.02%)</title><rect x="612.7" y="1141" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="615.70" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1237" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1247.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (832,530,077 samples, 0.02%)</title><rect x="62.9" y="1557" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="65.90" y="1567.5" ></text>
</g>
<g >
<title>start_secondary (466,131,805 samples, 0.01%)</title><rect x="61.7" y="1557" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="64.70" y="1567.5" ></text>
</g>
<g >
<title>file_free_rcu (3,586,779,010 samples, 0.09%)</title><rect x="1031.4" y="1429" width="1.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1034.45" y="1439.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (195,787,031,557 samples, 4.85%)</title><rect x="885.6" y="1365" width="57.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="888.61" y="1375.5" >exit_t..</text>
</g>
<g >
<title>ip_rcv (415,901,835 samples, 0.01%)</title><rect x="952.6" y="1029" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="955.56" y="1039.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (26,350,556,831 samples, 0.65%)</title><rect x="336.6" y="1525" width="7.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="339.65" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,418,659,732 samples, 0.04%)</title><rect x="22.2" y="1541" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="25.17" y="1551.5" ></text>
</g>
<g >
<title>rcu_do_batch (2,269,119,162 samples, 0.06%)</title><rect x="1180.8" y="1317" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1183.84" y="1327.5" ></text>
</g>
<g >
<title>apparmor_d_instantiate (1,564,485,371 samples, 0.04%)</title><rect x="867.7" y="1269" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="870.72" y="1279.5" ></text>
</g>
<g >
<title>__napi_poll (450,535,738 samples, 0.01%)</title><rect x="952.5" y="1093" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="955.55" y="1103.5" ></text>
</g>
<g >
<title>__do_softirq (13,537,045,784 samples, 0.34%)</title><rect x="25.5" y="1381" width="4.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="28.54" y="1391.5" ></text>
</g>
<g >
<title>[bash] (2,838,965,786 samples, 0.07%)</title><rect x="1016.1" y="1413" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1019.07" y="1423.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (4,342,163,786 samples, 0.11%)</title><rect x="48.7" y="1461" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="51.66" y="1471.5" ></text>
</g>
<g >
<title>file_free_rcu (4,100,436,862 samples, 0.10%)</title><rect x="1170.9" y="1317" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1173.89" y="1327.5" ></text>
</g>
<g >
<title>allocate_slab (958,457,776 samples, 0.02%)</title><rect x="800.4" y="1205" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="803.41" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_lock (8,236,269,701 samples, 0.20%)</title><rect x="790.1" y="1317" width="2.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="793.13" y="1327.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (492,580,864 samples, 0.01%)</title><rect x="800.7" y="1237" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="803.72" y="1247.5" ></text>
</g>
<g >
<title>blkcg_maybe_throttle_current (515,391,500 samples, 0.01%)</title><rect x="639.5" y="1317" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="642.55" y="1327.5" ></text>
</g>
<g >
<title>NaClSysClockGetTimeDecoder (951,219,219 samples, 0.02%)</title><rect x="1005.5" y="1557" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1008.47" y="1567.5" ></text>
</g>
<g >
<title>NaClSysPread (2,456,736,588 samples, 0.06%)</title><rect x="453.4" y="1525" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="456.40" y="1535.5" ></text>
</g>
<g >
<title>__slab_free (803,011,676 samples, 0.02%)</title><rect x="1032.0" y="1397" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1035.03" y="1407.5" ></text>
</g>
<g >
<title>futex_unqueue (1,002,368,996 samples, 0.02%)</title><rect x="582.9" y="1333" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="585.89" y="1343.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (840,728,465 samples, 0.02%)</title><rect x="1134.9" y="1493" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1137.90" y="1503.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1,984,727,005 samples, 0.05%)</title><rect x="647.5" y="1397" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="650.51" y="1407.5" ></text>
</g>
<g >
<title>uv_spawn (1,872,521,294 samples, 0.05%)</title><rect x="50.3" y="1525" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="53.32" y="1535.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (619,321,666 samples, 0.02%)</title><rect x="897.3" y="1285" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="900.30" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="261" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="271.5" ></text>
</g>
<g >
<title>__netif_receive_skb (436,197,046 samples, 0.01%)</title><rect x="952.6" y="1061" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="955.55" y="1071.5" ></text>
</g>
<g >
<title>rcu_do_batch (511,171,172 samples, 0.01%)</title><rect x="60.1" y="1333" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="63.12" y="1343.5" ></text>
</g>
<g >
<title>wake_up_bit (894,601,540 samples, 0.02%)</title><rect x="930.7" y="1205" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="933.71" y="1215.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (387,487,486 samples, 0.01%)</title><rect x="1110.5" y="1253" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1113.47" y="1263.5" ></text>
</g>
<g >
<title>NaClSysSelectDecoder (1,700,969,732,876 samples, 42.16%)</title><rect x="454.1" y="1541" width="497.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="457.14" y="1551.5" >NaClSysSelectDecoder</text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,049,720,750 samples, 0.03%)</title><rect x="762.0" y="1381" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="764.98" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (491,998,122 samples, 0.01%)</title><rect x="947.1" y="1397" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="950.07" y="1407.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (841,768,901 samples, 0.02%)</title><rect x="750.6" y="1333" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="753.58" y="1343.5" ></text>
</g>
<g >
<title>docker (1,557,434,208 samples, 0.04%)</title><rect x="10.2" y="1589" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="13.24" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,526,018,778 samples, 0.04%)</title><rect x="23.3" y="1573" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="26.27" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1445" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="1455.5" ></text>
</g>
<g >
<title>copyout (1,542,356,425 samples, 0.04%)</title><rect x="453.6" y="1141" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="456.55" y="1151.5" ></text>
</g>
<g >
<title>rcu_core (821,143,868 samples, 0.02%)</title><rect x="1134.9" y="1397" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1137.91" y="1407.5" ></text>
</g>
<g >
<title>rcu_do_batch (448,480,407 samples, 0.01%)</title><rect x="718.1" y="1173" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="721.05" y="1183.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (656,996,364 samples, 0.02%)</title><rect x="807.5" y="1141" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="810.49" y="1151.5" ></text>
</g>
<g >
<title>enqueue_entity (3,413,776,190 samples, 0.08%)</title><rect x="40.5" y="1413" width="1.0" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="43.50" y="1423.5" ></text>
</g>
<g >
<title>mod_objcg_state (3,573,926,748 samples, 0.09%)</title><rect x="907.0" y="1221" width="1.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="910.01" y="1231.5" ></text>
</g>
<g >
<title>cpu_startup_entry (421,107,132,028 samples, 10.44%)</title><rect x="1034.7" y="1541" width="123.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1037.69" y="1551.5" >cpu_startup_entry</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,949,843,622 samples, 0.05%)</title><rect x="51.4" y="981" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.41" y="991.5" ></text>
</g>
<g >
<title>update_cfs_group (499,960,964 samples, 0.01%)</title><rect x="40.9" y="1397" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.90" y="1407.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (2,104,447,944 samples, 0.05%)</title><rect x="622.8" y="1221" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="625.80" y="1231.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (81,177,294,747 samples, 2.01%)</title><rect x="1040.1" y="1445" width="23.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1043.09" y="1455.5" >a..</text>
</g>
<g >
<title>__irq_exit_rcu (493,945,629 samples, 0.01%)</title><rect x="1163.0" y="1317" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1166.03" y="1327.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (889,057,752 samples, 0.02%)</title><rect x="58.8" y="1573" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="61.81" y="1583.5" ></text>
</g>
<g >
<title>__ip_finish_output (719,899,835 samples, 0.02%)</title><rect x="952.5" y="1221" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="955.54" y="1231.5" ></text>
</g>
<g >
<title>__switch_to_asm (5,249,477,878 samples, 0.13%)</title><rect x="574.0" y="1397" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="576.95" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="805" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="815.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1,768,327,517 samples, 0.04%)</title><rect x="1157.1" y="1525" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1160.12" y="1535.5" ></text>
</g>
<g >
<title>rcu_core (2,308,893,763 samples, 0.06%)</title><rect x="1180.8" y="1333" width="0.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1183.83" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,528,092,214 samples, 0.09%)</title><rect x="17.0" y="1573" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.03" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="933" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="293" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="303.5" ></text>
</g>
<g >
<title>NaClXlateSysRet (734,542,287 samples, 0.02%)</title><rect x="1008.1" y="1557" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1011.06" y="1567.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (828,176,668 samples, 0.02%)</title><rect x="1134.9" y="1445" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1137.91" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="421" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="431.5" ></text>
</g>
<g >
<title>ct_idle_exit (2,141,627,583 samples, 0.05%)</title><rect x="1064.1" y="1445" width="0.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1067.09" y="1455.5" ></text>
</g>
<g >
<title>seq_read_iter (582,118,539 samples, 0.01%)</title><rect x="1025.4" y="1445" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1028.44" y="1455.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (384,929,366 samples, 0.01%)</title><rect x="50.1" y="1525" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="53.11" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (253,555,948,897 samples, 6.29%)</title><rect x="1039.0" y="1461" width="74.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1041.98" y="1471.5" >cpuidle_..</text>
</g>
<g >
<title>do_idle (416,803,236,057 samples, 10.33%)</title><rect x="1035.2" y="1525" width="121.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1038.21" y="1535.5" >do_idle</text>
</g>
<g >
<title>sock_free_inode (401,630,483 samples, 0.01%)</title><rect x="1169.4" y="1413" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1172.44" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (890,716,634 samples, 0.02%)</title><rect x="51.4" y="533" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.44" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="1125" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="789" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="799.5" ></text>
</g>
<g >
<title>[[vdso]] (1,572,172,892 samples, 0.04%)</title><rect x="392.8" y="1477" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="395.84" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,766,546,150 samples, 0.04%)</title><rect x="1018.5" y="1461" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1021.49" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="613" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="55.91" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="303.5" ></text>
</g>
<g >
<title>pick_next_task (9,920,598,503 samples, 0.25%)</title><rect x="613.0" y="1269" width="2.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="616.04" y="1279.5" ></text>
</g>
<g >
<title>pick_next_task_fair (506,208,593 samples, 0.01%)</title><rect x="1165.1" y="1397" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1168.05" y="1407.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (386,120,300 samples, 0.01%)</title><rect x="884.4" y="1365" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="887.35" y="1375.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (3,227,540,381 samples, 0.08%)</title><rect x="934.9" y="1269" width="0.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="937.87" y="1279.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2,594,835,140,681 samples, 64.32%)</title><rect x="193.9" y="1557" width="759.0" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="196.89" y="1567.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>kmem_cache_alloc (357,083,754 samples, 0.01%)</title><rect x="794.9" y="1269" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="797.88" y="1279.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (394,095,727 samples, 0.01%)</title><rect x="14.7" y="1461" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="17.71" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (110,979,343,700 samples, 2.75%)</title><rect x="730.5" y="1413" width="32.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="733.48" y="1423.5" >[l..</text>
</g>
<g >
<title>NaClClockGetTime (1,378,295,995 samples, 0.03%)</title><rect x="346.6" y="1509" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="349.62" y="1519.5" ></text>
</g>
<g >
<title>run_ksoftirqd (1,590,270,564 samples, 0.04%)</title><rect x="1169.3" y="1509" width="0.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1172.26" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (16,108,153,243 samples, 0.40%)</title><rect x="1158.5" y="1397" width="4.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1161.47" y="1407.5" ></text>
</g>
<g >
<title>i_callback (480,793,360 samples, 0.01%)</title><rect x="1181.1" y="1301" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1184.15" y="1311.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (459,929,281 samples, 0.01%)</title><rect x="718.1" y="1237" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="721.05" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,447,577,542 samples, 0.06%)</title><rect x="51.4" y="1157" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.40" y="1167.5" ></text>
</g>
<g >
<title>do_syscall_64 (739,395,801 samples, 0.02%)</title><rect x="13.0" y="1557" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="16.03" y="1567.5" ></text>
</g>
<g >
<title>v8::internal::Object::GetProperty (384,929,366 samples, 0.01%)</title><rect x="50.1" y="1493" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="53.11" y="1503.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (4,315,383,308 samples, 0.11%)</title><rect x="1001.8" y="1557" width="1.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1004.77" y="1567.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (548,117,711 samples, 0.01%)</title><rect x="927.1" y="1173" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="930.05" y="1183.5" ></text>
</g>
<g >
<title>_raw_spin_lock (7,773,333,668 samples, 0.19%)</title><rect x="752.1" y="1333" width="2.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="755.09" y="1343.5" ></text>
</g>
<g >
<title>record_times (393,482,230 samples, 0.01%)</title><rect x="1131.7" y="1397" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1134.70" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,201,182,060 samples, 0.03%)</title><rect x="52.9" y="1477" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.91" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_select (13,365,650,745 samples, 0.33%)</title><rect x="1113.6" y="1493" width="3.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1116.64" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,420,323,346 samples, 0.04%)</title><rect x="22.2" y="1557" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="25.17" y="1567.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (373,608,839 samples, 0.01%)</title><rect x="10.6" y="1573" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="13.58" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (360,172,545 samples, 0.01%)</title><rect x="762.9" y="1397" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="765.94" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="853" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="863.5" ></text>
</g>
<g >
<title>psi_flags_change (351,879,057 samples, 0.01%)</title><rect x="617.5" y="1253" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="620.48" y="1263.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (941,631,191 samples, 0.02%)</title><rect x="46.5" y="1381" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="49.52" y="1391.5" ></text>
</g>
<g >
<title>NaClSysWrite (3,918,267,896 samples, 0.10%)</title><rect x="951.7" y="1525" width="1.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="954.71" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_poll (379,748,156 samples, 0.01%)</title><rect x="56.9" y="1477" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="59.86" y="1487.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (608,506,512 samples, 0.02%)</title><rect x="684.7" y="1413" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="687.69" y="1423.5" ></text>
</g>
<g >
<title>ct_kernel_enter.constprop.0 (907,600,501 samples, 0.02%)</title><rect x="1064.2" y="1429" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1067.16" y="1439.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,539,066,850 samples, 0.34%)</title><rect x="25.5" y="1397" width="4.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="28.54" y="1407.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (628,330,709 samples, 0.02%)</title><rect x="800.2" y="1221" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="803.21" y="1231.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (909,255,709 samples, 0.02%)</title><rect x="839.7" y="1237" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="842.74" y="1247.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,821,392,752 samples, 0.34%)</title><rect x="25.5" y="1429" width="4.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="28.46" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (875,112,704 samples, 0.02%)</title><rect x="16.6" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="19.61" y="1567.5" ></text>
</g>
<g >
<title>kthread (1,953,231,174 samples, 0.05%)</title><rect x="1169.2" y="1541" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1172.24" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,071,583,221 samples, 0.05%)</title><rect x="11.2" y="1493" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.22" y="1503.5" ></text>
</g>
<g >
<title>cpu_startup_entry (74,477,446,948 samples, 1.85%)</title><rect x="24.6" y="1541" width="21.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="27.60" y="1551.5" >c..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="677" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="687.5" ></text>
</g>
<g >
<title>[bash] (744,838,807 samples, 0.02%)</title><rect x="1015.8" y="1413" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1018.82" y="1423.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (2,288,111,281 samples, 0.06%)</title><rect x="777.7" y="1333" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="780.74" y="1343.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (6,429,134,398 samples, 0.16%)</title><rect x="682.6" y="1397" width="1.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="685.64" y="1407.5" ></text>
</g>
<g >
<title>enqueue_task (5,448,077,117 samples, 0.14%)</title><rect x="1182.6" y="1445" width="1.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1185.57" y="1455.5" ></text>
</g>
<g >
<title>__fget_light (6,439,825,314 samples, 0.16%)</title><rect x="772.6" y="1333" width="1.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="775.56" y="1343.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2,025,492,157 samples, 0.05%)</title><rect x="726.9" y="1365" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="729.90" y="1375.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2,159,464,702 samples, 0.05%)</title><rect x="597.7" y="1269" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="600.67" y="1279.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::pread_syscall (2,430,410,521 samples, 0.06%)</title><rect x="453.4" y="1477" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="456.41" y="1487.5" ></text>
</g>
<g >
<title>__do_softirq (78,755,983,447 samples, 1.95%)</title><rect x="1040.8" y="1381" width="23.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1043.76" y="1391.5" >_..</text>
</g>
<g >
<title>__x64_sys_fcntl (999,376,243 samples, 0.02%)</title><rect x="739.4" y="1381" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="742.44" y="1391.5" ></text>
</g>
<g >
<title>mod_memcg_state (1,254,201,617 samples, 0.03%)</title><rect x="822.0" y="1205" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="825.03" y="1215.5" ></text>
</g>
<g >
<title>enqueue_entity (2,788,553,784 samples, 0.07%)</title><rect x="1182.9" y="1413" width="0.8" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1185.87" y="1423.5" ></text>
</g>
<g >
<title>pick_next_task (659,009,431 samples, 0.02%)</title><rect x="680.6" y="1349" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="683.57" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,076,518,509 samples, 0.05%)</title><rect x="11.2" y="1541" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.22" y="1551.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (3,975,529,673 samples, 0.10%)</title><rect x="908.1" y="1221" width="1.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="911.06" y="1231.5" ></text>
</g>
<g >
<title>clock_gettime (4,132,901,481 samples, 0.10%)</title><rect x="696.3" y="1413" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="699.30" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,841,609,649 samples, 0.05%)</title><rect x="11.2" y="1429" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.22" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2,993,186,013 samples, 0.07%)</title><rect x="824.7" y="1301" width="0.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="827.71" y="1311.5" ></text>
</g>
<g >
<title>futex_unqueue (9,192,870,378 samples, 0.23%)</title><rect x="586.2" y="1317" width="2.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="589.18" y="1327.5" ></text>
</g>
<g >
<title>update_load_avg (892,708,659 samples, 0.02%)</title><rect x="608.4" y="1237" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="611.41" y="1247.5" ></text>
</g>
<g >
<title>__libc_start_main (1,939,782,829 samples, 0.05%)</title><rect x="1018.5" y="1557" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1021.49" y="1567.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (403,619,272 samples, 0.01%)</title><rect x="41.2" y="1381" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="44.21" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,186,276,101 samples, 0.05%)</title><rect x="453.5" y="1349" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="456.46" y="1359.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1,498,765,981 samples, 0.04%)</title><rect x="614.8" y="1253" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="617.76" y="1263.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (413,509,894 samples, 0.01%)</title><rect x="749.6" y="1269" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="752.58" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (10,555,717,499 samples, 0.26%)</title><rect x="51.2" y="1573" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="54.15" y="1583.5" ></text>
</g>
<g >
<title>mmput (5,158,385,664 samples, 0.13%)</title><rect x="1029.0" y="1397" width="1.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1032.02" y="1407.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (481,558,709 samples, 0.01%)</title><rect x="914.7" y="1205" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="917.66" y="1215.5" ></text>
</g>
<g >
<title>copy_pte_range (3,216,091,421 samples, 0.08%)</title><rect x="1024.0" y="1397" width="0.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1026.98" y="1407.5" ></text>
</g>
<g >
<title>kernel_clone (657,639,610 samples, 0.02%)</title><rect x="1168.6" y="1509" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1171.59" y="1519.5" ></text>
</g>
<g >
<title>enqueue_entity (20,419,875,021 samples, 0.51%)</title><rect x="1123.1" y="1413" width="6.0" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1126.14" y="1423.5" ></text>
</g>
<g >
<title>security_socket_accept (4,032,333,287 samples, 0.10%)</title><rect x="786.6" y="1333" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="789.61" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (365,215,872 samples, 0.01%)</title><rect x="52.7" y="165" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="175.5" ></text>
</g>
<g >
<title>sock_free_inode (3,172,147,043 samples, 0.08%)</title><rect x="1110.9" y="1285" width="0.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1113.87" y="1295.5" ></text>
</g>
<g >
<title>__rcu_read_lock (424,118,742 samples, 0.01%)</title><rect x="818.6" y="1221" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="821.59" y="1231.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (41,086,400,246 samples, 1.02%)</title><rect x="1170.2" y="1509" width="12.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1173.16" y="1519.5" ></text>
</g>
<g >
<title>NaClIsValidClockId (2,013,270,700 samples, 0.05%)</title><rect x="998.2" y="1557" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1001.20" y="1567.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (3,194,696,053 samples, 0.08%)</title><rect x="842.7" y="1253" width="1.0" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="845.73" y="1263.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (3,412,632,450 samples, 0.08%)</title><rect x="325.9" y="1541" width="1.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="328.92" y="1551.5" ></text>
</g>
<g >
<title>update_curr (528,438,663 samples, 0.01%)</title><rect x="565.8" y="1285" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="568.78" y="1295.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (11,496,772,693 samples, 0.28%)</title><rect x="39.5" y="1509" width="3.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="42.49" y="1519.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (1,076,699,147 samples, 0.03%)</title><rect x="1132.0" y="1381" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1135.04" y="1391.5" ></text>
</g>
<g >
<title>dequeue_task (36,228,201,003 samples, 0.90%)</title><rect x="598.3" y="1269" width="10.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="601.31" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="1365" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="1375.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDayDecoder (1,324,266,805 samples, 0.03%)</title><rect x="1005.9" y="1557" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1008.88" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,467,957,712 samples, 0.04%)</title><rect x="51.4" y="773" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="54.42" y="783.5" ></text>
</g>
<g >
<title>update_rq_clock (1,173,244,046 samples, 0.03%)</title><rect x="42.1" y="1461" width="0.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="45.10" y="1471.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (2,044,621,357 samples, 0.05%)</title><rect x="1057.8" y="1269" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1060.76" y="1279.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (108,108,386,429 samples, 2.68%)</title><rect x="418.8" y="1509" width="31.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="421.75" y="1519.5" >Na..</text>
</g>
<g >
<title>_raw_spin_lock (2,901,186,685 samples, 0.07%)</title><rect x="914.8" y="1205" width="0.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="917.80" y="1215.5" ></text>
</g>
<g >
<title>sock_free_inode (508,605,839 samples, 0.01%)</title><rect x="38.2" y="1285" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="41.23" y="1295.5" ></text>
</g>
<g >
<title>rest_init (348,264,920 samples, 0.01%)</title><rect x="16.1" y="1493" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="19.08" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,189,779,741 samples, 0.15%)</title><rect x="55.0" y="1557" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="57.97" y="1567.5" ></text>
</g>
<g >
<title>mod_objcg_state (524,115,909 samples, 0.01%)</title><rect x="858.0" y="1253" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="860.96" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="741" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,322,898,140 samples, 0.03%)</title><rect x="51.4" y="693" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="54.43" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (368,535,888 samples, 0.01%)</title><rect x="52.7" y="565" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="55.71" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (81,743,560,765 samples, 2.03%)</title><rect x="658.0" y="1397" width="23.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="661.03" y="1407.5" >_..</text>
</g>
<g >
<title>_compound_head (523,514,613 samples, 0.01%)</title><rect x="50.5" y="1269" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="53.51" y="1279.5" ></text>
</g>
<g >
<title>rcu_do_batch (1,501,640,110 samples, 0.04%)</title><rect x="1142.6" y="1349" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1145.60" y="1359.5" ></text>
</g>
<g >
<title>statx (381,915,560 samples, 0.01%)</title><rect x="18.5" y="1477" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="21.52" y="1487.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (568,768,792 samples, 0.01%)</title><rect x="23.3" y="1493" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="26.30" y="1503.5" ></text>
</g>
<g >
<title>expr (10,885,266,427 samples, 0.27%)</title><rect x="10.9" y="1589" width="3.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="13.88" y="1599.5" ></text>
</g>
<g >
<title>call_cpuidle (3,025,120,790 samples, 0.07%)</title><rect x="46.5" y="1429" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="49.49" y="1439.5" ></text>
</g>
<g >
<title>glob_filename (522,281,456 samples, 0.01%)</title><rect x="1015.9" y="1381" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1018.88" y="1391.5" ></text>
</g>
<g >
<title>reweight_entity (2,915,484,009 samples, 0.07%)</title><rect x="602.4" y="1205" width="0.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="605.43" y="1215.5" ></text>
</g>
<g >
<title>pick_next_entity (537,573,012 samples, 0.01%)</title><rect x="561.2" y="1285" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="564.18" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (741,169,073 samples, 0.02%)</title><rect x="734.1" y="1397" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="737.09" y="1407.5" ></text>
</g>
<g >
<title>__do_softirq (413,509,894 samples, 0.01%)</title><rect x="749.6" y="1253" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="752.58" y="1263.5" ></text>
</g>
<g >
<title>update_load_avg (414,404,505 samples, 0.01%)</title><rect x="1146.0" y="1445" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1148.97" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,967,930 samples, 0.03%)</title><rect x="53.3" y="501" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.32" y="511.5" ></text>
</g>
<g >
<title>record__mmap_read_all (6,022,762,257 samples, 0.15%)</title><rect x="57.0" y="1541" width="1.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="59.98" y="1551.5" ></text>
</g>
<g >
<title>rcu_do_batch (389,684,310 samples, 0.01%)</title><rect x="749.6" y="1205" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="752.59" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,187,387,925 samples, 0.15%)</title><rect x="1029.0" y="1557" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1031.99" y="1567.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (14,791,593,148 samples, 0.37%)</title><rect x="1058.8" y="1317" width="4.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1061.75" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,245,307,056 samples, 0.11%)</title><rect x="48.7" y="1413" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="51.67" y="1423.5" ></text>
</g>
<g >
<title>make_kgid (2,113,260,996 samples, 0.05%)</title><rect x="795.0" y="1269" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="797.98" y="1279.5" ></text>
</g>
<g >
<title>psi_group_change (8,672,066,221 samples, 0.21%)</title><rect x="1147.6" y="1461" width="2.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1150.62" y="1471.5" ></text>
</g>
<g >
<title>__alloc_pages (371,020,174 samples, 0.01%)</title><rect x="57.8" y="1157" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="60.81" y="1167.5" ></text>
</g>
</g>
</svg>
