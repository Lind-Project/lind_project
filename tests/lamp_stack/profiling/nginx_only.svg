<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1670.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1653" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1653" > </text>
<g id="frames">
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1381" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_select (132,273,564 samples, 0.02%)</title><rect x="1110.7" y="1445" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1113.68" y="1455.5" ></text>
</g>
<g >
<title>vfs_iter_read (62,584,796 samples, 0.01%)</title><rect x="435.9" y="1285" width="0.1" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="438.90" y="1295.5" ></text>
</g>
<g >
<title>rcu_core (642,548,934 samples, 0.10%)</title><rect x="1116.5" y="1477" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1119.54" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (6,212,948,198 samples, 0.96%)</title><rect x="38.5" y="1525" width="11.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="41.48" y="1535.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (57,022,429 samples, 0.01%)</title><rect x="471.3" y="1253" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="474.26" y="1263.5" ></text>
</g>
<g >
<title>native_sched_clock (67,392,335 samples, 0.01%)</title><rect x="1130.5" y="1429" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1133.51" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (859,312,048 samples, 0.13%)</title><rect x="26.3" y="997" width="1.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.26" y="1007.5" ></text>
</g>
<g >
<title>ttwu_do_activate (803,688,166 samples, 0.12%)</title><rect x="1178.8" y="1477" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1181.77" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (213,900,829 samples, 0.03%)</title><rect x="826.7" y="1557" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="829.67" y="1567.5" ></text>
</g>
<g >
<title>aeProcessEvents.part.0 (308,155,634 samples, 0.05%)</title><rect x="1189.4" y="1525" width="0.6" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1192.43" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (1,212,795,746 samples, 0.19%)</title><rect x="26.1" y="1493" width="2.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="29.08" y="1503.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (99,434,618 samples, 0.02%)</title><rect x="25.3" y="1317" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="28.31" y="1327.5" ></text>
</g>
<g >
<title>refill_obj_stock (152,324,452 samples, 0.02%)</title><rect x="549.8" y="1221" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="552.79" y="1231.5" ></text>
</g>
<g >
<title>[ls] (278,384,004 samples, 0.04%)</title><rect x="18.8" y="1509" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.80" y="1519.5" ></text>
</g>
<g >
<title>expand_string_assignment (154,391,175 samples, 0.02%)</title><rect x="831.8" y="1253" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="834.77" y="1263.5" ></text>
</g>
<g >
<title>NaClMaskRestore (2,202,081,790 samples, 0.34%)</title><rect x="278.1" y="1541" width="4.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="281.09" y="1551.5" ></text>
</g>
<g >
<title>ls (1,593,275,016 samples, 0.25%)</title><rect x="18.2" y="1605" width="2.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="21.15" y="1615.5" ></text>
</g>
<g >
<title>vfs_statx (85,953,750 samples, 0.01%)</title><rect x="28.3" y="1429" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="31.32" y="1439.5" ></text>
</g>
<g >
<title>rebalance_domains (123,095,893 samples, 0.02%)</title><rect x="914.4" y="1365" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="917.36" y="1375.5" ></text>
</g>
<g >
<title>all (648,488,126,421 samples, 100%)</title><rect x="10.0" y="1621" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (168,361,195 samples, 0.03%)</title><rect x="22.1" y="1573" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="25.11" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="533" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="543.5" ></text>
</g>
<g >
<title>__do_softirq (655,031,715 samples, 0.10%)</title><rect x="1116.5" y="1509" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1119.52" y="1519.5" ></text>
</g>
<g >
<title>__schedule (134,881,340 samples, 0.02%)</title><rect x="893.9" y="1509" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="896.88" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (733,036,532 samples, 0.11%)</title><rect x="26.3" y="757" width="1.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.29" y="767.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (518,359,471 samples, 0.08%)</title><rect x="597.5" y="1301" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="600.49" y="1311.5" ></text>
</g>
<g >
<title>wb_do_writeback (103,280,391 samples, 0.02%)</title><rect x="894.3" y="1493" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="897.29" y="1503.5" ></text>
</g>
<g >
<title>native_sched_clock (93,988,419 samples, 0.01%)</title><rect x="1077.4" y="1413" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1080.38" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1013" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1023.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1,133,822,033 samples, 0.17%)</title><rect x="1088.9" y="1477" width="2.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1091.92" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (395,188,695 samples, 0.06%)</title><rect x="865.4" y="1493" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="868.40" y="1503.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (4,312,491,846 samples, 0.67%)</title><rect x="383.4" y="1509" width="7.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="386.42" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="485" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="495.5" ></text>
</g>
<g >
<title>kmem_cache_free (84,753,569 samples, 0.01%)</title><rect x="55.6" y="1413" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="58.61" y="1423.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (21,708,657,597 samples, 3.35%)</title><rect x="392.3" y="1525" width="39.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="395.28" y="1535.5" >NaC..</text>
</g>
<g >
<title>hrtimer_interrupt (146,832,706 samples, 0.02%)</title><rect x="1184.7" y="1349" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1187.67" y="1359.5" ></text>
</g>
<g >
<title>NaClLog (1,288,771,158 samples, 0.20%)</title><rect x="812.8" y="1573" width="2.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="815.83" y="1583.5" ></text>
</g>
<g >
<title>v8::internal::Heap::CollectGarbage (131,786,643 samples, 0.02%)</title><rect x="30.2" y="1477" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="33.24" y="1487.5" ></text>
</g>
<g >
<title>__sock_release (367,070,588 samples, 0.06%)</title><rect x="557.4" y="1285" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="560.37" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="421" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="431.5" ></text>
</g>
<g >
<title>[[stack]] (79,962,957 samples, 0.01%)</title><rect x="21.1" y="1589" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="24.07" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1333" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1343.5" ></text>
</g>
<g >
<title>__mmput (1,689,638,799 samples, 0.26%)</title><rect x="32.1" y="1397" width="3.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="35.08" y="1407.5" ></text>
</g>
<g >
<title>do_idle (74,726,696 samples, 0.01%)</title><rect x="10.5" y="1541" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.52" y="1551.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (339,557,692 samples, 0.05%)</title><rect x="598.4" y="1301" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="601.43" y="1311.5" ></text>
</g>
<g >
<title>runc:[1:CHILD] (21,628,588,176 samples, 3.34%)</title><rect x="51.9" y="1605" width="39.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="54.92" y="1615.5" >run..</text>
</g>
<g >
<title>schedule_hrtimeout_range (72,074,912 samples, 0.01%)</title><rect x="30.0" y="1461" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="33.01" y="1471.5" ></text>
</g>
<g >
<title>__libc_start_main (410,154,106 samples, 0.06%)</title><rect x="865.4" y="1573" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="868.39" y="1583.5" ></text>
</g>
<g >
<title>cpu_startup_entry (122,276,794 samples, 0.02%)</title><rect x="17.0" y="1493" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="20.02" y="1503.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (124,088,899 samples, 0.02%)</title><rect x="36.9" y="1205" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="39.85" y="1215.5" ></text>
</g>
<g >
<title>psi_task_switch (140,223,664 samples, 0.02%)</title><rect x="861.9" y="1493" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="864.90" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="581" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="591.5" ></text>
</g>
<g >
<title>sched_clock (190,065,434 samples, 0.03%)</title><rect x="472.7" y="1285" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="475.72" y="1295.5" ></text>
</g>
<g >
<title>enqueue_task (55,163,924 samples, 0.01%)</title><rect x="88.7" y="1253" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="91.68" y="1263.5" ></text>
</g>
<g >
<title>update_process_times (244,259,061 samples, 0.04%)</title><rect x="907.9" y="1349" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="910.88" y="1359.5" ></text>
</g>
<g >
<title>ttwu_do_activate (229,036,031 samples, 0.04%)</title><rect x="86.3" y="1477" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="89.34" y="1487.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (55,396,862 samples, 0.01%)</title><rect x="604.3" y="1317" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="607.30" y="1327.5" ></text>
</g>
<g >
<title>poll_idle (1,050,445,571 samples, 0.16%)</title><rect x="89.1" y="1397" width="1.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="92.11" y="1407.5" ></text>
</g>
<g >
<title>enqueue_task (104,994,414 samples, 0.02%)</title><rect x="1111.0" y="1397" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1114.00" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="901" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="911.5" ></text>
</g>
<g >
<title>wake_up_process (3,703,079,075 samples, 0.57%)</title><rect x="901.1" y="1365" width="6.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="904.09" y="1375.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,751,300,216 samples, 0.42%)</title><rect x="1120.0" y="1461" width="5.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1123.00" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (182,849,208 samples, 0.03%)</title><rect x="11.2" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.20" y="1423.5" ></text>
</g>
<g >
<title>enqueue_entity (99,577,114 samples, 0.02%)</title><rect x="1097.6" y="1221" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1100.57" y="1231.5" ></text>
</g>
<g >
<title>schedule_idle (58,998,069 samples, 0.01%)</title><rect x="865.0" y="1461" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="867.97" y="1471.5" ></text>
</g>
<g >
<title>psi_task_change (126,230,983 samples, 0.02%)</title><rect x="57.8" y="1301" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="60.81" y="1311.5" ></text>
</g>
<g >
<title>set_next_entity (63,244,752 samples, 0.01%)</title><rect x="1111.5" y="1397" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1114.54" y="1407.5" ></text>
</g>
<g >
<title>set_task_cpu (110,105,254 samples, 0.02%)</title><rect x="902.3" y="1333" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="905.33" y="1343.5" ></text>
</g>
<g >
<title>ttwu_do_activate (157,521,257 samples, 0.02%)</title><rect x="1076.5" y="1317" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1079.46" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_lock (102,309,337 samples, 0.02%)</title><rect x="535.4" y="1301" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="538.39" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (100,233,760 samples, 0.02%)</title><rect x="27.4" y="741" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="30.44" y="751.5" ></text>
</g>
<g >
<title>rcu_core (149,027,134 samples, 0.02%)</title><rect x="1098.1" y="1301" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1101.12" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1221" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1231.5" ></text>
</g>
<g >
<title>read (211,022,700 samples, 0.03%)</title><rect x="1189.5" y="1477" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1192.52" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (89,323,043 samples, 0.01%)</title><rect x="29.1" y="37" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="32.14" y="47.5" ></text>
</g>
<g >
<title>rcu_core (364,820,927 samples, 0.06%)</title><rect x="55.2" y="1477" width="0.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="58.21" y="1487.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2,674,856,679 samples, 0.41%)</title><rect x="902.5" y="1333" width="4.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="905.53" y="1343.5" ></text>
</g>
<g >
<title>enqueue_task_fair (150,506,488 samples, 0.02%)</title><rect x="86.4" y="1445" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="89.36" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (73,853,617 samples, 0.01%)</title><rect x="435.9" y="1381" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="438.88" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1477" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1487.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (99,613,842 samples, 0.02%)</title><rect x="1090.6" y="1429" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1093.59" y="1439.5" ></text>
</g>
<g >
<title>[git] (80,832,401 samples, 0.01%)</title><rect x="12.4" y="1525" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.41" y="1535.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::lock_exclusive_slow (20,450,308,106 samples, 3.15%)</title><rect x="452.1" y="1445" width="37.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="455.10" y="1455.5" >das..</text>
</g>
<g >
<title>set_next_entity (186,069,768 samples, 0.03%)</title><rect x="1182.6" y="1461" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1185.59" y="1471.5" ></text>
</g>
<g >
<title>begin_new_exec (56,651,202 samples, 0.01%)</title><rect x="833.0" y="1445" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="836.00" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (269,213,086 samples, 0.04%)</title><rect x="28.9" y="117" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="127.5" ></text>
</g>
<g >
<title>NaClMaskRestore (270,333,779 samples, 0.04%)</title><rect x="815.2" y="1573" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="818.18" y="1583.5" ></text>
</g>
<g >
<title>load_elf_binary (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1461" width="0.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="20.70" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1541" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1551.5" ></text>
</g>
<g >
<title>enqueue_entity (1,339,095,772 samples, 0.21%)</title><rect x="903.4" y="1285" width="2.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="906.41" y="1295.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (71,688,268 samples, 0.01%)</title><rect x="1083.9" y="1397" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1086.87" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="229" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="239.5" ></text>
</g>
<g >
<title>rcu_core_si (152,354,257 samples, 0.02%)</title><rect x="1077.0" y="1365" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1079.95" y="1375.5" ></text>
</g>
<g >
<title>update_blocked_averages (382,802,230 samples, 0.06%)</title><rect x="483.6" y="1237" width="0.7" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="486.56" y="1247.5" ></text>
</g>
<g >
<title>wake_up_process (297,942,669 samples, 0.05%)</title><rect x="1097.4" y="1301" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1100.38" y="1311.5" ></text>
</g>
<g >
<title>schedule_idle (381,023,284 samples, 0.06%)</title><rect x="1111.3" y="1461" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1114.33" y="1471.5" ></text>
</g>
<g >
<title>unmap_page_range (1,402,010,547 samples, 0.22%)</title><rect x="32.6" y="1333" width="2.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="35.61" y="1343.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (67,589,430 samples, 0.01%)</title><rect x="1184.2" y="1525" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1187.23" y="1535.5" ></text>
</g>
<g >
<title>enqueue_task_fair (73,320,787 samples, 0.01%)</title><rect x="49.8" y="1445" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="52.84" y="1455.5" ></text>
</g>
<g >
<title>native_write_msr (484,661,016 samples, 0.07%)</title><rect x="572.7" y="1237" width="0.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="575.70" y="1247.5" ></text>
</g>
<g >
<title>kmem_cache_free (169,223,883 samples, 0.03%)</title><rect x="1124.0" y="1301" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1126.99" y="1311.5" ></text>
</g>
<g >
<title>consume_obj_stock (67,764,229 samples, 0.01%)</title><rect x="530.2" y="1253" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="533.24" y="1263.5" ></text>
</g>
<g >
<title>ttwu_do_activate (209,990,763 samples, 0.03%)</title><rect x="1097.5" y="1269" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1100.52" y="1279.5" ></text>
</g>
<g >
<title>search_binary_handler (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1477" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="20.70" y="1487.5" ></text>
</g>
<g >
<title>schedule (10,789,292,459 samples, 1.66%)</title><rect x="574.3" y="1301" width="19.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="577.27" y="1311.5" ></text>
</g>
<g >
<title>Glob::isIgnored (1,212,795,746 samples, 0.19%)</title><rect x="26.1" y="1509" width="2.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="29.08" y="1519.5" ></text>
</g>
<g >
<title>_compound_head (432,090,357 samples, 0.07%)</title><rect x="32.7" y="1301" width="0.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="35.75" y="1311.5" ></text>
</g>
<g >
<title>vfs_read (70,784,682 samples, 0.01%)</title><rect x="435.9" y="1317" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="438.88" y="1327.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,293,567,163 samples, 0.20%)</title><rect x="1120.2" y="1397" width="2.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1123.19" y="1407.5" ></text>
</g>
<g >
<title>pick_next_task_fair (92,032,630 samples, 0.01%)</title><rect x="50.3" y="1477" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="53.26" y="1487.5" ></text>
</g>
<g >
<title>rcu_do_batch (261,702,485 samples, 0.04%)</title><rect x="836.2" y="1349" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="839.17" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (55,475,521 samples, 0.01%)</title><rect x="27.3" y="677" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="30.34" y="687.5" ></text>
</g>
<g >
<title>sock_sendmsg (239,865,689 samples, 0.04%)</title><rect x="604.1" y="1413" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="607.05" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (342,362,034 samples, 0.05%)</title><rect x="11.2" y="1429" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.15" y="1439.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (38,127,053,149 samples, 5.88%)</title><rect x="191.0" y="1557" width="69.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="194.02" y="1567.5" >NaClApp..</text>
</g>
<g >
<title>__schedule (361,571,235 samples, 0.06%)</title><rect x="1111.3" y="1445" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1114.33" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,226,813,556 samples, 0.34%)</title><rect x="492.5" y="1413" width="4.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="495.54" y="1423.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (408,959,919 samples, 0.06%)</title><rect x="588.3" y="1189" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="591.33" y="1199.5" ></text>
</g>
<g >
<title>tcp_recvmsg (187,248,115 samples, 0.03%)</title><rect x="1189.6" y="1333" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.56" y="1343.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (72,382,699 samples, 0.01%)</title><rect x="1176.7" y="1397" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1179.66" y="1407.5" ></text>
</g>
<g >
<title>__wake_up_common (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1317" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="34.57" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (172,469,468 samples, 0.03%)</title><rect x="26.3" y="469" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.35" y="479.5" ></text>
</g>
<g >
<title>psi_task_switch (309,778,135 samples, 0.05%)</title><rect x="1183.1" y="1493" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1186.12" y="1503.5" ></text>
</g>
<g >
<title>[bash] (584,350,883 samples, 0.09%)</title><rect x="831.3" y="1477" width="1.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="834.26" y="1487.5" ></text>
</g>
<g >
<title>kmem_cache_free (636,653,082 samples, 0.10%)</title><rect x="548.9" y="1253" width="1.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="551.94" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (3,921,933,091 samples, 0.60%)</title><rect x="466.4" y="1381" width="7.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="469.41" y="1391.5" ></text>
</g>
<g >
<title>ttwu_do_activate (359,400,325 samples, 0.06%)</title><rect x="834.9" y="1333" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="837.91" y="1343.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (404,862,201 samples, 0.06%)</title><rect x="55.2" y="1589" width="0.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="58.19" y="1599.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (325,313,792 samples, 0.05%)</title><rect x="554.9" y="1221" width="0.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="557.92" y="1231.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (151,603,963 samples, 0.02%)</title><rect x="889.0" y="1589" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="891.95" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (771,518,077 samples, 0.12%)</title><rect x="26.3" y="853" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.28" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (212,460,615 samples, 0.03%)</title><rect x="26.3" y="549" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.32" y="559.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,350,942,465 samples, 0.21%)</title><rect x="88.6" y="1461" width="2.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="91.63" y="1471.5" ></text>
</g>
<g >
<title>setlocale (571,985,860 samples, 0.09%)</title><rect x="19.7" y="1525" width="1.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="22.67" y="1535.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (326,739,956 samples, 0.05%)</title><rect x="570.1" y="1269" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="573.05" y="1279.5" ></text>
</g>
<g >
<title>find_busiest_group (307,027,067 samples, 0.05%)</title><rect x="482.8" y="1221" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="485.85" y="1231.5" ></text>
</g>
<g >
<title>restore_fpregs_from_fpstate (725,576,103 samples, 0.11%)</title><rect x="599.8" y="1317" width="1.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="602.83" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (57,936,353 samples, 0.01%)</title><rect x="559.9" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="562.88" y="1423.5" ></text>
</g>
<g >
<title>__dentry_kill (4,011,671,337 samples, 0.62%)</title><rect x="548.5" y="1285" width="7.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="551.47" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (178,195,227 samples, 0.03%)</title><rect x="26.3" y="485" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.34" y="495.5" ></text>
</g>
<g >
<title>__switch_to_asm (455,971,112 samples, 0.07%)</title><rect x="888.1" y="1589" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="891.10" y="1599.5" ></text>
</g>
<g >
<title>sched_clock_cpu (235,862,901 samples, 0.04%)</title><rect x="472.7" y="1301" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="475.65" y="1311.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (90,126,858 samples, 0.01%)</title><rect x="1189.7" y="1301" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1192.68" y="1311.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (124,301,897 samples, 0.02%)</title><rect x="11.9" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.91" y="1567.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (2,015,534,265 samples, 0.31%)</title><rect x="13.6" y="1589" width="3.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="16.58" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (660,005,407 samples, 0.10%)</title><rect x="30.8" y="1573" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="33.76" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (128,438,715 samples, 0.02%)</title><rect x="26.3" y="405" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.35" y="415.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (60,227,080 samples, 0.01%)</title><rect x="12.0" y="1493" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.01" y="1503.5" ></text>
</g>
<g >
<title>default_wake_function (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1285" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="34.57" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="677" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="687.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (176,627,961 samples, 0.03%)</title><rect x="1110.9" y="1445" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1113.93" y="1455.5" ></text>
</g>
<g >
<title>pick_next_task (307,332,492 samples, 0.05%)</title><rect x="1182.4" y="1493" width="0.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1185.42" y="1503.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (63,123,859 samples, 0.01%)</title><rect x="593.0" y="1269" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="596.02" y="1279.5" ></text>
</g>
<g >
<title>__switch_to (77,043,394 samples, 0.01%)</title><rect x="475.2" y="1413" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="478.18" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (134,235,568 samples, 0.02%)</title><rect x="558.5" y="1333" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="561.52" y="1343.5" ></text>
</g>
<g >
<title>menu_select (74,013,249 samples, 0.01%)</title><rect x="1188.9" y="1429" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1191.88" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,102,852,279 samples, 0.63%)</title><rect x="499.7" y="1413" width="7.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="502.73" y="1423.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (220,441,731 samples, 0.03%)</title><rect x="1076.4" y="1365" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1079.38" y="1375.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (62,584,796 samples, 0.01%)</title><rect x="435.9" y="1237" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="438.90" y="1247.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (66,007,817 samples, 0.01%)</title><rect x="18.5" y="1445" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.50" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (143,814,894 samples, 0.02%)</title><rect x="28.9" y="53" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="31.88" y="63.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (213,728,191 samples, 0.03%)</title><rect x="860.7" y="1493" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="863.73" y="1503.5" ></text>
</g>
<g >
<title>wake_up_process (476,942,875 samples, 0.07%)</title><rect x="834.8" y="1365" width="0.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="837.79" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1141" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="1151.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (8,378,889,007 samples, 1.29%)</title><rect x="900.3" y="1445" width="15.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="903.27" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (504,192,572 samples, 0.08%)</title><rect x="50.9" y="1413" width="0.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="53.87" y="1423.5" ></text>
</g>
<g >
<title>do_sys_poll (79,087,405 samples, 0.01%)</title><rect x="889.5" y="1541" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="892.51" y="1551.5" ></text>
</g>
<g >
<title>record__mmap_read_all (833,414,318 samples, 0.13%)</title><rect x="35.7" y="1557" width="1.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="38.73" y="1567.5" ></text>
</g>
<g >
<title>update_cfs_group (219,566,981 samples, 0.03%)</title><rect x="480.2" y="1237" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="483.18" y="1247.5" ></text>
</g>
<g >
<title>ct_kernel_exit_state (59,651,219 samples, 0.01%)</title><rect x="915.6" y="1445" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="918.62" y="1455.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (55,652,762 samples, 0.01%)</title><rect x="579.8" y="1221" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="582.82" y="1231.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (62,066,695 samples, 0.01%)</title><rect x="908.6" y="1381" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="911.64" y="1391.5" ></text>
</g>
<g >
<title>schedule_idle (608,323,536 samples, 0.09%)</title><rect x="861.2" y="1525" width="1.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="864.21" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,443,472 samples, 0.14%)</title><rect x="26.3" y="1029" width="1.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.26" y="1039.5" ></text>
</g>
<g >
<title>cpuidle_select (356,572,567 samples, 0.05%)</title><rect x="85.5" y="1509" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="88.53" y="1519.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (260,429,732 samples, 0.04%)</title><rect x="554.2" y="1173" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="557.23" y="1183.5" ></text>
</g>
<g >
<title>execute_command_internal (285,371,107 samples, 0.04%)</title><rect x="831.5" y="1397" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="834.55" y="1407.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (65,474,267 samples, 0.01%)</title><rect x="481.1" y="1221" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="484.10" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1301" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="1311.5" ></text>
</g>
<g >
<title>sock_free_inode (172,747,404 samples, 0.03%)</title><rect x="1124.0" y="1317" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1126.99" y="1327.5" ></text>
</g>
<g >
<title>alloc_pages (65,964,412 samples, 0.01%)</title><rect x="604.1" y="1317" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="607.12" y="1327.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (103,280,391 samples, 0.02%)</title><rect x="894.3" y="1461" width="0.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="897.29" y="1471.5" ></text>
</g>
<g >
<title>setlocale (485,732,716 samples, 0.07%)</title><rect x="11.0" y="1525" width="0.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="14.01" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1029" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1039.5" ></text>
</g>
<g >
<title>__schedule (3,891,531,354 samples, 0.60%)</title><rect x="478.5" y="1301" width="7.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="481.52" y="1311.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (69,839,488 samples, 0.01%)</title><rect x="860.1" y="1429" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="863.07" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (769,415,020 samples, 0.12%)</title><rect x="26.3" y="821" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.28" y="831.5" ></text>
</g>
<g >
<title>[libc.so.6] (317,786,057 samples, 0.05%)</title><rect x="26.7" y="501" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="29.72" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (269,213,086 samples, 0.04%)</title><rect x="28.9" y="101" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="111.5" ></text>
</g>
<g >
<title>init_file (1,890,250,415 samples, 0.29%)</title><rect x="524.5" y="1285" width="3.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="527.55" y="1295.5" ></text>
</g>
<g >
<title>rseq_get_rseq_cs (82,264,703 samples, 0.01%)</title><rect x="598.3" y="1285" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="601.28" y="1295.5" ></text>
</g>
<g >
<title>do_nanosleep (13,796,845,129 samples, 2.13%)</title><rect x="568.8" y="1317" width="25.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="571.80" y="1327.5" >d..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::pread_syscall (91,849,084 samples, 0.01%)</title><rect x="435.9" y="1493" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="438.87" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="613" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="623.5" ></text>
</g>
<g >
<title>rseq_get_rseq_cs (57,531,848 samples, 0.01%)</title><rect x="545.2" y="1317" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="548.18" y="1327.5" ></text>
</g>
<g >
<title>psi_task_switch (1,168,955,287 samples, 0.18%)</title><rect x="1091.5" y="1493" width="2.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1094.54" y="1503.5" ></text>
</g>
<g >
<title>sched_idle_set_state (56,767,568 samples, 0.01%)</title><rect x="1077.9" y="1477" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1080.86" y="1487.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (546,350,189 samples, 0.08%)</title><rect x="96.2" y="1573" width="1.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="99.22" y="1583.5" ></text>
</g>
<g >
<title>ct_kernel_exit_state (101,286,509 samples, 0.02%)</title><rect x="915.9" y="1445" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="918.87" y="1455.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (81,567,747 samples, 0.01%)</title><rect x="36.9" y="1189" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="39.93" y="1199.5" ></text>
</g>
<g >
<title>cpuidle_enter (14,358,925,060 samples, 2.21%)</title><rect x="834.1" y="1493" width="26.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="837.13" y="1503.5" >c..</text>
</g>
<g >
<title>run_rebalance_domains (67,849,575 samples, 0.01%)</title><rect x="836.6" y="1381" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="839.64" y="1391.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (69,839,488 samples, 0.01%)</title><rect x="860.1" y="1445" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="863.07" y="1455.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (1,737,715,639 samples, 0.27%)</title><rect x="531.6" y="1285" width="3.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="534.58" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_execve (56,651,202 samples, 0.01%)</title><rect x="833.0" y="1557" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="836.00" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_enter (69,986,985 samples, 0.01%)</title><rect x="10.5" y="1493" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="13.52" y="1503.5" ></text>
</g>
<g >
<title>futex_wait_setup (663,163,388 samples, 0.10%)</title><rect x="485.7" y="1333" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="488.72" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1301" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="20.24" y="1311.5" ></text>
</g>
<g >
<title>sched_clock (126,054,014 samples, 0.02%)</title><rect x="1093.4" y="1461" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1096.43" y="1471.5" ></text>
</g>
<g >
<title>enqueue_entity (99,546,254 samples, 0.02%)</title><rect x="86.4" y="1429" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="89.43" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="645" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="655.5" ></text>
</g>
<g >
<title>try_to_wake_up (62,133,192 samples, 0.01%)</title><rect x="88.7" y="1285" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="91.67" y="1295.5" ></text>
</g>
<g >
<title>[expr] (498,185,620 samples, 0.08%)</title><rect x="11.0" y="1589" width="0.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.99" y="1599.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (953,523,489 samples, 0.15%)</title><rect x="815.7" y="1573" width="1.7" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="818.67" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (14,199,975,544 samples, 2.19%)</title><rect x="834.4" y="1477" width="25.8" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="837.37" y="1487.5" >c..</text>
</g>
<g >
<title>cpuacct_charge (130,005,590 samples, 0.02%)</title><rect x="582.5" y="1205" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="585.46" y="1215.5" ></text>
</g>
<g >
<title>record__write (797,390,220 samples, 0.12%)</title><rect x="35.8" y="1493" width="1.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="38.76" y="1503.5" ></text>
</g>
<g >
<title>clock_nanosleep (393,121,909 samples, 0.06%)</title><rect x="826.3" y="1573" width="0.8" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="829.34" y="1583.5" ></text>
</g>
<g >
<title>rcu_core_si (326,996,307 samples, 0.05%)</title><rect x="58.6" y="1381" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="61.61" y="1391.5" ></text>
</g>
<g >
<title>[bash] (133,949,648 samples, 0.02%)</title><rect x="831.3" y="1429" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="834.26" y="1439.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (88,249,266 samples, 0.01%)</title><rect x="894.3" y="1349" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="897.29" y="1359.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (91,165,949 samples, 0.01%)</title><rect x="88.7" y="1365" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="91.66" y="1375.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1541" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="20.70" y="1551.5" ></text>
</g>
<g >
<title>i_callback (65,856,861 samples, 0.01%)</title><rect x="836.4" y="1333" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="839.40" y="1343.5" ></text>
</g>
<g >
<title>__calc_delta (107,476,809 samples, 0.02%)</title><rect x="469.6" y="1285" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="472.60" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="901" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1525" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="1535.5" ></text>
</g>
<g >
<title>_start (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1589" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="20.24" y="1599.5" ></text>
</g>
<g >
<title>dequeue_entity (899,072,025 samples, 0.14%)</title><rect x="479.8" y="1253" width="1.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="482.81" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,117,140,850 samples, 0.17%)</title><rect x="26.2" y="1349" width="2.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.19" y="1359.5" ></text>
</g>
<g >
<title>wake_up_bit (57,233,329 samples, 0.01%)</title><rect x="555.5" y="1221" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="558.54" y="1231.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (148,471,260 samples, 0.02%)</title><rect x="85.2" y="1445" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="88.18" y="1455.5" ></text>
</g>
<g >
<title>cfree (143,814,894 samples, 0.02%)</title><rect x="28.9" y="69" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="31.88" y="79.5" ></text>
</g>
<g >
<title>kmem_cache_free (71,080,004 samples, 0.01%)</title><rect x="55.5" y="1429" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="58.45" y="1439.5" ></text>
</g>
<g >
<title>begin_new_exec (1,689,638,799 samples, 0.26%)</title><rect x="32.1" y="1445" width="3.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="35.08" y="1455.5" ></text>
</g>
<g >
<title>irq_exit_rcu (183,207,408 samples, 0.03%)</title><rect x="1076.9" y="1413" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1079.94" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="213" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="223.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (98,684,289,879 samples, 15.22%)</title><rect x="898.0" y="1477" width="179.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="901.01" y="1487.5" >cpuidle_enter_state</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (62,284,558 samples, 0.01%)</title><rect x="865.2" y="1493" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="868.23" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1125" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1135.5" ></text>
</g>
<g >
<title>__wake_up (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1349" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="34.57" y="1359.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (413,267,056 samples, 0.06%)</title><rect x="571.2" y="1269" width="0.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="574.21" y="1279.5" ></text>
</g>
<g >
<title>__libc_fork (1,678,212,060 samples, 0.26%)</title><rect x="22.5" y="1493" width="3.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="25.47" y="1503.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (102,033,112 samples, 0.02%)</title><rect x="13.7" y="1461" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="16.67" y="1471.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (71,497,673 samples, 0.01%)</title><rect x="1189.0" y="1445" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1192.01" y="1455.5" ></text>
</g>
<g >
<title>poll_idle (12,691,423,351 samples, 1.96%)</title><rect x="62.4" y="1461" width="23.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="65.36" y="1471.5" >p..</text>
</g>
<g >
<title>__tfind (68,245,751 samples, 0.01%)</title><rect x="865.7" y="1413" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="868.69" y="1423.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (58,315,866 samples, 0.01%)</title><rect x="85.2" y="1413" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="88.18" y="1423.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (194,743,092 samples, 0.03%)</title><rect x="602.9" y="1397" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="605.89" y="1407.5" ></text>
</g>
<g >
<title>NaClIsValidClockId (643,292,085 samples, 0.10%)</title><rect x="354.0" y="1509" width="1.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="357.00" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="853" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,123,916 samples, 0.01%)</title><rect x="26.4" y="341" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.35" y="351.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (56,191,218 samples, 0.01%)</title><rect x="507.0" y="1365" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="509.98" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1061" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1071.5" ></text>
</g>
<g >
<title>make_kuid (81,379,405 samples, 0.01%)</title><rect x="517.4" y="1285" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="520.35" y="1295.5" ></text>
</g>
<g >
<title>read_tsc (117,826,401 samples, 0.02%)</title><rect x="573.6" y="1237" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="576.58" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (62,997,210 samples, 0.01%)</title><rect x="97.2" y="1557" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="100.21" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (487,486,694 samples, 0.08%)</title><rect x="19.7" y="1445" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.67" y="1455.5" ></text>
</g>
<g >
<title>execute_command_internal (66,631,454 samples, 0.01%)</title><rect x="831.9" y="1189" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="834.92" y="1199.5" ></text>
</g>
<g >
<title>NaClSysClockGetTime (32,084,264,900 samples, 4.95%)</title><rect x="298.3" y="1541" width="58.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="301.29" y="1551.5" >NaClSy..</text>
</g>
<g >
<title>entry_SYSCALL_64 (200,042,568 samples, 0.03%)</title><rect x="565.0" y="1397" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="567.99" y="1407.5" ></text>
</g>
<g >
<title>enqueue_task (2,445,201,230 samples, 0.38%)</title><rect x="902.9" y="1317" width="4.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="905.93" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="997" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="453" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="463.5" ></text>
</g>
<g >
<title>schedule (59,223,553 samples, 0.01%)</title><rect x="30.0" y="1429" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="33.03" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="165" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="175.5" ></text>
</g>
<g >
<title>__schedule (66,741,014 samples, 0.01%)</title><rect x="16.9" y="1509" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="19.87" y="1519.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (407,597,654 samples, 0.06%)</title><rect x="38.8" y="1445" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="41.79" y="1455.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (99,649,846 samples, 0.02%)</title><rect x="901.6" y="1317" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="904.61" y="1327.5" ></text>
</g>
<g >
<title>setup_object (82,665,996 samples, 0.01%)</title><rect x="519.7" y="1205" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="522.73" y="1215.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (345,604,756 samples, 0.05%)</title><rect x="260.4" y="1557" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="263.39" y="1567.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (75,706,272 samples, 0.01%)</title><rect x="1189.0" y="1461" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.01" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="709" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="719.5" ></text>
</g>
<g >
<title>prepare_task_switch (187,346,915 samples, 0.03%)</title><rect x="1091.1" y="1493" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1094.11" y="1503.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,261,590,989 samples, 0.19%)</title><rect x="862.6" y="1429" width="2.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="865.63" y="1439.5" ></text>
</g>
<g >
<title>rb_erase (65,718,012 samples, 0.01%)</title><rect x="1089.4" y="1461" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1092.42" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (955,786,762 samples, 0.15%)</title><rect x="35.5" y="1589" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="38.51" y="1599.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::OrdinaryDefineOwnProperty (59,890,143 samples, 0.01%)</title><rect x="22.1" y="1509" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="25.13" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (475,444,914 samples, 0.07%)</title><rect x="11.0" y="1493" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.02" y="1503.5" ></text>
</g>
<g >
<title>pick_next_task_fair (269,072,384 samples, 0.04%)</title><rect x="1182.4" y="1477" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1185.45" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_futex (5,834,418,090 samples, 0.90%)</title><rect x="476.4" y="1381" width="10.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="479.39" y="1391.5" ></text>
</g>
<g >
<title>allocate_slab (232,043,352 samples, 0.04%)</title><rect x="519.5" y="1237" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="522.46" y="1247.5" ></text>
</g>
<g >
<title>schedule_idle (1,539,623,417 samples, 0.24%)</title><rect x="1181.2" y="1525" width="2.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1184.17" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (895,841,058 samples, 0.14%)</title><rect x="831.3" y="1557" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="834.26" y="1567.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1,365,800,058 samples, 0.21%)</title><rect x="862.6" y="1525" width="2.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="865.60" y="1535.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (138,033,274 samples, 0.02%)</title><rect x="38.1" y="1541" width="0.3" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="41.13" y="1551.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (903,042,010 samples, 0.14%)</title><rect x="572.2" y="1285" width="1.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="575.18" y="1295.5" ></text>
</g>
<g >
<title>do_idle (1,443,082,841 samples, 0.22%)</title><rect x="88.6" y="1477" width="2.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="91.63" y="1487.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (1,348,597,923 samples, 0.21%)</title><rect x="26.0" y="1557" width="2.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="29.04" y="1567.5" ></text>
</g>
<g >
<title>do_idle (568,174,857 samples, 0.09%)</title><rect x="50.8" y="1477" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="53.84" y="1487.5" ></text>
</g>
<g >
<title>readdir64 (61,448,421 samples, 0.01%)</title><rect x="831.4" y="1365" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="834.37" y="1375.5" ></text>
</g>
<g >
<title>ksys_read (194,797,504 samples, 0.03%)</title><rect x="1189.5" y="1413" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.55" y="1423.5" ></text>
</g>
<g >
<title>kthread (378,407,990 samples, 0.06%)</title><rect x="833.2" y="1557" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="836.15" y="1567.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (140,393,209 samples, 0.02%)</title><rect x="1184.0" y="1525" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1186.97" y="1535.5" ></text>
</g>
<g >
<title>__do_softirq (72,382,699 samples, 0.01%)</title><rect x="1176.7" y="1381" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1179.66" y="1391.5" ></text>
</g>
<g >
<title>native_sched_clock (90,452,614 samples, 0.01%)</title><rect x="1095.5" y="1445" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1098.49" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1301" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1311.5" ></text>
</g>
<g >
<title>fput (200,763,361 samples, 0.03%)</title><rect x="511.3" y="1349" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="514.26" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1221" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1231.5" ></text>
</g>
<g >
<title>pick_next_task (107,905,605 samples, 0.02%)</title><rect x="861.7" y="1493" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="864.67" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1173" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1183.5" ></text>
</g>
<g >
<title>i_callback (102,317,779 samples, 0.02%)</title><rect x="55.6" y="1445" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="58.58" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_select (231,821,556 samples, 0.04%)</title><rect x="860.3" y="1509" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="863.27" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="757" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="767.5" ></text>
</g>
<g >
<title>filename_lookup (65,628,826 samples, 0.01%)</title><rect x="19.4" y="1413" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="22.38" y="1423.5" ></text>
</g>
<g >
<title>__schedule (59,223,553 samples, 0.01%)</title><rect x="30.0" y="1413" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="33.03" y="1423.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (407,123,727 samples, 0.06%)</title><rect x="1097.3" y="1349" width="0.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1100.32" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_lock (67,158,431 samples, 0.01%)</title><rect x="901.5" y="1333" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="904.49" y="1343.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (67,475,403 samples, 0.01%)</title><rect x="1189.0" y="1429" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1192.02" y="1439.5" ></text>
</g>
<g >
<title>__xstat64 (99,097,592 samples, 0.02%)</title><rect x="28.3" y="1525" width="0.2" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="31.30" y="1535.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDayDecoder (43,180,053,958 samples, 6.66%)</title><rect x="356.9" y="1557" width="78.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="359.89" y="1567.5" >NaClSysGe..</text>
</g>
<g >
<title>psi_group_change (55,104,420 samples, 0.01%)</title><rect x="835.4" y="1285" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="838.42" y="1295.5" ></text>
</g>
<g >
<title>call_cpuidle (32,207,967,144 samples, 4.97%)</title><rect x="1118.4" y="1509" width="58.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1121.43" y="1519.5" >call_c..</text>
</g>
<g >
<title>ovl_read_iter (67,171,235 samples, 0.01%)</title><rect x="435.9" y="1301" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="438.89" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (855,884,542 samples, 0.13%)</title><rect x="26.3" y="949" width="1.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.26" y="959.5" ></text>
</g>
<g >
<title>enqueue_entity (139,089,662 samples, 0.02%)</title><rect x="835.0" y="1285" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="838.03" y="1295.5" ></text>
</g>
<g >
<title>[bash] (154,391,175 samples, 0.02%)</title><rect x="831.8" y="1301" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="834.77" y="1311.5" ></text>
</g>
<g >
<title>exec_binprm (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1493" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="20.70" y="1503.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (84,452,188 samples, 0.01%)</title><rect x="907.4" y="1333" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="910.40" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (27,206,169,985 samples, 4.20%)</title><rect x="509.4" y="1413" width="49.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="512.41" y="1423.5" >do_s..</text>
</g>
<g >
<title>writeback_sb_inodes (103,280,391 samples, 0.02%)</title><rect x="894.3" y="1445" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="897.29" y="1455.5" ></text>
</g>
<g >
<title>wake_up_process (1,132,957,974 samples, 0.17%)</title><rect x="1120.4" y="1365" width="2.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1123.38" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (85,972,324 samples, 0.01%)</title><rect x="30.0" y="1525" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="32.99" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,776,459,640 samples, 0.27%)</title><rect x="13.6" y="1525" width="3.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="16.60" y="1535.5" ></text>
</g>
<g >
<title>do_epoll_wait (75,453,194 samples, 0.01%)</title><rect x="30.0" y="1493" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="33.00" y="1503.5" ></text>
</g>
<g >
<title>__sys_accept4 (18,302,580,120 samples, 2.82%)</title><rect x="509.6" y="1381" width="33.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="512.59" y="1391.5" >__..</text>
</g>
<g >
<title>copy_present_pte (421,192,398 samples, 0.06%)</title><rect x="24.4" y="1285" width="0.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="27.41" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="245" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (63,714,622 samples, 0.01%)</title><rect x="11.6" y="1397" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.63" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (99,649,846 samples, 0.02%)</title><rect x="901.6" y="1333" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="904.61" y="1343.5" ></text>
</g>
<g >
<title>new_inode_pseudo (3,786,784,231 samples, 0.58%)</title><rect x="516.6" y="1333" width="6.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="519.57" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (262,384,914 samples, 0.04%)</title><rect x="865.4" y="1429" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="868.44" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,832,401 samples, 0.01%)</title><rect x="12.4" y="1557" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.41" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1013" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="1023.5" ></text>
</g>
<g >
<title>eventfd_write (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1413" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="34.57" y="1423.5" ></text>
</g>
<g >
<title>std::thread::sleep (129,894,630 samples, 0.02%)</title><rect x="827.4" y="1573" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="830.42" y="1583.5" ></text>
</g>
<g >
<title>i_callback (140,950,886 samples, 0.02%)</title><rect x="1117.2" y="1445" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1120.22" y="1455.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (591,276,967 samples, 0.09%)</title><rect x="57.0" y="1381" width="1.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="60.02" y="1391.5" ></text>
</g>
<g >
<title>put_prev_entity (59,185,344 samples, 0.01%)</title><rect x="589.7" y="1237" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="592.70" y="1247.5" ></text>
</g>
<g >
<title>statx (57,860,983 samples, 0.01%)</title><rect x="19.2" y="1493" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="22.20" y="1503.5" ></text>
</g>
<g >
<title>psi_group_change (59,011,824 samples, 0.01%)</title><rect x="590.1" y="1269" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="593.06" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_lock (72,168,585 samples, 0.01%)</title><rect x="482.7" y="1189" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="485.67" y="1199.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (100,725,507 samples, 0.02%)</title><rect x="914.4" y="1317" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="917.40" y="1327.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (685,334,961 samples, 0.11%)</title><rect x="1097.3" y="1397" width="1.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1100.29" y="1407.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (1,689,169,231 samples, 0.26%)</title><rect x="22.5" y="1525" width="3.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="25.47" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (581,784,698 samples, 0.09%)</title><rect x="28.8" y="1573" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.83" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="469" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,055,785,992 samples, 0.16%)</title><rect x="26.2" y="1269" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.22" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,443,472 samples, 0.14%)</title><rect x="26.3" y="1013" width="1.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.26" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="917" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_execve (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1477" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="38.20" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_reflect (63,053,599 samples, 0.01%)</title><rect x="1078.0" y="1509" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1081.04" y="1519.5" ></text>
</g>
<g >
<title>main (895,841,058 samples, 0.14%)</title><rect x="831.3" y="1541" width="1.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="834.26" y="1551.5" ></text>
</g>
<g >
<title>__schedule (1,472,400,762 samples, 0.23%)</title><rect x="1181.2" y="1509" width="2.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1184.20" y="1519.5" ></text>
</g>
<g >
<title>sched_clock_cpu (143,589,238 samples, 0.02%)</title><rect x="1093.4" y="1477" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1096.40" y="1487.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (212,372,211 samples, 0.03%)</title><rect x="473.8" y="1365" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="476.83" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="341" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (535,757,235 samples, 0.08%)</title><rect x="26.3" y="581" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.32" y="591.5" ></text>
</g>
<g >
<title>cpu_startup_entry (36,648,220,772 samples, 5.65%)</title><rect x="1117.8" y="1557" width="66.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1120.81" y="1567.5" >cpu_sta..</text>
</g>
<g >
<title>release_pages (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1317" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="20.70" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,069,100,897 samples, 0.16%)</title><rect x="18.8" y="1557" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.77" y="1567.5" ></text>
</g>
<g >
<title>malloc (89,323,043 samples, 0.01%)</title><rect x="29.1" y="53" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="32.14" y="63.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (62,284,558 samples, 0.01%)</title><rect x="865.2" y="1461" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="868.23" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (738,669,746 samples, 0.11%)</title><rect x="26.3" y="805" width="1.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.28" y="815.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (8,457,358,431 samples, 1.30%)</title><rect x="1096.8" y="1557" width="15.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1099.75" y="1567.5" ></text>
</g>
<g >
<title>__fdget_raw (2,063,516,003 samples, 0.32%)</title><rect x="500.6" y="1365" width="3.7" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="503.57" y="1375.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (525,338,696 samples, 0.08%)</title><rect x="1076.4" y="1445" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1079.36" y="1455.5" ></text>
</g>
<g >
<title>pick_next_entity (67,838,465 samples, 0.01%)</title><rect x="468.9" y="1301" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="471.87" y="1311.5" ></text>
</g>
<g >
<title>git (80,832,401 samples, 0.01%)</title><rect x="12.4" y="1605" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="15.41" y="1615.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (324,624,787 samples, 0.05%)</title><rect x="451.5" y="1429" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="454.50" y="1439.5" ></text>
</g>
<g >
<title>setlocale (399,455,785 samples, 0.06%)</title><rect x="865.4" y="1525" width="0.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="868.40" y="1535.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (106,541,797 samples, 0.02%)</title><rect x="594.0" y="1317" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="596.99" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="501" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="741" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="751.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (408,532,099 samples, 0.06%)</title><rect x="554.0" y="1189" width="0.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="556.96" y="1199.5" ></text>
</g>
<g >
<title>cpu_util (61,371,706 samples, 0.01%)</title><rect x="588.9" y="1157" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="591.92" y="1167.5" ></text>
</g>
<g >
<title>do_syscall_64 (71,003,929 samples, 0.01%)</title><rect x="10.1" y="1557" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.06" y="1567.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (58,265,082 samples, 0.01%)</title><rect x="866.3" y="1589" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="869.27" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62,737,967 samples, 0.01%)</title><rect x="26.3" y="357" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.35" y="367.5" ></text>
</g>
<g >
<title>irqentry_exit (56,329,301 samples, 0.01%)</title><rect x="889.3" y="1557" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="892.26" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="437" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (560,425,369 samples, 0.09%)</title><rect x="26.3" y="645" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.32" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,443,472 samples, 0.14%)</title><rect x="26.3" y="1045" width="1.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.26" y="1055.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (88,249,266 samples, 0.01%)</title><rect x="894.3" y="1365" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="897.29" y="1375.5" ></text>
</g>
<g >
<title>execute_command_internal (118,345,237 samples, 0.02%)</title><rect x="831.6" y="1301" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="834.55" y="1311.5" ></text>
</g>
<g >
<title>hrtimer_update_next_event (87,795,090 samples, 0.01%)</title><rect x="908.6" y="1397" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="911.60" y="1407.5" ></text>
</g>
<g >
<title>enqueue_task (153,544,075 samples, 0.02%)</title><rect x="1076.5" y="1301" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1079.47" y="1311.5" ></text>
</g>
<g >
<title>call_function_single_prep_ipi (113,546,037 samples, 0.02%)</title><rect x="496.0" y="1285" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="498.95" y="1295.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (14,714,282,818 samples, 2.27%)</title><rect x="567.5" y="1333" width="26.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="570.46" y="1343.5" >h..</text>
</g>
<g >
<title>syscall_return_via_sysret (99,665,712 samples, 0.02%)</title><rect x="828.4" y="1589" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="831.39" y="1599.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1,071,759,519 samples, 0.17%)</title><rect x="1082.4" y="1445" width="1.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1085.39" y="1455.5" ></text>
</g>
<g >
<title>inode_init_always (992,542,929 samples, 0.15%)</title><rect x="516.9" y="1301" width="1.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="519.93" y="1311.5" ></text>
</g>
<g >
<title>[unknown]  (109,207,997,425 samples, 16.84%)</title><rect x="604.6" y="1589" width="198.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="607.58" y="1599.5" >[unknown] </text>
</g>
<g >
<title>non-virtual thunk to v8::internal::CancelableTask::Run (131,786,643 samples, 0.02%)</title><rect x="30.2" y="1509" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="33.24" y="1519.5" ></text>
</g>
<g >
<title>__filemap_get_folio (266,082,498 samples, 0.04%)</title><rect x="36.2" y="1237" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="39.21" y="1247.5" ></text>
</g>
<g >
<title>pick_next_entity (118,022,398 samples, 0.02%)</title><rect x="1089.2" y="1461" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1092.20" y="1471.5" ></text>
</g>
<g >
<title>futex_unqueue (303,882,655 samples, 0.05%)</title><rect x="477.4" y="1333" width="0.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="480.43" y="1343.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (309,744,551 samples, 0.05%)</title><rect x="603.4" y="1413" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="606.38" y="1423.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::DefineProperties (61,022,384 samples, 0.01%)</title><rect x="22.1" y="1541" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="25.13" y="1551.5" ></text>
</g>
<g >
<title>call_cpuidle (16,057,304,780 samples, 2.48%)</title><rect x="56.3" y="1509" width="29.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="59.30" y="1519.5" >ca..</text>
</g>
<g >
<title>clock_nanosleep (22,856,015,313 samples, 3.52%)</title><rect x="561.7" y="1413" width="41.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="564.69" y="1423.5" >clo..</text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (73,853,617 samples, 0.01%)</title><rect x="435.9" y="1461" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="438.88" y="1471.5" ></text>
</g>
<g >
<title>main (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1541" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="20.24" y="1551.5" ></text>
</g>
<g >
<title>rcu_core (265,273,651 samples, 0.04%)</title><rect x="836.2" y="1365" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="839.16" y="1375.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (7,400,314,570 samples, 1.14%)</title><rect x="38.4" y="1589" width="13.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="41.41" y="1599.5" ></text>
</g>
<g >
<title>__destroy_inode (893,074,376 samples, 0.14%)</title><rect x="552.3" y="1205" width="1.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="555.32" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1109" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1119.5" ></text>
</g>
<g >
<title>get_page_from_freelist (123,027,270 samples, 0.02%)</title><rect x="519.5" y="1189" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="522.46" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (616,441,477 samples, 0.10%)</title><rect x="352.5" y="1493" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="355.52" y="1503.5" ></text>
</g>
<g >
<title>operator new (89,323,043 samples, 0.01%)</title><rect x="29.1" y="69" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="32.14" y="79.5" ></text>
</g>
<g >
<title>bprm_execve (1,689,638,799 samples, 0.26%)</title><rect x="32.1" y="1525" width="3.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="35.08" y="1535.5" ></text>
</g>
<g >
<title>rebalance_domains (136,783,398 samples, 0.02%)</title><rect x="1124.5" y="1365" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1127.50" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (115,913,942 samples, 0.02%)</title><rect x="12.7" y="1493" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.70" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1509" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1519.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (146,832,706 samples, 0.02%)</title><rect x="1184.7" y="1365" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1187.67" y="1375.5" ></text>
</g>
<g >
<title>set_next_entity (719,576,087 samples, 0.11%)</title><rect x="1089.6" y="1461" width="1.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1092.60" y="1471.5" ></text>
</g>
<g >
<title>intel_idle (551,501,786 samples, 0.09%)</title><rect x="39.5" y="1461" width="1.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="42.54" y="1471.5" ></text>
</g>
<g >
<title>ep_poll (75,453,194 samples, 0.01%)</title><rect x="30.0" y="1477" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="33.00" y="1487.5" ></text>
</g>
<g >
<title>clockevents_program_event (112,532,550 samples, 0.02%)</title><rect x="835.9" y="1381" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="838.86" y="1391.5" ></text>
</g>
<g >
<title>newidle_balance (982,801,288 samples, 0.15%)</title><rect x="482.5" y="1253" width="1.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="485.48" y="1263.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (56,821,122 samples, 0.01%)</title><rect x="862.7" y="1317" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="865.72" y="1327.5" ></text>
</g>
<g >
<title>reader_loop (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1525" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="20.24" y="1535.5" ></text>
</g>
<g >
<title>[git] (80,832,401 samples, 0.01%)</title><rect x="12.4" y="1541" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.41" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="197" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="207.5" ></text>
</g>
<g >
<title>NaClSysClockGetTime (237,486,011 samples, 0.04%)</title><rect x="820.4" y="1573" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="823.37" y="1583.5" ></text>
</g>
<g >
<title>wrk (325,861,487 samples, 0.05%)</title><rect x="1189.4" y="1605" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1192.41" y="1615.5" ></text>
</g>
<g >
<title>tick_irq_enter (269,792,810 samples, 0.04%)</title><rect x="910.4" y="1413" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="913.37" y="1423.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (197,495,051 samples, 0.03%)</title><rect x="92.5" y="1573" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="95.51" y="1583.5" ></text>
</g>
<g >
<title>NaClLog (398,005,906 samples, 0.06%)</title><rect x="373.2" y="1541" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="376.21" y="1551.5" ></text>
</g>
<g >
<title>psi_group_change (104,096,407 samples, 0.02%)</title><rect x="87.8" y="1477" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="90.78" y="1487.5" ></text>
</g>
<g >
<title>kmem_cache_free (507,852,289 samples, 0.08%)</title><rect x="892.1" y="1413" width="1.0" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="895.15" y="1423.5" ></text>
</g>
<g >
<title>wake_up_process (114,542,860 samples, 0.02%)</title><rect x="1184.7" y="1301" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1187.69" y="1311.5" ></text>
</g>
<g >
<title>call_rcu (417,897,108 samples, 0.06%)</title><rect x="553.9" y="1205" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="556.95" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (998,666,700 samples, 0.15%)</title><rect x="26.2" y="1189" width="1.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.23" y="1199.5" ></text>
</g>
<g >
<title>hrtimer_active (192,565,368 samples, 0.03%)</title><rect x="573.9" y="1285" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="576.92" y="1295.5" ></text>
</g>
<g >
<title>exec_binprm (56,651,202 samples, 0.01%)</title><rect x="833.0" y="1493" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="836.00" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1253" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1263.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (185,611,686 samples, 0.03%)</title><rect x="1095.3" y="1509" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1098.34" y="1519.5" ></text>
</g>
<g >
<title>intel_idle (8,143,542,806 samples, 1.26%)</title><rect x="916.1" y="1461" width="14.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="919.12" y="1471.5" ></text>
</g>
<g >
<title>irq_enter_rcu (78,149,401 samples, 0.01%)</title><rect x="1123.3" y="1429" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1126.30" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,144,768,299 samples, 0.18%)</title><rect x="26.2" y="1461" width="2.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.17" y="1471.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (107,179,199 samples, 0.02%)</title><rect x="892.8" y="1397" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="895.83" y="1407.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (82,966,329 samples, 0.01%)</title><rect x="13.7" y="1429" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="16.67" y="1439.5" ></text>
</g>
<g >
<title>update_cfs_group (221,334,784 samples, 0.03%)</title><rect x="904.3" y="1269" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="907.28" y="1279.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (59,823,796 samples, 0.01%)</title><rect x="521.3" y="1237" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="524.25" y="1247.5" ></text>
</g>
<g >
<title>[bash] (138,597,472 samples, 0.02%)</title><rect x="832.1" y="1333" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="835.07" y="1343.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (89,936,246 samples, 0.01%)</title><rect x="862.7" y="1365" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="865.69" y="1375.5" ></text>
</g>
<g >
<title>alloc_empty_file (3,796,414,473 samples, 0.59%)</title><rect x="524.2" y="1301" width="6.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="527.24" y="1311.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDayDecoder (416,345,805 samples, 0.06%)</title><rect x="821.7" y="1573" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="824.67" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (356,911,173 samples, 0.06%)</title><rect x="508.6" y="1429" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="511.58" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (201,719,031 samples, 0.03%)</title><rect x="1189.5" y="1445" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.54" y="1455.5" ></text>
</g>
<g >
<title>begin_new_exec (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1445" width="0.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="20.70" y="1455.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (192,418,758 samples, 0.03%)</title><rect x="472.2" y="1317" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="475.17" y="1327.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (273,526,994 samples, 0.04%)</title><rect x="506.5" y="1365" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="509.49" y="1375.5" ></text>
</g>
<g >
<title>record__pushfn (797,390,220 samples, 0.12%)</title><rect x="35.8" y="1509" width="1.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="38.76" y="1519.5" ></text>
</g>
<g >
<title>pick_next_task (100,961,630 samples, 0.02%)</title><rect x="50.3" y="1493" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="53.26" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (71,003,929 samples, 0.01%)</title><rect x="10.1" y="1573" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.06" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="821" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="831.5" ></text>
</g>
<g >
<title>__fget_light (288,008,555 samples, 0.04%)</title><rect x="509.8" y="1349" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="512.78" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,063,371,173 samples, 0.16%)</title><rect x="26.2" y="1317" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.21" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1349" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1359.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::nonblock_accept (34,321,768,613 samples, 5.29%)</title><rect x="496.6" y="1461" width="62.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="499.63" y="1471.5" >rustpo..</text>
</g>
<g >
<title>__slab_free (100,896,214 samples, 0.02%)</title><rect x="913.7" y="1301" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="916.75" y="1311.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (379,025,488 samples, 0.06%)</title><rect x="506.4" y="1381" width="0.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="509.40" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="357" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (624,576,992 samples, 0.10%)</title><rect x="26.3" y="725" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.30" y="735.5" ></text>
</g>
<g >
<title>arch_call_rest_init (570,162,054 samples, 0.09%)</title><rect x="50.8" y="1525" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="53.84" y="1535.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (494,691,875 samples, 0.08%)</title><rect x="451.2" y="1445" width="0.9" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="454.20" y="1455.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (915,614,124 samples, 0.14%)</title><rect x="1178.7" y="1493" width="1.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1181.66" y="1503.5" ></text>
</g>
<g >
<title>futex_wait (5,464,724,260 samples, 0.84%)</title><rect x="477.0" y="1349" width="9.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="480.00" y="1359.5" ></text>
</g>
<g >
<title>ep_poll_callback (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1365" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="34.57" y="1375.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (70,434,823 samples, 0.01%)</title><rect x="88.0" y="1493" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="91.05" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (223,299,312 samples, 0.03%)</title><rect x="29.5" y="101" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="111.5" ></text>
</g>
<g >
<title>enqueue_entity (86,415,229 samples, 0.01%)</title><rect x="1076.5" y="1269" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1079.51" y="1279.5" ></text>
</g>
<g >
<title>psi_group_change (107,136,112 samples, 0.02%)</title><rect x="861.9" y="1477" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="864.91" y="1487.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (634,709,392 samples, 0.10%)</title><rect x="896.8" y="1477" width="1.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="899.85" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,443,472 samples, 0.14%)</title><rect x="26.3" y="1061" width="1.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.26" y="1071.5" ></text>
</g>
<g >
<title>[sleep] (410,154,106 samples, 0.06%)</title><rect x="865.4" y="1589" width="0.7" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="868.39" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock (109,544,389 samples, 0.02%)</title><rect x="555.8" y="1285" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="558.77" y="1295.5" ></text>
</g>
<g >
<title>memcg_list_lru_alloc (351,770,155 samples, 0.05%)</title><rect x="522.1" y="1253" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="525.09" y="1263.5" ></text>
</g>
<g >
<title>uv_spawn (1,689,169,231 samples, 0.26%)</title><rect x="22.5" y="1541" width="3.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="25.47" y="1551.5" ></text>
</g>
<g >
<title>do_futex (65,115,585 samples, 0.01%)</title><rect x="31.7" y="1445" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="34.75" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="837" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="847.5" ></text>
</g>
<g >
<title>NaClSysWrite (294,071,590 samples, 0.05%)</title><rect x="604.0" y="1541" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="606.96" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (99,097,592 samples, 0.02%)</title><rect x="28.3" y="1477" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="31.30" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1493" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="34.57" y="1503.5" ></text>
</g>
<g >
<title>__switch_to (158,448,024 samples, 0.02%)</title><rect x="479.2" y="1285" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="482.21" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (571,985,860 samples, 0.09%)</title><rect x="19.7" y="1509" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.67" y="1519.5" ></text>
</g>
<g >
<title>futex_wait (65,115,585 samples, 0.01%)</title><rect x="31.7" y="1429" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="34.75" y="1439.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (162,919,299 samples, 0.03%)</title><rect x="552.5" y="1157" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="555.48" y="1167.5" ></text>
</g>
<g >
<title>dequeue_task_fair (3,740,124,956 samples, 0.58%)</title><rect x="578.5" y="1253" width="6.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="581.48" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="213" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (8,434,143,269 samples, 1.30%)</title><rect x="900.2" y="1461" width="15.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="903.17" y="1471.5" ></text>
</g>
<g >
<title>[sel_ldr] (273,194,940,494 samples, 42.13%)</title><rect x="107.5" y="1589" width="497.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="110.47" y="1599.5" >[sel_ldr]</text>
</g>
<g >
<title>do_syscall_64 (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1477" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="34.57" y="1487.5" ></text>
</g>
<g >
<title>update_rq_clock (182,374,972 samples, 0.03%)</title><rect x="1084.9" y="1477" width="0.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1087.95" y="1487.5" ></text>
</g>
<g >
<title>call_cpuidle (512,771,026 samples, 0.08%)</title><rect x="50.9" y="1445" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="53.87" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1237" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1461" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="1471.5" ></text>
</g>
<g >
<title>shuffle_freelist (94,646,979 samples, 0.01%)</title><rect x="519.7" y="1221" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="522.71" y="1231.5" ></text>
</g>
<g >
<title>malloc (317,786,057 samples, 0.05%)</title><rect x="26.7" y="517" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="29.72" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,911,753,294 samples, 1.07%)</title><rect x="476.1" y="1397" width="12.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="479.13" y="1407.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (116,569,329 samples, 0.02%)</title><rect x="49.8" y="1493" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="52.81" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock (59,529,033 samples, 0.01%)</title><rect x="492.6" y="1365" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="495.58" y="1375.5" ></text>
</g>
<g >
<title>fdarray__poll (112,866,391 samples, 0.02%)</title><rect x="35.5" y="1557" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="38.53" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (427,239,550 samples, 0.07%)</title><rect x="11.0" y="1477" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.02" y="1487.5" ></text>
</g>
<g >
<title>unmap_vmas (1,442,013,834 samples, 0.22%)</title><rect x="32.5" y="1365" width="2.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="35.53" y="1375.5" ></text>
</g>
<g >
<title>read_tsc (128,754,667 samples, 0.02%)</title><rect x="910.6" y="1397" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="913.57" y="1407.5" ></text>
</g>
<g >
<title>enqueue_entity (68,276,190 samples, 0.01%)</title><rect x="860.8" y="1429" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="863.82" y="1439.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (555,397,966 samples, 0.09%)</title><rect x="532.3" y="1269" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="535.33" y="1279.5" ></text>
</g>
<g >
<title>[[vdso]] (237,387,300 samples, 0.04%)</title><rect x="603.5" y="1381" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="606.50" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1509" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1519.5" ></text>
</g>
<g >
<title>sched_clock_cpu (75,951,962 samples, 0.01%)</title><rect x="907.7" y="1317" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="910.66" y="1327.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (81,550,072 samples, 0.01%)</title><rect x="532.1" y="1269" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="535.12" y="1279.5" ></text>
</g>
<g >
<title>fsnotify (56,325,023 samples, 0.01%)</title><rect x="35.8" y="1349" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="38.84" y="1359.5" ></text>
</g>
<g >
<title>sched_clock_cpu (170,691,639 samples, 0.03%)</title><rect x="1095.4" y="1493" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1098.37" y="1503.5" ></text>
</g>
<g >
<title>copy_page_range (1,424,963,969 samples, 0.22%)</title><rect x="22.7" y="1333" width="2.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="25.65" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (2,629,016,250 samples, 0.41%)</title><rect x="26.0" y="1589" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="28.98" y="1599.5" ></text>
</g>
<g >
<title>file_free_rcu (324,747,009 samples, 0.05%)</title><rect x="1116.6" y="1445" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1119.63" y="1455.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (183,207,408 samples, 0.03%)</title><rect x="1076.9" y="1397" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1079.94" y="1407.5" ></text>
</g>
<g >
<title>__schedule (634,015,181 samples, 0.10%)</title><rect x="87.0" y="1509" width="1.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="90.02" y="1519.5" ></text>
</g>
<g >
<title>v8::internal::Heap::Scavenge (131,786,643 samples, 0.02%)</title><rect x="30.2" y="1445" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="33.24" y="1455.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (1,169,443,872 samples, 0.18%)</title><rect x="596.9" y="1317" width="2.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="599.92" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (103,948,664 samples, 0.02%)</title><rect x="12.7" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.71" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (223,299,312 samples, 0.03%)</title><rect x="29.5" y="117" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="661" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="671.5" ></text>
</g>
<g >
<title>ttwu_do_activate (136,067,541 samples, 0.02%)</title><rect x="1111.0" y="1413" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1113.97" y="1423.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (159,489,109 samples, 0.02%)</title><rect x="914.0" y="1333" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="916.98" y="1343.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (85,300,484 samples, 0.01%)</title><rect x="1189.7" y="1285" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1192.68" y="1295.5" ></text>
</g>
<g >
<title>rcu_core_si (2,049,013,895 samples, 0.32%)</title><rect x="890.1" y="1493" width="3.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="893.14" y="1503.5" ></text>
</g>
<g >
<title>dentry_free (813,221,504 samples, 0.13%)</title><rect x="548.7" y="1269" width="1.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="551.73" y="1279.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (8,457,358,431 samples, 1.30%)</title><rect x="1096.8" y="1573" width="15.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1099.75" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_write (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1461" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="34.57" y="1471.5" ></text>
</g>
<g >
<title>rcu_core_si (78,635,424 samples, 0.01%)</title><rect x="39.3" y="1381" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="42.28" y="1391.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1461" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="38.20" y="1471.5" ></text>
</g>
<g >
<title>path_lookupat (72,113,174 samples, 0.01%)</title><rect x="28.3" y="1397" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="31.32" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_write (778,268,845 samples, 0.12%)</title><rect x="35.8" y="1413" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="38.79" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,117,140,850 samples, 0.17%)</title><rect x="26.2" y="1381" width="2.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.19" y="1391.5" ></text>
</g>
<g >
<title>irq_exit_rcu (59,091,005 samples, 0.01%)</title><rect x="85.3" y="1413" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="88.30" y="1423.5" ></text>
</g>
<g >
<title>memcg_list_lru_alloc (258,560,590 samples, 0.04%)</title><rect x="534.1" y="1253" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="537.05" y="1263.5" ></text>
</g>
<g >
<title>pick_next_task_fair (931,880,568 samples, 0.14%)</title><rect x="587.5" y="1253" width="1.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="590.54" y="1263.5" ></text>
</g>
<g >
<title>inode_init_once (64,752,582 samples, 0.01%)</title><rect x="519.8" y="1173" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="522.76" y="1183.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (86,127,478 samples, 0.01%)</title><rect x="560.9" y="1429" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="563.92" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (87,008,353 samples, 0.01%)</title><rect x="475.7" y="1413" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="478.72" y="1423.5" ></text>
</g>
<g >
<title>poll_idle (87,032,998 samples, 0.01%)</title><rect x="17.1" y="1397" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="20.08" y="1407.5" ></text>
</g>
<g >
<title>NaClLog (159,476,911 samples, 0.02%)</title><rect x="95.1" y="1573" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="98.11" y="1583.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1349" width="0.5" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="20.70" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (264,865,864 samples, 0.04%)</title><rect x="28.9" y="85" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="31.88" y="95.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (246,871,024 samples, 0.04%)</title><rect x="297.8" y="1541" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="300.84" y="1551.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (1,689,638,799 samples, 0.26%)</title><rect x="32.1" y="1509" width="3.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="35.08" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,025,123,316 samples, 0.16%)</title><rect x="26.2" y="1237" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.23" y="1247.5" ></text>
</g>
<g >
<title>[libc.so.6] (62,997,210 samples, 0.01%)</title><rect x="97.2" y="1573" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="100.21" y="1583.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (61,492,153 samples, 0.01%)</title><rect x="569.4" y="1301" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="572.40" y="1311.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1557" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="38.20" y="1567.5" ></text>
</g>
<g >
<title>clock_gettime (294,582,591 samples, 0.05%)</title><rect x="603.4" y="1397" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="606.41" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,113,321,368 samples, 0.17%)</title><rect x="26.2" y="1333" width="2.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.20" y="1343.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (679,220,509 samples, 0.10%)</title><rect x="35.9" y="1285" width="1.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="38.95" y="1295.5" ></text>
</g>
<g >
<title>tick_program_event (896,377,489 samples, 0.14%)</title><rect x="572.2" y="1269" width="1.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="575.19" y="1279.5" ></text>
</g>
<g >
<title>try_to_wake_up (466,670,620 samples, 0.07%)</title><rect x="834.8" y="1349" width="0.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="837.79" y="1359.5" ></text>
</g>
<g >
<title>tick_program_event (275,446,401 samples, 0.04%)</title><rect x="1122.8" y="1397" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1125.76" y="1407.5" ></text>
</g>
<g >
<title>kmem_cache_free (126,455,521 samples, 0.02%)</title><rect x="1117.2" y="1413" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1120.24" y="1423.5" ></text>
</g>
<g >
<title>os_xsave (182,540,569 samples, 0.03%)</title><rect x="488.8" y="1413" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="491.81" y="1423.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (97,818,956 samples, 0.02%)</title><rect x="1095.5" y="1461" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1098.47" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (233,407,450 samples, 0.04%)</title><rect x="827.9" y="1589" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="830.95" y="1599.5" ></text>
</g>
<g >
<title>psi_group_change (58,406,812 samples, 0.01%)</title><rect x="50.5" y="1477" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="53.47" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (512,259,538 samples, 0.08%)</title><rect x="19.7" y="1461" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.67" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_lock (119,441,958 samples, 0.02%)</title><rect x="1088.0" y="1493" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1090.99" y="1503.5" ></text>
</g>
<g >
<title>__put_user_8 (194,713,647 samples, 0.03%)</title><rect x="544.1" y="1333" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="547.12" y="1343.5" ></text>
</g>
<g >
<title>copy_p4d_range (1,424,963,969 samples, 0.22%)</title><rect x="22.7" y="1317" width="2.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="25.65" y="1327.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (179,629,178 samples, 0.03%)</title><rect x="38.8" y="1381" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="41.83" y="1391.5" ></text>
</g>
<g >
<title>start_kernel (8,457,358,431 samples, 1.30%)</title><rect x="1096.8" y="1541" width="15.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1099.75" y="1551.5" ></text>
</g>
<g >
<title>__do_softirq (338,024,376 samples, 0.05%)</title><rect x="836.2" y="1397" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="839.16" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (76,735,931 samples, 0.01%)</title><rect x="908.4" y="1397" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="911.39" y="1407.5" ></text>
</g>
<g >
<title>vfs_write (763,948,121 samples, 0.12%)</title><rect x="35.8" y="1381" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="38.81" y="1391.5" ></text>
</g>
<g >
<title>enqueue_task (158,457,360 samples, 0.02%)</title><rect x="860.8" y="1461" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="863.76" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="949" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="959.5" ></text>
</g>
<g >
<title>[[vdso]] (254,109,841 samples, 0.04%)</title><rect x="824.9" y="1573" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="827.88" y="1583.5" ></text>
</g>
<g >
<title>enqueue_task (363,248,583 samples, 0.06%)</title><rect x="57.4" y="1317" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="60.38" y="1327.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (838,347,219 samples, 0.13%)</title><rect x="92.9" y="1573" width="1.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="95.87" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1285" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1295.5" ></text>
</g>
<g >
<title>tick_sched_timer (268,846,435 samples, 0.04%)</title><rect x="907.8" y="1381" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="910.83" y="1391.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (84,127,260 samples, 0.01%)</title><rect x="475.6" y="1413" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="478.56" y="1423.5" ></text>
</g>
<g >
<title>mod_objcg_state (139,556,220 samples, 0.02%)</title><rect x="549.5" y="1237" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="552.52" y="1247.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (55,520,231 samples, 0.01%)</title><rect x="913.3" y="1269" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="916.26" y="1279.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (60,227,080 samples, 0.01%)</title><rect x="12.0" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.01" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (624,576,992 samples, 0.10%)</title><rect x="26.3" y="693" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.30" y="703.5" ></text>
</g>
<g >
<title>node (7,776,871,169 samples, 1.20%)</title><rect x="21.1" y="1605" width="14.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="24.05" y="1615.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (73,974,260 samples, 0.01%)</title><rect x="22.3" y="1541" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="25.27" y="1551.5" ></text>
</g>
<g >
<title>sched_clock (60,162,189 samples, 0.01%)</title><rect x="485.2" y="1253" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="488.23" y="1263.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (7,128,492,576 samples, 1.10%)</title><rect x="523.6" y="1333" width="12.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="526.55" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (242,818,426 samples, 0.04%)</title><rect x="604.1" y="1477" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="607.05" y="1487.5" ></text>
</g>
<g >
<title>unmap_single_vma (1,430,214,924 samples, 0.22%)</title><rect x="32.6" y="1349" width="2.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="35.55" y="1359.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (56,329,301 samples, 0.01%)</title><rect x="889.3" y="1573" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="892.26" y="1583.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (238,429,656 samples, 0.04%)</title><rect x="823.9" y="1573" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="826.93" y="1583.5" ></text>
</g>
<g >
<title>menu_select (798,204,044 samples, 0.12%)</title><rect x="1177.1" y="1493" width="1.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1180.09" y="1503.5" ></text>
</g>
<g >
<title>enqueue_task (59,865,573 samples, 0.01%)</title><rect x="1189.0" y="1397" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1192.03" y="1407.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (56,329,301 samples, 0.01%)</title><rect x="889.3" y="1589" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="892.26" y="1599.5" ></text>
</g>
<g >
<title>syscall (60,374,171 samples, 0.01%)</title><rect x="507.4" y="1429" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="510.43" y="1439.5" ></text>
</g>
<g >
<title>kmem_cache_free (90,825,678 samples, 0.01%)</title><rect x="1123.8" y="1317" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1126.83" y="1327.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1381" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="20.24" y="1391.5" ></text>
</g>
<g >
<title>update_curr (62,181,483 samples, 0.01%)</title><rect x="471.8" y="1301" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="474.82" y="1311.5" ></text>
</g>
<g >
<title>__cmd_record (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1573" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.20" y="1583.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1,302,048,404 samples, 0.20%)</title><rect x="808.6" y="1573" width="2.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="811.60" y="1583.5" ></text>
</g>
<g >
<title>mas_wr_node_store (58,378,929 samples, 0.01%)</title><rect x="25.4" y="1285" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="28.38" y="1295.5" ></text>
</g>
<g >
<title>cpuidle_enter (32,146,279,372 samples, 4.96%)</title><rect x="1118.5" y="1493" width="58.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1121.54" y="1503.5" >cpuidl..</text>
</g>
<g >
<title>ksys_write (773,825,548 samples, 0.12%)</title><rect x="35.8" y="1397" width="1.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="38.79" y="1407.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (365,933,702 samples, 0.06%)</title><rect x="495.8" y="1317" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="498.76" y="1327.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (138,677,072 samples, 0.02%)</title><rect x="1095.9" y="1493" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1098.94" y="1503.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (195,178,316 samples, 0.03%)</title><rect x="34.6" y="1253" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="37.62" y="1263.5" ></text>
</g>
<g >
<title>update_min_vruntime (98,162,549 samples, 0.02%)</title><rect x="471.6" y="1285" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="474.63" y="1295.5" ></text>
</g>
<g >
<title>start_kernel (1,365,800,058 samples, 0.21%)</title><rect x="862.6" y="1541" width="2.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="865.60" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1189" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1199.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (92,274,198,264 samples, 14.23%)</title><rect x="436.0" y="1493" width="167.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="439.04" y="1503.5" >rustposix::safeposix:..</text>
</g>
<g >
<title>clear_buddies (64,887,006 samples, 0.01%)</title><rect x="579.0" y="1237" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="582.01" y="1247.5" ></text>
</g>
<g >
<title>file_free_rcu (248,620,034 samples, 0.04%)</title><rect x="1123.5" y="1333" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1126.54" y="1343.5" ></text>
</g>
<g >
<title>do_iter_read (62,584,796 samples, 0.01%)</title><rect x="435.9" y="1269" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="438.90" y="1279.5" ></text>
</g>
<g >
<title>clear_inode (169,711,906 samples, 0.03%)</title><rect x="551.9" y="1221" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="554.91" y="1231.5" ></text>
</g>
<g >
<title>__alloc_pages (65,964,412 samples, 0.01%)</title><rect x="604.1" y="1301" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="607.12" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (69,986,985 samples, 0.01%)</title><rect x="10.5" y="1525" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.52" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (422,129,754 samples, 0.07%)</title><rect x="11.0" y="1461" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.02" y="1471.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (89,936,246 samples, 0.01%)</title><rect x="862.7" y="1349" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="865.69" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1445" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1455.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (97,945,905 samples, 0.02%)</title><rect x="471.2" y="1269" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="474.18" y="1279.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (166,315,676 samples, 0.03%)</title><rect x="18.4" y="1589" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.36" y="1599.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (39,343,182,161 samples, 6.07%)</title><rect x="1117.8" y="1589" width="71.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1120.81" y="1599.5" >secondar..</text>
</g>
<g >
<title>_raw_spin_unlock (57,818,247 samples, 0.01%)</title><rect x="472.1" y="1301" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="475.07" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="405" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (559,226,764 samples, 0.09%)</title><rect x="834.7" y="1397" width="1.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="837.72" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1525" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1535.5" ></text>
</g>
<g >
<title>__do_softirq (363,043,480 samples, 0.06%)</title><rect x="58.6" y="1397" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="61.61" y="1407.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (56,329,301 samples, 0.01%)</title><rect x="889.3" y="1525" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="892.26" y="1535.5" ></text>
</g>
<g >
<title>ip_local_out (55,396,862 samples, 0.01%)</title><rect x="604.3" y="1269" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="607.30" y="1279.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (1,597,356,616 samples, 0.25%)</title><rect x="349.6" y="1477" width="2.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="352.61" y="1487.5" ></text>
</g>
<g >
<title>run_ksoftirqd (333,902,451 samples, 0.05%)</title><rect x="833.2" y="1525" width="0.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="836.18" y="1535.5" ></text>
</g>
<g >
<title>security_file_alloc (918,022,312 samples, 0.14%)</title><rect x="526.3" y="1269" width="1.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="529.32" y="1279.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (121,352,848 samples, 0.02%)</title><rect x="488.1" y="1317" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="491.06" y="1327.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (195,437,520 samples, 0.03%)</title><rect x="1176.4" y="1445" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1179.45" y="1455.5" ></text>
</g>
<g >
<title>i_callback (545,101,892 samples, 0.08%)</title><rect x="892.1" y="1445" width="1.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="895.08" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1205" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="1215.5" ></text>
</g>
<g >
<title>enqueue_entity (56,270,938 samples, 0.01%)</title><rect x="903.0" y="1301" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="905.97" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (303,404,336 samples, 0.05%)</title><rect x="28.8" y="1541" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.83" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1365" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1375.5" ></text>
</g>
<g >
<title>pick_next_task (191,987,432 samples, 0.03%)</title><rect x="87.3" y="1493" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="90.35" y="1503.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (703,746,606 samples, 0.11%)</title><rect x="116.5" y="1573" width="1.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="119.47" y="1583.5" ></text>
</g>
<g >
<title>uv__fs_work (280,671,764 samples, 0.04%)</title><rect x="31.1" y="1541" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="34.06" y="1551.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get_mut (90,631,356 samples, 0.01%)</title><rect x="803.4" y="1573" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="806.35" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (407,712,140 samples, 0.06%)</title><rect x="391.3" y="1509" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="394.27" y="1519.5" ></text>
</g>
<g >
<title>__hrtimer_init (354,027,982 samples, 0.05%)</title><rect x="568.2" y="1317" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="571.15" y="1327.5" ></text>
</g>
<g >
<title>file_free_rcu (170,540,216 samples, 0.03%)</title><rect x="55.3" y="1445" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="58.27" y="1455.5" ></text>
</g>
<g >
<title>__do_softirq (2,091,178,708 samples, 0.32%)</title><rect x="890.1" y="1509" width="3.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="893.08" y="1519.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (3,012,509,374 samples, 0.46%)</title><rect x="550.2" y="1269" width="5.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="553.21" y="1279.5" ></text>
</g>
<g >
<title>rcu_core (58,004,280 samples, 0.01%)</title><rect x="1176.7" y="1349" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1179.66" y="1359.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (79,625,310 samples, 0.01%)</title><rect x="1189.7" y="1269" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1192.70" y="1279.5" ></text>
</g>
<g >
<title>psi_task_change (667,731,471 samples, 0.10%)</title><rect x="906.1" y="1301" width="1.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="909.15" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,133,797,165 samples, 0.17%)</title><rect x="26.2" y="1397" width="2.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.19" y="1407.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (2,496,380,118 samples, 0.38%)</title><rect x="890.0" y="1589" width="4.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="892.95" y="1599.5" ></text>
</g>
<g >
<title>load_balance (111,427,024 samples, 0.02%)</title><rect x="1124.5" y="1349" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1127.55" y="1359.5" ></text>
</g>
<g >
<title>native_sched_clock (79,108,896 samples, 0.01%)</title><rect x="1093.5" y="1429" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1096.52" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (110,373,893 samples, 0.02%)</title><rect x="11.9" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.92" y="1535.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (208,067,427 samples, 0.03%)</title><rect x="482.9" y="1189" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="485.95" y="1199.5" ></text>
</g>
<g >
<title>place_entity (118,115,150 samples, 0.02%)</title><rect x="904.1" y="1269" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="907.05" y="1279.5" ></text>
</g>
<g >
<title>ret_from_fork (153,649,990 samples, 0.02%)</title><rect x="38.1" y="1573" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="41.13" y="1583.5" ></text>
</g>
<g >
<title>__schedule (325,503,845 samples, 0.05%)</title><rect x="50.1" y="1509" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="53.09" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (58,373,512 samples, 0.01%)</title><rect x="505.0" y="1349" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="508.03" y="1359.5" ></text>
</g>
<g >
<title>enqueue_task_fair (79,243,952 samples, 0.01%)</title><rect x="1111.0" y="1381" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1114.00" y="1391.5" ></text>
</g>
<g >
<title>cpu_startup_entry (58,265,082 samples, 0.01%)</title><rect x="866.3" y="1557" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="869.27" y="1567.5" ></text>
</g>
<g >
<title>free_unref_page_list (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1333" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="38.20" y="1343.5" ></text>
</g>
<g >
<title>put_unused_fd (85,280,499 samples, 0.01%)</title><rect x="542.6" y="1365" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="545.63" y="1375.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (130,669,194 samples, 0.02%)</title><rect x="862.7" y="1381" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="865.69" y="1391.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (202,629,053 samples, 0.03%)</title><rect x="1118.5" y="1477" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1121.54" y="1487.5" ></text>
</g>
<g >
<title>syscall (7,939,280,619 samples, 1.22%)</title><rect x="474.9" y="1429" width="14.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="477.86" y="1439.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (378,407,990 samples, 0.06%)</title><rect x="833.2" y="1589" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="836.15" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="773" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="783.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (83,355,741 samples, 0.01%)</title><rect x="1130.5" y="1445" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1133.48" y="1455.5" ></text>
</g>
<g >
<title>file_free_rcu (934,732,336 samples, 0.14%)</title><rect x="911.2" y="1333" width="1.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="914.25" y="1343.5" ></text>
</g>
<g >
<title>glob_filename (105,626,114 samples, 0.02%)</title><rect x="831.3" y="1397" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="834.30" y="1407.5" ></text>
</g>
<g >
<title>mas_store (99,434,618 samples, 0.02%)</title><rect x="25.3" y="1333" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="28.31" y="1343.5" ></text>
</g>
<g >
<title>rcu_core_si (58,004,280 samples, 0.01%)</title><rect x="1176.7" y="1365" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1179.66" y="1375.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (8,600,749,736 samples, 1.33%)</title><rect x="543.3" y="1397" width="15.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="546.27" y="1407.5" ></text>
</g>
<g >
<title>schedule (134,881,340 samples, 0.02%)</title><rect x="893.9" y="1525" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="896.88" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,123,916 samples, 0.01%)</title><rect x="26.4" y="309" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.35" y="319.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1333" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="20.70" y="1343.5" ></text>
</g>
<g >
<title>sock_alloc_inode (2,482,130,744 samples, 0.38%)</title><rect x="518.9" y="1301" width="4.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="521.87" y="1311.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (84,146,172 samples, 0.01%)</title><rect x="529.0" y="1269" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="532.04" y="1279.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (73,974,260 samples, 0.01%)</title><rect x="22.3" y="1525" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="25.27" y="1535.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (243,487,204 samples, 0.04%)</title><rect x="821.2" y="1573" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="824.23" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,060,199,166 samples, 0.16%)</title><rect x="26.2" y="1301" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.21" y="1311.5" ></text>
</g>
<g >
<title>do_accept (14,501,960,267 samples, 2.24%)</title><rect x="510.6" y="1365" width="26.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="513.56" y="1375.5" >d..</text>
</g>
<g >
<title>NaClSysSelectDecoder (92,274,198,264 samples, 14.23%)</title><rect x="436.0" y="1557" width="167.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="439.04" y="1567.5" >NaClSysSelectDecoder</text>
</g>
<g >
<title>kmem_cache_alloc (242,073,393 samples, 0.04%)</title><rect x="527.5" y="1253" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="530.49" y="1263.5" ></text>
</g>
<g >
<title>user_path_at_empty (65,628,826 samples, 0.01%)</title><rect x="19.4" y="1429" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="22.38" y="1439.5" ></text>
</g>
<g >
<title>__libc_start_main (498,185,620 samples, 0.08%)</title><rect x="11.0" y="1573" width="0.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.99" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="389" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="399.5" ></text>
</g>
<g >
<title>__update_load_avg_se (74,552,765 samples, 0.01%)</title><rect x="1090.8" y="1429" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1093.77" y="1439.5" ></text>
</g>
<g >
<title>poll_idle (80,362,888,250 samples, 12.39%)</title><rect x="931.3" y="1461" width="146.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="934.33" y="1471.5" >poll_idle</text>
</g>
<g >
<title>sock_free_inode (406,439,255 samples, 0.06%)</title><rect x="913.0" y="1317" width="0.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="915.95" y="1327.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (5,432,933,999 samples, 0.84%)</title><rect x="900.3" y="1429" width="9.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="903.31" y="1439.5" ></text>
</g>
<g >
<title>i_callback (58,268,969 samples, 0.01%)</title><rect x="833.5" y="1445" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="836.47" y="1455.5" ></text>
</g>
<g >
<title>kthread (153,649,990 samples, 0.02%)</title><rect x="38.1" y="1557" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="41.13" y="1567.5" ></text>
</g>
<g >
<title>NaClLog (1,775,285,722 samples, 0.27%)</title><rect x="431.8" y="1525" width="3.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="434.78" y="1535.5" ></text>
</g>
<g >
<title>setlocale (236,865,017 samples, 0.04%)</title><rect x="832.5" y="1509" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="835.45" y="1519.5" ></text>
</g>
<g >
<title>enqueue_entity (166,088,316 samples, 0.03%)</title><rect x="57.5" y="1285" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="60.47" y="1295.5" ></text>
</g>
<g >
<title>call_cpuidle (1,325,865,539 samples, 0.20%)</title><rect x="88.6" y="1445" width="2.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="91.63" y="1455.5" ></text>
</g>
<g >
<title>evict (2,381,050,715 samples, 0.37%)</title><rect x="551.3" y="1237" width="4.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="554.31" y="1247.5" ></text>
</g>
<g >
<title>do_idle (122,276,794 samples, 0.02%)</title><rect x="17.0" y="1477" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="20.02" y="1487.5" ></text>
</g>
<g >
<title>rcu_do_batch (140,565,910 samples, 0.02%)</title><rect x="1098.1" y="1285" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1101.13" y="1295.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1,370,499,566 samples, 0.21%)</title><rect x="528.0" y="1285" width="2.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="530.99" y="1295.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,365,800,058 samples, 0.21%)</title><rect x="862.6" y="1493" width="2.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="865.60" y="1503.5" ></text>
</g>
<g >
<title>__slab_free (171,889,793 samples, 0.03%)</title><rect x="912.4" y="1301" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="915.39" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (66,968,240 samples, 0.01%)</title><rect x="833.0" y="1573" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="836.00" y="1583.5" ></text>
</g>
<g >
<title>do_sched_yield (3,824,202,496 samples, 0.59%)</title><rect x="466.4" y="1365" width="7.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="469.43" y="1375.5" ></text>
</g>
<g >
<title>sock_free_inode (95,568,783 samples, 0.01%)</title><rect x="55.6" y="1429" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="58.60" y="1439.5" ></text>
</g>
<g >
<title>NaClSysOpen (225,801,715 samples, 0.03%)</title><rect x="435.5" y="1541" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="438.46" y="1551.5" ></text>
</g>
<g >
<title>security_d_instantiate (320,749,542 samples, 0.05%)</title><rect x="535.7" y="1301" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="538.70" y="1311.5" ></text>
</g>
<g >
<title>irq_exit_rcu (99,239,193 samples, 0.02%)</title><rect x="39.3" y="1429" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="42.28" y="1439.5" ></text>
</g>
<g >
<title>kmem_cache_free (261,597,815 samples, 0.04%)</title><rect x="556.9" y="1285" width="0.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="559.89" y="1295.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (5,986,512,441 samples, 0.92%)</title><rect x="38.6" y="1477" width="10.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="41.62" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (31,857,073,197 samples, 4.91%)</title><rect x="1118.9" y="1477" width="58.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1121.91" y="1487.5" >cpuidl..</text>
</g>
<g >
<title>cpuidle_enter (6,017,106,533 samples, 0.93%)</title><rect x="38.6" y="1493" width="10.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="41.58" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1061" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1071.5" ></text>
</g>
<g >
<title>free_bprm (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1445" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="38.20" y="1455.5" ></text>
</g>
<g >
<title>file_free_rcu (71,521,698 samples, 0.01%)</title><rect x="1077.0" y="1317" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1079.95" y="1327.5" ></text>
</g>
<g >
<title>load_balance (574,777,200 samples, 0.09%)</title><rect x="588.1" y="1221" width="1.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="591.11" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="293" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="805" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="815.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (164,462,513 samples, 0.03%)</title><rect x="1111.0" y="1429" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1113.96" y="1439.5" ></text>
</g>
<g >
<title>up_write (152,381,487 samples, 0.02%)</title><rect x="557.8" y="1269" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="560.76" y="1279.5" ></text>
</g>
<g >
<title>newidle_balance (799,808,271 samples, 0.12%)</title><rect x="587.8" y="1237" width="1.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="590.78" y="1247.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (164,540,571 samples, 0.03%)</title><rect x="18.4" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.36" y="1567.5" ></text>
</g>
<g >
<title>[git] (80,832,401 samples, 0.01%)</title><rect x="12.4" y="1461" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.41" y="1471.5" ></text>
</g>
<g >
<title>i_callback (410,368,681 samples, 0.06%)</title><rect x="912.9" y="1333" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="915.95" y="1343.5" ></text>
</g>
<g >
<title>select_idle_sibling (56,200,623 samples, 0.01%)</title><rect x="1120.7" y="1317" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1123.69" y="1327.5" ></text>
</g>
<g >
<title>__fput (6,498,252,926 samples, 1.00%)</title><rect x="546.3" y="1317" width="11.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="549.34" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="325" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="335.5" ></text>
</g>
<g >
<title>do_readlinkat (171,585,659 samples, 0.03%)</title><rect x="19.3" y="1445" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="22.33" y="1455.5" ></text>
</g>
<g >
<title>wake_up_process (179,629,178 samples, 0.03%)</title><rect x="38.8" y="1365" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="41.83" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (239,865,689 samples, 0.04%)</title><rect x="604.1" y="1445" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="607.05" y="1455.5" ></text>
</g>
<g >
<title>do_fcntl (686,176,304 samples, 0.11%)</title><rect x="504.4" y="1365" width="1.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="507.37" y="1375.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (30,717,925,058 samples, 4.74%)</title><rect x="300.8" y="1525" width="55.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="303.78" y="1535.5" >NaClS..</text>
</g>
<g >
<title>__libc_start_main (80,832,401 samples, 0.01%)</title><rect x="12.4" y="1573" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="15.41" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (55,651,845 samples, 0.01%)</title><rect x="55.1" y="1573" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="58.07" y="1583.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (65,190,966 samples, 0.01%)</title><rect x="489.2" y="1413" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="492.18" y="1423.5" ></text>
</g>
<g >
<title>__update_load_avg_se (74,244,741 samples, 0.01%)</title><rect x="1089.9" y="1445" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1092.86" y="1455.5" ></text>
</g>
<g >
<title>_Fork (1,675,280,756 samples, 0.26%)</title><rect x="22.5" y="1477" width="3.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="25.47" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (59,155,074 samples, 0.01%)</title><rect x="12.8" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.76" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (269,213,086 samples, 0.04%)</title><rect x="28.9" y="133" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1397" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="1407.5" ></text>
</g>
<g >
<title>tick_program_event (93,807,043 samples, 0.01%)</title><rect x="58.3" y="1397" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="61.30" y="1407.5" ></text>
</g>
<g >
<title>update_rq_clock (136,446,362 samples, 0.02%)</title><rect x="907.6" y="1333" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="910.55" y="1343.5" ></text>
</g>
<g >
<title>load_balance (114,058,075 samples, 0.02%)</title><rect x="914.4" y="1349" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="917.38" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (399,455,785 samples, 0.06%)</title><rect x="865.4" y="1509" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="868.40" y="1519.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (215,110,651 samples, 0.03%)</title><rect x="1184.7" y="1381" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1187.67" y="1391.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (58,355,725 samples, 0.01%)</title><rect x="519.3" y="1253" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="522.35" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (85,167,865 samples, 0.01%)</title><rect x="20.7" y="1589" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="23.72" y="1599.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (765,838,201 samples, 0.12%)</title><rect x="188.6" y="1541" width="1.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="191.64" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="789" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1125" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1135.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (409,466,706 samples, 0.06%)</title><rect x="1097.3" y="1365" width="0.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1100.32" y="1375.5" ></text>
</g>
<g >
<title>try_to_wake_up (214,573,966 samples, 0.03%)</title><rect x="1076.4" y="1333" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1079.38" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (813,906,249 samples, 0.13%)</title><rect x="26.3" y="901" width="1.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.27" y="911.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (215,110,651 samples, 0.03%)</title><rect x="1184.7" y="1397" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1187.67" y="1407.5" ></text>
</g>
<g >
<title>arch_call_rest_init (2,673,582,696 samples, 0.41%)</title><rect x="1184.5" y="1525" width="4.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1187.53" y="1535.5" ></text>
</g>
<g >
<title>inode_free_by_rcu (143,361,043 samples, 0.02%)</title><rect x="913.7" y="1333" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="916.69" y="1343.5" ></text>
</g>
<g >
<title>inet_sendmsg (239,865,689 samples, 0.04%)</title><rect x="604.1" y="1397" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="607.05" y="1407.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (150,125,316 samples, 0.02%)</title><rect x="530.2" y="1269" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="533.20" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="645" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="655.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (838,564,590 samples, 0.13%)</title><rect x="56.9" y="1413" width="1.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="59.95" y="1423.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (205,774,343 samples, 0.03%)</title><rect x="38.8" y="1397" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="41.80" y="1407.5" ></text>
</g>
<g >
<title>execute_command_internal (584,350,883 samples, 0.09%)</title><rect x="831.3" y="1493" width="1.0" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="834.26" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (236,865,017 samples, 0.04%)</title><rect x="832.5" y="1493" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="835.45" y="1503.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,356,483,717 samples, 0.36%)</title><rect x="1184.6" y="1429" width="4.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1187.58" y="1439.5" ></text>
</g>
<g >
<title>update_load_avg (386,745,328 samples, 0.06%)</title><rect x="1083.5" y="1413" width="0.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1086.53" y="1423.5" ></text>
</g>
<g >
<title>intel_idle (229,924,986 samples, 0.04%)</title><rect x="1185.1" y="1397" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1188.07" y="1407.5" ></text>
</g>
<g >
<title>__get_user_8 (253,182,976 samples, 0.04%)</title><rect x="544.7" y="1317" width="0.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="547.72" y="1327.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (1,943,106,728 samples, 0.30%)</title><rect x="1081.8" y="1509" width="3.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1084.77" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (588,556,318 samples, 0.09%)</title><rect x="465.0" y="1413" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="467.99" y="1423.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (57,890,792 samples, 0.01%)</title><rect x="13.7" y="1397" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="16.67" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="437" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="447.5" ></text>
</g>
<g >
<title>poll_idle (4,910,046,004 samples, 0.76%)</title><rect x="40.6" y="1461" width="8.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="43.58" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (14,676,023,213 samples, 2.26%)</title><rect x="834.0" y="1525" width="26.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="837.01" y="1535.5" >c..</text>
</g>
<g >
<title>__memset (61,348,118 samples, 0.01%)</title><rect x="524.4" y="1285" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="527.37" y="1295.5" ></text>
</g>
<g >
<title>rcu_core_si (333,902,451 samples, 0.05%)</title><rect x="833.2" y="1493" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="836.18" y="1503.5" ></text>
</g>
<g >
<title>local_clock_noinstr (76,827,533 samples, 0.01%)</title><rect x="839.0" y="1461" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="841.97" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (338,441,439 samples, 0.05%)</title><rect x="865.4" y="1477" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="868.40" y="1487.5" ></text>
</g>
<g >
<title>ttwu_do_activate (103,512,331 samples, 0.02%)</title><rect x="49.8" y="1477" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="52.81" y="1487.5" ></text>
</g>
<g >
<title>kthread (404,862,201 samples, 0.06%)</title><rect x="55.2" y="1557" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="58.19" y="1567.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (153,649,990 samples, 0.02%)</title><rect x="38.1" y="1589" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="41.13" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (93,005,265 samples, 0.01%)</title><rect x="492.3" y="1429" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="495.31" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="373" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="383.5" ></text>
</g>
<g >
<title>enqueue_task (747,713,574 samples, 0.12%)</title><rect x="1178.8" y="1461" width="1.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1181.83" y="1471.5" ></text>
</g>
<g >
<title>rcu_do_batch (306,220,244 samples, 0.05%)</title><rect x="58.7" y="1349" width="0.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="61.65" y="1359.5" ></text>
</g>
<g >
<title>select_task_rq_fair (269,175,079 samples, 0.04%)</title><rect x="901.8" y="1333" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="904.84" y="1343.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (161,981,507 samples, 0.02%)</title><rect x="559.8" y="1461" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="562.79" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="197" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="207.5" ></text>
</g>
<g >
<title>do_idle (2,664,666,631 samples, 0.41%)</title><rect x="1184.5" y="1477" width="4.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1187.54" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (535,757,235 samples, 0.08%)</title><rect x="26.3" y="565" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.32" y="575.5" ></text>
</g>
<g >
<title>read (73,853,617 samples, 0.01%)</title><rect x="435.9" y="1397" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="438.88" y="1407.5" ></text>
</g>
<g >
<title>mod_objcg_state (182,730,992 samples, 0.03%)</title><rect x="533.0" y="1253" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="536.01" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1397" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1407.5" ></text>
</g>
<g >
<title>task_work_run (6,991,078,414 samples, 1.08%)</title><rect x="546.1" y="1349" width="12.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="549.07" y="1359.5" ></text>
</g>
<g >
<title>mod_objcg_state (76,937,895 samples, 0.01%)</title><rect x="892.7" y="1397" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="895.69" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1141" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1151.5" ></text>
</g>
<g >
<title>cpuidle_enter (118,128,289 samples, 0.02%)</title><rect x="17.0" y="1429" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="20.02" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (150,442,719 samples, 0.02%)</title><rect x="31.7" y="1509" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="34.69" y="1519.5" ></text>
</g>
<g >
<title>rest_init (1,365,800,058 samples, 0.21%)</title><rect x="862.6" y="1509" width="2.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="865.60" y="1519.5" ></text>
</g>
<g >
<title>[[vdso]] (432,014,100 samples, 0.07%)</title><rect x="355.2" y="1493" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="358.17" y="1503.5" ></text>
</g>
<g >
<title>psi_task_switch (1,533,802,903 samples, 0.24%)</title><rect x="590.2" y="1269" width="2.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="593.17" y="1279.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (2,402,327,083 samples, 0.37%)</title><rect x="569.5" y="1301" width="4.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="572.52" y="1311.5" ></text>
</g>
<g >
<title>__wake_up_common (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1381" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="34.57" y="1391.5" ></text>
</g>
<g >
<title>__rcu_read_lock (187,966,695 samples, 0.03%)</title><rect x="503.9" y="1349" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="506.92" y="1359.5" ></text>
</g>
<g >
<title>NaCl_trampoline_code_end (827,003,081 samples, 0.13%)</title><rect x="355.2" y="1509" width="1.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="358.17" y="1519.5" ></text>
</g>
<g >
<title>malloc (67,406,818 samples, 0.01%)</title><rect x="27.5" y="709" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="30.46" y="719.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1,038,107,469 samples, 0.16%)</title><rect x="521.4" y="1269" width="1.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="524.44" y="1279.5" ></text>
</g>
<g >
<title>record_times (78,751,450 samples, 0.01%)</title><rect x="1093.2" y="1461" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1096.15" y="1471.5" ></text>
</g>
<g >
<title>file_free_rcu (77,842,969 samples, 0.01%)</title><rect x="38.2" y="1445" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="41.17" y="1455.5" ></text>
</g>
<g >
<title>[bash] (276,151,904 samples, 0.04%)</title><rect x="831.5" y="1333" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="834.55" y="1343.5" ></text>
</g>
<g >
<title>HandleStackContext (21,310,606,498 samples, 3.29%)</title><rect x="151.3" y="1557" width="38.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="154.26" y="1567.5" >Han..</text>
</g>
<g >
<title>pick_next_task (1,285,026,398 samples, 0.20%)</title><rect x="1088.8" y="1493" width="2.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1091.76" y="1503.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,889,319,039 samples, 0.29%)</title><rect x="13.6" y="1557" width="3.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="16.58" y="1567.5" ></text>
</g>
<g >
<title>lapic_next_deadline (68,800,641 samples, 0.01%)</title><rect x="1122.8" y="1365" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1125.76" y="1375.5" ></text>
</g>
<g >
<title>select_task_rq_fair (334,280,029 samples, 0.05%)</title><rect x="495.1" y="1317" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="498.14" y="1327.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (342,226,660 samples, 0.05%)</title><rect x="481.6" y="1285" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="484.58" y="1295.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectDefineProperties (61,022,384 samples, 0.01%)</title><rect x="22.1" y="1557" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="25.13" y="1567.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (62,103,983 samples, 0.01%)</title><rect x="907.7" y="1285" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="910.69" y="1295.5" ></text>
</g>
<g >
<title>glob_vector (69,165,098 samples, 0.01%)</title><rect x="831.4" y="1381" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="834.36" y="1391.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::DefineOwnProperty (59,890,143 samples, 0.01%)</title><rect x="22.1" y="1525" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="25.13" y="1535.5" ></text>
</g>
<g >
<title>execute_command (118,345,237 samples, 0.02%)</title><rect x="831.6" y="1317" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="834.55" y="1327.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (2,246,424,002 samples, 0.35%)</title><rect x="1081.7" y="1525" width="4.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1084.67" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="565" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="575.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (833,414,318 samples, 0.13%)</title><rect x="35.7" y="1541" width="1.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="38.73" y="1551.5" ></text>
</g>
<g >
<title>sched_clock (204,858,140 samples, 0.03%)</title><rect x="592.6" y="1237" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="595.59" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="149" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="159.5" ></text>
</g>
<g >
<title>__put_user_8 (73,541,975 samples, 0.01%)</title><rect x="487.9" y="1317" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="490.92" y="1327.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (72,381,062 samples, 0.01%)</title><rect x="1097.0" y="1413" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1100.00" y="1423.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (259,058,293 samples, 0.04%)</title><rect x="38.8" y="1413" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="41.79" y="1423.5" ></text>
</g>
<g >
<title>ttwu_do_activate (129,890,254 samples, 0.02%)</title><rect x="38.9" y="1333" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="41.89" y="1343.5" ></text>
</g>
<g >
<title>file_free_rcu (131,007,157 samples, 0.02%)</title><rect x="833.2" y="1445" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="836.23" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (212,460,615 samples, 0.03%)</title><rect x="26.3" y="501" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.32" y="511.5" ></text>
</g>
<g >
<title>parse_and_execute (70,154,971 samples, 0.01%)</title><rect x="832.2" y="1301" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="835.17" y="1311.5" ></text>
</g>
<g >
<title>pte_alloc_one (116,368,640 samples, 0.02%)</title><rect x="23.3" y="1269" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="26.25" y="1279.5" ></text>
</g>
<g >
<title>sched_clock_cpu (74,044,542 samples, 0.01%)</title><rect x="907.2" y="1285" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="910.23" y="1295.5" ></text>
</g>
<g >
<title>vfs_read (190,119,191 samples, 0.03%)</title><rect x="1189.6" y="1397" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1192.55" y="1407.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (90,076,865 samples, 0.01%)</title><rect x="891.6" y="1397" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="894.64" y="1407.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (91,001,274 samples, 0.01%)</title><rect x="556.7" y="1285" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="559.69" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (76,201,103 samples, 0.01%)</title><rect x="20.9" y="1589" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="23.91" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock (169,521,112 samples, 0.03%)</title><rect x="551.5" y="1221" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="554.54" y="1231.5" ></text>
</g>
<g >
<title>__d_instantiate (173,128,000 samples, 0.03%)</title><rect x="535.1" y="1301" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="538.07" y="1311.5" ></text>
</g>
<g >
<title>do_idle (36,570,122,104 samples, 5.64%)</title><rect x="1117.8" y="1541" width="66.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1120.83" y="1551.5" >do_idle</text>
</g>
<g >
<title>cpu_startup_entry (2,673,582,696 samples, 0.41%)</title><rect x="1184.5" y="1493" width="4.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1187.53" y="1503.5" ></text>
</g>
<g >
<title>i_callback (172,747,404 samples, 0.03%)</title><rect x="1124.0" y="1333" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1126.99" y="1343.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (72,168,585 samples, 0.01%)</title><rect x="482.7" y="1205" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="485.67" y="1215.5" ></text>
</g>
<g >
<title>iput (2,915,601,639 samples, 0.45%)</title><rect x="550.4" y="1253" width="5.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="553.39" y="1263.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (677,679,386 samples, 0.10%)</title><rect x="57.0" y="1397" width="1.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="59.97" y="1407.5" ></text>
</g>
<g >
<title>operator new (317,786,057 samples, 0.05%)</title><rect x="26.7" y="533" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="29.72" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock (321,372,209 samples, 0.05%)</title><rect x="550.7" y="1237" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="553.66" y="1247.5" ></text>
</g>
<g >
<title>cpuidle_enter (7,511,056,387 samples, 1.16%)</title><rect x="1097.0" y="1429" width="13.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1100.00" y="1439.5" ></text>
</g>
<g >
<title>__rcu_read_lock (79,239,047 samples, 0.01%)</title><rect x="519.9" y="1269" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="522.89" y="1279.5" ></text>
</g>
<g >
<title>ttwu_do_activate (55,163,924 samples, 0.01%)</title><rect x="88.7" y="1269" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="91.68" y="1279.5" ></text>
</g>
<g >
<title>clock_gettime@plt (345,612,029 samples, 0.05%)</title><rect x="342.6" y="1493" width="0.7" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="345.64" y="1503.5" ></text>
</g>
<g >
<title>poll_idle (1,846,552,282 samples, 0.28%)</title><rect x="1185.5" y="1397" width="3.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1188.50" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="485" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="495.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (67,318,801 samples, 0.01%)</title><rect x="912.6" y="1285" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="915.58" y="1295.5" ></text>
</g>
<g >
<title>perf_mmap__push (812,430,655 samples, 0.13%)</title><rect x="35.7" y="1525" width="1.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="38.73" y="1535.5" ></text>
</g>
<g >
<title>__remove_hrtimer (106,007,734 samples, 0.02%)</title><rect x="900.8" y="1381" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="903.79" y="1391.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (540,113,754 samples, 0.08%)</title><rect x="190.0" y="1557" width="1.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="193.03" y="1567.5" ></text>
</g>
<g >
<title>5_ (101,623,879 samples, 0.02%)</title><rect x="10.0" y="1605" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (96,078,504 samples, 0.01%)</title><rect x="12.7" y="1445" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.71" y="1455.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (851,697,174 samples, 0.13%)</title><rect x="487.2" y="1381" width="1.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="490.15" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,572,556,202 samples, 0.71%)</title><rect x="466.1" y="1413" width="8.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="469.06" y="1423.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (95,339,686 samples, 0.01%)</title><rect x="862.3" y="1525" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="865.31" y="1535.5" ></text>
</g>
<g >
<title>security_socket_accept (201,643,763 samples, 0.03%)</title><rect x="514.2" y="1349" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="517.24" y="1359.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (8,313,805,415 samples, 1.28%)</title><rect x="543.7" y="1365" width="15.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="546.67" y="1375.5" ></text>
</g>
<g >
<title>cpu_startup_entry (111,064,987,300 samples, 17.13%)</title><rect x="894.5" y="1557" width="202.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="897.50" y="1567.5" >cpu_startup_entry</text>
</g>
<g >
<title>tcp_seq_start (81,339,715 samples, 0.01%)</title><rect x="31.3" y="1365" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="34.28" y="1375.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (244,593,832 samples, 0.04%)</title><rect x="545.3" y="1333" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="548.28" y="1343.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (78,607,118 samples, 0.01%)</title><rect x="892.5" y="1381" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="895.51" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_select (66,978,413 samples, 0.01%)</title><rect x="16.7" y="1509" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="19.71" y="1519.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (56,009,080 samples, 0.01%)</title><rect x="485.2" y="1237" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="488.23" y="1247.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (87,208,238 samples, 0.01%)</title><rect x="550.5" y="1237" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="553.50" y="1247.5" ></text>
</g>
<g >
<title>___slab_alloc (378,201,119 samples, 0.06%)</title><rect x="519.2" y="1269" width="0.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="522.19" y="1279.5" ></text>
</g>
<g >
<title>enqueue_entity (787,397,528 samples, 0.12%)</title><rect x="1082.8" y="1429" width="1.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1085.80" y="1439.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1349" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="20.24" y="1359.5" ></text>
</g>
<g >
<title>kmem_cache_free (87,186,033 samples, 0.01%)</title><rect x="1117.1" y="1429" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1120.05" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,684,147,644 samples, 0.26%)</title><rect x="13.6" y="1493" width="3.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="16.63" y="1503.5" ></text>
</g>
<g >
<title>sched_mm_cid_before_execve (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1333" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="20.24" y="1343.5" ></text>
</g>
<g >
<title>NaClXlateSysRet (246,861,873 samples, 0.04%)</title><rect x="435.0" y="1525" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="438.01" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (933,695,411 samples, 0.14%)</title><rect x="26.3" y="1077" width="1.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.25" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="517" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="527.5" ></text>
</g>
<g >
<title>psi_task_switch (149,887,345 samples, 0.02%)</title><rect x="87.8" y="1493" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="90.75" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1509" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="38.20" y="1519.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,203,538,156 samples, 0.19%)</title><rect x="834.7" y="1461" width="2.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="837.67" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="965" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="757" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="767.5" ></text>
</g>
<g >
<title>kmem_cache_free (79,271,824 samples, 0.01%)</title><rect x="58.9" y="1317" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="61.87" y="1327.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (87,439,283 samples, 0.01%)</title><rect x="865.2" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="868.21" y="1567.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::send_syscall (247,483,078 samples, 0.04%)</title><rect x="604.0" y="1509" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="607.04" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1493" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19,763,975,410 samples, 3.05%)</title><rect x="565.4" y="1397" width="35.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="568.35" y="1407.5" >ent..</text>
</g>
<g >
<title>rcu_core_si (122,254,539 samples, 0.02%)</title><rect x="38.1" y="1493" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="41.15" y="1503.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (91,165,949 samples, 0.01%)</title><rect x="88.7" y="1349" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="91.66" y="1359.5" ></text>
</g>
<g >
<title>__poll (112,866,391 samples, 0.02%)</title><rect x="35.5" y="1541" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="38.53" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (223,299,312 samples, 0.03%)</title><rect x="29.5" y="85" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (236,865,017 samples, 0.04%)</title><rect x="832.5" y="1461" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="835.45" y="1471.5" ></text>
</g>
<g >
<title>clockevents_program_event (864,447,600 samples, 0.13%)</title><rect x="572.2" y="1253" width="1.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="575.22" y="1263.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (79,087,405 samples, 0.01%)</title><rect x="889.5" y="1525" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="892.51" y="1535.5" ></text>
</g>
<g >
<title>update_load_avg (85,933,196 samples, 0.01%)</title><rect x="1182.8" y="1445" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1185.77" y="1455.5" ></text>
</g>
<g >
<title>map_id_range_down (75,498,024 samples, 0.01%)</title><rect x="517.4" y="1269" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="520.36" y="1279.5" ></text>
</g>
<g >
<title>do_idle (1,365,800,058 samples, 0.21%)</title><rect x="862.6" y="1477" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="865.60" y="1487.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (124,088,899 samples, 0.02%)</title><rect x="36.9" y="1221" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="39.85" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (738,669,746 samples, 0.11%)</title><rect x="26.3" y="789" width="1.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.28" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (66,968,240 samples, 0.01%)</title><rect x="833.0" y="1589" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="836.00" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1269" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1279.5" ></text>
</g>
<g >
<title>set_next_entity (78,795,759 samples, 0.01%)</title><rect x="50.3" y="1461" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="53.29" y="1471.5" ></text>
</g>
<g >
<title>__libc_start_main (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1573" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="20.24" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (943,582,417 samples, 0.15%)</title><rect x="26.2" y="1125" width="1.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.24" y="1135.5" ></text>
</g>
<g >
<title>ttwu_do_activate (170,365,242 samples, 0.03%)</title><rect x="860.8" y="1477" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="863.76" y="1487.5" ></text>
</g>
<g >
<title>ksys_read (73,853,617 samples, 0.01%)</title><rect x="435.9" y="1333" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="438.88" y="1343.5" ></text>
</g>
<g >
<title>[git] (80,832,401 samples, 0.01%)</title><rect x="12.4" y="1509" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.41" y="1519.5" ></text>
</g>
<g >
<title>rcu_core (2,040,770,371 samples, 0.31%)</title><rect x="890.1" y="1477" width="3.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="893.14" y="1487.5" ></text>
</g>
<g >
<title>psi_group_change (981,472,160 samples, 0.15%)</title><rect x="590.6" y="1253" width="1.8" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="593.59" y="1263.5" ></text>
</g>
<g >
<title>dup_mmap (1,675,280,756 samples, 0.26%)</title><rect x="22.5" y="1349" width="3.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="25.47" y="1359.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (788,278,520 samples, 0.12%)</title><rect x="272.0" y="1557" width="1.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="274.96" y="1567.5" ></text>
</g>
<g >
<title>blkcg_maybe_throttle_current (60,250,755 samples, 0.01%)</title><rect x="545.8" y="1349" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="548.82" y="1359.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (5,820,947,848 samples, 0.90%)</title><rect x="361.5" y="1541" width="10.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="364.53" y="1551.5" ></text>
</g>
<g >
<title>update_rq_clock (72,336,526 samples, 0.01%)</title><rect x="485.5" y="1285" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="488.47" y="1295.5" ></text>
</g>
<g >
<title>psi_task_switch (93,389,931 samples, 0.01%)</title><rect x="50.5" y="1493" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="53.45" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (112,866,391 samples, 0.02%)</title><rect x="35.5" y="1525" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="38.53" y="1535.5" ></text>
</g>
<g >
<title>run_ksoftirqd (2,091,178,708 samples, 0.32%)</title><rect x="890.1" y="1525" width="3.8" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="893.08" y="1535.5" ></text>
</g>
<g >
<title>dispatcher (92,274,198,264 samples, 14.23%)</title><rect x="436.0" y="1509" width="167.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="439.04" y="1519.5" >dispatcher</text>
</g>
<g >
<title>[perf-959242.map] (5,177,629,051 samples, 0.80%)</title><rect x="98.1" y="1589" width="9.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="101.05" y="1599.5" ></text>
</g>
<g >
<title>switch_fpu_return (73,531,915 samples, 0.01%)</title><rect x="488.5" y="1349" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="491.55" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_select (1,845,239,282 samples, 0.28%)</title><rect x="1078.2" y="1509" width="3.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1081.16" y="1519.5" ></text>
</g>
<g >
<title>NaClSysClockGetTimeDecoder (234,033,223 samples, 0.04%)</title><rect x="820.8" y="1573" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="823.80" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,678,470,121 samples, 0.26%)</title><rect x="13.6" y="1477" width="3.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="16.64" y="1487.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (1,880,108,567 samples, 0.29%)</title><rect x="1081.9" y="1493" width="3.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1084.86" y="1503.5" ></text>
</g>
<g >
<title>ttwu_do_activate (411,524,901 samples, 0.06%)</title><rect x="57.3" y="1333" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="60.30" y="1343.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (249,365,491 samples, 0.04%)</title><rect x="564.5" y="1397" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="567.49" y="1407.5" ></text>
</g>
<g >
<title>read_tsc (72,821,669 samples, 0.01%)</title><rect x="910.0" y="1365" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="913.02" y="1375.5" ></text>
</g>
<g >
<title>sock_poll (61,777,349 samples, 0.01%)</title><rect x="889.5" y="1509" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="892.54" y="1519.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (448,454,862 samples, 0.07%)</title><rect x="95.4" y="1573" width="0.8" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="98.40" y="1583.5" ></text>
</g>
<g >
<title>__alloc_pages (123,027,270 samples, 0.02%)</title><rect x="519.5" y="1205" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="522.46" y="1215.5" ></text>
</g>
<g >
<title>ret_from_fork (2,496,380,118 samples, 0.38%)</title><rect x="890.0" y="1573" width="4.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="892.95" y="1583.5" ></text>
</g>
<g >
<title>[sel_ldr] (76,512,201,211 samples, 11.80%)</title><rect x="664.1" y="1573" width="139.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="667.08" y="1583.5" >[sel_ldr]</text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (583,971,917 samples, 0.09%)</title><rect x="817.4" y="1573" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="820.40" y="1583.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (593,507,769 samples, 0.09%)</title><rect x="489.3" y="1445" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="492.31" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="869" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,057,539,916 samples, 0.16%)</title><rect x="26.2" y="1285" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.22" y="1295.5" ></text>
</g>
<g >
<title>__do_softirq (88,427,865 samples, 0.01%)</title><rect x="39.3" y="1397" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="42.28" y="1407.5" ></text>
</g>
<g >
<title>execute_command (423,968,579 samples, 0.07%)</title><rect x="831.5" y="1461" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="834.55" y="1471.5" ></text>
</g>
<g >
<title>rest_init (8,457,358,431 samples, 1.30%)</title><rect x="1096.8" y="1509" width="15.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1099.75" y="1519.5" ></text>
</g>
<g >
<title>rcu_core (1,799,465,100 samples, 0.28%)</title><rect x="911.0" y="1365" width="3.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="914.04" y="1375.5" ></text>
</g>
<g >
<title>__update_load_avg_se (78,997,445 samples, 0.01%)</title><rect x="481.2" y="1221" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="484.22" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,117,140,850 samples, 0.17%)</title><rect x="26.2" y="1365" width="2.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.19" y="1375.5" ></text>
</g>
<g >
<title>pick_next_entity (210,035,270 samples, 0.03%)</title><rect x="469.8" y="1285" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="472.83" y="1295.5" ></text>
</g>
<g >
<title>__writeback_single_inode (103,280,391 samples, 0.02%)</title><rect x="894.3" y="1429" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="897.29" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (202,070,462 samples, 0.03%)</title><rect x="31.1" y="1493" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="34.07" y="1503.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (131,275,243 samples, 0.02%)</title><rect x="834.1" y="1477" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="837.13" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (166,315,676 samples, 0.03%)</title><rect x="18.4" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.36" y="1583.5" ></text>
</g>
<g >
<title>__get_user_8 (83,152,059 samples, 0.01%)</title><rect x="488.1" y="1301" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="491.11" y="1311.5" ></text>
</g>
<g >
<title>start_secondary (1,893,257,471 samples, 0.29%)</title><rect x="13.6" y="1573" width="3.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="16.58" y="1583.5" ></text>
</g>
<g >
<title>local_clock_noinstr (124,064,172 samples, 0.02%)</title><rect x="1077.3" y="1445" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1080.32" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (121,817,534 samples, 0.02%)</title><rect x="11.9" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.91" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1413" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1423.5" ></text>
</g>
<g >
<title>sched_clock_cpu (126,760,854 samples, 0.02%)</title><rect x="593.3" y="1253" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="596.25" y="1263.5" ></text>
</g>
<g >
<title>rest_init (1,458,329,916 samples, 0.22%)</title><rect x="88.6" y="1509" width="2.7" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="91.63" y="1519.5" ></text>
</g>
<g >
<title>do_idle (110,748,479,099 samples, 17.08%)</title><rect x="894.8" y="1541" width="201.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="897.76" y="1551.5" >do_idle</text>
</g>
<g >
<title>enqueue_task_fair (63,442,632 samples, 0.01%)</title><rect x="1184.7" y="1237" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1187.72" y="1247.5" ></text>
</g>
<g >
<title>alloc_fd (279,530,994 samples, 0.04%)</title><rect x="542.1" y="1349" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="545.10" y="1359.5" ></text>
</g>
<g >
<title>rcu_do_batch (1,760,425,902 samples, 0.27%)</title><rect x="911.1" y="1349" width="3.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="914.09" y="1359.5" ></text>
</g>
<g >
<title>__mmput (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1413" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="38.20" y="1423.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (259,902,111 samples, 0.04%)</title><rect x="482.9" y="1205" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="485.85" y="1215.5" ></text>
</g>
<g >
<title>exe (121,628,933 samples, 0.02%)</title><rect x="10.7" y="1605" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="13.67" y="1615.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (648,361,516 samples, 0.10%)</title><rect x="547.1" y="1285" width="1.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="550.13" y="1295.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (59,377,258 samples, 0.01%)</title><rect x="1096.3" y="1541" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1099.28" y="1551.5" ></text>
</g>
<g >
<title>rcu_core (152,354,257 samples, 0.02%)</title><rect x="1077.0" y="1349" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1079.95" y="1359.5" ></text>
</g>
<g >
<title>[grep] (143,833,498 samples, 0.02%)</title><rect x="12.6" y="1541" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.65" y="1551.5" ></text>
</g>
<g >
<title>write (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1509" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="34.57" y="1519.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (307,856,767 samples, 0.05%)</title><rect x="1076.4" y="1413" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1079.36" y="1423.5" ></text>
</g>
<g >
<title>sleep (700,219,972 samples, 0.11%)</title><rect x="865.1" y="1605" width="1.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="868.10" y="1615.5" ></text>
</g>
<g >
<title>readlink (171,585,659 samples, 0.03%)</title><rect x="19.3" y="1509" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="22.33" y="1519.5" ></text>
</g>
<g >
<title>[sleep] (403,721,053 samples, 0.06%)</title><rect x="865.4" y="1541" width="0.7" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="868.39" y="1551.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (679,220,509 samples, 0.10%)</title><rect x="35.9" y="1317" width="1.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="38.95" y="1327.5" ></text>
</g>
<g >
<title>make_child (59,624,920 samples, 0.01%)</title><rect x="831.6" y="1269" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="834.56" y="1279.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (68,267,859 samples, 0.01%)</title><rect x="86.9" y="1525" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="89.87" y="1535.5" ></text>
</g>
<g >
<title>tcp_write_xmit (63,285,596 samples, 0.01%)</title><rect x="604.3" y="1333" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="607.30" y="1343.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (385,564,579 samples, 0.06%)</title><rect x="811.1" y="1573" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="814.14" y="1583.5" ></text>
</g>
<g >
<title>proc_reg_read (168,261,482 samples, 0.03%)</title><rect x="31.1" y="1413" width="0.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="34.12" y="1423.5" ></text>
</g>
<g >
<title>inet_recvmsg (187,248,115 samples, 0.03%)</title><rect x="1189.6" y="1349" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1192.56" y="1359.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (87,624,611 samples, 0.01%)</title><rect x="435.9" y="1477" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="438.88" y="1487.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (123,218,019 samples, 0.02%)</title><rect x="488.3" y="1317" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="491.28" y="1327.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (321,274,898 samples, 0.05%)</title><rect x="530.5" y="1285" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="533.54" y="1295.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (19,425,902,298 samples, 3.00%)</title><rect x="55.9" y="1589" width="35.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="58.93" y="1599.5" >se..</text>
</g>
<g >
<title>gettimeofday@plt (246,864,661 samples, 0.04%)</title><rect x="431.3" y="1509" width="0.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="434.33" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (423,747,192 samples, 0.07%)</title><rect x="571.2" y="1285" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="574.19" y="1295.5" ></text>
</g>
<g >
<title>menu_select (122,098,877 samples, 0.02%)</title><rect x="49.5" y="1493" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="52.53" y="1503.5" ></text>
</g>
<g >
<title>start_kernel (570,162,054 samples, 0.09%)</title><rect x="50.8" y="1541" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="53.84" y="1551.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (383,560,968 samples, 0.06%)</title><rect x="1093.9" y="1493" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1096.85" y="1503.5" ></text>
</g>
<g >
<title>enqueue_entity (57,726,704 samples, 0.01%)</title><rect x="1184.7" y="1221" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1187.73" y="1231.5" ></text>
</g>
<g >
<title>[libc.so.6] (498,185,620 samples, 0.08%)</title><rect x="11.0" y="1557" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.99" y="1567.5" ></text>
</g>
<g >
<title>irq_exit_rcu (381,033,442 samples, 0.06%)</title><rect x="58.6" y="1429" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="61.59" y="1439.5" ></text>
</g>
<g >
<title>[ls] (491,343,022 samples, 0.08%)</title><rect x="18.8" y="1525" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.77" y="1535.5" ></text>
</g>
<g >
<title>operator new (67,406,818 samples, 0.01%)</title><rect x="27.5" y="725" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="30.46" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="181" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (102,033,112 samples, 0.02%)</title><rect x="13.7" y="1445" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="16.67" y="1455.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (1,675,280,756 samples, 0.26%)</title><rect x="22.5" y="1365" width="3.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.47" y="1375.5" ></text>
</g>
<g >
<title>local_clock_noinstr (204,458,427 samples, 0.03%)</title><rect x="931.0" y="1461" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="933.96" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_lock (902,072,623 samples, 0.14%)</title><rect x="540.4" y="1349" width="1.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="543.45" y="1359.5" ></text>
</g>
<g >
<title>enqueue_task_fair (211,959,142 samples, 0.03%)</title><rect x="57.4" y="1301" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="60.42" y="1311.5" ></text>
</g>
<g >
<title>__clone (660,005,407 samples, 0.10%)</title><rect x="30.8" y="1589" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="33.76" y="1599.5" ></text>
</g>
<g >
<title>[[vdso]] (92,545,018 samples, 0.01%)</title><rect x="492.0" y="1413" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="495.02" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (86,127,478 samples, 0.01%)</title><rect x="560.9" y="1397" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="563.92" y="1407.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (60,480,985 samples, 0.01%)</title><rect x="599.1" y="1317" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="602.13" y="1327.5" ></text>
</g>
<g >
<title>CompareAndSwap (25,343,754,317 samples, 3.91%)</title><rect x="214.3" y="1541" width="46.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="217.28" y="1551.5" >Comp..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1477" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1487.5" ></text>
</g>
<g >
<title>psi_group_change (61,244,842 samples, 0.01%)</title><rect x="1097.8" y="1221" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1100.79" y="1231.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1333" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="34.57" y="1343.5" ></text>
</g>
<g >
<title>mntput (72,354,730 samples, 0.01%)</title><rect x="556.4" y="1301" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="559.40" y="1311.5" ></text>
</g>
<g >
<title>down_write (151,214,766 samples, 0.02%)</title><rect x="557.5" y="1269" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="560.47" y="1279.5" ></text>
</g>
<g >
<title>mod_lruvec_page_state.constprop.0 (56,887,829 samples, 0.01%)</title><rect x="22.9" y="1285" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="25.87" y="1295.5" ></text>
</g>
<g >
<title>wb_writeback (103,280,391 samples, 0.02%)</title><rect x="894.3" y="1477" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="897.29" y="1487.5" ></text>
</g>
<g >
<title>enqueue_task (117,895,396 samples, 0.02%)</title><rect x="38.9" y="1317" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="41.91" y="1327.5" ></text>
</g>
<g >
<title>irq_exit_rcu (72,382,699 samples, 0.01%)</title><rect x="1176.7" y="1413" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1179.66" y="1423.5" ></text>
</g>
<g >
<title>os_xsave (733,767,225 samples, 0.11%)</title><rect x="601.5" y="1397" width="1.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="604.47" y="1407.5" ></text>
</g>
<g >
<title>alloc_pages (70,308,638 samples, 0.01%)</title><rect x="22.7" y="1285" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="25.74" y="1295.5" ></text>
</g>
<g >
<title>check_preempt_curr (175,328,780 samples, 0.03%)</title><rect x="902.6" y="1317" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="905.61" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (774,207,789 samples, 0.12%)</title><rect x="26.3" y="869" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.27" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="933" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="943.5" ></text>
</g>
<g >
<title>parse_and_execute (584,350,883 samples, 0.09%)</title><rect x="831.3" y="1509" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="834.26" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (485,732,716 samples, 0.07%)</title><rect x="11.0" y="1509" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.01" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27,332,986,177 samples, 4.21%)</title><rect x="509.2" y="1429" width="49.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="512.23" y="1439.5" >entry..</text>
</g>
<g >
<title>try_to_wake_up (297,942,669 samples, 0.05%)</title><rect x="1097.4" y="1285" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1100.38" y="1295.5" ></text>
</g>
<g >
<title>pick_next_task (1,314,768,446 samples, 0.20%)</title><rect x="587.4" y="1269" width="2.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="590.41" y="1279.5" ></text>
</g>
<g >
<title>__sys_sendto (239,865,689 samples, 0.04%)</title><rect x="604.1" y="1429" width="0.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="607.05" y="1439.5" ></text>
</g>
<g >
<title>mmput (56,651,202 samples, 0.01%)</title><rect x="833.0" y="1413" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="836.00" y="1423.5" ></text>
</g>
<g >
<title>__fsnotify_parent (64,857,225 samples, 0.01%)</title><rect x="35.8" y="1365" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="38.82" y="1375.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (151,179,208 samples, 0.02%)</title><rect x="514.3" y="1333" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="517.33" y="1343.5" ></text>
</g>
<g >
<title>enqueue_task_fair (116,980,881 samples, 0.02%)</title><rect x="1076.5" y="1285" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1079.48" y="1295.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (210,813,939 samples, 0.03%)</title><rect x="552.4" y="1189" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="555.39" y="1199.5" ></text>
</g>
<g >
<title>prepare_task_switch (104,214,408 samples, 0.02%)</title><rect x="589.9" y="1269" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="592.85" y="1279.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (157,503,328 samples, 0.02%)</title><rect x="562.8" y="1397" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="565.85" y="1407.5" ></text>
</g>
<g >
<title>begin_current_label_crit_section (95,512,944 samples, 0.01%)</title><rect x="527.3" y="1237" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="530.29" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (202,070,462 samples, 0.03%)</title><rect x="31.1" y="1477" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="34.07" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,280,477,579 samples, 0.20%)</title><rect x="862.6" y="1461" width="2.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="865.62" y="1471.5" ></text>
</g>
<g >
<title>rcu_do_batch (537,883,588 samples, 0.08%)</title><rect x="1123.5" y="1349" width="1.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1126.50" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,310,842,347 samples, 0.20%)</title><rect x="88.6" y="1413" width="2.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="91.64" y="1423.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (193,286,058 samples, 0.03%)</title><rect x="552.4" y="1173" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="555.42" y="1183.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (6,489,216,503 samples, 1.00%)</title><rect x="286.0" y="1541" width="11.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="289.03" y="1551.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (160,524,883 samples, 0.02%)</title><rect x="511.0" y="1349" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="513.96" y="1359.5" ></text>
</g>
<g >
<title>clockevents_program_event (593,144,133 samples, 0.09%)</title><rect x="909.1" y="1381" width="1.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="912.08" y="1391.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1,141,587,207 samples, 0.18%)</title><rect x="585.3" y="1269" width="2.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="588.33" y="1279.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (949,053,711 samples, 0.15%)</title><rect x="818.5" y="1573" width="1.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="821.47" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (527,536,367 samples, 0.08%)</title><rect x="50.9" y="1461" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="53.86" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="501" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (56,715,428 samples, 0.01%)</title><rect x="510.4" y="1365" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="513.41" y="1375.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (6,285,404,109 samples, 0.97%)</title><rect x="380.8" y="1525" width="11.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="383.84" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (813,906,249 samples, 0.13%)</title><rect x="26.3" y="885" width="1.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.27" y="895.5" ></text>
</g>
<g >
<title>__update_load_avg_se (116,218,942 samples, 0.02%)</title><rect x="579.9" y="1221" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="582.93" y="1231.5" ></text>
</g>
<g >
<title>rcu_core (326,996,307 samples, 0.05%)</title><rect x="58.6" y="1365" width="0.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="61.61" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="949" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1445" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_select (74,013,249 samples, 0.01%)</title><rect x="1188.9" y="1445" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1191.88" y="1455.5" ></text>
</g>
<g >
<title>clockevents_program_event (87,821,305 samples, 0.01%)</title><rect x="58.3" y="1381" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="61.30" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (308,155,634 samples, 0.05%)</title><rect x="1189.4" y="1573" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.43" y="1583.5" ></text>
</g>
<g >
<title>page_remove_rmap (203,590,568 samples, 0.03%)</title><rect x="34.3" y="1285" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="37.25" y="1295.5" ></text>
</g>
<g >
<title>sel_ldr (405,075,993,359 samples, 62.46%)</title><rect x="91.5" y="1605" width="737.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="94.49" y="1615.5" >sel_ldr</text>
</g>
<g >
<title>__tsearch (64,504,810 samples, 0.01%)</title><rect x="20.3" y="1413" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="23.34" y="1423.5" ></text>
</g>
<g >
<title>shell_glob_filename (110,332,968 samples, 0.02%)</title><rect x="831.3" y="1413" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="834.30" y="1423.5" ></text>
</g>
<g >
<title>enqueue_task_fair (83,922,283 samples, 0.01%)</title><rect x="38.9" y="1301" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="41.92" y="1311.5" ></text>
</g>
<g >
<title>load_balance (483,602,465 samples, 0.07%)</title><rect x="482.7" y="1237" width="0.8" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="485.65" y="1247.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.isra.0 (316,825,869 samples, 0.05%)</title><rect x="1180.6" y="1509" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1183.59" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (132,778,458 samples, 0.02%)</title><rect x="11.9" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.90" y="1583.5" ></text>
</g>
<g >
<title>[git] (80,832,401 samples, 0.01%)</title><rect x="12.4" y="1477" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.41" y="1487.5" ></text>
</g>
<g >
<title>enqueue_entity (597,714,678 samples, 0.09%)</title><rect x="1179.0" y="1429" width="1.0" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1181.95" y="1439.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (3,710,383,462 samples, 0.57%)</title><rect x="901.1" y="1381" width="6.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="904.08" y="1391.5" ></text>
</g>
<g >
<title>__libc_start_main (895,841,058 samples, 0.14%)</title><rect x="831.3" y="1573" width="1.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="834.26" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="293" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="303.5" ></text>
</g>
<g >
<title>record_times (86,406,638 samples, 0.01%)</title><rect x="592.4" y="1253" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="595.37" y="1263.5" ></text>
</g>
<g >
<title>rcu_do_batch (303,338,947 samples, 0.05%)</title><rect x="833.2" y="1461" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="836.21" y="1471.5" ></text>
</g>
<g >
<title>__put_user_8 (261,220,469 samples, 0.04%)</title><rect x="597.0" y="1301" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="600.00" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (859,312,048 samples, 0.13%)</title><rect x="26.3" y="981" width="1.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.26" y="991.5" ></text>
</g>
<g >
<title>native_write_msr (306,442,710 samples, 0.05%)</title><rect x="909.5" y="1365" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="912.47" y="1375.5" ></text>
</g>
<g >
<title>common_nsleep (252,991,137 samples, 0.04%)</title><rect x="595.2" y="1365" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="598.19" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (323,296,620 samples, 0.05%)</title><rect x="26.7" y="549" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="29.71" y="559.5" ></text>
</g>
<g >
<title>__do_softirq (364,820,927 samples, 0.06%)</title><rect x="55.2" y="1509" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="58.21" y="1519.5" ></text>
</g>
<g >
<title>[libcrypto.so.3] (75,900,739 samples, 0.01%)</title><rect x="887.3" y="1589" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="890.27" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="357" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (176,823,030 samples, 0.03%)</title><rect x="578.0" y="1269" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="581.01" y="1279.5" ></text>
</g>
<g >
<title>kthread (713,679,988 samples, 0.11%)</title><rect x="1116.5" y="1557" width="1.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1119.51" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1429" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1439.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1,657,546,015 samples, 0.26%)</title><rect x="596.3" y="1333" width="3.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="599.33" y="1343.5" ></text>
</g>
<g >
<title>NaClSysSelect (92,274,198,264 samples, 14.23%)</title><rect x="436.0" y="1541" width="167.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="439.04" y="1551.5" >NaClSysSelect</text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (4,023,671,225 samples, 0.62%)</title><rect x="345.2" y="1493" width="7.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="348.19" y="1503.5" ></text>
</g>
<g >
<title>__calc_delta (57,547,227 samples, 0.01%)</title><rect x="579.7" y="1221" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="582.69" y="1231.5" ></text>
</g>
<g >
<title>dispatcher (91,849,084 samples, 0.01%)</title><rect x="435.9" y="1509" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="438.87" y="1519.5" ></text>
</g>
<g >
<title>wake_up_process (220,441,731 samples, 0.03%)</title><rect x="1076.4" y="1349" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1079.38" y="1359.5" ></text>
</g>
<g >
<title>futex_wake (1,999,550,527 samples, 0.31%)</title><rect x="492.8" y="1365" width="3.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="495.79" y="1375.5" ></text>
</g>
<g >
<title>seq_read_iter (164,772,463 samples, 0.03%)</title><rect x="31.1" y="1381" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="34.13" y="1391.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (61,526,325 samples, 0.01%)</title><rect x="832.9" y="1589" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="835.89" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (128,438,715 samples, 0.02%)</title><rect x="26.3" y="373" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.35" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock (75,969,356 samples, 0.01%)</title><rect x="523.7" y="1317" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="526.71" y="1327.5" ></text>
</g>
<g >
<title>enqueue_task_fair (125,194,724 samples, 0.02%)</title><rect x="1097.5" y="1237" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1100.55" y="1247.5" ></text>
</g>
<g >
<title>inet_accept (1,377,467,340 samples, 0.21%)</title><rect x="511.7" y="1349" width="2.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="514.68" y="1359.5" ></text>
</g>
<g >
<title>call_cpuidle (1,695,501,222 samples, 0.26%)</title><rect x="13.6" y="1509" width="3.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="16.62" y="1519.5" ></text>
</g>
<g >
<title>zap_pte_range (833,823,314 samples, 0.13%)</title><rect x="33.6" y="1301" width="1.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="36.63" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (7,411,866,882 samples, 1.14%)</title><rect x="1097.1" y="1413" width="13.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1100.13" y="1423.5" ></text>
</g>
<g >
<title>charge_memcg (76,591,269 samples, 0.01%)</title><rect x="36.3" y="1173" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="39.33" y="1183.5" ></text>
</g>
<g >
<title>do_futex (2,128,642,289 samples, 0.33%)</title><rect x="492.6" y="1381" width="3.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="495.56" y="1391.5" ></text>
</g>
<g >
<title>native_sched_clock (150,804,046 samples, 0.02%)</title><rect x="931.1" y="1429" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="934.06" y="1439.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (367,426,398 samples, 0.06%)</title><rect x="603.3" y="1461" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="606.28" y="1471.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (157,345,943 samples, 0.02%)</title><rect x="1189.6" y="1317" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1192.61" y="1327.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (210,666,469 samples, 0.03%)</title><rect x="573.9" y="1301" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="576.89" y="1311.5" ></text>
</g>
<g >
<title>poll_idle (1,428,540,734 samples, 0.22%)</title><rect x="14.1" y="1461" width="2.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="17.10" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (148,980,214 samples, 0.02%)</title><rect x="18.4" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.36" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,141,127,058 samples, 0.18%)</title><rect x="26.2" y="1445" width="2.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.18" y="1455.5" ></text>
</g>
<g >
<title>__alloc_pages (70,308,638 samples, 0.01%)</title><rect x="22.7" y="1269" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="25.74" y="1279.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (104,544,896 samples, 0.02%)</title><rect x="492.0" y="1445" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="495.01" y="1455.5" ></text>
</g>
<g >
<title>sock_free_inode (65,856,861 samples, 0.01%)</title><rect x="836.4" y="1317" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="839.40" y="1327.5" ></text>
</g>
<g >
<title>ct_idle_exit (179,333,095 samples, 0.03%)</title><rect x="915.7" y="1461" width="0.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="918.73" y="1471.5" ></text>
</g>
<g >
<title>_dl_catch_exception (60,227,080 samples, 0.01%)</title><rect x="12.0" y="1509" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="15.01" y="1519.5" ></text>
</g>
<g >
<title>update_load_avg (65,279,448 samples, 0.01%)</title><rect x="87.5" y="1445" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="90.54" y="1455.5" ></text>
</g>
<g >
<title>errseq_sample (61,777,817 samples, 0.01%)</title><rect x="536.3" y="1317" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="539.28" y="1327.5" ></text>
</g>
<g >
<title>file_free_rcu (901,386,384 samples, 0.14%)</title><rect x="890.4" y="1445" width="1.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="893.44" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (137,674,350 samples, 0.02%)</title><rect x="11.9" y="1589" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.90" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="725" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="735.5" ></text>
</g>
<g >
<title>intel_idle (1,475,383,815 samples, 0.23%)</title><rect x="59.6" y="1461" width="2.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="62.60" y="1471.5" ></text>
</g>
<g >
<title>llist_reverse_order (236,184,641 samples, 0.04%)</title><rect x="1085.3" y="1509" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1088.32" y="1519.5" ></text>
</g>
<g >
<title>mod_objcg_state (58,237,799 samples, 0.01%)</title><rect x="550.1" y="1253" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="553.10" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (81,190,135 samples, 0.01%)</title><rect x="30.0" y="1509" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="32.99" y="1519.5" ></text>
</g>
<g >
<title>ext4_writepages (103,280,391 samples, 0.02%)</title><rect x="894.3" y="1397" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="897.29" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_execve (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1557" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="20.70" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1493" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1503.5" ></text>
</g>
<g >
<title>intel_idle (664,133,441 samples, 0.10%)</title><rect x="1098.6" y="1397" width="1.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1101.58" y="1407.5" ></text>
</g>
<g >
<title>rcu_core (321,817,098 samples, 0.05%)</title><rect x="833.2" y="1477" width="0.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="836.19" y="1487.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (58,182,998 samples, 0.01%)</title><rect x="496.5" y="1397" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="499.49" y="1407.5" ></text>
</g>
<g >
<title>___slab_alloc (138,025,389 samples, 0.02%)</title><rect x="518.4" y="1253" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="521.43" y="1263.5" ></text>
</g>
<g >
<title>llist_reverse_order (73,096,579 samples, 0.01%)</title><rect x="1180.4" y="1509" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1183.37" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1,689,638,799 samples, 0.26%)</title><rect x="32.1" y="1557" width="3.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="35.08" y="1567.5" ></text>
</g>
<g >
<title>do_idle (58,265,082 samples, 0.01%)</title><rect x="866.3" y="1541" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="869.27" y="1551.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (640,149,899 samples, 0.10%)</title><rect x="520.2" y="1269" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="523.20" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (533,125,192 samples, 0.08%)</title><rect x="19.7" y="1477" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.67" y="1487.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (213,728,191 samples, 0.03%)</title><rect x="860.7" y="1509" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="863.73" y="1519.5" ></text>
</g>
<g >
<title>__get_user_8 (328,595,612 samples, 0.05%)</title><rect x="597.7" y="1285" width="0.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="600.68" y="1295.5" ></text>
</g>
<g >
<title>ttwu_do_activate (99,193,913 samples, 0.02%)</title><rect x="1184.7" y="1269" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1187.71" y="1279.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (3,199,883,446 samples, 0.49%)</title><rect x="290.8" y="1525" width="5.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="293.75" y="1535.5" ></text>
</g>
<g >
<title>process_one_work (191,523,962 samples, 0.03%)</title><rect x="894.1" y="1525" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="897.13" y="1535.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (68,281,923 samples, 0.01%)</title><rect x="593.6" y="1285" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="596.59" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1381" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1391.5" ></text>
</g>
<g >
<title>[anon] (158,172,860 samples, 0.02%)</title><rect x="21.2" y="1589" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="24.22" y="1599.5" ></text>
</g>
<g >
<title>wake_up_process (56,821,122 samples, 0.01%)</title><rect x="862.7" y="1301" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="865.72" y="1311.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (267,544,993,413 samples, 41.26%)</title><rect x="117.8" y="1573" width="486.8" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="120.75" y="1583.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>make_kgid (64,644,450 samples, 0.01%)</title><rect x="517.2" y="1285" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="520.23" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="741" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="751.5" ></text>
</g>
<g >
<title>rcu_do_batch (118,112,504 samples, 0.02%)</title><rect x="38.2" y="1461" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="41.16" y="1471.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (69,527,697 samples, 0.01%)</title><rect x="1093.7" y="1493" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1096.72" y="1503.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (79,508,090 samples, 0.01%)</title><rect x="472.0" y="1317" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="475.03" y="1327.5" ></text>
</g>
<g >
<title>cpuidle_enter (512,771,026 samples, 0.08%)</title><rect x="50.9" y="1429" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="53.87" y="1439.5" ></text>
</g>
<g >
<title>ksys_write (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1445" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="34.57" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,025,123,316 samples, 0.16%)</title><rect x="26.2" y="1205" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.23" y="1215.5" ></text>
</g>
<g >
<title>__calc_delta (61,330,957 samples, 0.01%)</title><rect x="480.7" y="1221" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="483.74" y="1231.5" ></text>
</g>
<g >
<title>[libc.so.6] (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1541" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="38.20" y="1551.5" ></text>
</g>
<g >
<title>generic_write_end (156,576,807 samples, 0.02%)</title><rect x="36.8" y="1237" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="39.84" y="1247.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (384,530,892 samples, 0.06%)</title><rect x="553.2" y="1157" width="0.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="556.20" y="1167.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (206,328,265 samples, 0.03%)</title><rect x="604.1" y="1365" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="607.11" y="1375.5" ></text>
</g>
<g >
<title>mod_memcg_state (69,366,971 samples, 0.01%)</title><rect x="522.9" y="1221" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="525.94" y="1231.5" ></text>
</g>
<g >
<title>rcu_do_batch (1,971,552,419 samples, 0.30%)</title><rect x="890.3" y="1461" width="3.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="893.26" y="1471.5" ></text>
</g>
<g >
<title>call_cpuidle (69,986,985 samples, 0.01%)</title><rect x="10.5" y="1509" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.52" y="1519.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (285,683,123 samples, 0.04%)</title><rect x="522.7" y="1253" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="525.73" y="1263.5" ></text>
</g>
<g >
<title>sock_close (436,026,021 samples, 0.07%)</title><rect x="557.4" y="1301" width="0.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="560.37" y="1311.5" ></text>
</g>
<g >
<title>sock_alloc (4,863,953,332 samples, 0.75%)</title><rect x="514.6" y="1349" width="8.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="517.61" y="1359.5" ></text>
</g>
<g >
<title>psi_group_change (268,776,910 samples, 0.04%)</title><rect x="484.7" y="1269" width="0.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="487.71" y="1279.5" ></text>
</g>
<g >
<title>uv__fs_read (202,070,462 samples, 0.03%)</title><rect x="31.1" y="1525" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="34.07" y="1535.5" ></text>
</g>
<g >
<title>pick_next_task (1,761,146,796 samples, 0.27%)</title><rect x="468.7" y="1317" width="3.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="471.72" y="1327.5" ></text>
</g>
<g >
<title>__tsearch (92,022,693 samples, 0.01%)</title><rect x="11.6" y="1413" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="14.58" y="1423.5" ></text>
</g>
<g >
<title>rb_insert_color (59,970,551 samples, 0.01%)</title><rect x="570.2" y="1253" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="573.19" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (171,585,659 samples, 0.03%)</title><rect x="19.3" y="1493" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="22.33" y="1503.5" ></text>
</g>
<g >
<title>_dl_catch_exception (62,284,558 samples, 0.01%)</title><rect x="865.2" y="1509" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="868.23" y="1519.5" ></text>
</g>
<g >
<title>menu_select (350,930,000 samples, 0.05%)</title><rect x="85.5" y="1493" width="0.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="88.53" y="1503.5" ></text>
</g>
<g >
<title>security_file_fcntl (57,274,667 samples, 0.01%)</title><rect x="505.6" y="1365" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="508.62" y="1375.5" ></text>
</g>
<g >
<title>_raw_spin_lock (216,728,003 samples, 0.03%)</title><rect x="468.3" y="1317" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="471.25" y="1327.5" ></text>
</g>
<g >
<title>ext4_release_io_end (62,833,547 samples, 0.01%)</title><rect x="894.1" y="1493" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="897.14" y="1503.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (298,839,414 samples, 0.05%)</title><rect x="603.9" y="1557" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="606.95" y="1567.5" ></text>
</g>
<g >
<title>ext4_da_write_end (156,576,807 samples, 0.02%)</title><rect x="36.8" y="1253" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="39.84" y="1263.5" ></text>
</g>
<g >
<title>swapper (42,444,836,847 samples, 6.55%)</title><rect x="1112.2" y="1605" width="77.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1115.17" y="1615.5" >swapper</text>
</g>
<g >
<title>percpu_counter_add_batch (55,187,276 samples, 0.01%)</title><rect x="556.5" y="1301" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="559.55" y="1311.5" ></text>
</g>
<g >
<title>[[heap]] (95,273,674 samples, 0.01%)</title><rect x="18.2" y="1589" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="21.15" y="1599.5" ></text>
</g>
<g >
<title>vfs_readlink (75,411,248 samples, 0.01%)</title><rect x="19.5" y="1429" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="22.50" y="1439.5" ></text>
</g>
<g >
<title>kmem_cache_free (373,208,763 samples, 0.06%)</title><rect x="913.0" y="1301" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="915.98" y="1311.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1,458,329,916 samples, 0.22%)</title><rect x="88.6" y="1573" width="2.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="91.63" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,330,864,328 samples, 0.36%)</title><rect x="1184.6" y="1413" width="4.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1187.62" y="1423.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (533,823,427 samples, 0.08%)</title><rect x="115.5" y="1573" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="118.50" y="1583.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (82,966,329 samples, 0.01%)</title><rect x="13.7" y="1413" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="16.67" y="1423.5" ></text>
</g>
<g >
<title>clock_gettime (394,988,981 samples, 0.06%)</title><rect x="356.0" y="1493" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="358.95" y="1503.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (122,276,794 samples, 0.02%)</title><rect x="17.0" y="1573" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="20.02" y="1583.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (272,569,099 samples, 0.04%)</title><rect x="553.4" y="1141" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="556.40" y="1151.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (79,806,024 samples, 0.01%)</title><rect x="908.1" y="1301" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="911.11" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1045" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1055.5" ></text>
</g>
<g >
<title>poll_idle (25,414,607,387 samples, 3.92%)</title><rect x="1130.6" y="1461" width="46.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1133.63" y="1471.5" >poll..</text>
</g>
<g >
<title>NaClUserToSysAddrRange (2,806,761,016 samples, 0.43%)</title><rect x="365.4" y="1525" width="5.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="368.36" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="661" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="671.5" ></text>
</g>
<g >
<title>schedule (59,032,027 samples, 0.01%)</title><rect x="31.8" y="1397" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="34.76" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (93,800,069 samples, 0.01%)</title><rect x="865.5" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="868.52" y="1407.5" ></text>
</g>
<g >
<title>enqueue_task (206,691,980 samples, 0.03%)</title><rect x="1097.5" y="1253" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1100.53" y="1263.5" ></text>
</g>
<g >
<title>kmem_cache_free (55,082,189 samples, 0.01%)</title><rect x="833.5" y="1413" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="836.47" y="1423.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (330,657,291 samples, 0.05%)</title><rect x="1097.3" y="1333" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1100.33" y="1343.5" ></text>
</g>
<g >
<title>cpu_startup_entry (568,174,857 samples, 0.09%)</title><rect x="50.8" y="1493" width="1.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="53.84" y="1503.5" ></text>
</g>
<g >
<title>native_load_tls (67,153,149 samples, 0.01%)</title><rect x="601.3" y="1397" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="604.34" y="1407.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (355,004,151 samples, 0.05%)</title><rect x="487.9" y="1333" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="490.86" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (939,488,742 samples, 0.14%)</title><rect x="26.2" y="1093" width="1.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.24" y="1103.5" ></text>
</g>
<g >
<title>read_tsc (85,903,260 samples, 0.01%)</title><rect x="908.9" y="1397" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="911.89" y="1407.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (138,908,641 samples, 0.02%)</title><rect x="88.7" y="1397" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="91.66" y="1407.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (33,811,975,892 samples, 5.21%)</title><rect x="373.9" y="1541" width="61.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="376.93" y="1551.5" >NaClSy..</text>
</g>
<g >
<title>inode_free_by_rcu (219,657,379 samples, 0.03%)</title><rect x="893.1" y="1445" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="896.07" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (738,669,746 samples, 0.11%)</title><rect x="26.3" y="773" width="1.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.28" y="783.5" ></text>
</g>
<g >
<title>__do_softirq (217,508,852 samples, 0.03%)</title><rect x="1098.1" y="1333" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1101.10" y="1343.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (250,740,536 samples, 0.04%)</title><rect x="1076.4" y="1381" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1079.36" y="1391.5" ></text>
</g>
<g >
<title>do_idle (1,889,319,039 samples, 0.29%)</title><rect x="13.6" y="1541" width="3.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="16.58" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,838,423,549 samples, 0.59%)</title><rect x="500.1" y="1397" width="7.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="503.10" y="1407.5" ></text>
</g>
<g >
<title>__do_softirq (735,457,462 samples, 0.11%)</title><rect x="1123.4" y="1397" width="1.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1126.45" y="1407.5" ></text>
</g>
<g >
<title>update_load_avg (972,980,787 samples, 0.15%)</title><rect x="582.7" y="1221" width="1.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="585.75" y="1231.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (119,610,542,231 samples, 18.44%)</title><rect x="894.5" y="1589" width="217.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="897.50" y="1599.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>__do_softirq (333,902,451 samples, 0.05%)</title><rect x="833.2" y="1509" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="836.18" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_poll (105,128,649 samples, 0.02%)</title><rect x="35.5" y="1493" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="38.54" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (128,438,715 samples, 0.02%)</title><rect x="26.3" y="421" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.35" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1429" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="20.24" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (139,060,109 samples, 0.02%)</title><rect x="832.5" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="835.47" y="1407.5" ></text>
</g>
<g >
<title>CompareAndSwap (1,591,487,131 samples, 0.25%)</title><rect x="803.5" y="1573" width="2.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="806.52" y="1583.5" ></text>
</g>
<g >
<title>ktime_get (74,659,877 samples, 0.01%)</title><rect x="1094.9" y="1509" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1097.94" y="1519.5" ></text>
</g>
<g >
<title>__sched_yield (5,522,251,213 samples, 0.85%)</title><rect x="464.4" y="1429" width="10.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="467.42" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1157" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1167.5" ></text>
</g>
<g >
<title>__fdget (350,367,184 samples, 0.05%)</title><rect x="509.7" y="1365" width="0.7" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="512.73" y="1375.5" ></text>
</g>
<g >
<title>cpu_startup_entry (15,793,962,676 samples, 2.44%)</title><rect x="833.8" y="1557" width="28.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="836.84" y="1567.5" >cp..</text>
</g>
<g >
<title>menu_select (66,978,413 samples, 0.01%)</title><rect x="16.7" y="1493" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="19.71" y="1503.5" ></text>
</g>
<g >
<title>update_cfs_group (149,752,646 samples, 0.02%)</title><rect x="584.8" y="1237" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="587.80" y="1247.5" ></text>
</g>
<g >
<title>ttwu_do_activate (59,865,573 samples, 0.01%)</title><rect x="1189.0" y="1413" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1192.03" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="597" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="607.5" ></text>
</g>
<g >
<title>mmput (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1429" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="38.20" y="1439.5" ></text>
</g>
<g >
<title>__schedule (3,129,749,417 samples, 0.48%)</title><rect x="467.4" y="1333" width="5.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="470.39" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="821" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="831.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (96,739,778 samples, 0.01%)</title><rect x="820.2" y="1573" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="823.19" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (194,808,595 samples, 0.03%)</title><rect x="832.5" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="835.45" y="1423.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,717,361,311 samples, 0.42%)</title><rect x="1120.1" y="1445" width="4.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1123.06" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_read (200,926,680 samples, 0.03%)</title><rect x="31.1" y="1461" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="34.07" y="1471.5" ></text>
</g>
<g >
<title>NaClXlateSysRet (282,146,582 samples, 0.04%)</title><rect x="824.4" y="1573" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="827.36" y="1583.5" ></text>
</g>
<g >
<title>rcu_do_batch (152,354,257 samples, 0.02%)</title><rect x="1077.0" y="1333" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1079.95" y="1343.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (1,393,827,052 samples, 0.21%)</title><rect x="26.0" y="1573" width="2.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="29.04" y="1583.5" ></text>
</g>
<g >
<title>filemap_read (62,584,796 samples, 0.01%)</title><rect x="435.9" y="1205" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="438.90" y="1215.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (115,245,180 samples, 0.02%)</title><rect x="827.7" y="1589" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="830.74" y="1599.5" ></text>
</g>
<g >
<title>[bash] (154,391,175 samples, 0.02%)</title><rect x="831.8" y="1285" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="834.77" y="1295.5" ></text>
</g>
<g >
<title>kmem_cache_free (385,360,371 samples, 0.06%)</title><rect x="912.2" y="1317" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="915.23" y="1327.5" ></text>
</g>
<g >
<title>NaClSysOpenDecoder (225,801,715 samples, 0.03%)</title><rect x="435.5" y="1557" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="438.46" y="1567.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (67,425,874 samples, 0.01%)</title><rect x="507.3" y="1413" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="510.26" y="1423.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (376,798,155 samples, 0.06%)</title><rect x="58.6" y="1413" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="61.59" y="1423.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (304,287,175 samples, 0.05%)</title><rect x="1076.4" y="1397" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1079.36" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (73,728,088 samples, 0.01%)</title><rect x="508.4" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="511.42" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (96,091,996 samples, 0.01%)</title><rect x="865.2" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="868.20" y="1583.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (98,747,225 samples, 0.02%)</title><rect x="356.7" y="1557" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="359.71" y="1567.5" ></text>
</g>
<g >
<title>wake_up_process (591,276,967 samples, 0.09%)</title><rect x="57.0" y="1365" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="60.02" y="1375.5" ></text>
</g>
<g >
<title>sendto (247,483,078 samples, 0.04%)</title><rect x="604.0" y="1493" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="607.04" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="165" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="175.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (193,375,640 samples, 0.03%)</title><rect x="1110.9" y="1461" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1113.93" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (319,376,727 samples, 0.05%)</title><rect x="865.4" y="1461" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="868.40" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="549" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="559.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1,568,711,656 samples, 0.24%)</title><rect x="1082.1" y="1477" width="2.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1085.10" y="1487.5" ></text>
</g>
<g >
<title>cpu_startup_entry (8,454,550,757 samples, 1.30%)</title><rect x="1096.8" y="1493" width="15.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1099.75" y="1503.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (1,798,889,139 samples, 0.28%)</title><rect x="537.2" y="1349" width="3.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="540.17" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,242,095,795 samples, 0.19%)</title><rect x="862.7" y="1413" width="2.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="865.66" y="1423.5" ></text>
</g>
<g >
<title>put_prev_task_fair (165,899,350 samples, 0.03%)</title><rect x="589.5" y="1253" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="592.50" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (560,425,369 samples, 0.09%)</title><rect x="26.3" y="629" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.32" y="639.5" ></text>
</g>
<g >
<title>start_kernel (2,673,582,696 samples, 0.41%)</title><rect x="1184.5" y="1541" width="4.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1187.53" y="1551.5" ></text>
</g>
<g >
<title>update_cfs_group (123,628,299 samples, 0.02%)</title><rect x="1121.4" y="1269" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1124.38" y="1279.5" ></text>
</g>
<g >
<title>native_write_msr (65,901,735 samples, 0.01%)</title><rect x="835.9" y="1365" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="838.94" y="1375.5" ></text>
</g>
<g >
<title>[bash] (138,597,472 samples, 0.02%)</title><rect x="832.1" y="1381" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="835.07" y="1391.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (73,853,617 samples, 0.01%)</title><rect x="435.9" y="1413" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="438.88" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (92,256,119 samples, 0.01%)</title><rect x="10.0" y="1589" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.02" y="1599.5" ></text>
</g>
<g >
<title>NaClIsValidClockId (444,345,395 samples, 0.07%)</title><rect x="812.0" y="1573" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="815.02" y="1583.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (70,510,047 samples, 0.01%)</title><rect x="23.3" y="1237" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="26.33" y="1247.5" ></text>
</g>
<g >
<title>common_nsleep (14,792,061,271 samples, 2.28%)</title><rect x="567.3" y="1349" width="26.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="570.31" y="1359.5" >c..</text>
</g>
<g >
<title>ktime_get (103,001,370 samples, 0.02%)</title><rect x="570.7" y="1269" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="573.70" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="517" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="527.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (359,138,330 samples, 0.06%)</title><rect x="833.2" y="1541" width="0.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="836.17" y="1551.5" ></text>
</g>
<g >
<title>memcpy@plt (197,495,557 samples, 0.03%)</title><rect x="371.8" y="1525" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="374.77" y="1535.5" ></text>
</g>
<g >
<title>[bash] (160,382,304 samples, 0.02%)</title><rect x="831.3" y="1461" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="834.26" y="1471.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (2,276,819,879 samples, 0.35%)</title><rect x="890.0" y="1541" width="4.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="892.98" y="1551.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (262,124,429 samples, 0.04%)</title><rect x="473.7" y="1381" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="476.75" y="1391.5" ></text>
</g>
<g >
<title>xa_load (265,762,532 samples, 0.04%)</title><rect x="522.2" y="1237" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="525.18" y="1247.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (69,516,846 samples, 0.01%)</title><rect x="908.8" y="1397" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="911.76" y="1407.5" ></text>
</g>
<g >
<title>write (790,728,439 samples, 0.12%)</title><rect x="35.8" y="1461" width="1.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="38.77" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (118,128,289 samples, 0.02%)</title><rect x="17.0" y="1413" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="20.02" y="1423.5" ></text>
</g>
<g >
<title>__switch_to_asm (68,765,718 samples, 0.01%)</title><rect x="831.1" y="1589" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="834.05" y="1599.5" ></text>
</g>
<g >
<title>recvfrom (56,232,610 samples, 0.01%)</title><rect x="560.0" y="1429" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="562.98" y="1439.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4,242,748,967 samples, 0.65%)</title><rect x="900.6" y="1397" width="7.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="903.62" y="1407.5" ></text>
</g>
<g >
<title>NaClClockGetTime (20,742,286,253 samples, 3.20%)</title><rect x="305.5" y="1509" width="37.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="308.52" y="1519.5" >NaC..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (64,470,386 samples, 0.01%)</title><rect x="1110.5" y="1381" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1113.47" y="1391.5" ></text>
</g>
<g >
<title>lind_pread (91,849,084 samples, 0.01%)</title><rect x="435.9" y="1525" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="438.87" y="1535.5" ></text>
</g>
<g >
<title>try_to_wake_up (580,509,669 samples, 0.09%)</title><rect x="57.0" y="1349" width="1.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="60.04" y="1359.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (92,274,198,264 samples, 14.23%)</title><rect x="436.0" y="1477" width="167.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="439.04" y="1487.5" >rustposix::safeposix:..</text>
</g>
<g >
<title>update_sg_lb_stats (333,224,224 samples, 0.05%)</title><rect x="588.5" y="1173" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="591.47" y="1183.5" ></text>
</g>
<g >
<title>rest_init (2,673,582,696 samples, 0.41%)</title><rect x="1184.5" y="1509" width="4.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1187.53" y="1519.5" ></text>
</g>
<g >
<title>_dl_catch_exception (74,752,386 samples, 0.01%)</title><rect x="18.5" y="1509" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="21.48" y="1519.5" ></text>
</g>
<g >
<title>execute_command_internal (276,151,904 samples, 0.04%)</title><rect x="831.5" y="1349" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="834.55" y="1359.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (252,827,426 samples, 0.04%)</title><rect x="860.7" y="1525" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="863.72" y="1535.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (286,268,175 samples, 0.04%)</title><rect x="34.6" y="1285" width="0.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="37.62" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="869" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="879.5" ></text>
</g>
<g >
<title>psi_group_change (191,101,684 samples, 0.03%)</title><rect x="1183.2" y="1477" width="0.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1186.21" y="1487.5" ></text>
</g>
<g >
<title>psi_group_change (76,337,275 samples, 0.01%)</title><rect x="57.9" y="1285" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="60.85" y="1295.5" ></text>
</g>
<g >
<title>update_blocked_averages (55,880,885 samples, 0.01%)</title><rect x="914.6" y="1365" width="0.1" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="917.59" y="1375.5" ></text>
</g>
<g >
<title>task_work_add (144,140,984 samples, 0.02%)</title><rect x="536.7" y="1349" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="539.69" y="1359.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (1,689,169,231 samples, 0.26%)</title><rect x="22.5" y="1557" width="3.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="25.47" y="1567.5" ></text>
</g>
<g >
<title>uv__stream_io (75,222,492 samples, 0.01%)</title><rect x="30.6" y="1557" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="33.62" y="1567.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (259,058,293 samples, 0.04%)</title><rect x="38.8" y="1429" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="41.79" y="1439.5" ></text>
</g>
<g >
<title>__nanosleep (23,194,457,510 samples, 3.58%)</title><rect x="561.1" y="1429" width="42.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="564.07" y="1439.5" >__n..</text>
</g>
<g >
<title>irqentry_exit_to_user_mode (56,329,301 samples, 0.01%)</title><rect x="889.3" y="1541" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="892.26" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1589" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="38.20" y="1599.5" ></text>
</g>
<g >
<title>call_cpuidle (1,261,590,989 samples, 0.19%)</title><rect x="862.6" y="1445" width="2.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="865.63" y="1455.5" ></text>
</g>
<g >
<title>read_tsc (132,318,404 samples, 0.02%)</title><rect x="1095.1" y="1509" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1098.08" y="1519.5" ></text>
</g>
<g >
<title>start_secondary (36,669,599,465 samples, 5.65%)</title><rect x="1117.8" y="1573" width="66.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1120.81" y="1583.5" >start_s..</text>
</g>
<g >
<title>rcu_core_si (149,027,134 samples, 0.02%)</title><rect x="1098.1" y="1317" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1101.12" y="1327.5" ></text>
</g>
<g >
<title>___slab_alloc (214,831,658 samples, 0.03%)</title><rect x="528.5" y="1269" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="531.47" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="837" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="847.5" ></text>
</g>
<g >
<title>execve (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1525" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="38.20" y="1535.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (86,401,133 samples, 0.01%)</title><rect x="1183.7" y="1493" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1186.72" y="1503.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (103,879,745 samples, 0.02%)</title><rect x="1124.6" y="1317" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1127.55" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1205" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1215.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1,023,482,340 samples, 0.16%)</title><rect x="1178.6" y="1525" width="1.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1181.64" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (60,374,171 samples, 0.01%)</title><rect x="507.4" y="1413" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="510.43" y="1423.5" ></text>
</g>
<g >
<title>local_clock_noinstr (117,080,031 samples, 0.02%)</title><rect x="1130.4" y="1461" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1133.42" y="1471.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (673,705,398 samples, 0.10%)</title><rect x="1097.3" y="1381" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1100.31" y="1391.5" ></text>
</g>
<g >
<title>cpu_startup_entry (6,830,152,516 samples, 1.05%)</title><rect x="38.4" y="1557" width="12.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="41.41" y="1567.5" ></text>
</g>
<g >
<title>fput (117,207,555 samples, 0.02%)</title><rect x="536.9" y="1365" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="539.95" y="1375.5" ></text>
</g>
<g >
<title>sock_free_inode (528,228,418 samples, 0.08%)</title><rect x="892.1" y="1429" width="1.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="895.11" y="1439.5" ></text>
</g>
<g >
<title>enqueue_task (84,979,585 samples, 0.01%)</title><rect x="49.8" y="1461" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="52.84" y="1471.5" ></text>
</g>
<g >
<title>copyout (71,624,345 samples, 0.01%)</title><rect x="1189.7" y="1237" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.71" y="1247.5" ></text>
</g>
<g >
<title>scheduler_tick (192,836,589 samples, 0.03%)</title><rect x="908.0" y="1333" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="910.96" y="1343.5" ></text>
</g>
<g >
<title>uv__io_poll (440,439,067 samples, 0.07%)</title><rect x="30.0" y="1573" width="0.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="32.95" y="1583.5" ></text>
</g>
<g >
<title>kick_process (59,776,708 samples, 0.01%)</title><rect x="511.5" y="1317" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="514.52" y="1327.5" ></text>
</g>
<g >
<title>copy_pte_range (1,169,717,814 samples, 0.18%)</title><rect x="23.1" y="1301" width="2.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="26.12" y="1311.5" ></text>
</g>
<g >
<title>run_rebalance_domains (206,316,541 samples, 0.03%)</title><rect x="914.3" y="1381" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="917.31" y="1391.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::ReadStart (71,040,662 samples, 0.01%)</title><rect x="30.6" y="1525" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="33.63" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (81,976,583 samples, 0.01%)</title><rect x="865.2" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="868.21" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (62,284,558 samples, 0.01%)</title><rect x="865.2" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="868.23" y="1487.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::recvfrom_nonblocking (128,400,603 samples, 0.02%)</title><rect x="559.9" y="1445" width="0.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="562.85" y="1455.5" ></text>
</g>
<g >
<title>bprm_execve (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1365" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="20.24" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (99,097,592 samples, 0.02%)</title><rect x="28.3" y="1509" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="31.30" y="1519.5" ></text>
</g>
<g >
<title>available_idle_cpu (152,732,203 samples, 0.02%)</title><rect x="495.5" y="1285" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="498.46" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="533" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="543.5" ></text>
</g>
<g >
<title>__init_rwsem (94,223,340 samples, 0.01%)</title><rect x="516.7" y="1301" width="0.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="519.73" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (102,705,316 samples, 0.02%)</title><rect x="546.9" y="1301" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="549.92" y="1311.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (3,035,408,094 samples, 0.47%)</title><rect x="595.7" y="1365" width="5.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="598.71" y="1375.5" ></text>
</g>
<g >
<title>mod_objcg_state (142,974,812 samples, 0.02%)</title><rect x="529.9" y="1253" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="532.88" y="1263.5" ></text>
</g>
<g >
<title>start_secondary (111,153,183,800 samples, 17.14%)</title><rect x="894.5" y="1573" width="202.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="897.50" y="1583.5" >start_secondary</text>
</g>
<g >
<title>try_to_wake_up (1,041,725,864 samples, 0.16%)</title><rect x="494.5" y="1333" width="1.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="497.53" y="1343.5" ></text>
</g>
<g >
<title>__switch_to (305,793,270 samples, 0.05%)</title><rect x="577.4" y="1269" width="0.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="580.45" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1573" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="20.70" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="981" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="991.5" ></text>
</g>
<g >
<title>xas_descend (61,935,251 samples, 0.01%)</title><rect x="522.5" y="1221" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="525.51" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1269" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="1279.5" ></text>
</g>
<g >
<title>find_busiest_group (103,879,745 samples, 0.02%)</title><rect x="1124.6" y="1333" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1127.55" y="1343.5" ></text>
</g>
<g >
<title>menu_select (128,970,362 samples, 0.02%)</title><rect x="1110.7" y="1429" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1113.68" y="1439.5" ></text>
</g>
<g >
<title>psi_group_change (161,416,823 samples, 0.02%)</title><rect x="1122.0" y="1285" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1124.98" y="1295.5" ></text>
</g>
<g >
<title>[perf-304.map] (189,517,336 samples, 0.03%)</title><rect x="21.5" y="1589" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="24.50" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1429" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="1439.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (334,975,777 samples, 0.05%)</title><rect x="547.7" y="1269" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="550.70" y="1279.5" ></text>
</g>
<g >
<title>error_entry (102,245,197 samples, 0.02%)</title><rect x="1077.6" y="1477" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1080.62" y="1487.5" ></text>
</g>
<g >
<title>NaClSysClockGetTimeDecoder (40,976,749,752 samples, 6.32%)</title><rect x="282.1" y="1557" width="74.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="285.11" y="1567.5" >NaClSysC..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (65,700,748 samples, 0.01%)</title><rect x="26.5" y="357" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="29.46" y="367.5" ></text>
</g>
<g >
<title>psi_group_change (172,662,804 samples, 0.03%)</title><rect x="1084.4" y="1429" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1087.42" y="1439.5" ></text>
</g>
<g >
<title>__calc_delta (180,085,064 samples, 0.03%)</title><rect x="581.9" y="1205" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="584.93" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (263,556,618 samples, 0.04%)</title><rect x="889.4" y="1573" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="892.36" y="1583.5" ></text>
</g>
<g >
<title>tick_sched_handle (246,455,439 samples, 0.04%)</title><rect x="907.9" y="1365" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="910.87" y="1375.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (924,771,721 samples, 0.14%)</title><rect x="1178.7" y="1509" width="1.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1181.65" y="1519.5" ></text>
</g>
<g >
<title>call_cpuidle (6,041,277,132 samples, 0.93%)</title><rect x="38.5" y="1509" width="11.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="41.54" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,689,638,799 samples, 0.26%)</title><rect x="32.1" y="1573" width="3.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="35.08" y="1583.5" ></text>
</g>
<g >
<title>v8::internal::Object::GetProperty (73,974,260 samples, 0.01%)</title><rect x="22.3" y="1509" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="25.27" y="1519.5" ></text>
</g>
<g >
<title>lind_select (92,274,198,264 samples, 14.23%)</title><rect x="436.0" y="1525" width="167.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="439.04" y="1535.5" >lind_select</text>
</g>
<g >
<title>__wake_up_locked_key (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1397" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="34.57" y="1407.5" ></text>
</g>
<g >
<title>v8::internal::ScavengeJob::Task::RunInternal (131,786,643 samples, 0.02%)</title><rect x="30.2" y="1493" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="33.24" y="1503.5" ></text>
</g>
<g >
<title>try_to_wake_up (114,542,860 samples, 0.02%)</title><rect x="1184.7" y="1285" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1187.69" y="1295.5" ></text>
</g>
<g >
<title>[grep] (143,833,498 samples, 0.02%)</title><rect x="12.6" y="1589" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.65" y="1599.5" ></text>
</g>
<g >
<title>pick_next_task_fair (96,501,868 samples, 0.01%)</title><rect x="1111.5" y="1413" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1114.48" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (1,224,354,883 samples, 0.19%)</title><rect x="828.7" y="1589" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="831.71" y="1599.5" ></text>
</g>
<g >
<title>search_binary_handler (1,689,638,799 samples, 0.26%)</title><rect x="32.1" y="1477" width="3.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="35.08" y="1487.5" ></text>
</g>
<g >
<title>call_cpuidle (99,790,435,961 samples, 15.39%)</title><rect x="896.4" y="1509" width="181.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="899.45" y="1519.5" >call_cpuidle</text>
</g>
<g >
<title>aeMain (308,155,634 samples, 0.05%)</title><rect x="1189.4" y="1541" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1192.43" y="1551.5" ></text>
</g>
<g >
<title>socket_readable (263,844,651 samples, 0.04%)</title><rect x="1189.5" y="1509" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.50" y="1519.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (568,199,498 samples, 0.09%)</title><rect x="341.6" y="1477" width="1.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="344.60" y="1487.5" ></text>
</g>
<g >
<title>do_idle (6,800,429,360 samples, 1.05%)</title><rect x="38.4" y="1541" width="12.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="41.42" y="1551.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (221,908,584 samples, 0.03%)</title><rect x="1098.1" y="1349" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1101.10" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_futex (65,115,585 samples, 0.01%)</title><rect x="31.7" y="1461" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="34.75" y="1471.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (296,241,627 samples, 0.05%)</title><rect x="300.2" y="1525" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="303.24" y="1535.5" ></text>
</g>
<g >
<title>rcu_core_si (364,820,927 samples, 0.06%)</title><rect x="55.2" y="1493" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="58.21" y="1503.5" ></text>
</g>
<g >
<title>[ls] (1,069,100,897 samples, 0.16%)</title><rect x="18.8" y="1589" width="1.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.77" y="1599.5" ></text>
</g>
<g >
<title>apparmor_d_instantiate (99,680,570 samples, 0.02%)</title><rect x="536.1" y="1285" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="539.07" y="1295.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (33,208,895,601 samples, 5.12%)</title><rect x="1118.2" y="1525" width="60.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1121.20" y="1535.5" >cpuidl..</text>
</g>
<g >
<title>__do_sys_clone (1,675,280,756 samples, 0.26%)</title><rect x="22.5" y="1413" width="3.0" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="25.47" y="1423.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,455,483,365 samples, 0.22%)</title><rect x="88.6" y="1493" width="2.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="91.63" y="1503.5" ></text>
</g>
<g >
<title>do_idle (84,494,335 samples, 0.01%)</title><rect x="1096.6" y="1557" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1099.60" y="1567.5" ></text>
</g>
<g >
<title>__memcpy (99,089,662 samples, 0.02%)</title><rect x="534.8" y="1301" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="537.80" y="1311.5" ></text>
</g>
<g >
<title>kernel_clone (1,675,280,756 samples, 0.26%)</title><rect x="22.5" y="1397" width="3.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="25.47" y="1407.5" ></text>
</g>
<g >
<title>tick_program_event (628,647,941 samples, 0.10%)</title><rect x="909.0" y="1397" width="1.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="912.05" y="1407.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (570,162,054 samples, 0.09%)</title><rect x="50.8" y="1557" width="1.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="53.84" y="1567.5" ></text>
</g>
<g >
<title>execute_command_internal (154,391,175 samples, 0.02%)</title><rect x="831.8" y="1317" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="834.77" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (943,582,417 samples, 0.15%)</title><rect x="26.2" y="1109" width="1.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.24" y="1119.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (2,290,637,736 samples, 0.35%)</title><rect x="387.1" y="1493" width="4.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="390.10" y="1503.5" ></text>
</g>
<g >
<title>syscall (2,428,634,172 samples, 0.37%)</title><rect x="492.2" y="1445" width="4.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="495.20" y="1455.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (279,482,045 samples, 0.04%)</title><rect x="1095.7" y="1525" width="0.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1098.68" y="1535.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (103,790,537 samples, 0.02%)</title><rect x="534.5" y="1253" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="537.52" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="277" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="287.5" ></text>
</g>
<g >
<title>perf (958,972,393 samples, 0.15%)</title><rect x="35.5" y="1605" width="1.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="38.51" y="1615.5" ></text>
</g>
<g >
<title>schedule_idle (354,525,167 samples, 0.05%)</title><rect x="50.1" y="1525" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="53.07" y="1535.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (496,768,568 samples, 0.08%)</title><rect x="526.6" y="1253" width="0.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="529.56" y="1263.5" ></text>
</g>
<g >
<title>path_lookupat (65,628,826 samples, 0.01%)</title><rect x="19.4" y="1397" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="22.38" y="1407.5" ></text>
</g>
<g >
<title>sock_free_inode (137,754,674 samples, 0.02%)</title><rect x="1117.2" y="1429" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1120.23" y="1439.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (138,908,641 samples, 0.02%)</title><rect x="88.7" y="1381" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="91.66" y="1391.5" ></text>
</g>
<g >
<title>schedule (3,309,806,046 samples, 0.51%)</title><rect x="467.3" y="1349" width="6.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="470.31" y="1359.5" ></text>
</g>
<g >
<title>filemap_add_folio (217,507,582 samples, 0.03%)</title><rect x="36.2" y="1221" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="39.21" y="1231.5" ></text>
</g>
<g >
<title>enqueue_task_fair (96,113,881 samples, 0.01%)</title><rect x="860.8" y="1445" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="863.77" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (116,973,578 samples, 0.02%)</title><rect x="31.7" y="1493" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="34.75" y="1503.5" ></text>
</g>
<g >
<title>update_curr (769,672,791 samples, 0.12%)</title><rect x="470.2" y="1285" width="1.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="473.23" y="1295.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (394,985,804 samples, 0.06%)</title><rect x="94.4" y="1573" width="0.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="97.39" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,372,319,572 samples, 0.67%)</title><rect x="466.3" y="1397" width="7.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="469.27" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_select (133,421,706 samples, 0.02%)</title><rect x="49.5" y="1509" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="52.53" y="1519.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (72,168,585 samples, 0.01%)</title><rect x="482.7" y="1173" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="485.67" y="1183.5" ></text>
</g>
<g >
<title>_raw_spin_lock (141,063,933 samples, 0.02%)</title><rect x="535.8" y="1285" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="538.79" y="1295.5" ></text>
</g>
<g >
<title>cpu_startup_entry (17,952,615,175 samples, 2.77%)</title><rect x="55.9" y="1557" width="32.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="58.93" y="1567.5" >cp..</text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get_mut (22,967,493,188 samples, 3.54%)</title><rect x="448.6" y="1461" width="41.8" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="451.60" y="1471.5" >&lt;da..</text>
</g>
<g >
<title>run_rebalance_domains (163,561,489 samples, 0.03%)</title><rect x="1124.5" y="1381" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1127.48" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (424,125,237 samples, 0.07%)</title><rect x="19.7" y="1429" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.72" y="1439.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (421,559,843 samples, 0.07%)</title><rect x="38.8" y="1461" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="41.77" y="1471.5" ></text>
</g>
<g >
<title>lapic_next_deadline (176,721,996 samples, 0.03%)</title><rect x="572.4" y="1237" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="575.38" y="1247.5" ></text>
</g>
<g >
<title>sh (20,072,925,092 samples, 3.10%)</title><rect x="828.6" y="1605" width="36.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="831.57" y="1615.5" >sh</text>
</g>
<g >
<title>[libc.so.6] (236,865,017 samples, 0.04%)</title><rect x="832.5" y="1477" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="835.45" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_rq_lock_irqsave (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1317" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="20.24" y="1327.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (844,940,179 samples, 0.13%)</title><rect x="56.9" y="1429" width="1.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="59.95" y="1439.5" ></text>
</g>
<g >
<title>filename_lookup (72,113,174 samples, 0.01%)</title><rect x="28.3" y="1413" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="31.32" y="1423.5" ></text>
</g>
<g >
<title>__update_load_avg_se (164,136,227 samples, 0.03%)</title><rect x="905.5" y="1253" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="908.55" y="1263.5" ></text>
</g>
<g >
<title>memcg_account_kmem (74,732,399 samples, 0.01%)</title><rect x="522.9" y="1237" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="525.93" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (816,341,742 samples, 0.13%)</title><rect x="26.3" y="933" width="1.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.27" y="943.5" ></text>
</g>
<g >
<title>ep_autoremove_wake_function (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1301" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="34.57" y="1311.5" ></text>
</g>
<g >
<title>update_load_avg (58,182,306 samples, 0.01%)</title><rect x="57.7" y="1269" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="60.67" y="1279.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,440,242,203 samples, 0.38%)</title><rect x="1184.6" y="1461" width="4.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1187.57" y="1471.5" ></text>
</g>
<g >
<title>futex_wake_mark (281,013,116 samples, 0.04%)</title><rect x="493.8" y="1349" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="496.83" y="1359.5" ></text>
</g>
<g >
<title>call_cpuidle (118,128,289 samples, 0.02%)</title><rect x="17.0" y="1445" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="20.02" y="1455.5" ></text>
</g>
<g >
<title>ct_idle_enter (65,543,462 samples, 0.01%)</title><rect x="1125.0" y="1461" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1128.04" y="1471.5" ></text>
</g>
<g >
<title>run_ksoftirqd (655,031,715 samples, 0.10%)</title><rect x="1116.5" y="1525" width="1.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1119.52" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (998,666,700 samples, 0.15%)</title><rect x="26.2" y="1173" width="1.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.23" y="1183.5" ></text>
</g>
<g >
<title>_copy_from_user (377,883,044 samples, 0.06%)</title><rect x="594.4" y="1333" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="597.38" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1045" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="1055.5" ></text>
</g>
<g >
<title>__do_softirq (2,034,310,338 samples, 0.31%)</title><rect x="911.0" y="1397" width="3.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="914.02" y="1407.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (2,080,713,236 samples, 0.32%)</title><rect x="531.2" y="1317" width="3.8" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="534.24" y="1327.5" ></text>
</g>
<g >
<title>exec_mmap (56,651,202 samples, 0.01%)</title><rect x="833.0" y="1429" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="836.00" y="1439.5" ></text>
</g>
<g >
<title>__update_load_avg_se (222,433,602 samples, 0.03%)</title><rect x="584.1" y="1205" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="587.11" y="1215.5" ></text>
</g>
<g >
<title>consume_obj_stock (71,183,444 samples, 0.01%)</title><rect x="522.8" y="1237" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="525.80" y="1247.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (70,314,292 samples, 0.01%)</title><rect x="559.9" y="1429" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="562.86" y="1439.5" ></text>
</g>
<g >
<title>start_secondary (6,830,152,516 samples, 1.05%)</title><rect x="38.4" y="1573" width="12.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="41.41" y="1583.5" ></text>
</g>
<g >
<title>[bash] (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1477" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="20.24" y="1487.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (98,439,072 samples, 0.02%)</title><rect x="97.8" y="1573" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="100.84" y="1583.5" ></text>
</g>
<g >
<title>mmput (1,689,638,799 samples, 0.26%)</title><rect x="32.1" y="1413" width="3.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="35.08" y="1423.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (274,066,134 samples, 0.04%)</title><rect x="1178.0" y="1477" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1181.03" y="1487.5" ></text>
</g>
<g >
<title>__mmput (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1397" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="20.70" y="1407.5" ></text>
</g>
<g >
<title>irq_exit_rcu (341,612,470 samples, 0.05%)</title><rect x="836.2" y="1429" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="839.15" y="1439.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (74,639,418 samples, 0.01%)</title><rect x="1182.3" y="1493" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1185.28" y="1503.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (557,839,767 samples, 0.09%)</title><rect x="807.6" y="1573" width="1.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="810.58" y="1583.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,103,196,540 samples, 0.17%)</title><rect x="1120.4" y="1349" width="2.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1123.41" y="1359.5" ></text>
</g>
<g >
<title>thread_main (308,155,634 samples, 0.05%)</title><rect x="1189.4" y="1557" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1192.43" y="1567.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (81,063,677 samples, 0.01%)</title><rect x="30.9" y="1557" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="33.86" y="1567.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (392,992,119 samples, 0.06%)</title><rect x="55.2" y="1541" width="0.7" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="58.21" y="1551.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (5,745,557,890 samples, 0.89%)</title><rect x="497.1" y="1445" width="10.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="500.09" y="1455.5" ></text>
</g>
<g >
<title>shell_execve (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1461" width="0.5" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="20.24" y="1471.5" ></text>
</g>
<g >
<title>security_inode_free (480,186,647 samples, 0.07%)</title><rect x="553.1" y="1189" width="0.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="556.07" y="1199.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (72,074,912 samples, 0.01%)</title><rect x="30.0" y="1445" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="33.01" y="1455.5" ></text>
</g>
<g >
<title>_start (895,841,058 samples, 0.14%)</title><rect x="831.3" y="1589" width="1.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="834.26" y="1599.5" ></text>
</g>
<g >
<title>pick_next_task (1,246,099,909 samples, 0.19%)</title><rect x="482.2" y="1285" width="2.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="485.20" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1077" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="1087.5" ></text>
</g>
<g >
<title>inet_csk_accept (1,313,305,131 samples, 0.20%)</title><rect x="511.7" y="1333" width="2.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="514.75" y="1343.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (527,844,986 samples, 0.08%)</title><rect x="822.4" y="1573" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="825.43" y="1583.5" ></text>
</g>
<g >
<title>tick_program_event (112,532,550 samples, 0.02%)</title><rect x="835.9" y="1397" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="838.86" y="1407.5" ></text>
</g>
<g >
<title>task_work_add (165,915,942 samples, 0.03%)</title><rect x="511.3" y="1333" width="0.3" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="514.32" y="1343.5" ></text>
</g>
<g >
<title>menu_select (219,828,815 samples, 0.03%)</title><rect x="860.3" y="1493" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="863.29" y="1503.5" ></text>
</g>
<g >
<title>security_file_free (396,850,757 samples, 0.06%)</title><rect x="556.6" y="1301" width="0.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="559.65" y="1311.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (71,467,422 samples, 0.01%)</title><rect x="35.5" y="1461" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="38.54" y="1471.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (428,607,198 samples, 0.07%)</title><rect x="544.5" y="1333" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="547.50" y="1343.5" ></text>
</g>
<g >
<title>__slab_free (188,764,073 samples, 0.03%)</title><rect x="892.3" y="1397" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="895.31" y="1407.5" ></text>
</g>
<g >
<title>arch_call_rest_init (122,276,794 samples, 0.02%)</title><rect x="17.0" y="1525" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="20.02" y="1535.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (62,133,192 samples, 0.01%)</title><rect x="88.7" y="1317" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="91.67" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (116,973,578 samples, 0.02%)</title><rect x="31.7" y="1477" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="34.75" y="1487.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (754,946,450 samples, 0.12%)</title><rect x="834.7" y="1429" width="1.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="837.69" y="1439.5" ></text>
</g>
<g >
<title>tcp_push_one (63,285,596 samples, 0.01%)</title><rect x="604.3" y="1349" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="607.30" y="1359.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,730,136,448 samples, 0.27%)</title><rect x="1120.1" y="1413" width="3.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1123.11" y="1423.5" ></text>
</g>
<g >
<title>release_sock (113,936,337 samples, 0.02%)</title><rect x="513.9" y="1317" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="516.89" y="1327.5" ></text>
</g>
<g >
<title>epoll_wait (100,868,914 samples, 0.02%)</title><rect x="30.0" y="1557" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="32.97" y="1567.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::unlock_exclusive_slow (3,367,741,304 samples, 0.52%)</title><rect x="490.5" y="1461" width="6.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="493.49" y="1471.5" ></text>
</g>
<g >
<title>rcu_do_batch (629,606,822 samples, 0.10%)</title><rect x="1116.6" y="1461" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1119.56" y="1471.5" ></text>
</g>
<g >
<title>schedule (4,075,492,242 samples, 0.63%)</title><rect x="478.3" y="1317" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="481.31" y="1327.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (743,443,992 samples, 0.11%)</title><rect x="834.7" y="1413" width="1.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="837.71" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1237" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1247.5" ></text>
</g>
<g >
<title>execute_command_internal (138,597,472 samples, 0.02%)</title><rect x="832.1" y="1413" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="835.07" y="1423.5" ></text>
</g>
<g >
<title>sock_alloc_file (7,248,593,061 samples, 1.12%)</title><rect x="523.5" y="1349" width="13.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="526.46" y="1359.5" ></text>
</g>
<g >
<title>v8::internal::Heap::PerformGarbageCollection (131,786,643 samples, 0.02%)</title><rect x="30.2" y="1461" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="33.24" y="1471.5" ></text>
</g>
<g >
<title>rcu_do_batch (72,622,111 samples, 0.01%)</title><rect x="39.3" y="1349" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="42.29" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_enter (99,558,542,498 samples, 15.35%)</title><rect x="896.8" y="1493" width="181.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="899.81" y="1503.5" >cpuidle_enter</text>
</g>
<g >
<title>schedule_idle (121,576,998 samples, 0.02%)</title><rect x="1189.1" y="1461" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1192.15" y="1471.5" ></text>
</g>
<g >
<title>intel_idle (104,325,032 samples, 0.02%)</title><rect x="88.9" y="1397" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="91.92" y="1407.5" ></text>
</g>
<g >
<title>read (202,070,462 samples, 0.03%)</title><rect x="31.1" y="1509" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="34.07" y="1519.5" ></text>
</g>
<g >
<title>[git] (80,832,401 samples, 0.01%)</title><rect x="12.4" y="1429" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.41" y="1439.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (56,651,202 samples, 0.01%)</title><rect x="833.0" y="1541" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="836.00" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (769,415,020 samples, 0.12%)</title><rect x="26.3" y="837" width="1.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.28" y="847.5" ></text>
</g>
<g >
<title>copy_page_from_iter_atomic (98,638,005 samples, 0.02%)</title><rect x="36.0" y="1253" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="39.03" y="1263.5" ></text>
</g>
<g >
<title>execute_command_internal (423,968,579 samples, 0.07%)</title><rect x="831.5" y="1445" width="0.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="834.55" y="1455.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (65,964,412 samples, 0.01%)</title><rect x="604.1" y="1333" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="607.12" y="1343.5" ></text>
</g>
<g >
<title>run_ksoftirqd (124,477,740 samples, 0.02%)</title><rect x="38.1" y="1525" width="0.3" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="41.15" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (172,469,468 samples, 0.03%)</title><rect x="26.3" y="437" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.35" y="447.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (118,128,289 samples, 0.02%)</title><rect x="17.0" y="1461" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="20.02" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (538,369,084 samples, 0.08%)</title><rect x="26.3" y="613" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.32" y="623.5" ></text>
</g>
<g >
<title>fput (191,838,122 samples, 0.03%)</title><rect x="505.9" y="1381" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="508.93" y="1391.5" ></text>
</g>
<g >
<title>vfs_read (200,926,680 samples, 0.03%)</title><rect x="31.1" y="1429" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="34.07" y="1439.5" ></text>
</g>
<g >
<title>enqueue_task_fair (664,051,196 samples, 0.10%)</title><rect x="1178.9" y="1445" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1181.87" y="1455.5" ></text>
</g>
<g >
<title>schedule_idle (676,119,882 samples, 0.10%)</title><rect x="87.0" y="1525" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="90.00" y="1535.5" ></text>
</g>
<g >
<title>resched_curr (132,546,654 samples, 0.02%)</title><rect x="902.7" y="1301" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="905.69" y="1311.5" ></text>
</g>
<g >
<title>select_task_rq_fair (87,918,421 samples, 0.01%)</title><rect x="1120.6" y="1333" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1123.64" y="1343.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (56,887,829 samples, 0.01%)</title><rect x="22.9" y="1269" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="25.87" y="1279.5" ></text>
</g>
<g >
<title>psi_task_change (66,334,634 samples, 0.01%)</title><rect x="1097.8" y="1237" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1100.79" y="1247.5" ></text>
</g>
<g >
<title>NaClClockGetTime (138,304,877 samples, 0.02%)</title><rect x="300.0" y="1525" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="302.99" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_read (194,797,504 samples, 0.03%)</title><rect x="1189.5" y="1429" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1192.55" y="1439.5" ></text>
</g>
<g >
<title>rcu_do_batch (58,004,280 samples, 0.01%)</title><rect x="1176.7" y="1333" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1179.66" y="1343.5" ></text>
</g>
<g >
<title>docker (208,920,431 samples, 0.03%)</title><rect x="10.3" y="1605" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="13.29" y="1615.5" ></text>
</g>
<g >
<title>__mmput (56,651,202 samples, 0.01%)</title><rect x="833.0" y="1397" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="836.00" y="1407.5" ></text>
</g>
<g >
<title>poll_idle (57,818,449 samples, 0.01%)</title><rect x="10.5" y="1461" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="13.54" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="181" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="191.5" ></text>
</g>
<g >
<title>perf_event_task_tick (92,685,659 samples, 0.01%)</title><rect x="908.1" y="1317" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="911.10" y="1327.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (62,284,558 samples, 0.01%)</title><rect x="865.2" y="1445" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="868.23" y="1455.5" ></text>
</g>
<g >
<title>expr (764,442,418 samples, 0.12%)</title><rect x="10.9" y="1605" width="1.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="13.89" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (274,202,202 samples, 0.04%)</title><rect x="19.7" y="1413" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.74" y="1423.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (286,268,175 samples, 0.04%)</title><rect x="34.6" y="1269" width="0.5" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="37.62" y="1279.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (768,573,518 samples, 0.12%)</title><rect x="569.7" y="1285" width="1.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="572.75" y="1295.5" ></text>
</g>
<g >
<title>menu_select (1,778,052,414 samples, 0.27%)</title><rect x="1078.2" y="1493" width="3.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1081.20" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="261" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="271.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (99,239,193 samples, 0.02%)</title><rect x="39.3" y="1413" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="42.28" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (128,438,715 samples, 0.02%)</title><rect x="26.3" y="389" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.35" y="399.5" ></text>
</g>
<g >
<title>kworker/dying (2,312,377,839 samples, 0.36%)</title><rect x="13.0" y="1605" width="4.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="16.04" y="1615.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (496,042,888 samples, 0.08%)</title><rect x="517.8" y="1269" width="0.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="520.81" y="1279.5" ></text>
</g>
<g >
<title>std::time::Instant::now (313,691,464 samples, 0.05%)</title><rect x="603.4" y="1445" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="606.38" y="1455.5" ></text>
</g>
<g >
<title>__switch_to_asm (131,844,385 samples, 0.02%)</title><rect x="475.3" y="1413" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="478.32" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (393,215,437 samples, 0.06%)</title><rect x="825.3" y="1573" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="828.34" y="1583.5" ></text>
</g>
<g >
<title>__switch_to (195,211,864 samples, 0.03%)</title><rect x="887.7" y="1589" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="890.74" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1413" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (782,719,963 samples, 0.12%)</title><rect x="35.8" y="1445" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="38.79" y="1455.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (747,927,745 samples, 0.12%)</title><rect x="1123.4" y="1413" width="1.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1126.44" y="1423.5" ></text>
</g>
<g >
<title>command_substitute (154,391,175 samples, 0.02%)</title><rect x="831.8" y="1221" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="834.77" y="1231.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,325,865,539 samples, 0.20%)</title><rect x="88.6" y="1429" width="2.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="91.63" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="309" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1253" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1263.5" ></text>
</g>
<g >
<title>apparmor_inode_alloc_security (64,105,518 samples, 0.01%)</title><rect x="517.7" y="1269" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="520.70" y="1279.5" ></text>
</g>
<g >
<title>__d_alloc (1,947,068,083 samples, 0.30%)</title><rect x="531.3" y="1301" width="3.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="534.26" y="1311.5" ></text>
</g>
<g >
<title>update_load_avg (494,366,796 samples, 0.08%)</title><rect x="1090.0" y="1445" width="0.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1093.01" y="1455.5" ></text>
</g>
<g >
<title>sched_clock (62,103,983 samples, 0.01%)</title><rect x="907.7" y="1301" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="910.69" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1317" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1327.5" ></text>
</g>
<g >
<title>enqueue_entity (363,242,836 samples, 0.06%)</title><rect x="1121.2" y="1285" width="0.6" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1124.16" y="1295.5" ></text>
</g>
<g >
<title>NaClOpenAclCheck (201,078,863 samples, 0.03%)</title><rect x="435.5" y="1525" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="438.46" y="1535.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (515,916,874 samples, 0.08%)</title><rect x="529.2" y="1269" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="532.20" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="917" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="927.5" ></text>
</g>
<g >
<title>kmem_cache_free (65,856,861 samples, 0.01%)</title><rect x="836.4" y="1301" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="839.40" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="677" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="687.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,351,083,121 samples, 0.21%)</title><rect x="56.9" y="1445" width="2.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="59.95" y="1455.5" ></text>
</g>
<g >
<title>update_cfs_group (584,779,903 samples, 0.09%)</title><rect x="580.4" y="1221" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="583.44" y="1231.5" ></text>
</g>
<g >
<title>exit_mmap (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1397" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="38.20" y="1407.5" ></text>
</g>
<g >
<title>update_load_avg (247,736,396 samples, 0.04%)</title><rect x="480.9" y="1237" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="483.91" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1413" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="20.24" y="1423.5" ></text>
</g>
<g >
<title>bprm_execve (56,651,202 samples, 0.01%)</title><rect x="833.0" y="1525" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="836.00" y="1535.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (182,478,209 samples, 0.03%)</title><rect x="592.6" y="1221" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="595.63" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="229" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="239.5" ></text>
</g>
<g >
<title>rcu_core_si (265,273,651 samples, 0.04%)</title><rect x="836.2" y="1381" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="839.16" y="1391.5" ></text>
</g>
<g >
<title>__switch_to (55,161,122 samples, 0.01%)</title><rect x="1115.3" y="1589" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1118.34" y="1599.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (61,838,840 samples, 0.01%)</title><rect x="475.1" y="1413" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="478.07" y="1423.5" ></text>
</g>
<g >
<title>sched_clock_cpu (212,754,972 samples, 0.03%)</title><rect x="592.6" y="1253" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="595.57" y="1263.5" ></text>
</g>
<g >
<title>switch_fpu_return (967,333,915 samples, 0.15%)</title><rect x="599.4" y="1333" width="1.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="602.42" y="1343.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (323,683,592 samples, 0.05%)</title><rect x="86.2" y="1509" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="89.24" y="1519.5" ></text>
</g>
<g >
<title>v8::internal::ScavengerCollector::JobTask::ProcessItems (69,871,672 samples, 0.01%)</title><rect x="30.9" y="1509" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="33.88" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1109" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="1119.5" ></text>
</g>
<g >
<title>wake_up_q (1,081,190,105 samples, 0.17%)</title><rect x="494.5" y="1349" width="1.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="497.46" y="1359.5" ></text>
</g>
<g >
<title>anon_vma_fork (84,436,724 samples, 0.01%)</title><rect x="22.5" y="1333" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="25.50" y="1343.5" ></text>
</g>
<g >
<title>file_free_rcu (119,418,432 samples, 0.02%)</title><rect x="836.2" y="1333" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="839.18" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1029" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1039.5" ></text>
</g>
<g >
<title>__schedule (4,493,033,619 samples, 0.69%)</title><rect x="1086.4" y="1509" width="8.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1089.37" y="1519.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (150,804,046 samples, 0.02%)</title><rect x="931.1" y="1445" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="934.06" y="1455.5" ></text>
</g>
<g >
<title>[bash] (105,706,456 samples, 0.02%)</title><rect x="831.6" y="1285" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="834.55" y="1295.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (86,019,247 samples, 0.01%)</title><rect x="552.6" y="1141" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="555.62" y="1151.5" ></text>
</g>
<g >
<title>seq_read (164,772,463 samples, 0.03%)</title><rect x="31.1" y="1397" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="34.13" y="1407.5" ></text>
</g>
<g >
<title>ttwu_do_activate (763,500,432 samples, 0.12%)</title><rect x="1120.9" y="1333" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1123.89" y="1343.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (58,315,866 samples, 0.01%)</title><rect x="85.2" y="1397" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="88.18" y="1407.5" ></text>
</g>
<g >
<title>dput (4,239,044,446 samples, 0.65%)</title><rect x="548.3" y="1301" width="7.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="551.34" y="1311.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,750,414,312 samples, 0.27%)</title><rect x="1120.1" y="1429" width="3.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1123.08" y="1439.5" ></text>
</g>
<g >
<title>reweight_entity (66,628,778 samples, 0.01%)</title><rect x="480.5" y="1221" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="483.46" y="1231.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1,365,800,058 samples, 0.21%)</title><rect x="862.6" y="1557" width="2.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="865.60" y="1567.5" ></text>
</g>
<g >
<title>clear_page_erms (112,281,504 samples, 0.02%)</title><rect x="519.5" y="1173" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="522.47" y="1183.5" ></text>
</g>
<g >
<title>set_default_locale (236,865,017 samples, 0.04%)</title><rect x="832.5" y="1525" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="835.45" y="1535.5" ></text>
</g>
<g >
<title>generic_file_read_iter (62,584,796 samples, 0.01%)</title><rect x="435.9" y="1221" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="438.90" y="1231.5" ></text>
</g>
<g >
<title>____fput (6,695,666,092 samples, 1.03%)</title><rect x="546.3" y="1333" width="12.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="549.28" y="1343.5" ></text>
</g>
<g >
<title>ret_from_fork (378,407,990 samples, 0.06%)</title><rect x="833.2" y="1573" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="836.15" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (171,585,659 samples, 0.03%)</title><rect x="19.3" y="1461" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="22.33" y="1471.5" ></text>
</g>
<g >
<title>do_sys_poll (105,128,649 samples, 0.02%)</title><rect x="35.5" y="1477" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="38.54" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (3,051,504,633 samples, 0.47%)</title><rect x="500.2" y="1381" width="5.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="503.24" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="405" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="415.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (122,276,794 samples, 0.02%)</title><rect x="17.0" y="1557" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="20.02" y="1567.5" ></text>
</g>
<g >
<title>psi_task_change (251,514,644 samples, 0.04%)</title><rect x="1084.4" y="1445" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1087.38" y="1455.5" ></text>
</g>
<g >
<title>call_rcu (664,560,980 samples, 0.10%)</title><rect x="547.1" y="1301" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="550.13" y="1311.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (56,651,202 samples, 0.01%)</title><rect x="833.0" y="1509" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="836.00" y="1519.5" ></text>
</g>
<g >
<title>pick_next_task_fair (166,055,729 samples, 0.03%)</title><rect x="87.4" y="1477" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="90.38" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (171,585,659 samples, 0.03%)</title><rect x="19.3" y="1477" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="22.33" y="1487.5" ></text>
</g>
<g >
<title>__filemap_add_folio (176,006,249 samples, 0.03%)</title><rect x="36.2" y="1205" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="39.22" y="1215.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (158,898,272 samples, 0.02%)</title><rect x="521.8" y="1253" width="0.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="524.79" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="549" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="559.5" ></text>
</g>
<g >
<title>node::PerIsolatePlatformData::RunForegroundTask (131,786,643 samples, 0.02%)</title><rect x="30.2" y="1525" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="33.24" y="1535.5" ></text>
</g>
<g >
<title>node::PerIsolatePlatformData::FlushForegroundTasksInternal (131,786,643 samples, 0.02%)</title><rect x="30.2" y="1541" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="33.24" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="933" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,133,797,165 samples, 0.17%)</title><rect x="26.2" y="1413" width="2.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.19" y="1423.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::nonblock_accept (78,599,916 samples, 0.01%)</title><rect x="827.2" y="1573" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="830.24" y="1583.5" ></text>
</g>
<g >
<title>start_secondary (74,726,696 samples, 0.01%)</title><rect x="10.5" y="1573" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="13.52" y="1583.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (93,988,419 samples, 0.01%)</title><rect x="1077.4" y="1429" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1080.38" y="1439.5" ></text>
</g>
<g >
<title>__libc_start_main (1,069,100,897 samples, 0.16%)</title><rect x="18.8" y="1573" width="1.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="21.77" y="1583.5" ></text>
</g>
<g >
<title>__slab_free (67,373,560 samples, 0.01%)</title><rect x="1124.0" y="1285" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1127.03" y="1295.5" ></text>
</g>
<g >
<title>cpu_startup_entry (74,726,696 samples, 0.01%)</title><rect x="10.5" y="1557" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="13.52" y="1567.5" ></text>
</g>
<g >
<title>clock_gettime (104,544,896 samples, 0.02%)</title><rect x="492.0" y="1429" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="495.01" y="1439.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (72,211,065 samples, 0.01%)</title><rect x="913.5" y="1285" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="916.50" y="1295.5" ></text>
</g>
<g >
<title>wake_up_process (62,133,192 samples, 0.01%)</title><rect x="88.7" y="1301" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="91.67" y="1311.5" ></text>
</g>
<g >
<title>psi_group_change (59,019,993 samples, 0.01%)</title><rect x="1111.8" y="1413" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1114.75" y="1423.5" ></text>
</g>
<g >
<title>tcp_sendmsg (239,865,689 samples, 0.04%)</title><rect x="604.1" y="1381" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="607.05" y="1391.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (91,888,536 samples, 0.01%)</title><rect x="1085.8" y="1525" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1088.84" y="1535.5" ></text>
</g>
<g >
<title>enqueue_task (724,171,882 samples, 0.11%)</title><rect x="1121.0" y="1317" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1123.96" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="709" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="693" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="703.5" ></text>
</g>
<g >
<title>pool-udisksd (8,033,838,147 samples, 1.24%)</title><rect x="37.3" y="1605" width="14.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="40.26" y="1615.5" ></text>
</g>
<g >
<title>memcpy@plt (146,064,479 samples, 0.02%)</title><rect x="392.0" y="1509" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="395.01" y="1519.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (683,813,090 samples, 0.11%)</title><rect x="1116.5" y="1541" width="1.3" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1119.52" y="1551.5" ></text>
</g>
<g >
<title>check_preempt_curr (84,521,584 samples, 0.01%)</title><rect x="1082.1" y="1461" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1085.15" y="1471.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (64,166,042 samples, 0.01%)</title><rect x="36.9" y="1173" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="39.93" y="1183.5" ></text>
</g>
<g >
<title>[libc.so.6] (61,730,800 samples, 0.01%)</title><rect x="18.7" y="1589" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.66" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (813,906,249 samples, 0.13%)</title><rect x="26.3" y="917" width="1.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.27" y="927.5" ></text>
</g>
<g >
<title>[expr] (498,185,620 samples, 0.08%)</title><rect x="11.0" y="1541" width="0.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.99" y="1551.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1,058,689,457 samples, 0.16%)</title><rect x="482.3" y="1269" width="2.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="485.34" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (102,526,308 samples, 0.02%)</title><rect x="865.5" y="1413" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="868.50" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="565" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_clock_nanosleep (15,788,721,363 samples, 2.43%)</title><rect x="566.4" y="1365" width="28.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="569.42" y="1375.5" >__..</text>
</g>
<g >
<title>psi_task_change (199,747,017 samples, 0.03%)</title><rect x="1121.9" y="1301" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1124.92" y="1311.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (151,308,675 samples, 0.02%)</title><rect x="887.5" y="1589" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="890.47" y="1599.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (174,287,889 samples, 0.03%)</title><rect x="472.7" y="1269" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="475.75" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (115,913,942 samples, 0.02%)</title><rect x="12.7" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.70" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="629" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="639.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1509" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="20.70" y="1519.5" ></text>
</g>
<g >
<title>clear_page_erms (65,964,412 samples, 0.01%)</title><rect x="604.1" y="1269" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="607.12" y="1279.5" ></text>
</g>
<g >
<title>search_binary_handler (56,651,202 samples, 0.01%)</title><rect x="833.0" y="1477" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="836.00" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (569,101,471 samples, 0.09%)</title><rect x="26.3" y="677" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.30" y="687.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (1,222,724,987 samples, 0.19%)</title><rect x="26.1" y="1525" width="2.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="29.07" y="1535.5" ></text>
</g>
<g >
<title>native_sched_clock (56,009,080 samples, 0.01%)</title><rect x="485.2" y="1221" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="488.23" y="1231.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (2,635,521,312 samples, 0.41%)</title><rect x="183.8" y="1541" width="4.8" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="186.85" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (19,444,055,934 samples, 3.00%)</title><rect x="565.9" y="1381" width="35.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="568.85" y="1391.5" >do..</text>
</g>
<g >
<title>grep (265,232,040 samples, 0.04%)</title><rect x="12.6" y="1605" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="15.55" y="1615.5" ></text>
</g>
<g >
<title>sshd (135,084,662,381 samples, 20.83%)</title><rect x="866.4" y="1605" width="245.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="869.37" y="1615.5" >sshd</text>
</g>
<g >
<title>tick_nohz_idle_enter (453,576,145 samples, 0.07%)</title><rect x="1094.9" y="1525" width="0.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1097.85" y="1535.5" ></text>
</g>
<g >
<title>execute_command (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1509" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="20.24" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (58,843,083 samples, 0.01%)</title><rect x="18.7" y="1573" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.66" y="1583.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (71,729,861 samples, 0.01%)</title><rect x="32.2" y="1349" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="35.22" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_execve (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1397" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="20.24" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (122,237,064 samples, 0.02%)</title><rect x="551.9" y="1205" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="554.94" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1333" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="1343.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (70,510,047 samples, 0.01%)</title><rect x="23.3" y="1221" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="26.33" y="1231.5" ></text>
</g>
<g >
<title>enqueue_task (216,016,409 samples, 0.03%)</title><rect x="86.3" y="1461" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="89.34" y="1471.5" ></text>
</g>
<g >
<title>read_tsc (130,367,322 samples, 0.02%)</title><rect x="570.9" y="1269" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="573.89" y="1279.5" ></text>
</g>
<g >
<title>__do_softirq (173,900,758 samples, 0.03%)</title><rect x="1077.0" y="1381" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1079.95" y="1391.5" ></text>
</g>
<g >
<title>vfs_iter_write (681,747,429 samples, 0.11%)</title><rect x="35.9" y="1349" width="1.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="38.95" y="1359.5" ></text>
</g>
<g >
<title>poll_idle (11,594,455,465 samples, 1.79%)</title><rect x="839.1" y="1461" width="21.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="842.11" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1157" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="453" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="463.5" ></text>
</g>
<g >
<title>tick_irq_enter (62,202,899 samples, 0.01%)</title><rect x="1123.3" y="1413" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1126.32" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,675,280,756 samples, 0.26%)</title><rect x="22.5" y="1461" width="3.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="25.47" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (998,666,700 samples, 0.15%)</title><rect x="26.2" y="1157" width="1.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.23" y="1167.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (264,214,078 samples, 0.04%)</title><rect x="604.0" y="1525" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="607.01" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (240,822,368 samples, 0.04%)</title><rect x="19.8" y="1397" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.80" y="1407.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (679,220,509 samples, 0.10%)</title><rect x="35.9" y="1301" width="1.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="38.95" y="1311.5" ></text>
</g>
<g >
<title>tick_nohz_stop_idle (143,435,741 samples, 0.02%)</title><rect x="1095.9" y="1509" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1098.93" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (60,227,080 samples, 0.01%)</title><rect x="12.0" y="1461" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.01" y="1471.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (73,853,617 samples, 0.01%)</title><rect x="435.9" y="1445" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="438.88" y="1455.5" ></text>
</g>
<g >
<title>start_secondary (58,265,082 samples, 0.01%)</title><rect x="866.3" y="1573" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="869.27" y="1583.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (119,962,107 samples, 0.02%)</title><rect x="1184.7" y="1333" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1187.68" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="373" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="383.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (99,605,416 samples, 0.02%)</title><rect x="36.3" y="1189" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="39.32" y="1199.5" ></text>
</g>
<g >
<title>psi_task_switch (422,429,085 samples, 0.07%)</title><rect x="484.6" y="1285" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="487.57" y="1295.5" ></text>
</g>
<g >
<title>sock_free_inode (58,268,969 samples, 0.01%)</title><rect x="833.5" y="1429" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="836.47" y="1439.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (64,470,386 samples, 0.01%)</title><rect x="1110.5" y="1365" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1113.47" y="1375.5" ></text>
</g>
<g >
<title>run_ksoftirqd (364,820,927 samples, 0.06%)</title><rect x="55.2" y="1525" width="0.7" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="58.21" y="1535.5" ></text>
</g>
<g >
<title>ksys_read (200,926,680 samples, 0.03%)</title><rect x="31.1" y="1445" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="34.07" y="1455.5" ></text>
</g>
<g >
<title>irq_enter_rcu (340,040,841 samples, 0.05%)</title><rect x="910.3" y="1429" width="0.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="913.27" y="1439.5" ></text>
</g>
<g >
<title>try_to_wake_up (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1269" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="34.57" y="1279.5" ></text>
</g>
<g >
<title>__schedule (57,078,713 samples, 0.01%)</title><rect x="31.8" y="1381" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="34.76" y="1391.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (67,777,833 samples, 0.01%)</title><rect x="10.1" y="1525" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.06" y="1535.5" ></text>
</g>
<g >
<title>__rcu_read_lock (79,709,329 samples, 0.01%)</title><rect x="532.0" y="1269" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="534.97" y="1279.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (87,620,820 samples, 0.01%)</title><rect x="1093.5" y="1445" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1096.50" y="1455.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (197,494,691 samples, 0.03%)</title><rect x="372.1" y="1541" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="375.12" y="1551.5" ></text>
</g>
<g >
<title>[bash] (138,597,472 samples, 0.02%)</title><rect x="832.1" y="1397" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="835.07" y="1407.5" ></text>
</g>
<g >
<title>psi_task_switch (98,402,953 samples, 0.02%)</title><rect x="1111.7" y="1429" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1114.73" y="1439.5" ></text>
</g>
<g >
<title>__slab_free (141,560,538 samples, 0.02%)</title><rect x="891.5" y="1413" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="894.54" y="1423.5" ></text>
</g>
<g >
<title>lockref_put_return (139,588,168 samples, 0.02%)</title><rect x="556.1" y="1301" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="559.11" y="1311.5" ></text>
</g>
<g >
<title>sched_clock (120,876,176 samples, 0.02%)</title><rect x="1095.4" y="1477" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1098.43" y="1487.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (493,707,810 samples, 0.08%)</title><rect x="182.9" y="1541" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="185.95" y="1551.5" ></text>
</g>
<g >
<title>ct_idle_exit (55,224,553 samples, 0.01%)</title><rect x="59.5" y="1461" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="62.48" y="1471.5" ></text>
</g>
<g >
<title>security_inode_alloc (664,583,334 samples, 0.10%)</title><rect x="517.5" y="1285" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="520.53" y="1295.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (162,562,755 samples, 0.03%)</title><rect x="893.5" y="1445" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="896.48" y="1455.5" ></text>
</g>
<g >
<title>update_rq_clock (290,870,946 samples, 0.04%)</title><rect x="472.6" y="1317" width="0.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="475.55" y="1327.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (326,058,693 samples, 0.05%)</title><rect x="430.7" y="1509" width="0.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="433.74" y="1519.5" ></text>
</g>
<g >
<title>sock_recvmsg (190,119,191 samples, 0.03%)</title><rect x="1189.6" y="1365" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1192.55" y="1375.5" ></text>
</g>
<g >
<title>update_load_avg (62,050,775 samples, 0.01%)</title><rect x="585.1" y="1237" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="588.12" y="1247.5" ></text>
</g>
<g >
<title>[libc.so.6] (303,033,351 samples, 0.05%)</title><rect x="865.4" y="1445" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="868.40" y="1455.5" ></text>
</g>
<g >
<title>sched_clock (107,828,466 samples, 0.02%)</title><rect x="593.3" y="1237" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="596.27" y="1247.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (102,686,898 samples, 0.02%)</title><rect x="593.3" y="1221" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="596.28" y="1231.5" ></text>
</g>
<g >
<title>__calc_delta (248,040,994 samples, 0.04%)</title><rect x="470.7" y="1269" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="473.73" y="1279.5" ></text>
</g>
<g >
<title>try_to_wake_up (179,629,178 samples, 0.03%)</title><rect x="38.8" y="1349" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="41.83" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (143,833,498 samples, 0.02%)</title><rect x="12.6" y="1557" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.65" y="1567.5" ></text>
</g>
<g >
<title>execute_command_internal (160,382,304 samples, 0.02%)</title><rect x="831.3" y="1445" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="834.26" y="1455.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (320,370,088 samples, 0.05%)</title><rect x="489.8" y="1429" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="492.81" y="1439.5" ></text>
</g>
<g >
<title>get_timespec64 (458,432,037 samples, 0.07%)</title><rect x="594.2" y="1349" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="597.23" y="1359.5" ></text>
</g>
<g >
<title>reweight_entity (116,895,390 samples, 0.02%)</title><rect x="580.2" y="1221" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="583.23" y="1231.5" ></text>
</g>
<g >
<title>NaClSysPreadDecoder (91,849,084 samples, 0.01%)</title><rect x="435.9" y="1557" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="438.87" y="1567.5" ></text>
</g>
<g >
<title>rest_init (122,276,794 samples, 0.02%)</title><rect x="17.0" y="1509" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="20.02" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="469" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="479.5" ></text>
</g>
<g >
<title>select_idle_sibling (123,563,541 samples, 0.02%)</title><rect x="902.1" y="1317" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="905.10" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (194,808,595 samples, 0.03%)</title><rect x="832.5" y="1429" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="835.45" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (194,808,595 samples, 0.03%)</title><rect x="832.5" y="1445" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="835.45" y="1455.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectGetOwnPropertyDescriptors (83,713,968 samples, 0.01%)</title><rect x="22.3" y="1557" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="25.26" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="965" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="975.5" ></text>
</g>
<g >
<title>[libc.so.6] (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1557" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.24" y="1567.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (349,308,411 samples, 0.05%)</title><rect x="36.2" y="1253" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="39.21" y="1263.5" ></text>
</g>
<g >
<title>rcu_core_si (1,799,465,100 samples, 0.28%)</title><rect x="911.0" y="1381" width="3.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="914.04" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_select (824,165,563 samples, 0.13%)</title><rect x="1177.1" y="1509" width="1.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1180.07" y="1519.5" ></text>
</g>
<g >
<title>file_free_rcu (201,128,529 samples, 0.03%)</title><rect x="58.7" y="1333" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="61.65" y="1343.5" ></text>
</g>
<g >
<title>lind (500,710,490 samples, 0.08%)</title><rect x="17.2" y="1605" width="1.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="20.24" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,123,916 samples, 0.01%)</title><rect x="26.4" y="325" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.35" y="335.5" ></text>
</g>
<g >
<title>NaClLog (1,199,523,848 samples, 0.18%)</title><rect x="113.3" y="1573" width="2.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="116.32" y="1583.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (351,071,166 samples, 0.05%)</title><rect x="1180.5" y="1525" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1183.53" y="1535.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (984,224,849 samples, 0.15%)</title><rect x="111.5" y="1573" width="1.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="114.53" y="1583.5" ></text>
</g>
<g >
<title>do_idle (17,900,914,889 samples, 2.76%)</title><rect x="56.0" y="1541" width="32.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="58.98" y="1551.5" >do..</text>
</g>
<g >
<title>intel_idle (126,279,934 samples, 0.02%)</title><rect x="13.9" y="1461" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="16.86" y="1471.5" ></text>
</g>
<g >
<title>NaClLog (6,013,145,151 samples, 0.93%)</title><rect x="261.0" y="1557" width="11.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="264.02" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (239,865,689 samples, 0.04%)</title><rect x="604.1" y="1461" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="607.05" y="1471.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (350,897,198 samples, 0.05%)</title><rect x="86.2" y="1525" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="89.23" y="1535.5" ></text>
</g>
<g >
<title>exec_mmap (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1429" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="20.70" y="1439.5" ></text>
</g>
<g >
<title>find_busiest_group (424,296,146 samples, 0.07%)</title><rect x="588.3" y="1205" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="591.32" y="1215.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (67,273,814 samples, 0.01%)</title><rect x="914.5" y="1301" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="917.46" y="1311.5" ></text>
</g>
<g >
<title>ovl_write_iter (687,143,967 samples, 0.11%)</title><rect x="35.9" y="1365" width="1.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="38.94" y="1375.5" ></text>
</g>
<g >
<title>futex_wait_queue (4,253,255,315 samples, 0.66%)</title><rect x="478.0" y="1333" width="7.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="480.98" y="1343.5" ></text>
</g>
<g >
<title>__switch_to (297,603,547 samples, 0.05%)</title><rect x="563.1" y="1397" width="0.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="566.13" y="1407.5" ></text>
</g>
<g >
<title>check_spread.isra.0 (55,204,375 samples, 0.01%)</title><rect x="589.6" y="1237" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="592.60" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="773" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_accept (18,472,451,813 samples, 2.85%)</title><rect x="509.5" y="1397" width="33.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="512.55" y="1407.5" >__..</text>
</g>
<g >
<title>ktime_get (58,062,681 samples, 0.01%)</title><rect x="910.4" y="1397" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="913.42" y="1407.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (67,777,833 samples, 0.01%)</title><rect x="10.1" y="1541" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="13.06" y="1551.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (190,472,233 samples, 0.03%)</title><rect x="1176.5" y="1429" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1179.46" y="1439.5" ></text>
</g>
<g >
<title>__libc_start_main (143,833,498 samples, 0.02%)</title><rect x="12.6" y="1573" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="15.65" y="1583.5" ></text>
</g>
<g >
<title>load_elf_binary (56,651,202 samples, 0.01%)</title><rect x="833.0" y="1461" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="836.00" y="1471.5" ></text>
</g>
<g >
<title>v8::internal::Object::GetPropertyWithAccessor (73,974,260 samples, 0.01%)</title><rect x="22.3" y="1493" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="25.27" y="1503.5" ></text>
</g>
<g >
<title>start_kernel (122,276,794 samples, 0.02%)</title><rect x="17.0" y="1541" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="20.02" y="1551.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (69,843,447 samples, 0.01%)</title><rect x="554.8" y="1221" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="557.80" y="1231.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1,545,118,321 samples, 0.24%)</title><rect x="469.0" y="1301" width="2.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="472.00" y="1311.5" ></text>
</g>
<g >
<title>sched_clock (61,440,398 samples, 0.01%)</title><rect x="907.3" y="1269" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="910.25" y="1279.5" ></text>
</g>
<g >
<title>poll_idle (5,936,268,937 samples, 0.92%)</title><rect x="1099.8" y="1397" width="10.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1102.80" y="1407.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (57,007,869 samples, 0.01%)</title><rect x="862.2" y="1493" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="865.17" y="1503.5" ></text>
</g>
<g >
<title>[git] (80,832,401 samples, 0.01%)</title><rect x="12.4" y="1493" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.41" y="1503.5" ></text>
</g>
<g >
<title>destroy_inode (1,419,677,785 samples, 0.22%)</title><rect x="552.2" y="1221" width="2.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="555.21" y="1231.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (61,960,131 samples, 0.01%)</title><rect x="891.9" y="1413" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="894.91" y="1423.5" ></text>
</g>
<g >
<title>exec_mmap (1,689,638,799 samples, 0.26%)</title><rect x="32.1" y="1429" width="3.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="35.08" y="1439.5" ></text>
</g>
<g >
<title>do_idle (8,436,907,767 samples, 1.30%)</title><rect x="1096.8" y="1477" width="15.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1099.78" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="693" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="133" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="143.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (8,519,629,781 samples, 1.31%)</title><rect x="543.4" y="1381" width="15.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="546.41" y="1391.5" ></text>
</g>
<g >
<title>__schedule (573,916,014 samples, 0.09%)</title><rect x="861.2" y="1509" width="1.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="864.23" y="1519.5" ></text>
</g>
<g >
<title>enqueue_task (1,397,073,106 samples, 0.22%)</title><rect x="1082.3" y="1461" width="2.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1085.30" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (109,047,774 samples, 0.02%)</title><rect x="35.5" y="1509" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="38.54" y="1519.5" ></text>
</g>
<g >
<title>sched_clock_cpu (60,162,189 samples, 0.01%)</title><rect x="485.2" y="1269" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="488.23" y="1279.5" ></text>
</g>
<g >
<title>do_futex (5,542,514,627 samples, 0.85%)</title><rect x="476.9" y="1365" width="10.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="479.90" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (782,719,963 samples, 0.12%)</title><rect x="35.8" y="1429" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="38.79" y="1439.5" ></text>
</g>
<g >
<title>pick_next_task (67,968,129 samples, 0.01%)</title><rect x="894.0" y="1493" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="896.98" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="597" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1,675,280,756 samples, 0.26%)</title><rect x="22.5" y="1429" width="3.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="25.47" y="1439.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (144,855,321 samples, 0.02%)</title><rect x="1081.1" y="1477" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1084.13" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (154,847,738 samples, 0.02%)</title><rect x="18.4" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.36" y="1551.5" ></text>
</g>
<g >
<title>ext4_do_writepages (103,280,391 samples, 0.02%)</title><rect x="894.3" y="1381" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="897.29" y="1391.5" ></text>
</g>
<g >
<title>sock_read (211,022,700 samples, 0.03%)</title><rect x="1189.5" y="1493" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1192.52" y="1503.5" ></text>
</g>
<g >
<title>new_slab (232,043,352 samples, 0.04%)</title><rect x="519.5" y="1253" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="522.46" y="1263.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (317,668,247 samples, 0.05%)</title><rect x="86.3" y="1493" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="89.26" y="1503.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (160,169,070 samples, 0.02%)</title><rect x="549.8" y="1237" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="552.77" y="1247.5" ></text>
</g>
<g >
<title>tcp_get_idx (81,339,715 samples, 0.01%)</title><rect x="31.3" y="1349" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="34.28" y="1359.5" ></text>
</g>
<g >
<title>pick_next_task_idle (116,059,251 samples, 0.02%)</title><rect x="589.2" y="1253" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="592.24" y="1263.5" ></text>
</g>
<g >
<title>__schedule (10,223,737,531 samples, 1.58%)</title><rect x="574.9" y="1285" width="18.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="577.88" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (269,213,086 samples, 0.04%)</title><rect x="28.9" y="149" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (560,425,369 samples, 0.09%)</title><rect x="26.3" y="661" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.32" y="671.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (59,544,891 samples, 0.01%)</title><rect x="59.3" y="1429" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="62.30" y="1439.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (59,984,707 samples, 0.01%)</title><rect x="1176.5" y="1381" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1179.48" y="1391.5" ></text>
</g>
<g >
<title>proc_pid_readlink (75,411,248 samples, 0.01%)</title><rect x="19.5" y="1413" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="22.50" y="1423.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (4,782,694,496 samples, 0.74%)</title><rect x="273.4" y="1557" width="8.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="276.40" y="1567.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1,628,429,651 samples, 0.25%)</title><rect x="903.1" y="1301" width="2.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="906.07" y="1311.5" ></text>
</g>
<g >
<title>schedule_idle (4,860,998,542 samples, 0.75%)</title><rect x="1086.0" y="1525" width="8.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1089.01" y="1535.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (72,320,859 samples, 0.01%)</title><rect x="88.7" y="1333" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="91.66" y="1343.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (75,450,692 samples, 0.01%)</title><rect x="1116.3" y="1589" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1119.28" y="1599.5" ></text>
</g>
<g >
<title>worker (525,632,201 samples, 0.08%)</title><rect x="31.0" y="1557" width="1.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="34.01" y="1567.5" ></text>
</g>
<g >
<title>[bash] (154,391,175 samples, 0.02%)</title><rect x="831.8" y="1237" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="834.77" y="1247.5" ></text>
</g>
<g >
<title>bprm_execve (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1525" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="20.70" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="885" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="895.5" ></text>
</g>
<g >
<title>llist_add_batch (58,752,970 samples, 0.01%)</title><rect x="496.2" y="1301" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="499.23" y="1311.5" ></text>
</g>
<g >
<title>[bash] (285,371,107 samples, 0.04%)</title><rect x="831.5" y="1381" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="834.55" y="1391.5" ></text>
</g>
<g >
<title>refill_obj_stock (72,211,065 samples, 0.01%)</title><rect x="913.5" y="1269" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="916.50" y="1279.5" ></text>
</g>
<g >
<title>poll_idle (1,018,123,366 samples, 0.16%)</title><rect x="863.1" y="1397" width="1.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="866.07" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,675,280,756 samples, 0.26%)</title><rect x="22.5" y="1445" width="3.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="25.47" y="1455.5" ></text>
</g>
<g >
<title>irq_exit_rcu (221,908,584 samples, 0.03%)</title><rect x="1098.1" y="1365" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1101.10" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="981" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1349" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="805" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="815.5" ></text>
</g>
<g >
<title>[libc.so.6] (410,154,106 samples, 0.06%)</title><rect x="865.4" y="1557" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="868.39" y="1567.5" ></text>
</g>
<g >
<title>load_elf_binary (1,689,638,799 samples, 0.26%)</title><rect x="32.1" y="1461" width="3.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="35.08" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1285" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1295.5" ></text>
</g>
<g >
<title>clock_gettime (197,495,206 samples, 0.03%)</title><rect x="97.3" y="1573" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="100.33" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (55,651,845 samples, 0.01%)</title><rect x="55.1" y="1589" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="58.07" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1589" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="20.70" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="325" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="335.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (2,999,005,458 samples, 0.46%)</title><rect x="537.2" y="1365" width="5.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="540.16" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="421" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (86,127,478 samples, 0.01%)</title><rect x="560.9" y="1413" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="563.92" y="1423.5" ></text>
</g>
<g >
<title>NaClSysPread (91,849,084 samples, 0.01%)</title><rect x="435.9" y="1541" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="438.87" y="1551.5" ></text>
</g>
<g >
<title>v8::internal::ScavengerCollector::CollectGarbage (131,786,643 samples, 0.02%)</title><rect x="30.2" y="1429" width="0.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="33.24" y="1439.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (186,369,729 samples, 0.03%)</title><rect x="555.2" y="1205" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="558.18" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="629" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="639.5" ></text>
</g>
<g >
<title>enqueue_task (91,501,014 samples, 0.01%)</title><rect x="1184.7" y="1253" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1187.72" y="1263.5" ></text>
</g>
<g >
<title>uv_async_send (61,123,304 samples, 0.01%)</title><rect x="31.6" y="1541" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="34.57" y="1551.5" ></text>
</g>
<g >
<title>set_next_entity (95,796,614 samples, 0.01%)</title><rect x="87.5" y="1461" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="90.49" y="1471.5" ></text>
</g>
<g >
<title>alloc_inode (3,690,994,173 samples, 0.57%)</title><rect x="516.7" y="1317" width="6.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="519.67" y="1327.5" ></text>
</g>
<g >
<title>__clone (308,155,634 samples, 0.05%)</title><rect x="1189.4" y="1589" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.43" y="1599.5" ></text>
</g>
<g >
<title>mod_lruvec_page_state.constprop.0 (70,510,047 samples, 0.01%)</title><rect x="23.3" y="1253" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="26.33" y="1263.5" ></text>
</g>
<g >
<title>update_curr (180,203,347 samples, 0.03%)</title><rect x="480.6" y="1237" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="483.58" y="1247.5" ></text>
</g>
<g >
<title>mmput (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1413" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="20.70" y="1423.5" ></text>
</g>
<g >
<title>copy_process (1,675,280,756 samples, 0.26%)</title><rect x="22.5" y="1381" width="3.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="25.47" y="1391.5" ></text>
</g>
<g >
<title>psi_task_change (94,620,814 samples, 0.01%)</title><rect x="835.4" y="1301" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="838.38" y="1311.5" ></text>
</g>
<g >
<title>start_secondary (17,967,572,382 samples, 2.77%)</title><rect x="55.9" y="1573" width="32.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="58.93" y="1583.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="853" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="863.5" ></text>
</g>
<g >
<title>[[vdso]] (19,392,367,528 samples, 2.99%)</title><rect x="395.5" y="1509" width="35.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="398.45" y="1519.5" >[[..</text>
</g>
<g >
<title>cpuidle_enter (16,014,003,762 samples, 2.47%)</title><rect x="56.4" y="1493" width="29.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="59.38" y="1503.5" >cp..</text>
</g>
<g >
<title>rest_init (570,162,054 samples, 0.09%)</title><rect x="50.8" y="1509" width="1.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="53.84" y="1519.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1,458,329,916 samples, 0.22%)</title><rect x="88.6" y="1525" width="2.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="91.63" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (571,985,860 samples, 0.09%)</title><rect x="19.7" y="1493" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.67" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,266,315,193 samples, 0.35%)</title><rect x="492.5" y="1429" width="4.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="495.48" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (223,299,312 samples, 0.03%)</title><rect x="29.5" y="69" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="79.5" ></text>
</g>
<g >
<title>start_kernel (1,458,329,916 samples, 0.22%)</title><rect x="88.6" y="1541" width="2.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="91.63" y="1551.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (69,986,985 samples, 0.01%)</title><rect x="10.5" y="1477" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="13.52" y="1487.5" ></text>
</g>
<g >
<title>setfl (262,824,315 samples, 0.04%)</title><rect x="505.1" y="1349" width="0.5" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="508.14" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1189" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1199.5" ></text>
</g>
<g >
<title>do_syscall_64 (99,097,592 samples, 0.02%)</title><rect x="28.3" y="1493" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="31.30" y="1503.5" ></text>
</g>
<g >
<title>find_busiest_group (102,771,838 samples, 0.02%)</title><rect x="914.4" y="1333" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="917.40" y="1343.5" ></text>
</g>
<g >
<title>[[vdso]] (17,208,599,401 samples, 2.65%)</title><rect x="310.3" y="1477" width="31.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="313.29" y="1487.5" >[[..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (201,719,031 samples, 0.03%)</title><rect x="1189.5" y="1461" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.54" y="1471.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (117,439,488 samples, 0.02%)</title><rect x="56.4" y="1477" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="59.38" y="1487.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (2,673,582,696 samples, 0.41%)</title><rect x="1184.5" y="1557" width="4.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1187.53" y="1567.5" ></text>
</g>
<g >
<title>ip_queue_xmit (55,396,862 samples, 0.01%)</title><rect x="604.3" y="1301" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="607.30" y="1311.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (913,066,938 samples, 0.14%)</title><rect x="544.1" y="1349" width="1.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="547.07" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="309" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="319.5" ></text>
</g>
<g >
<title>do_writepages (103,280,391 samples, 0.02%)</title><rect x="894.3" y="1413" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="897.29" y="1423.5" ></text>
</g>
<g >
<title>kthread (2,496,380,118 samples, 0.38%)</title><rect x="890.0" y="1557" width="4.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="892.95" y="1567.5" ></text>
</g>
<g >
<title>__nanosleep (63,517,152 samples, 0.01%)</title><rect x="826.1" y="1573" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="829.12" y="1583.5" ></text>
</g>
<g >
<title>lru_add_drain (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1381" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="38.20" y="1391.5" ></text>
</g>
<g >
<title>start_secondary (15,805,987,356 samples, 2.44%)</title><rect x="833.8" y="1573" width="28.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="836.84" y="1583.5" >st..</text>
</g>
<g >
<title>update_curr (682,484,519 samples, 0.11%)</title><rect x="581.5" y="1221" width="1.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="584.51" y="1231.5" ></text>
</g>
<g >
<title>update_cfs_group (83,276,989 samples, 0.01%)</title><rect x="1083.3" y="1413" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1086.32" y="1423.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (90,570,808 samples, 0.01%)</title><rect x="1176.5" y="1413" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1179.46" y="1423.5" ></text>
</g>
<g >
<title>wake_affine (183,163,174 samples, 0.03%)</title><rect x="495.4" y="1301" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="498.42" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,450,893,602 samples, 0.84%)</title><rect x="497.5" y="1429" width="9.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="500.46" y="1439.5" ></text>
</g>
<g >
<title>enqueue_task (327,852,723 samples, 0.05%)</title><rect x="835.0" y="1317" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="837.96" y="1327.5" ></text>
</g>
<g >
<title>alloc_pages (123,027,270 samples, 0.02%)</title><rect x="519.5" y="1221" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="522.46" y="1231.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (130,669,194 samples, 0.02%)</title><rect x="862.7" y="1397" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="865.69" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (59,059,507 samples, 0.01%)</title><rect x="1080.9" y="1477" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1083.89" y="1487.5" ></text>
</g>
<g >
<title>parse_and_execute (66,631,454 samples, 0.01%)</title><rect x="831.9" y="1205" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="834.92" y="1215.5" ></text>
</g>
<g >
<title>execve (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1445" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="20.24" y="1455.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (123,241,536 samples, 0.02%)</title><rect x="88.2" y="1525" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="91.23" y="1535.5" ></text>
</g>
<g >
<title>pthread_cond_wait (158,000,237 samples, 0.02%)</title><rect x="31.7" y="1525" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="34.68" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (996,443,844 samples, 0.15%)</title><rect x="26.2" y="1141" width="1.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.23" y="1151.5" ></text>
</g>
<g >
<title>intel_idle (2,828,648,190 samples, 0.44%)</title><rect x="1125.3" y="1461" width="5.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1128.27" y="1471.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (570,162,054 samples, 0.09%)</title><rect x="50.8" y="1573" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="53.84" y="1583.5" ></text>
</g>
<g >
<title>mas_wr_modify (99,434,618 samples, 0.02%)</title><rect x="25.3" y="1301" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="28.31" y="1311.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (95,196,467 samples, 0.01%)</title><rect x="582.3" y="1205" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="585.26" y="1215.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (476,942,875 samples, 0.07%)</title><rect x="834.8" y="1381" width="0.9" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="837.79" y="1391.5" ></text>
</g>
<g >
<title>lock_sock_nested (92,894,634 samples, 0.01%)</title><rect x="513.7" y="1317" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="516.72" y="1327.5" ></text>
</g>
<g >
<title>call_cpuidle (2,360,219,590 samples, 0.36%)</title><rect x="1184.6" y="1445" width="4.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1187.58" y="1455.5" ></text>
</g>
<g >
<title>kmem_cache_free (337,752,152 samples, 0.05%)</title><rect x="891.4" y="1429" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="894.43" y="1439.5" ></text>
</g>
<g >
<title>record_times (62,592,104 samples, 0.01%)</title><rect x="592.3" y="1237" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="595.26" y="1247.5" ></text>
</g>
<g >
<title>schedule_idle (72,842,408 samples, 0.01%)</title><rect x="16.9" y="1525" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="19.86" y="1535.5" ></text>
</g>
<g >
<title>_copy_to_iter (71,624,345 samples, 0.01%)</title><rect x="1189.7" y="1253" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1192.71" y="1263.5" ></text>
</g>
<g >
<title>uv__async_io (251,794,219 samples, 0.04%)</title><rect x="30.1" y="1557" width="0.5" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="33.15" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (146,764,994 samples, 0.02%)</title><rect x="11.3" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.27" y="1407.5" ></text>
</g>
<g >
<title>std::thread::sleep (23,737,798,665 samples, 3.66%)</title><rect x="560.1" y="1461" width="43.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="563.09" y="1471.5" >std:..</text>
</g>
<g >
<title>update_load_avg (104,713,962 samples, 0.02%)</title><rect x="1121.6" y="1269" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1124.63" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1173" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="1183.5" ></text>
</g>
<g >
<title>d_set_d_op (60,684,326 samples, 0.01%)</title><rect x="531.5" y="1285" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="534.47" y="1295.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (116,569,329 samples, 0.02%)</title><rect x="49.8" y="1509" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="52.81" y="1519.5" ></text>
</g>
<g >
<title>vfs_fstatat (96,885,203 samples, 0.01%)</title><rect x="28.3" y="1445" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="31.30" y="1455.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1,365,800,058 samples, 0.21%)</title><rect x="862.6" y="1573" width="2.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="865.60" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (85,972,324 samples, 0.01%)</title><rect x="30.0" y="1541" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="32.99" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (859,312,048 samples, 0.13%)</title><rect x="26.3" y="965" width="1.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.26" y="975.5" ></text>
</g>
<g >
<title>[libc.so.6] (113,854,925 samples, 0.02%)</title><rect x="832.5" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="835.51" y="1391.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (67,079,681 samples, 0.01%)</title><rect x="862.7" y="1333" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="865.71" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="341" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="351.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (5,897,006,843 samples, 0.91%)</title><rect x="343.3" y="1509" width="10.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="346.27" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (56,620,371 samples, 0.01%)</title><rect x="12.0" y="1445" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.01" y="1455.5" ></text>
</g>
<g >
<title>wb_workfn (103,280,391 samples, 0.02%)</title><rect x="894.3" y="1509" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="897.29" y="1519.5" ></text>
</g>
<g >
<title>refill_obj_stock (98,564,047 samples, 0.02%)</title><rect x="892.9" y="1381" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="895.85" y="1391.5" ></text>
</g>
<g >
<title>__slab_free (149,289,548 samples, 0.02%)</title><rect x="893.2" y="1413" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="896.18" y="1423.5" ></text>
</g>
<g >
<title>d_instantiate (690,520,160 samples, 0.11%)</title><rect x="535.0" y="1317" width="1.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="538.03" y="1327.5" ></text>
</g>
<g >
<title>ct_idle_enter (65,328,322 samples, 0.01%)</title><rect x="915.6" y="1461" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="918.61" y="1471.5" ></text>
</g>
<g >
<title>__update_idle_core (56,374,673 samples, 0.01%)</title><rect x="589.3" y="1237" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="592.34" y="1247.5" ></text>
</g>
<g >
<title>native_write_msr (176,385,509 samples, 0.03%)</title><rect x="1122.9" y="1365" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1125.89" y="1375.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (689,115,614 samples, 0.11%)</title><rect x="487.3" y="1349" width="1.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="490.28" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,689,638,799 samples, 0.26%)</title><rect x="32.1" y="1589" width="3.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="35.08" y="1599.5" ></text>
</g>
<g >
<title>rcu_do_batch (355,565,012 samples, 0.05%)</title><rect x="55.2" y="1461" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="58.23" y="1471.5" ></text>
</g>
<g >
<title>call_cpuidle (14,375,621,962 samples, 2.22%)</title><rect x="834.1" y="1509" width="26.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="837.10" y="1519.5" >c..</text>
</g>
<g >
<title>dequeue_entity (3,118,646,604 samples, 0.48%)</title><rect x="579.1" y="1237" width="5.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="582.13" y="1247.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (62,584,796 samples, 0.01%)</title><rect x="435.9" y="1253" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="438.90" y="1263.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (93,359,807 samples, 0.01%)</title><rect x="1124.8" y="1429" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1127.84" y="1439.5" ></text>
</g>
<g >
<title>arch_call_rest_init (8,457,358,431 samples, 1.30%)</title><rect x="1096.8" y="1525" width="15.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1099.75" y="1535.5" ></text>
</g>
<g >
<title>clockevents_program_event (275,446,401 samples, 0.04%)</title><rect x="1122.8" y="1381" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1125.76" y="1391.5" ></text>
</g>
<g >
<title>release_pages (177,774,266 samples, 0.03%)</title><rect x="34.7" y="1237" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="37.66" y="1247.5" ></text>
</g>
<g >
<title>mpage_submit_folio (64,219,231 samples, 0.01%)</title><rect x="894.3" y="1333" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="897.33" y="1343.5" ></text>
</g>
<g >
<title>pick_next_task (96,501,868 samples, 0.01%)</title><rect x="1111.5" y="1429" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1114.48" y="1439.5" ></text>
</g>
<g >
<title>reweight_entity (68,128,227 samples, 0.01%)</title><rect x="904.6" y="1253" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="907.56" y="1263.5" ></text>
</g>
<g >
<title>call_cpuidle (7,546,463,421 samples, 1.16%)</title><rect x="1096.9" y="1445" width="13.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1099.94" y="1455.5" ></text>
</g>
<g >
<title>NaClClockGetTime (98,033,543 samples, 0.02%)</title><rect x="811.0" y="1573" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="813.96" y="1583.5" ></text>
</g>
<g >
<title>ion (790,728,439 samples, 0.12%)</title><rect x="35.8" y="1477" width="1.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="38.77" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (263,556,618 samples, 0.04%)</title><rect x="889.4" y="1589" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="892.36" y="1599.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (7,715,319,745 samples, 1.19%)</title><rect x="1096.9" y="1461" width="14.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1099.89" y="1471.5" ></text>
</g>
<g >
<title>v8::internal::ScavengerCollector::JobTask::Run (69,871,672 samples, 0.01%)</title><rect x="30.9" y="1525" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="33.88" y="1535.5" ></text>
</g>
<g >
<title>rcu_core (122,254,539 samples, 0.02%)</title><rect x="38.1" y="1477" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="41.15" y="1487.5" ></text>
</g>
<g >
<title>generic_perform_write (670,891,678 samples, 0.10%)</title><rect x="36.0" y="1269" width="1.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="38.96" y="1279.5" ></text>
</g>
<g >
<title>__pmd_alloc (127,196,467 samples, 0.02%)</title><rect x="22.7" y="1301" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="25.74" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (538,369,084 samples, 0.08%)</title><rect x="26.3" y="597" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.32" y="607.5" ></text>
</g>
<g >
<title>do_iter_write (681,747,429 samples, 0.11%)</title><rect x="35.9" y="1333" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="38.95" y="1343.5" ></text>
</g>
<g >
<title>memcpy@plt (197,493,823 samples, 0.03%)</title><rect x="353.6" y="1493" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="356.64" y="1503.5" ></text>
</g>
<g >
<title>rcu_core_si (642,548,934 samples, 0.10%)</title><rect x="1116.5" y="1493" width="1.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1119.54" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_free (134,822,343 samples, 0.02%)</title><rect x="913.7" y="1317" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="916.71" y="1327.5" ></text>
</g>
<g >
<title>[ls] (150,423,992 samples, 0.02%)</title><rect x="18.8" y="1493" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.80" y="1503.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (71,751,939 samples, 0.01%)</title><rect x="520.0" y="1269" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="523.04" y="1279.5" ></text>
</g>
<g >
<title>sock_read_iter (190,119,191 samples, 0.03%)</title><rect x="1189.6" y="1381" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1192.55" y="1391.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1,458,329,916 samples, 0.22%)</title><rect x="88.6" y="1557" width="2.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="91.63" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (87,439,283 samples, 0.01%)</title><rect x="865.2" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="868.21" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,149,488,452 samples, 0.18%)</title><rect x="26.2" y="1477" width="2.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.16" y="1487.5" ></text>
</g>
<g >
<title>__switch_to (80,650,402 samples, 0.01%)</title><rect x="1182.0" y="1493" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1185.04" y="1503.5" ></text>
</g>
<g >
<title>ext4_finish_bio (62,833,547 samples, 0.01%)</title><rect x="894.1" y="1477" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="897.14" y="1487.5" ></text>
</g>
<g >
<title>perf-exec (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1605" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="38.20" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1093" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1103.5" ></text>
</g>
<g >
<title>__switch_to_asm (448,979,447 samples, 0.07%)</title><rect x="563.7" y="1397" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="566.67" y="1407.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1,689,638,799 samples, 0.26%)</title><rect x="32.1" y="1541" width="3.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="35.08" y="1551.5" ></text>
</g>
<g >
<title>[bash] (63,262,008 samples, 0.01%)</title><rect x="831.9" y="1173" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="834.92" y="1183.5" ></text>
</g>
<g >
<title>try_to_wake_up (56,821,122 samples, 0.01%)</title><rect x="862.7" y="1285" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="865.72" y="1295.5" ></text>
</g>
<g >
<title>plist_add (64,232,175 samples, 0.01%)</title><rect x="478.2" y="1317" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="481.19" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1077" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1087.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (313,691,464 samples, 0.05%)</title><rect x="603.4" y="1429" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="606.38" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (658,245,844 samples, 0.10%)</title><rect x="498.5" y="1413" width="1.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="501.53" y="1423.5" ></text>
</g>
<g >
<title>update_load_avg (555,045,086 samples, 0.09%)</title><rect x="904.8" y="1269" width="1.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="907.84" y="1279.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (55,454,240 samples, 0.01%)</title><rect x="1081.3" y="1461" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1084.29" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="789" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,078,867,059 samples, 1.09%)</title><rect x="475.9" y="1413" width="12.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="478.88" y="1423.5" ></text>
</g>
<g >
<title>intel_idle (64,141,028 samples, 0.01%)</title><rect x="862.9" y="1397" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="865.94" y="1407.5" ></text>
</g>
<g >
<title>dequeue_task (3,838,618,678 samples, 0.59%)</title><rect x="578.3" y="1269" width="7.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="581.33" y="1279.5" ></text>
</g>
<g >
<title>__switch_to_asm (455,523,094 samples, 0.07%)</title><rect x="1115.4" y="1589" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1118.44" y="1599.5" ></text>
</g>
<g >
<title>execute_command (285,371,107 samples, 0.04%)</title><rect x="831.5" y="1413" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="834.55" y="1423.5" ></text>
</g>
<g >
<title>[bash] (423,968,579 samples, 0.07%)</title><rect x="831.5" y="1429" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="834.55" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (74,752,386 samples, 0.01%)</title><rect x="18.5" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.48" y="1487.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1,137,000,286 samples, 0.18%)</title><rect x="1120.4" y="1381" width="2.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1123.38" y="1391.5" ></text>
</g>
<g >
<title>futex_q_lock (342,027,431 samples, 0.05%)</title><rect x="486.3" y="1317" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="489.29" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,133,797,165 samples, 0.17%)</title><rect x="26.2" y="1429" width="2.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.19" y="1439.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (90,570,808 samples, 0.01%)</title><rect x="1176.5" y="1397" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1179.46" y="1407.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (338,024,376 samples, 0.05%)</title><rect x="836.2" y="1413" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="839.16" y="1423.5" ></text>
</g>
<g >
<title>__get_user_nocheck_4 (157,265,277 samples, 0.02%)</title><rect x="485.8" y="1317" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="488.83" y="1327.5" ></text>
</g>
<g >
<title>__srcu_read_lock (71,090,595 samples, 0.01%)</title><rect x="552.5" y="1141" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="555.49" y="1151.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (65,964,412 samples, 0.01%)</title><rect x="604.1" y="1349" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="607.12" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (713,007,109 samples, 0.11%)</title><rect x="370.5" y="1525" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="373.47" y="1535.5" ></text>
</g>
<g >
<title>poll_idle (414,281,946 samples, 0.06%)</title><rect x="51.0" y="1397" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="54.04" y="1407.5" ></text>
</g>
<g >
<title>__pte_alloc (141,161,730 samples, 0.02%)</title><rect x="23.2" y="1285" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="26.21" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1461" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1471.5" ></text>
</g>
<g >
<title>__switch_to (240,048,667 samples, 0.04%)</title><rect x="1087.6" y="1493" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1090.56" y="1503.5" ></text>
</g>
<g >
<title>native_sched_clock (94,115,080 samples, 0.01%)</title><rect x="593.3" y="1205" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="596.29" y="1215.5" ></text>
</g>
<g >
<title>HandleStackContext (641,853,147 samples, 0.10%)</title><rect x="806.4" y="1573" width="1.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="809.41" y="1583.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (62,833,547 samples, 0.01%)</title><rect x="894.1" y="1509" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="897.14" y="1519.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1349" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="38.20" y="1359.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,126,940,635 samples, 0.33%)</title><rect x="910.9" y="1413" width="3.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="913.91" y="1423.5" ></text>
</g>
<g >
<title>mod_objcg_state (301,955,306 samples, 0.05%)</title><rect x="520.8" y="1253" width="0.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="523.81" y="1263.5" ></text>
</g>
<g >
<title>clock_gettime (18,061,761,579 samples, 2.79%)</title><rect x="309.8" y="1493" width="32.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="312.77" y="1503.5" >cl..</text>
</g>
<g >
<title>__update_load_avg_se (131,516,304 samples, 0.02%)</title><rect x="1084.0" y="1397" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1087.00" y="1407.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (296,462,881 samples, 0.05%)</title><rect x="823.4" y="1573" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="826.39" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="885" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="895.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (2,673,582,696 samples, 0.41%)</title><rect x="1184.5" y="1573" width="4.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1187.53" y="1583.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1,068,778,678 samples, 0.16%)</title><rect x="479.6" y="1269" width="2.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="482.62" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_rq_lock_irqsave (72,168,585 samples, 0.01%)</title><rect x="482.7" y="1221" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="485.67" y="1231.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (1,336,346,398 samples, 0.21%)</title><rect x="26.1" y="1541" width="2.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="29.05" y="1551.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1365" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="20.70" y="1375.5" ></text>
</g>
<g >
<title>free_pgtables (161,772,309 samples, 0.02%)</title><rect x="32.1" y="1365" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="35.10" y="1375.5" ></text>
</g>
<g >
<title>[anon] (3,069,672,516 samples, 0.47%)</title><rect x="92.5" y="1589" width="5.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="95.46" y="1599.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (114,542,860 samples, 0.02%)</title><rect x="1184.7" y="1317" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1187.69" y="1327.5" ></text>
</g>
<g >
<title>[bash] (584,350,883 samples, 0.09%)</title><rect x="831.3" y="1525" width="1.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="834.26" y="1535.5" ></text>
</g>
<g >
<title>rcu_core_si (563,294,691 samples, 0.09%)</title><rect x="1123.5" y="1381" width="1.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1126.46" y="1391.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::sleep (23,737,798,665 samples, 3.66%)</title><rect x="560.1" y="1445" width="43.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="563.09" y="1455.5" >std:..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (72,057,706 samples, 0.01%)</title><rect x="18.5" y="1461" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.49" y="1471.5" ></text>
</g>
<g >
<title>enqueue_entity (59,359,997 samples, 0.01%)</title><rect x="39.0" y="1285" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="41.96" y="1295.5" ></text>
</g>
<g >
<title>[bash] (138,597,472 samples, 0.02%)</title><rect x="832.1" y="1365" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="835.07" y="1375.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (175,188,440 samples, 0.03%)</title><rect x="533.7" y="1253" width="0.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="536.74" y="1263.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,360,972,803 samples, 0.21%)</title><rect x="56.9" y="1461" width="2.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="59.93" y="1471.5" ></text>
</g>
<g >
<title>accept (28,323,455,088 samples, 4.37%)</title><rect x="507.5" y="1445" width="51.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="510.54" y="1455.5" >accept</text>
</g>
<g >
<title>ret_from_fork_asm (713,679,988 samples, 0.11%)</title><rect x="1116.5" y="1589" width="1.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1119.51" y="1599.5" ></text>
</g>
<g >
<title>reweight_entity (244,463,268 samples, 0.04%)</title><rect x="581.1" y="1205" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="584.06" y="1215.5" ></text>
</g>
<g >
<title>alloc_file (4,030,489,088 samples, 0.62%)</title><rect x="523.9" y="1317" width="7.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="526.91" y="1327.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (741,624,873 samples, 0.11%)</title><rect x="533.4" y="1269" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="536.39" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (206,742,819 samples, 0.03%)</title><rect x="29.5" y="53" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="32.48" y="63.5" ></text>
</g>
<g >
<title>worker_thread (202,916,045 samples, 0.03%)</title><rect x="894.1" y="1541" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="897.13" y="1551.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (82,566,769 samples, 0.01%)</title><rect x="36.7" y="1237" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="39.69" y="1247.5" ></text>
</g>
<g >
<title>CompareAndSwap (1,470,013,936 samples, 0.23%)</title><rect x="148.6" y="1557" width="2.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="151.58" y="1567.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (148,471,260 samples, 0.02%)</title><rect x="85.2" y="1429" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="88.18" y="1439.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (127,853,063 samples, 0.02%)</title><rect x="49.8" y="1525" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="52.80" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,704,689 samples, 0.04%)</title><rect x="28.9" y="245" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="31.87" y="255.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (826,629,917 samples, 0.13%)</title><rect x="487.2" y="1365" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="490.18" y="1375.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1,395,856,337 samples, 0.22%)</title><rect x="32.6" y="1317" width="2.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="35.61" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_poll (79,087,405 samples, 0.01%)</title><rect x="889.5" y="1557" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="892.51" y="1567.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (398,864,989 samples, 0.06%)</title><rect x="372.5" y="1541" width="0.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="375.48" y="1551.5" ></text>
</g>
<g >
<title>[ls] (1,063,328,882 samples, 0.16%)</title><rect x="18.8" y="1541" width="1.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.77" y="1551.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (73,853,617 samples, 0.01%)</title><rect x="435.9" y="1429" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="438.88" y="1439.5" ></text>
</g>
<g >
<title>kmem_cache_free (55,808,690 samples, 0.01%)</title><rect x="32.2" y="1333" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="35.25" y="1343.5" ></text>
</g>
<g >
<title>vfs_write (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1429" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="34.57" y="1439.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (82,331,860 samples, 0.01%)</title><rect x="10.5" y="1589" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="13.52" y="1599.5" ></text>
</g>
<g >
<title>setlocale (115,913,942 samples, 0.02%)</title><rect x="12.7" y="1525" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="15.70" y="1535.5" ></text>
</g>
<g >
<title>exit_mmap (251,012,249 samples, 0.04%)</title><rect x="17.7" y="1381" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="20.70" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (73,853,617 samples, 0.01%)</title><rect x="435.9" y="1365" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="438.88" y="1375.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (272,213,166 samples, 0.04%)</title><rect x="1088.2" y="1493" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1091.23" y="1503.5" ></text>
</g>
<g >
<title>update_rq_clock (172,357,825 samples, 0.03%)</title><rect x="593.2" y="1269" width="0.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="596.17" y="1279.5" ></text>
</g>
<g >
<title>aa_sk_perm (143,043,361 samples, 0.02%)</title><rect x="514.3" y="1317" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="517.35" y="1327.5" ></text>
</g>
<g >
<title>enqueue_task_fair (222,812,503 samples, 0.03%)</title><rect x="835.0" y="1301" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="837.96" y="1311.5" ></text>
</g>
<g >
<title>execute_command_internal (249,698,241 samples, 0.04%)</title><rect x="17.2" y="1493" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="20.24" y="1503.5" ></text>
</g>
<g >
<title>command_substitute (138,597,472 samples, 0.02%)</title><rect x="832.1" y="1317" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="835.07" y="1327.5" ></text>
</g>
<g >
<title>call_rcu (410,263,075 samples, 0.06%)</title><rect x="553.2" y="1173" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="556.20" y="1183.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (342,232,995 samples, 0.05%)</title><rect x="914.9" y="1429" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="917.88" y="1439.5" ></text>
</g>
<g >
<title>get_page_from_freelist (65,964,412 samples, 0.01%)</title><rect x="604.1" y="1285" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="607.12" y="1295.5" ></text>
</g>
<g >
<title>init_once (79,076,183 samples, 0.01%)</title><rect x="519.7" y="1189" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="522.73" y="1199.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (297,942,669 samples, 0.05%)</title><rect x="1097.4" y="1317" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1100.38" y="1327.5" ></text>
</g>
<g >
<title>do_idle (15,756,306,248 samples, 2.43%)</title><rect x="833.9" y="1541" width="28.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="836.88" y="1551.5" >do..</text>
</g>
<g >
<title>map_id_range_down (59,576,550 samples, 0.01%)</title><rect x="517.2" y="1269" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="520.24" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (212,460,615 samples, 0.03%)</title><rect x="26.3" y="533" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.32" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (96,078,504 samples, 0.01%)</title><rect x="12.7" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.71" y="1471.5" ></text>
</g>
<g >
<title>irq_exit_rcu (747,927,745 samples, 0.12%)</title><rect x="1123.4" y="1429" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1126.44" y="1439.5" ></text>
</g>
<g >
<title>[git] (80,832,401 samples, 0.01%)</title><rect x="12.4" y="1445" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.41" y="1455.5" ></text>
</g>
<g >
<title>update_load_avg (131,158,007 samples, 0.02%)</title><rect x="1179.8" y="1413" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1182.80" y="1423.5" ></text>
</g>
<g >
<title>_compound_head (510,720,924 samples, 0.08%)</title><rect x="23.5" y="1285" width="0.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="26.46" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1093" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,025,123,316 samples, 0.16%)</title><rect x="26.2" y="1221" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.23" y="1231.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (59,394,926 samples, 0.01%)</title><rect x="1094.6" y="1509" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1097.58" y="1519.5" ></text>
</g>
<g >
<title>psi_group_change (417,138,905 samples, 0.06%)</title><rect x="906.4" y="1285" width="0.8" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="909.41" y="1295.5" ></text>
</g>
<g >
<title>dequeue_task (1,104,842,375 samples, 0.17%)</title><rect x="479.6" y="1285" width="2.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="482.56" y="1295.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (175,862,363 samples, 0.03%)</title><rect x="905.2" y="1253" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="908.23" y="1263.5" ></text>
</g>
<g >
<title>update_curr (82,194,603 samples, 0.01%)</title><rect x="904.7" y="1269" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="907.69" y="1279.5" ></text>
</g>
<g >
<title>try_to_wake_up (3,645,035,734 samples, 0.56%)</title><rect x="901.2" y="1349" width="6.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="904.17" y="1359.5" ></text>
</g>
<g >
<title>__do_sys_newstat (99,097,592 samples, 0.02%)</title><rect x="28.3" y="1461" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="31.30" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (345,587,674 samples, 0.05%)</title><rect x="28.8" y="1557" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.83" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (13,417,574,427 samples, 2.07%)</title><rect x="803.3" y="1589" width="24.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="806.30" y="1599.5" >[..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (73,570,287 samples, 0.01%)</title><rect x="572.0" y="1285" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="574.96" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="389" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="399.5" ></text>
</g>
<g >
<title>rcu_core (78,635,424 samples, 0.01%)</title><rect x="39.3" y="1365" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="42.28" y="1375.5" ></text>
</g>
<g >
<title>v8::platform::DefaultJobWorker::Run (69,871,672 samples, 0.01%)</title><rect x="30.9" y="1541" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="33.88" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (172,469,468 samples, 0.03%)</title><rect x="26.3" y="453" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.35" y="463.5" ></text>
</g>
<g >
<title>try_charge_memcg (74,127,305 samples, 0.01%)</title><rect x="523.1" y="1237" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="526.11" y="1247.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::check_select_read (389,956,741 samples, 0.06%)</title><rect x="559.1" y="1461" width="0.7" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="562.08" y="1471.5" ></text>
</g>
<g >
<title>futex_wait_queue (59,032,027 samples, 0.01%)</title><rect x="31.8" y="1413" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="34.76" y="1423.5" ></text>
</g>
<g >
<title>__fget_light (1,809,346,469 samples, 0.28%)</title><rect x="500.6" y="1349" width="3.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="503.63" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_read (73,853,617 samples, 0.01%)</title><rect x="435.9" y="1349" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="438.88" y="1359.5" ></text>
</g>
<g >
<title>Builtins_LoadIC_Megamorphic (84,704,959 samples, 0.01%)</title><rect x="25.7" y="1573" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="28.68" y="1583.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (74,752,386 samples, 0.01%)</title><rect x="18.5" y="1493" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.48" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock (109,440,191 samples, 0.02%)</title><rect x="546.7" y="1301" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="549.72" y="1311.5" ></text>
</g>
<g >
<title>lapic_next_deadline (165,408,625 samples, 0.03%)</title><rect x="909.2" y="1365" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="912.16" y="1375.5" ></text>
</g>
<g >
<title>__cmd_record (955,786,762 samples, 0.15%)</title><rect x="35.5" y="1573" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.51" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_lock (237,033,128 samples, 0.04%)</title><rect x="504.6" y="1349" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="507.60" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="613" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="623.5" ></text>
</g>
<g >
<title>expand_string_assignment (138,597,472 samples, 0.02%)</title><rect x="832.1" y="1349" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="835.07" y="1359.5" ></text>
</g>
<g >
<title>uv__async_send (56,602,485 samples, 0.01%)</title><rect x="31.6" y="1525" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="34.57" y="1535.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (300,713,122 samples, 0.05%)</title><rect x="583.6" y="1205" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="586.57" y="1215.5" ></text>
</g>
<g >
<title>ret_from_fork (713,679,988 samples, 0.11%)</title><rect x="1116.5" y="1573" width="1.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1119.51" y="1583.5" ></text>
</g>
<g >
<title>__schedule (58,998,069 samples, 0.01%)</title><rect x="865.0" y="1445" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="867.97" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1365" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="1375.5" ></text>
</g>
<g >
<title>kmem_cache_free (201,454,321 samples, 0.03%)</title><rect x="893.1" y="1429" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="896.10" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (624,576,992 samples, 0.10%)</title><rect x="26.3" y="741" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.30" y="751.5" ></text>
</g>
<g >
<title>exit_mmap (1,678,231,499 samples, 0.26%)</title><rect x="32.1" y="1381" width="3.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="35.10" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="261" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="271.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (99,662,945 samples, 0.02%)</title><rect x="865.2" y="1589" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="868.20" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,197,024 samples, 0.04%)</title><rect x="29.5" y="581" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="32.46" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,028,593,357 samples, 0.16%)</title><rect x="26.2" y="1253" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="29.22" y="1263.5" ></text>
</g>
<g >
<title>xa_load (91,236,877 samples, 0.01%)</title><rect x="534.3" y="1237" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="537.30" y="1247.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2,137,898,065 samples, 0.33%)</title><rect x="492.5" y="1397" width="3.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="495.54" y="1407.5" ></text>
</g>
<g >
<title>uv__read (75,222,492 samples, 0.01%)</title><rect x="30.6" y="1541" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="33.62" y="1551.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2,925,966,365 samples, 0.45%)</title><rect x="595.9" y="1349" width="5.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="598.86" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (102,105,671,729 samples, 15.75%)</title><rect x="895.8" y="1525" width="185.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="898.85" y="1535.5" >cpuidle_idle_call</text>
</g>
<g >
<title>psi_group_change (826,494,058 samples, 0.13%)</title><rect x="1091.8" y="1477" width="1.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1094.79" y="1487.5" ></text>
</g>
<g >
<title>enqueue_task_fair (501,333,092 samples, 0.08%)</title><rect x="1121.0" y="1301" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1123.99" y="1311.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (76,735,931 samples, 0.01%)</title><rect x="908.4" y="1381" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="911.39" y="1391.5" ></text>
</g>
<g >
<title>uv_cond_wait (158,000,237 samples, 0.02%)</title><rect x="31.7" y="1541" width="0.3" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="34.68" y="1551.5" ></text>
</g>
<g >
<title>parking_lot_core::word_lock::WordLock::lock_slow (94,948,475 samples, 0.01%)</title><rect x="474.7" y="1429" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="477.67" y="1439.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (17,171,787,414 samples, 2.65%)</title><rect x="833.8" y="1589" width="31.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="836.84" y="1599.5" >se..</text>
</g>
<g >
<title>cache_from_obj (59,054,315 samples, 0.01%)</title><rect x="557.3" y="1269" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="560.26" y="1279.5" ></text>
</g>
<g >
<title>pick_next_task_fair (107,905,605 samples, 0.02%)</title><rect x="861.7" y="1477" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="864.67" y="1487.5" ></text>
</g>
<g >
<title>enqueue_entity (55,662,273 samples, 0.01%)</title><rect x="1111.0" y="1365" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1114.04" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="277" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (333,840,077 samples, 0.05%)</title><rect x="515.9" y="1333" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="518.93" y="1343.5" ></text>
</g>
<g >
<title>update_min_vruntime (156,720,232 samples, 0.02%)</title><rect x="584.5" y="1221" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="587.52" y="1231.5" ></text>
</g>
<g >
<title>__slab_free (131,304,194 samples, 0.02%)</title><rect x="913.1" y="1285" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="916.13" y="1295.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (2,403,130,584 samples, 0.37%)</title><rect x="519.0" y="1285" width="4.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="521.96" y="1295.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1,014,213,854 samples, 0.16%)</title><rect x="511.8" y="1317" width="1.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="514.84" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="725" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="735.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (55,396,862 samples, 0.01%)</title><rect x="604.3" y="1285" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="607.30" y="1295.5" ></text>
</g>
<g >
<title>timerqueue_add (190,367,837 samples, 0.03%)</title><rect x="570.3" y="1253" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="573.30" y="1263.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1365" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="38.20" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (212,460,615 samples, 0.03%)</title><rect x="26.3" y="517" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.32" y="527.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (98,748,083 samples, 0.02%)</title><rect x="811.8" y="1573" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="814.84" y="1583.5" ></text>
</g>
<g >
<title>rcu_core (563,294,691 samples, 0.09%)</title><rect x="1123.5" y="1365" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1126.46" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="1317" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_lock (264,818,649 samples, 0.04%)</title><rect x="466.7" y="1349" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="469.72" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,704,689 samples, 0.04%)</title><rect x="28.9" y="997" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.87" y="1007.5" ></text>
</g>
<g >
<title>cpuacct_charge (87,024,414 samples, 0.01%)</title><rect x="471.4" y="1269" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="474.41" y="1279.5" ></text>
</g>
<g >
<title>intel_idle (1,102,963,152 samples, 0.17%)</title><rect x="837.0" y="1461" width="2.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="839.96" y="1471.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::OrdinaryDefineOwnProperty (59,890,143 samples, 0.01%)</title><rect x="22.1" y="1493" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="25.13" y="1503.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,200,529,938 samples, 0.19%)</title><rect x="834.7" y="1445" width="2.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="837.67" y="1455.5" ></text>
</g>
<g >
<title>ret_from_fork (404,862,201 samples, 0.06%)</title><rect x="55.2" y="1573" width="0.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="58.19" y="1583.5" ></text>
</g>
<g >
<title>execute_command (276,151,904 samples, 0.04%)</title><rect x="831.5" y="1365" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="834.55" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (408,772,456 samples, 0.06%)</title><rect x="11.0" y="1445" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.04" y="1455.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (1,721,878,696 samples, 0.27%)</title><rect x="22.5" y="1573" width="3.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="25.47" y="1583.5" ></text>
</g>
<g >
<title>free_swap_cache (91,089,859 samples, 0.01%)</title><rect x="35.0" y="1253" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="37.98" y="1263.5" ></text>
</g>
<g >
<title>tcp_seq_next (83,432,748 samples, 0.01%)</title><rect x="31.1" y="1365" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="34.13" y="1375.5" ></text>
</g>
<g >
<title>[perf-754209.map] (2,203,016,667 samples, 0.34%)</title><rect x="22.0" y="1589" width="4.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="24.97" y="1599.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (525,338,696 samples, 0.08%)</title><rect x="1076.4" y="1429" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1079.36" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (16,507,089,802 samples, 2.55%)</title><rect x="56.2" y="1525" width="30.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="59.19" y="1535.5" >cp..</text>
</g>
<g >
<title>copyin (76,072,166 samples, 0.01%)</title><rect x="36.1" y="1237" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="39.07" y="1247.5" ></text>
</g>
<g >
<title>exec_binprm (1,689,638,799 samples, 0.26%)</title><rect x="32.1" y="1493" width="3.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="35.08" y="1503.5" ></text>
</g>
<g >
<title>__do_softirq (124,477,740 samples, 0.02%)</title><rect x="38.1" y="1509" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="41.15" y="1519.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (163,566,289 samples, 0.03%)</title><rect x="495.9" y="1301" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="498.93" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (15,864,118,814 samples, 2.45%)</title><rect x="56.6" y="1477" width="28.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="59.59" y="1487.5" >cp..</text>
</g>
<g >
<title>do_syscall_64 (168,819,430 samples, 0.03%)</title><rect x="35.2" y="1493" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="38.20" y="1503.5" ></text>
</g>
<g >
<title>[bash] (154,391,175 samples, 0.02%)</title><rect x="831.8" y="1269" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="834.77" y="1279.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (5,334,254,947 samples, 0.82%)</title><rect x="900.5" y="1413" width="9.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="903.48" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (647,633,678 samples, 0.10%)</title><rect x="296.6" y="1525" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="299.57" y="1535.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (59,091,005 samples, 0.01%)</title><rect x="85.3" y="1397" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="88.30" y="1407.5" ></text>
</g>
<g >
<title>[git] (80,832,401 samples, 0.01%)</title><rect x="12.4" y="1589" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.41" y="1599.5" ></text>
</g>
<g >
<title>__schedule (109,263,635 samples, 0.02%)</title><rect x="1189.2" y="1445" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1192.16" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (236,197,024 samples, 0.04%)</title><rect x="29.5" y="1557" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="32.46" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (76,201,103 samples, 0.01%)</title><rect x="20.9" y="1573" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="23.91" y="1583.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,141,341,231 samples, 0.33%)</title><rect x="910.9" y="1429" width="3.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="913.89" y="1439.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (1,689,169,231 samples, 0.26%)</title><rect x="22.5" y="1509" width="3.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="25.47" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (624,576,992 samples, 0.10%)</title><rect x="26.3" y="709" width="1.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.30" y="719.5" ></text>
</g>
<g >
<title>fput (122,641,515 samples, 0.02%)</title><rect x="542.9" y="1381" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="545.92" y="1391.5" ></text>
</g>
<g >
<title>native_sched_clock (167,975,557 samples, 0.03%)</title><rect x="472.8" y="1253" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="475.76" y="1263.5" ></text>
</g>
<g >
<title>native_sched_clock (172,553,385 samples, 0.03%)</title><rect x="592.6" y="1205" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="595.65" y="1215.5" ></text>
</g>
</g>
</svg>
