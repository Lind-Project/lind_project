<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1670.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1653" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1653" > </text>
<g id="frames">
<g >
<title>NaClStackSafetyNowOnUntrustedStack (636,820,566 samples, 0.08%)</title><rect x="491.9" y="1573" width="1.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="494.93" y="1583.5" ></text>
</g>
<g >
<title>__fput (7,632,639,890 samples, 0.94%)</title><rect x="930.6" y="1317" width="11.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="933.59" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_accept (23,847,564,808 samples, 2.93%)</title><rect x="893.0" y="1397" width="34.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="895.98" y="1407.5" >__..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (28,379,416,405 samples, 3.49%)</title><rect x="1067.7" y="1589" width="41.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1070.71" y="1599.5" >sec..</text>
</g>
<g >
<title>ksys_write (1,369,272,947 samples, 0.17%)</title><rect x="28.6" y="1397" width="2.0" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="31.62" y="1407.5" ></text>
</g>
<g >
<title>i_callback (104,144,930 samples, 0.01%)</title><rect x="1067.3" y="1445" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1070.27" y="1455.5" ></text>
</g>
<g >
<title>__do_softirq (139,360,047 samples, 0.02%)</title><rect x="1176.1" y="1509" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1179.12" y="1519.5" ></text>
</g>
<g >
<title>syscall (76,431,250 samples, 0.01%)</title><rect x="890.4" y="1429" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="893.42" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (285,265,764 samples, 0.04%)</title><rect x="1175.7" y="1573" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1178.70" y="1583.5" ></text>
</g>
<g >
<title>execute_command_internal (184,497,365 samples, 0.02%)</title><rect x="1061.7" y="1413" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1064.72" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (7,621,510,120 samples, 0.94%)</title><rect x="1176.8" y="1525" width="11.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1179.75" y="1535.5" ></text>
</g>
<g >
<title>evict (3,005,620,871 samples, 0.37%)</title><rect x="935.2" y="1237" width="4.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="938.20" y="1247.5" ></text>
</g>
<g >
<title>execute_command (368,131,386 samples, 0.05%)</title><rect x="1061.2" y="1365" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1064.16" y="1375.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (126,542,903 samples, 0.02%)</title><rect x="1165.1" y="1413" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1168.08" y="1423.5" ></text>
</g>
<g >
<title>lockref_put_return (107,200,987 samples, 0.01%)</title><rect x="940.0" y="1301" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="942.99" y="1311.5" ></text>
</g>
<g >
<title>pick_next_task_idle (157,665,653 samples, 0.02%)</title><rect x="972.4" y="1253" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="975.45" y="1263.5" ></text>
</g>
<g >
<title>do_futex (6,438,690,355 samples, 0.79%)</title><rect x="861.2" y="1365" width="9.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="864.22" y="1375.5" ></text>
</g>
<g >
<title>[expr] (523,741,906 samples, 0.06%)</title><rect x="10.7" y="1541" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.69" y="1551.5" ></text>
</g>
<g >
<title>free_swap_cache (81,073,310 samples, 0.01%)</title><rect x="28.2" y="1253" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="31.21" y="1263.5" ></text>
</g>
<g >
<title>tcp_sendmsg (210,400,398 samples, 0.03%)</title><rect x="987.8" y="1381" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="990.84" y="1391.5" ></text>
</g>
<g >
<title>__alloc_pages (83,025,263 samples, 0.01%)</title><rect x="987.9" y="1301" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="990.89" y="1311.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (395,258,759 samples, 0.05%)</title><rect x="1177.8" y="1413" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1180.83" y="1423.5" ></text>
</g>
<g >
<title>psi_task_change (81,504,661 samples, 0.01%)</title><rect x="307.2" y="1237" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="310.25" y="1247.5" ></text>
</g>
<g >
<title>scheduler_tick (148,117,240 samples, 0.02%)</title><rect x="483.5" y="1429" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="486.49" y="1439.5" ></text>
</g>
<g >
<title>cache_from_obj (72,993,033 samples, 0.01%)</title><rect x="933.3" y="1237" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="936.30" y="1247.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (71,768,490 samples, 0.01%)</title><rect x="13.1" y="1493" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="16.07" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (126,982,019 samples, 0.02%)</title><rect x="13.8" y="1461" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="16.79" y="1471.5" ></text>
</g>
<g >
<title>record__pushfn (1,384,254,175 samples, 0.17%)</title><rect x="28.6" y="1509" width="2.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="31.61" y="1519.5" ></text>
</g>
<g >
<title>expand_string_assignment (184,497,365 samples, 0.02%)</title><rect x="1061.7" y="1349" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1064.72" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (450,220,744 samples, 0.06%)</title><rect x="1063.5" y="1477" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1066.46" y="1487.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1317" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1061.80" y="1327.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,322,810,921 samples, 0.16%)</title><rect x="1068.7" y="1429" width="1.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1071.72" y="1439.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (484,982,634 samples, 0.06%)</title><rect x="889.4" y="1381" width="0.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="892.42" y="1391.5" ></text>
</g>
<g >
<title>dentry_free (965,187,311 samples, 0.12%)</title><rect x="932.7" y="1269" width="1.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="935.68" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (92,301,605 samples, 0.01%)</title><rect x="818.3" y="1365" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="821.29" y="1375.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (459,754,848 samples, 0.06%)</title><rect x="873.3" y="1429" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="876.34" y="1439.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (111,725,774 samples, 0.01%)</title><rect x="1062.9" y="1509" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1065.88" y="1519.5" ></text>
</g>
<g >
<title>update_rq_clock (417,189,067 samples, 0.05%)</title><rect x="976.4" y="1269" width="0.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="979.36" y="1279.5" ></text>
</g>
<g >
<title>[bash] (235,703,792 samples, 0.03%)</title><rect x="1061.3" y="1301" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1064.34" y="1311.5" ></text>
</g>
<g >
<title>reweight_entity (276,833,195 samples, 0.03%)</title><rect x="964.2" y="1205" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="967.18" y="1215.5" ></text>
</g>
<g >
<title>__update_blocked_fair (77,314,538 samples, 0.01%)</title><rect x="83.9" y="1349" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="86.86" y="1359.5" ></text>
</g>
<g >
<title>NaClXlateSysRet (245,511,186 samples, 0.03%)</title><rect x="817.8" y="1525" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="820.81" y="1535.5" ></text>
</g>
<g >
<title>runc (102,321,967 samples, 0.01%)</title><rect x="325.5" y="1605" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.55" y="1615.5" ></text>
</g>
<g >
<title>process_one_work (149,319,317 samples, 0.02%)</title><rect x="58.6" y="1525" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="61.59" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_lock (142,992,086 samples, 0.02%)</title><rect x="930.9" y="1301" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="933.93" y="1311.5" ></text>
</g>
<g >
<title>kmem_cache_free (137,828,803 samples, 0.02%)</title><rect x="1118.7" y="1413" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1121.75" y="1423.5" ></text>
</g>
<g >
<title>do_idle (169,822,982,758 samples, 20.88%)</title><rect x="59.1" y="1541" width="246.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="62.12" y="1551.5" >do_idle</text>
</g>
<g >
<title>sched_clock_noinstr (304,641,539 samples, 0.04%)</title><rect x="104.9" y="1445" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="107.93" y="1455.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (80,393,871 samples, 0.01%)</title><rect x="1106.2" y="1317" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1109.18" y="1327.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (298,525,602 samples, 0.04%)</title><rect x="27.9" y="1285" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="30.89" y="1295.5" ></text>
</g>
<g >
<title>psi_task_change (125,709,970 samples, 0.02%)</title><rect x="1069.9" y="1301" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1072.92" y="1311.5" ></text>
</g>
<g >
<title>sched_clock_cpu (115,311,275 samples, 0.01%)</title><rect x="74.3" y="1285" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="77.26" y="1295.5" ></text>
</g>
<g >
<title>_raw_spin_lock (74,765,877 samples, 0.01%)</title><rect x="869.6" y="1317" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="872.62" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1285" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1061" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1071.5" ></text>
</g>
<g >
<title>rcu_do_batch (625,769,402 samples, 0.08%)</title><rect x="1118.3" y="1461" width="0.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1121.27" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="997" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1007.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (385,929,182 samples, 0.05%)</title><rect x="1103.6" y="1493" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1106.60" y="1503.5" ></text>
</g>
<g >
<title>kernel_clone (1,801,324,313 samples, 0.22%)</title><rect x="17.3" y="1397" width="2.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="20.34" y="1407.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,853,923,499 samples, 0.35%)</title><rect x="1170.3" y="1493" width="4.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1173.26" y="1503.5" ></text>
</g>
<g >
<title>enqueue_task (247,622,710 samples, 0.03%)</title><rect x="307.0" y="1253" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="310.01" y="1263.5" ></text>
</g>
<g >
<title>ksys_read (272,549,342 samples, 0.03%)</title><rect x="52.5" y="1541" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="55.48" y="1551.5" ></text>
</g>
<g >
<title>__rcu_read_lock (89,093,142 samples, 0.01%)</title><rect x="912.8" y="1269" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="915.80" y="1279.5" ></text>
</g>
<g >
<title>execute_command_internal (110,376,069 samples, 0.01%)</title><rect x="1061.5" y="1189" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1064.50" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="341" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="351.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (530,742,472 samples, 0.07%)</title><rect x="282.6" y="1397" width="0.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="285.65" y="1407.5" ></text>
</g>
<g >
<title>std::thread::sleep (157,531,732 samples, 0.02%)</title><rect x="1058.5" y="1573" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1061.46" y="1583.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (343,817,704 samples, 0.04%)</title><rect x="282.0" y="1381" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="284.98" y="1391.5" ></text>
</g>
<g >
<title>kthread (401,495,751 samples, 0.05%)</title><rect x="1176.1" y="1557" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1179.11" y="1567.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (351,676,150 samples, 0.04%)</title><rect x="936.2" y="1173" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="939.25" y="1183.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (350,499,481 samples, 0.04%)</title><rect x="947.8" y="1397" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="950.77" y="1407.5" ></text>
</g>
<g >
<title>NaClMaskRestore (531,109,989 samples, 0.07%)</title><rect x="1046.5" y="1573" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1049.50" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="581" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="591.5" ></text>
</g>
<g >
<title>pick_next_task_fair (70,274,987 samples, 0.01%)</title><rect x="1188.1" y="1477" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1191.13" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1093" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1103.5" ></text>
</g>
<g >
<title>__update_load_avg_se (374,745,820 samples, 0.05%)</title><rect x="966.9" y="1205" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="969.95" y="1215.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (119,516,102 samples, 0.01%)</title><rect x="75.3" y="1301" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="78.31" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="533" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (453,316,678 samples, 0.06%)</title><rect x="304.8" y="1525" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="307.76" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (96,054,955 samples, 0.01%)</title><rect x="875.8" y="1429" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="878.85" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (496,624,153 samples, 0.06%)</title><rect x="21.3" y="1365" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.29" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (77,825,095 samples, 0.01%)</title><rect x="21.3" y="405" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="415.5" ></text>
</g>
<g >
<title>exec_binprm (111,725,774 samples, 0.01%)</title><rect x="1062.9" y="1493" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1065.88" y="1503.5" ></text>
</g>
<g >
<title>HandleStackContext (29,324,222,087 samples, 3.61%)</title><rect x="524.9" y="1557" width="42.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="527.86" y="1567.5" >Hand..</text>
</g>
<g >
<title>parse_and_execute (69,016,699 samples, 0.01%)</title><rect x="1061.8" y="1301" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1064.85" y="1311.5" ></text>
</g>
<g >
<title>security_inode_alloc (905,962,802 samples, 0.11%)</title><rect x="901.4" y="1285" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="904.41" y="1295.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (73,681,795 samples, 0.01%)</title><rect x="1174.1" y="1461" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1177.06" y="1471.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (37,896,440,406 samples, 4.66%)</title><rect x="1119.4" y="1589" width="55.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1122.42" y="1599.5" >secon..</text>
</g>
<g >
<title>alloc_pages (134,927,526 samples, 0.02%)</title><rect x="903.5" y="1221" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="906.54" y="1231.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (103,852,949 samples, 0.01%)</title><rect x="1063.3" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1066.26" y="1535.5" ></text>
</g>
<g >
<title>security_socket_accept (280,406,976 samples, 0.03%)</title><rect x="897.9" y="1349" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="900.90" y="1359.5" ></text>
</g>
<g >
<title>sched_clock_cpu (197,390,912 samples, 0.02%)</title><rect x="302.4" y="1477" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="305.43" y="1487.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (83,357,600 samples, 0.01%)</title><rect x="912.9" y="1269" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="915.93" y="1279.5" ></text>
</g>
<g >
<title>psi_group_change (150,991,905 samples, 0.02%)</title><rect x="1122.6" y="1285" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1125.62" y="1295.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,069,992,055 samples, 0.13%)</title><rect x="281.9" y="1445" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="284.94" y="1455.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (148,117,240 samples, 0.02%)</title><rect x="483.5" y="1557" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="486.49" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1141" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (181,802,842 samples, 0.02%)</title><rect x="21.3" y="661" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="671.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (10,189,975,105 samples, 1.25%)</title><rect x="927.7" y="1397" width="14.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="930.70" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (466,414,211 samples, 0.06%)</title><rect x="10.7" y="1445" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="1455.5" ></text>
</g>
<g >
<title>enqueue_task (823,675,126 samples, 0.10%)</title><rect x="1121.7" y="1317" width="1.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1124.73" y="1327.5" ></text>
</g>
<g >
<title>native_sched_clock (69,797,747 samples, 0.01%)</title><rect x="292.2" y="1381" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="295.22" y="1391.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (189,743,149 samples, 0.02%)</title><rect x="898.0" y="1333" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="901.03" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="389" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="399.5" ></text>
</g>
<g >
<title>[[vdso]] (514,612,929 samples, 0.06%)</title><rect x="736.9" y="1493" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="739.95" y="1503.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (667,546,415 samples, 0.08%)</title><rect x="21.2" y="1557" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="24.19" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (288,668,140 samples, 0.04%)</title><rect x="1189.6" y="1573" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.57" y="1583.5" ></text>
</g>
<g >
<title>NaClLog (591,009,029 samples, 0.07%)</title><rect x="328.5" y="1573" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="331.48" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (130,873,009 samples, 0.02%)</title><rect x="944.5" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="947.46" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="389" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="399.5" ></text>
</g>
<g >
<title>__fdget (336,220,692 samples, 0.04%)</title><rect x="893.2" y="1365" width="0.5" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="896.21" y="1375.5" ></text>
</g>
<g >
<title>schedule_idle (6,849,911,126 samples, 0.84%)</title><rect x="294.0" y="1525" width="9.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="297.00" y="1535.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (185,475,059 samples, 0.02%)</title><rect x="856.3" y="1317" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="859.26" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (77,065,804 samples, 0.01%)</title><rect x="23.3" y="1525" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="26.31" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (410,491,624 samples, 0.05%)</title><rect x="21.3" y="1093" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.30" y="1103.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,250,199,249 samples, 0.15%)</title><rect x="1060.9" y="1557" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1063.95" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="357" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="367.5" ></text>
</g>
<g >
<title>exit_mmap (1,703,531,240 samples, 0.21%)</title><rect x="25.9" y="1381" width="2.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="28.92" y="1391.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::ReadStart (129,631,324 samples, 0.02%)</title><rect x="23.8" y="1525" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="26.84" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1,324,421,647 samples, 0.16%)</title><rect x="895.5" y="1317" width="1.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="898.48" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (311,656,541 samples, 0.04%)</title><rect x="21.3" y="901" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.30" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1493" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="229" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="239.5" ></text>
</g>
<g >
<title>[bash] (184,497,365 samples, 0.02%)</title><rect x="1061.7" y="1397" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1064.72" y="1407.5" ></text>
</g>
<g >
<title>__slab_free (262,376,519 samples, 0.03%)</title><rect x="56.5" y="1397" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="59.47" y="1407.5" ></text>
</g>
<g >
<title>shell_glob_filename (96,339,823 samples, 0.01%)</title><rect x="1061.0" y="1413" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1064.00" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (97,391,227 samples, 0.01%)</title><rect x="15.4" y="1573" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="18.36" y="1583.5" ></text>
</g>
<g >
<title>futex_wait (261,556,280 samples, 0.03%)</title><rect x="25.4" y="1429" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="28.40" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock (361,447,004 samples, 0.04%)</title><rect x="899.7" y="1333" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="902.72" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="303.5" ></text>
</g>
<g >
<title>pte_alloc_one (82,834,385 samples, 0.01%)</title><rect x="18.0" y="1269" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="20.98" y="1279.5" ></text>
</g>
<g >
<title>sock_free_inode (104,144,930 samples, 0.01%)</title><rect x="1067.3" y="1429" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1070.27" y="1439.5" ></text>
</g>
<g >
<title>start_kernel (1,933,288,874 samples, 0.24%)</title><rect x="1106.1" y="1541" width="2.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1109.08" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (91,667,424 samples, 0.01%)</title><rect x="14.0" y="1461" width="0.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="16.99" y="1471.5" ></text>
</g>
<g >
<title>__sys_recvfrom (75,596,962 samples, 0.01%)</title><rect x="943.6" y="1365" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="946.58" y="1375.5" ></text>
</g>
<g >
<title>NaClIsValidClockId (514,031,065 samples, 0.06%)</title><rect x="736.2" y="1509" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="739.20" y="1519.5" ></text>
</g>
<g >
<title>rcu_core (139,360,047 samples, 0.02%)</title><rect x="1176.1" y="1477" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1179.12" y="1487.5" ></text>
</g>
<g >
<title>do_exit (94,456,945 samples, 0.01%)</title><rect x="12.3" y="1525" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="15.30" y="1535.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (596,627,108 samples, 0.07%)</title><rect x="1066.8" y="1589" width="0.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1069.84" y="1599.5" ></text>
</g>
<g >
<title>__switch_to (72,723,741 samples, 0.01%)</title><rect x="1104.5" y="1493" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1107.54" y="1503.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::nonblock_accept (92,716,460 samples, 0.01%)</title><rect x="1058.2" y="1573" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1061.25" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (158,307,465 samples, 0.02%)</title><rect x="860.2" y="1413" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="863.22" y="1423.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (382,404,167 samples, 0.05%)</title><rect x="938.0" y="1173" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="941.04" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (16,063,508,282 samples, 1.98%)</title><rect x="1035.5" y="1589" width="23.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1038.49" y="1599.5" >[..</text>
</g>
<g >
<title>entry_SYSCALL_64 (130,873,009 samples, 0.02%)</title><rect x="944.5" y="1397" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="947.46" y="1407.5" ></text>
</g>
<g >
<title>ksys_read (160,553,375 samples, 0.02%)</title><rect x="1189.7" y="1413" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.67" y="1423.5" ></text>
</g>
<g >
<title>schedule_idle (97,600,419 samples, 0.01%)</title><rect x="1108.7" y="1461" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1111.74" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (75,605,098 samples, 0.01%)</title><rect x="28.5" y="1525" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="31.46" y="1535.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (988,445,674 samples, 0.12%)</title><rect x="1068.8" y="1397" width="1.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1071.79" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_lock (365,767,706 samples, 0.04%)</title><rect x="934.6" y="1237" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="937.61" y="1247.5" ></text>
</g>
<g >
<title>uv__io_poll (518,055,979 samples, 0.06%)</title><rect x="23.3" y="1573" width="0.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="26.28" y="1583.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (628,530,357 samples, 0.08%)</title><rect x="306.8" y="1365" width="0.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="309.79" y="1375.5" ></text>
</g>
<g >
<title>[[vdso]] (26,141,931,469 samples, 3.21%)</title><rect x="775.9" y="1509" width="38.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="778.93" y="1519.5" >[[v..</text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (272,077,322 samples, 0.03%)</title><rect x="491.5" y="1573" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="494.54" y="1583.5" ></text>
</g>
<g >
<title>inode_free_by_rcu (77,170,812 samples, 0.01%)</title><rect x="1118.9" y="1445" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1121.95" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="901" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (181,802,842 samples, 0.02%)</title><rect x="21.3" y="677" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="687.5" ></text>
</g>
<g >
<title>ovl_open (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1237" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="15.43" y="1247.5" ></text>
</g>
<g >
<title>glob_vector (84,452,029 samples, 0.01%)</title><rect x="1061.0" y="1381" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1064.01" y="1391.5" ></text>
</g>
<g >
<title>__do_softirq (519,546,448 samples, 0.06%)</title><rect x="282.7" y="1381" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="285.66" y="1391.5" ></text>
</g>
<g >
<title>set_next_entity (74,251,233 samples, 0.01%)</title><rect x="324.9" y="1397" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="327.86" y="1407.5" ></text>
</g>
<g >
<title>memcpy@plt (317,774,854 samples, 0.04%)</title><rect x="735.7" y="1493" width="0.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="738.74" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1301" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="1311.5" ></text>
</g>
<g >
<title>prepare_task_switch (220,356,723 samples, 0.03%)</title><rect x="300.0" y="1493" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="302.95" y="1503.5" ></text>
</g>
<g >
<title>exit_mm (94,456,945 samples, 0.01%)</title><rect x="12.3" y="1509" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="15.30" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (466,414,211 samples, 0.06%)</title><rect x="10.7" y="1461" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="1471.5" ></text>
</g>
<g >
<title>rcu_core_si (478,546,646 samples, 0.06%)</title><rect x="1123.9" y="1381" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1126.93" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="789" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1253" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1263.5" ></text>
</g>
<g >
<title>load_elf_binary (111,725,774 samples, 0.01%)</title><rect x="1062.9" y="1461" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1065.88" y="1471.5" ></text>
</g>
<g >
<title>dequeue_task (1,335,759,724 samples, 0.16%)</title><rect x="863.9" y="1285" width="1.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="866.85" y="1295.5" ></text>
</g>
<g >
<title>[[vdso]] (222,699,764 samples, 0.03%)</title><rect x="1055.4" y="1573" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1058.45" y="1583.5" ></text>
</g>
<g >
<title>sel_ldr (506,320,575,505 samples, 62.26%)</title><rect x="325.8" y="1605" width="734.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="328.76" y="1615.5" >sel_ldr</text>
</g>
<g >
<title>irqentry_exit (73,713,224 samples, 0.01%)</title><rect x="84.2" y="1429" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="87.24" y="1439.5" ></text>
</g>
<g >
<title>kthread (596,627,108 samples, 0.07%)</title><rect x="1066.8" y="1557" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1069.84" y="1567.5" ></text>
</g>
<g >
<title>rcu_core_si (77,819,601 samples, 0.01%)</title><rect x="1165.3" y="1365" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1168.28" y="1375.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (4,074,287,090 samples, 0.50%)</title><rect x="921.1" y="1365" width="5.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="924.06" y="1375.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,783,635,264 samples, 0.22%)</title><rect x="1106.1" y="1461" width="2.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1109.11" y="1471.5" ></text>
</g>
<g >
<title>__switch_to_asm (151,409,621 samples, 0.02%)</title><rect x="1117.8" y="1589" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1120.79" y="1599.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (401,495,751 samples, 0.05%)</title><rect x="1176.1" y="1589" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1179.11" y="1599.5" ></text>
</g>
<g >
<title>tick_sched_timer (91,900,421 samples, 0.01%)</title><rect x="1123.0" y="1381" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1126.01" y="1391.5" ></text>
</g>
<g >
<title>update_curr (1,034,345,577 samples, 0.13%)</title><rect x="854.2" y="1285" width="1.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="857.24" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_read (92,301,605 samples, 0.01%)</title><rect x="818.3" y="1349" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="821.29" y="1359.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3,849,300,565 samples, 0.47%)</title><rect x="78.6" y="1429" width="5.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="81.58" y="1439.5" ></text>
</g>
<g >
<title>alloc_fd (401,365,587 samples, 0.05%)</title><rect x="926.4" y="1349" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="929.36" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="725" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_execve (111,725,774 samples, 0.01%)</title><rect x="1062.9" y="1557" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1065.88" y="1567.5" ></text>
</g>
<g >
<title>ttwu_do_activate (172,706,610 samples, 0.02%)</title><rect x="1177.4" y="1333" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1180.35" y="1343.5" ></text>
</g>
<g >
<title>copy_pte_range (1,206,823,424 samples, 0.15%)</title><rect x="17.9" y="1301" width="1.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="20.89" y="1311.5" ></text>
</g>
<g >
<title>[sleep] (530,766,551 samples, 0.07%)</title><rect x="1063.4" y="1589" width="0.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1066.44" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="453" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="463.5" ></text>
</g>
<g >
<title>cpuidle_select (164,762,609 samples, 0.02%)</title><rect x="1187.6" y="1509" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1190.57" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,527,417,128 samples, 0.68%)</title><rect x="850.6" y="1397" width="8.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="853.59" y="1407.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (76,013,172 samples, 0.01%)</title><rect x="56.7" y="1381" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="59.74" y="1391.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,916,889,247 samples, 0.24%)</title><rect x="1121.0" y="1429" width="2.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1123.97" y="1439.5" ></text>
</g>
<g >
<title>worker_thread (74,670,713 samples, 0.01%)</title><rect x="1067.6" y="1541" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1070.60" y="1551.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,300,899,281 samples, 0.16%)</title><rect x="878.2" y="1333" width="1.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="881.18" y="1343.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDayDecoder (54,363,120,885 samples, 6.68%)</title><rect x="739.3" y="1557" width="78.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="742.29" y="1567.5" >NaClSysGe..</text>
</g>
<g >
<title>rcu_segcblist_enqueue (359,968,720 samples, 0.04%)</title><rect x="931.8" y="1269" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="934.79" y="1279.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (565,087,371 samples, 0.07%)</title><rect x="303.9" y="1525" width="0.9" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="306.94" y="1535.5" ></text>
</g>
<g >
<title>pick_next_task (231,041,980 samples, 0.03%)</title><rect x="1104.8" y="1493" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1107.83" y="1503.5" ></text>
</g>
<g >
<title>charge_memcg (113,923,305 samples, 0.01%)</title><rect x="29.1" y="1173" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="32.09" y="1183.5" ></text>
</g>
<g >
<title>NaClSysPread (130,261,277 samples, 0.02%)</title><rect x="818.2" y="1541" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="821.25" y="1551.5" ></text>
</g>
<g >
<title>sock_alloc_inode (2,991,092,622 samples, 0.37%)</title><rect x="902.8" y="1301" width="4.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="905.85" y="1311.5" ></text>
</g>
<g >
<title>lock_sock_nested (107,654,661 samples, 0.01%)</title><rect x="897.5" y="1317" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="900.47" y="1327.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (202,634,978 samples, 0.02%)</title><rect x="755.8" y="1541" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="758.83" y="1551.5" ></text>
</g>
<g >
<title>__calc_delta (84,014,183 samples, 0.01%)</title><rect x="963.1" y="1221" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="966.09" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="565" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_statx (126,982,019 samples, 0.02%)</title><rect x="13.8" y="1445" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="16.79" y="1455.5" ></text>
</g>
<g >
<title>wake_up_process (891,799,034 samples, 0.11%)</title><rect x="1068.9" y="1365" width="1.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1071.86" y="1375.5" ></text>
</g>
<g >
<title>__calc_delta (92,904,655 samples, 0.01%)</title><rect x="853.8" y="1285" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="856.82" y="1295.5" ></text>
</g>
<g >
<title>put_prev_task_balance (257,768,180 samples, 0.03%)</title><rect x="1176.3" y="1477" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1179.32" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="261" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="271.5" ></text>
</g>
<g >
<title>rest_init (719,854,347 samples, 0.09%)</title><rect x="1188.5" y="1509" width="1.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1191.50" y="1519.5" ></text>
</g>
<g >
<title>cpuacct_charge (136,012,729 samples, 0.02%)</title><rect x="965.4" y="1205" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="968.41" y="1215.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (103,627,768 samples, 0.01%)</title><rect x="1105.8" y="1525" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1108.78" y="1535.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (97,008,049 samples, 0.01%)</title><rect x="29.5" y="1205" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="32.54" y="1215.5" ></text>
</g>
<g >
<title>_copy_from_user (431,693,327 samples, 0.05%)</title><rect x="977.8" y="1333" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="980.83" y="1343.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;v8::BackingStore*, std::default_delete&lt;v8::BackingStore&gt;, std::allocator&lt;void&gt;,  (250,949,014 samples, 0.03%)</title><rect x="24.1" y="1493" width="0.3" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="27.08" y="1503.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (87,786,429 samples, 0.01%)</title><rect x="1105.6" y="1493" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1108.62" y="1503.5" ></text>
</g>
<g >
<title>rcu_core (637,794,352 samples, 0.08%)</title><rect x="1118.2" y="1477" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1121.25" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (12,462,641,189 samples, 1.53%)</title><rect x="306.2" y="1461" width="18.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="309.18" y="1471.5" ></text>
</g>
<g >
<title>enqueue_entity (337,018,460 samples, 0.04%)</title><rect x="1069.4" y="1285" width="0.5" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1072.37" y="1295.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (407,964,253 samples, 0.05%)</title><rect x="306.9" y="1317" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="309.86" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (78,537,221 samples, 0.01%)</title><rect x="1062.5" y="1381" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.52" y="1391.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2,435,028,574 samples, 0.30%)</title><rect x="288.9" y="1477" width="3.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="291.94" y="1487.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,768,157,630 samples, 0.34%)</title><rect x="1121.0" y="1445" width="4.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1123.95" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (228,963,342 samples, 0.03%)</title><rect x="21.3" y="741" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="751.5" ></text>
</g>
<g >
<title>__calc_delta (232,265,530 samples, 0.03%)</title><rect x="855.0" y="1269" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="857.98" y="1279.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (318,806,399 samples, 0.04%)</title><rect x="30.0" y="1173" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="33.00" y="1183.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (493,734,259 samples, 0.06%)</title><rect x="1054.4" y="1573" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1057.38" y="1583.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (428,959,397 samples, 0.05%)</title><rect x="865.8" y="1285" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="868.81" y="1295.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (1,063,431,972 samples, 0.13%)</title><rect x="928.6" y="1349" width="1.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="931.61" y="1359.5" ></text>
</g>
<g >
<title>find_busiest_group (252,658,008 samples, 0.03%)</title><rect x="1176.3" y="1413" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1179.32" y="1423.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (553,267,102 samples, 0.07%)</title><rect x="916.6" y="1269" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="919.60" y="1279.5" ></text>
</g>
<g >
<title>allocate_slab (281,408,252 samples, 0.03%)</title><rect x="903.5" y="1237" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="906.54" y="1247.5" ></text>
</g>
<g >
<title>begin_new_exec (1,703,531,240 samples, 0.21%)</title><rect x="25.9" y="1445" width="2.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="28.92" y="1455.5" ></text>
</g>
<g >
<title>mblen (73,343,683 samples, 0.01%)</title><rect x="1062.0" y="1509" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1065.02" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="869" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="879.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (114,225,628 samples, 0.01%)</title><rect x="60.1" y="1525" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="63.08" y="1535.5" ></text>
</g>
<g >
<title>try_to_wake_up (123,373,256 samples, 0.02%)</title><rect x="1170.4" y="1285" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1173.44" y="1295.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (8,360,238,641 samples, 1.03%)</title><rect x="65.8" y="1429" width="12.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="68.83" y="1439.5" ></text>
</g>
<g >
<title>read_tsc (175,738,778 samples, 0.02%)</title><rect x="77.7" y="1365" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="80.66" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (122,855,306 samples, 0.02%)</title><rect x="1063.3" y="1589" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1066.26" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (160,553,375 samples, 0.02%)</title><rect x="1189.7" y="1461" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.67" y="1471.5" ></text>
</g>
<g >
<title>set_next_entity (921,237,321 samples, 0.11%)</title><rect x="298.5" y="1461" width="1.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="301.47" y="1471.5" ></text>
</g>
<g >
<title>psi_task_switch (74,989,252 samples, 0.01%)</title><rect x="1188.3" y="1493" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1191.28" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (89,543,505 samples, 0.01%)</title><rect x="15.4" y="1557" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="18.37" y="1567.5" ></text>
</g>
<g >
<title>cpu_startup_entry (13,380,088,027 samples, 1.65%)</title><rect x="306.1" y="1493" width="19.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="309.05" y="1503.5" ></text>
</g>
<g >
<title>[anon] (3,939,961,173 samples, 0.48%)</title><rect x="326.5" y="1589" width="5.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="329.47" y="1599.5" ></text>
</g>
<g >
<title>release_sock (112,437,566 samples, 0.01%)</title><rect x="897.6" y="1317" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="900.63" y="1327.5" ></text>
</g>
<g >
<title>psi_group_change (94,464,181 samples, 0.01%)</title><rect x="325.1" y="1413" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="328.06" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (144,197,319 samples, 0.02%)</title><rect x="891.6" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="894.61" y="1439.5" ></text>
</g>
<g >
<title>_compound_head (488,355,365 samples, 0.06%)</title><rect x="26.3" y="1301" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="29.31" y="1311.5" ></text>
</g>
<g >
<title>do_epoll_pwait.part.0 (278,790,616 samples, 0.03%)</title><rect x="1175.7" y="1541" width="0.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1178.70" y="1551.5" ></text>
</g>
<g >
<title>file_free_rcu (95,056,070 samples, 0.01%)</title><rect x="307.8" y="1269" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="310.82" y="1279.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (183,779,669,500 samples, 22.60%)</title><rect x="58.8" y="1589" width="266.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="61.81" y="1599.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>[sleep] (527,390,202 samples, 0.06%)</title><rect x="1063.4" y="1541" width="0.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1066.44" y="1551.5" ></text>
</g>
<g >
<title>generic_write_end (560,657,738 samples, 0.07%)</title><rect x="29.7" y="1237" width="0.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="32.71" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (100,919,112 samples, 0.01%)</title><rect x="66.6" y="1381" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="69.62" y="1391.5" ></text>
</g>
<g >
<title>__fget_light (298,544,449 samples, 0.04%)</title><rect x="893.2" y="1349" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="896.21" y="1359.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (111,042,968 samples, 0.01%)</title><rect x="977.4" y="1317" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="980.40" y="1327.5" ></text>
</g>
<g >
<title>intel_idle (142,800,048 samples, 0.02%)</title><rect x="1106.4" y="1397" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1109.40" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (315,390,973 samples, 0.04%)</title><rect x="1062.2" y="1413" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.18" y="1423.5" ></text>
</g>
<g >
<title>psi_group_change (1,060,880,371 samples, 0.13%)</title><rect x="300.7" y="1477" width="1.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="303.72" y="1487.5" ></text>
</g>
<g >
<title>NaClSysWrite (252,666,220 samples, 0.03%)</title><rect x="987.8" y="1541" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="990.79" y="1551.5" ></text>
</g>
<g >
<title>dispatcher (116,717,546,275 samples, 14.35%)</title><rect x="818.4" y="1509" width="169.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="821.44" y="1519.5" >dispatcher</text>
</g>
<g >
<title>native_sched_clock (118,832,439 samples, 0.01%)</title><rect x="302.5" y="1429" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="305.55" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="325" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="335.5" ></text>
</g>
<g >
<title>task_work_run (8,253,477,138 samples, 1.01%)</title><rect x="930.4" y="1349" width="12.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="933.38" y="1359.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (638,243,674 samples, 0.08%)</title><rect x="634.3" y="1557" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="637.30" y="1567.5" ></text>
</g>
<g >
<title>psi_task_switch (254,322,159 samples, 0.03%)</title><rect x="1105.2" y="1493" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1108.21" y="1503.5" ></text>
</g>
<g >
<title>sendto (223,393,830 samples, 0.03%)</title><rect x="987.8" y="1493" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="990.83" y="1503.5" ></text>
</g>
<g >
<title>irq_exit_rcu (79,506,612 samples, 0.01%)</title><rect x="1170.7" y="1365" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1173.67" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,853,908,808 samples, 0.35%)</title><rect x="876.0" y="1413" width="4.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="879.05" y="1423.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (173,194,752 samples, 0.02%)</title><rect x="74.5" y="1333" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="77.50" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1461" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="1471.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (592,460,432 samples, 0.07%)</title><rect x="566.5" y="1541" width="0.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="569.55" y="1551.5" ></text>
</g>
<g >
<title>do_fcntl (795,948,335 samples, 0.10%)</title><rect x="887.5" y="1365" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="890.48" y="1375.5" ></text>
</g>
<g >
<title>common_nsleep (18,522,318,535 samples, 2.28%)</title><rect x="950.7" y="1349" width="26.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="953.73" y="1359.5" >c..</text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (5,390,850,009 samples, 0.66%)</title><rect x="726.4" y="1493" width="7.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="729.37" y="1503.5" ></text>
</g>
<g >
<title>[ls] (1,377,730,273 samples, 0.17%)</title><rect x="13.2" y="1541" width="2.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="16.21" y="1551.5" ></text>
</g>
<g >
<title>xa_load (182,360,593 samples, 0.02%)</title><rect x="918.2" y="1237" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="921.22" y="1247.5" ></text>
</g>
<g >
<title>record__mmap_read_all (1,423,502,299 samples, 0.18%)</title><rect x="28.6" y="1557" width="2.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="31.57" y="1567.5" ></text>
</g>
<g >
<title>enqueue_task_fair (209,314,756 samples, 0.03%)</title><rect x="1103.7" y="1445" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1106.68" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1493" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1061.80" y="1503.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (92,301,605 samples, 0.01%)</title><rect x="818.3" y="1445" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="821.29" y="1455.5" ></text>
</g>
<g >
<title>uv_cond_wait (271,813,365 samples, 0.03%)</title><rect x="25.4" y="1541" width="0.4" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="28.38" y="1551.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (252,266,545 samples, 0.03%)</title><rect x="297.0" y="1493" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="299.95" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (132,750,435 samples, 0.02%)</title><rect x="1060.5" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1063.53" y="1567.5" ></text>
</g>
<g >
<title>do_iter_read (71,232,017 samples, 0.01%)</title><rect x="818.3" y="1269" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="821.30" y="1279.5" ></text>
</g>
<g >
<title>ttwu_do_activate (217,374,205 samples, 0.03%)</title><rect x="282.1" y="1317" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="285.10" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (341,912,308 samples, 0.04%)</title><rect x="21.3" y="949" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="741" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="751.5" ></text>
</g>
<g >
<title>exit_mm (80,479,339 samples, 0.01%)</title><rect x="1063.0" y="1509" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1066.05" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (399,701,477 samples, 0.05%)</title><rect x="21.3" y="1061" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="1071.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,008,393,642 samples, 0.25%)</title><rect x="1068.7" y="1461" width="2.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1071.68" y="1471.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (6,364,200,693 samples, 0.78%)</title><rect x="649.1" y="1557" width="9.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="652.07" y="1567.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (142,446,334 samples, 0.02%)</title><rect x="1124.8" y="1429" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1127.76" y="1439.5" ></text>
</g>
<g >
<title>rcu_do_batch (421,816,803 samples, 0.05%)</title><rect x="1070.7" y="1349" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1073.75" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="437" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,377,393,523 samples, 0.17%)</title><rect x="28.6" y="1429" width="2.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="31.62" y="1439.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (394,910,776 samples, 0.05%)</title><rect x="1177.2" y="1413" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1180.23" y="1423.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (4,439,641,670 samples, 0.55%)</title><rect x="765.6" y="1509" width="6.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="768.65" y="1519.5" ></text>
</g>
<g >
<title>NaClSysClockGetTimeDecoder (155,009,817 samples, 0.02%)</title><rect x="1051.6" y="1573" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1054.62" y="1583.5" ></text>
</g>
<g >
<title>NaClAppThreadLauncher (529,626,533 samples, 0.07%)</title><rect x="1058.8" y="1557" width="0.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1061.80" y="1567.5" ></text>
</g>
<g >
<title>llist_reverse_order (412,868,365 samples, 0.05%)</title><rect x="292.9" y="1509" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="295.93" y="1519.5" ></text>
</g>
<g >
<title>v8::internal::Object::GetProperty (120,319,602 samples, 0.01%)</title><rect x="17.0" y="1509" width="0.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="20.03" y="1519.5" ></text>
</g>
<g >
<title>__srcu_read_lock (75,852,745 samples, 0.01%)</title><rect x="936.4" y="1141" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="939.42" y="1151.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (823,528,271 samples, 0.10%)</title><rect x="913.3" y="1269" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="916.30" y="1279.5" ></text>
</g>
<g >
<title>__tsearch (126,712,611 samples, 0.02%)</title><rect x="1062.5" y="1397" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1065.45" y="1407.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (177,661,957 samples, 0.02%)</title><rect x="987.9" y="1365" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="990.89" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (488,611,311 samples, 0.06%)</title><rect x="21.3" y="1285" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.30" y="1295.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (509,945,697 samples, 0.06%)</title><rect x="84.4" y="1429" width="0.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="87.35" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1525" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1535.5" ></text>
</g>
<g >
<title>update_load_avg (545,764,198 samples, 0.07%)</title><rect x="299.0" y="1445" width="0.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="302.02" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (140,597,909 samples, 0.02%)</title><rect x="21.3" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="511.5" ></text>
</g>
<g >
<title>find_busiest_group (211,540,833 samples, 0.03%)</title><rect x="83.5" y="1333" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="86.54" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1557" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="1567.5" ></text>
</g>
<g >
<title>getgrgid (77,160,857 samples, 0.01%)</title><rect x="13.7" y="1493" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="16.66" y="1503.5" ></text>
</g>
<g >
<title>alloc_pages (83,025,263 samples, 0.01%)</title><rect x="987.9" y="1317" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="990.89" y="1327.5" ></text>
</g>
<g >
<title>refill_obj_stock (85,488,565 samples, 0.01%)</title><rect x="56.1" y="1397" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="59.12" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (257,701,202 samples, 0.03%)</title><rect x="21.3" y="757" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="767.5" ></text>
</g>
<g >
<title>DynArraySet (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1541" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1061.80" y="1551.5" ></text>
</g>
<g >
<title>select_task_rq_fair (89,124,416 samples, 0.01%)</title><rect x="1121.4" y="1333" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1124.44" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (764,027,377 samples, 0.09%)</title><rect x="849.2" y="1413" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="852.19" y="1423.5" ></text>
</g>
<g >
<title>execute_command_internal (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1493" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="15.43" y="1503.5" ></text>
</g>
<g >
<title>execute_command (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1509" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="15.43" y="1519.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (72,362,367 samples, 0.01%)</title><rect x="977.0" y="1285" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="980.04" y="1295.5" ></text>
</g>
<g >
<title>mod_objcg_state (354,970,750 samples, 0.04%)</title><rect x="904.9" y="1253" width="0.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="907.92" y="1263.5" ></text>
</g>
<g >
<title>__d_instantiate (231,463,192 samples, 0.03%)</title><rect x="919.1" y="1301" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="922.10" y="1311.5" ></text>
</g>
<g >
<title>native_write_msr (176,773,763 samples, 0.02%)</title><rect x="1123.4" y="1365" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1126.43" y="1375.5" ></text>
</g>
<g >
<title>exit_mmap (99,047,865 samples, 0.01%)</title><rect x="1062.9" y="1381" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1065.89" y="1391.5" ></text>
</g>
<g >
<title>psi_group_change (70,015,183 samples, 0.01%)</title><rect x="1167.3" y="1429" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1170.27" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (535,840,326 samples, 0.07%)</title><rect x="21.3" y="1461" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.26" y="1471.5" ></text>
</g>
<g >
<title>schedule (3,980,558,343 samples, 0.49%)</title><rect x="851.6" y="1349" width="5.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="854.61" y="1359.5" ></text>
</g>
<g >
<title>rcu_core_si (458,374,048 samples, 0.06%)</title><rect x="1066.9" y="1493" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1069.89" y="1503.5" ></text>
</g>
<g >
<title>__update_load_avg_se (78,471,718 samples, 0.01%)</title><rect x="298.9" y="1445" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="301.85" y="1455.5" ></text>
</g>
<g >
<title>d_instantiate (835,081,135 samples, 0.10%)</title><rect x="919.0" y="1317" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="922.03" y="1327.5" ></text>
</g>
<g >
<title>ovl_open_realfile (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1221" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="15.43" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="101" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="111.5" ></text>
</g>
<g >
<title>setlocale (517,360,049 samples, 0.06%)</title><rect x="1063.5" y="1525" width="0.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1066.45" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (71,768,490 samples, 0.01%)</title><rect x="13.1" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="16.07" y="1487.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (80,780,697 samples, 0.01%)</title><rect x="82.7" y="1285" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="85.71" y="1295.5" ></text>
</g>
<g >
<title>check_preempt_curr (178,952,252 samples, 0.02%)</title><rect x="68.9" y="1317" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="71.94" y="1327.5" ></text>
</g>
<g >
<title>seq_read_iter (157,726,032 samples, 0.02%)</title><rect x="52.6" y="1509" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="55.64" y="1519.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (91,947,554 samples, 0.01%)</title><rect x="905.3" y="1237" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="908.30" y="1247.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (791,742,687 samples, 0.10%)</title><rect x="330.3" y="1573" width="1.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="333.26" y="1583.5" ></text>
</g>
<g >
<title>schedule_idle (1,506,072,358 samples, 0.19%)</title><rect x="1167.7" y="1525" width="2.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1170.67" y="1535.5" ></text>
</g>
<g >
<title>established_get_first (69,826,884 samples, 0.01%)</title><rect x="25.1" y="1333" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="28.14" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="709" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="719.5" ></text>
</g>
<g >
<title>m_show (155,271,717 samples, 0.02%)</title><rect x="52.6" y="1493" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="55.64" y="1503.5" ></text>
</g>
<g >
<title>handle_pte_fault (250,949,014 samples, 0.03%)</title><rect x="24.1" y="1349" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="27.08" y="1359.5" ></text>
</g>
<g >
<title>__get_user_nocheck_4 (184,165,472 samples, 0.02%)</title><rect x="869.4" y="1317" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="872.35" y="1327.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (155,019,288 samples, 0.02%)</title><rect x="913.1" y="1269" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="916.07" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,377,393,523 samples, 0.17%)</title><rect x="28.6" y="1445" width="2.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="31.62" y="1455.5" ></text>
</g>
<g >
<title>rcu_do_batch (77,819,601 samples, 0.01%)</title><rect x="1165.3" y="1333" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1168.28" y="1343.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (84,470,671 samples, 0.01%)</title><rect x="60.1" y="1509" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="63.12" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (472,325,712 samples, 0.06%)</title><rect x="52.3" y="1589" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="55.31" y="1599.5" ></text>
</g>
<g >
<title>ttwu_do_activate (101,798,369 samples, 0.01%)</title><rect x="324.3" y="1413" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="327.30" y="1423.5" ></text>
</g>
<g >
<title>clock_nanosleep (28,787,510,402 samples, 3.54%)</title><rect x="945.3" y="1413" width="41.8" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="948.34" y="1423.5" >clo..</text>
</g>
<g >
<title>prepare_task_switch (79,674,552 samples, 0.01%)</title><rect x="868.0" y="1285" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="871.04" y="1295.5" ></text>
</g>
<g >
<title>asn1_item_embed_d2i (266,799,532 samples, 0.03%)</title><rect x="20.1" y="1381" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="23.13" y="1391.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (136,076,140 samples, 0.02%)</title><rect x="917.8" y="1253" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="920.83" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (535,840,326 samples, 0.07%)</title><rect x="21.3" y="1445" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.26" y="1455.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (371,887,261 samples, 0.05%)</title><rect x="936.2" y="1189" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="939.24" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (73,343,683 samples, 0.01%)</title><rect x="1062.0" y="1477" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.02" y="1487.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (3,974,800,410 samples, 0.49%)</title><rect x="979.2" y="1349" width="5.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="982.21" y="1359.5" ></text>
</g>
<g >
<title>copy_p4d_range (1,484,165,936 samples, 0.18%)</title><rect x="17.5" y="1317" width="2.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="20.50" y="1327.5" ></text>
</g>
<g >
<title>get_page_from_freelist (78,915,430 samples, 0.01%)</title><rect x="987.9" y="1285" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="990.90" y="1295.5" ></text>
</g>
<g >
<title>__slab_free (187,299,505 samples, 0.02%)</title><rect x="82.6" y="1301" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="85.55" y="1311.5" ></text>
</g>
<g >
<title>record_times (97,036,520 samples, 0.01%)</title><rect x="975.4" y="1253" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="978.41" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (392,606,363 samples, 0.05%)</title><rect x="1063.5" y="1445" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1066.47" y="1455.5" ></text>
</g>
<g >
<title>do_sched_yield (4,631,116,350 samples, 0.57%)</title><rect x="850.7" y="1365" width="6.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="853.73" y="1375.5" ></text>
</g>
<g >
<title>tick_program_event (94,143,895 samples, 0.01%)</title><rect x="307.6" y="1333" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="310.56" y="1343.5" ></text>
</g>
<g >
<title>grep (334,504,835 samples, 0.04%)</title><rect x="11.9" y="1605" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="14.95" y="1615.5" ></text>
</g>
<g >
<title>make_kgid (105,491,504 samples, 0.01%)</title><rect x="901.0" y="1285" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="904.00" y="1295.5" ></text>
</g>
<g >
<title>poll_idle (5,415,438,660 samples, 0.67%)</title><rect x="1179.7" y="1461" width="7.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1182.69" y="1471.5" ></text>
</g>
<g >
<title>__schedule (3,733,576,368 samples, 0.46%)</title><rect x="851.7" y="1333" width="5.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="854.71" y="1343.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (213,339,878 samples, 0.03%)</title><rect x="975.7" y="1221" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="978.71" y="1231.5" ></text>
</g>
<g >
<title>vfs_open (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1269" width="0.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="15.43" y="1279.5" ></text>
</g>
<g >
<title>[sel_ldr] (97,060,333,560 samples, 11.93%)</title><rect x="343.0" y="1573" width="140.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="346.00" y="1583.5" >[sel_ldr]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="133" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1445" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,727,371,428 samples, 0.21%)</title><rect x="1106.1" y="1429" width="2.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1109.11" y="1439.5" ></text>
</g>
<g >
<title>generic_perform_write (1,294,149,585 samples, 0.16%)</title><rect x="28.7" y="1269" width="1.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="31.72" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_lock (94,343,375 samples, 0.01%)</title><rect x="935.4" y="1221" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="938.43" y="1231.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (246,054,275 samples, 0.03%)</title><rect x="1165.1" y="1429" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1168.07" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (191,276,419 samples, 0.02%)</title><rect x="12.9" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.93" y="1567.5" ></text>
</g>
<g >
<title>security_d_instantiate (344,008,449 samples, 0.04%)</title><rect x="919.7" y="1301" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="922.75" y="1311.5" ></text>
</g>
<g >
<title>new_inode_pseudo (4,785,421,542 samples, 0.59%)</title><rect x="900.3" y="1333" width="6.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="903.29" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (24,582,288,700 samples, 3.02%)</title><rect x="949.3" y="1381" width="35.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="952.35" y="1391.5" >do_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (268,959,635 samples, 0.03%)</title><rect x="25.4" y="1493" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="28.39" y="1503.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (2,857,896,225 samples, 0.35%)</title><rect x="1170.3" y="1557" width="4.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1173.26" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_write (1,369,272,947 samples, 0.17%)</title><rect x="28.6" y="1413" width="2.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="31.62" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock (386,626,563 samples, 0.05%)</title><rect x="887.7" y="1349" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="890.66" y="1359.5" ></text>
</g>
<g >
<title>node::PerIsolatePlatformData::RunForegroundTask (215,809,830 samples, 0.03%)</title><rect x="23.5" y="1525" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="26.48" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (311,656,541 samples, 0.04%)</title><rect x="21.3" y="917" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (140,597,909 samples, 0.02%)</title><rect x="21.3" y="549" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="559.5" ></text>
</g>
<g >
<title>sock_free_inode (739,632,758 samples, 0.09%)</title><rect x="81.4" y="1317" width="1.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="84.37" y="1327.5" ></text>
</g>
<g >
<title>mmput (80,479,339 samples, 0.01%)</title><rect x="1063.0" y="1493" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1066.05" y="1503.5" ></text>
</g>
<g >
<title>dequeue_entity (3,609,516,532 samples, 0.44%)</title><rect x="962.5" y="1237" width="5.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="965.48" y="1247.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (97,987,893 samples, 0.01%)</title><rect x="871.8" y="1317" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="874.75" y="1327.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (326,829,597 samples, 0.04%)</title><rect x="871.4" y="1333" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="874.42" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_clock_nanosleep (19,769,843,141 samples, 2.43%)</title><rect x="949.9" y="1365" width="28.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="952.86" y="1375.5" >__..</text>
</g>
<g >
<title>NaClMaskRestore (2,909,717,913 samples, 0.36%)</title><rect x="654.1" y="1541" width="4.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="657.08" y="1551.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (602,101,945 samples, 0.07%)</title><rect x="910.5" y="1253" width="0.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="913.54" y="1263.5" ></text>
</g>
<g >
<title>__update_load_avg_se (301,577,308 samples, 0.04%)</title><rect x="72.2" y="1253" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="75.21" y="1263.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (344,447,053 samples, 0.04%)</title><rect x="987.3" y="1429" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="990.28" y="1439.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (255,894,170 samples, 0.03%)</title><rect x="24.1" y="1525" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="27.08" y="1535.5" ></text>
</g>
<g >
<title>NaClLog (8,358,500,740 samples, 1.03%)</title><rect x="635.2" y="1557" width="12.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="638.23" y="1567.5" ></text>
</g>
<g >
<title>[bash] (382,170,058 samples, 0.05%)</title><rect x="1061.2" y="1381" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1064.16" y="1391.5" ></text>
</g>
<g >
<title>vfs_statx (106,779,255 samples, 0.01%)</title><rect x="13.8" y="1413" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="16.80" y="1423.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (148,117,240 samples, 0.02%)</title><rect x="483.5" y="1525" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="486.49" y="1535.5" ></text>
</g>
<g >
<title>vfs_write (1,353,777,397 samples, 0.17%)</title><rect x="28.6" y="1381" width="2.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="31.64" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="885" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (496,624,153 samples, 0.06%)</title><rect x="21.3" y="1381" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.29" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,703,531,240 samples, 0.21%)</title><rect x="25.9" y="1589" width="2.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="28.92" y="1599.5" ></text>
</g>
<g >
<title>tick_sched_handle (239,879,321 samples, 0.03%)</title><rect x="75.2" y="1365" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="78.17" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (74,373,470 samples, 0.01%)</title><rect x="21.3" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.32" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock (96,376,218 samples, 0.01%)</title><rect x="893.8" y="1365" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="896.76" y="1375.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (174,209,844 samples, 0.02%)</title><rect x="1102.5" y="1429" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1105.53" y="1439.5" ></text>
</g>
<g >
<title>__schedule (991,697,749 samples, 0.12%)</title><rect x="1104.3" y="1509" width="1.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1107.31" y="1519.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (914,641,361 samples, 0.11%)</title><rect x="326.6" y="1573" width="1.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="329.65" y="1583.5" ></text>
</g>
<g >
<title>sched_clock_cpu (297,400,706 samples, 0.04%)</title><rect x="856.7" y="1301" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="859.69" y="1311.5" ></text>
</g>
<g >
<title>make_child (82,171,078 samples, 0.01%)</title><rect x="1061.4" y="1205" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1064.38" y="1215.5" ></text>
</g>
<g >
<title>[libc.so.6] (541,073,419 samples, 0.07%)</title><rect x="754.5" y="1525" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="757.54" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (180,921,992 samples, 0.02%)</title><rect x="12.9" y="1525" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.93" y="1535.5" ></text>
</g>
<g >
<title>start_secondary (35,038,544,181 samples, 4.31%)</title><rect x="1119.4" y="1573" width="50.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1122.42" y="1583.5" >start..</text>
</g>
<g >
<title>__sock_release (409,004,577 samples, 0.05%)</title><rect x="941.0" y="1285" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="943.98" y="1295.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::send_syscall (223,393,830 samples, 0.03%)</title><rect x="987.8" y="1509" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="990.83" y="1519.5" ></text>
</g>
<g >
<title>tick_program_event (187,121,030 samples, 0.02%)</title><rect x="1070.4" y="1397" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1073.37" y="1407.5" ></text>
</g>
<g >
<title>refill_obj_stock (156,834,828 samples, 0.02%)</title><rect x="57.0" y="1381" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="60.04" y="1391.5" ></text>
</g>
<g >
<title>i_callback (158,012,170 samples, 0.02%)</title><rect x="1118.7" y="1445" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1121.72" y="1455.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (172,425,769 samples, 0.02%)</title><rect x="324.3" y="1461" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="327.28" y="1471.5" ></text>
</g>
<g >
<title>d_set_d_op (82,799,701 samples, 0.01%)</title><rect x="915.9" y="1285" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="918.92" y="1295.5" ></text>
</g>
<g >
<title>uv_spawn (1,846,330,509 samples, 0.23%)</title><rect x="17.3" y="1541" width="2.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="20.30" y="1551.5" ></text>
</g>
<g >
<title>security_file_fcntl (75,392,818 samples, 0.01%)</title><rect x="888.6" y="1365" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="891.64" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (77,065,804 samples, 0.01%)</title><rect x="23.3" y="1541" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="26.31" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,377,730,273 samples, 0.17%)</title><rect x="13.2" y="1557" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.21" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="853" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="863.5" ></text>
</g>
<g >
<title>sched_clock (79,595,005 samples, 0.01%)</title><rect x="292.2" y="1413" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="295.21" y="1423.5" ></text>
</g>
<g >
<title>apparmor_inode_alloc_security (134,765,720 samples, 0.02%)</title><rect x="901.7" y="1269" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="904.65" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (158,894,528 samples, 0.02%)</title><rect x="21.3" y="565" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="575.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (192,237,819 samples, 0.02%)</title><rect x="304.5" y="1509" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="307.48" y="1519.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1,837,996,976 samples, 0.23%)</title><rect x="853.3" y="1301" width="2.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="856.31" y="1311.5" ></text>
</g>
<g >
<title>enqueue_task_fair (160,624,786 samples, 0.02%)</title><rect x="307.0" y="1237" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="310.01" y="1247.5" ></text>
</g>
<g >
<title>file_free_rcu (183,052,903 samples, 0.02%)</title><rect x="1070.8" y="1333" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1073.78" y="1343.5" ></text>
</g>
<g >
<title>call_cpuidle (153,962,246,142 samples, 18.93%)</title><rect x="60.8" y="1509" width="223.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="63.81" y="1519.5" >call_cpuidle</text>
</g>
<g >
<title>hashbrown::map::make_hash (101,628,894 samples, 0.01%)</title><rect x="331.9" y="1573" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="334.91" y="1583.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (2,191,950,897 samples, 0.27%)</title><rect x="979.7" y="1333" width="3.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="982.74" y="1343.5" ></text>
</g>
<g >
<title>release_pages (217,452,292 samples, 0.03%)</title><rect x="27.9" y="1237" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="30.89" y="1247.5" ></text>
</g>
<g >
<title>irq_exit_rcu (580,231,864 samples, 0.07%)</title><rect x="1123.9" y="1429" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1126.90" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (432,482,893 samples, 0.05%)</title><rect x="21.3" y="1141" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1157" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1167.5" ></text>
</g>
<g >
<title>do_open_execat (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1333" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="15.43" y="1343.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (7,511,003,705 samples, 0.92%)</title><rect x="762.3" y="1525" width="10.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="765.30" y="1535.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (116,157,547 samples, 0.01%)</title><rect x="1102.5" y="1397" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1105.54" y="1407.5" ></text>
</g>
<g >
<title>do_open (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1285" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="15.43" y="1295.5" ></text>
</g>
<g >
<title>setlocale (123,453,270 samples, 0.02%)</title><rect x="12.0" y="1525" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="15.03" y="1535.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (124,682,402 samples, 0.02%)</title><rect x="1169.9" y="1525" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1172.85" y="1535.5" ></text>
</g>
<g >
<title>run_rebalance_domains (455,594,942 samples, 0.06%)</title><rect x="83.4" y="1381" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="86.38" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="837" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="847.5" ></text>
</g>
<g >
<title>exit_mmap (94,456,945 samples, 0.01%)</title><rect x="12.3" y="1461" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="15.30" y="1471.5" ></text>
</g>
<g >
<title>update_load_avg (114,246,676 samples, 0.01%)</title><rect x="1167.0" y="1413" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1170.03" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1445" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1455.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (87,276,135 samples, 0.01%)</title><rect x="987.9" y="1349" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="990.89" y="1359.5" ></text>
</g>
<g >
<title>asn1_template_ex_d2i (266,799,532 samples, 0.03%)</title><rect x="20.1" y="1461" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="23.13" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (34,420,139,969 samples, 4.23%)</title><rect x="892.6" y="1429" width="50.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="895.63" y="1439.5" >entry..</text>
</g>
<g >
<title>sched_clock_cpu (79,595,005 samples, 0.01%)</title><rect x="292.2" y="1429" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="295.21" y="1439.5" ></text>
</g>
<g >
<title>cpu_startup_entry (26,435,823,871 samples, 3.25%)</title><rect x="1067.7" y="1557" width="38.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1070.71" y="1567.5" >cpu..</text>
</g>
<g >
<title>execute_command_internal (584,094,764 samples, 0.07%)</title><rect x="1061.1" y="1445" width="0.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1064.14" y="1455.5" ></text>
</g>
<g >
<title>do_readlinkat (91,667,424 samples, 0.01%)</title><rect x="14.0" y="1445" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="16.99" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1045" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1055.5" ></text>
</g>
<g >
<title>ossl_namemap_name2num (104,726,455 samples, 0.01%)</title><rect x="20.1" y="1301" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="23.13" y="1311.5" ></text>
</g>
<g >
<title>pick_next_task (2,117,031,113 samples, 0.26%)</title><rect x="853.1" y="1317" width="3.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="856.09" y="1327.5" ></text>
</g>
<g >
<title>switch_fpu_return (1,372,216,348 samples, 0.17%)</title><rect x="983.0" y="1333" width="2.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="985.99" y="1343.5" ></text>
</g>
<g >
<title>memcg_account_kmem (85,775,886 samples, 0.01%)</title><rect x="906.8" y="1237" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="909.80" y="1247.5" ></text>
</g>
<g >
<title>setfl (249,746,881 samples, 0.03%)</title><rect x="888.3" y="1349" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="891.27" y="1359.5" ></text>
</g>
<g >
<title>do_group_exit (94,456,945 samples, 0.01%)</title><rect x="12.3" y="1541" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="15.30" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1397" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1381" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1391.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (407,766,937 samples, 0.05%)</title><rect x="1177.2" y="1429" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1180.21" y="1439.5" ></text>
</g>
<g >
<title>prepare_task_switch (252,107,535 samples, 0.03%)</title><rect x="973.0" y="1269" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="976.04" y="1279.5" ></text>
</g>
<g >
<title>hrtimer_update_next_event (163,893,680 samples, 0.02%)</title><rect x="75.9" y="1397" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="78.88" y="1407.5" ></text>
</g>
<g >
<title>ret_from_fork (834,067,090 samples, 0.10%)</title><rect x="1118.2" y="1573" width="1.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1121.21" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (445,530,605 samples, 0.05%)</title><rect x="955.1" y="1285" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="958.14" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="757" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="767.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (87,084,000 samples, 0.01%)</title><rect x="305.7" y="1541" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="308.71" y="1551.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (116,717,546,275 samples, 14.35%)</title><rect x="818.4" y="1493" width="169.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="821.44" y="1503.5" >rustposix::safeposix:..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (159,695,907 samples, 0.02%)</title><rect x="1059.6" y="1589" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1062.58" y="1599.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (180,463,326 samples, 0.02%)</title><rect x="1170.4" y="1349" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1173.41" y="1359.5" ></text>
</g>
<g >
<title>proc_reg_read (230,540,996 samples, 0.03%)</title><rect x="25.0" y="1413" width="0.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="27.98" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (496,624,153 samples, 0.06%)</title><rect x="21.3" y="1333" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.29" y="1343.5" ></text>
</g>
<g >
<title>glob_filename (92,629,992 samples, 0.01%)</title><rect x="1061.0" y="1397" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1064.00" y="1407.5" ></text>
</g>
<g >
<title>record_times (109,862,107 samples, 0.01%)</title><rect x="302.3" y="1477" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="305.26" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_lock (207,051,765 samples, 0.03%)</title><rect x="919.8" y="1285" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="922.81" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1413" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1423.5" ></text>
</g>
<g >
<title>futex_unqueue (356,076,288 samples, 0.04%)</title><rect x="861.8" y="1333" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="864.83" y="1343.5" ></text>
</g>
<g >
<title>__schedule (261,556,280 samples, 0.03%)</title><rect x="25.4" y="1381" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="28.40" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (76,431,250 samples, 0.01%)</title><rect x="890.4" y="1413" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="893.42" y="1423.5" ></text>
</g>
<g >
<title>call_rcu (579,579,953 samples, 0.07%)</title><rect x="937.8" y="1205" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="940.79" y="1215.5" ></text>
</g>
<g >
<title>fput (216,408,709 samples, 0.03%)</title><rect x="889.0" y="1381" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="891.97" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1429" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1061.80" y="1439.5" ></text>
</g>
<g >
<title>__schedule (296,799,745 samples, 0.04%)</title><rect x="1188.0" y="1509" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1191.00" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (702,740,184 samples, 0.09%)</title><rect x="14.2" y="1509" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.19" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="101" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="111.5" ></text>
</g>
<g >
<title>[anon] (108,051,920 samples, 0.01%)</title><rect x="15.7" y="1589" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="18.67" y="1599.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (246,886,562 samples, 0.03%)</title><rect x="57.8" y="1445" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="60.81" y="1455.5" ></text>
</g>
<g >
<title>setlocale (702,740,184 samples, 0.09%)</title><rect x="14.2" y="1525" width="1.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="17.19" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1109" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="1119.5" ></text>
</g>
<g >
<title>inode_init_always (1,405,313,524 samples, 0.17%)</title><rect x="900.7" y="1301" width="2.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="903.69" y="1311.5" ></text>
</g>
<g >
<title>ttwu_do_activate (83,309,973 samples, 0.01%)</title><rect x="1187.8" y="1477" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1190.83" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (653,969,383 samples, 0.08%)</title><rect x="1188.5" y="1413" width="1.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1191.53" y="1423.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (516,655,431 samples, 0.06%)</title><rect x="1066.9" y="1541" width="0.7" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1069.85" y="1551.5" ></text>
</g>
<g >
<title>__slab_free (277,408,434 samples, 0.03%)</title><rect x="81.6" y="1285" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="84.56" y="1295.5" ></text>
</g>
<g >
<title>pthread_cond_wait (271,813,365 samples, 0.03%)</title><rect x="25.4" y="1525" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="28.38" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="517" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="527.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (255,512,289 samples, 0.03%)</title><rect x="957.8" y="1301" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="960.83" y="1311.5" ></text>
</g>
<g >
<title>perf_event_task_tick (142,473,753 samples, 0.02%)</title><rect x="75.3" y="1317" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="78.30" y="1327.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (2,979,369,674 samples, 0.37%)</title><rect x="562.2" y="1541" width="4.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="565.23" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (87,491,398 samples, 0.01%)</title><rect x="943.6" y="1381" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="946.58" y="1391.5" ></text>
</g>
<g >
<title>__do_softirq (395,258,759 samples, 0.05%)</title><rect x="1177.8" y="1397" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1180.83" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_execve (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1397" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.43" y="1407.5" ></text>
</g>
<g >
<title>[bash] (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1477" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="15.43" y="1487.5" ></text>
</g>
<g >
<title>tick_nohz_stop_idle (96,903,419 samples, 0.01%)</title><rect x="78.4" y="1397" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="81.43" y="1407.5" ></text>
</g>
<g >
<title>pick_next_task_fair (855,421,057 samples, 0.11%)</title><rect x="866.5" y="1269" width="1.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="869.52" y="1279.5" ></text>
</g>
<g >
<title>kmem_cache_free (673,378,202 samples, 0.08%)</title><rect x="56.3" y="1413" width="1.0" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="59.35" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (170,225,626 samples, 0.02%)</title><rect x="12.0" y="1557" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.96" y="1567.5" ></text>
</g>
<g >
<title>__switch_to (142,345,325 samples, 0.02%)</title><rect x="863.5" y="1285" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="866.54" y="1295.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (75,283,902 samples, 0.01%)</title><rect x="11.6" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.60" y="1487.5" ></text>
</g>
<g >
<title>clock_gettime (83,415,838 samples, 0.01%)</title><rect x="875.6" y="1429" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="878.58" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (239,136,151 samples, 0.03%)</title><rect x="941.9" y="1333" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="944.94" y="1343.5" ></text>
</g>
<g >
<title>poll_idle (19,639,183,411 samples, 2.41%)</title><rect x="1074.3" y="1461" width="28.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1077.30" y="1471.5" >po..</text>
</g>
<g >
<title>__x64_sys_sched_yield (4,745,147,761 samples, 0.58%)</title><rect x="850.7" y="1381" width="6.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="853.71" y="1391.5" ></text>
</g>
<g >
<title>call_cpuidle (661,483,536 samples, 0.08%)</title><rect x="1188.5" y="1445" width="1.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1191.52" y="1455.5" ></text>
</g>
<g >
<title>__do_softirq (466,587,055 samples, 0.06%)</title><rect x="1066.9" y="1509" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1069.88" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="181" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="191.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::lock_exclusive_slow (26,014,144,468 samples, 3.20%)</title><rect x="835.0" y="1445" width="37.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="837.96" y="1455.5" >das..</text>
</g>
<g >
<title>poll_idle (9,618,247,585 samples, 1.18%)</title><rect x="309.9" y="1397" width="14.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="312.93" y="1407.5" ></text>
</g>
<g >
<title>call_cpuidle (1,727,371,428 samples, 0.21%)</title><rect x="1106.1" y="1445" width="2.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1109.11" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock (166,470,914 samples, 0.02%)</title><rect x="907.5" y="1317" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="910.53" y="1327.5" ></text>
</g>
<g >
<title>__do_softirq (3,727,896,255 samples, 0.46%)</title><rect x="78.7" y="1397" width="5.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="81.68" y="1407.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (272,179,208 samples, 0.03%)</title><rect x="867.1" y="1189" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="870.15" y="1199.5" ></text>
</g>
<g >
<title>[perf-679.map] (79,716,247 samples, 0.01%)</title><rect x="21.0" y="1589" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="24.04" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (435,041,043 samples, 0.05%)</title><rect x="21.3" y="1173" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="1183.5" ></text>
</g>
<g >
<title>get_page_from_freelist (125,909,504 samples, 0.02%)</title><rect x="903.5" y="1189" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="906.55" y="1199.5" ></text>
</g>
<g >
<title>llist_reverse_order (80,985,058 samples, 0.01%)</title><rect x="1167.5" y="1509" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1170.53" y="1519.5" ></text>
</g>
<g >
<title>wb_writeback (83,097,659 samples, 0.01%)</title><rect x="58.7" y="1477" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="61.68" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,488,301 samples, 0.01%)</title><rect x="21.3" y="453" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.31" y="463.5" ></text>
</g>
<g >
<title>enqueue_task_fair (431,778,234 samples, 0.05%)</title><rect x="1069.3" y="1301" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1072.29" y="1311.5" ></text>
</g>
<g >
<title>reader_loop (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1525" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="15.43" y="1535.5" ></text>
</g>
<g >
<title>std::thread::sleep (29,919,293,224 samples, 3.68%)</title><rect x="943.7" y="1461" width="43.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="946.72" y="1471.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (540,669,391 samples, 0.07%)</title><rect x="21.3" y="1477" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.25" y="1487.5" ></text>
</g>
<g >
<title>[bash] (184,497,365 samples, 0.02%)</title><rect x="1061.7" y="1381" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1064.72" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (168,454,619 samples, 0.02%)</title><rect x="10.8" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.83" y="1423.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (126,515,633 samples, 0.02%)</title><rect x="82.2" y="1285" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="85.21" y="1295.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (78,012,714 samples, 0.01%)</title><rect x="1189.7" y="1269" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1192.74" y="1279.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (132,750,435 samples, 0.02%)</title><rect x="1060.5" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1063.53" y="1551.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (180,774,158 samples, 0.02%)</title><rect x="11.5" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.47" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,014,746 samples, 0.03%)</title><rect x="21.3" y="853" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="863.5" ></text>
</g>
<g >
<title>do_idle (13,325,886,028 samples, 1.64%)</title><rect x="306.1" y="1477" width="19.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="309.10" y="1487.5" ></text>
</g>
<g >
<title>mas_store_prealloc (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1333" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1061.80" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1477" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="469" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="479.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (698,880,211 samples, 0.09%)</title><rect x="1118.2" y="1541" width="1.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1121.24" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (92,301,605 samples, 0.01%)</title><rect x="818.3" y="1381" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="821.29" y="1391.5" ></text>
</g>
<g >
<title>do_idle (103,085,758 samples, 0.01%)</title><rect x="305.9" y="1557" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="308.90" y="1567.5" ></text>
</g>
<g >
<title>__schedule (512,853,720 samples, 0.06%)</title><rect x="324.6" y="1445" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="327.58" y="1455.5" ></text>
</g>
<g >
<title>error_entry (97,999,215 samples, 0.01%)</title><rect x="283.8" y="1477" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="286.79" y="1487.5" ></text>
</g>
<g >
<title>[[vdso]] (23,902,635,753 samples, 2.94%)</title><rect x="688.7" y="1477" width="34.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="691.74" y="1487.5" >[[..</text>
</g>
<g >
<title>v8::internal::ScavengeJob::Task::RunInternal (201,221,354 samples, 0.02%)</title><rect x="23.5" y="1493" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="26.50" y="1503.5" ></text>
</g>
<g >
<title>clockevents_program_event (1,069,917,779 samples, 0.13%)</title><rect x="76.4" y="1381" width="1.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="79.36" y="1391.5" ></text>
</g>
<g >
<title>page_remove_rmap (189,115,726 samples, 0.02%)</title><rect x="27.6" y="1285" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="30.62" y="1295.5" ></text>
</g>
<g >
<title>vm_normal_page (93,304,611 samples, 0.01%)</title><rect x="19.5" y="1285" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="22.50" y="1295.5" ></text>
</g>
<g >
<title>psi_group_change (618,587,864 samples, 0.08%)</title><rect x="73.3" y="1285" width="0.9" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="76.26" y="1295.5" ></text>
</g>
<g >
<title>uv__fs_read (235,447,312 samples, 0.03%)</title><rect x="25.0" y="1525" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="27.97" y="1535.5" ></text>
</g>
<g >
<title>kmem_cache_free (285,999,645 samples, 0.04%)</title><rect x="57.4" y="1429" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="60.37" y="1439.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (83,997,620 samples, 0.01%)</title><rect x="855.3" y="1269" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="858.31" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="933" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="943.5" ></text>
</g>
<g >
<title>switch_fpu_return (124,072,607 samples, 0.02%)</title><rect x="872.0" y="1349" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="874.95" y="1359.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (132,750,435 samples, 0.02%)</title><rect x="1060.5" y="1589" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1063.53" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="869" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="879.5" ></text>
</g>
<g >
<title>restore_fpregs_from_fpstate (1,085,391,544 samples, 0.13%)</title><rect x="983.4" y="1317" width="1.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="986.36" y="1327.5" ></text>
</g>
<g >
<title>rcu_core (451,389,131 samples, 0.06%)</title><rect x="282.7" y="1349" width="0.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="285.66" y="1359.5" ></text>
</g>
<g >
<title>sh (1,900,564,506 samples, 0.23%)</title><rect x="1060.4" y="1605" width="2.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1063.42" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1237" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1247.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1,261,307,689 samples, 0.16%)</title><rect x="970.6" y="1253" width="1.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="973.62" y="1263.5" ></text>
</g>
<g >
<title>__mmput (1,703,531,240 samples, 0.21%)</title><rect x="25.9" y="1397" width="2.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="28.92" y="1407.5" ></text>
</g>
<g >
<title>down_write (148,283,750 samples, 0.02%)</title><rect x="941.0" y="1269" width="0.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="944.04" y="1279.5" ></text>
</g>
<g >
<title>alloc_pages (73,581,147 samples, 0.01%)</title><rect x="17.6" y="1285" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="20.64" y="1295.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (13,383,742,343 samples, 1.65%)</title><rect x="306.1" y="1573" width="19.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="309.05" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,521,743,289 samples, 0.31%)</title><rect x="1170.3" y="1429" width="3.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1173.32" y="1439.5" ></text>
</g>
<g >
<title>NaClClockGetTime (28,333,469,256 samples, 3.48%)</title><rect x="683.6" y="1509" width="41.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="686.61" y="1519.5" >NaC..</text>
</g>
<g >
<title>truncate_inode_pages_final (424,032,239 samples, 0.05%)</title><rect x="938.8" y="1221" width="0.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="941.84" y="1231.5" ></text>
</g>
<g >
<title>tick_irq_enter (72,684,377 samples, 0.01%)</title><rect x="1123.8" y="1413" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1126.80" y="1423.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (113,670,755 samples, 0.01%)</title><rect x="1189.7" y="1317" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1192.71" y="1327.5" ></text>
</g>
<g >
<title>main (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1541" width="0.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="15.43" y="1551.5" ></text>
</g>
<g >
<title>NaClHighResolutionTimerEnabled (148,120,627 samples, 0.02%)</title><rect x="328.3" y="1573" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="331.26" y="1583.5" ></text>
</g>
<g >
<title>setlocale (397,432,448 samples, 0.05%)</title><rect x="1062.1" y="1509" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1065.13" y="1519.5" ></text>
</g>
<g >
<title>asn1_template_noexp_d2i (266,799,532 samples, 0.03%)</title><rect x="20.1" y="1397" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="23.13" y="1407.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (197,444,612 samples, 0.02%)</title><rect x="83.5" y="1317" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="86.55" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (457,303,527 samples, 0.06%)</title><rect x="52.3" y="1573" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="55.34" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (123,453,270 samples, 0.02%)</title><rect x="12.0" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.03" y="1519.5" ></text>
</g>
<g >
<title>setup_object (97,210,308 samples, 0.01%)</title><rect x="903.8" y="1205" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="906.81" y="1215.5" ></text>
</g>
<g >
<title>local_clock_noinstr (103,698,149 samples, 0.01%)</title><rect x="1129.1" y="1461" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1132.11" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1109" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1119.5" ></text>
</g>
<g >
<title>_dl_catch_exception (71,768,490 samples, 0.01%)</title><rect x="13.1" y="1509" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="16.07" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1173" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1183.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (80,860,303 samples, 0.01%)</title><rect x="1062.8" y="1589" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1065.76" y="1599.5" ></text>
</g>
<g >
<title>enqueue_task_fair (119,787,228 samples, 0.01%)</title><rect x="1177.4" y="1301" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1180.37" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (415,354,458 samples, 0.05%)</title><rect x="10.8" y="1429" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.77" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (3,696,270,535 samples, 0.45%)</title><rect x="883.4" y="1381" width="5.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="886.45" y="1391.5" ></text>
</g>
<g >
<title>copyin (127,495,875 samples, 0.02%)</title><rect x="28.8" y="1237" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="31.83" y="1247.5" ></text>
</g>
<g >
<title>irq_exit_rcu (253,302,060 samples, 0.03%)</title><rect x="307.8" y="1365" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="310.80" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,715,304,310 samples, 0.58%)</title><rect x="883.3" y="1397" width="6.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="886.28" y="1407.5" ></text>
</g>
<g >
<title>copyout (76,426,916 samples, 0.01%)</title><rect x="1189.7" y="1237" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.74" y="1247.5" ></text>
</g>
<g >
<title>record__write (1,384,254,175 samples, 0.17%)</title><rect x="28.6" y="1493" width="2.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="31.61" y="1503.5" ></text>
</g>
<g >
<title>NaClClockGetTime (197,493,312 samples, 0.02%)</title><rect x="1043.1" y="1573" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1046.06" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (162,072,539 samples, 0.02%)</title><rect x="21.3" y="597" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="607.5" ></text>
</g>
<g >
<title>[ls] (79,280,025 samples, 0.01%)</title><rect x="13.3" y="1477" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="16.34" y="1487.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::check_select_read (513,717,679 samples, 0.06%)</title><rect x="942.7" y="1461" width="0.8" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="945.72" y="1471.5" ></text>
</g>
<g >
<title>asn1_template_ex_d2i (266,799,532 samples, 0.03%)</title><rect x="20.1" y="1413" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="23.13" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="245" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="965" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1429" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,520,222,105 samples, 0.80%)</title><rect x="880.9" y="1429" width="9.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="883.93" y="1439.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (6,888,440,046 samples, 0.85%)</title><rect x="880.5" y="1445" width="10.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="883.53" y="1455.5" ></text>
</g>
<g >
<title>tick_program_event (289,990,125 samples, 0.04%)</title><rect x="1123.3" y="1397" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1126.32" y="1407.5" ></text>
</g>
<g >
<title>expr (822,378,830 samples, 0.10%)</title><rect x="10.7" y="1605" width="1.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="13.66" y="1615.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (120,316,980 samples, 0.01%)</title><rect x="1063.3" y="1573" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1066.26" y="1583.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (434,489,904 samples, 0.05%)</title><rect x="29.8" y="1189" width="0.7" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="32.83" y="1199.5" ></text>
</g>
<g >
<title>___slab_alloc (126,718,929 samples, 0.02%)</title><rect x="902.5" y="1253" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="905.45" y="1263.5" ></text>
</g>
<g >
<title>ovl_write_iter (1,336,817,224 samples, 0.16%)</title><rect x="28.7" y="1365" width="1.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="31.66" y="1375.5" ></text>
</g>
<g >
<title>tcp_seq_start (121,938,993 samples, 0.01%)</title><rect x="25.1" y="1365" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="28.14" y="1375.5" ></text>
</g>
<g >
<title>read (235,447,312 samples, 0.03%)</title><rect x="25.0" y="1509" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="27.97" y="1519.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,320,125,041 samples, 0.16%)</title><rect x="28.7" y="1317" width="1.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="31.68" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="773" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="783.5" ></text>
</g>
<g >
<title>mod_objcg_state (233,938,649 samples, 0.03%)</title><rect x="933.4" y="1237" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="936.40" y="1247.5" ></text>
</g>
<g >
<title>vfs_iter_read (71,232,017 samples, 0.01%)</title><rect x="818.3" y="1285" width="0.1" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="821.30" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,805,694,270 samples, 0.22%)</title><rect x="17.3" y="1445" width="2.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="20.33" y="1455.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (318,744,455 samples, 0.04%)</title><rect x="738.2" y="1525" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="741.21" y="1535.5" ></text>
</g>
<g >
<title>update_rq_clock (86,419,818 samples, 0.01%)</title><rect x="1167.4" y="1477" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1170.40" y="1487.5" ></text>
</g>
<g >
<title>do_idle (8,120,716,586 samples, 1.00%)</title><rect x="1176.7" y="1541" width="11.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1179.71" y="1551.5" ></text>
</g>
<g >
<title>execute_command (382,170,058 samples, 0.05%)</title><rect x="1061.2" y="1413" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1064.16" y="1423.5" ></text>
</g>
<g >
<title>update_load_avg (140,631,218 samples, 0.02%)</title><rect x="1122.3" y="1269" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1125.31" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="117" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="127.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (117,251,236 samples, 0.01%)</title><rect x="1165.1" y="1397" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1168.09" y="1407.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (252,658,008 samples, 0.03%)</title><rect x="1176.3" y="1381" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1179.32" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1205" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1215.5" ></text>
</g>
<g >
<title>pick_next_entity (128,292,397 samples, 0.02%)</title><rect x="854.1" y="1285" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="857.05" y="1295.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,987,245,440 samples, 0.24%)</title><rect x="1068.7" y="1445" width="2.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1071.71" y="1455.5" ></text>
</g>
<g >
<title>rcu_core (429,134,206 samples, 0.05%)</title><rect x="1070.7" y="1365" width="0.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1073.73" y="1375.5" ></text>
</g>
<g >
<title>update_curr (246,637,638 samples, 0.03%)</title><rect x="864.7" y="1237" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="867.67" y="1247.5" ></text>
</g>
<g >
<title>native_sched_clock (293,818,041 samples, 0.04%)</title><rect x="104.9" y="1429" width="0.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="107.94" y="1439.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (98,746,676 samples, 0.01%)</title><rect x="673.5" y="1541" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="676.53" y="1551.5" ></text>
</g>
<g >
<title>sock_sendmsg (210,400,398 samples, 0.03%)</title><rect x="987.8" y="1413" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="990.84" y="1423.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (255,929,736 samples, 0.03%)</title><rect x="936.4" y="1157" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="939.38" y="1167.5" ></text>
</g>
<g >
<title>clockevents_program_event (1,140,578,199 samples, 0.14%)</title><rect x="956.1" y="1253" width="1.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="959.11" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1125" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1135.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (483,804,607 samples, 0.06%)</title><rect x="302.9" y="1493" width="0.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="305.90" y="1503.5" ></text>
</g>
<g >
<title>[[heap]] (82,103,565 samples, 0.01%)</title><rect x="1060.4" y="1589" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1063.42" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="261" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="271.5" ></text>
</g>
<g >
<title>readlink (91,667,424 samples, 0.01%)</title><rect x="14.0" y="1509" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="16.99" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2,008,607,387 samples, 0.25%)</title><rect x="912.0" y="1285" width="2.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="914.98" y="1295.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (81,916,669 samples, 0.01%)</title><rect x="953.1" y="1301" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="956.08" y="1311.5" ></text>
</g>
<g >
<title>__slab_free (337,221,064 samples, 0.04%)</title><rect x="55.4" y="1413" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="58.43" y="1423.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (315,295,720 samples, 0.04%)</title><rect x="911.5" y="1253" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="914.48" y="1263.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (641,688,099 samples, 0.08%)</title><rect x="567.4" y="1557" width="0.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="570.41" y="1567.5" ></text>
</g>
<g >
<title>wake_up_process (80,393,871 samples, 0.01%)</title><rect x="1106.2" y="1301" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1109.18" y="1311.5" ></text>
</g>
<g >
<title>read_tsc (76,409,944 samples, 0.01%)</title><rect x="76.2" y="1397" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="79.25" y="1407.5" ></text>
</g>
<g >
<title>enqueue_task (575,183,042 samples, 0.07%)</title><rect x="1069.3" y="1317" width="0.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1072.27" y="1327.5" ></text>
</g>
<g >
<title>irq_enter_rcu (83,860,265 samples, 0.01%)</title><rect x="1123.8" y="1429" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1126.78" y="1439.5" ></text>
</g>
<g >
<title>__get_user_8 (547,818,054 samples, 0.07%)</title><rect x="981.2" y="1285" width="0.8" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="984.17" y="1295.5" ></text>
</g>
<g >
<title>inode_init_once (70,100,560 samples, 0.01%)</title><rect x="903.8" y="1173" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="906.84" y="1183.5" ></text>
</g>
<g >
<title>_start (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1589" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="15.43" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (341,912,308 samples, 0.04%)</title><rect x="21.3" y="981" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="991.5" ></text>
</g>
<g >
<title>scheduler_tick (202,357,236 samples, 0.02%)</title><rect x="75.2" y="1333" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="78.22" y="1343.5" ></text>
</g>
<g >
<title>read_tsc (298,384,248 samples, 0.04%)</title><rect x="954.6" y="1269" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="957.59" y="1279.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (217,452,292 samples, 0.03%)</title><rect x="27.9" y="1253" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="30.89" y="1263.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1,214,719,922 samples, 0.15%)</title><rect x="1121.2" y="1381" width="1.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1124.25" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (157,060,014,171 samples, 19.31%)</title><rect x="60.3" y="1525" width="227.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="63.30" y="1535.5" >cpuidle_idle_call</text>
</g>
<g >
<title>flush_smp_call_function_queue (460,700,193 samples, 0.06%)</title><rect x="1103.6" y="1525" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1106.55" y="1535.5" ></text>
</g>
<g >
<title>pick_next_task_fair (352,043,050 samples, 0.04%)</title><rect x="1168.4" y="1477" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1171.45" y="1487.5" ></text>
</g>
<g >
<title>enqueue_entity (113,711,356 samples, 0.01%)</title><rect x="307.1" y="1221" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="310.07" y="1231.5" ></text>
</g>
<g >
<title>inet_csk_accept (1,727,401,990 samples, 0.21%)</title><rect x="895.3" y="1333" width="2.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="898.31" y="1343.5" ></text>
</g>
<g >
<title>[bash] (99,991,042 samples, 0.01%)</title><rect x="1061.2" y="1285" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1064.17" y="1295.5" ></text>
</g>
<g >
<title>call_cpuidle (7,425,674,176 samples, 0.91%)</title><rect x="1176.8" y="1509" width="10.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1179.79" y="1519.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1,314,449,988 samples, 0.16%)</title><rect x="28.7" y="1285" width="1.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="31.69" y="1295.5" ></text>
</g>
<g >
<title>[ls] (660,224,600 samples, 0.08%)</title><rect x="13.2" y="1525" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="16.21" y="1535.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (833,473,627 samples, 0.10%)</title><rect x="1049.5" y="1573" width="1.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1052.50" y="1583.5" ></text>
</g>
<g >
<title>filemap_add_folio (260,700,964 samples, 0.03%)</title><rect x="29.0" y="1221" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="32.03" y="1231.5" ></text>
</g>
<g >
<title>schedule (154,750,419 samples, 0.02%)</title><rect x="58.4" y="1525" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.36" y="1535.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (123,373,256 samples, 0.02%)</title><rect x="1170.4" y="1317" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1173.44" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,014,746 samples, 0.03%)</title><rect x="21.3" y="821" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="831.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (102,554,640 samples, 0.01%)</title><rect x="818.3" y="1477" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="821.29" y="1487.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (180,463,326 samples, 0.02%)</title><rect x="1170.4" y="1365" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1173.41" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (493,676,841 samples, 0.06%)</title><rect x="772.1" y="1509" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="775.09" y="1519.5" ></text>
</g>
<g >
<title>_Fork (1,805,694,270 samples, 0.22%)</title><rect x="17.3" y="1477" width="2.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="20.33" y="1487.5" ></text>
</g>
<g >
<title>rseq_get_rseq_cs (74,844,020 samples, 0.01%)</title><rect x="982.0" y="1285" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="984.97" y="1295.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,344,135,860 samples, 1.64%)</title><rect x="65.8" y="1445" width="19.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="68.75" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="85" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="95.5" ></text>
</g>
<g >
<title>select_task_rq_fair (446,209,256 samples, 0.05%)</title><rect x="67.9" y="1333" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="70.86" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (132,750,435 samples, 0.02%)</title><rect x="1060.5" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1063.53" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="997" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1007.5" ></text>
</g>
<g >
<title>psi_task_switch (529,682,955 samples, 0.07%)</title><rect x="868.2" y="1285" width="0.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="871.19" y="1295.5" ></text>
</g>
<g >
<title>i_callback (125,018,332 samples, 0.02%)</title><rect x="1071.0" y="1333" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1074.04" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1077" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,703,531,240 samples, 0.21%)</title><rect x="25.9" y="1573" width="2.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="28.92" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (2,505,735,586 samples, 0.31%)</title><rect x="1114.0" y="1589" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1116.99" y="1599.5" ></text>
</g>
<g >
<title>ktime_get (71,953,738 samples, 0.01%)</title><rect x="304.9" y="1509" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="307.86" y="1519.5" ></text>
</g>
<g >
<title>do_exit (89,543,505 samples, 0.01%)</title><rect x="15.4" y="1525" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="18.37" y="1535.5" ></text>
</g>
<g >
<title>enqueue_entity (124,737,393 samples, 0.02%)</title><rect x="282.1" y="1269" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="285.12" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1317" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1327.5" ></text>
</g>
<g >
<title>uv__fs_work (270,963,997 samples, 0.03%)</title><rect x="24.9" y="1541" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="27.95" y="1551.5" ></text>
</g>
<g >
<title>update_load_avg (74,843,069 samples, 0.01%)</title><rect x="968.1" y="1237" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="971.05" y="1247.5" ></text>
</g>
<g >
<title>__rcu_read_lock (186,877,070 samples, 0.02%)</title><rect x="887.0" y="1349" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="890.04" y="1359.5" ></text>
</g>
<g >
<title>update_min_vruntime (160,800,967 samples, 0.02%)</title><rect x="855.7" y="1285" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="858.74" y="1295.5" ></text>
</g>
<g >
<title>node::PerIsolatePlatformData::FlushForegroundTasksInternal (215,809,830 samples, 0.03%)</title><rect x="23.5" y="1541" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="26.48" y="1551.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,495,784,256 samples, 0.31%)</title><rect x="1170.4" y="1413" width="3.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1173.35" y="1423.5" ></text>
</g>
<g >
<title>native_load_tls (117,053,704 samples, 0.01%)</title><rect x="985.2" y="1397" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="988.17" y="1407.5" ></text>
</g>
<g >
<title>tcp_recvmsg (131,075,304 samples, 0.02%)</title><rect x="1189.7" y="1333" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.69" y="1343.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::unlock_exclusive_slow (4,228,877,694 samples, 0.52%)</title><rect x="874.1" y="1461" width="6.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="877.10" y="1471.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (154,702,678 samples, 0.02%)</title><rect x="936.5" y="1141" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="939.53" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="469" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="479.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (9,744,447,726 samples, 1.20%)</title><rect x="928.2" y="1365" width="14.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="931.21" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="821" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="831.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (152,427,511 samples, 0.02%)</title><rect x="50.1" y="1589" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="53.11" y="1599.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (91,215,270 samples, 0.01%)</title><rect x="1106.2" y="1333" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1109.16" y="1343.5" ></text>
</g>
<g >
<title>__slab_free (312,827,451 samples, 0.04%)</title><rect x="80.5" y="1301" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="83.50" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (432,339,422 samples, 0.05%)</title><rect x="22.6" y="53" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="25.59" y="63.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,041,827,856 samples, 0.62%)</title><rect x="882.9" y="1413" width="7.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="885.92" y="1423.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,933,288,874 samples, 0.24%)</title><rect x="1106.1" y="1493" width="2.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1109.08" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (1,426,560,748 samples, 0.18%)</title><rect x="1064.2" y="1589" width="2.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1067.21" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (504,728,499 samples, 0.06%)</title><rect x="10.7" y="1493" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="1503.5" ></text>
</g>
<g >
<title>____fput (7,827,688,757 samples, 0.96%)</title><rect x="930.6" y="1333" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="933.56" y="1343.5" ></text>
</g>
<g >
<title>rcu_core_si (3,499,576,974 samples, 0.43%)</title><rect x="53.3" y="1493" width="5.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="56.26" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="149" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="159.5" ></text>
</g>
<g >
<title>v8::internal::OptimizedCompilationJob::ExecuteJob (165,963,503 samples, 0.02%)</title><rect x="24.5" y="1509" width="0.2" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="27.46" y="1519.5" ></text>
</g>
<g >
<title>tick_sched_handle (148,117,240 samples, 0.02%)</title><rect x="483.5" y="1461" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="486.49" y="1471.5" ></text>
</g>
<g >
<title>futex_wait (6,284,080,309 samples, 0.77%)</title><rect x="861.4" y="1349" width="9.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="864.40" y="1359.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1381" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1061.80" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (94,456,945 samples, 0.01%)</title><rect x="12.3" y="1573" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="15.30" y="1583.5" ></text>
</g>
<g >
<title>__update_load_avg_se (125,251,609 samples, 0.02%)</title><rect x="299.6" y="1429" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="302.63" y="1439.5" ></text>
</g>
<g >
<title>__libc_start_main (1,250,199,249 samples, 0.15%)</title><rect x="1060.9" y="1573" width="1.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1063.95" y="1583.5" ></text>
</g>
<g >
<title>parse_and_execute (720,702,247 samples, 0.09%)</title><rect x="1060.9" y="1509" width="1.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1063.95" y="1519.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (2,279,163,930 samples, 0.28%)</title><rect x="17.3" y="1573" width="3.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="20.30" y="1583.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (86,426,068 samples, 0.01%)</title><rect x="323.7" y="1381" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="326.72" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (531,832,296 samples, 0.07%)</title><rect x="1058.8" y="1573" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1061.80" y="1583.5" ></text>
</g>
<g >
<title>select_idle_sibling (223,914,439 samples, 0.03%)</title><rect x="68.2" y="1317" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="71.19" y="1327.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (893,219,850 samples, 0.11%)</title><rect x="917.5" y="1269" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="920.47" y="1279.5" ></text>
</g>
<g >
<title>hrtimer_active (238,859,018 samples, 0.03%)</title><rect x="957.8" y="1285" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="960.85" y="1295.5" ></text>
</g>
<g >
<title>OSSL_DECODER_CTX_add_extra (146,744,303 samples, 0.02%)</title><rect x="20.1" y="1333" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="23.13" y="1343.5" ></text>
</g>
<g >
<title>execute_command_internal (720,702,247 samples, 0.09%)</title><rect x="1060.9" y="1493" width="1.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1063.95" y="1503.5" ></text>
</g>
<g >
<title>__fdget_raw (2,536,029,310 samples, 0.31%)</title><rect x="883.7" y="1365" width="3.7" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="886.72" y="1375.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (544,968,273 samples, 0.07%)</title><rect x="879.3" y="1317" width="0.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="882.28" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1429" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="1439.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (318,744,455 samples, 0.04%)</title><rect x="738.2" y="1541" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="741.21" y="1551.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (3,816,041,721 samples, 0.47%)</title><rect x="78.6" y="1413" width="5.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="81.61" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock (250,840,044 samples, 0.03%)</title><rect x="852.7" y="1317" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="855.65" y="1327.5" ></text>
</g>
<g >
<title>schedule_idle (297,841,715 samples, 0.04%)</title><rect x="1188.0" y="1525" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1191.00" y="1535.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (3,224,051,190 samples, 0.40%)</title><rect x="666.7" y="1525" width="4.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="669.67" y="1535.5" ></text>
</g>
<g >
<title>sock_recvmsg (149,494,064 samples, 0.02%)</title><rect x="1189.7" y="1365" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1192.69" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (199,952,504 samples, 0.02%)</title><rect x="1062.9" y="1573" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1065.88" y="1583.5" ></text>
</g>
<g >
<title>kmem_cache_free (69,705,484 samples, 0.01%)</title><rect x="1119.0" y="1429" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1121.96" y="1439.5" ></text>
</g>
<g >
<title>security_file_alloc (1,158,098,024 samples, 0.14%)</title><rect x="910.3" y="1269" width="1.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="913.30" y="1279.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (87,276,135 samples, 0.01%)</title><rect x="987.9" y="1333" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="990.89" y="1343.5" ></text>
</g>
<g >
<title>execute_command (584,094,764 samples, 0.07%)</title><rect x="1061.1" y="1461" width="0.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1064.14" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (148,462,015 samples, 0.02%)</title><rect x="1060.7" y="1589" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1063.73" y="1599.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (92,301,605 samples, 0.01%)</title><rect x="818.3" y="1429" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="821.29" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (116,918,879 samples, 0.01%)</title><rect x="1063.3" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1066.26" y="1567.5" ></text>
</g>
<g >
<title>balance_fair (257,768,180 samples, 0.03%)</title><rect x="1176.3" y="1461" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1179.32" y="1471.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (148,619,774 samples, 0.02%)</title><rect x="904.1" y="1269" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="907.12" y="1279.5" ></text>
</g>
<g >
<title>native_sched_clock (207,169,067 samples, 0.03%)</title><rect x="975.7" y="1205" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="978.72" y="1215.5" ></text>
</g>
<g >
<title>set_next_entity (93,448,563 samples, 0.01%)</title><rect x="1105.0" y="1461" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1108.00" y="1471.5" ></text>
</g>
<g >
<title>__do_softirq (650,621,520 samples, 0.08%)</title><rect x="1118.2" y="1509" width="1.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1121.24" y="1519.5" ></text>
</g>
<g >
<title>__nanosleep (29,266,809,381 samples, 3.60%)</title><rect x="944.6" y="1429" width="42.5" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="947.65" y="1439.5" >__n..</text>
</g>
<g >
<title>run_ksoftirqd (139,360,047 samples, 0.02%)</title><rect x="1176.1" y="1525" width="0.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1179.12" y="1535.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1397" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1061.80" y="1407.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (277,012,670 samples, 0.03%)</title><rect x="282.0" y="1365" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="285.02" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (116,918,879 samples, 0.01%)</title><rect x="1063.3" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1066.26" y="1551.5" ></text>
</g>
<g >
<title>call_cpuidle (23,997,503,868 samples, 2.95%)</title><rect x="1068.1" y="1509" width="34.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1071.06" y="1519.5" >ca..</text>
</g>
<g >
<title>do_exit (88,226,730 samples, 0.01%)</title><rect x="1063.0" y="1525" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1066.04" y="1535.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (224,852,118 samples, 0.03%)</title><rect x="894.4" y="1349" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="897.43" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (77,825,095 samples, 0.01%)</title><rect x="21.3" y="389" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.31" y="399.5" ></text>
</g>
<g >
<title>find_busiest_group (390,857,909 samples, 0.05%)</title><rect x="867.0" y="1221" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="870.01" y="1231.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (2,965,514,343 samples, 0.36%)</title><rect x="288.6" y="1493" width="4.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="291.58" y="1503.5" ></text>
</g>
<g >
<title>try_to_wake_up (400,372,274 samples, 0.05%)</title><rect x="306.9" y="1285" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="309.87" y="1295.5" ></text>
</g>
<g >
<title>update_curr (749,103,970 samples, 0.09%)</title><rect x="964.6" y="1221" width="1.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="967.58" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1269" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1279.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (554,575,231 samples, 0.07%)</title><rect x="937.8" y="1189" width="0.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="940.79" y="1199.5" ></text>
</g>
<g >
<title>try_to_wake_up (247,410,405 samples, 0.03%)</title><rect x="1177.3" y="1349" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1180.28" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (73,343,683 samples, 0.01%)</title><rect x="1062.0" y="1493" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.02" y="1503.5" ></text>
</g>
<g >
<title>ASN1_item_d2i (266,799,532 samples, 0.03%)</title><rect x="20.1" y="1493" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="23.13" y="1503.5" ></text>
</g>
<g >
<title>irq_exit_rcu (395,258,759 samples, 0.05%)</title><rect x="1177.8" y="1429" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1180.83" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="597" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="607.5" ></text>
</g>
<g >
<title>__dentry_kill (4,966,364,679 samples, 0.61%)</title><rect x="932.5" y="1285" width="7.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="935.47" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="917" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (341,912,308 samples, 0.04%)</title><rect x="21.3" y="997" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="1007.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (142,394,134 samples, 0.02%)</title><rect x="324.3" y="1429" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="327.29" y="1439.5" ></text>
</g>
<g >
<title>psi_group_change (175,981,557 samples, 0.02%)</title><rect x="1105.3" y="1477" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1108.26" y="1487.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (121,878,078 samples, 0.01%)</title><rect x="965.2" y="1205" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="968.21" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (91,667,424 samples, 0.01%)</title><rect x="14.0" y="1477" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="16.99" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (75,283,902 samples, 0.01%)</title><rect x="11.6" y="1461" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.60" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (616,005,106 samples, 0.08%)</title><rect x="14.2" y="1461" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.21" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_enter (23,965,139,380 samples, 2.95%)</title><rect x="1068.1" y="1493" width="34.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1071.11" y="1503.5" >cp..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (76,657,800 samples, 0.01%)</title><rect x="332.1" y="1573" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="335.05" y="1583.5" ></text>
</g>
<g >
<title>__fget_light (2,266,453,408 samples, 0.28%)</title><rect x="883.8" y="1349" width="3.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="886.75" y="1359.5" ></text>
</g>
<g >
<title>psi_group_change (1,071,027,733 samples, 0.13%)</title><rect x="973.9" y="1253" width="1.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="976.86" y="1263.5" ></text>
</g>
<g >
<title>update_cfs_group (169,332,570 samples, 0.02%)</title><rect x="967.7" y="1237" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="970.72" y="1247.5" ></text>
</g>
<g >
<title>enqueue_entity (244,754,991 samples, 0.03%)</title><rect x="1166.8" y="1429" width="0.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1169.84" y="1439.5" ></text>
</g>
<g >
<title>enqueue_task (457,418,867 samples, 0.06%)</title><rect x="1166.7" y="1461" width="0.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1169.72" y="1471.5" ></text>
</g>
<g >
<title>enqueue_entity (156,499,914 samples, 0.02%)</title><rect x="1103.8" y="1429" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1106.76" y="1439.5" ></text>
</g>
<g >
<title>__filemap_get_folio (334,222,926 samples, 0.04%)</title><rect x="29.0" y="1237" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="32.03" y="1247.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,139,557,323 samples, 0.14%)</title><rect x="61.2" y="1477" width="1.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="64.23" y="1487.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (165,995,806 samples, 0.02%)</title><rect x="918.5" y="1253" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="921.50" y="1263.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (268,408,525 samples, 0.03%)</title><rect x="1059.2" y="1509" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1062.18" y="1519.5" ></text>
</g>
<g >
<title>realloc (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1525" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1061.80" y="1535.5" ></text>
</g>
<g >
<title>dequeue_task (4,369,516,097 samples, 0.54%)</title><rect x="962.0" y="1269" width="6.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="965.00" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="149" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (584,932,526 samples, 0.07%)</title><rect x="21.2" y="1493" width="0.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="24.19" y="1503.5" ></text>
</g>
<g >
<title>load_balance (816,208,587 samples, 0.10%)</title><rect x="971.2" y="1221" width="1.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="974.16" y="1231.5" ></text>
</g>
<g >
<title>enqueue_entity (102,636,744 samples, 0.01%)</title><rect x="1177.4" y="1285" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1180.38" y="1295.5" ></text>
</g>
<g >
<title>__poll (90,388,507 samples, 0.01%)</title><rect x="28.4" y="1541" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="31.44" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="309" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="319.5" ></text>
</g>
<g >
<title>map_id_range_down (141,803,343 samples, 0.02%)</title><rect x="901.2" y="1269" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="904.19" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1285" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1295.5" ></text>
</g>
<g >
<title>main (1,250,199,249 samples, 0.15%)</title><rect x="1060.9" y="1541" width="1.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1063.95" y="1551.5" ></text>
</g>
<g >
<title>__init_rwsem (128,032,506 samples, 0.02%)</title><rect x="900.4" y="1301" width="0.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="903.45" y="1311.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (460,603,667 samples, 0.06%)</title><rect x="29.0" y="1253" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="32.03" y="1263.5" ></text>
</g>
<g >
<title>psi_task_change (93,125,150 samples, 0.01%)</title><rect x="1167.3" y="1445" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1170.25" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (228,963,342 samples, 0.03%)</title><rect x="21.3" y="709" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.31" y="719.5" ></text>
</g>
<g >
<title>d2i_X509_AUX (266,799,532 samples, 0.03%)</title><rect x="20.1" y="1509" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="23.13" y="1519.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (276,679,831 samples, 0.03%)</title><rect x="1170.4" y="1381" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1173.40" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (268,959,635 samples, 0.03%)</title><rect x="25.4" y="1477" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="28.39" y="1487.5" ></text>
</g>
<g >
<title>__update_load_avg_se (107,686,184 samples, 0.01%)</title><rect x="291.3" y="1397" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="294.33" y="1407.5" ></text>
</g>
<g >
<title>getgrgid (105,152,184 samples, 0.01%)</title><rect x="13.5" y="1477" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="16.46" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1317" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1327.5" ></text>
</g>
<g >
<title>update_cfs_group (162,881,738 samples, 0.02%)</title><rect x="290.4" y="1413" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="293.42" y="1423.5" ></text>
</g>
<g >
<title>[unknown]  (32,621,561,492 samples, 4.01%)</title><rect x="988.2" y="1589" width="47.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="991.16" y="1599.5" >[unk..</text>
</g>
<g >
<title>entry_SYSCALL_64 (336,036,516 samples, 0.04%)</title><rect x="948.3" y="1397" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="951.31" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1333" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="1343.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (2,436,130,318 samples, 0.30%)</title><rect x="921.1" y="1349" width="3.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="924.08" y="1359.5" ></text>
</g>
<g >
<title>mod_memcg_state (80,095,965 samples, 0.01%)</title><rect x="906.8" y="1221" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="909.80" y="1231.5" ></text>
</g>
<g >
<title>kthread (834,067,090 samples, 0.10%)</title><rect x="1118.2" y="1557" width="1.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1121.21" y="1567.5" ></text>
</g>
<g >
<title>cpus_share_cache (71,292,830 samples, 0.01%)</title><rect x="68.4" y="1301" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="71.38" y="1311.5" ></text>
</g>
<g >
<title>cpu_startup_entry (35,027,854,444 samples, 4.31%)</title><rect x="1119.4" y="1557" width="50.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1122.42" y="1567.5" >cpu_s..</text>
</g>
<g >
<title>clock_gettime (338,308,356 samples, 0.04%)</title><rect x="737.7" y="1493" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="740.69" y="1503.5" ></text>
</g>
<g >
<title>seq_read_iter (230,540,996 samples, 0.03%)</title><rect x="25.0" y="1381" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="27.98" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1509" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1061.80" y="1519.5" ></text>
</g>
<g >
<title>pick_next_task_fair (127,636,665 samples, 0.02%)</title><rect x="324.8" y="1413" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="327.79" y="1423.5" ></text>
</g>
<g >
<title>try_to_wake_up (77,319,999 samples, 0.01%)</title><rect x="1165.1" y="1333" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1168.11" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="485" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="495.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (763,893,048 samples, 0.09%)</title><rect x="981.0" y="1301" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="983.97" y="1311.5" ></text>
</g>
<g >
<title>ttwu_do_activate (482,945,814 samples, 0.06%)</title><rect x="1166.7" y="1477" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1169.70" y="1487.5" ></text>
</g>
<g >
<title>enqueue_entity (412,487,129 samples, 0.05%)</title><rect x="1121.9" y="1285" width="0.6" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1124.91" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (488,611,311 samples, 0.06%)</title><rect x="21.3" y="1269" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="1279.5" ></text>
</g>
<g >
<title>sock_read (160,553,375 samples, 0.02%)</title><rect x="1189.7" y="1493" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1192.67" y="1503.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (101,463,366 samples, 0.01%)</title><rect x="860.1" y="1413" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="863.08" y="1423.5" ></text>
</g>
<g >
<title>parking_lot_core::word_lock::WordLock::lock_slow (138,645,156 samples, 0.02%)</title><rect x="859.1" y="1429" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="862.06" y="1439.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (3,189,792,465 samples, 0.39%)</title><rect x="953.2" y="1301" width="4.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="956.20" y="1311.5" ></text>
</g>
<g >
<title>sock_free_inode (154,251,699 samples, 0.02%)</title><rect x="1118.7" y="1429" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1121.72" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="277" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="287.5" ></text>
</g>
<g >
<title>sshd (45,162,264,732 samples, 5.55%)</title><rect x="1108.9" y="1605" width="65.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1111.89" y="1615.5" >sshd</text>
</g>
<g >
<title>enqueue_task (268,267,991 samples, 0.03%)</title><rect x="1103.7" y="1461" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1106.68" y="1471.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (157,727,910 samples, 0.02%)</title><rect x="871.5" y="1317" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="874.52" y="1327.5" ></text>
</g>
<g >
<title>cpuidle_select (200,799,382 samples, 0.02%)</title><rect x="324.0" y="1445" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="326.96" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1413" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1423.5" ></text>
</g>
<g >
<title>tcp_seq_next (105,017,507 samples, 0.01%)</title><rect x="25.0" y="1365" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="27.98" y="1375.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (834,067,090 samples, 0.10%)</title><rect x="1118.2" y="1589" width="1.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1121.21" y="1599.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (180,774,158 samples, 0.02%)</title><rect x="11.5" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.47" y="1551.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (8,858,684,369 samples, 1.09%)</title><rect x="1176.7" y="1589" width="12.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1179.69" y="1599.5" ></text>
</g>
<g >
<title>reweight_entity (155,359,075 samples, 0.02%)</title><rect x="71.2" y="1253" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="74.23" y="1263.5" ></text>
</g>
<g >
<title>__schedule (6,431,567,947 samples, 0.79%)</title><rect x="294.3" y="1509" width="9.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="297.27" y="1519.5" ></text>
</g>
<g >
<title>__schedule (12,573,491,355 samples, 1.55%)</title><rect x="958.7" y="1285" width="18.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="961.72" y="1295.5" ></text>
</g>
<g >
<title>__remove_hrtimer (141,647,264 samples, 0.02%)</title><rect x="66.4" y="1381" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="69.42" y="1391.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (110,538,695 samples, 0.01%)</title><rect x="1187.8" y="1493" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1190.81" y="1503.5" ></text>
</g>
<g >
<title>__do_softirq (90,776,220 samples, 0.01%)</title><rect x="1165.3" y="1381" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1168.28" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_enter (153,655,883,809 samples, 18.89%)</title><rect x="61.2" y="1493" width="222.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="64.18" y="1503.5" >cpuidle_enter</text>
</g>
<g >
<title>ext4_fill_raw_inode (86,912,650 samples, 0.01%)</title><rect x="29.9" y="1141" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="32.88" y="1151.5" ></text>
</g>
<g >
<title>__clone (1,194,005,951 samples, 0.15%)</title><rect x="24.1" y="1589" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="27.05" y="1599.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (45,459,237,657 samples, 5.59%)</title><rect x="568.3" y="1557" width="66.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="571.34" y="1567.5" >NaClApp..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="789" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="799.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (492,192,897 samples, 0.06%)</title><rect x="1051.8" y="1573" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1054.85" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,580,152,425 samples, 0.32%)</title><rect x="1170.3" y="1461" width="3.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1173.32" y="1471.5" ></text>
</g>
<g >
<title>kmem_cache_free (99,873,361 samples, 0.01%)</title><rect x="283.1" y="1285" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="286.10" y="1295.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,784,065,204 samples, 0.34%)</title><rect x="1120.9" y="1461" width="4.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1123.93" y="1471.5" ></text>
</g>
<g >
<title>rcu_core_si (429,134,206 samples, 0.05%)</title><rect x="1070.7" y="1381" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1073.73" y="1391.5" ></text>
</g>
<g >
<title>pick_next_task (1,100,544,563 samples, 0.14%)</title><rect x="866.4" y="1285" width="1.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="869.43" y="1295.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (104,339,703 samples, 0.01%)</title><rect x="1165.1" y="1381" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1168.10" y="1391.5" ></text>
</g>
<g >
<title>worker (639,564,778 samples, 0.08%)</title><rect x="24.9" y="1557" width="0.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="27.86" y="1567.5" ></text>
</g>
<g >
<title>inet_recvmsg (131,075,304 samples, 0.02%)</title><rect x="1189.7" y="1349" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1192.69" y="1359.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (138,732,817 samples, 0.02%)</title><rect x="1170.4" y="1333" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1173.43" y="1343.5" ></text>
</g>
<g >
<title>non-virtual thunk to v8::internal::CancelableTask::Run (215,809,830 samples, 0.03%)</title><rect x="23.5" y="1509" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="26.48" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (12,017,633,212 samples, 1.48%)</title><rect x="306.5" y="1413" width="17.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="309.45" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (399,701,477 samples, 0.05%)</title><rect x="21.3" y="1013" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="1023.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::sub_timespec (82,356,717 samples, 0.01%)</title><rect x="987.2" y="1381" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="990.16" y="1391.5" ></text>
</g>
<g >
<title>i_callback (739,879,903 samples, 0.09%)</title><rect x="56.3" y="1445" width="1.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="59.26" y="1455.5" ></text>
</g>
<g >
<title>update_cfs_group (233,083,729 samples, 0.03%)</title><rect x="864.3" y="1237" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="867.33" y="1247.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (7,165,794,934 samples, 0.88%)</title><rect x="1177.2" y="1477" width="10.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1180.16" y="1487.5" ></text>
</g>
<g >
<title>unmap_vmas (1,566,599,191 samples, 0.19%)</title><rect x="26.1" y="1365" width="2.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="29.12" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1429" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="15.43" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (268,959,635 samples, 0.03%)</title><rect x="25.4" y="1509" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.39" y="1519.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1,933,288,874 samples, 0.24%)</title><rect x="1106.1" y="1525" width="2.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1109.08" y="1535.5" ></text>
</g>
<g >
<title>[expr] (529,986,610 samples, 0.07%)</title><rect x="10.7" y="1589" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.69" y="1599.5" ></text>
</g>
<g >
<title>__switch_to (107,517,842 samples, 0.01%)</title><rect x="1168.1" y="1493" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1171.08" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (459,062,550 samples, 0.06%)</title><rect x="21.3" y="1253" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1525" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="1535.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (401,076,110 samples, 0.05%)</title><rect x="929.6" y="1333" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="932.57" y="1343.5" ></text>
</g>
<g >
<title>vfs_iter_write (1,321,486,513 samples, 0.16%)</title><rect x="28.7" y="1349" width="1.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="31.68" y="1359.5" ></text>
</g>
<g >
<title>rcu_core (3,184,483,756 samples, 0.39%)</title><rect x="78.8" y="1365" width="4.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="81.75" y="1375.5" ></text>
</g>
<g >
<title>__libc_start_main (170,225,626 samples, 0.02%)</title><rect x="12.0" y="1573" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="14.96" y="1583.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (3,070,722,218 samples, 0.38%)</title><rect x="288.4" y="1509" width="4.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="291.43" y="1519.5" ></text>
</g>
<g >
<title>rest_init (13,383,742,343 samples, 1.65%)</title><rect x="306.1" y="1509" width="19.4" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="309.05" y="1519.5" ></text>
</g>
<g >
<title>__libc_start_main (1,381,985,896 samples, 0.17%)</title><rect x="13.2" y="1573" width="2.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="16.21" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (34,206,946,864 samples, 4.21%)</title><rect x="892.8" y="1413" width="49.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="895.85" y="1423.5" >do_sy..</text>
</g>
<g >
<title>kmem_cache_free (203,828,248 samples, 0.03%)</title><rect x="940.7" y="1285" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="943.66" y="1295.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (197,095,347 samples, 0.02%)</title><rect x="1055.1" y="1573" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1058.09" y="1583.5" ></text>
</g>
<g >
<title>__alloc_pages (73,581,147 samples, 0.01%)</title><rect x="17.6" y="1269" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="20.64" y="1279.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (6,487,795,170 samples, 0.80%)</title><rect x="66.2" y="1397" width="9.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="69.15" y="1407.5" ></text>
</g>
<g >
<title>__memset (79,163,451 samples, 0.01%)</title><rect x="901.5" y="1269" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="904.54" y="1279.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1,933,288,874 samples, 0.24%)</title><rect x="1106.1" y="1557" width="2.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1109.08" y="1567.5" ></text>
</g>
<g >
<title>schedule (13,214,453,825 samples, 1.62%)</title><rect x="958.2" y="1301" width="19.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="961.20" y="1311.5" ></text>
</g>
<g >
<title>rb_erase (134,602,421 samples, 0.02%)</title><rect x="298.2" y="1461" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="301.22" y="1471.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1,653,625,253 samples, 0.20%)</title><rect x="289.3" y="1445" width="2.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="292.28" y="1455.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (285,329,460 samples, 0.04%)</title><rect x="1177.2" y="1397" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1180.24" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_read (235,447,312 samples, 0.03%)</title><rect x="25.0" y="1461" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="27.97" y="1471.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (81,590,737 samples, 0.01%)</title><rect x="15.9" y="1573" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="18.93" y="1583.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (104,104,916 samples, 0.01%)</title><rect x="1106.2" y="1349" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1109.16" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (651,211,760 samples, 0.08%)</title><rect x="22.3" y="1573" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.28" y="1583.5" ></text>
</g>
<g >
<title>file_free_rcu (292,605,811 samples, 0.04%)</title><rect x="1118.3" y="1445" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1121.29" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (278,790,616 samples, 0.03%)</title><rect x="1175.7" y="1557" width="0.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1178.70" y="1567.5" ></text>
</g>
<g >
<title>__schedule (4,279,639,347 samples, 0.53%)</title><rect x="862.9" y="1301" width="6.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="865.94" y="1311.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (83,415,838 samples, 0.01%)</title><rect x="875.6" y="1445" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="878.58" y="1455.5" ></text>
</g>
<g >
<title>rcu_do_batch (451,449,289 samples, 0.06%)</title><rect x="1124.0" y="1349" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1126.97" y="1359.5" ></text>
</g>
<g >
<title>update_process_times (148,117,240 samples, 0.02%)</title><rect x="483.5" y="1445" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="486.49" y="1455.5" ></text>
</g>
<g >
<title>getgrgid_r (105,152,184 samples, 0.01%)</title><rect x="13.5" y="1461" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="16.46" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,260,357,527 samples, 0.15%)</title><rect x="671.3" y="1525" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="674.34" y="1535.5" ></text>
</g>
<g >
<title>update_cfs_group (94,907,775 samples, 0.01%)</title><rect x="1122.1" y="1269" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1125.13" y="1279.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (354,012,113 samples, 0.04%)</title><rect x="867.0" y="1205" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="870.03" y="1215.5" ></text>
</g>
<g >
<title>__put_user_8 (208,958,634 samples, 0.03%)</title><rect x="928.6" y="1333" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="931.62" y="1343.5" ></text>
</g>
<g >
<title>available_idle_cpu (173,978,213 samples, 0.02%)</title><rect x="879.0" y="1285" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="882.00" y="1295.5" ></text>
</g>
<g >
<title>clock_gettime@plt (399,611,499 samples, 0.05%)</title><rect x="724.1" y="1493" width="0.6" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="727.15" y="1503.5" ></text>
</g>
<g >
<title>i_callback (768,400,490 samples, 0.09%)</title><rect x="81.3" y="1333" width="1.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="84.32" y="1343.5" ></text>
</g>
<g >
<title>do_futex (266,041,454 samples, 0.03%)</title><rect x="25.4" y="1445" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="28.39" y="1455.5" ></text>
</g>
<g >
<title>__libc_fork (1,817,808,867 samples, 0.22%)</title><rect x="17.3" y="1493" width="2.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="20.32" y="1503.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (286,252,687 samples, 0.04%)</title><rect x="738.2" y="1509" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="741.21" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (191,276,419 samples, 0.02%)</title><rect x="12.9" y="1541" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.93" y="1551.5" ></text>
</g>
<g >
<title>sock_free_inode (729,791,814 samples, 0.09%)</title><rect x="56.3" y="1429" width="1.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="59.27" y="1439.5" ></text>
</g>
<g >
<title>__schedule (154,750,419 samples, 0.02%)</title><rect x="58.4" y="1509" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="61.36" y="1519.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,020,791,803 samples, 0.13%)</title><rect x="306.8" y="1397" width="1.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="309.78" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (435,041,043 samples, 0.05%)</title><rect x="21.3" y="1189" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="1199.5" ></text>
</g>
<g >
<title>arch_call_rest_init (2,857,896,225 samples, 0.35%)</title><rect x="1170.3" y="1525" width="4.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1173.26" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="629" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="639.5" ></text>
</g>
<g >
<title>ttwu_do_activate (637,681,592 samples, 0.08%)</title><rect x="1069.2" y="1333" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1072.19" y="1343.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1,497,727,114 samples, 0.18%)</title><rect x="26.2" y="1317" width="2.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="29.22" y="1327.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,026,440,200 samples, 0.13%)</title><rect x="870.6" y="1381" width="1.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="873.64" y="1391.5" ></text>
</g>
<g >
<title>filemap_read (71,232,017 samples, 0.01%)</title><rect x="818.3" y="1205" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="821.30" y="1215.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (356,742,117 samples, 0.04%)</title><rect x="966.4" y="1205" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="969.43" y="1215.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (80,194,084 samples, 0.01%)</title><rect x="942.6" y="1429" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="945.60" y="1439.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (209,208,637 samples, 0.03%)</title><rect x="71.9" y="1253" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="74.91" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1029" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1039.5" ></text>
</g>
<g >
<title>[perf-407.map] (3,162,838,553 samples, 0.39%)</title><rect x="16.4" y="1589" width="4.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="19.45" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (656,026,462 samples, 0.08%)</title><rect x="14.2" y="1477" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.19" y="1487.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (10,111,544,929 samples, 1.24%)</title><rect x="927.8" y="1381" width="14.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="930.76" y="1391.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectGetOwnPropertyDescriptors (146,692,482 samples, 0.02%)</title><rect x="17.0" y="1557" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="20.01" y="1567.5" ></text>
</g>
<g >
<title>tick_program_event (1,081,495,304 samples, 0.13%)</title><rect x="76.4" y="1397" width="1.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="79.36" y="1407.5" ></text>
</g>
<g >
<title>do_filp_open (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1317" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="15.43" y="1327.5" ></text>
</g>
<g >
<title>[bash] (184,497,365 samples, 0.02%)</title><rect x="1061.7" y="1333" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1064.72" y="1343.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (171,666,366 samples, 0.02%)</title><rect x="946.3" y="1397" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="949.31" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (352,367,225 samples, 0.04%)</title><rect x="1062.1" y="1461" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.13" y="1471.5" ></text>
</g>
<g >
<title>clear_inode (252,593,575 samples, 0.03%)</title><rect x="935.7" y="1221" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="938.69" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (257,701,202 samples, 0.03%)</title><rect x="21.3" y="773" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.30" y="783.5" ></text>
</g>
<g >
<title>psi_group_change (355,716,060 samples, 0.04%)</title><rect x="868.3" y="1269" width="0.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="871.30" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (519,212,353 samples, 0.06%)</title><rect x="14.3" y="1429" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.27" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock (70,523,708 samples, 0.01%)</title><rect x="863.7" y="1285" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="866.75" y="1295.5" ></text>
</g>
<g >
<title>schedule (257,768,180 samples, 0.03%)</title><rect x="1176.3" y="1525" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1179.32" y="1535.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (1,175,888,473 samples, 0.14%)</title><rect x="956.1" y="1285" width="1.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="959.07" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (181,802,842 samples, 0.02%)</title><rect x="21.3" y="645" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.31" y="655.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (318,744,455 samples, 0.04%)</title><rect x="738.2" y="1557" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="741.21" y="1567.5" ></text>
</g>
<g >
<title>resched_curr (133,105,422 samples, 0.02%)</title><rect x="69.0" y="1301" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="72.01" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (152,213,842,578 samples, 18.72%)</title><rect x="62.9" y="1477" width="220.8" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="65.88" y="1487.5" >cpuidle_enter_state</text>
</g>
<g >
<title>begin_current_label_crit_section (75,910,547 samples, 0.01%)</title><rect x="911.3" y="1237" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="914.31" y="1247.5" ></text>
</g>
<g >
<title>os_xsave (243,835,954 samples, 0.03%)</title><rect x="872.2" y="1413" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="875.20" y="1423.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (4,259,766,603 samples, 0.52%)</title><rect x="748.4" y="1525" width="6.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="751.36" y="1535.5" ></text>
</g>
<g >
<title>update_cfs_group (623,251,514 samples, 0.08%)</title><rect x="963.7" y="1221" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="966.68" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="373" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="383.5" ></text>
</g>
<g >
<title>call_rcu (541,704,702 samples, 0.07%)</title><rect x="937.0" y="1173" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="939.99" y="1183.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (71,768,490 samples, 0.01%)</title><rect x="13.1" y="1461" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="16.07" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="597" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="607.5" ></text>
</g>
<g >
<title>[libc.so.6] (397,432,448 samples, 0.05%)</title><rect x="1062.1" y="1493" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.13" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1173" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="1183.5" ></text>
</g>
<g >
<title>alloc_inode (4,701,618,809 samples, 0.58%)</title><rect x="900.4" y="1317" width="6.8" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="903.37" y="1327.5" ></text>
</g>
<g >
<title>futex_wait_setup (825,868,200 samples, 0.10%)</title><rect x="869.3" y="1333" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="872.30" y="1343.5" ></text>
</g>
<g >
<title>cpuidle_enter (661,483,536 samples, 0.08%)</title><rect x="1188.5" y="1429" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1191.52" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="341" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1365" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="1375.5" ></text>
</g>
<g >
<title>intel_idle (2,733,349,235 samples, 0.34%)</title><rect x="1125.1" y="1461" width="4.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1128.13" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1477" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1487.5" ></text>
</g>
<g >
<title>reweight_entity (116,880,978 samples, 0.01%)</title><rect x="864.5" y="1221" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="867.50" y="1231.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (344,447,053 samples, 0.04%)</title><rect x="987.3" y="1413" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="990.28" y="1423.5" ></text>
</g>
<g >
<title>start_secondary (170,395,927,157 samples, 20.95%)</title><rect x="58.8" y="1573" width="247.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="61.81" y="1583.5" >start_secondary</text>
</g>
<g >
<title>_raw_spin_lock (79,305,259 samples, 0.01%)</title><rect x="971.2" y="1173" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="974.20" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="69" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="79.5" ></text>
</g>
<g >
<title>memcpy@plt (272,643,973 samples, 0.03%)</title><rect x="772.8" y="1509" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="775.80" y="1519.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (138,167,464 samples, 0.02%)</title><rect x="55.7" y="1397" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="58.72" y="1407.5" ></text>
</g>
<g >
<title>[bash] (231,345,169 samples, 0.03%)</title><rect x="1061.3" y="1237" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1064.35" y="1247.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (400,598,906 samples, 0.05%)</title><rect x="1103.6" y="1509" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1106.58" y="1519.5" ></text>
</g>
<g >
<title>perf (1,526,804,878 samples, 0.19%)</title><rect x="28.4" y="1605" width="2.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="31.42" y="1615.5" ></text>
</g>
<g >
<title>ct_idle_exit (316,138,338 samples, 0.04%)</title><rect x="85.4" y="1461" width="0.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="88.43" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="933" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="943.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (24,494,328,277 samples, 3.01%)</title><rect x="1068.0" y="1525" width="35.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1070.99" y="1535.5" >cpu..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="837" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="847.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (103,707,508 samples, 0.01%)</title><rect x="938.7" y="1221" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="941.68" y="1231.5" ></text>
</g>
<g >
<title>_raw_spin_lock (333,586,813 samples, 0.04%)</title><rect x="851.0" y="1349" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="853.97" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="677" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="645" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="655.5" ></text>
</g>
<g >
<title>wake_up_process (123,373,256 samples, 0.02%)</title><rect x="1170.4" y="1301" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1173.44" y="1311.5" ></text>
</g>
<g >
<title>__handle_mm_fault (250,949,014 samples, 0.03%)</title><rect x="24.1" y="1365" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="27.08" y="1375.5" ></text>
</g>
<g >
<title>poll_idle (1,354,667,907 samples, 0.17%)</title><rect x="1106.6" y="1397" width="2.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1109.63" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (346,286,454 samples, 0.04%)</title><rect x="1059.8" y="1589" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1062.81" y="1599.5" ></text>
</g>
<g >
<title>memcg_list_lru_alloc (323,439,339 samples, 0.04%)</title><rect x="918.0" y="1253" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="921.03" y="1263.5" ></text>
</g>
<g >
<title>NaClIsValidClockId (541,963,266 samples, 0.07%)</title><rect x="1043.8" y="1573" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1046.78" y="1583.5" ></text>
</g>
<g >
<title>wake_up_process (1,214,719,922 samples, 0.15%)</title><rect x="1121.2" y="1365" width="1.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1124.25" y="1375.5" ></text>
</g>
<g >
<title>start_kernel (719,854,347 samples, 0.09%)</title><rect x="1188.5" y="1541" width="1.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1191.50" y="1551.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (276,679,831 samples, 0.03%)</title><rect x="1170.4" y="1397" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1173.40" y="1407.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (233,529,847 samples, 0.03%)</title><rect x="986.7" y="1397" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="989.72" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1125" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1135.5" ></text>
</g>
<g >
<title>do_futex (2,738,114,591 samples, 0.34%)</title><rect x="876.1" y="1381" width="4.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="879.12" y="1391.5" ></text>
</g>
<g >
<title>arch_call_rest_init (13,383,742,343 samples, 1.65%)</title><rect x="306.1" y="1525" width="19.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="309.05" y="1535.5" ></text>
</g>
<g >
<title>refill_obj_stock (126,515,633 samples, 0.02%)</title><rect x="82.2" y="1269" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="85.21" y="1279.5" ></text>
</g>
<g >
<title>do_idle (2,848,654,873 samples, 0.35%)</title><rect x="1170.3" y="1477" width="4.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1173.26" y="1487.5" ></text>
</g>
<g >
<title>run_ksoftirqd (650,621,520 samples, 0.08%)</title><rect x="1118.2" y="1525" width="1.0" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1121.24" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (228,963,342 samples, 0.03%)</title><rect x="21.3" y="725" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="735.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (1,833,477,328 samples, 0.23%)</title><rect x="17.3" y="1509" width="2.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="20.32" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="421" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="431.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (86,849,758 samples, 0.01%)</title><rect x="1189.7" y="1285" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1192.73" y="1295.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (241,645,820 samples, 0.03%)</title><rect x="987.8" y="1525" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="990.81" y="1535.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::nonblock_accept (43,062,502,842 samples, 5.30%)</title><rect x="880.2" y="1461" width="62.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="883.23" y="1471.5" >rustpo..</text>
</g>
<g >
<title>[libc.so.6] (746,427,566 samples, 0.09%)</title><rect x="1055.8" y="1573" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1058.77" y="1583.5" ></text>
</g>
<g >
<title>schedule_idle (536,775,173 samples, 0.07%)</title><rect x="324.6" y="1461" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="327.56" y="1471.5" ></text>
</g>
<g >
<title>_compound_head (250,949,014 samples, 0.03%)</title><rect x="24.1" y="1333" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="27.08" y="1343.5" ></text>
</g>
<g >
<title>execute_command_internal (124,596,965 samples, 0.02%)</title><rect x="1061.2" y="1301" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1064.16" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (1,526,804,878 samples, 0.19%)</title><rect x="28.4" y="1589" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="31.42" y="1599.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (1,794,377,145 samples, 0.22%)</title><rect x="17.3" y="1365" width="2.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="20.34" y="1375.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineImpl::OptimizeGraph (133,176,285 samples, 0.02%)</title><rect x="24.5" y="1477" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="27.50" y="1487.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (78,821,630 samples, 0.01%)</title><rect x="1188.5" y="1397" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1191.54" y="1407.5" ></text>
</g>
<g >
<title>search_binary_handler (1,703,531,240 samples, 0.21%)</title><rect x="25.9" y="1477" width="2.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="28.92" y="1487.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (572,908,888 samples, 0.07%)</title><rect x="1123.9" y="1413" width="0.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1126.91" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="757" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="767.5" ></text>
</g>
<g >
<title>enqueue_entity (1,953,232,789 samples, 0.24%)</title><rect x="69.8" y="1285" width="2.8" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="72.82" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (589,515,892 samples, 0.07%)</title><rect x="14.2" y="1445" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.21" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (476,965,372 samples, 0.06%)</title><rect x="10.7" y="1477" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="1487.5" ></text>
</g>
<g >
<title>find_busiest_group (228,709,449 samples, 0.03%)</title><rect x="1178.1" y="1333" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1181.06" y="1343.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (397,128,227 samples, 0.05%)</title><rect x="1176.1" y="1541" width="0.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1179.12" y="1551.5" ></text>
</g>
<g >
<title>execute_command (124,596,965 samples, 0.02%)</title><rect x="1061.2" y="1317" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1064.16" y="1327.5" ></text>
</g>
<g >
<title>menu_select (542,979,244 samples, 0.07%)</title><rect x="1165.7" y="1493" width="0.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1168.66" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_free (84,928,828 samples, 0.01%)</title><rect x="1067.1" y="1429" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1070.15" y="1439.5" ></text>
</g>
<g >
<title>exc_page_fault (250,949,014 samples, 0.03%)</title><rect x="24.1" y="1413" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="27.08" y="1423.5" ></text>
</g>
<g >
<title>enqueue_task_fair (2,463,950,661 samples, 0.30%)</title><rect x="69.3" y="1301" width="3.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="72.35" y="1311.5" ></text>
</g>
<g >
<title>execute_command_internal (243,534,421 samples, 0.03%)</title><rect x="1061.3" y="1317" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1064.34" y="1327.5" ></text>
</g>
<g >
<title>vfs_read (160,553,375 samples, 0.02%)</title><rect x="1189.7" y="1397" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1192.67" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1413" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1061.80" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,067,294,149 samples, 0.13%)</title><rect x="734.2" y="1493" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="737.19" y="1503.5" ></text>
</g>
<g >
<title>arch_call_rest_init (719,854,347 samples, 0.09%)</title><rect x="1188.5" y="1525" width="1.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1191.50" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (530,471,188 samples, 0.07%)</title><rect x="891.9" y="1429" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="894.86" y="1439.5" ></text>
</g>
<g >
<title>ext4_writepages (83,097,659 samples, 0.01%)</title><rect x="58.7" y="1397" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="61.68" y="1407.5" ></text>
</g>
<g >
<title>ttwu_do_activate (874,787,494 samples, 0.11%)</title><rect x="1121.7" y="1333" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1124.66" y="1343.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::sleep (29,914,378,694 samples, 3.68%)</title><rect x="943.7" y="1445" width="43.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="946.72" y="1455.5" >std:..</text>
</g>
<g >
<title>sched_clock (76,276,235 samples, 0.01%)</title><rect x="74.3" y="1269" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="77.30" y="1279.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (293,205,042 samples, 0.04%)</title><rect x="82.9" y="1333" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="85.93" y="1343.5" ></text>
</g>
<g >
<title>intel_idle (12,879,857,889 samples, 1.58%)</title><rect x="86.0" y="1461" width="18.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="88.96" y="1471.5" ></text>
</g>
<g >
<title>schedule (4,483,104,753 samples, 0.55%)</title><rect x="862.8" y="1317" width="6.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="865.79" y="1327.5" ></text>
</g>
<g >
<title>run_rebalance_domains (244,907,884 samples, 0.03%)</title><rect x="1178.0" y="1381" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1181.04" y="1391.5" ></text>
</g>
<g >
<title>reweight_entity (71,072,466 samples, 0.01%)</title><rect x="290.6" y="1397" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="293.56" y="1407.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (212,970,820 samples, 0.03%)</title><rect x="914.5" y="1269" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="917.54" y="1279.5" ></text>
</g>
<g >
<title>wake_up_q (1,374,273,528 samples, 0.17%)</title><rect x="878.1" y="1349" width="2.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="881.09" y="1359.5" ></text>
</g>
<g >
<title>make_kuid (162,964,220 samples, 0.02%)</title><rect x="901.2" y="1285" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="904.15" y="1295.5" ></text>
</g>
<g >
<title>bprm_execve (111,725,774 samples, 0.01%)</title><rect x="1062.9" y="1525" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1065.88" y="1535.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (667,546,415 samples, 0.08%)</title><rect x="21.2" y="1541" width="1.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="24.19" y="1551.5" ></text>
</g>
<g >
<title>rcu_do_batch (198,390,539 samples, 0.02%)</title><rect x="307.8" y="1285" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="310.82" y="1295.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (543,357,660 samples, 0.07%)</title><rect x="857.8" y="1381" width="0.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="860.82" y="1391.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (758,633,683 samples, 0.09%)</title><rect x="1166.5" y="1525" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1169.55" y="1535.5" ></text>
</g>
<g >
<title>inode_free_by_rcu (313,856,772 samples, 0.04%)</title><rect x="57.3" y="1445" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="60.33" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (162,072,539 samples, 0.02%)</title><rect x="21.3" y="581" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.31" y="591.5" ></text>
</g>
<g >
<title>schedule_idle (141,771,903 samples, 0.02%)</title><rect x="1174.2" y="1461" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1177.17" y="1471.5" ></text>
</g>
<g >
<title>native_sched_clock (207,327,112 samples, 0.03%)</title><rect x="856.8" y="1253" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="859.81" y="1263.5" ></text>
</g>
<g >
<title>kmem_cache_free (96,903,553 samples, 0.01%)</title><rect x="1118.6" y="1429" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1121.58" y="1439.5" ></text>
</g>
<g >
<title>read_tsc (134,201,787 samples, 0.02%)</title><rect x="78.2" y="1397" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="81.23" y="1407.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (601,625,148 samples, 0.07%)</title><rect x="813.9" y="1509" width="0.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="816.86" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (196,906,008 samples, 0.02%)</title><rect x="12.9" y="1589" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.93" y="1599.5" ></text>
</g>
<g >
<title>pick_next_task (1,734,911,489 samples, 0.21%)</title><rect x="297.4" y="1493" width="2.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="300.42" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25,064,017,055 samples, 3.08%)</title><rect x="948.8" y="1397" width="36.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="951.80" y="1407.5" >ent..</text>
</g>
<g >
<title>__sched_yield (7,190,460,826 samples, 0.88%)</title><rect x="848.4" y="1429" width="10.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="851.42" y="1439.5" ></text>
</g>
<g >
<title>wb_workfn (87,564,122 samples, 0.01%)</title><rect x="58.7" y="1509" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="61.67" y="1519.5" ></text>
</g>
<g >
<title>ct_kernel_exit_state (104,016,311 samples, 0.01%)</title><rect x="85.2" y="1445" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="88.24" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (126,982,019 samples, 0.02%)</title><rect x="13.8" y="1477" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.79" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (75,605,098 samples, 0.01%)</title><rect x="28.5" y="1509" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="31.46" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="197" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (148,117,240 samples, 0.02%)</title><rect x="483.5" y="1493" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="486.49" y="1503.5" ></text>
</g>
<g >
<title>copy_process (1,801,324,313 samples, 0.22%)</title><rect x="17.3" y="1381" width="2.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="20.34" y="1391.5" ></text>
</g>
<g >
<title>aeProcessEvents.part.0 (284,540,081 samples, 0.03%)</title><rect x="1189.6" y="1525" width="0.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1192.57" y="1535.5" ></text>
</g>
<g >
<title>__switch_to (418,658,353 samples, 0.05%)</title><rect x="961.1" y="1269" width="0.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="964.10" y="1279.5" ></text>
</g>
<g >
<title>update_load_avg (98,909,515 samples, 0.01%)</title><rect x="1069.7" y="1269" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1072.72" y="1279.5" ></text>
</g>
<g >
<title>memcpy@plt (295,892,399 samples, 0.04%)</title><rect x="755.3" y="1525" width="0.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="758.33" y="1535.5" ></text>
</g>
<g >
<title>sched_mm_cid_migrate_to (78,636,109 samples, 0.01%)</title><rect x="292.4" y="1461" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="295.36" y="1471.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (298,525,602 samples, 0.04%)</title><rect x="27.9" y="1269" width="0.4" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="30.89" y="1279.5" ></text>
</g>
<g >
<title>call_rcu (599,828,684 samples, 0.07%)</title><rect x="931.5" y="1301" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="934.47" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1253" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (410,491,624 samples, 0.05%)</title><rect x="21.3" y="1077" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (162,072,539 samples, 0.02%)</title><rect x="21.3" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="623.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (1,833,477,328 samples, 0.23%)</title><rect x="17.3" y="1525" width="2.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="20.32" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="645" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="655.5" ></text>
</g>
<g >
<title>[libc.so.6] (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1477" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1061.80" y="1487.5" ></text>
</g>
<g >
<title>init_once (70,100,560 samples, 0.01%)</title><rect x="903.8" y="1189" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="906.84" y="1199.5" ></text>
</g>
<g >
<title>___slab_alloc (434,625,119 samples, 0.05%)</title><rect x="903.3" y="1269" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="906.32" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1365" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1375.5" ></text>
</g>
<g >
<title>psi_group_change (278,334,138 samples, 0.03%)</title><rect x="291.8" y="1429" width="0.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="294.77" y="1439.5" ></text>
</g>
<g >
<title>dup_mmap (1,767,217,319 samples, 0.22%)</title><rect x="17.3" y="1349" width="2.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="20.34" y="1359.5" ></text>
</g>
<g >
<title>command_substitute (178,334,697 samples, 0.02%)</title><rect x="1061.7" y="1317" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1064.72" y="1327.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (79,506,612 samples, 0.01%)</title><rect x="1170.7" y="1349" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1173.67" y="1359.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (161,628,843 samples, 0.02%)</title><rect x="1068.1" y="1477" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1071.11" y="1487.5" ></text>
</g>
<g >
<title>rcu_core_si (139,360,047 samples, 0.02%)</title><rect x="1176.1" y="1493" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1179.12" y="1503.5" ></text>
</g>
<g >
<title>CopyBundleTails (286,252,687 samples, 0.04%)</title><rect x="738.2" y="1493" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="741.21" y="1503.5" ></text>
</g>
<g >
<title>do_dentry_open (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1189" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="15.43" y="1199.5" ></text>
</g>
<g >
<title>__put_user_nocheck_4 (278,790,616 samples, 0.03%)</title><rect x="1175.7" y="1493" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1178.70" y="1503.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_duration_since (86,683,354 samples, 0.01%)</title><rect x="987.2" y="1413" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="990.16" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1013" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="1023.5" ></text>
</g>
<g >
<title>do_idle (1,928,755,904 samples, 0.24%)</title><rect x="1106.1" y="1477" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1109.08" y="1487.5" ></text>
</g>
<g >
<title>sched_clock (172,227,953 samples, 0.02%)</title><rect x="302.5" y="1461" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="305.47" y="1471.5" ></text>
</g>
<g >
<title>std::time::Instant::now (344,447,053 samples, 0.04%)</title><rect x="987.3" y="1445" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="990.28" y="1455.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (177,169,316 samples, 0.02%)</title><rect x="933.7" y="1237" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="936.74" y="1247.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (118,832,439 samples, 0.01%)</title><rect x="302.5" y="1445" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="305.55" y="1455.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (105,926,946 samples, 0.01%)</title><rect x="865.2" y="1221" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="868.23" y="1231.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (86,426,068 samples, 0.01%)</title><rect x="323.7" y="1365" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="326.72" y="1375.5" ></text>
</g>
<g >
<title>refill_obj_stock (95,691,304 samples, 0.01%)</title><rect x="81.1" y="1285" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="84.13" y="1295.5" ></text>
</g>
<g >
<title>x509_pubkey_ex_d2i_ex (266,799,532 samples, 0.03%)</title><rect x="20.1" y="1365" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="23.13" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="949" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="959.5" ></text>
</g>
<g >
<title>search_binary_handler (111,725,774 samples, 0.01%)</title><rect x="1062.9" y="1477" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1065.88" y="1487.5" ></text>
</g>
<g >
<title>__sys_accept4 (23,573,942,443 samples, 2.90%)</title><rect x="893.0" y="1381" width="34.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="896.03" y="1391.5" >__..</text>
</g>
<g >
<title>record__mmap_read_evlist (1,423,502,299 samples, 0.18%)</title><rect x="28.6" y="1541" width="2.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="31.57" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="677" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_futex (266,041,454 samples, 0.03%)</title><rect x="25.4" y="1461" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="28.39" y="1471.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (103,940,126 samples, 0.01%)</title><rect x="81.8" y="1269" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="84.81" y="1279.5" ></text>
</g>
<g >
<title>___slab_alloc (278,653,755 samples, 0.03%)</title><rect x="912.4" y="1269" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="915.36" y="1279.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1,703,531,240 samples, 0.21%)</title><rect x="25.9" y="1541" width="2.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="28.92" y="1551.5" ></text>
</g>
<g >
<title>cpu_startup_entry (170,292,841,399 samples, 20.94%)</title><rect x="58.8" y="1557" width="247.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="61.81" y="1567.5" >cpu_startup_entry</text>
</g>
<g >
<title>shell_execve (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1461" width="0.4" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="15.43" y="1471.5" ></text>
</g>
<g >
<title>mas_wr_walk (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1301" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1061.80" y="1311.5" ></text>
</g>
<g >
<title>vfs_read (75,568,440 samples, 0.01%)</title><rect x="818.3" y="1317" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="821.30" y="1327.5" ></text>
</g>
<g >
<title>clock_nanosleep (462,664,243 samples, 0.06%)</title><rect x="1057.4" y="1573" width="0.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1060.37" y="1583.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (300,743,697 samples, 0.04%)</title><rect x="906.6" y="1253" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="909.62" y="1263.5" ></text>
</g>
<g >
<title>v8::internal::Heap::Scavenge (197,168,189 samples, 0.02%)</title><rect x="23.5" y="1445" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="26.50" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (75,283,902 samples, 0.01%)</title><rect x="11.6" y="1493" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.60" y="1503.5" ></text>
</g>
<g >
<title>slab_update_freelist.constprop.0.isra.0 (130,427,779 samples, 0.02%)</title><rect x="80.8" y="1285" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="83.77" y="1295.5" ></text>
</g>
<g >
<title>futex_wake (2,597,237,028 samples, 0.32%)</title><rect x="876.3" y="1365" width="3.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="879.32" y="1375.5" ></text>
</g>
<g >
<title>cpuidle_reflect (70,722,391 samples, 0.01%)</title><rect x="284.2" y="1509" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="287.23" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="165" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="175.5" ></text>
</g>
<g >
<title>enqueue_task (99,861,574 samples, 0.01%)</title><rect x="1170.5" y="1253" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1173.46" y="1263.5" ></text>
</g>
<g >
<title>lind_pread (119,951,715 samples, 0.01%)</title><rect x="818.3" y="1525" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="821.26" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="693" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1077" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1087.5" ></text>
</g>
<g >
<title>ep_poll (278,790,616 samples, 0.03%)</title><rect x="1175.7" y="1509" width="0.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1178.70" y="1519.5" ></text>
</g>
<g >
<title>docker (182,948,185 samples, 0.02%)</title><rect x="10.3" y="1605" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="13.32" y="1615.5" ></text>
</g>
<g >
<title>path_openat (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1301" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="15.43" y="1311.5" ></text>
</g>
<g >
<title>NaClLog (1,331,088,003 samples, 0.16%)</title><rect x="1044.6" y="1573" width="1.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1047.57" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (130,367,317 samples, 0.02%)</title><rect x="67.6" y="1333" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="70.55" y="1343.5" ></text>
</g>
<g >
<title>file_free_rcu (252,762,461 samples, 0.03%)</title><rect x="1066.9" y="1445" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1069.90" y="1455.5" ></text>
</g>
<g >
<title>getgrgid_r (77,160,857 samples, 0.01%)</title><rect x="13.7" y="1477" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="16.66" y="1487.5" ></text>
</g>
<g >
<title>native_sched_clock (114,506,527 samples, 0.01%)</title><rect x="283.5" y="1413" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="286.53" y="1423.5" ></text>
</g>
<g >
<title>CompareAndSwap (1,539,703,786 samples, 0.19%)</title><rect x="1035.6" y="1573" width="2.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1038.62" y="1583.5" ></text>
</g>
<g >
<title>node::crypto::SecureContext::AddCACert (367,906,100 samples, 0.05%)</title><rect x="20.0" y="1557" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="22.99" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (114,839,854 samples, 0.01%)</title><rect x="12.0" y="1445" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.03" y="1455.5" ></text>
</g>
<g >
<title>__switch_to (367,786,350 samples, 0.05%)</title><rect x="296.1" y="1493" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="299.08" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1461" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (514,815,978 samples, 0.06%)</title><rect x="21.3" y="1413" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.29" y="1423.5" ></text>
</g>
<g >
<title>vfs_read (228,531,078 samples, 0.03%)</title><rect x="52.5" y="1525" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="55.55" y="1535.5" ></text>
</g>
<g >
<title>map_id_range_down (101,540,506 samples, 0.01%)</title><rect x="901.0" y="1269" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="904.01" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="437" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="447.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1,117,836,983 samples, 0.14%)</title><rect x="905.5" y="1269" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="908.49" y="1279.5" ></text>
</g>
<g >
<title>uv__async_io (274,514,315 samples, 0.03%)</title><rect x="23.4" y="1557" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="26.42" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (73,343,683 samples, 0.01%)</title><rect x="1062.0" y="1461" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.02" y="1471.5" ></text>
</g>
<g >
<title>kmem_cache_free (717,663,707 samples, 0.09%)</title><rect x="81.4" y="1301" width="1.0" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="84.39" y="1311.5" ></text>
</g>
<g >
<title>poll_idle (1,962,942,687 samples, 0.24%)</title><rect x="1171.1" y="1397" width="2.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1174.13" y="1407.5" ></text>
</g>
<g >
<title>ret_from_fork (596,627,108 samples, 0.07%)</title><rect x="1066.8" y="1573" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1069.84" y="1583.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (120,319,602 samples, 0.01%)</title><rect x="17.0" y="1541" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="20.03" y="1551.5" ></text>
</g>
<g >
<title>exec_mmap (1,703,531,240 samples, 0.21%)</title><rect x="25.9" y="1429" width="2.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="28.92" y="1439.5" ></text>
</g>
<g >
<title>load_balance (228,709,449 samples, 0.03%)</title><rect x="1178.1" y="1349" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1181.06" y="1359.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (116,717,546,275 samples, 14.35%)</title><rect x="818.4" y="1477" width="169.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="821.44" y="1487.5" >rustposix::safeposix:..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,011,046,381 samples, 0.12%)</title><rect x="870.7" y="1365" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="873.66" y="1375.5" ></text>
</g>
<g >
<title>__mmap (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1461" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1061.80" y="1471.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (523,873,550 samples, 0.06%)</title><rect x="1070.7" y="1413" width="0.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1073.72" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="373" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1541" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1551.5" ></text>
</g>
<g >
<title>[grep] (170,225,626 samples, 0.02%)</title><rect x="12.0" y="1589" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="14.96" y="1599.5" ></text>
</g>
<g >
<title>dequeue_entity (1,099,505,307 samples, 0.14%)</title><rect x="864.0" y="1253" width="1.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="867.04" y="1263.5" ></text>
</g>
<g >
<title>node (8,884,387,653 samples, 1.09%)</title><rect x="15.5" y="1605" width="12.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="18.53" y="1615.5" ></text>
</g>
<g >
<title>enqueue_task (169,487,546 samples, 0.02%)</title><rect x="1177.4" y="1317" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1180.36" y="1327.5" ></text>
</g>
<g >
<title>enqueue_task (2,198,692,300 samples, 0.27%)</title><rect x="289.1" y="1461" width="3.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="292.14" y="1471.5" ></text>
</g>
<g >
<title>fput (242,157,634 samples, 0.03%)</title><rect x="894.8" y="1349" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="897.76" y="1359.5" ></text>
</g>
<g >
<title>psi_task_switch (145,872,699 samples, 0.02%)</title><rect x="325.0" y="1429" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="328.04" y="1439.5" ></text>
</g>
<g >
<title>clock_gettime (246,864,888 samples, 0.03%)</title><rect x="331.5" y="1573" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="334.48" y="1583.5" ></text>
</g>
<g >
<title>sock_close (494,340,199 samples, 0.06%)</title><rect x="941.0" y="1301" width="0.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="943.95" y="1311.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (353,872,737 samples, 0.04%)</title><rect x="889.6" y="1365" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="892.57" y="1375.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (1,182,124,091 samples, 0.15%)</title><rect x="647.4" y="1557" width="1.7" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="650.35" y="1567.5" ></text>
</g>
<g >
<title>native_load_tls (75,345,599 samples, 0.01%)</title><rect x="53.1" y="1589" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="56.05" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (123,453,270 samples, 0.02%)</title><rect x="12.0" y="1493" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.03" y="1503.5" ></text>
</g>
<g >
<title>update_rq_clock (279,046,132 samples, 0.03%)</title><rect x="292.5" y="1477" width="0.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="295.48" y="1487.5" ></text>
</g>
<g >
<title>wake_up_process (407,964,253 samples, 0.05%)</title><rect x="306.9" y="1301" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="309.86" y="1311.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (3,817,432,253 samples, 0.47%)</title><rect x="934.1" y="1269" width="5.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="937.08" y="1279.5" ></text>
</g>
<g >
<title>select_task_rq_fair (324,596,066 samples, 0.04%)</title><rect x="878.8" y="1317" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="881.79" y="1327.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1,723,032,842 samples, 0.21%)</title><rect x="486.0" y="1573" width="2.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="489.02" y="1583.5" ></text>
</g>
<g >
<title>wake_up_process (77,319,999 samples, 0.01%)</title><rect x="1165.1" y="1349" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1168.11" y="1359.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (42,321,799,536 samples, 5.20%)</title><rect x="676.8" y="1525" width="61.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="679.78" y="1535.5" >NaClSy..</text>
</g>
<g >
<title>node::crypto::SecureContext::SetCACert (307,264,854 samples, 0.04%)</title><rect x="20.1" y="1541" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="23.07" y="1551.5" ></text>
</g>
<g >
<title>pick_next_task (136,675,428 samples, 0.02%)</title><rect x="324.8" y="1429" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="327.79" y="1439.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (341,359,981,410 samples, 41.97%)</title><rect x="492.9" y="1573" width="495.3" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="495.85" y="1583.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (285,265,764 samples, 0.04%)</title><rect x="1175.7" y="1589" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1178.70" y="1599.5" ></text>
</g>
<g >
<title>NaClLog (1,873,844,464 samples, 0.23%)</title><rect x="815.1" y="1525" width="2.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="818.09" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="741" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="751.5" ></text>
</g>
<g >
<title>tick_sched_timer (148,117,240 samples, 0.02%)</title><rect x="483.5" y="1477" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="486.49" y="1487.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (71,232,017 samples, 0.01%)</title><rect x="818.3" y="1237" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="821.30" y="1247.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (82,246,221 samples, 0.01%)</title><rect x="76.1" y="1397" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="79.13" y="1407.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (413,623,422 samples, 0.05%)</title><rect x="738.7" y="1557" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="741.69" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (94,456,945 samples, 0.01%)</title><rect x="12.3" y="1557" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="15.30" y="1567.5" ></text>
</g>
<g >
<title>psi_group_change (84,972,944 samples, 0.01%)</title><rect x="300.3" y="1493" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="303.32" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="853" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="863.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (8,622,299,043 samples, 1.06%)</title><rect x="743.2" y="1541" width="12.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="746.25" y="1551.5" ></text>
</g>
<g >
<title>ttwu_do_activate (307,952,953 samples, 0.04%)</title><rect x="1103.7" y="1477" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1106.66" y="1487.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (87,811,180 samples, 0.01%)</title><rect x="1102.5" y="1381" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1105.54" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="965" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="975.5" ></text>
</g>
<g >
<title>non-virtual thunk to v8::internal::CancelableTask::Run (421,857,673 samples, 0.05%)</title><rect x="24.1" y="1541" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="27.08" y="1551.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (852,969,272 samples, 0.10%)</title><rect x="1177.2" y="1461" width="1.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1180.21" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="725" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="735.5" ></text>
</g>
<g >
<title>task_work_add (216,505,300 samples, 0.03%)</title><rect x="894.8" y="1333" width="0.3" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="897.79" y="1343.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (71,232,017 samples, 0.01%)</title><rect x="818.3" y="1253" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="821.30" y="1263.5" ></text>
</g>
<g >
<title>swapper (10,428,983,992 samples, 1.28%)</title><rect x="1174.4" y="1605" width="15.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1177.42" y="1615.5" ></text>
</g>
<g >
<title>[[heap]] (74,091,412 samples, 0.01%)</title><rect x="12.8" y="1589" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="15.81" y="1599.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (119,094,764 samples, 0.01%)</title><rect x="1169.6" y="1493" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1172.61" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (352,367,225 samples, 0.04%)</title><rect x="1062.1" y="1445" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.13" y="1455.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268,408,525 samples, 0.03%)</title><rect x="1059.2" y="1477" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1062.18" y="1487.5" ></text>
</g>
<g >
<title>[bash] (720,702,247 samples, 0.09%)</title><rect x="1060.9" y="1525" width="1.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1063.95" y="1535.5" ></text>
</g>
<g >
<title>sched_clock_cpu (129,005,452 samples, 0.02%)</title><rect x="74.8" y="1317" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="77.81" y="1327.5" ></text>
</g>
<g >
<title>call_function_single_prep_ipi (194,787,106 samples, 0.02%)</title><rect x="879.5" y="1285" width="0.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="882.51" y="1295.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::OnUvRead (90,387,299 samples, 0.01%)</title><rect x="23.9" y="1509" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="26.89" y="1519.5" ></text>
</g>
<g >
<title>security_file_free (403,065,383 samples, 0.05%)</title><rect x="940.4" y="1301" width="0.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="943.37" y="1311.5" ></text>
</g>
<g >
<title>__alloc_pages (125,909,504 samples, 0.02%)</title><rect x="903.5" y="1205" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="906.55" y="1215.5" ></text>
</g>
<g >
<title>sock_free_inode (78,458,426 samples, 0.01%)</title><rect x="1124.3" y="1317" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1127.35" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="981" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="991.5" ></text>
</g>
<g >
<title>v8::internal::BackingStore::~BackingStore (250,949,014 samples, 0.03%)</title><rect x="24.1" y="1477" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="27.08" y="1487.5" ></text>
</g>
<g >
<title>file_free_rcu (285,817,103 samples, 0.04%)</title><rect x="282.7" y="1317" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="285.68" y="1327.5" ></text>
</g>
<g >
<title>update_load_avg (380,407,044 samples, 0.05%)</title><rect x="865.0" y="1237" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="868.02" y="1247.5" ></text>
</g>
<g >
<title>__pmd_alloc (101,673,879 samples, 0.01%)</title><rect x="17.6" y="1301" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="20.64" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="661" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="671.5" ></text>
</g>
<g >
<title>enqueue_task (77,614,992 samples, 0.01%)</title><rect x="1187.8" y="1461" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1190.84" y="1471.5" ></text>
</g>
<g >
<title>[bash] (573,847,398 samples, 0.07%)</title><rect x="1061.2" y="1429" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1064.16" y="1439.5" ></text>
</g>
<g >
<title>tick_program_event (1,158,033,718 samples, 0.14%)</title><rect x="956.1" y="1269" width="1.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="959.09" y="1279.5" ></text>
</g>
<g >
<title>tick_irq_enter (329,752,696 samples, 0.04%)</title><rect x="78.1" y="1413" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="81.10" y="1423.5" ></text>
</g>
<g >
<title>intel_idle (809,520,244 samples, 0.10%)</title><rect x="1178.5" y="1461" width="1.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1181.49" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="517" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="527.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (76,300,043 samples, 0.01%)</title><rect x="889.3" y="1381" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="892.30" y="1391.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (670,855,653 samples, 0.08%)</title><rect x="834.0" y="1445" width="1.0" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="836.99" y="1455.5" ></text>
</g>
<g >
<title>5_ (76,533,419 samples, 0.01%)</title><rect x="10.0" y="1605" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" ></text>
</g>
<g >
<title>__sys_sendto (218,564,772 samples, 0.03%)</title><rect x="987.8" y="1429" width="0.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="990.84" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,194,005,951 samples, 0.15%)</title><rect x="24.1" y="1573" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.05" y="1583.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (8,975,320,114 samples, 1.10%)</title><rect x="907.3" y="1333" width="13.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="910.34" y="1343.5" ></text>
</g>
<g >
<title>find_busiest_group (582,307,403 samples, 0.07%)</title><rect x="971.4" y="1205" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="974.37" y="1215.5" ></text>
</g>
<g >
<title>update_curr (130,667,794 samples, 0.02%)</title><rect x="856.0" y="1301" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="858.97" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="325" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="335.5" ></text>
</g>
<g >
<title>__nanosleep (160,258,078 samples, 0.02%)</title><rect x="1056.9" y="1573" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1059.93" y="1583.5" ></text>
</g>
<g >
<title>NaClSysClockGetCommon (295,919,779 samples, 0.04%)</title><rect x="1050.7" y="1573" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1053.71" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (228,963,342 samples, 0.03%)</title><rect x="21.3" y="693" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (512,832,712 samples, 0.06%)</title><rect x="10.7" y="1509" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="1519.5" ></text>
</g>
<g >
<title>PEM_ASN1_read_bio (303,149,466 samples, 0.04%)</title><rect x="20.1" y="1525" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="23.07" y="1535.5" ></text>
</g>
<g >
<title>enqueue_task_fair (152,666,047 samples, 0.02%)</title><rect x="282.1" y="1285" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="285.11" y="1295.5" ></text>
</g>
<g >
<title>intel_idle (213,748,972 samples, 0.03%)</title><rect x="1170.8" y="1397" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1173.81" y="1407.5" ></text>
</g>
<g >
<title>__put_user_8 (268,398,500 samples, 0.03%)</title><rect x="980.6" y="1301" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="983.56" y="1311.5" ></text>
</g>
<g >
<title>i_callback (99,873,361 samples, 0.01%)</title><rect x="283.1" y="1317" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="286.10" y="1327.5" ></text>
</g>
<g >
<title>enqueue_task (93,713,296 samples, 0.01%)</title><rect x="324.3" y="1397" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="327.31" y="1407.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (435,641,021 samples, 0.05%)</title><rect x="971.6" y="1173" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="974.55" y="1183.5" ></text>
</g>
<g >
<title>do_statx (114,249,117 samples, 0.01%)</title><rect x="13.8" y="1429" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="16.79" y="1439.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (116,157,547 samples, 0.01%)</title><rect x="1102.5" y="1413" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1105.54" y="1423.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (585,086,654 samples, 0.07%)</title><rect x="931.5" y="1285" width="0.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="934.47" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="901" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="911.5" ></text>
</g>
<g >
<title>accept (35,968,312,122 samples, 4.42%)</title><rect x="890.5" y="1445" width="52.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="893.53" y="1455.5" >accept</text>
</g>
<g >
<title>NaClCopyOutToUser (148,121,015 samples, 0.02%)</title><rect x="676.6" y="1525" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="679.56" y="1535.5" ></text>
</g>
<g >
<title>enqueue_task (3,604,863,481 samples, 0.44%)</title><rect x="69.2" y="1317" width="5.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="72.20" y="1327.5" ></text>
</g>
<g >
<title>schedule (261,556,280 samples, 0.03%)</title><rect x="25.4" y="1397" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="28.40" y="1407.5" ></text>
</g>
<g >
<title>tick_program_event (73,506,485 samples, 0.01%)</title><rect x="282.5" y="1381" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="285.51" y="1391.5" ></text>
</g>
<g >
<title>save_fpregs_to_fpstate (125,275,884 samples, 0.02%)</title><rect x="986.5" y="1397" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="989.53" y="1407.5" ></text>
</g>
<g >
<title>ext4_do_writepages (83,097,659 samples, 0.01%)</title><rect x="58.7" y="1381" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="61.68" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (332,622,872 samples, 0.04%)</title><rect x="1063.5" y="1429" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1066.49" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="405" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="415.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (285,950,832 samples, 0.04%)</title><rect x="937.3" y="1141" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="940.28" y="1151.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (341,736,708 samples, 0.04%)</title><rect x="51.7" y="1589" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="54.75" y="1599.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (7,909,051,120 samples, 0.97%)</title><rect x="724.7" y="1509" width="11.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="727.73" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (71,805,258 samples, 0.01%)</title><rect x="11.6" y="1445" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.61" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (410,491,624 samples, 0.05%)</title><rect x="21.3" y="1125" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="1135.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (118,364,898 samples, 0.01%)</title><rect x="306.3" y="1413" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="309.28" y="1423.5" ></text>
</g>
<g >
<title>native_write_msr (516,490,584 samples, 0.06%)</title><rect x="956.8" y="1237" width="0.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="959.78" y="1247.5" ></text>
</g>
<g >
<title>do_accept (18,516,217,508 samples, 2.28%)</title><rect x="894.0" y="1365" width="26.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="896.98" y="1375.5" >d..</text>
</g>
<g >
<title>do_syscall_64 (7,867,897,272 samples, 0.97%)</title><rect x="860.7" y="1397" width="11.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="863.71" y="1407.5" ></text>
</g>
<g >
<title>ttwu_do_activate (3,925,071,318 samples, 0.48%)</title><rect x="68.8" y="1333" width="5.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="71.80" y="1343.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (90,776,220 samples, 0.01%)</title><rect x="1165.3" y="1397" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1168.28" y="1407.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,020,791,803 samples, 0.13%)</title><rect x="306.8" y="1381" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="309.78" y="1391.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (251,902,344 samples, 0.03%)</title><rect x="1177.3" y="1381" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1180.27" y="1391.5" ></text>
</g>
<g >
<title>__switch_to_asm (629,609,097 samples, 0.08%)</title><rect x="50.8" y="1589" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="53.83" y="1599.5" ></text>
</g>
<g >
<title>rcu_core (458,374,048 samples, 0.06%)</title><rect x="1066.9" y="1477" width="0.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1069.89" y="1487.5" ></text>
</g>
<g >
<title>mod_objcg_state (99,816,138 samples, 0.01%)</title><rect x="56.9" y="1397" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="59.90" y="1407.5" ></text>
</g>
<g >
<title>__rcu_read_lock (95,182,232 samples, 0.01%)</title><rect x="904.0" y="1269" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="906.98" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::operator= (274,100,111 samples, 0.03%)</title><rect x="22.8" y="37" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="25.82" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_lock (110,919,935 samples, 0.01%)</title><rect x="939.7" y="1285" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="942.67" y="1295.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (839,337,558 samples, 0.10%)</title><rect x="1048.3" y="1573" width="1.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1051.28" y="1583.5" ></text>
</g>
<g >
<title>wake_up_process (251,902,344 samples, 0.03%)</title><rect x="1177.3" y="1365" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1180.27" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (311,656,541 samples, 0.04%)</title><rect x="21.3" y="933" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="943.5" ></text>
</g>
<g >
<title>rcu_core_si (637,794,352 samples, 0.08%)</title><rect x="1118.2" y="1493" width="1.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1121.25" y="1503.5" ></text>
</g>
<g >
<title>clock_gettime (330,946,856 samples, 0.04%)</title><rect x="987.3" y="1397" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="990.30" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (257,701,202 samples, 0.03%)</title><rect x="21.3" y="789" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="799.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (106,337,957 samples, 0.01%)</title><rect x="81.1" y="1301" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="84.11" y="1311.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (98,676,228 samples, 0.01%)</title><rect x="912.6" y="1253" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="915.57" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (279,014,746 samples, 0.03%)</title><rect x="21.3" y="837" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.30" y="847.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1,286,186,105 samples, 0.16%)</title><rect x="863.9" y="1269" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="866.92" y="1279.5" ></text>
</g>
<g >
<title>alloc_file (5,323,996,273 samples, 0.65%)</title><rect x="907.9" y="1317" width="7.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="910.85" y="1327.5" ></text>
</g>
<g >
<title>start_kernel (2,857,896,225 samples, 0.35%)</title><rect x="1170.3" y="1541" width="4.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1173.26" y="1551.5" ></text>
</g>
<g >
<title>thread_main (284,540,081 samples, 0.03%)</title><rect x="1189.6" y="1557" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1192.57" y="1567.5" ></text>
</g>
<g >
<title>ct_idle_enter (170,171,782 samples, 0.02%)</title><rect x="85.2" y="1461" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="88.18" y="1471.5" ></text>
</g>
<g >
<title>rseq_get_rseq_cs (77,319,227 samples, 0.01%)</title><rect x="929.5" y="1317" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="932.46" y="1327.5" ></text>
</g>
<g >
<title>native_sched_clock (83,745,218 samples, 0.01%)</title><rect x="74.9" y="1269" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="77.86" y="1279.5" ></text>
</g>
<g >
<title>kmem_cache_free (650,953,061 samples, 0.08%)</title><rect x="80.3" y="1317" width="1.0" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="83.34" y="1327.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (153,428,583 samples, 0.02%)</title><rect x="287.7" y="1477" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="290.70" y="1487.5" ></text>
</g>
<g >
<title>__switch_to (344,079,942 samples, 0.04%)</title><rect x="50.3" y="1589" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="53.33" y="1599.5" ></text>
</g>
<g >
<title>do_dentry_open (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1253" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="15.43" y="1263.5" ></text>
</g>
<g >
<title>__destroy_inode (1,113,424,439 samples, 0.14%)</title><rect x="936.2" y="1205" width="1.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="939.16" y="1215.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::recvfrom_nonblocking (150,633,779 samples, 0.02%)</title><rect x="943.5" y="1445" width="0.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="946.49" y="1455.5" ></text>
</g>
<g >
<title>sock_free_inode (99,873,361 samples, 0.01%)</title><rect x="283.1" y="1301" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="286.10" y="1311.5" ></text>
</g>
<g >
<title>update_min_vruntime (112,679,696 samples, 0.01%)</title><rect x="968.2" y="1237" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="971.16" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_rq_lock_irqsave (89,110,068 samples, 0.01%)</title><rect x="971.2" y="1205" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="974.18" y="1215.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (218,564,772 samples, 0.03%)</title><rect x="987.8" y="1445" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="990.84" y="1455.5" ></text>
</g>
<g >
<title>__mmput (105,297,462 samples, 0.01%)</title><rect x="1062.9" y="1397" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1065.88" y="1407.5" ></text>
</g>
<g >
<title>sched_clock_cpu (307,300,877 samples, 0.04%)</title><rect x="975.6" y="1253" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="978.58" y="1263.5" ></text>
</g>
<g >
<title>syscall (9,248,942,634 samples, 1.14%)</title><rect x="859.3" y="1429" width="13.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="862.29" y="1439.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (83,097,659 samples, 0.01%)</title><rect x="58.7" y="1445" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="61.68" y="1455.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,288,614,531 samples, 0.16%)</title><rect x="1068.8" y="1413" width="1.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1071.77" y="1423.5" ></text>
</g>
<g >
<title>psi_task_change (434,097,319 samples, 0.05%)</title><rect x="291.7" y="1445" width="0.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="294.69" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (399,701,477 samples, 0.05%)</title><rect x="21.3" y="1029" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.30" y="1039.5" ></text>
</g>
<g >
<title>do_epoll_wait (278,790,616 samples, 0.03%)</title><rect x="1175.7" y="1525" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1178.70" y="1535.5" ></text>
</g>
<g >
<title>rcu_do_batch (138,061,755 samples, 0.02%)</title><rect x="1177.8" y="1349" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1180.84" y="1359.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (120,319,602 samples, 0.01%)</title><rect x="17.0" y="1525" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="20.03" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1557" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.43" y="1567.5" ></text>
</g>
<g >
<title>put_prev_task_fair (109,218,139 samples, 0.01%)</title><rect x="867.9" y="1269" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="870.87" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (517,360,049 samples, 0.06%)</title><rect x="1063.5" y="1509" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1066.45" y="1519.5" ></text>
</g>
<g >
<title>__calc_delta (94,403,036 samples, 0.01%)</title><rect x="864.8" y="1221" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="867.79" y="1231.5" ></text>
</g>
<g >
<title>menu_select (151,683,535 samples, 0.02%)</title><rect x="1187.6" y="1493" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1190.57" y="1503.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (86,683,354 samples, 0.01%)</title><rect x="987.2" y="1445" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="990.16" y="1455.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (77,319,999 samples, 0.01%)</title><rect x="1165.1" y="1365" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1168.11" y="1375.5" ></text>
</g>
<g >
<title>uv__stream_io (133,039,971 samples, 0.02%)</title><rect x="23.8" y="1557" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="26.84" y="1567.5" ></text>
</g>
<g >
<title>HandleStackContext (1,055,289,585 samples, 0.13%)</title><rect x="1037.9" y="1573" width="1.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1040.86" y="1583.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (295,599,572 samples, 0.04%)</title><rect x="30.0" y="1157" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="33.00" y="1167.5" ></text>
</g>
<g >
<title>bprm_execve (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1365" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="15.43" y="1375.5" ></text>
</g>
<g >
<title>cpuidle_select (2,577,009,383 samples, 0.32%)</title><rect x="284.3" y="1509" width="3.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="287.33" y="1519.5" ></text>
</g>
<g >
<title>ext4_da_write_end (568,222,241 samples, 0.07%)</title><rect x="29.7" y="1253" width="0.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="32.70" y="1263.5" ></text>
</g>
<g >
<title>v8::platform::DefaultJobWorker::Run (90,644,216 samples, 0.01%)</title><rect x="24.7" y="1541" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="27.71" y="1551.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (445,530,605 samples, 0.05%)</title><rect x="955.1" y="1269" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="958.14" y="1279.5" ></text>
</g>
<g >
<title>sock_free_inode (110,267,676 samples, 0.01%)</title><rect x="1071.1" y="1317" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1074.07" y="1327.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (127,732,810 samples, 0.02%)</title><rect x="67.6" y="1317" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="70.56" y="1327.5" ></text>
</g>
<g >
<title>lapic_next_deadline (315,975,825 samples, 0.04%)</title><rect x="956.3" y="1237" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="959.32" y="1247.5" ></text>
</g>
<g >
<title>kmem_cache_free (848,330,412 samples, 0.10%)</title><rect x="932.8" y="1253" width="1.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="935.79" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (181,802,842 samples, 0.02%)</title><rect x="21.3" y="629" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (399,701,477 samples, 0.05%)</title><rect x="21.3" y="1045" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="1055.5" ></text>
</g>
<g >
<title>[libc.so.6] (241,564,246 samples, 0.03%)</title><rect x="14.4" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.36" y="1423.5" ></text>
</g>
<g >
<title>socket_readable (219,844,597 samples, 0.03%)</title><rect x="1189.7" y="1509" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.65" y="1519.5" ></text>
</g>
<g >
<title>sched_clock (244,893,803 samples, 0.03%)</title><rect x="975.7" y="1237" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="978.66" y="1247.5" ></text>
</g>
<g >
<title>rcu_core_si (451,389,131 samples, 0.06%)</title><rect x="282.7" y="1365" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="285.66" y="1375.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (1,541,263,043 samples, 0.19%)</title><rect x="980.5" y="1317" width="2.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="983.49" y="1327.5" ></text>
</g>
<g >
<title>ct_kernel_enter.constprop.0 (167,337,411 samples, 0.02%)</title><rect x="85.5" y="1445" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="88.51" y="1455.5" ></text>
</g>
<g >
<title>NaClSysClockGetTime (333,381,093 samples, 0.04%)</title><rect x="1051.1" y="1573" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1054.14" y="1583.5" ></text>
</g>
<g >
<title>mm_cid_get (72,937,928 samples, 0.01%)</title><rect x="297.3" y="1493" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="300.32" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (196,906,008 samples, 0.02%)</title><rect x="12.9" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.93" y="1583.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (28,872,559,851 samples, 3.55%)</title><rect x="773.2" y="1525" width="41.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="776.20" y="1535.5" >NaC..</text>
</g>
<g >
<title>mod_objcg_state (166,919,369 samples, 0.02%)</title><rect x="917.2" y="1253" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="920.16" y="1263.5" ></text>
</g>
<g >
<title>rcu_core (3,489,683,629 samples, 0.43%)</title><rect x="53.3" y="1477" width="5.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="56.27" y="1487.5" ></text>
</g>
<g >
<title>inode_free_by_rcu (324,629,320 samples, 0.04%)</title><rect x="82.4" y="1333" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="85.44" y="1343.5" ></text>
</g>
<g >
<title>clear_page_erms (102,435,113 samples, 0.01%)</title><rect x="903.5" y="1173" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="906.55" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="805" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="815.5" ></text>
</g>
<g >
<title>get_timespec64 (589,442,668 samples, 0.07%)</title><rect x="977.6" y="1349" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="980.60" y="1359.5" ></text>
</g>
<g >
<title>ct_kernel_exit_state (89,556,291 samples, 0.01%)</title><rect x="85.8" y="1445" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="88.76" y="1455.5" ></text>
</g>
<g >
<title>update_rq_clock (169,077,577 samples, 0.02%)</title><rect x="74.8" y="1333" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="77.75" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (77,038,642 samples, 0.01%)</title><rect x="1066.7" y="1589" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1069.68" y="1599.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (114,506,527 samples, 0.01%)</title><rect x="283.5" y="1429" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="286.53" y="1439.5" ></text>
</g>
<g >
<title>generic_file_read_iter (71,232,017 samples, 0.01%)</title><rect x="818.3" y="1221" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="821.30" y="1231.5" ></text>
</g>
<g >
<title>__memset (96,597,509 samples, 0.01%)</title><rect x="915.8" y="1285" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="918.78" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1349" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1359.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (881,074,968 samples, 0.11%)</title><rect x="560.9" y="1541" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="563.95" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="197" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (514,815,978 samples, 0.06%)</title><rect x="21.3" y="1397" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.29" y="1407.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (705,576,769 samples, 0.09%)</title><rect x="21.2" y="1573" width="1.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="24.19" y="1583.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (86,683,354 samples, 0.01%)</title><rect x="987.2" y="1429" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="990.16" y="1439.5" ></text>
</g>
<g >
<title>call_cpuidle (31,503,041,915 samples, 3.87%)</title><rect x="1119.9" y="1509" width="45.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1122.93" y="1519.5" >call..</text>
</g>
<g >
<title>rseq_update_cpu_node_id (452,462,523 samples, 0.06%)</title><rect x="982.1" y="1301" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="985.07" y="1311.5" ></text>
</g>
<g >
<title>__do_sys_clone (1,805,694,270 samples, 0.22%)</title><rect x="17.3" y="1413" width="2.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="20.33" y="1423.5" ></text>
</g>
<g >
<title>wb_do_writeback (87,564,122 samples, 0.01%)</title><rect x="58.7" y="1493" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="61.67" y="1503.5" ></text>
</g>
<g >
<title>futex_wait_queue (261,556,280 samples, 0.03%)</title><rect x="25.4" y="1413" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="28.40" y="1423.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (77,436,596 samples, 0.01%)</title><rect x="12.9" y="1509" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.94" y="1519.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (491,648,349 samples, 0.06%)</title><rect x="306.8" y="1333" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="309.81" y="1343.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,699,371,439 samples, 0.21%)</title><rect x="1106.1" y="1413" width="2.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1109.13" y="1423.5" ></text>
</g>
<g >
<title>lapic_next_deadline (225,552,855 samples, 0.03%)</title><rect x="76.5" y="1365" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="79.48" y="1375.5" ></text>
</g>
<g >
<title>__do_softirq (551,696,567 samples, 0.07%)</title><rect x="1123.9" y="1397" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1126.92" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (97,391,227 samples, 0.01%)</title><rect x="15.4" y="1589" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="18.36" y="1599.5" ></text>
</g>
<g >
<title>rcu_core_si (3,187,447,919 samples, 0.39%)</title><rect x="78.8" y="1381" width="4.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="81.75" y="1391.5" ></text>
</g>
<g >
<title>vm_normal_page (103,103,493 samples, 0.01%)</title><rect x="27.1" y="1301" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="30.07" y="1311.5" ></text>
</g>
<g >
<title>rustposix_thread_init (268,408,525 samples, 0.03%)</title><rect x="1059.2" y="1541" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1062.18" y="1551.5" ></text>
</g>
<g >
<title>mmput (1,703,531,240 samples, 0.21%)</title><rect x="25.9" y="1413" width="2.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="28.92" y="1423.5" ></text>
</g>
<g >
<title>update_min_vruntime (156,556,912 samples, 0.02%)</title><rect x="967.5" y="1221" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="970.49" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,488,301 samples, 0.01%)</title><rect x="21.3" y="469" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (400,822,957 samples, 0.05%)</title><rect x="834.4" y="1429" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="837.38" y="1439.5" ></text>
</g>
<g >
<title>read (160,553,375 samples, 0.02%)</title><rect x="1189.7" y="1477" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1192.67" y="1487.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (894,799,026 samples, 0.11%)</title><rect x="872.7" y="1445" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="875.71" y="1455.5" ></text>
</g>
<g >
<title>kmem_cache_free (693,383,161 samples, 0.09%)</title><rect x="55.2" y="1429" width="1.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="58.25" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="533" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="543.5" ></text>
</g>
<g >
<title>__switch_to (136,499,065 samples, 0.02%)</title><rect x="859.6" y="1413" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="862.60" y="1423.5" ></text>
</g>
<g >
<title>__filemap_add_folio (223,003,079 samples, 0.03%)</title><rect x="29.0" y="1205" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="32.03" y="1215.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (127,952,962 samples, 0.02%)</title><rect x="299.4" y="1429" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="302.44" y="1439.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (223,683,523 samples, 0.03%)</title><rect x="305.1" y="1493" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="308.09" y="1503.5" ></text>
</g>
<g >
<title>epoll_wait (87,955,159 samples, 0.01%)</title><rect x="23.3" y="1557" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="26.30" y="1567.5" ></text>
</g>
<g >
<title>wake_up_process (5,651,589,615 samples, 0.69%)</title><rect x="66.9" y="1365" width="8.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="69.86" y="1375.5" ></text>
</g>
<g >
<title>local_clock_noinstr (135,832,860 samples, 0.02%)</title><rect x="283.5" y="1445" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="286.50" y="1455.5" ></text>
</g>
<g >
<title>__tfind (100,243,880 samples, 0.01%)</title><rect x="14.7" y="1413" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="17.73" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (496,624,153 samples, 0.06%)</title><rect x="21.3" y="1349" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.29" y="1359.5" ></text>
</g>
<g >
<title>newidle_balance (772,375,895 samples, 0.09%)</title><rect x="866.6" y="1253" width="1.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="869.63" y="1263.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (7,802,618,078 samples, 0.96%)</title><rect x="662.2" y="1541" width="11.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="665.21" y="1551.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (103,365,186 samples, 0.01%)</title><rect x="75.7" y="1381" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="78.67" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1,805,694,270 samples, 0.22%)</title><rect x="17.3" y="1429" width="2.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="20.33" y="1439.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (148,117,240 samples, 0.02%)</title><rect x="483.5" y="1541" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="486.49" y="1551.5" ></text>
</g>
<g >
<title>clockevents_program_event (183,465,973 samples, 0.02%)</title><rect x="1070.4" y="1381" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1073.37" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_enter (12,174,285,816 samples, 1.50%)</title><rect x="306.3" y="1429" width="17.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="309.28" y="1439.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (264,205,913 samples, 0.03%)</title><rect x="954.0" y="1269" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="956.96" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (276,937,094 samples, 0.03%)</title><rect x="1057.6" y="1557" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1060.63" y="1567.5" ></text>
</g>
<g >
<title>_compound_head (530,647,273 samples, 0.07%)</title><rect x="18.1" y="1285" width="0.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="21.10" y="1295.5" ></text>
</g>
<g >
<title>update_cfs_group (391,712,333 samples, 0.05%)</title><rect x="70.9" y="1269" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="73.89" y="1279.5" ></text>
</g>
<g >
<title>irq_exit_rcu (90,776,220 samples, 0.01%)</title><rect x="1165.3" y="1413" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1168.28" y="1423.5" ></text>
</g>
<g >
<title>update_process_times (208,442,538 samples, 0.03%)</title><rect x="75.2" y="1349" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="78.21" y="1359.5" ></text>
</g>
<g >
<title>rcu_core (77,819,601 samples, 0.01%)</title><rect x="1165.3" y="1349" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1168.28" y="1359.5" ></text>
</g>
<g >
<title>put_prev_task_fair (169,202,148 samples, 0.02%)</title><rect x="972.8" y="1253" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="975.75" y="1263.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,466,990,525 samples, 1.66%)</title><rect x="65.6" y="1461" width="19.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="68.57" y="1471.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1,314,449,988 samples, 0.16%)</title><rect x="28.7" y="1301" width="1.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="31.69" y="1311.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (1,844,172,946 samples, 0.23%)</title><rect x="769.4" y="1493" width="2.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="772.41" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="501" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (170,239,047 samples, 0.02%)</title><rect x="1063.6" y="1413" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1066.56" y="1423.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (87,178,396 samples, 0.01%)</title><rect x="74.9" y="1285" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="77.85" y="1295.5" ></text>
</g>
<g >
<title>__switch_to_asm (547,356,278 samples, 0.07%)</title><rect x="947.0" y="1397" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="949.98" y="1407.5" ></text>
</g>
<g >
<title>mod_objcg_state (275,346,449 samples, 0.03%)</title><rect x="914.1" y="1253" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="917.09" y="1263.5" ></text>
</g>
<g >
<title>CompareAndSwap (30,397,673,200 samples, 3.74%)</title><rect x="590.2" y="1541" width="44.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="593.19" y="1551.5" >Comp..</text>
</g>
<g >
<title>worker_thread (158,121,785 samples, 0.02%)</title><rect x="58.6" y="1541" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="61.59" y="1551.5" ></text>
</g>
<g >
<title>process_one_work (112,161,183 samples, 0.01%)</title><rect x="1119.3" y="1525" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1122.25" y="1535.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1,357,018,784 samples, 0.17%)</title><rect x="968.5" y="1269" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="971.45" y="1279.5" ></text>
</g>
<g >
<title>load_balance (263,293,939 samples, 0.03%)</title><rect x="83.5" y="1349" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="86.47" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (506,114,718 samples, 0.06%)</title><rect x="1063.5" y="1493" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1066.46" y="1503.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1349" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="15.43" y="1359.5" ></text>
</g>
<g >
<title>[ls] (232,228,182 samples, 0.03%)</title><rect x="13.3" y="1493" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="16.29" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_read (272,549,342 samples, 0.03%)</title><rect x="52.5" y="1557" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="55.48" y="1567.5" ></text>
</g>
<g >
<title>sleep (31,505,005,724 samples, 3.87%)</title><rect x="1063.2" y="1605" width="45.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1066.17" y="1615.5" >sleep</text>
</g>
<g >
<title>inet_accept (1,844,374,942 samples, 0.23%)</title><rect x="895.2" y="1349" width="2.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="898.20" y="1359.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (753,969,436 samples, 0.09%)</title><rect x="870.9" y="1349" width="1.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="873.85" y="1359.5" ></text>
</g>
<g >
<title>NaClSysPreadDecoder (130,261,277 samples, 0.02%)</title><rect x="818.2" y="1557" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="821.25" y="1567.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (498,455,463 samples, 0.06%)</title><rect x="723.4" y="1477" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="726.42" y="1487.5" ></text>
</g>
<g >
<title>do_group_exit (89,543,505 samples, 0.01%)</title><rect x="15.4" y="1541" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="18.37" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="613" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="623.5" ></text>
</g>
<g >
<title>kmem_cache_free (110,267,676 samples, 0.01%)</title><rect x="1071.1" y="1301" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1074.07" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1381" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1391.5" ></text>
</g>
<g >
<title>rcu_core (198,390,539 samples, 0.02%)</title><rect x="307.8" y="1301" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="310.82" y="1311.5" ></text>
</g>
<g >
<title>asn1_item_embed_d2i (266,799,532 samples, 0.03%)</title><rect x="20.1" y="1477" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="23.13" y="1487.5" ></text>
</g>
<g >
<title>destroy_inode (1,810,501,117 samples, 0.22%)</title><rect x="936.1" y="1221" width="2.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="939.06" y="1231.5" ></text>
</g>
<g >
<title>update_min_vruntime (87,104,456 samples, 0.01%)</title><rect x="855.6" y="1269" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="858.61" y="1279.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (180,774,158 samples, 0.02%)</title><rect x="11.5" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.47" y="1583.5" ></text>
</g>
<g >
<title>asn1_item_embed_d2i (266,799,532 samples, 0.03%)</title><rect x="20.1" y="1429" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="23.13" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (410,491,624 samples, 0.05%)</title><rect x="21.3" y="1109" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="1119.5" ></text>
</g>
<g >
<title>lind_select (116,717,546,275 samples, 14.35%)</title><rect x="818.4" y="1525" width="169.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="821.44" y="1535.5" >lind_select</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (185,038,507 samples, 0.02%)</title><rect x="11.5" y="1589" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.46" y="1599.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (3,893,298,416 samples, 0.48%)</title><rect x="53.2" y="1589" width="5.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="56.17" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="309" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (87,491,398 samples, 0.01%)</title><rect x="943.6" y="1413" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="946.58" y="1423.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (132,750,435 samples, 0.02%)</title><rect x="1060.5" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1063.53" y="1583.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (895,961,987 samples, 0.11%)</title><rect x="1068.9" y="1381" width="1.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1071.86" y="1391.5" ></text>
</g>
<g >
<title>NaClSysSelectDecoder (116,717,546,275 samples, 14.35%)</title><rect x="818.4" y="1557" width="169.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="821.44" y="1567.5" >NaClSysSelectDecoder</text>
</g>
<g >
<title>anon_vma_fork (86,984,578 samples, 0.01%)</title><rect x="17.4" y="1333" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="20.36" y="1343.5" ></text>
</g>
<g >
<title>poll_idle (352,399,882 samples, 0.04%)</title><rect x="1189.0" y="1397" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1191.96" y="1407.5" ></text>
</g>
<g >
<title>[perf-304.map] (249,194,005 samples, 0.03%)</title><rect x="15.8" y="1589" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="18.82" y="1599.5" ></text>
</g>
<g >
<title>clockevents_program_event (75,485,465 samples, 0.01%)</title><rect x="1177.7" y="1381" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1180.69" y="1391.5" ></text>
</g>
<g >
<title>update_load_avg (561,244,483 samples, 0.07%)</title><rect x="290.7" y="1413" width="0.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="293.71" y="1423.5" ></text>
</g>
<g >
<title>mmap_region (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1349" width="0.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1061.80" y="1359.5" ></text>
</g>
<g >
<title>psi_task_switch (1,735,930,605 samples, 0.21%)</title><rect x="973.5" y="1269" width="2.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="976.51" y="1279.5" ></text>
</g>
<g >
<title>__xstat64 (73,289,291 samples, 0.01%)</title><rect x="22.0" y="1525" width="0.1" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="25.04" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1221" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1231.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (3,599,519,048 samples, 0.44%)</title><rect x="288.3" y="1525" width="5.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="291.31" y="1535.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (117,562,350 samples, 0.01%)</title><rect x="29.5" y="1237" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="32.52" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="277" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="287.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (76,637,951 samples, 0.01%)</title><rect x="298.7" y="1445" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="301.74" y="1455.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (69,797,747 samples, 0.01%)</title><rect x="292.2" y="1397" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="295.22" y="1407.5" ></text>
</g>
<g >
<title>mntput (73,523,353 samples, 0.01%)</title><rect x="940.2" y="1301" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="943.19" y="1311.5" ></text>
</g>
<g >
<title>pick_next_task (82,805,388 samples, 0.01%)</title><rect x="1188.1" y="1493" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1191.12" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="773" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="783.5" ></text>
</g>
<g >
<title>up_write (220,210,506 samples, 0.03%)</title><rect x="941.3" y="1269" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="944.25" y="1279.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (952,691,601 samples, 0.12%)</title><rect x="1053.0" y="1573" width="1.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1055.99" y="1583.5" ></text>
</g>
<g >
<title>enqueue_task (205,666,681 samples, 0.03%)</title><rect x="282.1" y="1301" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="285.11" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="213" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (705,213,545 samples, 0.09%)</title><rect x="881.9" y="1413" width="1.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="884.90" y="1423.5" ></text>
</g>
<g >
<title>cfree (250,949,014 samples, 0.03%)</title><rect x="24.1" y="1461" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="27.08" y="1471.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (2,896,614,618 samples, 0.36%)</title><rect x="902.9" y="1285" width="4.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="905.91" y="1295.5" ></text>
</g>
<g >
<title>__memcpy (105,533,305 samples, 0.01%)</title><rect x="918.8" y="1301" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="921.83" y="1311.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (92,301,605 samples, 0.01%)</title><rect x="818.3" y="1461" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="821.29" y="1471.5" ></text>
</g>
<g >
<title>__slab_free (194,048,050 samples, 0.02%)</title><rect x="57.4" y="1413" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="60.44" y="1423.5" ></text>
</g>
<g >
<title>zap_pte_range (806,166,039 samples, 0.10%)</title><rect x="27.2" y="1301" width="1.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="30.22" y="1311.5" ></text>
</g>
<g >
<title>rcu_do_batch (443,872,107 samples, 0.05%)</title><rect x="282.7" y="1333" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="285.67" y="1343.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (247,046,901 samples, 0.03%)</title><rect x="307.8" y="1349" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="310.80" y="1359.5" ></text>
</g>
<g >
<title>sock_alloc (6,151,734,350 samples, 0.76%)</title><rect x="898.3" y="1349" width="8.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="901.31" y="1359.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (124,391,853 samples, 0.02%)</title><rect x="1187.8" y="1525" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1190.81" y="1535.5" ></text>
</g>
<g >
<title>ksys_read (81,313,854 samples, 0.01%)</title><rect x="818.3" y="1333" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="821.29" y="1343.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (652,811,931 samples, 0.08%)</title><rect x="1166.6" y="1509" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1169.58" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (94,456,945 samples, 0.01%)</title><rect x="12.3" y="1589" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="15.30" y="1599.5" ></text>
</g>
<g >
<title>enqueue_task_fair (535,953,601 samples, 0.07%)</title><rect x="1121.8" y="1301" width="0.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1124.79" y="1311.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1,047,350,669 samples, 0.13%)</title><rect x="953.6" y="1285" width="1.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="956.57" y="1295.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (86,495,114 samples, 0.01%)</title><rect x="955.9" y="1285" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="958.89" y="1295.5" ></text>
</g>
<g >
<title>[bash] (235,703,792 samples, 0.03%)</title><rect x="1061.3" y="1285" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1064.34" y="1295.5" ></text>
</g>
<g >
<title>__schedule (97,600,419 samples, 0.01%)</title><rect x="1108.7" y="1445" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1111.74" y="1455.5" ></text>
</g>
<g >
<title>__mmput (80,479,339 samples, 0.01%)</title><rect x="1063.0" y="1477" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1066.05" y="1487.5" ></text>
</g>
<g >
<title>exec_mmap (108,750,519 samples, 0.01%)</title><rect x="1062.9" y="1429" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1065.88" y="1439.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (92,301,605 samples, 0.01%)</title><rect x="818.3" y="1413" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="821.29" y="1423.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (97,008,049 samples, 0.01%)</title><rect x="29.5" y="1221" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="32.54" y="1231.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (156,834,828 samples, 0.02%)</title><rect x="57.0" y="1397" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="60.04" y="1407.5" ></text>
</g>
<g >
<title>__d_alloc (2,241,733,393 samples, 0.28%)</title><rect x="915.6" y="1301" width="3.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="918.58" y="1311.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (163,743,211 samples, 0.02%)</title><rect x="1106.2" y="1397" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1109.16" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (530,881,785 samples, 0.07%)</title><rect x="21.3" y="1429" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.27" y="1439.5" ></text>
</g>
<g >
<title>[bash] (368,131,386 samples, 0.05%)</title><rect x="1061.2" y="1333" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1064.16" y="1343.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1381" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.43" y="1391.5" ></text>
</g>
<g >
<title>aa_sk_perm (161,562,879 samples, 0.02%)</title><rect x="898.1" y="1317" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="901.07" y="1327.5" ></text>
</g>
<g >
<title>kmem_cache_free (77,042,867 samples, 0.01%)</title><rect x="283.0" y="1301" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="285.98" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="821" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="831.5" ></text>
</g>
<g >
<title>file_free_rcu (1,591,842,731 samples, 0.20%)</title><rect x="79.0" y="1333" width="2.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="82.01" y="1343.5" ></text>
</g>
<g >
<title>__cmd_record (1,524,921,980 samples, 0.19%)</title><rect x="28.4" y="1573" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.42" y="1583.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (80,089,355 samples, 0.01%)</title><rect x="916.4" y="1269" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="919.45" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (118,834,052 samples, 0.01%)</title><rect x="22.4" y="85" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="25.37" y="95.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (246,054,275 samples, 0.03%)</title><rect x="1165.1" y="1445" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1168.07" y="1455.5" ></text>
</g>
<g >
<title>process_one_work (74,670,713 samples, 0.01%)</title><rect x="1067.6" y="1525" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1070.60" y="1535.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (13,383,742,343 samples, 1.65%)</title><rect x="306.1" y="1557" width="19.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="309.05" y="1567.5" ></text>
</g>
<g >
<title>llist_add_batch (103,357,451 samples, 0.01%)</title><rect x="879.8" y="1301" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="882.82" y="1311.5" ></text>
</g>
<g >
<title>rcu_core_si (143,654,853 samples, 0.02%)</title><rect x="1177.8" y="1381" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1180.84" y="1391.5" ></text>
</g>
<g >
<title>clock_gettime (25,237,871,519 samples, 3.10%)</title><rect x="687.5" y="1493" width="36.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="690.53" y="1503.5" >clo..</text>
</g>
<g >
<title>NaClSysWriteDecoder (252,666,220 samples, 0.03%)</title><rect x="987.8" y="1557" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="990.79" y="1567.5" ></text>
</g>
<g >
<title>tick_sched_timer (314,628,001 samples, 0.04%)</title><rect x="75.1" y="1381" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="78.06" y="1391.5" ></text>
</g>
<g >
<title>ktime_get (95,258,998 samples, 0.01%)</title><rect x="956.2" y="1237" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="959.18" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1301" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1311.5" ></text>
</g>
<g >
<title>[grep] (170,225,626 samples, 0.02%)</title><rect x="12.0" y="1541" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="14.96" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (199,952,504 samples, 0.02%)</title><rect x="1062.9" y="1589" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1065.88" y="1599.5" ></text>
</g>
<g >
<title>pick_next_entity (231,063,156 samples, 0.03%)</title><rect x="297.9" y="1461" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="300.89" y="1471.5" ></text>
</g>
<g >
<title>__do_softirq (244,603,027 samples, 0.03%)</title><rect x="307.8" y="1333" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="310.80" y="1343.5" ></text>
</g>
<g >
<title>lind (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1605" width="0.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="15.43" y="1615.5" ></text>
</g>
<g >
<title>rebalance_domains (291,269,070 samples, 0.04%)</title><rect x="83.4" y="1365" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="86.43" y="1375.5" ></text>
</g>
<g >
<title>__rcu_read_lock (97,523,438 samples, 0.01%)</title><rect x="916.3" y="1269" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="919.31" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="917" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="927.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDay (42,058,254,607 samples, 5.17%)</title><rect x="757.1" y="1541" width="61.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="760.14" y="1551.5" >NaClSy..</text>
</g>
<g >
<title>__switch_to_asm (189,043,474 samples, 0.02%)</title><rect x="859.8" y="1413" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="862.80" y="1423.5" ></text>
</g>
<g >
<title>update_load_avg (1,254,625,051 samples, 0.15%)</title><rect x="965.7" y="1221" width="1.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="968.67" y="1231.5" ></text>
</g>
<g >
<title>set_default_locale (470,776,131 samples, 0.06%)</title><rect x="1062.0" y="1525" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1065.02" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_read (160,553,375 samples, 0.02%)</title><rect x="1189.7" y="1429" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1192.67" y="1439.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,417,619,105 samples, 0.17%)</title><rect x="1121.1" y="1397" width="2.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1124.09" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (341,912,308 samples, 0.04%)</title><rect x="21.3" y="965" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.30" y="975.5" ></text>
</g>
<g >
<title>ret_from_fork (3,893,298,416 samples, 0.48%)</title><rect x="53.2" y="1573" width="5.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="56.17" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (320,853,995 samples, 0.04%)</title><rect x="1062.2" y="1429" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.17" y="1439.5" ></text>
</g>
<g >
<title>os_xsave (825,301,313 samples, 0.10%)</title><rect x="985.3" y="1397" width="1.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="988.34" y="1407.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (111,775,928 samples, 0.01%)</title><rect x="976.1" y="1269" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="979.13" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="949" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="959.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (701,185,812 samples, 0.09%)</title><rect x="1047.3" y="1573" width="1.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1050.27" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="565" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="575.5" ></text>
</g>
<g >
<title>v8::internal::OptimizingCompileDispatcher::CompileNext (165,963,503 samples, 0.02%)</title><rect x="24.5" y="1525" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="27.46" y="1535.5" ></text>
</g>
<g >
<title>OSSL_DECODER_is_a (146,744,303 samples, 0.02%)</title><rect x="20.1" y="1317" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="23.13" y="1327.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::checked_sub_instant (86,683,354 samples, 0.01%)</title><rect x="987.2" y="1397" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="990.16" y="1407.5" ></text>
</g>
<g >
<title>task_work_add (183,808,899 samples, 0.02%)</title><rect x="920.6" y="1349" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="923.58" y="1359.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (71,706,303 samples, 0.01%)</title><rect x="288.0" y="1493" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="290.97" y="1503.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (23,742,916,044 samples, 2.92%)</title><rect x="1068.3" y="1477" width="34.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1071.35" y="1487.5" >cp..</text>
</g>
<g >
<title>intel_idle (210,381,964 samples, 0.03%)</title><rect x="1188.7" y="1397" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1191.66" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,771,270 samples, 0.01%)</title><rect x="21.3" y="421" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="431.5" ></text>
</g>
<g >
<title>__switch_to_asm (108,030,725 samples, 0.01%)</title><rect x="1066.4" y="1589" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1069.45" y="1599.5" ></text>
</g>
<g >
<title>[bash] (128,051,543 samples, 0.02%)</title><rect x="1061.0" y="1429" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1063.95" y="1439.5" ></text>
</g>
<g >
<title>mod_objcg_state (78,971,909 samples, 0.01%)</title><rect x="56.0" y="1413" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="59.00" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1221" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1231.5" ></text>
</g>
<g >
<title>__memset (74,690,739 samples, 0.01%)</title><rect x="910.4" y="1253" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="913.43" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (140,597,909 samples, 0.02%)</title><rect x="21.3" y="517" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.31" y="527.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (108,724,025 samples, 0.01%)</title><rect x="1106.2" y="1365" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1109.16" y="1375.5" ></text>
</g>
<g >
<title>[ls] (1,381,985,896 samples, 0.17%)</title><rect x="13.2" y="1589" width="2.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="16.21" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1045" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="1055.5" ></text>
</g>
<g >
<title>pick_next_task (257,768,180 samples, 0.03%)</title><rect x="1176.3" y="1493" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1179.32" y="1503.5" ></text>
</g>
<g >
<title>file_free_rcu (248,800,410 samples, 0.03%)</title><rect x="1124.0" y="1333" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1126.99" y="1343.5" ></text>
</g>
<g >
<title>seq_read (230,540,996 samples, 0.03%)</title><rect x="25.0" y="1397" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="27.98" y="1407.5" ></text>
</g>
<g >
<title>mod_objcg_state (122,380,651 samples, 0.02%)</title><rect x="82.0" y="1285" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="85.03" y="1295.5" ></text>
</g>
<g >
<title>intel_idle (1,047,127,171 samples, 0.13%)</title><rect x="308.4" y="1397" width="1.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="311.38" y="1407.5" ></text>
</g>
<g >
<title>do_user_addr_fault (250,949,014 samples, 0.03%)</title><rect x="24.1" y="1397" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="27.08" y="1407.5" ></text>
</g>
<g >
<title>irq_exit_rcu (530,742,472 samples, 0.07%)</title><rect x="282.6" y="1413" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="285.65" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (529,986,610 samples, 0.07%)</title><rect x="10.7" y="1557" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.69" y="1567.5" ></text>
</g>
<g >
<title>place_entity (160,831,708 samples, 0.02%)</title><rect x="70.6" y="1269" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="73.64" y="1279.5" ></text>
</g>
<g >
<title>cpuidle_enter (7,422,684,921 samples, 0.91%)</title><rect x="1176.8" y="1493" width="10.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1179.80" y="1503.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (4,076,682,871 samples, 0.50%)</title><rect x="979.1" y="1365" width="5.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="982.10" y="1375.5" ></text>
</g>
<g >
<title>update_rq_clock (400,311,020 samples, 0.05%)</title><rect x="856.5" y="1317" width="0.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="859.55" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (250,949,014 samples, 0.03%)</title><rect x="24.1" y="1445" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.08" y="1455.5" ></text>
</g>
<g >
<title>wake_affine (188,854,037 samples, 0.02%)</title><rect x="879.0" y="1301" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="881.99" y="1311.5" ></text>
</g>
<g >
<title>execute_command_internal (130,561,127 samples, 0.02%)</title><rect x="1061.0" y="1445" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1063.95" y="1455.5" ></text>
</g>
<g >
<title>OSSL_DECODER_CTX_new_for_pkey (198,964,429 samples, 0.02%)</title><rect x="20.1" y="1349" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="23.13" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="613" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (91,667,424 samples, 0.01%)</title><rect x="14.0" y="1493" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.99" y="1503.5" ></text>
</g>
<g >
<title>parse_and_execute (110,376,069 samples, 0.01%)</title><rect x="1061.5" y="1205" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1064.50" y="1215.5" ></text>
</g>
<g >
<title>put_prev_entity (76,683,824 samples, 0.01%)</title><rect x="972.9" y="1237" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="975.89" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (170,486,882 samples, 0.02%)</title><rect x="935.8" y="1205" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="938.75" y="1215.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (3,710,016,524 samples, 0.46%)</title><rect x="53.2" y="1541" width="5.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="56.20" y="1551.5" ></text>
</g>
<g >
<title>execute_command_internal (382,170,058 samples, 0.05%)</title><rect x="1061.2" y="1397" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1064.16" y="1407.5" ></text>
</g>
<g >
<title>Glob::isIgnored (584,932,526 samples, 0.07%)</title><rect x="21.2" y="1509" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="24.19" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_lock (215,455,892 samples, 0.03%)</title><rect x="296.6" y="1493" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="299.62" y="1503.5" ></text>
</g>
<g >
<title>__do_softirq (496,303,107 samples, 0.06%)</title><rect x="1070.7" y="1397" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1073.73" y="1407.5" ></text>
</g>
<g >
<title>sock_alloc_file (9,188,207,601 samples, 1.13%)</title><rect x="907.2" y="1349" width="13.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="910.23" y="1359.5" ></text>
</g>
<g >
<title>copy_page_from_iter_atomic (144,610,875 samples, 0.02%)</title><rect x="28.8" y="1253" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="31.80" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="885" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="895.5" ></text>
</g>
<g >
<title>clockevents_program_event (286,189,586 samples, 0.04%)</title><rect x="1123.3" y="1381" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1126.32" y="1391.5" ></text>
</g>
<g >
<title>pick_next_task (84,453,704 samples, 0.01%)</title><rect x="58.4" y="1493" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="61.41" y="1503.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (560,978,694 samples, 0.07%)</title><rect x="971.4" y="1189" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="974.37" y="1199.5" ></text>
</g>
<g >
<title>update_blocked_averages (117,660,355 samples, 0.01%)</title><rect x="83.9" y="1365" width="0.1" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="86.85" y="1375.5" ></text>
</g>
<g >
<title>exit_mmap (80,479,339 samples, 0.01%)</title><rect x="1063.0" y="1461" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1066.05" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="693" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="703.5" ></text>
</g>
<g >
<title>__pte_alloc (82,834,385 samples, 0.01%)</title><rect x="18.0" y="1285" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="20.98" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (88,226,730 samples, 0.01%)</title><rect x="1063.0" y="1557" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1066.04" y="1567.5" ></text>
</g>
<g >
<title>rcu_do_batch (450,372,784 samples, 0.06%)</title><rect x="1066.9" y="1461" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1069.89" y="1471.5" ></text>
</g>
<g >
<title>xa_load (262,771,902 samples, 0.03%)</title><rect x="906.2" y="1237" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="909.24" y="1247.5" ></text>
</g>
<g >
<title>bprm_execve (1,703,531,240 samples, 0.21%)</title><rect x="25.9" y="1525" width="2.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="28.92" y="1535.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (852,969,272 samples, 0.10%)</title><rect x="1177.2" y="1445" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1180.21" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_poll (75,605,098 samples, 0.01%)</title><rect x="28.5" y="1493" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="31.46" y="1503.5" ></text>
</g>
<g >
<title>poll_idle (24,972,605,279 samples, 3.07%)</title><rect x="1129.3" y="1461" width="36.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1132.26" y="1471.5" >pol..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="805" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1237" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="1247.5" ></text>
</g>
<g >
<title>do_idle (26,368,323,246 samples, 3.24%)</title><rect x="1067.7" y="1541" width="38.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1070.74" y="1551.5" >do_..</text>
</g>
<g >
<title>psi_task_switch (344,675,390 samples, 0.04%)</title><rect x="1169.1" y="1493" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1172.05" y="1503.5" ></text>
</g>
<g >
<title>rcu_do_batch (131,265,049 samples, 0.02%)</title><rect x="1176.1" y="1461" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1179.13" y="1471.5" ></text>
</g>
<g >
<title>syscall (3,117,902,211 samples, 0.38%)</title><rect x="875.7" y="1445" width="4.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="878.71" y="1455.5" ></text>
</g>
<g >
<title>do_group_exit (88,226,730 samples, 0.01%)</title><rect x="1063.0" y="1541" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1066.04" y="1551.5" ></text>
</g>
<g >
<title>cpu_startup_entry (8,135,566,239 samples, 1.00%)</title><rect x="1176.7" y="1557" width="11.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1179.69" y="1567.5" ></text>
</g>
<g >
<title>psi_group_change (78,541,292 samples, 0.01%)</title><rect x="1070.0" y="1285" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1072.96" y="1295.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (626,433,726 samples, 0.08%)</title><rect x="1166.6" y="1493" width="0.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1169.62" y="1503.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (91,274,786 samples, 0.01%)</title><rect x="29.9" y="1157" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="32.87" y="1167.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (449,961,882 samples, 0.06%)</title><rect x="282.0" y="1413" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="284.96" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1349" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1359.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (719,854,347 samples, 0.09%)</title><rect x="1188.5" y="1557" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1191.50" y="1567.5" ></text>
</g>
<g >
<title>__update_idle_core (80,108,969 samples, 0.01%)</title><rect x="972.6" y="1237" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="975.56" y="1247.5" ></text>
</g>
<g >
<title>NaCl_trampoline_code_end (852,921,285 samples, 0.10%)</title><rect x="736.9" y="1509" width="1.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="739.95" y="1519.5" ></text>
</g>
<g >
<title>load_balance (600,425,421 samples, 0.07%)</title><rect x="866.8" y="1237" width="0.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="869.79" y="1247.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (1,846,330,509 samples, 0.23%)</title><rect x="17.3" y="1557" width="2.7" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="20.30" y="1567.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (284,659,523 samples, 0.04%)</title><rect x="293.6" y="1525" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="296.57" y="1535.5" ></text>
</g>
<g >
<title>call_cpuidle (12,191,278,047 samples, 1.50%)</title><rect x="306.3" y="1445" width="17.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="309.26" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (31,084,647,047 samples, 3.82%)</title><rect x="1120.4" y="1477" width="45.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1123.39" y="1487.5" >cpui..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1029" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1039.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (143,074,626 samples, 0.02%)</title><rect x="29.1" y="1189" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="32.08" y="1199.5" ></text>
</g>
<g >
<title>NaClGetTimeOfDay (201,040,762 samples, 0.02%)</title><rect x="328.0" y="1573" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="330.97" y="1583.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (90,307,309 samples, 0.01%)</title><rect x="1104.7" y="1493" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1107.68" y="1503.5" ></text>
</g>
<g >
<title>sched_clock (131,447,551 samples, 0.02%)</title><rect x="304.6" y="1477" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="307.56" y="1487.5" ></text>
</g>
<g >
<title>file_free_rcu (1,820,412,470 samples, 0.22%)</title><rect x="53.6" y="1445" width="2.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="56.62" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (108,015,134 samples, 0.01%)</title><rect x="75.7" y="1397" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="78.66" y="1407.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (243,072,623 samples, 0.03%)</title><rect x="1176.8" y="1477" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1179.80" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="463.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (5,673,602,962 samples, 0.70%)</title><rect x="66.8" y="1381" width="8.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="69.83" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1157" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1167.5" ></text>
</g>
<g >
<title>ttwu_do_activate (254,756,473 samples, 0.03%)</title><rect x="307.0" y="1269" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="310.00" y="1279.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (104,192,959 samples, 0.01%)</title><rect x="76.0" y="1381" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="78.96" y="1391.5" ></text>
</g>
<g >
<title>set_next_entity (213,010,195 samples, 0.03%)</title><rect x="1168.6" y="1461" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1171.62" y="1471.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (410,985,106 samples, 0.05%)</title><rect x="929.0" y="1333" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="931.97" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1189" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (459,062,550 samples, 0.06%)</title><rect x="21.3" y="1205" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="1215.5" ></text>
</g>
<g >
<title>asn1_template_noexp_d2i (266,799,532 samples, 0.03%)</title><rect x="20.1" y="1445" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="23.13" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,815,906,552 samples, 0.72%)</title><rect x="850.3" y="1413" width="8.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="853.30" y="1423.5" ></text>
</g>
<g >
<title>tick_program_event (75,485,465 samples, 0.01%)</title><rect x="1177.7" y="1397" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1180.69" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_select (419,076,243 samples, 0.05%)</title><rect x="1102.9" y="1509" width="0.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1105.91" y="1519.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (250,949,014 samples, 0.03%)</title><rect x="24.1" y="1429" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="27.08" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="405" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="415.5" ></text>
</g>
<g >
<title>poll_idle (122,906,620,930 samples, 15.11%)</title><rect x="105.4" y="1461" width="178.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="108.37" y="1471.5" >poll_idle</text>
</g>
<g >
<title>vfs_read (235,447,312 samples, 0.03%)</title><rect x="25.0" y="1429" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="27.97" y="1439.5" ></text>
</g>
<g >
<title>[[vdso]] (78,710,032 samples, 0.01%)</title><rect x="875.6" y="1413" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="878.58" y="1423.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (252,658,008 samples, 0.03%)</title><rect x="1176.3" y="1397" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1179.32" y="1407.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (635,240,679 samples, 0.08%)</title><rect x="329.3" y="1573" width="1.0" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="332.34" y="1583.5" ></text>
</g>
<g >
<title>dput (5,225,710,206 samples, 0.64%)</title><rect x="932.3" y="1301" width="7.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="935.34" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,488,301 samples, 0.01%)</title><rect x="21.3" y="437" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (392,606,363 samples, 0.05%)</title><rect x="1063.5" y="1461" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1066.47" y="1471.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (205,903,679 samples, 0.03%)</title><rect x="976.7" y="1221" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="979.67" y="1231.5" ></text>
</g>
<g >
<title>__hrtimer_init (433,163,679 samples, 0.05%)</title><rect x="951.5" y="1317" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="954.51" y="1327.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (111,725,774 samples, 0.01%)</title><rect x="1062.9" y="1541" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1065.88" y="1551.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (79,305,259 samples, 0.01%)</title><rect x="971.2" y="1157" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="974.20" y="1167.5" ></text>
</g>
<g >
<title>do_writepages (83,097,659 samples, 0.01%)</title><rect x="58.7" y="1413" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="61.68" y="1423.5" ></text>
</g>
<g >
<title>put_unused_fd (95,851,692 samples, 0.01%)</title><rect x="927.0" y="1365" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="930.03" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (491,061,128 samples, 0.06%)</title><rect x="21.3" y="1301" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.29" y="1311.5" ></text>
</g>
<g >
<title>v8::internal::Object::GetPropertyWithAccessor (120,319,602 samples, 0.01%)</title><rect x="17.0" y="1493" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="20.03" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (218,564,772 samples, 0.03%)</title><rect x="987.8" y="1477" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="990.84" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="165" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="175.5" ></text>
</g>
<g >
<title>intel_idle (1,736,635,192 samples, 0.21%)</title><rect x="1071.7" y="1461" width="2.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1074.72" y="1471.5" ></text>
</g>
<g >
<title>cpuacct_charge (107,790,644 samples, 0.01%)</title><rect x="855.5" y="1269" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="858.46" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1269" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="501" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="511.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (719,854,347 samples, 0.09%)</title><rect x="1188.5" y="1573" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1191.50" y="1583.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (130,873,009 samples, 0.02%)</title><rect x="944.5" y="1429" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="947.46" y="1439.5" ></text>
</g>
<g >
<title>NaClSysSelect (116,717,546,275 samples, 14.35%)</title><rect x="818.4" y="1541" width="169.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="821.44" y="1551.5" >NaClSysSelect</text>
</g>
<g >
<title>[libc.so.6] (397,432,448 samples, 0.05%)</title><rect x="1062.1" y="1477" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.13" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (311,656,541 samples, 0.04%)</title><rect x="21.3" y="885" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (491,061,128 samples, 0.06%)</title><rect x="21.3" y="1317" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.29" y="1327.5" ></text>
</g>
<g >
<title>runc:[1:CHILD] (203,199,925,879 samples, 24.99%)</title><rect x="30.7" y="1605" width="294.8" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="33.65" y="1615.5" >runc:[1:CHILD]</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (109,833,437 samples, 0.01%)</title><rect x="291.2" y="1397" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="294.17" y="1407.5" ></text>
</g>
<g >
<title>do_idle (714,910,180 samples, 0.09%)</title><rect x="1188.5" y="1477" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1191.50" y="1487.5" ></text>
</g>
<g >
<title>update_curr (98,143,674 samples, 0.01%)</title><rect x="71.5" y="1269" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="74.45" y="1279.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (306,406,194 samples, 0.04%)</title><rect x="939.0" y="1205" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="942.01" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (459,062,550 samples, 0.06%)</title><rect x="21.3" y="1237" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="1247.5" ></text>
</g>
<g >
<title>begin_new_exec (111,725,774 samples, 0.01%)</title><rect x="1062.9" y="1445" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1065.88" y="1455.5" ></text>
</g>
<g >
<title>__switch_to (285,578,589 samples, 0.04%)</title><rect x="946.6" y="1397" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="949.56" y="1407.5" ></text>
</g>
<g >
<title>[bash] (235,703,792 samples, 0.03%)</title><rect x="1061.3" y="1269" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1064.34" y="1279.5" ></text>
</g>
<g >
<title>newidle_balance (257,768,180 samples, 0.03%)</title><rect x="1176.3" y="1445" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1179.32" y="1455.5" ></text>
</g>
<g >
<title>schedule_idle (1,046,788,393 samples, 0.13%)</title><rect x="1104.3" y="1525" width="1.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1107.26" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (207,124,320 samples, 0.03%)</title><rect x="931.1" y="1301" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="934.13" y="1311.5" ></text>
</g>
<g >
<title>sock_read_iter (149,494,064 samples, 0.02%)</title><rect x="1189.7" y="1381" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1192.69" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="581" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (218,564,772 samples, 0.03%)</title><rect x="987.8" y="1461" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="990.84" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (130,928,551 samples, 0.02%)</title><rect x="10.9" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.88" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (697,675,190 samples, 0.09%)</title><rect x="14.2" y="1493" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.19" y="1503.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (148,121,895 samples, 0.02%)</title><rect x="1043.3" y="1573" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1046.35" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="133" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="143.5" ></text>
</g>
<g >
<title>timerqueue_add (173,800,430 samples, 0.02%)</title><rect x="954.1" y="1253" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="957.09" y="1263.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (511,769,317 samples, 0.06%)</title><rect x="29.7" y="1221" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="32.73" y="1231.5" ></text>
</g>
<g >
<title>[sel_ldr] (347,581,852,444 samples, 42.74%)</title><rect x="483.8" y="1589" width="504.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="486.83" y="1599.5" >[sel_ldr]</text>
</g>
<g >
<title>fput (170,810,036 samples, 0.02%)</title><rect x="927.3" y="1381" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="930.31" y="1391.5" ></text>
</g>
<g >
<title>menu_select (2,467,245,430 samples, 0.30%)</title><rect x="284.4" y="1493" width="3.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="287.37" y="1503.5" ></text>
</g>
<g >
<title>v8::internal::Heap::PerformGarbageCollection (201,221,354 samples, 0.02%)</title><rect x="23.5" y="1461" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="26.50" y="1471.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (86,849,758 samples, 0.01%)</title><rect x="1189.7" y="1301" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1192.73" y="1311.5" ></text>
</g>
<g >
<title>start_secondary (26,446,127,531 samples, 3.25%)</title><rect x="1067.7" y="1573" width="38.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1070.71" y="1583.5" >sta..</text>
</g>
<g >
<title>__slab_free (78,286,467 samples, 0.01%)</title><rect x="1071.1" y="1285" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1074.07" y="1295.5" ></text>
</g>
<g >
<title>psi_task_change (953,840,984 samples, 0.12%)</title><rect x="73.0" y="1301" width="1.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="76.04" y="1311.5" ></text>
</g>
<g >
<title>rcu_core_si (198,390,539 samples, 0.02%)</title><rect x="307.8" y="1317" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="310.82" y="1327.5" ></text>
</g>
<g >
<title>pick_next_task (1,775,571,234 samples, 0.22%)</title><rect x="970.4" y="1269" width="2.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="973.42" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (432,482,893 samples, 0.05%)</title><rect x="21.3" y="1157" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.30" y="1167.5" ></text>
</g>
<g >
<title>[libc.so.6] (209,549,360 samples, 0.03%)</title><rect x="14.4" y="1397" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.41" y="1407.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (110,881,218 samples, 0.01%)</title><rect x="29.8" y="1173" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="32.84" y="1183.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_insert (268,408,525 samples, 0.03%)</title><rect x="1059.2" y="1525" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1062.18" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1413" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="15.43" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (140,597,909 samples, 0.02%)</title><rect x="21.3" y="533" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="543.5" ></text>
</g>
<g >
<title>clear_page_erms (71,754,620 samples, 0.01%)</title><rect x="987.9" y="1269" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="990.90" y="1279.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (1,992,391,725 samples, 0.24%)</title><rect x="731.3" y="1477" width="2.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="734.30" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (160,553,375 samples, 0.02%)</title><rect x="1189.7" y="1445" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.67" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (117,220,654 samples, 0.01%)</title><rect x="1062.2" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.24" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (530,766,551 samples, 0.07%)</title><rect x="1063.4" y="1557" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1066.44" y="1567.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (149,683,646 samples, 0.02%)</title><rect x="83.6" y="1301" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="86.62" y="1311.5" ></text>
</g>
<g >
<title>shuffle_freelist (127,813,709 samples, 0.02%)</title><rect x="903.8" y="1221" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="906.76" y="1231.5" ></text>
</g>
<g >
<title>perf_mmap__push (1,411,841,550 samples, 0.17%)</title><rect x="28.6" y="1525" width="2.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="31.57" y="1535.5" ></text>
</g>
<g >
<title>load_balance (252,658,008 samples, 0.03%)</title><rect x="1176.3" y="1429" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1179.32" y="1439.5" ></text>
</g>
<g >
<title>[[vdso]] (320,498,590 samples, 0.04%)</title><rect x="987.3" y="1381" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="990.31" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (91,911,950 samples, 0.01%)</title><rect x="12.0" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.05" y="1439.5" ></text>
</g>
<g >
<title>psi_task_change (235,714,250 samples, 0.03%)</title><rect x="1122.6" y="1301" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1125.58" y="1311.5" ></text>
</g>
<g >
<title>try_to_wake_up (80,393,871 samples, 0.01%)</title><rect x="1106.2" y="1285" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1109.18" y="1295.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (143,847,038 samples, 0.02%)</title><rect x="934.4" y="1237" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="937.40" y="1247.5" ></text>
</g>
<g >
<title>run_ksoftirqd (470,041,433 samples, 0.06%)</title><rect x="1066.9" y="1525" width="0.7" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1069.88" y="1535.5" ></text>
</g>
<g >
<title>read_tsc (221,368,918 samples, 0.03%)</title><rect x="304.1" y="1509" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="307.13" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1013" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1023.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (1,882,109,147 samples, 0.23%)</title><rect x="916.0" y="1285" width="2.8" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="919.04" y="1295.5" ></text>
</g>
<g >
<title>copy_page_range (1,491,912,682 samples, 0.18%)</title><rect x="17.5" y="1333" width="2.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="20.49" y="1343.5" ></text>
</g>
<g >
<title>execve (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1445" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="15.43" y="1455.5" ></text>
</g>
<g >
<title>__schedule (257,768,180 samples, 0.03%)</title><rect x="1176.3" y="1509" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1179.32" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="213" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1333" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1343.5" ></text>
</g>
<g >
<title>[bash] (136,607,483 samples, 0.02%)</title><rect x="1060.9" y="1461" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1063.95" y="1471.5" ></text>
</g>
<g >
<title>__tsearch (92,970,260 samples, 0.01%)</title><rect x="14.9" y="1413" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="17.88" y="1423.5" ></text>
</g>
<g >
<title>[bash] (184,497,365 samples, 0.02%)</title><rect x="1061.7" y="1365" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1064.72" y="1375.5" ></text>
</g>
<g >
<title>__clone (531,832,296 samples, 0.07%)</title><rect x="1058.8" y="1589" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1061.80" y="1599.5" ></text>
</g>
<g >
<title>__calc_delta (222,232,453 samples, 0.03%)</title><rect x="964.9" y="1205" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="967.89" y="1215.5" ></text>
</g>
<g >
<title>all (813,251,410,438 samples, 100%)</title><rect x="10.0" y="1621" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,057,970,499 samples, 0.13%)</title><rect x="282.0" y="1429" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="284.96" y="1439.5" ></text>
</g>
<g >
<title>handle_mm_fault (250,949,014 samples, 0.03%)</title><rect x="24.1" y="1381" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="27.08" y="1391.5" ></text>
</g>
<g >
<title>native_sched_clock (202,651,664 samples, 0.02%)</title><rect x="976.7" y="1205" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="979.67" y="1215.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1,933,288,874 samples, 0.24%)</title><rect x="1106.1" y="1573" width="2.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1109.08" y="1583.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (584,932,526 samples, 0.07%)</title><rect x="21.2" y="1525" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="24.19" y="1535.5" ></text>
</g>
<g >
<title>enqueue_task_fair (351,179,152 samples, 0.04%)</title><rect x="1166.7" y="1445" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1169.73" y="1455.5" ></text>
</g>
<g >
<title>do_idle (34,947,414,950 samples, 4.30%)</title><rect x="1119.5" y="1541" width="50.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1122.47" y="1551.5" >do_idle</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="293" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="303.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (887,954,282 samples, 0.11%)</title><rect x="1039.4" y="1573" width="1.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1042.39" y="1583.5" ></text>
</g>
<g >
<title>wrk (312,066,282 samples, 0.04%)</title><rect x="1189.5" y="1605" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1192.55" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="485" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="495.5" ></text>
</g>
<g >
<title>statx (126,982,019 samples, 0.02%)</title><rect x="13.8" y="1493" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="16.79" y="1503.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (81,317,462 samples, 0.01%)</title><rect x="1118.0" y="1589" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1121.01" y="1599.5" ></text>
</g>
<g >
<title>kmem_cache_free (304,022,935 samples, 0.04%)</title><rect x="82.5" y="1317" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="85.47" y="1327.5" ></text>
</g>
<g >
<title>try_to_wake_up (273,439,518 samples, 0.03%)</title><rect x="282.0" y="1333" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="285.02" y="1343.5" ></text>
</g>
<g >
<title>__memset (72,174,290 samples, 0.01%)</title><rect x="908.3" y="1285" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="911.28" y="1295.5" ></text>
</g>
<g >
<title>copy_present_pte (432,855,353 samples, 0.05%)</title><rect x="18.9" y="1285" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="21.87" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1189" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="981" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="357" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="367.5" ></text>
</g>
<g >
<title>sched_clock (256,379,729 samples, 0.03%)</title><rect x="856.7" y="1285" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="859.73" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (117,220,654 samples, 0.01%)</title><rect x="1062.2" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.24" y="1391.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (70,582,823 samples, 0.01%)</title><rect x="305.5" y="1541" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="308.53" y="1551.5" ></text>
</g>
<g >
<title>unmap_page_range (1,532,859,851 samples, 0.19%)</title><rect x="26.2" y="1333" width="2.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="29.17" y="1343.5" ></text>
</g>
<g >
<title>ovl_read_iter (71,232,017 samples, 0.01%)</title><rect x="818.3" y="1301" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="821.30" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="661" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="671.5" ></text>
</g>
<g >
<title>v8::internal::Heap::CollectGarbage (201,221,354 samples, 0.02%)</title><rect x="23.5" y="1477" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="26.50" y="1487.5" ></text>
</g>
<g >
<title>try_to_wake_up (5,538,978,075 samples, 0.68%)</title><rect x="67.0" y="1349" width="8.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="69.96" y="1359.5" ></text>
</g>
<g >
<title>NaClClockGetTime (148,120,343 samples, 0.02%)</title><rect x="676.3" y="1525" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="679.35" y="1535.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (268,408,525 samples, 0.03%)</title><rect x="1059.2" y="1493" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1062.18" y="1503.5" ></text>
</g>
<g >
<title>native_write_msr (590,325,523 samples, 0.07%)</title><rect x="76.8" y="1365" width="0.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="79.81" y="1375.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (2,382,627,733 samples, 0.29%)</title><rect x="915.6" y="1317" width="3.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="918.58" y="1327.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (484,716,749 samples, 0.06%)</title><rect x="937.0" y="1157" width="0.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="939.99" y="1167.5" ></text>
</g>
<g >
<title>__libc_start_main (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1573" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="15.43" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (257,701,202 samples, 0.03%)</title><rect x="21.3" y="805" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="815.5" ></text>
</g>
<g >
<title>menu_select (402,450,386 samples, 0.05%)</title><rect x="1102.9" y="1493" width="0.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1105.91" y="1503.5" ></text>
</g>
<g >
<title>tcp_get_idx (121,938,993 samples, 0.01%)</title><rect x="25.1" y="1349" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="28.14" y="1359.5" ></text>
</g>
<g >
<title>ls (1,863,225,664 samples, 0.23%)</title><rect x="12.8" y="1605" width="2.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="15.81" y="1615.5" ></text>
</g>
<g >
<title>__x64_sys_futex (6,688,141,818 samples, 0.82%)</title><rect x="860.9" y="1381" width="9.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="863.87" y="1391.5" ></text>
</g>
<g >
<title>read_tsc (160,939,174 samples, 0.02%)</title><rect x="957.5" y="1237" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="960.53" y="1247.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (502,134,811 samples, 0.06%)</title><rect x="29.7" y="1205" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="32.74" y="1215.5" ></text>
</g>
<g >
<title>__schedule (135,072,894 samples, 0.02%)</title><rect x="1174.2" y="1445" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1177.17" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (161,316,576 samples, 0.02%)</title><rect x="22.3" y="1541" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.30" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1445" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1061.80" y="1455.5" ></text>
</g>
<g >
<title>__update_load_avg_se (109,025,651 samples, 0.01%)</title><rect x="963.3" y="1221" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="966.35" y="1231.5" ></text>
</g>
<g >
<title>_dl_catch_exception (75,283,902 samples, 0.01%)</title><rect x="11.6" y="1509" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="14.60" y="1519.5" ></text>
</g>
<g >
<title>i_callback (78,458,426 samples, 0.01%)</title><rect x="1124.3" y="1333" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1127.35" y="1343.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1,643,487,497 samples, 0.20%)</title><rect x="1040.7" y="1573" width="2.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1043.68" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="629" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="639.5" ></text>
</g>
<g >
<title>sched_clock (101,225,624 samples, 0.01%)</title><rect x="74.8" y="1301" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="77.83" y="1311.5" ></text>
</g>
<g >
<title>__schedule (1,418,556,012 samples, 0.17%)</title><rect x="1167.7" y="1509" width="2.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1170.73" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter (31,441,351,384 samples, 3.87%)</title><rect x="1120.0" y="1493" width="45.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1123.00" y="1503.5" >cpui..</text>
</g>
<g >
<title>[libc.so.6] (87,863,787 samples, 0.01%)</title><rect x="1063.7" y="1397" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1066.68" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (678,197,960 samples, 0.08%)</title><rect x="1188.5" y="1461" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1191.51" y="1471.5" ></text>
</g>
<g >
<title>NaClLog (701,823,594 samples, 0.09%)</title><rect x="756.1" y="1541" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="759.12" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (76,698,540 samples, 0.01%)</title><rect x="15.2" y="1589" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.22" y="1599.5" ></text>
</g>
<g >
<title>exec_binprm (1,703,531,240 samples, 0.21%)</title><rect x="25.9" y="1493" width="2.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="28.92" y="1503.5" ></text>
</g>
<g >
<title>wake_up_process (277,012,670 samples, 0.03%)</title><rect x="282.0" y="1349" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="285.02" y="1359.5" ></text>
</g>
<g >
<title>__writeback_single_inode (83,097,659 samples, 0.01%)</title><rect x="58.7" y="1429" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="61.68" y="1439.5" ></text>
</g>
<g >
<title>[bash] (720,702,247 samples, 0.09%)</title><rect x="1060.9" y="1477" width="1.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1063.95" y="1487.5" ></text>
</g>
<g >
<title>mmput (105,297,462 samples, 0.01%)</title><rect x="1062.9" y="1413" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1065.88" y="1423.5" ></text>
</g>
<g >
<title>futex_wait_queue (4,792,378,597 samples, 0.59%)</title><rect x="862.3" y="1333" width="7.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="865.34" y="1343.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8,212,478,698 samples, 1.01%)</title><rect x="66.0" y="1413" width="11.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="69.01" y="1423.5" ></text>
</g>
<g >
<title>rcu_do_batch (3,311,799,572 samples, 0.41%)</title><rect x="53.5" y="1461" width="4.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="56.49" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (459,062,550 samples, 0.06%)</title><rect x="21.3" y="1221" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.30" y="1231.5" ></text>
</g>
<g >
<title>native_write_msr (117,825,203 samples, 0.01%)</title><rect x="1070.4" y="1365" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1073.45" y="1375.5" ></text>
</g>
<g >
<title>irq_enter_rcu (395,754,734 samples, 0.05%)</title><rect x="78.0" y="1429" width="0.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="81.01" y="1439.5" ></text>
</g>
<g >
<title>native_sched_clock (79,503,959 samples, 0.01%)</title><rect x="1129.1" y="1429" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1132.14" y="1439.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (83,097,659 samples, 0.01%)</title><rect x="58.7" y="1461" width="0.1" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="61.68" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_select (565,155,019 samples, 0.07%)</title><rect x="1165.7" y="1509" width="0.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1168.66" y="1519.5" ></text>
</g>
<g >
<title>xas_descend (78,017,728 samples, 0.01%)</title><rect x="918.3" y="1221" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="921.34" y="1231.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (140,907,786 samples, 0.02%)</title><rect x="940.4" y="1285" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="943.40" y="1295.5" ></text>
</g>
<g >
<title>do_mmap (261,218,008 samples, 0.03%)</title><rect x="1058.8" y="1365" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1061.80" y="1375.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get_mut (29,407,543,529 samples, 3.62%)</title><rect x="831.3" y="1461" width="42.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="834.33" y="1471.5" >&lt;das..</text>
</g>
<g >
<title>call_cpuidle (2,527,383,348 samples, 0.31%)</title><rect x="1170.3" y="1445" width="3.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1173.32" y="1455.5" ></text>
</g>
<g >
<title>[bash] (110,376,069 samples, 0.01%)</title><rect x="1061.5" y="1173" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1064.50" y="1183.5" ></text>
</g>
<g >
<title>rcu_core (478,546,646 samples, 0.06%)</title><rect x="1123.9" y="1365" width="0.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1126.93" y="1375.5" ></text>
</g>
<g >
<title>fdarray__poll (90,388,507 samples, 0.01%)</title><rect x="28.4" y="1557" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="31.44" y="1567.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (85,488,565 samples, 0.01%)</title><rect x="56.1" y="1413" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="59.12" y="1423.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (523,896,409 samples, 0.06%)</title><rect x="24.1" y="1557" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="27.08" y="1567.5" ></text>
</g>
<g >
<title>ret_from_fork (401,495,751 samples, 0.05%)</title><rect x="1176.1" y="1573" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1179.11" y="1583.5" ></text>
</g>
<g >
<title>kmem_cache_free (109,598,542 samples, 0.01%)</title><rect x="1124.2" y="1317" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1127.19" y="1327.5" ></text>
</g>
<g >
<title>__get_user_8 (251,300,304 samples, 0.03%)</title><rect x="929.1" y="1317" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="932.09" y="1327.5" ></text>
</g>
<g >
<title>try_to_wake_up (891,799,034 samples, 0.11%)</title><rect x="1068.9" y="1349" width="1.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1071.86" y="1359.5" ></text>
</g>
<g >
<title>load_elf_binary (1,703,531,240 samples, 0.21%)</title><rect x="25.9" y="1461" width="2.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="28.92" y="1471.5" ></text>
</g>
<g >
<title>record_times (87,285,729 samples, 0.01%)</title><rect x="302.1" y="1461" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="305.13" y="1471.5" ></text>
</g>
<g >
<title>do_nanosleep (17,392,493,609 samples, 2.14%)</title><rect x="952.1" y="1317" width="25.3" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="955.13" y="1327.5" >d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,488,301 samples, 0.01%)</title><rect x="21.3" y="485" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.31" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1093" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1103.5" ></text>
</g>
<g >
<title>mmput (94,456,945 samples, 0.01%)</title><rect x="12.3" y="1493" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="15.30" y="1503.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (79,305,259 samples, 0.01%)</title><rect x="971.2" y="1189" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="974.20" y="1199.5" ></text>
</g>
<g >
<title>clockevents_program_event (73,506,485 samples, 0.01%)</title><rect x="282.5" y="1365" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="285.51" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1493" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.57" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (76,422,988 samples, 0.01%)</title><rect x="1060.4" y="1573" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1063.42" y="1583.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (84,169,257 samples, 0.01%)</title><rect x="1129.1" y="1445" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1132.14" y="1455.5" ></text>
</g>
<g >
<title>_start (1,250,199,249 samples, 0.15%)</title><rect x="1060.9" y="1589" width="1.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1063.95" y="1599.5" ></text>
</g>
<g >
<title>backing_file_open (259,353,077 samples, 0.03%)</title><rect x="12.4" y="1205" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="15.43" y="1215.5" ></text>
</g>
<g >
<title>recvfrom (97,346,398 samples, 0.01%)</title><rect x="943.6" y="1429" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="946.57" y="1439.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (2,857,896,225 samples, 0.35%)</title><rect x="1170.3" y="1573" width="4.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1173.26" y="1583.5" ></text>
</g>
<g >
<title>rcu_do_batch (3,088,727,001 samples, 0.38%)</title><rect x="78.9" y="1349" width="4.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="81.89" y="1359.5" ></text>
</g>
<g >
<title>__get_user_8 (90,174,996 samples, 0.01%)</title><rect x="871.6" y="1301" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="874.57" y="1311.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (110,538,695 samples, 0.01%)</title><rect x="1187.8" y="1509" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1190.81" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,066,619,173 samples, 0.99%)</title><rect x="860.5" y="1413" width="11.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="863.45" y="1423.5" ></text>
</g>
<g >
<title>psi_task_switch (1,569,636,453 samples, 0.19%)</title><rect x="300.4" y="1493" width="2.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="303.44" y="1503.5" ></text>
</g>
<g >
<title>local_clock_noinstr (485,586,074 samples, 0.06%)</title><rect x="104.7" y="1461" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="107.66" y="1471.5" ></text>
</g>
<g >
<title>sched_clock_cpu (177,801,832 samples, 0.02%)</title><rect x="304.5" y="1493" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="307.50" y="1503.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (425,940,383 samples, 0.05%)</title><rect x="857.9" y="1365" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="860.92" y="1375.5" ></text>
</g>
<g >
<title>init_file (2,398,721,317 samples, 0.29%)</title><rect x="908.5" y="1285" width="3.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="911.50" y="1295.5" ></text>
</g>
<g >
<title>rest_init (2,857,896,225 samples, 0.35%)</title><rect x="1170.3" y="1509" width="4.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1173.26" y="1519.5" ></text>
</g>
<g >
<title>write (1,384,254,175 samples, 0.17%)</title><rect x="28.6" y="1461" width="2.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="31.61" y="1471.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (261,579,012 samples, 0.03%)</title><rect x="16.8" y="1573" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="19.84" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (32,210,213,463 samples, 3.96%)</title><rect x="1119.8" y="1525" width="46.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1122.78" y="1535.5" >cpui..</text>
</g>
<g >
<title>CompareAndSwap (737,048,060 samples, 0.09%)</title><rect x="523.8" y="1557" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="526.79" y="1567.5" ></text>
</g>
<g >
<title>gettimeofday@plt (249,153,197 samples, 0.03%)</title><rect x="814.7" y="1509" width="0.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="817.73" y="1519.5" ></text>
</g>
<g >
<title>newidle_balance (1,129,341,880 samples, 0.14%)</title><rect x="970.8" y="1237" width="1.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="973.81" y="1247.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (716,923,131 samples, 0.09%)</title><rect x="904.4" y="1269" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="907.39" y="1279.5" ></text>
</g>
<g >
<title>psi_group_change (214,996,465 samples, 0.03%)</title><rect x="1169.1" y="1477" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1172.12" y="1487.5" ></text>
</g>
<g >
<title>__libc_start_main (529,986,610 samples, 0.07%)</title><rect x="10.7" y="1573" width="0.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.69" y="1583.5" ></text>
</g>
<g >
<title>memcg_list_lru_alloc (374,437,959 samples, 0.05%)</title><rect x="906.1" y="1253" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="909.08" y="1263.5" ></text>
</g>
<g >
<title>enqueue_entity (1,254,650,687 samples, 0.15%)</title><rect x="289.7" y="1429" width="1.8" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="292.71" y="1439.5" ></text>
</g>
<g >
<title>iput (3,721,785,499 samples, 0.46%)</title><rect x="934.2" y="1253" width="5.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="937.22" y="1263.5" ></text>
</g>
<g >
<title>__tsearch (133,492,501 samples, 0.02%)</title><rect x="11.2" y="1413" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="14.17" y="1423.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (174,209,844 samples, 0.02%)</title><rect x="1102.5" y="1445" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1105.53" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1141" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1151.5" ></text>
</g>
<g >
<title>NaClSysClockGetTimeDecoder (55,053,180,943 samples, 6.77%)</title><rect x="658.3" y="1557" width="79.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="661.30" y="1567.5" >NaClSysCl..</text>
</g>
<g >
<title>sched_clock_noinstr (119,191,367 samples, 0.01%)</title><rect x="304.6" y="1461" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="307.57" y="1471.5" ></text>
</g>
<g >
<title>sched_clock (240,859,498 samples, 0.03%)</title><rect x="976.6" y="1237" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="979.61" y="1247.5" ></text>
</g>
<g >
<title>__do_softirq (79,506,612 samples, 0.01%)</title><rect x="1170.7" y="1333" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1173.67" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,909,237,535 samples, 0.36%)</title><rect x="876.0" y="1429" width="4.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="878.99" y="1439.5" ></text>
</g>
<g >
<title>new_slab (281,408,252 samples, 0.03%)</title><rect x="903.5" y="1253" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="906.54" y="1263.5" ></text>
</g>
<g >
<title>alloc_empty_file (5,066,535,378 samples, 0.62%)</title><rect x="908.2" y="1301" width="7.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="911.17" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (123,453,270 samples, 0.02%)</title><rect x="12.0" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.03" y="1471.5" ></text>
</g>
<g >
<title>native_sched_clock (108,386,163 samples, 0.01%)</title><rect x="304.6" y="1445" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="307.59" y="1455.5" ></text>
</g>
<g >
<title>unmap_single_vma (1,556,002,483 samples, 0.19%)</title><rect x="26.1" y="1349" width="2.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="29.13" y="1359.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (438,328,211 samples, 0.05%)</title><rect x="282.0" y="1397" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="284.98" y="1407.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (98,747,768 samples, 0.01%)</title><rect x="326.5" y="1573" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="329.50" y="1583.5" ></text>
</g>
<g >
<title>setlocale (512,832,712 samples, 0.06%)</title><rect x="10.7" y="1525" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.71" y="1535.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,878,797,364 samples, 0.23%)</title><rect x="1121.0" y="1413" width="2.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1124.01" y="1423.5" ></text>
</g>
<g >
<title>NaClCopyOutToUser (148,121,159 samples, 0.02%)</title><rect x="1043.6" y="1573" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1046.56" y="1583.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (214,392,701 samples, 0.03%)</title><rect x="856.8" y="1269" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="859.79" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1061" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1071.5" ></text>
</g>
<g >
<title>pick_next_task (397,277,783 samples, 0.05%)</title><rect x="1168.4" y="1493" width="0.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1171.39" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (173,824,264 samples, 0.02%)</title><rect x="11.5" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.48" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,805,694,270 samples, 0.22%)</title><rect x="17.3" y="1461" width="2.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="20.33" y="1471.5" ></text>
</g>
<g >
<title>__do_softirq (3,521,783,639 samples, 0.43%)</title><rect x="53.2" y="1509" width="5.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="56.24" y="1519.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (226,226,605 samples, 0.03%)</title><rect x="879.5" y="1301" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="882.49" y="1311.5" ></text>
</g>
<g >
<title>rcu_core (143,654,853 samples, 0.02%)</title><rect x="1177.8" y="1365" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1180.84" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (180,017,763 samples, 0.02%)</title><rect x="22.3" y="1557" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.30" y="1567.5" ></text>
</g>
<g >
<title>read (92,301,605 samples, 0.01%)</title><rect x="818.3" y="1397" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="821.29" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="549" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (235,447,312 samples, 0.03%)</title><rect x="25.0" y="1477" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="27.97" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="229" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="239.5" ></text>
</g>
<g >
<title>command_substitute (229,784,265 samples, 0.03%)</title><rect x="1061.3" y="1221" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1064.35" y="1231.5" ></text>
</g>
<g >
<title>expand_string_assignment (235,703,792 samples, 0.03%)</title><rect x="1061.3" y="1253" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1064.34" y="1263.5" ></text>
</g>
<g >
<title>clockevents_program_event (94,143,895 samples, 0.01%)</title><rect x="307.6" y="1317" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="310.56" y="1327.5" ></text>
</g>
<g >
<title>futex_wake_mark (396,069,539 samples, 0.05%)</title><rect x="877.3" y="1349" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="880.33" y="1359.5" ></text>
</g>
<g >
<title>tick_nohz_stop_idle (248,018,461 samples, 0.03%)</title><rect x="305.1" y="1509" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="308.06" y="1519.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (165,963,503 samples, 0.02%)</title><rect x="24.5" y="1493" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="27.46" y="1503.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (1,703,531,240 samples, 0.21%)</title><rect x="25.9" y="1509" width="2.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="28.92" y="1519.5" ></text>
</g>
<g >
<title>start_kernel (13,383,742,343 samples, 1.65%)</title><rect x="306.1" y="1541" width="19.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="309.05" y="1551.5" ></text>
</g>
<g >
<title>NaClSysClockGetTime (44,460,540,768 samples, 5.47%)</title><rect x="673.7" y="1541" width="64.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="676.67" y="1551.5" >NaClSys..</text>
</g>
<g >
<title>dispatcher (119,951,715 samples, 0.01%)</title><rect x="818.3" y="1509" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="821.26" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="549" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (578,356,290 samples, 0.07%)</title><rect x="901.8" y="1269" width="0.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="904.85" y="1279.5" ></text>
</g>
<g >
<title>[perf-67004.map] (104,510,015,179 samples, 12.85%)</title><rect x="332.2" y="1589" width="151.6" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="335.19" y="1599.5" >[perf-67004.map]</text>
</g>
<g >
<title>__libc_start_main (530,766,551 samples, 0.07%)</title><rect x="1063.4" y="1573" width="0.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1066.44" y="1583.5" ></text>
</g>
<g >
<title>run_ksoftirqd (3,530,854,560 samples, 0.43%)</title><rect x="53.2" y="1525" width="5.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="56.24" y="1535.5" ></text>
</g>
<g >
<title>check_preempt_curr (102,891,185 samples, 0.01%)</title><rect x="289.0" y="1461" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="291.99" y="1471.5" ></text>
</g>
<g >
<title>menu_select (197,138,574 samples, 0.02%)</title><rect x="324.0" y="1429" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="326.96" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,188,724,736 samples, 0.15%)</title><rect x="924.6" y="1349" width="1.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="927.61" y="1359.5" ></text>
</g>
<g >
<title>irq_exit_rcu (523,873,550 samples, 0.06%)</title><rect x="1070.7" y="1429" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1073.72" y="1439.5" ></text>
</g>
<g >
<title>rebalance_domains (228,709,449 samples, 0.03%)</title><rect x="1178.1" y="1365" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1181.06" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1397" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="1407.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (142,394,134 samples, 0.02%)</title><rect x="324.3" y="1445" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="327.29" y="1455.5" ></text>
</g>
<g >
<title>security_inode_free (598,920,316 samples, 0.07%)</title><rect x="936.9" y="1189" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="939.91" y="1199.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (18,407,718,171 samples, 2.26%)</title><rect x="950.9" y="1333" width="26.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="953.89" y="1343.5" >h..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::pread_syscall (119,951,715 samples, 0.01%)</title><rect x="818.3" y="1493" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="821.26" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock (120,437,503 samples, 0.01%)</title><rect x="67.4" y="1333" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="70.38" y="1343.5" ></text>
</g>
<g >
<title>pick_next_task_fair (192,537,000 samples, 0.02%)</title><rect x="1104.9" y="1477" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1107.87" y="1487.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (177,079,167 samples, 0.02%)</title><rect x="943.5" y="1461" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="946.46" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (279,911,058 samples, 0.03%)</title><rect x="21.3" y="869" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.30" y="879.5" ></text>
</g>
<g >
<title>execute_command_internal (368,131,386 samples, 0.05%)</title><rect x="1061.2" y="1349" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1064.16" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_lock (157,186,391 samples, 0.02%)</title><rect x="919.4" y="1301" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="922.44" y="1311.5" ></text>
</g>
<g >
<title>uv__read (133,039,971 samples, 0.02%)</title><rect x="23.8" y="1541" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="26.84" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1509" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="1519.5" ></text>
</g>
<g >
<title>futex_q_lock (457,368,049 samples, 0.06%)</title><rect x="869.8" y="1317" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="872.81" y="1327.5" ></text>
</g>
<g >
<title>v8::internal::ScavengerCollector::CollectGarbage (197,168,189 samples, 0.02%)</title><rect x="23.5" y="1429" width="0.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="26.50" y="1439.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (81,406,450 samples, 0.01%)</title><rect x="1170.0" y="1525" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1173.03" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="181" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="191.5" ></text>
</g>
<g >
<title>[unknown] (1,997,089,720 samples, 0.25%)</title><rect x="21.2" y="1589" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="24.15" y="1599.5" ></text>
</g>
<g >
<title>do_iter_write (1,321,486,513 samples, 0.16%)</title><rect x="28.7" y="1333" width="1.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="31.68" y="1343.5" ></text>
</g>
<g >
<title>v8::internal::ArrayBufferSweeper::SweepingJob::SweepYoung (255,894,170 samples, 0.03%)</title><rect x="24.1" y="1509" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="27.08" y="1519.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (88,323,891 samples, 0.01%)</title><rect x="287.4" y="1477" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="290.42" y="1487.5" ></text>
</g>
<g >
<title>__mmput (94,456,945 samples, 0.01%)</title><rect x="12.3" y="1477" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="15.30" y="1487.5" ></text>
</g>
<g >
<title>update_load_avg (152,432,320 samples, 0.02%)</title><rect x="1168.7" y="1445" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1171.71" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (87,491,398 samples, 0.01%)</title><rect x="943.6" y="1397" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="946.58" y="1407.5" ></text>
</g>
<g >
<title>ttwu_do_activate (101,827,505 samples, 0.01%)</title><rect x="1170.5" y="1269" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1173.46" y="1279.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,201,127,391 samples, 0.15%)</title><rect x="1121.3" y="1349" width="1.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1124.26" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (123,453,270 samples, 0.02%)</title><rect x="12.0" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.03" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1,703,531,240 samples, 0.21%)</title><rect x="25.9" y="1557" width="2.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="28.92" y="1567.5" ></text>
</g>
<g >
<title>memcpy@plt (246,791,039 samples, 0.03%)</title><rect x="673.2" y="1525" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="676.17" y="1535.5" ></text>
</g>
<g >
<title>NaClSysGetTimeOfDayDecoder (296,113,731 samples, 0.04%)</title><rect x="1052.6" y="1573" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1055.56" y="1583.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (97,915,565 samples, 0.01%)</title><rect x="890.3" y="1413" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="893.25" y="1423.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (78,821,630 samples, 0.01%)</title><rect x="1188.5" y="1381" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1191.54" y="1391.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (73,130,066 samples, 0.01%)</title><rect x="985.1" y="1381" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="988.06" y="1391.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (610,746,055 samples, 0.08%)</title><rect x="306.8" y="1349" width="0.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="309.81" y="1359.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (163,743,211 samples, 0.02%)</title><rect x="1106.2" y="1381" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1109.16" y="1391.5" ></text>
</g>
<g >
<title>kthread (3,893,298,416 samples, 0.48%)</title><rect x="53.2" y="1557" width="5.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="56.17" y="1567.5" ></text>
</g>
<g >
<title>rest_init (1,933,288,874 samples, 0.24%)</title><rect x="1106.1" y="1509" width="2.8" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1109.08" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="709" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="719.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (448,572,127 samples, 0.06%)</title><rect x="987.1" y="1461" width="0.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="990.13" y="1471.5" ></text>
</g>
<g >
<title>sched_clock_cpu (289,635,862 samples, 0.04%)</title><rect x="976.5" y="1253" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="979.55" y="1263.5" ></text>
</g>
<g >
<title>_copy_to_iter (76,426,916 samples, 0.01%)</title><rect x="1189.7" y="1253" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1192.74" y="1263.5" ></text>
</g>
<g >
<title>ksys_read (235,447,312 samples, 0.03%)</title><rect x="25.0" y="1445" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="27.97" y="1455.5" ></text>
</g>
<g >
<title>xas_descend (80,964,353 samples, 0.01%)</title><rect x="906.5" y="1221" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="909.45" y="1231.5" ></text>
</g>
<g >
<title>fput (145,608,145 samples, 0.02%)</title><rect x="920.8" y="1365" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="923.85" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (235,447,312 samples, 0.03%)</title><rect x="25.0" y="1493" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="27.97" y="1503.5" ></text>
</g>
<g >
<title>common_nsleep (259,250,726 samples, 0.03%)</title><rect x="978.6" y="1365" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="981.57" y="1375.5" ></text>
</g>
<g >
<title>__clone (288,668,140 samples, 0.04%)</title><rect x="1189.6" y="1589" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.57" y="1599.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1,574,065,835 samples, 0.19%)</title><rect x="297.6" y="1477" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="300.59" y="1487.5" ></text>
</g>
<g >
<title>show_mountinfo (155,271,717 samples, 0.02%)</title><rect x="52.6" y="1477" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="55.64" y="1487.5" ></text>
</g>
<g >
<title>worker_thread (120,035,089 samples, 0.01%)</title><rect x="1119.3" y="1541" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1122.25" y="1551.5" ></text>
</g>
<g >
<title>inet_sendmsg (210,400,398 samples, 0.03%)</title><rect x="987.8" y="1397" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="990.84" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (457,435,356 samples, 0.06%)</title><rect x="22.6" y="1509" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.57" y="1519.5" ></text>
</g>
<g >
<title>set_task_cpu (201,276,610 samples, 0.02%)</title><rect x="68.5" y="1333" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="71.51" y="1343.5" ></text>
</g>
<g >
<title>ktime_get (104,684,001 samples, 0.01%)</title><rect x="954.4" y="1269" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="957.44" y="1279.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (258,989,712 samples, 0.03%)</title><rect x="1120.0" y="1477" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1123.02" y="1487.5" ></text>
</g>
<g >
<title>NaClLog (2,075,209,669 samples, 0.26%)</title><rect x="488.5" y="1573" width="3.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="491.52" y="1583.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (130,016,167 samples, 0.02%)</title><rect x="905.9" y="1253" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="908.87" y="1263.5" ></text>
</g>
<g >
<title>dequeue_task_fair (4,283,070,677 samples, 0.53%)</title><rect x="962.1" y="1253" width="6.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="965.11" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (126,861,711 samples, 0.02%)</title><rect x="22.4" y="421" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="25.35" y="431.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (390,280,820 samples, 0.05%)</title><rect x="914.9" y="1285" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="917.94" y="1295.5" ></text>
</g>
<g >
<title>filename_lookup (75,330,260 samples, 0.01%)</title><rect x="13.8" y="1397" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="16.80" y="1407.5" ></text>
</g>
<g >
<title>aeMain (284,540,081 samples, 0.03%)</title><rect x="1189.6" y="1541" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1192.57" y="1551.5" ></text>
</g>
<g >
<title>do_sys_poll (75,605,098 samples, 0.01%)</title><rect x="28.5" y="1477" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="31.46" y="1487.5" ></text>
</g>
<g >
<title>kmem_cache_free (97,655,499 samples, 0.01%)</title><rect x="1067.3" y="1413" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1070.28" y="1423.5" ></text>
</g>
<g >
<title>cpu_startup_entry (719,854,347 samples, 0.09%)</title><rect x="1188.5" y="1493" width="1.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1191.50" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (77,038,642 samples, 0.01%)</title><rect x="1066.7" y="1573" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1069.68" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="117" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="127.5" ></text>
</g>
<g >
<title>ion (1,384,254,175 samples, 0.17%)</title><rect x="28.6" y="1477" width="2.0" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="31.61" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="245" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="255.5" ></text>
</g>
<g >
<title>start_secondary (8,138,830,022 samples, 1.00%)</title><rect x="1176.7" y="1573" width="11.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1179.69" y="1583.5" ></text>
</g>
<g >
<title>mod_objcg_state (89,640,144 samples, 0.01%)</title><rect x="81.0" y="1301" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="83.98" y="1311.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (148,117,240 samples, 0.02%)</title><rect x="483.5" y="1509" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="486.49" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (126,861,711 samples, 0.02%)</title><rect x="22.4" y="1205" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="25.35" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_lock (200,688,666 samples, 0.02%)</title><rect x="961.7" y="1269" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="964.71" y="1279.5" ></text>
</g>
<g >
<title>[ls] (475,190,933 samples, 0.06%)</title><rect x="13.3" y="1509" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="16.29" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2,779,435,036 samples, 0.34%)</title><rect x="876.1" y="1397" width="4.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="879.06" y="1407.5" ></text>
</g>
<g >
<title>update_load_avg (726,025,789 samples, 0.09%)</title><rect x="71.6" y="1269" width="1.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="74.60" y="1279.5" ></text>
</g>
<g >
<title>__update_load_avg_se (132,534,528 samples, 0.02%)</title><rect x="865.4" y="1221" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="868.38" y="1231.5" ></text>
</g>
<g >
<title>refill_obj_stock (162,099,577 samples, 0.02%)</title><rect x="933.8" y="1221" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="936.76" y="1231.5" ></text>
</g>
</g>
</svg>
