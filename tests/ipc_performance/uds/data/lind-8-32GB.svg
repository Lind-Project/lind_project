<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1686.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1669" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1669" > </text>
<g id="frames">
<g >
<title>lind_send (157,340,980,375 samples, 28.59%)</title><rect x="773.7" y="1541" width="337.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="776.71" y="1551.5" >lind_send</text>
</g>
<g >
<title>cpuidle_governor_latency_req (72,956,078 samples, 0.01%)</title><rect x="1189.5" y="1445" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1192.48" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="245" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="255.5" ></text>
</g>
<g >
<title>getdents64 (112,286,827 samples, 0.02%)</title><rect x="1155.2" y="1365" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1158.18" y="1375.5" ></text>
</g>
<g >
<title>perf_event_mmap (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1365" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="15.40" y="1375.5" ></text>
</g>
<g >
<title>NaClSysRecvDecoder (175,028,103,256 samples, 31.80%)</title><rect x="358.2" y="1573" width="375.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="361.16" y="1583.5" >NaClSysRecvDecoder</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="165" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="629" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="917" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="927.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (51,227,679 samples, 0.01%)</title><rect x="812.0" y="1413" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="814.96" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1013" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="1023.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (614,672,615 samples, 0.11%)</title><rect x="66.8" y="1589" width="1.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="69.77" y="1599.5" ></text>
</g>
<g >
<title>timekeeping_advance (51,192,989 samples, 0.01%)</title><rect x="1105.4" y="1301" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1108.43" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (218,436,207 samples, 0.04%)</title><rect x="1157.0" y="1477" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.96" y="1487.5" ></text>
</g>
<g >
<title>exit (100,177,650 samples, 0.02%)</title><rect x="20.3" y="1557" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="23.29" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,908,479,766 samples, 0.35%)</title><rect x="29.4" y="1493" width="4.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.39" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1157" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1167.5" ></text>
</g>
<g >
<title>ksys_read (100,200,003 samples, 0.02%)</title><rect x="49.2" y="1557" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="52.16" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1109" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="757" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="767.5" ></text>
</g>
<g >
<title>do_group_exit (412,502,065 samples, 0.07%)</title><rect x="21.0" y="1557" width="0.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="23.97" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1461" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="1471.5" ></text>
</g>
<g >
<title>load_elf_binary (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1477" width="1.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="47.59" y="1487.5" ></text>
</g>
<g >
<title>[[heap]] (511,333,768 samples, 0.09%)</title><rect x="55.7" y="1605" width="1.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="58.74" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (676,929,278 samples, 0.12%)</title><rect x="1158.0" y="1477" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.02" y="1487.5" ></text>
</g>
<g >
<title>exit_mmap (148,566,893 samples, 0.03%)</title><rect x="21.5" y="1477" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="24.54" y="1487.5" ></text>
</g>
<g >
<title>__mmput (148,566,893 samples, 0.03%)</title><rect x="21.5" y="1493" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="24.54" y="1503.5" ></text>
</g>
<g >
<title>setlocale (218,436,207 samples, 0.04%)</title><rect x="1157.0" y="1525" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1159.96" y="1535.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (2,509,819,442 samples, 0.46%)</title><rect x="28.9" y="1557" width="5.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="31.89" y="1567.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (3,881,899,183 samples, 0.71%)</title><rect x="1030.5" y="1429" width="8.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1033.48" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1173" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1183.5" ></text>
</g>
<g >
<title>xmalloc (214,090,978 samples, 0.04%)</title><rect x="1155.8" y="1301" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1158.84" y="1311.5" ></text>
</g>
<g >
<title>irq_work_run (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1141" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="15.40" y="1151.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (92,265,787 samples, 0.02%)</title><rect x="1166.2" y="1509" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1169.20" y="1519.5" ></text>
</g>
<g >
<title>schedule (161,013,911 samples, 0.03%)</title><rect x="38.4" y="1397" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.44" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="197" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="207.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::OrdinaryDefineOwnProperty (70,468,327 samples, 0.01%)</title><rect x="23.5" y="1509" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="26.48" y="1519.5" ></text>
</g>
<g >
<title>[git] (180,375,563 samples, 0.03%)</title><rect x="13.0" y="1525" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.99" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3,231,362,220 samples, 0.59%)</title><rect x="499.5" y="1413" width="7.0" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="502.55" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="293" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1509" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1519.5" ></text>
</g>
<g >
<title>malloc (500,566,355 samples, 0.09%)</title><rect x="31.6" y="725" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="34.57" y="735.5" ></text>
</g>
<g >
<title>expand_string_assignment (294,431,843 samples, 0.05%)</title><rect x="1156.3" y="1365" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1159.30" y="1375.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (97,869,515 samples, 0.02%)</title><rect x="1166.2" y="1541" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1169.20" y="1551.5" ></text>
</g>
<g >
<title>do_exit (98,648,563 samples, 0.02%)</title><rect x="20.3" y="1445" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="23.29" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1253" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="997" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="421" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="431.5" ></text>
</g>
<g >
<title>InotifyBackend::start (459,365,229 samples, 0.08%)</title><rect x="38.0" y="1541" width="1.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="40.98" y="1551.5" ></text>
</g>
<g >
<title>do_exit (412,502,065 samples, 0.07%)</title><rect x="21.0" y="1541" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="23.97" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="773" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="453" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="549" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1445" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1455.5" ></text>
</g>
<g >
<title>enqueue_task_fair (67,570,871 samples, 0.01%)</title><rect x="1166.2" y="1461" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1169.21" y="1471.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (817,430,009 samples, 0.15%)</title><rect x="265.2" y="1557" width="1.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="268.23" y="1567.5" ></text>
</g>
<g >
<title>ep_poll (108,246,359 samples, 0.02%)</title><rect x="37.2" y="1493" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="40.23" y="1503.5" ></text>
</g>
<g >
<title>[[stack]] (84,070,273 samples, 0.02%)</title><rect x="12.8" y="1605" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="15.81" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="965" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (823,502,652 samples, 0.15%)</title><rect x="29.7" y="677" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.73" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1477" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="741" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (491,199,998 samples, 0.09%)</title><rect x="30.2" y="485" width="1.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="33.24" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="341" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="517" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,000,470 samples, 0.01%)</title><rect x="29.8" y="261" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.84" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1221" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1231.5" ></text>
</g>
<g >
<title>release_pages (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1413" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="16.49" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1333" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="1343.5" ></text>
</g>
<g >
<title>__libc_start_main (660,450,854 samples, 0.12%)</title><rect x="10.9" y="1589" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.90" y="1599.5" ></text>
</g>
<g >
<title>malloc (254,690,569 samples, 0.05%)</title><rect x="28.3" y="69" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="31.28" y="79.5" ></text>
</g>
<g >
<title>mmput (2,182,376,060 samples, 0.40%)</title><rect x="39.9" y="1429" width="4.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="42.91" y="1439.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (204,655,370 samples, 0.04%)</title><rect x="1132.7" y="1589" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1135.70" y="1599.5" ></text>
</g>
<g >
<title>__queue_work (542,715,636 samples, 0.10%)</title><rect x="1180.3" y="1413" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1183.31" y="1423.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (460,529,738 samples, 0.08%)</title><rect x="267.1" y="1573" width="1.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="270.09" y="1583.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (121,524,439 samples, 0.02%)</title><rect x="12.4" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.36" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1365" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="1375.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (5,265,070,605 samples, 0.96%)</title><rect x="828.9" y="1445" width="11.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="831.95" y="1455.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (47,157,433 samples, 0.01%)</title><rect x="1188.9" y="1429" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1191.88" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="341" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::net::SocketHandle&gt;&gt; (5,654,378,405 samples, 1.03%)</title><rect x="849.6" y="1493" width="12.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="852.56" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1301" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (51,054,570 samples, 0.01%)</title><rect x="732.3" y="1365" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="735.30" y="1375.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (561,646,899 samples, 0.10%)</title><rect x="59.6" y="1589" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="62.57" y="1599.5" ></text>
</g>
<g >
<title>d_path (99,233,183 samples, 0.02%)</title><rect x="18.4" y="1413" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="21.39" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (200,896,989 samples, 0.04%)</title><rect x="19.6" y="1413" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.58" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1573" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1583.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1365" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="359.09" y="1375.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (51,278,340 samples, 0.01%)</title><rect x="637.3" y="1333" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="640.33" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (700,099,635 samples, 0.13%)</title><rect x="1158.0" y="1509" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.02" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1093" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="789" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="799.5" ></text>
</g>
<g >
<title>irqentry_exit (51,227,679 samples, 0.01%)</title><rect x="812.0" y="1445" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="814.96" y="1455.5" ></text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (357,324,643 samples, 0.06%)</title><rect x="1027.4" y="1429" width="0.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1030.42" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1173" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1183.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (71,739,882 samples, 0.01%)</title><rect x="1154.8" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1157.77" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (112,779,897 samples, 0.02%)</title><rect x="49.1" y="1605" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="52.13" y="1615.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (5,265,070,605 samples, 0.96%)</title><rect x="828.9" y="1461" width="11.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="831.95" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1605" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="47.59" y="1615.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (2,149,246,813 samples, 0.39%)</title><rect x="457.1" y="1445" width="4.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="460.14" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="357" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (168,103,093 samples, 0.03%)</title><rect x="18.3" y="1509" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="21.28" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1317" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1269" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1279.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (2,041,503,063 samples, 0.37%)</title><rect x="740.5" y="1541" width="4.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="743.51" y="1551.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (94,501,744 samples, 0.02%)</title><rect x="1157.8" y="1461" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1160.82" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (389,806,678 samples, 0.07%)</title><rect x="1165.2" y="1509" width="0.8" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1168.20" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="469" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="479.5" ></text>
</g>
<g >
<title>rmqueue (55,861,408 samples, 0.01%)</title><rect x="25.1" y="1205" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="28.11" y="1215.5" ></text>
</g>
<g >
<title>std::sys::common::small_c_string::run_path_with_cstr (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1413" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="359.09" y="1423.5" ></text>
</g>
<g >
<title>perf_event_wakeup (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1077" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="15.40" y="1087.5" ></text>
</g>
<g >
<title>free_unref_page_commit (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1381" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="16.49" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="949" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="959.5" ></text>
</g>
<g >
<title>_dl_catch_exception (56,617,255 samples, 0.01%)</title><rect x="12.6" y="1525" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="15.63" y="1535.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (568,061,595 samples, 0.10%)</title><rect x="46.6" y="1557" width="1.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="49.57" y="1567.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (254,499,232 samples, 0.05%)</title><rect x="38.2" y="1445" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="41.24" y="1455.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::get_read_ref (409,269,325 samples, 0.07%)</title><rect x="1105.5" y="1477" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1108.54" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (57,454,859 samples, 0.01%)</title><rect x="39.0" y="1509" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="42.01" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_free (89,682,907 samples, 0.02%)</title><rect x="40.0" y="1349" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="42.99" y="1359.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (61,379,508 samples, 0.01%)</title><rect x="17.1" y="1461" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="20.07" y="1471.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (104,961,685,191 samples, 19.07%)</title><rect x="881.4" y="1493" width="225.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="884.40" y="1503.5" >rustposix::interface::pipe::E..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1189" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1199.5" ></text>
</g>
<g >
<title>read (80,759,400 samples, 0.01%)</title><rect x="39.6" y="1525" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="42.55" y="1535.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (201,326,708 samples, 0.04%)</title><rect x="1181.8" y="1493" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1184.76" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="805" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (54,000,470 samples, 0.01%)</title><rect x="29.8" y="277" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.84" y="287.5" ></text>
</g>
<g >
<title>[grep] (186,097,893 samples, 0.03%)</title><rect x="13.6" y="1605" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="16.60" y="1615.5" ></text>
</g>
<g >
<title>operator new (500,566,355 samples, 0.09%)</title><rect x="31.6" y="741" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="34.57" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="741" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="469" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,473,332,774 samples, 0.63%)</title><rect x="1030.5" y="1397" width="7.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1033.48" y="1407.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (561,231,450 samples, 0.10%)</title><rect x="1029.3" y="1413" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1032.28" y="1423.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::net::SocketHandle&gt;&gt;&gt; (4,701,935,381 samples, 0.85%)</title><rect x="478.5" y="1445" width="10.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="481.51" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="421" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="431.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (30,003,622,959 samples, 5.45%)</title><rect x="1041.1" y="1461" width="64.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1044.11" y="1471.5" >ringbuf..</text>
</g>
<g >
<title>[grep] (111,909,447 samples, 0.02%)</title><rect x="13.6" y="1541" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="16.60" y="1551.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (95,919,022 samples, 0.02%)</title><rect x="12.4" y="1493" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.40" y="1503.5" ></text>
</g>
<g >
<title>cpuidle_enter (258,058,634 samples, 0.05%)</title><rect x="1188.9" y="1477" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1191.87" y="1487.5" ></text>
</g>
<g >
<title>dynamic_dname (99,233,183 samples, 0.02%)</title><rect x="18.4" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.39" y="1391.5" ></text>
</g>
<g >
<title>tcp_get_idx (75,277,415 samples, 0.01%)</title><rect x="39.6" y="1365" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="42.57" y="1375.5" ></text>
</g>
<g >
<title>exec_mmap (2,182,376,060 samples, 0.40%)</title><rect x="39.9" y="1445" width="4.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="42.91" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1541" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="37.85" y="1551.5" ></text>
</g>
<g >
<title>exit_mmap (2,182,376,060 samples, 0.40%)</title><rect x="39.9" y="1397" width="4.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="42.91" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (688,105,508 samples, 0.13%)</title><rect x="18.7" y="1493" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.73" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1429" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1439.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,469,680,926 samples, 0.99%)</title><rect x="828.5" y="1477" width="11.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="831.51" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (230,170,129 samples, 0.04%)</title><rect x="19.0" y="1413" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.96" y="1423.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (263,935,172 samples, 0.05%)</title><rect x="21.0" y="1445" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="23.97" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,182,376,060 samples, 0.40%)</title><rect x="39.9" y="1589" width="4.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="42.91" y="1599.5" ></text>
</g>
<g >
<title>__schedule (50,710,812 samples, 0.01%)</title><rect x="46.3" y="1413" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="49.34" y="1423.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (358,250,229 samples, 0.07%)</title><rect x="1026.6" y="1413" width="0.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1029.65" y="1423.5" ></text>
</g>
<g >
<title>_exit (98,648,563 samples, 0.02%)</title><rect x="20.3" y="1525" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="23.29" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (244,105,510 samples, 0.04%)</title><rect x="1188.9" y="1461" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1191.87" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1109" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="1119.5" ></text>
</g>
<g >
<title>NaClSysSendDecoder (102,281,282 samples, 0.02%)</title><rect x="1140.3" y="1589" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1143.27" y="1599.5" ></text>
</g>
<g >
<title>[ls] (1,436,387,767 samples, 0.26%)</title><rect x="17.2" y="1557" width="3.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="20.21" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="981" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (224,911,475 samples, 0.04%)</title><rect x="35.2" y="1573" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.16" y="1583.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (57,270,922 samples, 0.01%)</title><rect x="27.4" y="1333" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="30.44" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,902,434 samples, 0.01%)</title><rect x="13.8" y="1493" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.84" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1221" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1231.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1,582,734,178 samples, 0.29%)</title><rect x="1148.5" y="1589" width="3.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1151.49" y="1599.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (51,192,989 samples, 0.01%)</title><rect x="1105.4" y="1413" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1108.43" y="1423.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (71,739,882 samples, 0.01%)</title><rect x="1154.8" y="1589" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1157.77" y="1599.5" ></text>
</g>
<g >
<title>unmap_single_vma (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1365" width="1.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="47.59" y="1375.5" ></text>
</g>
<g >
<title>ion (82,020,923 samples, 0.01%)</title><rect x="47.6" y="1525" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="50.62" y="1535.5" ></text>
</g>
<g >
<title>show_mountinfo (100,200,003 samples, 0.02%)</title><rect x="49.2" y="1493" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="52.16" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_poll (253,627,970 samples, 0.05%)</title><rect x="46.0" y="1509" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="49.00" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1429" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1439.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (260,040,966 samples, 0.05%)</title><rect x="1165.3" y="1493" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1168.30" y="1503.5" ></text>
</g>
<g >
<title>vfs_statx (126,027,215 samples, 0.02%)</title><rect x="17.9" y="1429" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="20.89" y="1439.5" ></text>
</g>
<g >
<title>glob_vector (138,709,199 samples, 0.03%)</title><rect x="1155.1" y="1397" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1158.12" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="597" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="607.5" ></text>
</g>
<g >
<title>[grep] (103,249,830 samples, 0.02%)</title><rect x="13.6" y="1493" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="16.60" y="1503.5" ></text>
</g>
<g >
<title>getname_flags (54,101,340 samples, 0.01%)</title><rect x="18.2" y="1445" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="21.16" y="1455.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast (90,395,634 samples, 0.02%)</title><rect x="34.4" y="1509" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="37.42" y="1519.5" ></text>
</g>
<g >
<title>perf_output_put_handle (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1285" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="15.40" y="1295.5" ></text>
</g>
<g >
<title>vfs_readlink (113,694,310 samples, 0.02%)</title><rect x="18.4" y="1445" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="21.39" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1445" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="1455.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (2,132,099,681 samples, 0.39%)</title><rect x="29.0" y="1541" width="4.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="31.98" y="1551.5" ></text>
</g>
<g >
<title>perf_mmap__push (480,466,128 samples, 0.09%)</title><rect x="46.6" y="1541" width="1.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="49.59" y="1551.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (431,691,649,191 samples, 78.43%)</title><rect x="186.5" y="1589" width="925.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="189.54" y="1599.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>refill_obj_stock (89,682,907 samples, 0.02%)</title><rect x="40.0" y="1317" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="42.99" y="1327.5" ></text>
</g>
<g >
<title>mmput (98,721,355 samples, 0.02%)</title><rect x="1157.4" y="1429" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1160.45" y="1439.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run (459,365,229 samples, 0.08%)</title><rect x="38.0" y="1557" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="40.98" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="741" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="751.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (563,338,031 samples, 0.10%)</title><rect x="817.4" y="1493" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="820.44" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="565" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1349" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="1359.5" ></text>
</g>
<g >
<title>cpu_startup_entry (531,899,144 samples, 0.10%)</title><rect x="1188.9" y="1525" width="1.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1191.86" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (67,767,149 samples, 0.01%)</title><rect x="17.1" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="20.06" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (55,430,419 samples, 0.01%)</title><rect x="29.8" y="293" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.83" y="303.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (31,295,195,323 samples, 5.69%)</title><rect x="268.1" y="1573" width="67.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="271.07" y="1583.5" >NaClApp..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="421" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="431.5" ></text>
</g>
<g >
<title>std::sys::common::small_c_string::run_with_cstr (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1397" width="1.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="359.09" y="1407.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (204,171,969 samples, 0.04%)</title><rect x="514.7" y="1397" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="517.70" y="1407.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (50,090,769 samples, 0.01%)</title><rect x="811.9" y="1413" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="814.85" y="1423.5" ></text>
</g>
<g >
<title>[ls] (140,263,267 samples, 0.03%)</title><rect x="20.6" y="1589" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="23.57" y="1599.5" ></text>
</g>
<g >
<title>fdarray__poll (273,678,698 samples, 0.05%)</title><rect x="46.0" y="1573" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="48.99" y="1583.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (664,869,136 samples, 0.12%)</title><rect x="346.8" y="1573" width="1.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="349.78" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,747,485,110 samples, 0.32%)</title><rect x="24.0" y="1477" width="3.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="26.98" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1141" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="821" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="831.5" ></text>
</g>
<g >
<title>[libc.so.6] (218,436,207 samples, 0.04%)</title><rect x="1157.0" y="1493" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.96" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="165" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1461" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,426,549,146 samples, 0.26%)</title><rect x="29.7" y="853" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.69" y="863.5" ></text>
</g>
<g >
<title>m_show (100,200,003 samples, 0.02%)</title><rect x="49.2" y="1509" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="52.16" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1413" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="693" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1445" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1365" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,884,523,432 samples, 0.34%)</title><rect x="29.4" y="1461" width="4.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.45" y="1471.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (3,323,865,303 samples, 0.60%)</title><rect x="362.4" y="1557" width="7.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="365.44" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="725" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_write (66,007,773 samples, 0.01%)</title><rect x="47.7" y="1461" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="50.65" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="309" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="319.5" ></text>
</g>
<g >
<title>NaClSysRecvDecoder (102,404,408 samples, 0.02%)</title><rect x="1139.7" y="1589" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1142.72" y="1599.5" ></text>
</g>
<g >
<title>HandleStackContext (256,133,174 samples, 0.05%)</title><rect x="1130.2" y="1589" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1133.19" y="1599.5" ></text>
</g>
<g >
<title>[grep] (186,097,893 samples, 0.03%)</title><rect x="13.6" y="1557" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="16.60" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="565" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="853" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="863.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (2,149,246,813 samples, 0.39%)</title><rect x="457.1" y="1461" width="4.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="460.14" y="1471.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (255,590,777 samples, 0.05%)</title><rect x="1151.3" y="1541" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1154.34" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1061" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_futex (73,994,543 samples, 0.01%)</title><rect x="34.4" y="1461" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="37.44" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="677" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="687.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (51,192,989 samples, 0.01%)</title><rect x="1105.4" y="1397" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1108.43" y="1407.5" ></text>
</g>
<g >
<title>psi_task_change (60,545,150 samples, 0.01%)</title><rect x="1188.3" y="1461" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1191.25" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="197" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="207.5" ></text>
</g>
<g >
<title>tty_write (542,715,636 samples, 0.10%)</title><rect x="1180.3" y="1525" width="1.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1183.31" y="1535.5" ></text>
</g>
<g >
<title>seq_read_iter (100,200,003 samples, 0.02%)</title><rect x="49.2" y="1525" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="52.16" y="1535.5" ></text>
</g>
<g >
<title>schedule_idle (113,579,988 samples, 0.02%)</title><rect x="1188.4" y="1541" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1191.41" y="1551.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1445" width="0.1" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="16.49" y="1455.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,701,935,381 samples, 0.85%)</title><rect x="478.5" y="1429" width="10.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="481.51" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1157" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1167.5" ></text>
</g>
<g >
<title>exec_mmap (98,721,355 samples, 0.02%)</title><rect x="1157.4" y="1445" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1160.45" y="1455.5" ></text>
</g>
<g >
<title>exit_mmap (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1397" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="47.59" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (376,591,558 samples, 0.07%)</title><rect x="1158.3" y="1429" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.29" y="1439.5" ></text>
</g>
<g >
<title>exec_mmap (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1445" width="1.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="47.59" y="1455.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (409,613,193 samples, 0.07%)</title><rect x="67.2" y="1509" width="0.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="70.21" y="1519.5" ></text>
</g>
<g >
<title>readlink (168,103,093 samples, 0.03%)</title><rect x="18.3" y="1525" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="21.28" y="1535.5" ></text>
</g>
<g >
<title>NaClMaskRestore (715,391,390 samples, 0.13%)</title><rect x="1136.7" y="1589" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1139.65" y="1599.5" ></text>
</g>
<g >
<title>scheduler_tick (50,090,769 samples, 0.01%)</title><rect x="811.9" y="1349" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="814.85" y="1359.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (46,730,794 samples, 0.01%)</title><rect x="1187.2" y="1461" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1190.25" y="1471.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (4,649,060,314 samples, 0.84%)</title><rect x="736.2" y="1557" width="10.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="739.24" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (95,869,451 samples, 0.02%)</title><rect x="1157.8" y="1493" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1160.81" y="1503.5" ></text>
</g>
<g >
<title>statx (183,183,655 samples, 0.03%)</title><rect x="17.4" y="1493" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="20.38" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,561,397,380 samples, 0.28%)</title><rect x="29.6" y="1093" width="3.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.65" y="1103.5" ></text>
</g>
<g >
<title>number (99,233,183 samples, 0.02%)</title><rect x="18.4" y="1349" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="21.39" y="1359.5" ></text>
</g>
<g >
<title>_compound_head (535,992,993 samples, 0.10%)</title><rect x="25.3" y="1285" width="1.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="28.32" y="1295.5" ></text>
</g>
<g >
<title>rebalance_domains (173,026,110 samples, 0.03%)</title><rect x="1166.7" y="1333" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1169.67" y="1343.5" ></text>
</g>
<g >
<title>__calc_delta (51,054,570 samples, 0.01%)</title><rect x="732.3" y="1253" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="735.30" y="1263.5" ></text>
</g>
<g >
<title>lookup_fast (97,171,849 samples, 0.02%)</title><rect x="17.9" y="1365" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="20.89" y="1375.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (89,682,907 samples, 0.02%)</title><rect x="40.0" y="1333" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="42.99" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="325" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="335.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (22,391,725,442 samples, 4.07%)</title><rect x="589.4" y="1397" width="48.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="592.44" y="1407.5" >ring..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="485" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="837" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="847.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (202,907,880 samples, 0.04%)</title><rect x="511.7" y="1429" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="514.74" y="1439.5" ></text>
</g>
<g >
<title>uv__fs_read (80,759,400 samples, 0.01%)</title><rect x="39.6" y="1541" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="42.55" y="1551.5" ></text>
</g>
<g >
<title>NaClSysRecv (255,592,139 samples, 0.05%)</title><rect x="1139.2" y="1589" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1142.17" y="1599.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (2,182,376,060 samples, 0.40%)</title><rect x="39.9" y="1557" width="4.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="42.91" y="1567.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (80,646,952 samples, 0.01%)</title><rect x="23.7" y="1557" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="26.70" y="1567.5" ></text>
</g>
<g >
<title>shell_glob_filename (151,566,657 samples, 0.03%)</title><rect x="1155.1" y="1429" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1158.10" y="1439.5" ></text>
</g>
<g >
<title>vfs_write (556,739,230 samples, 0.10%)</title><rect x="1180.3" y="1541" width="1.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1183.28" y="1551.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (105,127,545 samples, 0.02%)</title><rect x="33.7" y="1397" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="36.73" y="1407.5" ></text>
</g>
<g >
<title>futex_wake (71,807,759 samples, 0.01%)</title><rect x="34.4" y="1429" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="37.45" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="997" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1007.5" ></text>
</g>
<g >
<title>x86_pmu_enable (50,090,769 samples, 0.01%)</title><rect x="811.9" y="1301" width="0.1" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="814.85" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1541" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1551.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (358,055,144 samples, 0.07%)</title><rect x="335.2" y="1573" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="338.17" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1173" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1183.5" ></text>
</g>
<g >
<title>ls (2,585,975,950 samples, 0.47%)</title><rect x="16.3" y="1621" width="5.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="19.31" y="1631.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (138,526,929,503 samples, 25.17%)</title><rect x="435.4" y="1509" width="297.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="438.43" y="1519.5" >rustposix::safeposix::dispatcher::dispa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (697,129,391 samples, 0.13%)</title><rect x="29.8" y="549" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.80" y="559.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (9,195,595,570 samples, 1.67%)</title><rect x="861.7" y="1477" width="19.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="864.68" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1557" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="501" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (2,149,246,813 samples, 0.39%)</title><rect x="457.1" y="1413" width="4.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="460.14" y="1423.5" ></text>
</g>
<g >
<title>uv_spawn (1,773,928,612 samples, 0.32%)</title><rect x="24.0" y="1557" width="3.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="26.98" y="1567.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::send_syscall (141,747,471,421 samples, 25.75%)</title><rect x="806.9" y="1509" width="303.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="809.92" y="1519.5" >rustposix::safeposix::syscalls::net_call..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1301" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1029" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (63,257,279 samples, 0.01%)</title><rect x="1157.9" y="1445" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1160.88" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (754,006,463 samples, 0.14%)</title><rect x="29.8" y="581" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.77" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1589" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="47.59" y="1599.5" ></text>
</g>
<g >
<title>readdir64 (112,286,827 samples, 0.02%)</title><rect x="1155.2" y="1381" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1158.18" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,527,339,233 samples, 0.28%)</title><rect x="29.6" y="1077" width="3.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.65" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="149" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="773" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="783.5" ></text>
</g>
<g >
<title>copy_pte_range (1,155,844,619 samples, 0.21%)</title><rect x="24.9" y="1301" width="2.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="27.90" y="1311.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (101,318,448 samples, 0.02%)</title><rect x="811.9" y="1461" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="814.85" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (189,968,462 samples, 0.03%)</title><rect x="1157.0" y="1461" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.02" y="1471.5" ></text>
</g>
<g >
<title>vfs_fstatat (243,493,292 samples, 0.04%)</title><rect x="33.6" y="1461" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="36.58" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1013" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1023.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_syscall (53,060,577 samples, 0.01%)</title><rect x="1151.9" y="1573" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1154.88" y="1583.5" ></text>
</g>
<g >
<title>fsnotify (68,750,226 samples, 0.01%)</title><rect x="46.7" y="1365" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="49.72" y="1375.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (204,623,142 samples, 0.04%)</title><rect x="467.4" y="1413" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="470.45" y="1423.5" ></text>
</g>
<g >
<title>path_lookupat (97,171,849 samples, 0.02%)</title><rect x="17.9" y="1397" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="20.89" y="1407.5" ></text>
</g>
<g >
<title>arch_irq_work_raise (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1237" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="15.40" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="709" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="901" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="911.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,355,404,522 samples, 0.61%)</title><rect x="1181.7" y="1573" width="7.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1184.66" y="1583.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (8,890,467,753 samples, 1.62%)</title><rect x="862.3" y="1461" width="19.1" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="865.34" y="1471.5" ></text>
</g>
<g >
<title>__libc_start_main (701,987,980 samples, 0.13%)</title><rect x="1158.0" y="1589" width="1.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1161.02" y="1599.5" ></text>
</g>
<g >
<title>command_substitute (107,428,264 samples, 0.02%)</title><rect x="1155.6" y="1237" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1158.61" y="1247.5" ></text>
</g>
<g >
<title>runc:[1:CHILD] (805,310,039 samples, 0.15%)</title><rect x="47.8" y="1621" width="1.8" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="50.84" y="1631.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (51,192,989 samples, 0.01%)</title><rect x="1105.4" y="1381" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1108.43" y="1391.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::send_syscall (357,998,886 samples, 0.07%)</title><rect x="56.1" y="1589" width="0.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="59.07" y="1599.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (2,658,727,529 samples, 0.48%)</title><rect x="461.7" y="1429" width="5.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="464.75" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1029" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1039.5" ></text>
</g>
<g >
<title>bprm_execve (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1541" width="1.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="47.59" y="1551.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (356,230,197 samples, 0.06%)</title><rect x="1012.6" y="1477" width="0.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1015.64" y="1487.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (30,672,863,535 samples, 5.57%)</title><rect x="515.1" y="1381" width="65.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="518.13" y="1391.5" >&lt;parkin..</text>
</g>
<g >
<title>load_balance (47,663,114 samples, 0.01%)</title><rect x="1182.0" y="1381" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1185.05" y="1391.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (35,111,723,353 samples, 6.38%)</title><rect x="655.2" y="1349" width="75.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="658.16" y="1359.5" >core::in..</text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (3,384,796,467 samples, 0.61%)</title><rect x="499.2" y="1445" width="7.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="502.22" y="1455.5" ></text>
</g>
<g >
<title>cfree (89,769,504 samples, 0.02%)</title><rect x="35.2" y="85" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="38.21" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="469" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="479.5" ></text>
</g>
<g >
<title>get_page_from_freelist (60,388,013 samples, 0.01%)</title><rect x="25.1" y="1221" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="28.10" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1285" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1295.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (3,119,130,908 samples, 0.57%)</title><rect x="394.1" y="1525" width="6.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="397.12" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (826,165,406 samples, 0.15%)</title><rect x="35.1" y="1589" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.14" y="1599.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (2,455,902,548 samples, 0.45%)</title><rect x="429.5" y="1477" width="5.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="432.51" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (643,635,845 samples, 0.12%)</title><rect x="1180.1" y="1589" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1183.09" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1429" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="1439.5" ></text>
</g>
<g >
<title>path_lookupat (152,717,984 samples, 0.03%)</title><rect x="33.7" y="1413" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="36.72" y="1423.5" ></text>
</g>
<g >
<title>begin_new_exec (2,182,376,060 samples, 0.40%)</title><rect x="39.9" y="1461" width="4.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="42.91" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="869" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="879.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::_open (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1445" width="1.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="359.09" y="1455.5" ></text>
</g>
<g >
<title>user_path_at_empty (54,408,783 samples, 0.01%)</title><rect x="18.3" y="1445" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="21.28" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="965" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="165" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="175.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (56,617,255 samples, 0.01%)</title><rect x="12.6" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.63" y="1487.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (95,760,869 samples, 0.02%)</title><rect x="34.4" y="1557" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="37.41" y="1567.5" ></text>
</g>
<g >
<title>do_futex (71,807,759 samples, 0.01%)</title><rect x="34.4" y="1445" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="37.45" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="805" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="815.5" ></text>
</g>
<g >
<title>ksys_write (556,739,230 samples, 0.10%)</title><rect x="1180.3" y="1557" width="1.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1183.28" y="1567.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (5,774,770,045 samples, 1.05%)</title><rect x="388.4" y="1541" width="12.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="391.42" y="1551.5" ></text>
</g>
<g >
<title>do_tty_write (542,715,636 samples, 0.10%)</title><rect x="1180.3" y="1493" width="1.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1183.31" y="1503.5" ></text>
</g>
<g >
<title>[sel_ldr] (49,990,449,791 samples, 9.08%)</title><rect x="70.5" y="1589" width="107.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="73.49" y="1599.5" >[sel_ldr]</text>
</g>
<g >
<title>dispatcher (663,859,316 samples, 0.12%)</title><rect x="61.9" y="1589" width="1.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="64.87" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1413" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1423.5" ></text>
</g>
<g >
<title>vsnprintf (99,233,183 samples, 0.02%)</title><rect x="18.4" y="1365" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="21.39" y="1375.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1,072,871,344 samples, 0.19%)</title><rect x="1038.8" y="1445" width="2.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1041.80" y="1455.5" ></text>
</g>
<g >
<title>start_secondary (78,847,206 samples, 0.01%)</title><rect x="49.4" y="1589" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="52.38" y="1599.5" ></text>
</g>
<g >
<title>start_secondary (689,302,390 samples, 0.13%)</title><rect x="1165.2" y="1589" width="1.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1168.17" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (628,354,330 samples, 0.11%)</title><rect x="10.9" y="1477" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.90" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (440,814,606 samples, 0.08%)</title><rect x="20.9" y="1605" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="23.91" y="1615.5" ></text>
</g>
<g >
<title>__tfind (86,595,567 samples, 0.02%)</title><rect x="1159.1" y="1429" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1162.13" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1317" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="1327.5" ></text>
</g>
<g >
<title>docker (197,227,664 samples, 0.04%)</title><rect x="10.0" y="1621" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="13.03" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (82,231,132 samples, 0.01%)</title><rect x="29.8" y="341" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.83" y="351.5" ></text>
</g>
<g >
<title>vm_normal_page (67,860,727 samples, 0.01%)</title><rect x="27.2" y="1269" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="30.17" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (74,188,446 samples, 0.01%)</title><rect x="13.8" y="1525" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.84" y="1535.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (460,306,877 samples, 0.08%)</title><rect x="21.9" y="1589" width="0.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="24.86" y="1599.5" ></text>
</g>
<g >
<title>exit_mm (98,648,563 samples, 0.02%)</title><rect x="20.3" y="1429" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="23.29" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="981" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="645" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="655.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (870,281,253 samples, 0.16%)</title><rect x="180.8" y="1589" width="1.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="183.84" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,121,645,983 samples, 0.20%)</title><rect x="1155.0" y="1573" width="2.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1158.02" y="1583.5" ></text>
</g>
<g >
<title>[bash] (187,136,042 samples, 0.03%)</title><rect x="1155.0" y="1445" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.02" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1445" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1525" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="885" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (64,541,300 samples, 0.01%)</title><rect x="33.2" y="1333" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="36.23" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="581" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="581" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="591.5" ></text>
</g>
<g >
<title>__libc_start_main (180,375,563 samples, 0.03%)</title><rect x="13.0" y="1589" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="15.99" y="1599.5" ></text>
</g>
<g >
<title>mmap_region (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1381" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="15.40" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1445" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="15.40" y="1455.5" ></text>
</g>
<g >
<title>execute_command_internal (294,431,843 samples, 0.05%)</title><rect x="1156.3" y="1429" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1159.30" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1349" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="229" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1477" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,377,989,833 samples, 0.25%)</title><rect x="29.7" y="805" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.70" y="815.5" ></text>
</g>
<g >
<title>tick_sched_timer (51,200,664 samples, 0.01%)</title><rect x="52.3" y="1493" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="55.26" y="1503.5" ></text>
</g>
<g >
<title>ksys_write (66,007,773 samples, 0.01%)</title><rect x="47.7" y="1445" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="50.65" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="309" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,696,877,460 samples, 0.31%)</title><rect x="29.6" y="1285" width="3.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.59" y="1295.5" ></text>
</g>
<g >
<title>unmap_vmas (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1381" width="1.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="47.59" y="1391.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (50,090,769 samples, 0.01%)</title><rect x="811.9" y="1429" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="814.85" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="757" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="661" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="671.5" ></text>
</g>
<g >
<title>command_substitute (294,431,843 samples, 0.05%)</title><rect x="1156.3" y="1333" width="0.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1159.30" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (56,617,255 samples, 0.01%)</title><rect x="12.6" y="1493" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.63" y="1503.5" ></text>
</g>
<g >
<title>__mmput (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1413" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="47.59" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (98,648,563 samples, 0.02%)</title><rect x="20.3" y="1509" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="23.29" y="1519.5" ></text>
</g>
<g >
<title>page_remove_rmap (152,620,164 samples, 0.03%)</title><rect x="43.2" y="1301" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="46.21" y="1311.5" ></text>
</g>
<g >
<title>v8::internal::Object::GetPropertyWithAccessor (80,255,729 samples, 0.01%)</title><rect x="23.7" y="1509" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="26.70" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="437" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="447.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (307,102,694 samples, 0.06%)</title><rect x="731.3" y="1365" width="0.7" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="734.31" y="1375.5" ></text>
</g>
<g >
<title>update_wall_time (51,192,989 samples, 0.01%)</title><rect x="1105.4" y="1317" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1108.43" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="309" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="319.5" ></text>
</g>
<g >
<title>__tsearch (60,846,176 samples, 0.01%)</title><rect x="11.8" y="1429" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="14.78" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (133,714,101 samples, 0.02%)</title><rect x="16.9" y="1589" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="19.92" y="1599.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (358,698,678 samples, 0.07%)</title><rect x="1130.7" y="1589" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1133.74" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="261" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="261" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="271.5" ></text>
</g>
<g >
<title>CompareAndSwap (51,200,664 samples, 0.01%)</title><rect x="52.3" y="1589" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="55.26" y="1599.5" ></text>
</g>
<g >
<title>proc_pid_readlink (113,694,310 samples, 0.02%)</title><rect x="18.4" y="1429" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="21.39" y="1439.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (2,009,926,461 samples, 0.37%)</title><rect x="40.3" y="1333" width="4.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="43.27" y="1343.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (153,238,480 samples, 0.03%)</title><rect x="1138.4" y="1589" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1141.41" y="1599.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (1,772,706,484 samples, 0.32%)</title><rect x="24.0" y="1525" width="3.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="26.98" y="1535.5" ></text>
</g>
<g >
<title>perf_iterate_sb (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1333" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="15.40" y="1343.5" ></text>
</g>
<g >
<title>v8::platform::DefaultJobWorker::Run (123,228,657 samples, 0.02%)</title><rect x="39.2" y="1557" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="42.25" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (214,832,135 samples, 0.04%)</title><rect x="12.3" y="1605" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.32" y="1615.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,017,123,383 samples, 0.55%)</title><rect x="1181.7" y="1541" width="6.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1184.69" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="245" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="255.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (204,623,142 samples, 0.04%)</title><rect x="467.4" y="1429" width="0.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="470.45" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,891,794,242 samples, 0.34%)</title><rect x="29.4" y="1477" width="4.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.43" y="1487.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (30,054,815,948 samples, 5.46%)</title><rect x="1041.1" y="1477" width="64.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1044.11" y="1487.5" >ringbuf..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (827,254,388 samples, 0.15%)</title><rect x="29.7" y="693" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.72" y="703.5" ></text>
</g>
<g >
<title>start_kernel (395,643,565 samples, 0.07%)</title><rect x="1166.6" y="1573" width="0.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1169.65" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1141" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1151.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (51,192,989 samples, 0.01%)</title><rect x="1105.4" y="1461" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1108.43" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1253" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1461" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="15.40" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="357" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="389" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1045" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="1055.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (87,165,341 samples, 0.02%)</title><rect x="1181.8" y="1461" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1184.76" y="1471.5" ></text>
</g>
<g >
<title>__getdelim (152,727,001 samples, 0.03%)</title><rect x="11.9" y="1445" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="14.91" y="1455.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (8,173,816,687 samples, 1.49%)</title><rect x="1023.6" y="1477" width="17.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1026.58" y="1487.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (665,477,857 samples, 0.12%)</title><rect x="506.5" y="1445" width="1.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="509.47" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1589" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="18.06" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1285" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="359.09" y="1295.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (50,784,214 samples, 0.01%)</title><rect x="39.8" y="1605" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="42.79" y="1615.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (363,872,084 samples, 0.07%)</title><rect x="1187.2" y="1493" width="0.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1190.25" y="1503.5" ></text>
</g>
<g >
<title>NaClSysRecv (407,832,831 samples, 0.07%)</title><rect x="357.3" y="1573" width="0.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="360.29" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1365" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1375.5" ></text>
</g>
<g >
<title>copy_page_range (1,493,125,050 samples, 0.27%)</title><rect x="24.2" y="1349" width="3.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="27.18" y="1359.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (30,519,374,071 samples, 5.54%)</title><rect x="515.5" y="1365" width="65.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="518.46" y="1375.5" >core::s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1429" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1439.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (69,123,163 samples, 0.01%)</title><rect x="47.1" y="1253" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="50.12" y="1263.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (50,942,305 samples, 0.01%)</title><rect x="435.5" y="1493" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="438.54" y="1503.5" ></text>
</g>
<g >
<title>malloc (76,227,932 samples, 0.01%)</title><rect x="29.2" y="1477" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="32.23" y="1487.5" ></text>
</g>
<g >
<title>record__write (431,172,282 samples, 0.08%)</title><rect x="46.7" y="1509" width="0.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="49.69" y="1519.5" ></text>
</g>
<g >
<title>exec_binprm (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1509" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="18.06" y="1519.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,888,880,251 samples, 0.71%)</title><rect x="1181.7" y="1605" width="8.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1184.66" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="437" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1493" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1503.5" ></text>
</g>
<g >
<title>__xstat64 (261,440,728 samples, 0.05%)</title><rect x="33.6" y="1541" width="0.5" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="36.56" y="1551.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (8,173,816,687 samples, 1.49%)</title><rect x="1023.6" y="1461" width="17.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1026.58" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="981" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="245" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (57,454,859 samples, 0.01%)</title><rect x="39.0" y="1493" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="42.01" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1301" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="309" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="319.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (919,903,328 samples, 0.17%)</title><rect x="50.4" y="1605" width="2.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="53.39" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1573" width="0.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="31.27" y="1583.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (56,617,255 samples, 0.01%)</title><rect x="12.6" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.63" y="1519.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (188,317,492 samples, 0.03%)</title><rect x="23.5" y="1589" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="26.47" y="1599.5" ></text>
</g>
<g >
<title>[bash] (194,098,210 samples, 0.04%)</title><rect x="1155.4" y="1349" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.42" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1125" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1509" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1519.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (51,278,340 samples, 0.01%)</title><rect x="637.3" y="1365" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="640.33" y="1375.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Debounce::Debounce (98,060,306 samples, 0.02%)</title><rect x="39.0" y="1557" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="41.97" y="1567.5" ></text>
</g>
<g >
<title>[ls] (707,799,413 samples, 0.13%)</title><rect x="17.2" y="1541" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="20.21" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="885" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1,747,485,110 samples, 0.32%)</title><rect x="24.0" y="1445" width="3.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="26.98" y="1455.5" ></text>
</g>
<g >
<title>[bash] (187,599,885 samples, 0.03%)</title><rect x="1155.0" y="1477" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.02" y="1487.5" ></text>
</g>
<g >
<title>alloc_pages (120,554,165 samples, 0.02%)</title><rect x="24.4" y="1285" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="27.43" y="1295.5" ></text>
</g>
<g >
<title>[git] (87,256,652 samples, 0.02%)</title><rect x="13.0" y="1381" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.99" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1061" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="1071.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (266,769,215 samples, 0.05%)</title><rect x="46.9" y="1301" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="49.91" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1397" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1407.5" ></text>
</g>
<g >
<title>rustposix::interface::file::openfile (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1493" width="1.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="359.09" y="1503.5" ></text>
</g>
<g >
<title>exe (50,741,199 samples, 0.01%)</title><rect x="10.5" y="1621" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="13.46" y="1631.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU32::load (409,269,325 samples, 0.07%)</title><rect x="1105.5" y="1461" width="0.9" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1108.54" y="1471.5" ></text>
</g>
<g >
<title>cpu_startup_entry (686,788,497 samples, 0.12%)</title><rect x="1165.2" y="1573" width="1.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1168.17" y="1583.5" ></text>
</g>
<g >
<title>kmem_cache_free (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1349" width="1.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="18.06" y="1359.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (4,753,329,831 samples, 0.86%)</title><rect x="419.3" y="1477" width="10.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="422.32" y="1487.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (51,288,752 samples, 0.01%)</title><rect x="267.0" y="1557" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="269.98" y="1567.5" ></text>
</g>
<g >
<title>wake_up_q (47,518,347 samples, 0.01%)</title><rect x="34.5" y="1413" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="37.50" y="1423.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (57,704,624 samples, 0.01%)</title><rect x="16.9" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="19.92" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,523,006,572 samples, 0.28%)</title><rect x="29.7" y="1045" width="3.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.66" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1205" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1215.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (305,918,543 samples, 0.06%)</title><rect x="434.8" y="1493" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="437.77" y="1503.5" ></text>
</g>
<g >
<title>node (10,603,384,515 samples, 1.93%)</title><rect x="21.9" y="1621" width="22.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="24.86" y="1631.5" >n..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="629" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="639.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (65,351,807 samples, 0.01%)</title><rect x="1181.5" y="1541" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1184.50" y="1551.5" ></text>
</g>
<g >
<title>Glob::isIgnored (2,082,672,978 samples, 0.38%)</title><rect x="29.1" y="1525" width="4.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="32.07" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1477" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="15.40" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="805" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="815.5" ></text>
</g>
<g >
<title>execute_command (215,481,822 samples, 0.04%)</title><rect x="1155.8" y="1365" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1158.84" y="1375.5" ></text>
</g>
<g >
<title>[[stack]] (71,134,298 samples, 0.01%)</title><rect x="22.8" y="1605" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="25.85" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="661" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="671.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3,473,332,774 samples, 0.63%)</title><rect x="1030.5" y="1413" width="7.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1033.48" y="1423.5" ></text>
</g>
<g >
<title>do_mmap (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1397" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="15.40" y="1407.5" ></text>
</g>
<g >
<title>search_binary_handler (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1493" width="1.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="18.06" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="917" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="927.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (611,582,041 samples, 0.11%)</title><rect x="1153.4" y="1589" width="1.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1156.42" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (591,743,572 samples, 0.11%)</title><rect x="35.6" y="101" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="111.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1557" width="1.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="18.06" y="1567.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (51,200,664 samples, 0.01%)</title><rect x="52.3" y="1573" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="55.26" y="1583.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1429" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="16.49" y="1439.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,086,437,631 samples, 0.74%)</title><rect x="469.7" y="1445" width="8.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="472.75" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="261" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="271.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (85,122,437 samples, 0.02%)</title><rect x="49.4" y="1605" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="52.38" y="1615.5" ></text>
</g>
<g >
<title>ksys_read (80,759,400 samples, 0.01%)</title><rect x="39.6" y="1461" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="42.55" y="1471.5" ></text>
</g>
<g >
<title>[perf-1302715.map] (51,112,141,475 samples, 9.29%)</title><rect x="68.1" y="1605" width="109.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="71.09" y="1615.5" >[perf-1302715..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (358,250,229 samples, 0.07%)</title><rect x="1026.6" y="1429" width="0.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1029.65" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="117" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="127.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (6,130,403,044 samples, 1.11%)</title><rect x="760.6" y="1541" width="13.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="763.57" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1493" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1503.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1365" width="1.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="18.06" y="1375.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open::{{closure}} (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1381" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="359.09" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,558,190,818 samples, 0.46%)</title><rect x="1181.7" y="1525" width="5.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1184.70" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1301" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="359.09" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="693" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="703.5" ></text>
</g>
<g >
<title>strncpy_from_user (174,602,070 samples, 0.03%)</title><rect x="17.4" y="1397" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="20.40" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1429" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1439.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (4,388,677,464 samples, 0.80%)</title><rect x="1014.2" y="1429" width="9.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1017.17" y="1439.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (51,278,340 samples, 0.01%)</title><rect x="637.3" y="1349" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="640.33" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1381" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1391.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,063,947,010 samples, 0.56%)</title><rect x="810.9" y="1493" width="6.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="813.87" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="245" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="255.5" ></text>
</g>
<g >
<title>start_kernel (531,899,144 samples, 0.10%)</title><rect x="1188.9" y="1573" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1191.86" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="341" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="351.5" ></text>
</g>
<g >
<title>lind_recv (204,494,783 samples, 0.04%)</title><rect x="1146.1" y="1589" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1149.08" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (88,004,286 samples, 0.02%)</title><rect x="29.8" y="373" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.81" y="383.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (5,654,378,405 samples, 1.03%)</title><rect x="849.6" y="1477" width="12.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="852.56" y="1487.5" ></text>
</g>
<g >
<title>begin_new_exec (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1461" width="1.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="47.59" y="1471.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (2,189,199,964 samples, 0.40%)</title><rect x="1182.3" y="1493" width="4.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1185.28" y="1503.5" ></text>
</g>
<g >
<title>futex_exit_release (98,648,563 samples, 0.02%)</title><rect x="20.3" y="1397" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="23.29" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1237" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (144,827,118 samples, 0.03%)</title><rect x="29.8" y="437" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.81" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (66,007,773 samples, 0.01%)</title><rect x="47.7" y="1493" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="50.65" y="1503.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (716,199,268 samples, 0.13%)</title><rect x="56.8" y="1589" width="1.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="59.84" y="1599.5" ></text>
</g>
<g >
<title>anon_vma_fork (58,585,799 samples, 0.01%)</title><rect x="24.1" y="1349" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="27.05" y="1359.5" ></text>
</g>
<g >
<title>[bash] (294,431,843 samples, 0.05%)</title><rect x="1156.3" y="1381" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1159.30" y="1391.5" ></text>
</g>
<g >
<title>run_rebalance_domains (179,568,127 samples, 0.03%)</title><rect x="1166.7" y="1365" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1169.67" y="1375.5" ></text>
</g>
<g >
<title>__schedule (51,406,374 samples, 0.01%)</title><rect x="37.4" y="1429" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="40.35" y="1439.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c::{{closure}} (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1333" width="1.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="359.09" y="1343.5" ></text>
</g>
<g >
<title>unmap_page_range (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1349" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="47.59" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1349" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1359.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (51,192,989 samples, 0.01%)</title><rect x="1105.4" y="1429" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1108.43" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (131,384,324 samples, 0.02%)</title><rect x="1157.7" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1160.74" y="1583.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (1,772,706,484 samples, 0.32%)</title><rect x="24.0" y="1541" width="3.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="26.98" y="1551.5" ></text>
</g>
<g >
<title>NaClSysSendDecoder (51,257,100 samples, 0.01%)</title><rect x="55.6" y="1605" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.63" y="1615.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (95,537,060 samples, 0.02%)</title><rect x="37.3" y="1477" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="40.26" y="1487.5" ></text>
</g>
<g >
<title>ttwu_do_activate (90,052,597 samples, 0.02%)</title><rect x="1166.2" y="1493" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1169.21" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1109" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1119.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2,149,246,813 samples, 0.39%)</title><rect x="457.1" y="1429" width="4.6" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="460.14" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="533" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="543.5" ></text>
</g>
<g >
<title>__folio_end_writeback (61,689,163 samples, 0.01%)</title><rect x="1181.5" y="1477" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1184.50" y="1487.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (62,683,058 samples, 0.01%)</title><rect x="17.9" y="1349" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="20.89" y="1359.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1557" width="1.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="47.59" y="1567.5" ></text>
</g>
<g >
<title>enqueue_task (90,052,597 samples, 0.02%)</title><rect x="1166.2" y="1477" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1169.21" y="1487.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4,349,038,788 samples, 0.79%)</title><rect x="840.2" y="1477" width="9.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="843.24" y="1487.5" ></text>
</g>
<g >
<title>established_get_first (72,703,441 samples, 0.01%)</title><rect x="39.6" y="1349" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="42.57" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="293" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (17,845,422,670 samples, 3.24%)</title><rect x="599.1" y="1381" width="38.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="602.08" y="1391.5" >cor..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="741" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,776,870,934 samples, 0.32%)</title><rect x="29.6" y="1381" width="3.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.56" y="1391.5" ></text>
</g>
<g >
<title>getgrgid_r (51,638,462 samples, 0.01%)</title><rect x="17.8" y="1493" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="20.77" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="149" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1269" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1279.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (305,776,034 samples, 0.06%)</title><rect x="54.8" y="1605" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="57.78" y="1615.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (460,243,998 samples, 0.08%)</title><rect x="43.5" y="1301" width="1.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="46.54" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="581" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="591.5" ></text>
</g>
<g >
<title>__do_sys_newstat (246,648,391 samples, 0.04%)</title><rect x="33.6" y="1477" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="36.57" y="1487.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectGetOwnPropertyDescriptors (80,646,952 samples, 0.01%)</title><rect x="23.7" y="1573" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="26.70" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="661" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="917" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="927.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,907,713,774 samples, 0.89%)</title><rect x="437.1" y="1445" width="10.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="440.08" y="1455.5" ></text>
</g>
<g >
<title>CompareAndSwap (817,774,227 samples, 0.15%)</title><rect x="1128.4" y="1589" width="1.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1131.43" y="1599.5" ></text>
</g>
<g >
<title>cpuidle_select (394,508,154 samples, 0.07%)</title><rect x="1187.2" y="1525" width="0.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1190.18" y="1535.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1589" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="37.85" y="1599.5" ></text>
</g>
<g >
<title>sleep (899,418,566 samples, 0.16%)</title><rect x="1157.7" y="1621" width="1.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1160.66" y="1631.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (51,200,664 samples, 0.01%)</title><rect x="52.3" y="1557" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="55.26" y="1567.5" ></text>
</g>
<g >
<title>start_secondary (3,356,981,107 samples, 0.61%)</title><rect x="1181.7" y="1589" width="7.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1184.66" y="1599.5" ></text>
</g>
<g >
<title>worker_thread (78,274,194 samples, 0.01%)</title><rect x="1181.5" y="1573" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1184.49" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="709" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="719.5" ></text>
</g>
<g >
<title>free_unref_page_list (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1397" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="16.49" y="1407.5" ></text>
</g>
<g >
<title>tick_sched_handle (51,200,664 samples, 0.01%)</title><rect x="52.3" y="1477" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="55.26" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1125" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="1135.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (133,714,101 samples, 0.02%)</title><rect x="16.9" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="19.92" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1557" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1567.5" ></text>
</g>
<g >
<title>exit_mmap (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1477" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="16.49" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="933" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="837" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (697,129,391 samples, 0.13%)</title><rect x="29.8" y="533" width="1.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.80" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::Cage::get_filedescriptor (2,863,350,671 samples, 0.52%)</title><rect x="461.7" y="1461" width="6.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="464.75" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,478,173,960 samples, 0.27%)</title><rect x="29.7" y="981" width="3.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.67" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1301" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="645" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="655.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (560,962,312 samples, 0.10%)</title><rect x="184.5" y="1589" width="1.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="187.46" y="1599.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (459,506,238 samples, 0.08%)</title><rect x="1142.4" y="1589" width="0.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1145.36" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="549" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="559.5" ></text>
</g>
<g >
<title>poll_idle (88,162,395 samples, 0.02%)</title><rect x="1187.0" y="1493" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.97" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (184,730,929 samples, 0.03%)</title><rect x="35.2" y="133" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="143.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (408,566,409 samples, 0.07%)</title><rect x="1037.9" y="1413" width="0.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1040.93" y="1423.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (356,577,152 samples, 0.06%)</title><rect x="54.0" y="1605" width="0.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="57.01" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="773" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1237" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="213" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="223.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::cagetable_getref (2,551,502,290 samples, 0.46%)</title><rect x="800.1" y="1509" width="5.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="803.14" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="325" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1093" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1103.5" ></text>
</g>
<g >
<title>[bash] (107,608,249 samples, 0.02%)</title><rect x="1155.6" y="1301" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.61" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (88,111,337 samples, 0.02%)</title><rect x="34.7" y="1557" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="37.66" y="1567.5" ></text>
</g>
<g >
<title>ksys_write (378,484,528 samples, 0.07%)</title><rect x="46.7" y="1413" width="0.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="49.70" y="1423.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1429" width="1.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="359.09" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="693" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="703.5" ></text>
</g>
<g >
<title>NaClLog (2,197,198,640 samples, 0.40%)</title><rect x="755.9" y="1541" width="4.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="758.86" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_statx (180,128,555 samples, 0.03%)</title><rect x="17.9" y="1461" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="20.89" y="1471.5" ></text>
</g>
<g >
<title>lind_send (460,581,646 samples, 0.08%)</title><rect x="1111.0" y="1557" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1114.02" y="1567.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (9,195,595,570 samples, 1.67%)</title><rect x="861.7" y="1493" width="19.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="864.68" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,177,650 samples, 0.02%)</title><rect x="20.3" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.29" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (676,929,278 samples, 0.12%)</title><rect x="1158.0" y="1461" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.02" y="1471.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (153,378,973 samples, 0.03%)</title><rect x="1105.5" y="1445" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1108.54" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (71,739,882 samples, 0.01%)</title><rect x="1154.8" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1157.77" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="597" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="607.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (49,870,058 samples, 0.01%)</title><rect x="13.4" y="1605" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="16.38" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (87,256,652 samples, 0.02%)</title><rect x="13.0" y="1365" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.99" y="1375.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (3,881,418,740 samples, 0.71%)</title><rect x="470.2" y="1429" width="8.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="473.19" y="1439.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (4,349,038,788 samples, 0.79%)</title><rect x="840.2" y="1445" width="9.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="843.24" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1189" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1199.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (56,464,393 samples, 0.01%)</title><rect x="1188.0" y="1509" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1191.03" y="1519.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (3,321,618,412 samples, 0.60%)</title><rect x="766.6" y="1525" width="7.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="769.59" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (30,519,374,071 samples, 5.54%)</title><rect x="515.5" y="1349" width="65.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="518.46" y="1359.5" >core::s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="965" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_poll (317,410,170 samples, 0.06%)</title><rect x="38.2" y="1477" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="41.19" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,836,865,228 samples, 0.33%)</title><rect x="29.5" y="1413" width="4.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.55" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::Cage::get_filedescriptor (2,046,284,858 samples, 0.37%)</title><rect x="1106.4" y="1493" width="4.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1109.41" y="1503.5" ></text>
</g>
<g >
<title>[grep] (103,249,830 samples, 0.02%)</title><rect x="13.6" y="1477" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="16.60" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (74,188,446 samples, 0.01%)</title><rect x="13.8" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.84" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1029" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1039.5" ></text>
</g>
<g >
<title>all (550,417,630,561 samples, 100%)</title><rect x="10.0" y="1637" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="661" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="671.5" ></text>
</g>
<g >
<title>lind_recv (155,037,143,530 samples, 28.17%)</title><rect x="400.8" y="1541" width="332.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="403.80" y="1551.5" >lind_recv</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,455,902,548 samples, 0.45%)</title><rect x="429.5" y="1493" width="5.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="432.51" y="1503.5" ></text>
</g>
<g >
<title>update_process_times (51,200,664 samples, 0.01%)</title><rect x="52.3" y="1461" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="55.26" y="1471.5" ></text>
</g>
<g >
<title>__pte_alloc (122,075,241 samples, 0.02%)</title><rect x="25.1" y="1285" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="28.06" y="1295.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (155,636,727 samples, 0.03%)</title><rect x="39.2" y="1573" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="42.18" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,453,608,631 samples, 0.26%)</title><rect x="29.7" y="933" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.67" y="943.5" ></text>
</g>
<g >
<title>[bash] (903,209,776 samples, 0.16%)</title><rect x="1155.0" y="1541" width="2.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.02" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1573" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="1583.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (191,905,673 samples, 0.03%)</title><rect x="46.0" y="1477" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="49.03" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="901" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="357" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="367.5" ></text>
</g>
<g >
<title>do_user_addr_fault (48,272,421 samples, 0.01%)</title><rect x="13.2" y="1397" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="16.18" y="1407.5" ></text>
</g>
<g >
<title>[bash] (71,471,315 samples, 0.01%)</title><rect x="1155.7" y="1189" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.67" y="1199.5" ></text>
</g>
<g >
<title>epoll_wait (144,716,736 samples, 0.03%)</title><rect x="37.2" y="1573" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="40.17" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1317" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (574,749,721 samples, 0.10%)</title><rect x="35.7" y="69" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="38.68" y="79.5" ></text>
</g>
<g >
<title>[libc.so.6] (364,915,396 samples, 0.07%)</title><rect x="1158.3" y="1413" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.32" y="1423.5" ></text>
</g>
<g >
<title>uv__fs_work (84,644,208 samples, 0.02%)</title><rect x="39.6" y="1557" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="42.55" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (180,375,563 samples, 0.03%)</title><rect x="13.0" y="1573" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.99" y="1583.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner_tcp (104,722,991,118 samples, 19.03%)</title><rect x="507.9" y="1445" width="224.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="510.90" y="1455.5" >rustposix::safeposix::syscall..</text>
</g>
<g >
<title>uv__async_io (213,930,079 samples, 0.04%)</title><rect x="37.5" y="1573" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="40.48" y="1583.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (68,513,860 samples, 0.01%)</title><rect x="17.1" y="1493" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="20.06" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="501" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="511.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (186,358,717 samples, 0.03%)</title><rect x="1166.7" y="1429" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1169.66" y="1439.5" ></text>
</g>
<g >
<title>irq_work_single (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1109" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="15.40" y="1119.5" ></text>
</g>
<g >
<title>parse_and_execute (71,471,315 samples, 0.01%)</title><rect x="1155.7" y="1221" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1158.67" y="1231.5" ></text>
</g>
<g >
<title>pick_next_task (51,227,679 samples, 0.01%)</title><rect x="812.0" y="1365" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="814.96" y="1375.5" ></text>
</g>
<g >
<title>tick_sched_timer (50,090,769 samples, 0.01%)</title><rect x="811.9" y="1397" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="814.85" y="1407.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common (664,475,159 samples, 0.12%)</title><rect x="1152.0" y="1589" width="1.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1155.00" y="1599.5" ></text>
</g>
<g >
<title>core::cmp::min (304,301,664 samples, 0.06%)</title><rect x="885.6" y="1477" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="888.56" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="821" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="831.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (204,171,969 samples, 0.04%)</title><rect x="514.7" y="1381" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="517.70" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_lock (58,934,319 samples, 0.01%)</title><rect x="24.7" y="1301" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="27.69" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="469" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="485" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="495.5" ></text>
</g>
<g >
<title>menu_select (106,235,788 samples, 0.02%)</title><rect x="1189.4" y="1461" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1192.44" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="629" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (814,239,855 samples, 0.15%)</title><rect x="29.7" y="661" width="1.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.75" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="389" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="399.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (358,163,194 samples, 0.07%)</title><rect x="64.0" y="1589" width="0.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="66.95" y="1599.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (48,272,421 samples, 0.01%)</title><rect x="13.2" y="1333" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="16.18" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (12,267,796,106 samples, 2.23%)</title><rect x="1128.4" y="1605" width="26.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1131.43" y="1615.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1173" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="613" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1077" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (853,573,086 samples, 0.16%)</title><rect x="29.7" y="741" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.71" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (143,362,007 samples, 0.03%)</title><rect x="37.2" y="1541" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="40.17" y="1551.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::lind_yield (51,054,570 samples, 0.01%)</title><rect x="732.3" y="1413" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="735.30" y="1423.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (51,223,660 samples, 0.01%)</title><rect x="50.3" y="1605" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="53.28" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="869" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (427,467,647 samples, 0.08%)</title><rect x="46.7" y="1461" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="49.70" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_enter (308,158,435 samples, 0.06%)</title><rect x="1166.7" y="1477" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1169.65" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="341" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="351.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (452,636,538 samples, 0.08%)</title><rect x="43.5" y="1269" width="1.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="46.54" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (86,089,307 samples, 0.02%)</title><rect x="29.8" y="357" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.82" y="367.5" ></text>
</g>
<g >
<title>trigger_load_balance (51,200,664 samples, 0.01%)</title><rect x="52.3" y="1429" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="55.26" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1445" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1455.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (266,769,215 samples, 0.05%)</title><rect x="46.9" y="1317" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="49.91" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,478,173,960 samples, 0.27%)</title><rect x="29.7" y="997" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.67" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,778,708,575 samples, 0.32%)</title><rect x="29.6" y="1397" width="3.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.55" y="1407.5" ></text>
</g>
<g >
<title>__filemap_get_folio (63,225,584 samples, 0.01%)</title><rect x="47.1" y="1221" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="50.12" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (184,730,929 samples, 0.03%)</title><rect x="35.2" y="117" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1477" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1487.5" ></text>
</g>
<g >
<title>_dl_catch_exception (95,869,451 samples, 0.02%)</title><rect x="1157.8" y="1525" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1160.81" y="1535.5" ></text>
</g>
<g >
<title>load_balance (173,026,110 samples, 0.03%)</title><rect x="1166.7" y="1317" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1169.67" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="677" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1381" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (292,355,463 samples, 0.05%)</title><rect x="66.1" y="1557" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="69.14" y="1567.5" ></text>
</g>
<g >
<title>ext4_da_write_end (92,589,554 samples, 0.02%)</title><rect x="47.3" y="1269" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="50.27" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,772,034,393 samples, 0.32%)</title><rect x="29.6" y="1365" width="3.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.57" y="1375.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (4,601,749,810 samples, 0.84%)</title><rect x="818.6" y="1493" width="9.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="821.64" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="597" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="629" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="639.5" ></text>
</g>
<g >
<title>irq_exit_rcu (179,568,127 samples, 0.03%)</title><rect x="1166.7" y="1413" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1169.67" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="485" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="495.5" ></text>
</g>
<g >
<title>__irq_work_queue_local (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1253" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="15.40" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="389" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="399.5" ></text>
</g>
<g >
<title>rest_init (531,899,144 samples, 0.10%)</title><rect x="1188.9" y="1541" width="1.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1191.86" y="1551.5" ></text>
</g>
<g >
<title>begin_new_exec (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1461" width="1.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="18.06" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1045" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1055.5" ></text>
</g>
<g >
<title>[libc.so.6] (186,097,893 samples, 0.03%)</title><rect x="13.6" y="1573" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.60" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1397" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="997" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="1007.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (46,730,794 samples, 0.01%)</title><rect x="1187.2" y="1477" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1190.25" y="1487.5" ></text>
</g>
<g >
<title>[[heap]] (224,634,445 samples, 0.04%)</title><rect x="16.3" y="1605" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="19.31" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="789" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="799.5" ></text>
</g>
<g >
<title>dispatcher@plt (358,036,188 samples, 0.07%)</title><rect x="732.4" y="1525" width="0.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="735.41" y="1535.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1461" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="16.49" y="1471.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::Cage::get_filedescriptor (255,614,927 samples, 0.05%)</title><rect x="63.4" y="1573" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="66.41" y="1583.5" ></text>
</g>
<g >
<title>getname_flags (174,602,070 samples, 0.03%)</title><rect x="17.4" y="1429" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="20.40" y="1439.5" ></text>
</g>
<g >
<title>__clone (826,312,729 samples, 0.15%)</title><rect x="38.0" y="1605" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="40.98" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (98,648,563 samples, 0.02%)</title><rect x="20.3" y="1493" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="23.29" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (55,430,419 samples, 0.01%)</title><rect x="29.8" y="309" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.83" y="319.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt_r (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1349" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="359.09" y="1359.5" ></text>
</g>
<g >
<title>[librustposix.so] (614,672,615 samples, 0.11%)</title><rect x="66.8" y="1605" width="1.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="69.77" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1109" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="773" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="783.5" ></text>
</g>
<g >
<title>execute_command_internal (898,792,282 samples, 0.16%)</title><rect x="1155.0" y="1509" width="1.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1158.02" y="1519.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (409,613,193 samples, 0.07%)</title><rect x="67.2" y="1557" width="0.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="70.21" y="1567.5" ></text>
</g>
<g >
<title>zap_pte_range (137,198,854 samples, 0.02%)</title><rect x="21.6" y="1397" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="24.56" y="1407.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (3,679,797,190 samples, 0.67%)</title><rect x="581.6" y="1365" width="7.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="584.55" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1205" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1215.5" ></text>
</g>
<g >
<title>[docker] (99,233,519 samples, 0.02%)</title><rect x="10.2" y="1605" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="13.18" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1509" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1519.5" ></text>
</g>
<g >
<title>do_idle (526,468,324 samples, 0.10%)</title><rect x="1188.9" y="1509" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1191.86" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1525" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1535.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (179,568,127 samples, 0.03%)</title><rect x="1166.7" y="1397" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1169.67" y="1407.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::OrdinaryDefineOwnProperty (70,468,327 samples, 0.01%)</title><rect x="23.5" y="1525" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="26.48" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,223,567 samples, 0.01%)</title><rect x="36.9" y="85" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="95.5" ></text>
</g>
<g >
<title>vfs_iter_write (277,546,155 samples, 0.05%)</title><rect x="46.9" y="1365" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="49.90" y="1375.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (58,975,547,705 samples, 10.71%)</title><rect x="886.2" y="1477" width="126.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="889.21" y="1487.5" >core::ptr::drop..</text>
</g>
<g >
<title>asm_exc_page_fault (48,272,421 samples, 0.01%)</title><rect x="13.2" y="1429" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="16.18" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (189,968,462 samples, 0.03%)</title><rect x="1157.0" y="1429" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.02" y="1439.5" ></text>
</g>
<g >
<title>x2apic_send_IPI_self (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1221" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="15.40" y="1231.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1365" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="16.49" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="677" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="687.5" ></text>
</g>
<g >
<title>exit_mm (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1525" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="16.49" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="389" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="399.5" ></text>
</g>
<g >
<title>__poll (449,746,547 samples, 0.08%)</title><rect x="38.0" y="1525" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="41.01" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="949" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (82,255,112 samples, 0.01%)</title><rect x="34.4" y="1477" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="37.44" y="1487.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (76,854,159 samples, 0.01%)</title><rect x="1181.8" y="1429" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1184.76" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1157" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1333" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="1343.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::DefineOwnProperty (70,468,327 samples, 0.01%)</title><rect x="23.5" y="1541" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="26.48" y="1551.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (111,683,221 samples, 0.02%)</title><rect x="47.0" y="1269" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="50.03" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (66,103,049 samples, 0.01%)</title><rect x="39.0" y="1525" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="41.99" y="1535.5" ></text>
</g>
<g >
<title>setlocale (74,188,446 samples, 0.01%)</title><rect x="13.8" y="1541" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="16.84" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="917" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="927.5" ></text>
</g>
<g >
<title>[bash] (898,792,282 samples, 0.16%)</title><rect x="1155.0" y="1493" width="1.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.02" y="1503.5" ></text>
</g>
<g >
<title>NaClLog (5,060,897,764 samples, 0.92%)</title><rect x="335.9" y="1573" width="10.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="338.93" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_read (100,200,003 samples, 0.02%)</title><rect x="49.2" y="1573" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="52.16" y="1583.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (95,537,060 samples, 0.02%)</title><rect x="37.3" y="1461" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="40.26" y="1471.5" ></text>
</g>
<g >
<title>migrate_task_rq_fair (542,715,636 samples, 0.10%)</title><rect x="1180.3" y="1349" width="1.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1183.31" y="1359.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (292,355,463 samples, 0.05%)</title><rect x="66.1" y="1589" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="69.14" y="1599.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (5,517,121,292 samples, 1.00%)</title><rect x="641.9" y="1365" width="11.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="644.91" y="1375.5" ></text>
</g>
<g >
<title>NaClLog (358,153,377 samples, 0.07%)</title><rect x="746.2" y="1557" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="749.21" y="1567.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (263,935,172 samples, 0.05%)</title><rect x="21.0" y="1477" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="23.97" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (701,987,980 samples, 0.13%)</title><rect x="1158.0" y="1525" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.02" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (826,312,729 samples, 0.15%)</title><rect x="38.0" y="1589" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="40.98" y="1599.5" ></text>
</g>
<g >
<title>core::cmp::min (204,171,969 samples, 0.04%)</title><rect x="514.7" y="1413" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="517.70" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,696,877,460 samples, 0.31%)</title><rect x="29.6" y="1301" width="3.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.59" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1189" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1199.5" ></text>
</g>
<g >
<title>search_binary_handler (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1493" width="1.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="47.59" y="1503.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (51,288,752 samples, 0.01%)</title><rect x="267.0" y="1525" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="269.98" y="1535.5" ></text>
</g>
<g >
<title>exc_page_fault (48,272,421 samples, 0.01%)</title><rect x="13.2" y="1413" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="16.18" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (5,517,121,292 samples, 1.00%)</title><rect x="641.9" y="1349" width="11.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="644.91" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="245" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="255.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (95,869,451 samples, 0.02%)</title><rect x="1157.8" y="1477" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1160.81" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,699,274,040 samples, 0.31%)</title><rect x="29.6" y="1333" width="3.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.58" y="1343.5" ></text>
</g>
<g >
<title>do_idle (78,847,206 samples, 0.01%)</title><rect x="49.4" y="1557" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="52.38" y="1567.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (58,771,770,683 samples, 10.68%)</title><rect x="886.6" y="1429" width="126.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="889.64" y="1439.5" >core::sync::ato..</text>
</g>
<g >
<title>__pmd_alloc (120,554,165 samples, 0.02%)</title><rect x="24.4" y="1301" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="27.43" y="1311.5" ></text>
</g>
<g >
<title>set_task_cpu (542,715,636 samples, 0.10%)</title><rect x="1180.3" y="1365" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1183.31" y="1375.5" ></text>
</g>
<g >
<title>exit_mmap (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1397" width="1.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="18.06" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="933" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="213" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="181" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="191.5" ></text>
</g>
<g >
<title>exec_mmap (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1445" width="1.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="18.06" y="1455.5" ></text>
</g>
<g >
<title>__libc_start_main (1,121,645,983 samples, 0.20%)</title><rect x="1155.0" y="1589" width="2.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1158.02" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (140,632,003 samples, 0.03%)</title><rect x="29.8" y="421" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.81" y="431.5" ></text>
</g>
<g >
<title>__free_one_page (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1349" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="16.49" y="1359.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (4,907,713,774 samples, 0.89%)</title><rect x="437.1" y="1461" width="10.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="440.08" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1493" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1503.5" ></text>
</g>
<g >
<title>execute_command_internal (65,201,811 samples, 0.01%)</title><rect x="1156.4" y="1301" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1159.37" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1461" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1471.5" ></text>
</g>
<g >
<title>switch_mm (66,456,621 samples, 0.01%)</title><rect x="1167.1" y="1429" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1170.06" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="421" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,309,485 samples, 0.01%)</title><rect x="36.9" y="37" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="277" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="287.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_mutcbuf (204,747,015 samples, 0.04%)</title><rect x="435.6" y="1493" width="0.5" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="438.65" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (99,209,290 samples, 0.02%)</title><rect x="1157.4" y="1605" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1160.45" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (169,622,046 samples, 0.03%)</title><rect x="29.8" y="453" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.81" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="501" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="511.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (53,060,577 samples, 0.01%)</title><rect x="1151.9" y="1589" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1154.88" y="1599.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (47,157,433 samples, 0.01%)</title><rect x="1188.9" y="1445" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1191.88" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (511,839,035 samples, 0.09%)</title><rect x="1028.2" y="1413" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1031.18" y="1423.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (408,431,838 samples, 0.07%)</title><rect x="730.4" y="1349" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="733.43" y="1359.5" ></text>
</g>
<g >
<title>perf_pending_irq (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1093" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="15.40" y="1103.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (2,503,050,788 samples, 0.45%)</title><rect x="812.1" y="1461" width="5.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="815.07" y="1471.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (153,806,933 samples, 0.03%)</title><rect x="732.0" y="1381" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="734.97" y="1391.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (58,975,547,705 samples, 10.71%)</title><rect x="886.2" y="1445" width="126.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="889.21" y="1455.5" >&lt;parking_lot::r..</text>
</g>
<g >
<title>file_tty_write.constprop.0 (542,715,636 samples, 0.10%)</title><rect x="1180.3" y="1509" width="1.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1183.31" y="1519.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (201,326,708 samples, 0.04%)</title><rect x="1181.8" y="1477" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1184.76" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="277" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="287.5" ></text>
</g>
<g >
<title>do_group_exit (98,648,563 samples, 0.02%)</title><rect x="20.3" y="1461" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="23.29" y="1471.5" ></text>
</g>
<g >
<title>mmput (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1509" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="16.49" y="1519.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (304,301,664 samples, 0.06%)</title><rect x="885.6" y="1445" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="888.56" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (2,347,687,290 samples, 0.43%)</title><rect x="800.2" y="1477" width="5.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="803.24" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,662,380,112 samples, 0.30%)</title><rect x="29.6" y="1269" width="3.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.59" y="1279.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,790,531,051 samples, 0.33%)</title><rect x="1107.0" y="1477" width="3.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1109.96" y="1487.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1573" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="37.85" y="1583.5" ></text>
</g>
<g >
<title>operator new (76,227,932 samples, 0.01%)</title><rect x="29.2" y="1493" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="32.23" y="1503.5" ></text>
</g>
<g >
<title>bprm_execve (99,209,290 samples, 0.02%)</title><rect x="1157.4" y="1541" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1160.45" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="261" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="271.5" ></text>
</g>
<g >
<title>copy_present_pte (396,960,967 samples, 0.07%)</title><rect x="26.5" y="1285" width="0.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="29.47" y="1295.5" ></text>
</g>
<g >
<title>perf_poll (83,225,703 samples, 0.02%)</title><rect x="46.2" y="1461" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="49.15" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="405" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="415.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (112,999,011 samples, 0.02%)</title><rect x="12.4" y="1509" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.38" y="1519.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (89,682,907 samples, 0.02%)</title><rect x="40.0" y="1365" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="42.99" y="1375.5" ></text>
</g>
<g >
<title>sh (1,355,185,842 samples, 0.25%)</title><rect x="1154.8" y="1621" width="2.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1157.76" y="1631.5" ></text>
</g>
<g >
<title>v8::internal::ConcurrentMarking::Run (107,223,917 samples, 0.02%)</title><rect x="39.2" y="1525" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="42.25" y="1535.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_cbuf (306,439,031 samples, 0.06%)</title><rect x="806.2" y="1493" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="809.15" y="1503.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt; (5,178,378,130 samples, 0.94%)</title><rect x="789.0" y="1509" width="11.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="792.03" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (173,696,089 samples, 0.03%)</title><rect x="29.8" y="501" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.80" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (510,905,880 samples, 0.09%)</title><rect x="60.8" y="1589" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="63.78" y="1599.5" ></text>
</g>
<g >
<title>kmem_cache_free (263,935,172 samples, 0.05%)</title><rect x="21.0" y="1493" width="0.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="23.97" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="581" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="591.5" ></text>
</g>
<g >
<title>do_iter_write (277,546,155 samples, 0.05%)</title><rect x="46.9" y="1349" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="49.90" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="693" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="703.5" ></text>
</g>
<g >
<title>__d_lookup (58,291,975 samples, 0.01%)</title><rect x="1155.2" y="1221" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1158.20" y="1231.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (409,613,193 samples, 0.07%)</title><rect x="67.2" y="1573" width="0.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="70.21" y="1583.5" ></text>
</g>
<g >
<title>schedule (53,700,884 samples, 0.01%)</title><rect x="46.3" y="1429" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.33" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (132,215,051 samples, 0.02%)</title><rect x="1157.7" y="1589" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1160.74" y="1599.5" ></text>
</g>
<g >
<title>sel_ldr (515,494,534,268 samples, 93.66%)</title><rect x="49.6" y="1621" width="1105.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="52.63" y="1631.5" >sel_ldr</text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (409,812,005 samples, 0.07%)</title><rect x="53.1" y="1605" width="0.9" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="56.13" y="1615.5" ></text>
</g>
<g >
<title>proc_readfd_common (112,286,827 samples, 0.02%)</title><rect x="1155.2" y="1269" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1158.18" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,426,549,146 samples, 0.26%)</title><rect x="29.7" y="837" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.69" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1077" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="1087.5" ></text>
</g>
<g >
<title>node::PerIsolatePlatformData::RunForegroundTask (148,946,818 samples, 0.03%)</title><rect x="37.5" y="1541" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="40.49" y="1551.5" ></text>
</g>
<g >
<title>perf_output_end (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1301" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="15.40" y="1311.5" ></text>
</g>
<g >
<title>__x64_sys_execve (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1573" width="1.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="18.06" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (168,103,093 samples, 0.03%)</title><rect x="18.3" y="1493" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="21.28" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_execve (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1573" width="1.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="47.59" y="1583.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1525" width="1.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="47.59" y="1535.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait (66,868,958 samples, 0.01%)</title><rect x="39.0" y="1541" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.99" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1237" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,613,258,323 samples, 0.29%)</title><rect x="29.6" y="1189" width="3.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.63" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (69,816,570 samples, 0.01%)</title><rect x="13.8" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.84" y="1487.5" ></text>
</g>
<g >
<title>__do_softirq (179,568,127 samples, 0.03%)</title><rect x="1166.7" y="1381" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1169.67" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="197" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1605" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.49" y="1615.5" ></text>
</g>
<g >
<title>__x64_sys_execve (2,182,376,060 samples, 0.40%)</title><rect x="39.9" y="1573" width="4.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="42.91" y="1583.5" ></text>
</g>
<g >
<title>kernel_clone (1,747,485,110 samples, 0.32%)</title><rect x="24.0" y="1413" width="3.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="26.98" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1285" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (385,915,604 samples, 0.07%)</title><rect x="46.7" y="1445" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="49.70" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="949" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="959.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (179,386,353 samples, 0.03%)</title><rect x="1189.0" y="1445" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1191.99" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="725" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="735.5" ></text>
</g>
<g >
<title>execute_command_internal (215,481,822 samples, 0.04%)</title><rect x="1155.8" y="1381" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1158.84" y="1391.5" ></text>
</g>
<g >
<title>filename_lookup (159,592,134 samples, 0.03%)</title><rect x="33.7" y="1429" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="36.70" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="789" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,564,459,913 samples, 0.28%)</title><rect x="29.6" y="1109" width="3.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.64" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1189" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1199.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (203,653,572 samples, 0.04%)</title><rect x="1138.7" y="1589" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1141.74" y="1599.5" ></text>
</g>
<g >
<title>NaClSysRecvDecoder (91,565,376 samples, 0.02%)</title><rect x="55.4" y="1605" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="58.43" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="133" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (112,286,827 samples, 0.02%)</title><rect x="1155.2" y="1317" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1158.18" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="565" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="575.5" ></text>
</g>
<g >
<title>Watcher::notify (107,842,133 samples, 0.02%)</title><rect x="34.4" y="1573" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="37.39" y="1583.5" ></text>
</g>
<g >
<title>cpu_startup_entry (78,847,206 samples, 0.01%)</title><rect x="49.4" y="1573" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="52.38" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (35,111,723,353 samples, 6.38%)</title><rect x="655.2" y="1333" width="75.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="658.16" y="1343.5" >[libc.so..</text>
</g>
<g >
<title>pte_alloc_one (122,075,241 samples, 0.02%)</title><rect x="25.1" y="1269" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="28.06" y="1279.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (307,084,687 samples, 0.06%)</title><rect x="653.7" y="1349" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="656.73" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (52,662,763 samples, 0.01%)</title><rect x="34.9" y="149" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="37.86" y="159.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (561,476,989 samples, 0.10%)</title><rect x="257.9" y="1557" width="1.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="260.89" y="1567.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (30,672,863,535 samples, 5.57%)</title><rect x="515.1" y="1397" width="65.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="518.13" y="1407.5" >&lt;lock_a..</text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3,987,093,124 samples, 0.72%)</title><rect x="580.9" y="1397" width="8.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="583.89" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="293" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="165" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="175.5" ></text>
</g>
<g >
<title>[unknown] (863,981,811 samples, 0.16%)</title><rect x="45.9" y="1605" width="1.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="48.95" y="1615.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::cagetable_getref (2,761,821,091 samples, 0.50%)</title><rect x="429.5" y="1509" width="5.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="432.51" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,699,274,040 samples, 0.31%)</title><rect x="29.6" y="1317" width="3.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.58" y="1327.5" ></text>
</g>
<g >
<title>tcp_seq_start (75,277,415 samples, 0.01%)</title><rect x="39.6" y="1381" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="42.57" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (522,460,199 samples, 0.09%)</title><rect x="31.5" y="757" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="34.54" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="437" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="853" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="863.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (4,448,968,100 samples, 0.81%)</title><rect x="447.6" y="1429" width="9.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="450.60" y="1439.5" ></text>
</g>
<g >
<title>generic_perform_write (243,931,642 samples, 0.04%)</title><rect x="47.0" y="1285" width="0.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="49.95" y="1295.5" ></text>
</g>
<g >
<title>NaClLog (358,508,865 samples, 0.07%)</title><rect x="52.4" y="1605" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="55.37" y="1615.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (51,271,705 samples, 0.01%)</title><rect x="806.8" y="1493" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="809.81" y="1503.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (395,643,565 samples, 0.07%)</title><rect x="1166.6" y="1589" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1169.65" y="1599.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (51,192,989 samples, 0.01%)</title><rect x="1105.4" y="1333" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1108.43" y="1343.5" ></text>
</g>
<g >
<title>[[heap]] (461,892,875 samples, 0.08%)</title><rect x="21.9" y="1605" width="0.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="24.86" y="1615.5" ></text>
</g>
<g >
<title>[git] (87,256,652 samples, 0.02%)</title><rect x="13.0" y="1413" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.99" y="1423.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4,956,788,658 samples, 0.90%)</title><rect x="488.6" y="1429" width="10.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="491.59" y="1439.5" ></text>
</g>
<g >
<title>begin_new_exec (99,209,290 samples, 0.02%)</title><rect x="1157.4" y="1461" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1160.45" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1205" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1215.5" ></text>
</g>
<g >
<title>[libc.so.6] (645,461,763 samples, 0.12%)</title><rect x="10.9" y="1493" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.90" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="453" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="463.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (68,513,860 samples, 0.01%)</title><rect x="17.1" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="20.06" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (591,743,572 samples, 0.11%)</title><rect x="35.6" y="133" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (190,489,457 samples, 0.03%)</title><rect x="35.2" y="1557" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.16" y="1567.5" ></text>
</g>
<g >
<title>NaClLog (1,638,307,210 samples, 0.30%)</title><rect x="1133.1" y="1589" width="3.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1136.14" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1205" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="1215.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (4,394,966,296 samples, 0.80%)</title><rect x="479.2" y="1413" width="9.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="482.17" y="1423.5" ></text>
</g>
<g >
<title>dispatcher (147,369,268,642 samples, 26.77%)</title><rect x="416.5" y="1525" width="315.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="419.47" y="1535.5" >dispatcher</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="181" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="191.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (23,613,897,070 samples, 4.29%)</title><rect x="1054.8" y="1413" width="50.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1057.80" y="1423.5" >core:..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (2,503,050,788 samples, 0.45%)</title><rect x="812.1" y="1477" width="5.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="815.07" y="1487.5" ></text>
</g>
<g >
<title>bprm_execve (2,182,376,060 samples, 0.40%)</title><rect x="39.9" y="1541" width="4.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="42.91" y="1551.5" ></text>
</g>
<g >
<title>exec_binprm (2,182,376,060 samples, 0.40%)</title><rect x="39.9" y="1509" width="4.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="42.91" y="1519.5" ></text>
</g>
<g >
<title>poll_idle (79,810,196 samples, 0.01%)</title><rect x="1165.9" y="1493" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1168.86" y="1503.5" ></text>
</g>
<g >
<title>copy_pmd_range (1,401,368,971 samples, 0.25%)</title><rect x="24.4" y="1317" width="3.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="27.37" y="1327.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectDefineProperties (101,484,883 samples, 0.02%)</title><rect x="23.5" y="1573" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="26.48" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1237" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="1247.5" ></text>
</g>
<g >
<title>arch_call_rest_init (395,643,565 samples, 0.07%)</title><rect x="1166.6" y="1557" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1169.65" y="1567.5" ></text>
</g>
<g >
<title>iterate_dir (112,286,827 samples, 0.02%)</title><rect x="1155.2" y="1301" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1158.18" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,843,519,496 samples, 0.33%)</title><rect x="29.5" y="1429" width="4.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.53" y="1439.5" ></text>
</g>
<g >
<title>git (361,516,922 samples, 0.07%)</title><rect x="12.8" y="1621" width="0.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="15.81" y="1631.5" ></text>
</g>
<g >
<title>__libc_start_main (1,537,831,178 samples, 0.28%)</title><rect x="17.2" y="1589" width="3.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="20.21" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1125" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1135.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (51,200,664 samples, 0.01%)</title><rect x="52.3" y="1525" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="55.26" y="1535.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (4,956,788,658 samples, 0.90%)</title><rect x="488.6" y="1413" width="10.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="491.59" y="1423.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (53,700,884 samples, 0.01%)</title><rect x="46.3" y="1461" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="49.33" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1125" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="149" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="159.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (7,100,945,343 samples, 1.29%)</title><rect x="1023.6" y="1445" width="15.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1026.58" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="453" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="517" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="527.5" ></text>
</g>
<g >
<title>ion (427,467,647 samples, 0.08%)</title><rect x="46.7" y="1493" width="0.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="49.70" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (214,832,135 samples, 0.04%)</title><rect x="12.3" y="1589" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.32" y="1599.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::open_syscall (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1509" width="1.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="359.09" y="1519.5" ></text>
</g>
<g >
<title>d_hash_and_lookup (59,818,263 samples, 0.01%)</title><rect x="1155.2" y="1237" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1158.20" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="901" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="911.5" ></text>
</g>
<g >
<title>__x64_sys_write (378,484,528 samples, 0.07%)</title><rect x="46.7" y="1429" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="49.70" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="517" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="527.5" ></text>
</g>
<g >
<title>free_pgtables (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1381" width="1.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="18.06" y="1391.5" ></text>
</g>
<g >
<title>grep (597,283,218 samples, 0.11%)</title><rect x="13.6" y="1621" width="1.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="16.59" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="613" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (85,625,530 samples, 0.02%)</title><rect x="34.4" y="1493" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="37.43" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1557" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1567.5" ></text>
</g>
<g >
<title>[bash] (294,431,843 samples, 0.05%)</title><rect x="1156.3" y="1349" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1159.30" y="1359.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1317" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="15.40" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (640,775,356 samples, 0.12%)</title><rect x="18.7" y="1461" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.73" y="1471.5" ></text>
</g>
<g >
<title>setlocale (701,987,980 samples, 0.13%)</title><rect x="1158.0" y="1541" width="1.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1161.02" y="1551.5" ></text>
</g>
<g >
<title>mmput (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1429" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="18.06" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="725" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="735.5" ></text>
</g>
<g >
<title>search_binary_handler (2,182,376,060 samples, 0.40%)</title><rect x="39.9" y="1493" width="4.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="42.91" y="1503.5" ></text>
</g>
<g >
<title>proc_readfd (112,286,827 samples, 0.02%)</title><rect x="1155.2" y="1285" width="0.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1158.18" y="1295.5" ></text>
</g>
<g >
<title>do_sys_poll (248,807,902 samples, 0.05%)</title><rect x="46.0" y="1493" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="49.01" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (133,967,518 samples, 0.02%)</title><rect x="37.2" y="1525" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="40.17" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (260,908,729 samples, 0.05%)</title><rect x="46.0" y="1525" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="49.00" y="1535.5" ></text>
</g>
<g >
<title>pipefs_dname (99,233,183 samples, 0.02%)</title><rect x="18.4" y="1397" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="21.39" y="1407.5" ></text>
</g>
<g >
<title>dispatcher (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1525" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="359.09" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1605" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="18.06" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="453" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="463.5" ></text>
</g>
<g >
<title>exec_binprm (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1509" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="47.59" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1029" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="1039.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (51,278,340 samples, 0.01%)</title><rect x="637.3" y="1301" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="640.33" y="1311.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (214,832,135 samples, 0.04%)</title><rect x="12.3" y="1557" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.32" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="997" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1007.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (66,456,621 samples, 0.01%)</title><rect x="1167.1" y="1413" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1170.06" y="1423.5" ></text>
</g>
<g >
<title>ret_from_fork (85,679,507 samples, 0.02%)</title><rect x="1181.5" y="1605" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1184.47" y="1615.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (131,384,324 samples, 0.02%)</title><rect x="1157.7" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1160.74" y="1567.5" ></text>
</g>
<g >
<title>__handle_mm_fault (48,272,421 samples, 0.01%)</title><rect x="13.2" y="1365" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="16.18" y="1375.5" ></text>
</g>
<g >
<title>tick_sched_timer (51,192,989 samples, 0.01%)</title><rect x="1105.4" y="1365" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1108.43" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (336,900,333 samples, 0.06%)</title><rect x="14.1" y="1605" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.05" y="1615.5" ></text>
</g>
<g >
<title>lind_recv (101,674,359 samples, 0.02%)</title><rect x="733.2" y="1557" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="736.17" y="1567.5" ></text>
</g>
<g >
<title>native_write_msr (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1205" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="15.40" y="1215.5" ></text>
</g>
<g >
<title>execute_command_internal (86,489,961 samples, 0.02%)</title><rect x="1155.4" y="1317" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1158.42" y="1327.5" ></text>
</g>
<g >
<title>[[heap]] (157,861,318 samples, 0.03%)</title><rect x="10.6" y="1605" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.57" y="1615.5" ></text>
</g>
<g >
<title>__x64_sys_read (80,759,400 samples, 0.01%)</title><rect x="39.6" y="1477" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="42.55" y="1487.5" ></text>
</g>
<g >
<title>[sel_ldr] (435,830,066,164 samples, 79.18%)</title><rect x="177.7" y="1605" width="934.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="180.66" y="1615.5" >[sel_ldr]</text>
</g>
<g >
<title>lind_send (256,049,664 samples, 0.05%)</title><rect x="1146.5" y="1589" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1149.52" y="1599.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,601,749,810 samples, 0.84%)</title><rect x="818.6" y="1477" width="9.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="821.64" y="1487.5" ></text>
</g>
<g >
<title>unmap_vmas (2,012,986,049 samples, 0.37%)</title><rect x="40.3" y="1381" width="4.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="43.27" y="1391.5" ></text>
</g>
<g >
<title>std::__condvar::notify_all (90,395,634 samples, 0.02%)</title><rect x="34.4" y="1541" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="37.42" y="1551.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (356,230,197 samples, 0.06%)</title><rect x="1012.6" y="1461" width="0.8" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="1015.64" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1525" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="1535.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,753,329,831 samples, 0.86%)</title><rect x="419.3" y="1493" width="10.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="422.32" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="421" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="277" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="287.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (99,209,290 samples, 0.02%)</title><rect x="1157.4" y="1557" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1160.45" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="197" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="207.5" ></text>
</g>
<g >
<title>record__pushfn (431,172,282 samples, 0.08%)</title><rect x="46.7" y="1525" width="0.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="49.69" y="1535.5" ></text>
</g>
<g >
<title>do_exit (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1541" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="16.49" y="1551.5" ></text>
</g>
<g >
<title>expr (1,048,481,588 samples, 0.19%)</title><rect x="10.6" y="1621" width="2.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="13.57" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1205" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="1215.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (153,334,882 samples, 0.03%)</title><rect x="55.7" y="1589" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="58.74" y="1599.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (560,534,215 samples, 0.10%)</title><rect x="58.4" y="1589" width="1.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="61.37" y="1599.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (357,324,643 samples, 0.06%)</title><rect x="1027.4" y="1413" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1030.42" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (660,450,854 samples, 0.12%)</title><rect x="10.9" y="1525" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.90" y="1535.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (5,654,378,405 samples, 1.03%)</title><rect x="849.6" y="1461" width="12.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="852.56" y="1471.5" ></text>
</g>
<g >
<title>[git] (180,375,563 samples, 0.03%)</title><rect x="13.0" y="1461" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.99" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="565" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="575.5" ></text>
</g>
<g >
<title>unmap_single_vma (140,022,652 samples, 0.03%)</title><rect x="21.6" y="1445" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="24.56" y="1455.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (53,700,884 samples, 0.01%)</title><rect x="46.3" y="1445" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="49.33" y="1455.5" ></text>
</g>
<g >
<title>__mmput (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1493" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="16.49" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1493" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1061" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="933" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="943.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (4,497,045,725 samples, 0.82%)</title><rect x="489.6" y="1397" width="9.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="492.58" y="1407.5" ></text>
</g>
<g >
<title>NaClSysRecv (168,994,311,614 samples, 30.70%)</title><rect x="370.9" y="1557" width="362.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="373.88" y="1567.5" >NaClSysRecv</text>
</g>
<g >
<title>[bash] (107,608,249 samples, 0.02%)</title><rect x="1155.6" y="1317" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.61" y="1327.5" ></text>
</g>
<g >
<title>arch_call_rest_init (531,899,144 samples, 0.10%)</title><rect x="1188.9" y="1557" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1191.86" y="1567.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (111,536,264 samples, 0.02%)</title><rect x="1188.2" y="1541" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1191.17" y="1551.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,178,378,130 samples, 0.94%)</title><rect x="789.0" y="1493" width="11.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="792.03" y="1503.5" ></text>
</g>
<g >
<title>ksys_read (72,976,489 samples, 0.01%)</title><rect x="34.7" y="1509" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="37.67" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="997" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1007.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner_tcp (204,388,947 samples, 0.04%)</title><rect x="64.3" y="1573" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="67.28" y="1583.5" ></text>
</g>
<g >
<title>load_elf_binary (99,209,290 samples, 0.02%)</title><rect x="1157.4" y="1477" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1160.45" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (405,149,920 samples, 0.07%)</title><rect x="38.1" y="1509" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="41.08" y="1519.5" ></text>
</g>
<g >
<title>__cmd_record (859,799,474 samples, 0.16%)</title><rect x="45.9" y="1589" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.95" y="1599.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1333" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="47.59" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,567,825,013 samples, 0.28%)</title><rect x="29.6" y="1141" width="3.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.64" y="1151.5" ></text>
</g>
<g >
<title>[libc.so.6] (149,410,280 samples, 0.03%)</title><rect x="10.6" y="1589" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.57" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="325" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="373" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="773" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="783.5" ></text>
</g>
<g >
<title>[git] (180,375,563 samples, 0.03%)</title><rect x="13.0" y="1541" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.99" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,478,173,960 samples, 0.27%)</title><rect x="29.7" y="965" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.67" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="213" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="223.5" ></text>
</g>
<g >
<title>[sleep] (701,987,980 samples, 0.13%)</title><rect x="1158.0" y="1557" width="1.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1161.02" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (173,696,089 samples, 0.03%)</title><rect x="29.8" y="485" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.80" y="495.5" ></text>
</g>
<g >
<title>rmqueue_bulk (55,861,408 samples, 0.01%)</title><rect x="25.1" y="1189" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="28.11" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="549" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,223,567 samples, 0.01%)</title><rect x="36.9" y="53" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="63.5" ></text>
</g>
<g >
<title>[libc.so.6] (728,588,354 samples, 0.13%)</title><rect x="18.7" y="1509" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.73" y="1519.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3,987,093,124 samples, 0.72%)</title><rect x="580.9" y="1413" width="8.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="583.89" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,651,780,714 samples, 0.30%)</title><rect x="29.6" y="1253" width="3.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.61" y="1263.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.isra.0 (174,901,945 samples, 0.03%)</title><rect x="1166.7" y="1349" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1169.67" y="1359.5" ></text>
</g>
<g >
<title>[ls] (1,537,831,178 samples, 0.28%)</title><rect x="17.2" y="1605" width="3.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="20.21" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1397" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="1407.5" ></text>
</g>
<g >
<title>ext4_release_io_end (65,351,807 samples, 0.01%)</title><rect x="1181.5" y="1525" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1184.50" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="837" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="709" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="645" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="655.5" ></text>
</g>
<g >
<title>_Fork (1,747,485,110 samples, 0.32%)</title><rect x="24.0" y="1493" width="3.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="26.98" y="1503.5" ></text>
</g>
<g >
<title>operator new (254,690,569 samples, 0.05%)</title><rect x="28.3" y="85" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="31.28" y="95.5" ></text>
</g>
<g >
<title>refill_stock (263,935,172 samples, 0.05%)</title><rect x="21.0" y="1429" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="23.97" y="1439.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (255,590,777 samples, 0.05%)</title><rect x="1151.3" y="1509" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1154.34" y="1519.5" ></text>
</g>
<g >
<title>uv__io_poll (384,810,193 samples, 0.07%)</title><rect x="37.2" y="1589" width="0.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="40.16" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="405" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1349" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1359.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (50,760,754 samples, 0.01%)</title><rect x="805.3" y="1493" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="808.28" y="1503.5" ></text>
</g>
<g >
<title>kworker/dying (85,315,346 samples, 0.02%)</title><rect x="14.9" y="1621" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="17.88" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,377,989,833 samples, 0.25%)</title><rect x="29.7" y="773" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.70" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1093" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1103.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (1,774,892,118 samples, 0.32%)</title><rect x="24.0" y="1589" width="3.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="26.98" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (759,008,443 samples, 0.14%)</title><rect x="29.8" y="613" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.76" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (260,908,729 samples, 0.05%)</title><rect x="46.0" y="1541" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="49.00" y="1551.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (95,869,451 samples, 0.02%)</title><rect x="1157.8" y="1509" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1160.81" y="1519.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (180,759,984 samples, 0.03%)</title><rect x="38.4" y="1413" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="41.40" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1141" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1151.5" ></text>
</g>
<g >
<title>leave_mm (66,456,621 samples, 0.01%)</title><rect x="1167.1" y="1445" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1170.06" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_read (72,976,489 samples, 0.01%)</title><rect x="34.7" y="1525" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="37.67" y="1535.5" ></text>
</g>
<g >
<title>load_elf_binary (2,182,376,060 samples, 0.40%)</title><rect x="39.9" y="1477" width="4.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="42.91" y="1487.5" ></text>
</g>
<g >
<title>glob_filename (151,566,657 samples, 0.03%)</title><rect x="1155.1" y="1413" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1158.10" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (170,775,698 samples, 0.03%)</title><rect x="20.5" y="1605" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="23.51" y="1615.5" ></text>
</g>
<g >
<title>write (427,467,647 samples, 0.08%)</title><rect x="46.7" y="1477" width="0.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="49.70" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1317" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (305,810,150 samples, 0.06%)</title><rect x="368.9" y="1541" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="371.91" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (218,436,207 samples, 0.04%)</title><rect x="1157.0" y="1509" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.96" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1333" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1343.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1,790,531,051 samples, 0.33%)</title><rect x="1107.0" y="1445" width="3.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1109.96" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="901" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="911.5" ></text>
</g>
<g >
<title>native_write_msr (50,090,769 samples, 0.01%)</title><rect x="811.9" y="1269" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="814.85" y="1279.5" ></text>
</g>
<g >
<title>timer_clear_idle (302,096,529 samples, 0.05%)</title><rect x="1187.4" y="1477" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1190.38" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (166,220,233 samples, 0.03%)</title><rect x="35.2" y="101" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="38.21" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (701,987,980 samples, 0.13%)</title><rect x="1158.0" y="1573" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.02" y="1583.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (4,651,460,045 samples, 0.85%)</title><rect x="437.6" y="1413" width="10.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="440.63" y="1423.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::net::SocketHandle&gt;&gt; (4,956,788,658 samples, 0.90%)</title><rect x="488.6" y="1445" width="10.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="491.59" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (71,739,882 samples, 0.01%)</title><rect x="1154.8" y="1573" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1157.77" y="1583.5" ></text>
</g>
<g >
<title>non-virtual thunk to v8::internal::CancelableTask::Run (148,946,818 samples, 0.03%)</title><rect x="37.5" y="1525" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="40.49" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (99,209,290 samples, 0.02%)</title><rect x="1157.4" y="1589" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1160.45" y="1599.5" ></text>
</g>
<g >
<title>kthread (85,679,507 samples, 0.02%)</title><rect x="1181.5" y="1589" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1184.47" y="1599.5" ></text>
</g>
<g >
<title>open64 (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1317" width="1.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="359.09" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1077" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="629" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="639.5" ></text>
</g>
<g >
<title>zap_pte_range (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1317" width="1.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="47.59" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1141" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="1151.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (132,238,981 samples, 0.02%)</title><rect x="16.9" y="1541" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="19.92" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,646,800,142 samples, 0.30%)</title><rect x="29.6" y="1237" width="3.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.62" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="805" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (54,598,600 samples, 0.01%)</title><rect x="33.4" y="1397" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="36.36" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="373" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1029" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1039.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (8,890,467,753 samples, 1.62%)</title><rect x="862.3" y="1445" width="19.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="865.34" y="1455.5" ></text>
</g>
<g >
<title>[[stack]] (59,458,307 samples, 0.01%)</title><rect x="16.8" y="1605" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="19.80" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (511,661,915 samples, 0.09%)</title><rect x="744.9" y="1541" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="747.89" y="1551.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (2,862,006,381 samples, 0.52%)</title><rect x="259.1" y="1557" width="6.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="262.09" y="1567.5" ></text>
</g>
<g >
<title>dispatcher (152,083,014,115 samples, 27.63%)</title><rect x="784.8" y="1525" width="326.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="787.76" y="1535.5" >dispatcher</text>
</g>
<g >
<title>scheduler_tick (51,200,664 samples, 0.01%)</title><rect x="52.3" y="1445" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="55.26" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (200,047,125 samples, 0.04%)</title><rect x="12.3" y="1541" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.32" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="533" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="543.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,553,102,631 samples, 0.46%)</title><rect x="1181.7" y="1509" width="5.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1184.70" y="1519.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (186,358,717 samples, 0.03%)</title><rect x="1166.7" y="1445" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1169.66" y="1455.5" ></text>
</g>
<g >
<title>page_remove_rmap (109,741,086 samples, 0.02%)</title><rect x="21.6" y="1381" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="24.62" y="1391.5" ></text>
</g>
<g >
<title>Glob::isIgnored (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1557" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="37.85" y="1567.5" ></text>
</g>
<g >
<title>lind_open (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1541" width="1.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="359.09" y="1551.5" ></text>
</g>
<g >
<title>pty_write (542,715,636 samples, 0.10%)</title><rect x="1180.3" y="1461" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1183.31" y="1471.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (51,278,340 samples, 0.01%)</title><rect x="637.3" y="1317" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="640.33" y="1327.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (4,192,955,376 samples, 0.76%)</title><rect x="448.1" y="1413" width="9.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="451.15" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="373" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (440,814,606 samples, 0.08%)</title><rect x="20.9" y="1589" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="23.91" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="869" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (847,758,395 samples, 0.15%)</title><rect x="29.7" y="709" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.72" y="719.5" ></text>
</g>
<g >
<title>uv__work_done (53,280,715 samples, 0.01%)</title><rect x="37.8" y="1557" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="40.83" y="1567.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::net::SocketHandle&gt;&gt;&gt; (5,469,680,926 samples, 0.99%)</title><rect x="828.5" y="1493" width="11.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="831.51" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,377,989,833 samples, 0.25%)</title><rect x="29.7" y="789" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.70" y="799.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (204,623,142 samples, 0.04%)</title><rect x="467.4" y="1445" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="470.45" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="229" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="239.5" ></text>
</g>
<g >
<title>vfs_write (378,484,528 samples, 0.07%)</title><rect x="46.7" y="1397" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="49.70" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1061" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1477" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1487.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_and_push_buffer (542,715,636 samples, 0.10%)</title><rect x="1180.3" y="1445" width="1.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1183.31" y="1455.5" ></text>
</g>
<g >
<title>mmput (148,566,893 samples, 0.03%)</title><rect x="21.5" y="1509" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="24.54" y="1519.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (17,845,422,670 samples, 3.24%)</title><rect x="599.1" y="1365" width="38.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="602.08" y="1375.5" >cor..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="229" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="239.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (612,875,366 samples, 0.11%)</title><rect x="805.6" y="1509" width="1.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="808.61" y="1519.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1413" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="15.40" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1541" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="373" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="383.5" ></text>
</g>
<g >
<title>seq_read_iter (80,759,400 samples, 0.01%)</title><rect x="39.6" y="1397" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="42.55" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1461" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1471.5" ></text>
</g>
<g >
<title>[git] (87,256,652 samples, 0.02%)</title><rect x="13.0" y="1397" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.99" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1413" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (2,455,902,548 samples, 0.45%)</title><rect x="429.5" y="1461" width="5.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="432.51" y="1471.5" ></text>
</g>
<g >
<title>getgrgid (51,638,462 samples, 0.01%)</title><rect x="17.8" y="1509" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="20.77" y="1519.5" ></text>
</g>
<g >
<title>filename_lookup (97,171,849 samples, 0.02%)</title><rect x="17.9" y="1413" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="20.89" y="1423.5" ></text>
</g>
<g >
<title>handle_pte_fault (48,272,421 samples, 0.01%)</title><rect x="13.2" y="1349" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="16.18" y="1359.5" ></text>
</g>
<g >
<title>kthread (51,098,332 samples, 0.01%)</title><rect x="1165.1" y="1589" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1168.06" y="1599.5" ></text>
</g>
<g >
<title>write (82,020,923 samples, 0.01%)</title><rect x="47.6" y="1509" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="50.62" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (48,405,594 samples, 0.01%)</title><rect x="31.4" y="629" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="34.39" y="639.5" ></text>
</g>
<g >
<title>try_to_wake_up (542,715,636 samples, 0.10%)</title><rect x="1180.3" y="1381" width="1.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1183.31" y="1391.5" ></text>
</g>
<g >
<title>v8::internal::Heap::Scavenge (95,661,798 samples, 0.02%)</title><rect x="37.6" y="1461" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="40.59" y="1471.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (51,288,752 samples, 0.01%)</title><rect x="267.0" y="1509" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="269.98" y="1519.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (4,497,045,725 samples, 0.82%)</title><rect x="489.6" y="1381" width="9.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="492.58" y="1391.5" ></text>
</g>
<g >
<title>timekeeping_update (51,192,989 samples, 0.01%)</title><rect x="1105.4" y="1285" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1108.43" y="1295.5" ></text>
</g>
<g >
<title>dispatcher (816,094,501 samples, 0.15%)</title><rect x="1144.3" y="1589" width="1.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1147.33" y="1599.5" ></text>
</g>
<g >
<title>do_sched_yield (51,054,570 samples, 0.01%)</title><rect x="732.3" y="1333" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="735.30" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="869" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="879.5" ></text>
</g>
<g >
<title>sysvec_irq_work (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1173" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="15.40" y="1183.5" ></text>
</g>
<g >
<title>NaClSysOpenDecoder (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1573" width="1.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="359.09" y="1583.5" ></text>
</g>
<g >
<title>[git] (180,375,563 samples, 0.03%)</title><rect x="13.0" y="1605" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.99" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="437" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="447.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (133,714,101 samples, 0.02%)</title><rect x="16.9" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="19.92" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1045" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="709" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="965" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="949" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="959.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (409,908,466 samples, 0.07%)</title><rect x="1140.5" y="1589" width="0.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1143.49" y="1599.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (1,738,878,303 samples, 0.32%)</title><rect x="24.0" y="1381" width="3.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="27.00" y="1391.5" ></text>
</g>
<g >
<title>v8::internal::ScavengerCollector::CollectGarbage (95,661,798 samples, 0.02%)</title><rect x="37.6" y="1445" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="40.59" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="693" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="703.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (4,295,511,170 samples, 0.78%)</title><rect x="819.3" y="1461" width="9.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="822.30" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="437" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_openat (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1269" width="1.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="359.09" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (66,007,773 samples, 0.01%)</title><rect x="47.7" y="1477" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="50.65" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1285" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="373" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (4,388,677,464 samples, 0.80%)</title><rect x="1014.2" y="1445" width="9.4" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="1017.17" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="725" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="735.5" ></text>
</g>
<g >
<title>unmap_page_range (140,022,652 samples, 0.03%)</title><rect x="21.6" y="1429" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="24.56" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="501" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (3,881,418,740 samples, 0.71%)</title><rect x="470.2" y="1413" width="8.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="473.19" y="1423.5" ></text>
</g>
<g >
<title>perf_event_task_tick (50,090,769 samples, 0.01%)</title><rect x="811.9" y="1333" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="814.85" y="1343.5" ></text>
</g>
<g >
<title>NaClLog (817,025,575 samples, 0.15%)</title><rect x="182.7" y="1589" width="1.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="185.70" y="1599.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt; (4,753,329,831 samples, 0.86%)</title><rect x="419.3" y="1509" width="10.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="422.32" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (258,957,550 samples, 0.05%)</title><rect x="11.2" y="1413" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.17" y="1423.5" ></text>
</g>
<g >
<title>vfs_write (57,944,330 samples, 0.01%)</title><rect x="47.7" y="1429" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="50.67" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (256,349,830 samples, 0.05%)</title><rect x="28.3" y="117" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="31.28" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1493" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1503.5" ></text>
</g>
<g >
<title>HandleStackContext (21,156,146,782 samples, 3.84%)</title><rect x="221.7" y="1573" width="45.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="224.73" y="1583.5" >Hand..</text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (4,349,038,788 samples, 0.79%)</title><rect x="840.2" y="1429" width="9.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="843.24" y="1439.5" ></text>
</g>
<g >
<title>exec_binprm (99,209,290 samples, 0.02%)</title><rect x="1157.4" y="1509" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1160.45" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="613" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="623.5" ></text>
</g>
<g >
<title>HandleStackContext (306,979,777 samples, 0.06%)</title><rect x="49.6" y="1605" width="0.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="52.63" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="757" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="767.5" ></text>
</g>
<g >
<title>pick_next_task_fair (51,054,570 samples, 0.01%)</title><rect x="732.3" y="1269" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="735.30" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1541" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1285" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1295.5" ></text>
</g>
<g >
<title>__wake_up_common (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1029" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="15.40" y="1039.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1573" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="16.49" y="1583.5" ></text>
</g>
<g >
<title>__schedule (112,588,654 samples, 0.02%)</title><rect x="1188.4" y="1525" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1191.41" y="1535.5" ></text>
</g>
<g >
<title>__fsnotify_parent (72,321,981 samples, 0.01%)</title><rect x="46.7" y="1381" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="49.71" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="485" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="495.5" ></text>
</g>
<g >
<title>sigprocmask (174,724,464 samples, 0.03%)</title><rect x="1156.6" y="1317" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1159.56" y="1327.5" ></text>
</g>
<g >
<title>rebalance_domains (47,895,277 samples, 0.01%)</title><rect x="1182.0" y="1397" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1185.05" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (192,376,509 samples, 0.03%)</title><rect x="16.3" y="1589" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.31" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="357" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="725" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="101" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="111.5" ></text>
</g>
<g >
<title>alloc_pages (79,457,491 samples, 0.01%)</title><rect x="25.1" y="1253" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="28.06" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (69,816,570 samples, 0.01%)</title><rect x="13.8" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.84" y="1471.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (304,301,664 samples, 0.06%)</title><rect x="885.6" y="1461" width="0.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="888.56" y="1471.5" ></text>
</g>
<g >
<title>vfs_read (65,504,064 samples, 0.01%)</title><rect x="34.7" y="1493" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="37.68" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (250,461,229 samples, 0.05%)</title><rect x="33.6" y="1493" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="36.57" y="1503.5" ></text>
</g>
<g >
<title>rest_init (395,643,565 samples, 0.07%)</title><rect x="1166.6" y="1541" width="0.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1169.65" y="1551.5" ></text>
</g>
<g >
<title>NaClLog (2,814,450,238 samples, 0.51%)</title><rect x="382.4" y="1541" width="6.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="385.39" y="1551.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (4,973,449,542 samples, 0.90%)</title><rect x="789.5" y="1461" width="10.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="792.47" y="1471.5" ></text>
</g>
<g >
<title>[sleep] (701,987,980 samples, 0.13%)</title><rect x="1158.0" y="1605" width="1.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1161.02" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="325" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="335.5" ></text>
</g>
<g >
<title>main (1,121,645,983 samples, 0.20%)</title><rect x="1155.0" y="1557" width="2.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1158.02" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="645" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="655.5" ></text>
</g>
<g >
<title>[libc.so.6] (336,900,333 samples, 0.06%)</title><rect x="14.1" y="1589" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.05" y="1599.5" ></text>
</g>
<g >
<title>walk_component (97,171,849 samples, 0.02%)</title><rect x="17.9" y="1381" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="20.89" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1541" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1551.5" ></text>
</g>
<g >
<title>__slab_free (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1333" width="1.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="18.06" y="1343.5" ></text>
</g>
<g >
<title>inode_permission (64,352,305 samples, 0.01%)</title><rect x="33.7" y="1381" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="36.73" y="1391.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (102,588,298 samples, 0.02%)</title><rect x="1138.2" y="1589" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1141.19" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1413" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1423.5" ></text>
</g>
<g >
<title>run_rebalance_domains (59,455,586 samples, 0.01%)</title><rect x="1182.0" y="1413" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1185.04" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (523,433,302 samples, 0.10%)</title><rect x="30.2" y="501" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="33.17" y="511.5" ></text>
</g>
<g >
<title>[bash] (214,090,978 samples, 0.04%)</title><rect x="1155.8" y="1317" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.84" y="1327.5" ></text>
</g>
<g >
<title>__alloc_pages (79,457,491 samples, 0.01%)</title><rect x="25.1" y="1237" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="28.06" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="533" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="543.5" ></text>
</g>
<g >
<title>schedule (51,227,679 samples, 0.01%)</title><rect x="812.0" y="1381" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="814.96" y="1391.5" ></text>
</g>
<g >
<title>dup_mmap (1,738,878,303 samples, 0.32%)</title><rect x="24.0" y="1365" width="3.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="27.00" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="357" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (58,771,770,683 samples, 10.68%)</title><rect x="886.6" y="1413" width="126.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="889.64" y="1423.5" >core::sync::ato..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1109" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1119.5" ></text>
</g>
<g >
<title>[unknown]  (7,661,804,893 samples, 1.39%)</title><rect x="1112.0" y="1605" width="16.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1115.01" y="1615.5" ></text>
</g>
<g >
<title>setlocale (660,450,854 samples, 0.12%)</title><rect x="10.9" y="1541" width="1.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.90" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1589" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="1599.5" ></text>
</g>
<g >
<title>[ls] (261,955,501 samples, 0.05%)</title><rect x="17.2" y="1509" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="20.21" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="613" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1253" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="469" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="479.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (1,773,928,612 samples, 0.32%)</title><rect x="24.0" y="1573" width="3.8" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="26.98" y="1583.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (101,318,448 samples, 0.02%)</title><rect x="811.9" y="1477" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="814.85" y="1487.5" ></text>
</g>
<g >
<title>execute_command (86,489,961 samples, 0.02%)</title><rect x="1155.4" y="1333" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1158.42" y="1343.5" ></text>
</g>
<g >
<title>__mmput (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1413" width="1.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="18.06" y="1423.5" ></text>
</g>
<g >
<title>[perf-486471.map] (93,475,194 samples, 0.02%)</title><rect x="28.1" y="1605" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="31.07" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="709" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="133" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="485" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="495.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (44,245,283,393 samples, 8.04%)</title><rect x="637.4" y="1397" width="94.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="640.44" y="1407.5" >ringbuf::co..</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (255,590,777 samples, 0.05%)</title><rect x="1151.3" y="1525" width="0.6" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1154.34" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1301" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1311.5" ></text>
</g>
<g >
<title>get_cpu_device (72,956,078 samples, 0.01%)</title><rect x="1189.5" y="1429" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1192.48" y="1439.5" ></text>
</g>
<g >
<title>[perf-1156129.map] (2,184,721,309 samples, 0.40%)</title><rect x="23.4" y="1605" width="4.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="26.37" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1461" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="1471.5" ></text>
</g>
<g >
<title>schedule (51,054,570 samples, 0.01%)</title><rect x="732.3" y="1317" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="735.30" y="1327.5" ></text>
</g>
<g >
<title>v8::internal::Object::GetProperty (80,255,729 samples, 0.01%)</title><rect x="23.7" y="1525" width="0.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="26.70" y="1535.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (51,200,664 samples, 0.01%)</title><rect x="52.3" y="1509" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="55.26" y="1519.5" ></text>
</g>
<g >
<title>[git] (180,375,563 samples, 0.03%)</title><rect x="13.0" y="1477" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.99" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,451,988,416 samples, 0.26%)</title><rect x="29.7" y="901" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.67" y="911.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (511,839,035 samples, 0.09%)</title><rect x="1028.2" y="1429" width="1.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1031.18" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="293" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1125" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1135.5" ></text>
</g>
<g >
<title>[libc.so.6] (660,450,854 samples, 0.12%)</title><rect x="10.9" y="1573" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.90" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (409,468,231 samples, 0.07%)</title><rect x="11.0" y="1445" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.04" y="1455.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4,747,228,328 samples, 0.86%)</title><rect x="1013.4" y="1477" width="10.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1016.40" y="1487.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (57,744,383 samples, 0.01%)</title><rect x="1188.0" y="1525" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1191.03" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1477" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="325" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="677" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (56,105,071 samples, 0.01%)</title><rect x="23.0" y="1589" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.01" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,223,567 samples, 0.01%)</title><rect x="36.9" y="69" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="79.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (132,215,051 samples, 0.02%)</title><rect x="1157.7" y="1605" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1160.74" y="1615.5" ></text>
</g>
<g >
<title>lind (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1621" width="1.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="18.06" y="1631.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,084,945,955 samples, 0.20%)</title><rect x="1165.2" y="1605" width="2.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1168.17" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (591,743,572 samples, 0.11%)</title><rect x="35.6" y="85" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="95.5" ></text>
</g>
<g >
<title>do_readlinkat (168,103,093 samples, 0.03%)</title><rect x="18.3" y="1461" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="21.28" y="1471.5" ></text>
</g>
<g >
<title>do_sys_poll (299,746,795 samples, 0.05%)</title><rect x="38.2" y="1461" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="41.19" y="1471.5" ></text>
</g>
<g >
<title>[ls] (140,263,267 samples, 0.03%)</title><rect x="20.6" y="1573" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="23.57" y="1583.5" ></text>
</g>
<g >
<title>mas_wr_modify (54,998,136 samples, 0.01%)</title><rect x="27.4" y="1317" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="30.44" y="1327.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1045" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="15.40" y="1055.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (71,739,882 samples, 0.01%)</title><rect x="1154.8" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1157.77" y="1535.5" ></text>
</g>
<g >
<title>NaClLog (614,131,901 samples, 0.11%)</title><rect x="369.6" y="1557" width="1.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="372.56" y="1567.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_syscall (138,219,986,784 samples, 25.11%)</title><rect x="436.1" y="1493" width="296.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="439.09" y="1503.5" >rustposix::safeposix::syscalls::net_cal..</text>
</g>
<g >
<title>cpuidle_idle_call (468,836,880 samples, 0.09%)</title><rect x="1165.2" y="1541" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1168.17" y="1551.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (51,192,989 samples, 0.01%)</title><rect x="1105.4" y="1349" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1108.43" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (172,368,041 samples, 0.03%)</title><rect x="29.8" y="469" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.80" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt; (4,448,968,100 samples, 0.81%)</title><rect x="447.6" y="1461" width="9.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="450.60" y="1471.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (409,166,747 samples, 0.07%)</title><rect x="185.7" y="1589" width="0.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="188.66" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (184,730,929 samples, 0.03%)</title><rect x="35.2" y="149" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="159.5" ></text>
</g>
<g >
<title>anon_vma_clone (54,075,805 samples, 0.01%)</title><rect x="24.1" y="1333" width="0.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="27.05" y="1343.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (80,255,729 samples, 0.01%)</title><rect x="23.7" y="1541" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="26.70" y="1551.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (74,978,754 samples, 0.01%)</title><rect x="1188.7" y="1541" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1191.66" y="1551.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (398,009,337 samples, 0.07%)</title><rect x="1188.9" y="1493" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1191.87" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (591,743,572 samples, 0.11%)</title><rect x="35.6" y="117" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="229" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="239.5" ></text>
</g>
<g >
<title>__alloc_pages (120,554,165 samples, 0.02%)</title><rect x="24.4" y="1269" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="27.43" y="1279.5" ></text>
</g>
<g >
<title>free_pgtables (131,490,939 samples, 0.02%)</title><rect x="39.9" y="1381" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="42.91" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (78,632,500 samples, 0.01%)</title><rect x="29.8" y="325" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.83" y="335.5" ></text>
</g>
<g >
<title>do_statx (126,027,215 samples, 0.02%)</title><rect x="17.9" y="1445" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="20.89" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1349" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="229" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1093" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1381" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="853" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="863.5" ></text>
</g>
<g >
<title>[libc.so.6] (336,900,333 samples, 0.06%)</title><rect x="14.1" y="1573" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.05" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="213" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="181" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="191.5" ></text>
</g>
<g >
<title>__do_sys_clone (1,747,485,110 samples, 0.32%)</title><rect x="24.0" y="1429" width="3.7" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="26.98" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1333" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1061" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="853" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="863.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1429" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="15.40" y="1439.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (50,090,769 samples, 0.01%)</title><rect x="811.9" y="1445" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="814.85" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (2,073,435,480 samples, 0.38%)</title><rect x="29.1" y="1509" width="4.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="32.09" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (51,054,570 samples, 0.01%)</title><rect x="732.3" y="1349" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="735.30" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,646,800,142 samples, 0.30%)</title><rect x="29.6" y="1221" width="3.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.62" y="1231.5" ></text>
</g>
<g >
<title>CompareAndSwap (919,421,653 samples, 0.17%)</title><rect x="219.8" y="1573" width="1.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="222.76" y="1583.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (174,602,070 samples, 0.03%)</title><rect x="17.4" y="1413" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="20.40" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common (306,885,615 samples, 0.06%)</title><rect x="63.3" y="1589" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="66.30" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,615,863,192 samples, 0.29%)</title><rect x="29.6" y="1205" width="3.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.62" y="1215.5" ></text>
</g>
<g >
<title>exit_mm_release (98,648,563 samples, 0.02%)</title><rect x="20.3" y="1413" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="23.29" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="789" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="581" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (63,257,279 samples, 0.01%)</title><rect x="1157.9" y="1429" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1160.88" y="1439.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (4,192,955,376 samples, 0.76%)</title><rect x="448.1" y="1397" width="9.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="451.15" y="1407.5" ></text>
</g>
<g >
<title>NaClSysSend (153,794,786 samples, 0.03%)</title><rect x="1139.9" y="1589" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1142.94" y="1599.5" ></text>
</g>
<g >
<title>do_epoll_wait (133,967,518 samples, 0.02%)</title><rect x="37.2" y="1509" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="40.17" y="1519.5" ></text>
</g>
<g >
<title>memcpy@plt (102,556,594 samples, 0.02%)</title><rect x="746.0" y="1541" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="748.99" y="1551.5" ></text>
</g>
<g >
<title>execute_command (704,011,875 samples, 0.13%)</title><rect x="1155.4" y="1477" width="1.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1158.42" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="661" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="671.5" ></text>
</g>
<g >
<title>irq_work_queue (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1269" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="15.40" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (51,054,570 samples, 0.01%)</title><rect x="732.3" y="1381" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="735.30" y="1391.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (52,577,976 samples, 0.01%)</title><rect x="1167.2" y="1445" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1170.20" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_statx (183,183,655 samples, 0.03%)</title><rect x="17.4" y="1445" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="20.38" y="1455.5" ></text>
</g>
<g >
<title>parse_and_execute (69,206,242 samples, 0.01%)</title><rect x="1156.4" y="1317" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1159.37" y="1327.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::send_syscall (663,590,307 samples, 0.12%)</title><rect x="64.7" y="1589" width="1.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="67.72" y="1599.5" ></text>
</g>
<g >
<title>perf (869,895,827 samples, 0.16%)</title><rect x="45.9" y="1621" width="1.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="48.94" y="1631.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (2,658,727,529 samples, 0.48%)</title><rect x="461.7" y="1413" width="5.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="464.75" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (4,394,966,296 samples, 0.80%)</title><rect x="479.2" y="1397" width="9.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="482.17" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="885" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1013" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1023.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (255,890,352 samples, 0.05%)</title><rect x="1105.9" y="1445" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1108.87" y="1455.5" ></text>
</g>
<g >
<title>node::PerIsolatePlatformData::FlushForegroundTasksInternal (148,946,818 samples, 0.03%)</title><rect x="37.5" y="1557" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="40.49" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,527,339,233 samples, 0.28%)</title><rect x="29.6" y="1061" width="3.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.65" y="1071.5" ></text>
</g>
<g >
<title>read (105,087,247 samples, 0.02%)</title><rect x="34.6" y="1573" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="37.62" y="1583.5" ></text>
</g>
<g >
<title>v8::internal::ConcurrentMarking::JobTask::Run (107,223,917 samples, 0.02%)</title><rect x="39.2" y="1541" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="42.25" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="517" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (5,654,378,405 samples, 1.03%)</title><rect x="849.6" y="1445" width="12.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="852.56" y="1455.5" ></text>
</g>
<g >
<title>[bash] (215,481,822 samples, 0.04%)</title><rect x="1155.8" y="1333" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.84" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="981" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="991.5" ></text>
</g>
<g >
<title>[libc.so.6] (534,596,350 samples, 0.10%)</title><rect x="1158.3" y="1445" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.26" y="1455.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4,747,228,328 samples, 0.86%)</title><rect x="1013.4" y="1461" width="10.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1016.40" y="1471.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::open (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1461" width="1.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="359.09" y="1471.5" ></text>
</g>
<g >
<title>__schedule (150,354,537 samples, 0.03%)</title><rect x="38.5" y="1381" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="41.45" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (625,003,037 samples, 0.11%)</title><rect x="10.9" y="1461" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.90" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (253,289,846 samples, 0.05%)</title><rect x="33.6" y="1509" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="36.57" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (412,502,065 samples, 0.07%)</title><rect x="21.0" y="1573" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="23.97" y="1583.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (2,573,845,046 samples, 0.47%)</title><rect x="28.9" y="1573" width="5.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="31.87" y="1583.5" ></text>
</g>
<g >
<title>vfs_statx (203,897,700 samples, 0.04%)</title><rect x="33.7" y="1445" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="36.66" y="1455.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common (138,013,409,680 samples, 25.07%)</title><rect x="436.5" y="1477" width="295.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="439.53" y="1487.5" >rustposix::safeposix::syscalls::net_cal..</text>
</g>
<g >
<title>do_idle (3,347,306,896 samples, 0.61%)</title><rect x="1181.7" y="1557" width="7.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1184.66" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="821" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="885" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="895.5" ></text>
</g>
<g >
<title>[libc.so.6] (660,450,854 samples, 0.12%)</title><rect x="10.9" y="1509" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.90" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="565" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="575.5" ></text>
</g>
<g >
<title>[git] (84,070,273 samples, 0.02%)</title><rect x="12.8" y="1589" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.81" y="1599.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (292,355,463 samples, 0.05%)</title><rect x="66.1" y="1541" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="69.14" y="1551.5" ></text>
</g>
<g >
<title>[bash] (409,580,032 samples, 0.07%)</title><rect x="1155.4" y="1397" width="0.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.42" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1253" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (4,529,397,839 samples, 0.82%)</title><rect x="28.3" y="1605" width="9.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="31.27" y="1615.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (2,347,687,290 samples, 0.43%)</title><rect x="800.2" y="1461" width="5.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="803.24" y="1471.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (2,182,376,060 samples, 0.40%)</title><rect x="39.9" y="1525" width="4.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="42.91" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="277" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="981" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="991.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (292,355,463 samples, 0.05%)</title><rect x="66.1" y="1605" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="69.14" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="181" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="821" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="831.5" ></text>
</g>
<g >
<title>[git] (135,529,073 samples, 0.02%)</title><rect x="13.0" y="1445" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.99" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (71,739,882 samples, 0.01%)</title><rect x="1154.8" y="1605" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1157.77" y="1615.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (559,141,943 samples, 0.10%)</title><rect x="1131.5" y="1589" width="1.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1134.50" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1381" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1391.5" ></text>
</g>
<g >
<title>pagecache_get_page (69,123,163 samples, 0.01%)</title><rect x="47.1" y="1237" width="0.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="50.12" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (80,759,400 samples, 0.01%)</title><rect x="39.6" y="1493" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="42.55" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,862,863,732 samples, 0.34%)</title><rect x="29.5" y="1445" width="4.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.49" y="1455.5" ></text>
</g>
<g >
<title>ext4_finish_bio (65,351,807 samples, 0.01%)</title><rect x="1181.5" y="1509" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1184.50" y="1519.5" ></text>
</g>
<g >
<title>generic_write_end (92,589,554 samples, 0.02%)</title><rect x="47.3" y="1253" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="50.27" y="1263.5" ></text>
</g>
<g >
<title>end_page_writeback (65,351,807 samples, 0.01%)</title><rect x="1181.5" y="1493" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1184.50" y="1503.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (85,541,563 samples, 0.02%)</title><rect x="1181.8" y="1445" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1184.76" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="597" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1413" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="533" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="543.5" ></text>
</g>
<g >
<title>pick_next_task (51,054,570 samples, 0.01%)</title><rect x="732.3" y="1285" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="735.30" y="1295.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (531,899,144 samples, 0.10%)</title><rect x="1188.9" y="1589" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1191.86" y="1599.5" ></text>
</g>
<g >
<title>futex_cleanup (98,648,563 samples, 0.02%)</title><rect x="20.3" y="1381" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="23.29" y="1391.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (51,278,340 samples, 0.01%)</title><rect x="637.3" y="1381" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="640.33" y="1391.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (409,613,193 samples, 0.07%)</title><rect x="67.2" y="1541" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.21" y="1551.5" ></text>
</g>
<g >
<title>handle_mm_fault (48,272,421 samples, 0.01%)</title><rect x="13.2" y="1381" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="16.18" y="1391.5" ></text>
</g>
<g >
<title>ovl_write_iter (294,060,799 samples, 0.05%)</title><rect x="46.9" y="1381" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="49.86" y="1391.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (51,192,989 samples, 0.01%)</title><rect x="1105.4" y="1445" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1108.43" y="1455.5" ></text>
</g>
<g >
<title>queue_work_on (542,715,636 samples, 0.10%)</title><rect x="1180.3" y="1429" width="1.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1183.31" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="949" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="959.5" ></text>
</g>
<g >
<title>[grep] (111,909,447 samples, 0.02%)</title><rect x="13.6" y="1525" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="16.60" y="1535.5" ></text>
</g>
<g >
<title>tick_nohz_restart (68,018,920 samples, 0.01%)</title><rect x="1188.7" y="1525" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1191.67" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (180,128,555 samples, 0.03%)</title><rect x="17.9" y="1477" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="20.89" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (184,730,929 samples, 0.03%)</title><rect x="35.2" y="165" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="175.5" ></text>
</g>
<g >
<title>v8::internal::ScavengeJob::Task::RunInternal (103,506,658 samples, 0.02%)</title><rect x="37.6" y="1509" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="40.59" y="1519.5" ></text>
</g>
<g >
<title>do_group_exit (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1557" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="16.49" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1509" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="1519.5" ></text>
</g>
<g >
<title>__do_softirq (100,834,371 samples, 0.02%)</title><rect x="1182.0" y="1429" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1184.96" y="1439.5" ></text>
</g>
<g >
<title>asm_sysvec_irq_work (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1189" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="15.40" y="1199.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (51,200,664 samples, 0.01%)</title><rect x="52.3" y="1541" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="55.26" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="805" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="815.5" ></text>
</g>
<g >
<title>ret_from_fork (51,098,332 samples, 0.01%)</title><rect x="1165.1" y="1605" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1168.06" y="1615.5" ></text>
</g>
<g >
<title>wake_up_process (542,715,636 samples, 0.10%)</title><rect x="1180.3" y="1397" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1183.31" y="1407.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (54,101,340 samples, 0.01%)</title><rect x="18.2" y="1429" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="21.16" y="1439.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (182,051,305 samples, 0.03%)</title><rect x="38.4" y="1429" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="41.39" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="309" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (183,183,655 samples, 0.03%)</title><rect x="17.4" y="1461" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="20.38" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="213" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (98,648,563 samples, 0.02%)</title><rect x="20.3" y="1477" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="23.29" y="1487.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (307,084,687 samples, 0.06%)</title><rect x="653.7" y="1365" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="656.73" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,536,565,417 samples, 0.28%)</title><rect x="17.2" y="1573" width="3.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.21" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,103,354 samples, 0.26%)</title><rect x="29.7" y="869" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.68" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,564,459,913 samples, 0.28%)</title><rect x="29.6" y="1125" width="3.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.64" y="1135.5" ></text>
</g>
<g >
<title>n_tty_write (542,715,636 samples, 0.10%)</title><rect x="1180.3" y="1477" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1183.31" y="1487.5" ></text>
</g>
<g >
<title>execute_command_internal (187,599,885 samples, 0.03%)</title><rect x="1155.0" y="1461" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1158.02" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="453" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="463.5" ></text>
</g>
<g >
<title>exit_mmap (92,046,719 samples, 0.02%)</title><rect x="1157.5" y="1397" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1160.46" y="1407.5" ></text>
</g>
<g >
<title>[ls] (497,827,591 samples, 0.09%)</title><rect x="17.2" y="1525" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="20.21" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (807,414,037 samples, 0.15%)</title><rect x="29.8" y="645" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.76" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1237" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1247.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::new (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1477" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="359.09" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="501" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="511.5" ></text>
</g>
<g >
<title>unmap_page_range (2,009,926,461 samples, 0.37%)</title><rect x="40.3" y="1349" width="4.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="43.27" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="341" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="517" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="181" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1013" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1023.5" ></text>
</g>
<g >
<title>[bash] (704,011,875 samples, 0.13%)</title><rect x="1155.4" y="1445" width="1.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.42" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (23,613,897,070 samples, 4.29%)</title><rect x="1054.8" y="1429" width="50.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1057.80" y="1439.5" >core:..</text>
</g>
<g >
<title>execute_command_internal (194,098,210 samples, 0.04%)</title><rect x="1155.4" y="1365" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1158.42" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (614,245,317 samples, 0.11%)</title><rect x="18.8" y="1445" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.76" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1509" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1519.5" ></text>
</g>
<g >
<title>v8::internal::Heap::PerformGarbageCollection (103,506,658 samples, 0.02%)</title><rect x="37.6" y="1477" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="40.59" y="1487.5" ></text>
</g>
<g >
<title>statx (180,128,555 samples, 0.03%)</title><rect x="17.9" y="1509" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="20.89" y="1519.5" ></text>
</g>
<g >
<title>expand_string_assignment (107,428,264 samples, 0.02%)</title><rect x="1155.6" y="1269" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1158.61" y="1279.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (4,651,460,045 samples, 0.85%)</title><rect x="437.6" y="1429" width="10.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="440.63" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (680,427,181 samples, 0.12%)</title><rect x="1158.0" y="1493" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.02" y="1503.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::DefineProperties (101,484,883 samples, 0.02%)</title><rect x="23.5" y="1557" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="26.48" y="1567.5" ></text>
</g>
<g >
<title>schedule_idle (73,848,131 samples, 0.01%)</title><rect x="1166.4" y="1541" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1169.42" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="917" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="927.5" ></text>
</g>
<g >
<title>vfs_read (80,759,400 samples, 0.01%)</title><rect x="39.6" y="1445" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="42.55" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (133,714,101 samples, 0.02%)</title><rect x="16.9" y="1605" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="19.92" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="597" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (4,295,511,170 samples, 0.78%)</title><rect x="819.3" y="1445" width="9.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="822.30" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,610,792,907 samples, 0.29%)</title><rect x="29.6" y="1157" width="3.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.63" y="1167.5" ></text>
</g>
<g >
<title>seq_read (80,759,400 samples, 0.01%)</title><rect x="39.6" y="1413" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="42.55" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1221" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1231.5" ></text>
</g>
<g >
<title>execute_command (409,580,032 samples, 0.07%)</title><rect x="1155.4" y="1429" width="0.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1158.42" y="1439.5" ></text>
</g>
<g >
<title>[bash] (294,431,843 samples, 0.05%)</title><rect x="1156.3" y="1413" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1159.30" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,383,852,468 samples, 0.25%)</title><rect x="29.7" y="821" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.69" y="831.5" ></text>
</g>
<g >
<title>[libc.so.6] (59,458,307 samples, 0.01%)</title><rect x="16.8" y="1589" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.80" y="1599.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (95,493,581 samples, 0.02%)</title><rect x="1166.2" y="1525" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1169.20" y="1535.5" ></text>
</g>
<g >
<title>dispatcher@plt (102,210,866 samples, 0.02%)</title><rect x="1110.8" y="1525" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1113.80" y="1535.5" ></text>
</g>
<g >
<title>[anon] (169,305,459 samples, 0.03%)</title><rect x="23.0" y="1605" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="26.00" y="1615.5" ></text>
</g>
<g >
<title>perf-exec (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1621" width="1.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="47.59" y="1631.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt; (4,349,038,788 samples, 0.79%)</title><rect x="840.2" y="1493" width="9.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="843.24" y="1503.5" ></text>
</g>
<g >
<title>cpuidle_enter (396,557,014 samples, 0.07%)</title><rect x="1165.2" y="1525" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1168.19" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (48,427,139 samples, 0.01%)</title><rect x="1164.9" y="1589" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1167.95" y="1599.5" ></text>
</g>
<g >
<title>native_write_cr4 (66,456,621 samples, 0.01%)</title><rect x="1167.1" y="1397" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1170.06" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (242,219,503 samples, 0.04%)</title><rect x="18.9" y="1429" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.93" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1317" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,523,006,572 samples, 0.28%)</title><rect x="29.7" y="1029" width="3.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.66" y="1039.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (51,200,664 samples, 0.01%)</title><rect x="52.3" y="1413" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="55.26" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="965" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1221" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="1231.5" ></text>
</g>
<g >
<title>[expr] (660,450,854 samples, 0.12%)</title><rect x="10.9" y="1557" width="1.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.90" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (292,355,463 samples, 0.05%)</title><rect x="66.1" y="1525" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="69.14" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1,790,531,051 samples, 0.33%)</title><rect x="1107.0" y="1461" width="3.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1109.96" y="1471.5" ></text>
</g>
<g >
<title>setlocale (728,588,354 samples, 0.13%)</title><rect x="18.7" y="1541" width="1.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="21.73" y="1551.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (35,878,850,099 samples, 6.52%)</title><rect x="654.4" y="1365" width="76.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="657.39" y="1375.5" >ringbuf:..</text>
</g>
<g >
<title>Glob::isIgnored (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1589" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="31.27" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,610,792,907 samples, 0.29%)</title><rect x="29.6" y="1173" width="3.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.63" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (855,529,634 samples, 0.16%)</title><rect x="29.7" y="757" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.70" y="767.5" ></text>
</g>
<g >
<title>set_default_locale (218,436,207 samples, 0.04%)</title><rect x="1157.0" y="1541" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1159.96" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (143,362,007 samples, 0.03%)</title><rect x="37.2" y="1557" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="40.17" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (258,057,134 samples, 0.05%)</title><rect x="33.6" y="1525" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="36.56" y="1535.5" ></text>
</g>
<g >
<title>proc_reg_read (80,759,400 samples, 0.01%)</title><rect x="39.6" y="1429" width="0.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="42.55" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1269" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1279.5" ></text>
</g>
<g >
<title>update_process_times (50,090,769 samples, 0.01%)</title><rect x="811.9" y="1365" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="814.85" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="901" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (853,573,086 samples, 0.16%)</title><rect x="29.7" y="725" width="1.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.71" y="735.5" ></text>
</g>
<g >
<title>load_elf_binary (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1477" width="1.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="18.06" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1173" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1013" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="933" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="943.5" ></text>
</g>
<g >
<title>[ls] (140,263,267 samples, 0.03%)</title><rect x="20.6" y="1557" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="23.57" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="933" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="943.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (59,689,746 samples, 0.01%)</title><rect x="27.6" y="1333" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="30.60" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,453,608,631 samples, 0.26%)</title><rect x="29.7" y="917" width="3.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.67" y="927.5" ></text>
</g>
<g >
<title>__mmput (98,721,355 samples, 0.02%)</title><rect x="1157.4" y="1413" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1160.45" y="1423.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (102,215,678 samples, 0.02%)</title><rect x="805.4" y="1493" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="808.39" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (140,632,003 samples, 0.03%)</title><rect x="29.8" y="389" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.81" y="399.5" ></text>
</g>
<g >
<title>__schedule (50,923,470 samples, 0.01%)</title><rect x="1189.8" y="1477" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1192.81" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,453,608,631 samples, 0.26%)</title><rect x="29.7" y="949" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.67" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="405" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="415.5" ></text>
</g>
<g >
<title>[git] (180,375,563 samples, 0.03%)</title><rect x="13.0" y="1509" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.99" y="1519.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (5,654,378,405 samples, 1.03%)</title><rect x="849.6" y="1429" width="12.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="852.56" y="1439.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (255,590,777 samples, 0.05%)</title><rect x="1151.3" y="1557" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1154.34" y="1567.5" ></text>
</g>
<g >
<title>menu_select (391,964,806 samples, 0.07%)</title><rect x="1187.2" y="1509" width="0.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1190.19" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (358,293,764 samples, 0.07%)</title><rect x="38.2" y="1493" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="41.18" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (180,128,555 samples, 0.03%)</title><rect x="17.9" y="1493" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="20.89" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="613" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1157" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1189" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="1199.5" ></text>
</g>
<g >
<title>execute_command (194,098,210 samples, 0.04%)</title><rect x="1155.4" y="1381" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1158.42" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1525" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1535.5" ></text>
</g>
<g >
<title>CompareAndSwap (21,588,348,954 samples, 3.92%)</title><rect x="288.9" y="1557" width="46.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="291.88" y="1567.5" >Comp..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1269" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="1279.5" ></text>
</g>
<g >
<title>vm_area_dup (77,963,131 samples, 0.01%)</title><rect x="27.6" y="1349" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="30.56" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (683,672,731 samples, 0.12%)</title><rect x="18.7" y="1477" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.73" y="1487.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (102,730,028,334 samples, 18.66%)</title><rect x="512.2" y="1429" width="220.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="515.17" y="1439.5" >rustposix::interface::pipe::E..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (561,231,450 samples, 0.10%)</title><rect x="1029.3" y="1429" width="1.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1032.28" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (308,033,990 samples, 0.06%)</title><rect x="1166.7" y="1461" width="0.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1169.65" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1157" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="1167.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,183,225,620 samples, 0.40%)</title><rect x="39.9" y="1605" width="4.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="42.90" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (107,685,752 samples, 0.02%)</title><rect x="36.6" y="53" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="39.63" y="63.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,398,525,858 samples, 0.44%)</title><rect x="800.1" y="1493" width="5.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="803.14" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="741" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="751.5" ></text>
</g>
<g >
<title>worker (113,250,467 samples, 0.02%)</title><rect x="39.5" y="1573" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="42.51" y="1583.5" ></text>
</g>
<g >
<title>irq_work_run_list (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1125" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="15.40" y="1135.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (22,391,725,442 samples, 4.07%)</title><rect x="589.4" y="1413" width="48.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="592.44" y="1423.5" >ring..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1333" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1343.5" ></text>
</g>
<g >
<title>__mmput (2,182,376,060 samples, 0.40%)</title><rect x="39.9" y="1413" width="4.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="42.91" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (112,779,897 samples, 0.02%)</title><rect x="49.1" y="1589" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="52.13" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="677" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="405" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1365" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (82,156,771 samples, 0.01%)</title><rect x="1164.9" y="1605" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1167.88" y="1615.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (44,091,476,460 samples, 8.01%)</title><rect x="637.4" y="1381" width="94.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="640.44" y="1391.5" >ringbuf::co..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1365" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1375.5" ></text>
</g>
<g >
<title>malloc (214,090,978 samples, 0.04%)</title><rect x="1155.8" y="1285" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1158.84" y="1295.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (2,791,323,814 samples, 0.51%)</title><rect x="28.9" y="1589" width="5.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="31.86" y="1599.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (409,122,623 samples, 0.07%)</title><rect x="640.4" y="1365" width="0.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="643.40" y="1375.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (409,613,193 samples, 0.07%)</title><rect x="67.2" y="1525" width="0.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="70.21" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (697,129,391 samples, 0.13%)</title><rect x="29.8" y="517" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.80" y="527.5" ></text>
</g>
<g >
<title>remove_entity_load_avg (542,715,636 samples, 0.10%)</title><rect x="1180.3" y="1333" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1183.31" y="1343.5" ></text>
</g>
<g >
<title>__schedule (68,493,757 samples, 0.01%)</title><rect x="1166.4" y="1525" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1169.42" y="1535.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (140,022,652 samples, 0.03%)</title><rect x="21.6" y="1413" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="24.56" y="1423.5" ></text>
</g>
<g >
<title>vfs_read (100,200,003 samples, 0.02%)</title><rect x="49.2" y="1541" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="52.16" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1093" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="1103.5" ></text>
</g>
<g >
<title>[libc.so.6] (189,968,462 samples, 0.03%)</title><rect x="1157.0" y="1445" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.02" y="1455.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1157" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="15.40" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1077" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="1087.5" ></text>
</g>
<g >
<title>NaClSysSend (204,977,689 samples, 0.04%)</title><rect x="733.4" y="1573" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="736.39" y="1583.5" ></text>
</g>
<g >
<title>[anon] (4,341,784,694 samples, 0.79%)</title><rect x="56.8" y="1605" width="9.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="59.84" y="1615.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (255,590,777 samples, 0.05%)</title><rect x="1151.3" y="1573" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1154.34" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="197" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (288,784,692 samples, 0.05%)</title><rect x="11.1" y="1429" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.11" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1397" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="1407.5" ></text>
</g>
<g >
<title>search_binary_handler (99,209,290 samples, 0.02%)</title><rect x="1157.4" y="1493" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1160.45" y="1503.5" ></text>
</g>
<g >
<title>sshd (3,710,883,626 samples, 0.67%)</title><rect x="1159.6" y="1621" width="7.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1162.59" y="1631.5" ></text>
</g>
<g >
<title>execute_command_internal (107,608,249 samples, 0.02%)</title><rect x="1155.6" y="1333" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1158.61" y="1343.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (557,425,535 samples, 0.10%)</title><rect x="38.0" y="1573" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="40.98" y="1583.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (58,975,547,705 samples, 10.71%)</title><rect x="886.2" y="1461" width="126.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="889.21" y="1471.5" >&lt;lock_api::mute..</text>
</g>
<g >
<title>_start (1,121,645,983 samples, 0.20%)</title><rect x="1155.0" y="1605" width="2.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1158.02" y="1615.5" ></text>
</g>
<g >
<title>unmap_vmas (140,022,652 samples, 0.03%)</title><rect x="21.6" y="1461" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="24.56" y="1471.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (3,679,797,190 samples, 0.67%)</title><rect x="581.6" y="1381" width="7.8" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="584.55" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80,759,400 samples, 0.01%)</title><rect x="39.6" y="1509" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="42.55" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,483,672,471 samples, 0.27%)</title><rect x="29.7" y="1013" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.66" y="1023.5" ></text>
</g>
<g >
<title>put_files_struct (263,935,172 samples, 0.05%)</title><rect x="21.0" y="1509" width="0.5" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="23.97" y="1519.5" ></text>
</g>
<g >
<title>exit_mm (148,566,893 samples, 0.03%)</title><rect x="21.5" y="1525" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="24.54" y="1535.5" ></text>
</g>
<g >
<title>copy_p4d_range (1,493,125,050 samples, 0.27%)</title><rect x="24.2" y="1333" width="3.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="27.18" y="1343.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1,433,063,338 samples, 0.26%)</title><rect x="365.8" y="1541" width="3.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="368.84" y="1551.5" ></text>
</g>
<g >
<title>__libc_start_main (186,097,893 samples, 0.03%)</title><rect x="13.6" y="1589" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="16.60" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="789" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="799.5" ></text>
</g>
<g >
<title>record__write (82,020,923 samples, 0.01%)</title><rect x="47.6" y="1541" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="50.62" y="1551.5" ></text>
</g>
<g >
<title>__libc_fork (1,757,396,844 samples, 0.32%)</title><rect x="24.0" y="1509" width="3.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="26.98" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="261" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="271.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (4,349,038,788 samples, 0.79%)</title><rect x="840.2" y="1461" width="9.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="843.24" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1285" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.17" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1525" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1535.5" ></text>
</g>
<g >
<title>[expr] (660,450,854 samples, 0.12%)</title><rect x="10.9" y="1605" width="1.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.90" y="1615.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (50,760,754 samples, 0.01%)</title><rect x="805.3" y="1477" width="0.1" height="15.0" fill="rgb(220,71,16)" rx="2" ry="2" />
<text  x="808.28" y="1487.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (3,674,529,260 samples, 0.67%)</title><rect x="348.2" y="1573" width="7.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="351.21" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (89,769,504 samples, 0.02%)</title><rect x="35.2" y="69" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="38.21" y="79.5" ></text>
</g>
<g >
<title>__tsearch (227,067,949 samples, 0.04%)</title><rect x="19.5" y="1429" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="22.54" y="1439.5" ></text>
</g>
<g >
<title>cpu_startup_entry (395,643,565 samples, 0.07%)</title><rect x="1166.6" y="1525" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1169.65" y="1535.5" ></text>
</g>
<g >
<title>process_one_work (77,506,911 samples, 0.01%)</title><rect x="1181.5" y="1557" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1184.49" y="1567.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (460,243,998 samples, 0.08%)</title><rect x="43.5" y="1285" width="1.0" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="46.54" y="1295.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (292,355,463 samples, 0.05%)</title><rect x="66.1" y="1509" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="69.14" y="1519.5" ></text>
</g>
<g >
<title>[git] (180,375,563 samples, 0.03%)</title><rect x="13.0" y="1557" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.99" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_select (111,049,851 samples, 0.02%)</title><rect x="1189.4" y="1477" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1192.43" y="1487.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (90,395,634 samples, 0.02%)</title><rect x="34.4" y="1525" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="37.42" y="1535.5" ></text>
</g>
<g >
<title>zap_pte_range (1,922,735,193 samples, 0.35%)</title><rect x="40.5" y="1317" width="4.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="43.46" y="1327.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (51,288,752 samples, 0.01%)</title><rect x="267.0" y="1541" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="269.98" y="1551.5" ></text>
</g>
<g >
<title>do_idle (392,762,063 samples, 0.07%)</title><rect x="1166.6" y="1509" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1169.65" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (68,749,655 samples, 0.01%)</title><rect x="29.2" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="32.25" y="1471.5" ></text>
</g>
<g >
<title>v8::internal::Heap::CollectGarbage (103,506,658 samples, 0.02%)</title><rect x="37.6" y="1493" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="40.59" y="1503.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (68,387,477 samples, 0.01%)</title><rect x="47.3" y="1221" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="50.32" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (643,635,845 samples, 0.12%)</title><rect x="1180.1" y="1605" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1183.09" y="1615.5" ></text>
</g>
<g >
<title>unmap_single_vma (2,012,986,049 samples, 0.37%)</title><rect x="40.3" y="1365" width="4.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="43.27" y="1375.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1525" width="1.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="18.06" y="1535.5" ></text>
</g>
<g >
<title>__sched_yield (51,054,570 samples, 0.01%)</title><rect x="732.3" y="1397" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="735.30" y="1407.5" ></text>
</g>
<g >
<title>ttwu_do_activate (93,442,365 samples, 0.02%)</title><rect x="1188.2" y="1493" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1191.19" y="1503.5" ></text>
</g>
<g >
<title>execute_command_internal (215,481,822 samples, 0.04%)</title><rect x="1155.8" y="1349" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1158.84" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1381" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1391.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (48,520,854 samples, 0.01%)</title><rect x="24.4" y="1253" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="27.43" y="1263.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (51,227,679 samples, 0.01%)</title><rect x="812.0" y="1429" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="814.96" y="1439.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (664,727,161 samples, 0.12%)</title><rect x="1147.1" y="1589" width="1.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1150.07" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_write (556,739,230 samples, 0.10%)</title><rect x="1180.3" y="1573" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1183.28" y="1583.5" ></text>
</g>
<g >
<title>perf_event_mmap_event (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1349" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="15.40" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (258,868,209 samples, 0.05%)</title><rect x="28.3" y="405" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="31.27" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="1397" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="1407.5" ></text>
</g>
<g >
<title>__poll (273,678,698 samples, 0.05%)</title><rect x="46.0" y="1557" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="48.99" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="533" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1141" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="1151.5" ></text>
</g>
<g >
<title>schedule_idle (50,923,470 samples, 0.01%)</title><rect x="1189.8" y="1493" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1192.81" y="1503.5" ></text>
</g>
<g >
<title>_dl_catch_exception (68,513,860 samples, 0.01%)</title><rect x="17.1" y="1525" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="20.06" y="1535.5" ></text>
</g>
<g >
<title>kick_ilb (51,200,664 samples, 0.01%)</title><rect x="52.3" y="1397" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="55.26" y="1407.5" ></text>
</g>
<g >
<title>NaClSysOpen (560,645,148 samples, 0.10%)</title><rect x="356.1" y="1557" width="1.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="359.09" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (69,816,570 samples, 0.01%)</title><rect x="13.8" y="1445" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.84" y="1455.5" ></text>
</g>
<g >
<title>__tsearch (120,659,164 samples, 0.02%)</title><rect x="1157.2" y="1413" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1160.17" y="1423.5" ></text>
</g>
<g >
<title>[grep] (111,909,447 samples, 0.02%)</title><rect x="13.6" y="1509" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="16.60" y="1519.5" ></text>
</g>
<g >
<title>parse_and_execute (898,792,282 samples, 0.16%)</title><rect x="1155.0" y="1525" width="1.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1158.02" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="853" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (593,453,864 samples, 0.11%)</title><rect x="35.6" y="293" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="38.64" y="303.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (50,146,156 samples, 0.01%)</title><rect x="12.6" y="1461" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.64" y="1471.5" ></text>
</g>
<g >
<title>[git] (180,375,563 samples, 0.03%)</title><rect x="13.0" y="1493" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.99" y="1503.5" ></text>
</g>
<g >
<title>NaClSysSendDecoder (176,402,305,170 samples, 32.05%)</title><rect x="733.8" y="1573" width="378.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="736.83" y="1583.5" >NaClSysSendDecoder</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,453,856 samples, 0.01%)</title><rect x="34.8" y="1269" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.85" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (254,690,569 samples, 0.05%)</title><rect x="28.3" y="101" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="31.28" y="111.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (3,231,362,220 samples, 0.59%)</title><rect x="499.5" y="1397" width="7.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="502.55" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (754,006,463 samples, 0.14%)</title><rect x="29.8" y="597" width="1.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.77" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (705,529,377 samples, 0.13%)</title><rect x="29.8" y="565" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.78" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1253" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1263.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (71,739,882 samples, 0.01%)</title><rect x="1154.8" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1157.77" y="1567.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (51,227,679 samples, 0.01%)</title><rect x="812.0" y="1397" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="814.96" y="1407.5" ></text>
</g>
<g >
<title>refill_obj_stock (263,935,172 samples, 0.05%)</title><rect x="21.0" y="1461" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="23.97" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,747,485,110 samples, 0.32%)</title><rect x="24.0" y="1461" width="3.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="26.98" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (66,424,453 samples, 0.01%)</title><rect x="1159.2" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.17" y="1423.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (292,355,463 samples, 0.05%)</title><rect x="66.1" y="1573" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="69.14" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_execve (99,209,290 samples, 0.02%)</title><rect x="1157.4" y="1573" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1160.45" y="1583.5" ></text>
</g>
<g >
<title>proc_fill_cache (108,097,262 samples, 0.02%)</title><rect x="1155.2" y="1253" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1158.19" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="549" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="1221" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::consumer::Consumer&lt;u8&gt;&gt;&gt; (30,672,863,535 samples, 5.57%)</title><rect x="515.1" y="1413" width="65.8" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="518.13" y="1423.5" >core::p..</text>
</g>
<g >
<title>record__mmap_read_all (568,061,595 samples, 0.10%)</title><rect x="46.6" y="1573" width="1.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="49.57" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (168,103,093 samples, 0.03%)</title><rect x="18.3" y="1477" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="21.28" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="1045" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="1055.5" ></text>
</g>
<g >
<title>[libc.so.6] (728,588,354 samples, 0.13%)</title><rect x="18.7" y="1525" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.73" y="1535.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (266,769,215 samples, 0.05%)</title><rect x="46.9" y="1333" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="49.91" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="885" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="895.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (99,209,290 samples, 0.02%)</title><rect x="1157.4" y="1525" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1160.45" y="1535.5" ></text>
</g>
<g >
<title>do_idle (683,737,744 samples, 0.12%)</title><rect x="1165.2" y="1557" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1168.17" y="1567.5" ></text>
</g>
<g >
<title>swapper (10,473,680,197 samples, 1.90%)</title><rect x="1167.5" y="1621" width="22.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1170.55" y="1631.5" >s..</text>
</g>
<g >
<title>copy_process (1,747,485,110 samples, 0.32%)</title><rect x="24.0" y="1397" width="3.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="26.98" y="1407.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (109,861,525 samples, 0.02%)</title><rect x="1188.2" y="1525" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1191.17" y="1535.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (68,387,477 samples, 0.01%)</title><rect x="47.3" y="1237" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="50.32" y="1247.5" ></text>
</g>
<g >
<title>__wake_up (93,925,718 samples, 0.02%)</title><rect x="12.4" y="1061" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="15.40" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="869" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="879.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (107,261,301 samples, 0.02%)</title><rect x="1182.0" y="1445" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1184.96" y="1455.5" ></text>
</g>
<g >
<title>execute_command_internal (409,580,032 samples, 0.07%)</title><rect x="1155.4" y="1413" width="0.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1158.42" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (123,388,375,841 samples, 22.42%)</title><rect x="467.9" y="1461" width="264.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="470.88" y="1471.5" >rustposix::safeposix::syscalls::net..</text>
</g>
<g >
<title>execute_command_internal (71,471,315 samples, 0.01%)</title><rect x="1155.7" y="1205" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1158.67" y="1215.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (49,053,788 samples, 0.01%)</title><rect x="23.9" y="1589" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="26.87" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (183,183,655 samples, 0.03%)</title><rect x="17.4" y="1477" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="20.38" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (112,286,827 samples, 0.02%)</title><rect x="1155.2" y="1333" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1158.18" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1045" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1055.5" ></text>
</g>
<g >
<title>do_syscall_64 (47,201,028 samples, 0.01%)</title><rect x="13.5" y="1589" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="16.49" y="1599.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (127,140,729 samples, 0.02%)</title><rect x="1157.7" y="1541" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1160.75" y="1551.5" ></text>
</g>
<g >
<title>[bash] (107,608,249 samples, 0.02%)</title><rect x="1155.6" y="1285" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.61" y="1295.5" ></text>
</g>
<g >
<title>tick_sched_handle (50,090,769 samples, 0.01%)</title><rect x="811.9" y="1381" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="814.85" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,432,103,354 samples, 0.26%)</title><rect x="29.7" y="885" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.68" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (52,627,717 samples, 0.01%)</title><rect x="30.0" y="373" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="33.00" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (4,753,329,831 samples, 0.86%)</title><rect x="419.3" y="1461" width="10.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="422.32" y="1471.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (103,912,131 samples, 0.02%)</title><rect x="1188.2" y="1509" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1191.18" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="821" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="831.5" ></text>
</g>
<g >
<title>[git] (87,256,652 samples, 0.02%)</title><rect x="13.0" y="1429" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.99" y="1439.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4,448,968,100 samples, 0.81%)</title><rect x="447.6" y="1445" width="9.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="450.60" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,940,395 samples, 0.01%)</title><rect x="36.9" y="837" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="39.91" y="847.5" ></text>
</g>
<g >
<title>execute_command_internal (704,011,875 samples, 0.13%)</title><rect x="1155.4" y="1461" width="1.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1158.42" y="1471.5" ></text>
</g>
<g >
<title>schedule (51,406,374 samples, 0.01%)</title><rect x="37.4" y="1445" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.35" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (4,973,449,542 samples, 0.90%)</title><rect x="789.5" y="1477" width="10.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="792.47" y="1487.5" ></text>
</g>
<g >
<title>[bash] (47,524,082 samples, 0.01%)</title><rect x="1155.4" y="1301" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.42" y="1311.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (50,090,769 samples, 0.01%)</title><rect x="811.9" y="1317" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="814.85" y="1327.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (347,716,760 samples, 0.06%)</title><rect x="1166.6" y="1493" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1169.65" y="1503.5" ></text>
</g>
<g >
<title>bprm_execve (585,927,681 samples, 0.11%)</title><rect x="15.1" y="1541" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="18.06" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="837" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="847.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (50,090,769 samples, 0.01%)</title><rect x="811.9" y="1285" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="814.85" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="645" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (759,008,443 samples, 0.14%)</title><rect x="29.8" y="629" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.76" y="639.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (214,832,135 samples, 0.04%)</title><rect x="12.3" y="1573" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.32" y="1583.5" ></text>
</g>
<g >
<title>mas_store (57,270,922 samples, 0.01%)</title><rect x="27.4" y="1349" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="30.44" y="1359.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (29,748,314,303 samples, 5.40%)</title><rect x="1041.7" y="1445" width="63.7" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1044.65" y="1455.5" >ringbuf..</text>
</g>
<g >
<title>mmput (629,850,503 samples, 0.11%)</title><rect x="44.6" y="1429" width="1.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="47.59" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,024,403 samples, 0.03%)</title><rect x="35.2" y="1077" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.17" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="549" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="559.5" ></text>
</g>
<g >
<title>__schedule (51,054,570 samples, 0.01%)</title><rect x="732.3" y="1301" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="735.30" y="1311.5" ></text>
</g>
<g >
<title>exit_files (263,935,172 samples, 0.05%)</title><rect x="21.0" y="1525" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="23.97" y="1535.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (3,384,796,467 samples, 0.61%)</title><rect x="499.2" y="1429" width="7.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="502.22" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (258,868,209 samples, 0.05%)</title><rect x="28.3" y="757" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="31.27" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (112,286,827 samples, 0.02%)</title><rect x="1155.2" y="1349" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1158.18" y="1359.5" ></text>
</g>
<g >
<title>enqueue_task (89,189,382 samples, 0.02%)</title><rect x="1188.2" y="1477" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1191.19" y="1487.5" ></text>
</g>
<g >
<title>[bash] (58,279,242 samples, 0.01%)</title><rect x="1156.4" y="1285" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1159.37" y="1295.5" ></text>
</g>
<g >
<title>irq_exit_rcu (107,261,301 samples, 0.02%)</title><rect x="1182.0" y="1461" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1184.96" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (79,940,395 samples, 0.01%)</title><rect x="36.9" y="757" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="39.91" y="767.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (460,314,654 samples, 0.08%)</title><rect x="1141.4" y="1589" width="1.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1144.37" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (76,954,498 samples, 0.01%)</title><rect x="34.7" y="1541" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="37.67" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (140,632,003 samples, 0.03%)</title><rect x="29.8" y="405" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.81" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (461,193,727 samples, 0.08%)</title><rect x="1143.3" y="1589" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1146.34" y="1599.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_add (293,866,336 samples, 0.05%)</title><rect x="641.3" y="1365" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="644.28" y="1375.5" ></text>
</g>
<g >
<title>[bash] (107,428,264 samples, 0.02%)</title><rect x="1155.6" y="1253" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.61" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (593,453,864 samples, 0.11%)</title><rect x="35.6" y="389" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="38.64" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,453,856 samples, 0.01%)</title><rect x="34.8" y="277" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.85" y="287.5" ></text>
</g>
<g >
<title>NaClMaskRestore (1,428,349,489 samples, 0.26%)</title><rect x="353.0" y="1557" width="3.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="356.02" y="1567.5" ></text>
</g>
<g >
<title>NaClSysSend (169,810,633,793 samples, 30.85%)</title><rect x="747.0" y="1557" width="364.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="749.98" y="1567.5" >NaClSysSend</text>
</g>
<g >
<title>[libc.so.6] (120,659,164 samples, 0.02%)</title><rect x="1157.2" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.17" y="1407.5" ></text>
</g>
<g >
<title>release_pages (394,731,861 samples, 0.07%)</title><rect x="43.7" y="1253" width="0.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="46.66" y="1263.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (44,245,283,393 samples, 8.04%)</title><rect x="637.4" y="1413" width="94.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="640.44" y="1423.5" >ringbuf::co..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,765,301,098 samples, 0.32%)</title><rect x="29.6" y="1349" width="3.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.58" y="1359.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,658,727,529 samples, 0.48%)</title><rect x="461.7" y="1445" width="5.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="464.75" y="1455.5" ></text>
</g>
<g >
<title>[bash] (294,431,843 samples, 0.05%)</title><rect x="1156.3" y="1397" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1159.30" y="1407.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_offset (293,866,336 samples, 0.05%)</title><rect x="641.3" y="1349" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="644.28" y="1359.5" ></text>
</g>
</g>
</svg>
