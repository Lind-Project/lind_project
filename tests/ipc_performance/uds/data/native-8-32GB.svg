<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1670.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1653" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1653" > </text>
<g id="frames">
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (738,323,899 samples, 0.07%)</title><rect x="27.5" y="837" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.54" y="847.5" ></text>
</g>
<g >
<title>ls (4,190,495,864 samples, 0.40%)</title><rect x="14.6" y="1605" width="4.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="17.61" y="1615.5" ></text>
</g>
<g >
<title>memset (204,861,758 samples, 0.02%)</title><rect x="308.2" y="1349" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="311.24" y="1359.5" ></text>
</g>
<g >
<title>path_openat (103,389,516 samples, 0.01%)</title><rect x="46.3" y="1253" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="49.31" y="1263.5" ></text>
</g>
<g >
<title>[bash] (92,202,909 samples, 0.01%)</title><rect x="47.2" y="1173" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="50.23" y="1183.5" ></text>
</g>
<g >
<title>do_readlinkat (222,618,586 samples, 0.02%)</title><rect x="16.8" y="1445" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="19.80" y="1455.5" ></text>
</g>
<g >
<title>ksys_read (178,185,572 samples, 0.02%)</title><rect x="30.4" y="1493" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="33.45" y="1503.5" ></text>
</g>
<g >
<title>__schedule (188,463,085 samples, 0.02%)</title><rect x="33.0" y="1365" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="36.02" y="1375.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (89,160,888 samples, 0.01%)</title><rect x="62.4" y="1429" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="65.44" y="1439.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (665,600,060 samples, 0.06%)</title><rect x="495.0" y="1285" width="0.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="498.01" y="1295.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (229,085,135 samples, 0.02%)</title><rect x="33.0" y="1397" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="35.97" y="1407.5" ></text>
</g>
<g >
<title>sock_def_readable (7,110,255,065 samples, 0.68%)</title><rect x="320.6" y="1397" width="8.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="323.62" y="1407.5" ></text>
</g>
<g >
<title>__check_object_size (772,736,566 samples, 0.07%)</title><rect x="567.7" y="1333" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="570.66" y="1343.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (663,998,408 samples, 0.06%)</title><rect x="130.5" y="1397" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="133.46" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (134,798,688 samples, 0.01%)</title><rect x="15.5" y="1173" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="18.47" y="1183.5" ></text>
</g>
<g >
<title>enqueue_task (170,974,505 samples, 0.02%)</title><rect x="65.0" y="1461" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="68.04" y="1471.5" ></text>
</g>
<g >
<title>__pollwait (102,768,639 samples, 0.01%)</title><rect x="39.6" y="1429" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="42.62" y="1439.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait (128,967,639 samples, 0.01%)</title><rect x="33.5" y="1525" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="36.47" y="1535.5" ></text>
</g>
<g >
<title>vfs_fstatat (490,128,278 samples, 0.05%)</title><rect x="29.4" y="1445" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="32.41" y="1455.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (5,369,696,123 samples, 0.52%)</title><rect x="418.5" y="1365" width="6.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="421.55" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,361,986,105 samples, 0.13%)</title><rect x="27.5" y="1301" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.48" y="1311.5" ></text>
</g>
<g >
<title>node::LoadSnapshotDataAndRun (104,568,840 samples, 0.01%)</title><rect x="34.3" y="1525" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="37.35" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (326,297,087 samples, 0.03%)</title><rect x="12.4" y="1477" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.40" y="1487.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (715,699,975 samples, 0.07%)</title><rect x="466.9" y="1301" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="469.86" y="1311.5" ></text>
</g>
<g >
<title>__fdget (2,911,891,128 samples, 0.28%)</title><rect x="902.0" y="1413" width="3.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="905.04" y="1423.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (304,415,303 samples, 0.03%)</title><rect x="631.0" y="1477" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="634.02" y="1487.5" ></text>
</g>
<g >
<title>execute_command_internal (745,069,168 samples, 0.07%)</title><rect x="46.8" y="1445" width="0.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="49.75" y="1455.5" ></text>
</g>
<g >
<title>kfree (358,696,947 samples, 0.03%)</title><rect x="1026.9" y="1349" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1029.87" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,279,634,806 samples, 0.12%)</title><rect x="49.0" y="1557" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.03" y="1567.5" ></text>
</g>
<g >
<title>unix_stream_read_actor (307,436,885 samples, 0.03%)</title><rect x="971.5" y="1397" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="974.50" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_enter (312,023,092 samples, 0.03%)</title><rect x="44.4" y="1509" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="47.43" y="1519.5" ></text>
</g>
<g >
<title>fsnotify (173,894,588 samples, 0.02%)</title><rect x="40.4" y="1349" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="43.41" y="1359.5" ></text>
</g>
<g >
<title>legitimize_links (211,883,653 samples, 0.02%)</title><rect x="12.1" y="1317" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="15.12" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="965" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="975.5" ></text>
</g>
<g >
<title>_copy_from_iter (3,221,432,755 samples, 0.31%)</title><rect x="168.5" y="1381" width="3.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="171.51" y="1391.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (204,788,489 samples, 0.02%)</title><rect x="270.9" y="1317" width="0.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="273.93" y="1327.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (818,750,483 samples, 0.08%)</title><rect x="178.2" y="1381" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="181.21" y="1391.5" ></text>
</g>
<g >
<title>[ls] (171,062,300 samples, 0.02%)</title><rect x="18.8" y="1573" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.83" y="1583.5" ></text>
</g>
<g >
<title>mutex_unlock (3,014,251,868 samples, 0.29%)</title><rect x="397.5" y="1397" width="3.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="400.49" y="1407.5" ></text>
</g>
<g >
<title>start_kernel (445,917,430 samples, 0.04%)</title><rect x="74.5" y="1557" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="77.49" y="1567.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (153,739,788 samples, 0.01%)</title><rect x="1044.5" y="1301" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1047.47" y="1311.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (358,394,124 samples, 0.03%)</title><rect x="1019.1" y="1301" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1022.14" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (309,435,202 samples, 0.03%)</title><rect x="27.6" y="469" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.59" y="479.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,891,471,739 samples, 0.18%)</title><rect x="62.3" y="1509" width="2.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="65.33" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1189" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1199.5" ></text>
</g>
<g >
<title>start_secondary (2,871,537,923 samples, 0.28%)</title><rect x="71.2" y="1573" width="3.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="74.23" y="1583.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (204,560,742 samples, 0.02%)</title><rect x="804.5" y="1253" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="807.45" y="1263.5" ></text>
</g>
<g >
<title>consume_obj_stock (1,735,625,636 samples, 0.17%)</title><rect x="824.8" y="1285" width="2.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="827.84" y="1295.5" ></text>
</g>
<g >
<title>sleep (2,004,047,275 samples, 0.19%)</title><rect x="48.3" y="1605" width="2.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="51.29" y="1615.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (147,337,962 samples, 0.01%)</title><rect x="44.5" y="1477" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="47.45" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="821" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="831.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (306,194,610 samples, 0.03%)</title><rect x="249.8" y="1285" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="252.84" y="1295.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (103,298,780 samples, 0.01%)</title><rect x="66.5" y="1461" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="69.50" y="1471.5" ></text>
</g>
<g >
<title>ep_poll (145,581,483 samples, 0.01%)</title><rect x="32.2" y="1477" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="35.18" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_lock (204,863,104 samples, 0.02%)</title><rect x="154.0" y="1397" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="156.99" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (672,103,455 samples, 0.06%)</title><rect x="27.5" y="773" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.55" y="783.5" ></text>
</g>
<g >
<title>runc:[1:CHILD] (2,932,582,443 samples, 0.28%)</title><rect x="41.9" y="1605" width="3.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="44.94" y="1615.5" ></text>
</g>
<g >
<title>vfs_statx (211,391,804 samples, 0.02%)</title><rect x="16.4" y="1413" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="19.40" y="1423.5" ></text>
</g>
<g >
<title>sock_sendmsg (204,075,355 samples, 0.02%)</title><rect x="907.1" y="1445" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="910.14" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (432,964,103 samples, 0.04%)</title><rect x="27.6" y="565" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.58" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (152,718,425 samples, 0.01%)</title><rect x="32.2" y="1541" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="35.17" y="1551.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (255,344,847 samples, 0.02%)</title><rect x="905.8" y="1429" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="908.75" y="1439.5" ></text>
</g>
<g >
<title>do_exit (233,413,133 samples, 0.02%)</title><rect x="19.1" y="1525" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="22.11" y="1535.5" ></text>
</g>
<g >
<title>[bash] (1,440,318,057 samples, 0.14%)</title><rect x="46.0" y="1525" width="1.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="48.96" y="1535.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (563,167,722 samples, 0.05%)</title><rect x="1170.5" y="1429" width="0.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1173.48" y="1439.5" ></text>
</g>
<g >
<title>kmalloc_reserve (408,422,704 samples, 0.04%)</title><rect x="877.1" y="1365" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="880.12" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (208,244,803 samples, 0.02%)</title><rect x="15.5" y="1237" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="18.46" y="1247.5" ></text>
</g>
<g >
<title>ext4_do_writepages (111,477,483 samples, 0.01%)</title><rect x="62.0" y="1397" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="65.05" y="1407.5" ></text>
</g>
<g >
<title>skb_release_data (30,739,066,143 samples, 2.96%)</title><rect x="1025.5" y="1365" width="34.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1028.53" y="1375.5" >sk..</text>
</g>
<g >
<title>fdarray__poll (858,722,513 samples, 0.08%)</title><rect x="39.3" y="1557" width="0.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="42.26" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (103,981,231 samples, 0.01%)</title><rect x="10.0" y="1589" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.02" y="1599.5" ></text>
</g>
<g >
<title>_IO_getline (97,302,700 samples, 0.01%)</title><rect x="18.4" y="1445" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="21.37" y="1455.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (213,879,124 samples, 0.02%)</title><rect x="65.0" y="1509" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="68.00" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (93,858,678 samples, 0.01%)</title><rect x="16.2" y="1397" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.24" y="1407.5" ></text>
</g>
<g >
<title>handle_pte_fault (199,264,388 samples, 0.02%)</title><rect x="10.3" y="1493" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.33" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (558,752,096 samples, 0.05%)</title><rect x="27.6" y="677" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.56" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (621,397,203 samples, 0.06%)</title><rect x="27.6" y="709" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.55" y="719.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (1,023,666,885 samples, 0.10%)</title><rect x="286.7" y="1317" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="289.69" y="1327.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (2,912,496,874 samples, 0.28%)</title><rect x="21.6" y="1573" width="3.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="24.64" y="1583.5" ></text>
</g>
<g >
<title>do_futex (96,885,019 samples, 0.01%)</title><rect x="33.5" y="1445" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="36.49" y="1455.5" ></text>
</g>
<g >
<title>__handle_mm_fault (202,868,814 samples, 0.02%)</title><rect x="10.3" y="1509" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.33" y="1519.5" ></text>
</g>
<g >
<title>mod_memcg_state (1,278,631,852 samples, 0.12%)</title><rect x="827.3" y="1269" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="830.29" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (787,861,076 samples, 0.08%)</title><rect x="27.5" y="885" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.54" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1109" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1119.5" ></text>
</g>
<g >
<title>wait_for_unix_gc (306,932,645 samples, 0.03%)</title><rect x="330.8" y="1413" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="333.79" y="1423.5" ></text>
</g>
<g >
<title>[ls] (2,857,784,714 samples, 0.28%)</title><rect x="15.3" y="1541" width="3.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="18.32" y="1551.5" ></text>
</g>
<g >
<title>do_wait (89,561,692 samples, 0.01%)</title><rect x="47.5" y="1125" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="50.49" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="901" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="789" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="799.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (612,268,773 samples, 0.06%)</title><rect x="563.4" y="1365" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="566.42" y="1375.5" ></text>
</g>
<g >
<title>do_user_addr_fault (202,868,814 samples, 0.02%)</title><rect x="10.3" y="1541" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.33" y="1551.5" ></text>
</g>
<g >
<title>refill_obj_stock (6,135,817,787 samples, 0.59%)</title><rect x="1050.9" y="1285" width="7.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1053.92" y="1295.5" ></text>
</g>
<g >
<title>alloc_pages (196,663,463 samples, 0.02%)</title><rect x="22.0" y="1269" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="25.00" y="1279.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (214,589,731 samples, 0.02%)</title><rect x="38.2" y="1285" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="41.22" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (738,323,899 samples, 0.07%)</title><rect x="27.5" y="869" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.54" y="879.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (520,151,920 samples, 0.05%)</title><rect x="65.7" y="1445" width="0.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="68.74" y="1455.5" ></text>
</g>
<g >
<title>net_rx_action (246,488,913 samples, 0.02%)</title><rect x="71.2" y="1397" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="74.24" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1413" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1423.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1,294,663,524 samples, 0.12%)</title><rect x="372.1" y="1429" width="1.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="375.15" y="1439.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (255,630,147 samples, 0.02%)</title><rect x="1056.6" y="1205" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1059.61" y="1215.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (613,720,117 samples, 0.06%)</title><rect x="933.9" y="1477" width="0.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="936.86" y="1487.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (254,921,055 samples, 0.02%)</title><rect x="874.3" y="1349" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="877.33" y="1359.5" ></text>
</g>
<g >
<title>mod_objcg_state (3,066,220,347 samples, 0.30%)</title><rect x="867.2" y="1317" width="3.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="870.25" y="1327.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (511,367,858 samples, 0.05%)</title><rect x="1050.1" y="1269" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1053.11" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (675,695,794 samples, 0.07%)</title><rect x="20.1" y="1573" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.11" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (151,073,870 samples, 0.01%)</title><rect x="48.1" y="1589" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="51.12" y="1599.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (6,958,337,637 samples, 0.67%)</title><rect x="555.5" y="1349" width="7.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="558.52" y="1359.5" ></text>
</g>
<g >
<title>__send (665,535,063 samples, 0.06%)</title><rect x="78.4" y="1573" width="0.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="81.35" y="1583.5" ></text>
</g>
<g >
<title>wait_task_zombie (89,561,692 samples, 0.01%)</title><rect x="47.5" y="1093" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="50.49" y="1103.5" ></text>
</g>
<g >
<title>mod_memcg_state (101,739,460 samples, 0.01%)</title><rect x="467.0" y="1269" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="470.03" y="1279.5" ></text>
</g>
<g >
<title>__check_object_size (9,358,545,064 samples, 0.90%)</title><rect x="718.8" y="1381" width="10.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="721.83" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1285" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1295.5" ></text>
</g>
<g >
<title>_copy_to_iter (4,908,664,684 samples, 0.47%)</title><rect x="1132.1" y="1317" width="5.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1135.13" y="1327.5" ></text>
</g>
<g >
<title>page_counter_cancel (153,803,009 samples, 0.01%)</title><rect x="1057.6" y="1189" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1060.60" y="1199.5" ></text>
</g>
<g >
<title>try_charge_memcg (102,448,310 samples, 0.01%)</title><rect x="270.8" y="1301" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="273.81" y="1311.5" ></text>
</g>
<g >
<title>exc_page_fault (202,868,814 samples, 0.02%)</title><rect x="10.3" y="1557" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.33" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (215,938,567 samples, 0.02%)</title><rect x="15.5" y="1317" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="18.45" y="1327.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectGetOwnPropertyDescriptors (214,513,800 samples, 0.02%)</title><rect x="21.4" y="1557" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="24.36" y="1567.5" ></text>
</g>
<g >
<title>kmalloc_reserve (38,061,042,490 samples, 3.66%)</title><rect x="233.2" y="1349" width="43.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="236.23" y="1359.5" >kmal..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (409,409,216 samples, 0.04%)</title><rect x="495.2" y="1269" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="498.24" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="629" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="639.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1509" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="41.55" y="1519.5" ></text>
</g>
<g >
<title>mod_objcg_state (4,094,757,867 samples, 0.39%)</title><rect x="258.4" y="1285" width="4.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="261.38" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,025,731 samples, 0.02%)</title><rect x="27.6" y="421" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.60" y="431.5" ></text>
</g>
<g >
<title>__check_heap_object (358,340,495 samples, 0.03%)</title><rect x="1122.4" y="1285" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1125.42" y="1295.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (907,669,172 samples, 0.09%)</title><rect x="40.7" y="1301" width="1.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="43.68" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="661" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="671.5" ></text>
</g>
<g >
<title>amd_clear_divider (307,123,654 samples, 0.03%)</title><rect x="338.6" y="1461" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="341.58" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,557,160,624 samples, 0.25%)</title><rect x="75.5" y="1589" width="2.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="78.45" y="1599.5" ></text>
</g>
<g >
<title>unix_stream_read_actor (303,982,969 samples, 0.03%)</title><rect x="401.6" y="1397" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="404.61" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,108,264,018 samples, 0.11%)</title><rect x="27.5" y="1173" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.49" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="885" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="895.5" ></text>
</g>
<g >
<title>operator new (107,145,885 samples, 0.01%)</title><rect x="28.9" y="1237" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="31.89" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="981" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="991.5" ></text>
</g>
<g >
<title>setlocale (1,235,587,991 samples, 0.12%)</title><rect x="49.1" y="1525" width="1.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="52.08" y="1535.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (175,134,879 samples, 0.02%)</title><rect x="41.5" y="1205" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="44.48" y="1215.5" ></text>
</g>
<g >
<title>vfs_write (99,906,190 samples, 0.01%)</title><rect x="41.8" y="1413" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="44.78" y="1423.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (314,402,835 samples, 0.03%)</title><rect x="11.6" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.59" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="293" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="303.5" ></text>
</g>
<g >
<title>unix_passcred_enabled (358,594,516 samples, 0.03%)</title><rect x="133.3" y="1413" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="136.30" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (91,828,439 samples, 0.01%)</title><rect x="45.0" y="1445" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="47.97" y="1455.5" ></text>
</g>
<g >
<title>page_counter_uncharge (255,947,656 samples, 0.02%)</title><rect x="503.8" y="1205" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="506.84" y="1215.5" ></text>
</g>
<g >
<title>__fget_light (4,553,817,764 samples, 0.44%)</title><rect x="1165.0" y="1397" width="5.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1167.96" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (321,855,498 samples, 0.03%)</title><rect x="11.6" y="1573" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.59" y="1583.5" ></text>
</g>
<g >
<title>unix_write_space (4,961,160,005 samples, 0.48%)</title><rect x="539.9" y="1317" width="5.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="542.89" y="1327.5" ></text>
</g>
<g >
<title>___pte_free_tlb (117,316,392 samples, 0.01%)</title><rect x="34.8" y="1301" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="37.75" y="1311.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (610,502,251 samples, 0.06%)</title><rect x="1043.8" y="1301" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1046.78" y="1311.5" ></text>
</g>
<g >
<title>sock_recvmsg (306,975,853 samples, 0.03%)</title><rect x="622.7" y="1445" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="625.73" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (621,397,203 samples, 0.06%)</title><rect x="27.6" y="725" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.55" y="735.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (153,351,219 samples, 0.01%)</title><rect x="822.8" y="1237" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="825.81" y="1247.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (90,826,429 samples, 0.01%)</title><rect x="15.1" y="1445" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="18.11" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (714,153,557 samples, 0.07%)</title><rect x="204.5" y="1381" width="0.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="207.53" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="997" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1007.5" ></text>
</g>
<g >
<title>[libc.so.6] (157,756,738 samples, 0.02%)</title><rect x="31.0" y="53" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="34.05" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1205" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1215.5" ></text>
</g>
<g >
<title>kmalloc_slab (818,675,789 samples, 0.08%)</title><rect x="837.3" y="1333" width="0.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="840.28" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1077" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="1087.5" ></text>
</g>
<g >
<title>zap_pte_range (2,808,258,020 samples, 0.27%)</title><rect x="35.3" y="1301" width="3.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="38.34" y="1311.5" ></text>
</g>
<g >
<title>[grep] (240,876,286 samples, 0.02%)</title><rect x="12.1" y="1493" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.12" y="1503.5" ></text>
</g>
<g >
<title>expr (1,265,996,224 samples, 0.12%)</title><rect x="10.6" y="1605" width="1.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="13.65" y="1615.5" ></text>
</g>
<g >
<title>ksys_read (488,793,405 samples, 0.05%)</title><rect x="33.7" y="1445" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="36.67" y="1455.5" ></text>
</g>
<g >
<title>mod_lruvec_page_state.constprop.0 (138,218,929 samples, 0.01%)</title><rect x="22.6" y="1237" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="25.64" y="1247.5" ></text>
</g>
<g >
<title>run_rebalance_domains (116,732,242 samples, 0.01%)</title><rect x="65.8" y="1349" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="68.83" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (405,575,361 samples, 0.04%)</title><rect x="49.4" y="1397" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.40" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,207,572,037 samples, 0.12%)</title><rect x="27.5" y="1221" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.48" y="1231.5" ></text>
</g>
<g >
<title>do_filp_open (270,438,042 samples, 0.03%)</title><rect x="15.7" y="1285" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="18.70" y="1295.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (766,692,213 samples, 0.07%)</title><rect x="765.6" y="1381" width="0.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="768.60" y="1391.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (107,599,217,328 samples, 10.36%)</title><rect x="766.9" y="1397" width="122.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="769.87" y="1407.5" >sock_alloc_send..</text>
</g>
<g >
<title>_copy_from_iter (766,301,464 samples, 0.07%)</title><rect x="712.9" y="1397" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="715.85" y="1407.5" ></text>
</g>
<g >
<title>__check_object_size (102,368,122 samples, 0.01%)</title><rect x="569.9" y="1317" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="572.93" y="1327.5" ></text>
</g>
<g >
<title>__rcu_read_lock (204,854,841 samples, 0.02%)</title><rect x="466.6" y="1301" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="469.63" y="1311.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (306,797,999 samples, 0.03%)</title><rect x="792.3" y="1349" width="0.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="795.25" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,402,567,107 samples, 0.13%)</title><rect x="32.8" y="1573" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.75" y="1583.5" ></text>
</g>
<g >
<title>check_stack_object (561,938,437 samples, 0.05%)</title><rect x="728.8" y="1365" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="731.82" y="1375.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (612,135,730 samples, 0.06%)</title><rect x="505.4" y="1317" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="508.35" y="1327.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (1,381,357,392 samples, 0.13%)</title><rect x="803.5" y="1285" width="1.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="806.53" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="677" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="687.5" ></text>
</g>
<g >
<title>[expr] (724,744,859 samples, 0.07%)</title><rect x="10.8" y="1589" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.76" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (173,371,783 samples, 0.02%)</title><rect x="27.6" y="341" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.61" y="351.5" ></text>
</g>
<g >
<title>__slab_free (7,110,423,719 samples, 0.68%)</title><rect x="1002.5" y="1333" width="8.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1005.52" y="1343.5" ></text>
</g>
<g >
<title>exit_mmap (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1381" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="41.55" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="213" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="223.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (106,502,532 samples, 0.01%)</title><rect x="40.9" y="1237" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="43.88" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,007,881,209 samples, 0.10%)</title><rect x="30.9" y="1573" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.92" y="1583.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (41,734,734,822 samples, 4.02%)</title><rect x="566.0" y="1349" width="47.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="568.97" y="1359.5" >__sk..</text>
</g>
<g >
<title>sockfd_lookup_light (203,411,219 samples, 0.02%)</title><rect x="623.1" y="1445" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="626.08" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="341" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="351.5" ></text>
</g>
<g >
<title>__libc_start_main (595,259,472 samples, 0.06%)</title><rect x="12.1" y="1573" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="15.11" y="1583.5" ></text>
</g>
<g >
<title>__alloc_skb (93,181,632,330 samples, 8.97%)</title><rect x="770.8" y="1365" width="105.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="773.82" y="1375.5" >__alloc_skb</text>
</g>
<g >
<title>apparmor_socket_recvmsg (358,235,672 samples, 0.03%)</title><rect x="374.8" y="1413" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="377.78" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (358,087,599 samples, 0.03%)</title><rect x="916.7" y="1493" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="919.72" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="549" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="559.5" ></text>
</g>
<g >
<title>memcg_account_kmem (1,585,868,682 samples, 0.15%)</title><rect x="266.8" y="1285" width="1.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="269.81" y="1295.5" ></text>
</g>
<g >
<title>__cmd_record (2,346,935,611 samples, 0.23%)</title><rect x="39.2" y="1573" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.23" y="1583.5" ></text>
</g>
<g >
<title>___slab_alloc (3,221,437,369 samples, 0.31%)</title><rect x="240.6" y="1301" width="3.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="243.60" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (110,440,525 samples, 0.01%)</title><rect x="27.6" y="277" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.61" y="287.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (95,636,745,825 samples, 9.20%)</title><rect x="769.6" y="1381" width="108.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="772.60" y="1391.5" >alloc_skb_wit..</text>
</g>
<g >
<title>__rcu_read_unlock (204,338,873 samples, 0.02%)</title><rect x="539.7" y="1317" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="542.65" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_futex (98,758,202 samples, 0.01%)</title><rect x="33.5" y="1461" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="36.49" y="1471.5" ></text>
</g>
<g >
<title>schedule_idle (249,650,951 samples, 0.02%)</title><rect x="65.3" y="1525" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="68.28" y="1535.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (173,465,557 samples, 0.02%)</title><rect x="39.8" y="1429" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="42.80" y="1439.5" ></text>
</g>
<g >
<title>parent (484,864,474,033 samples, 46.67%)</title><rect x="632.6" y="1525" width="550.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="635.59" y="1535.5" >parent</text>
</g>
<g >
<title>__do_softirq (123,504,050 samples, 0.01%)</title><rect x="62.6" y="1413" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="65.55" y="1423.5" ></text>
</g>
<g >
<title>skb_unlink (9,002,899,712 samples, 0.87%)</title><rect x="553.9" y="1381" width="10.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="556.89" y="1391.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (21,748,004,418 samples, 2.09%)</title><rect x="1137.7" y="1317" width="24.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1140.70" y="1327.5" >c..</text>
</g>
<g >
<title>simple_copy_to_iter (38,864,026,636 samples, 3.74%)</title><rect x="569.2" y="1333" width="44.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="572.24" y="1343.5" >simp..</text>
</g>
<g >
<title>__rcu_read_unlock (307,206,347 samples, 0.03%)</title><rect x="1091.3" y="1317" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1094.35" y="1327.5" ></text>
</g>
<g >
<title>docker (425,005,184 samples, 0.04%)</title><rect x="10.1" y="1605" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="13.14" y="1615.5" ></text>
</g>
<g >
<title>mod_objcg_state (3,424,031,819 samples, 0.33%)</title><rect x="819.2" y="1285" width="3.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="822.15" y="1295.5" ></text>
</g>
<g >
<title>lookup_fast (211,883,653 samples, 0.02%)</title><rect x="12.1" y="1349" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="15.12" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (507,249,523 samples, 0.05%)</title><rect x="29.4" y="1477" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="32.39" y="1487.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (409,393,953 samples, 0.04%)</title><rect x="1010.1" y="1269" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1013.08" y="1279.5" ></text>
</g>
<g >
<title>amd_clear_divider (562,749,393 samples, 0.05%)</title><rect x="907.9" y="1461" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="910.90" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (354,628,378 samples, 0.03%)</title><rect x="44.4" y="1525" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="47.43" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (738,323,899 samples, 0.07%)</title><rect x="27.5" y="821" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.54" y="831.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (116,822,642 samples, 0.01%)</title><rect x="48.1" y="1509" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="51.12" y="1519.5" ></text>
</g>
<g >
<title>__check_heap_object (408,522,918 samples, 0.04%)</title><rect x="720.6" y="1349" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="723.58" y="1359.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (96,782,345 samples, 0.01%)</title><rect x="66.5" y="1445" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="69.51" y="1455.5" ></text>
</g>
<g >
<title>mod_objcg_state (255,629,978 samples, 0.02%)</title><rect x="305.2" y="1333" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="308.17" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="229" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="239.5" ></text>
</g>
<g >
<title>execute_command_internal (505,895,688 samples, 0.05%)</title><rect x="46.8" y="1349" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="49.78" y="1359.5" ></text>
</g>
<g >
<title>__tsearch (115,951,895 samples, 0.01%)</title><rect x="47.8" y="1397" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="50.82" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="645" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="655.5" ></text>
</g>
<g >
<title>execute_command_internal (92,202,909 samples, 0.01%)</title><rect x="47.2" y="1189" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="50.23" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="869" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="879.5" ></text>
</g>
<g >
<title>kernel_wait4 (89,561,692 samples, 0.01%)</title><rect x="47.5" y="1141" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="50.49" y="1151.5" ></text>
</g>
<g >
<title>unix_destruct_scm (31,247,196,533 samples, 3.01%)</title><rect x="1061.5" y="1349" width="35.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1064.55" y="1359.5" >uni..</text>
</g>
<g >
<title>__mod_memcg_state (510,304,441 samples, 0.05%)</title><rect x="1056.3" y="1221" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1059.33" y="1231.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (207,228,180,100 samples, 19.95%)</title><rect x="103.2" y="1461" width="235.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="106.22" y="1471.5" >__x64_sys_sendto</text>
</g>
<g >
<title>cpu_startup_entry (479,051,353 samples, 0.05%)</title><rect x="44.4" y="1557" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="47.42" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (513,959,661 samples, 0.05%)</title><rect x="29.4" y="1493" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="32.39" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,104,803,874 samples, 0.11%)</title><rect x="27.5" y="1157" width="1.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.49" y="1167.5" ></text>
</g>
<g >
<title>page_counter_cancel (255,947,656 samples, 0.02%)</title><rect x="503.8" y="1189" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="506.84" y="1199.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (231,613,543 samples, 0.02%)</title><rect x="65.0" y="1525" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="68.00" y="1535.5" ></text>
</g>
<g >
<title>consume_obj_stock (613,745,743 samples, 0.06%)</title><rect x="291.9" y="1333" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="294.86" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="389" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_openat (211,883,653 samples, 0.02%)</title><rect x="12.1" y="1429" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="15.12" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (226,207,300,572 samples, 21.77%)</title><rect x="366.4" y="1461" width="256.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="369.40" y="1471.5" >__x64_sys_recvfrom</text>
</g>
<g >
<title>dequeue_entity (91,193,364 samples, 0.01%)</title><rect x="39.8" y="1349" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="42.83" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_execve (3,521,587,096 samples, 0.34%)</title><rect x="34.5" y="1557" width="4.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="37.53" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (310,457,270 samples, 0.03%)</title><rect x="48.7" y="1541" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="51.68" y="1551.5" ></text>
</g>
<g >
<title>refill_obj_stock (307,006,525 samples, 0.03%)</title><rect x="1057.9" y="1301" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1060.95" y="1311.5" ></text>
</g>
<g >
<title>check_stack_object (663,569,791 samples, 0.06%)</title><rect x="167.8" y="1365" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="170.76" y="1375.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (818,785,580 samples, 0.08%)</title><rect x="869.8" y="1301" width="0.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="872.80" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (153,822,344 samples, 0.01%)</title><rect x="424.6" y="1381" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="427.64" y="1391.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (6,340,218,130 samples, 0.61%)</title><rect x="1050.7" y="1301" width="7.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1053.69" y="1311.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1,686,970,093 samples, 0.16%)</title><rect x="763.7" y="1349" width="1.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="766.68" y="1359.5" ></text>
</g>
<g >
<title>cache_from_obj (357,684,779 samples, 0.03%)</title><rect x="431.5" y="1349" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="434.51" y="1359.5" ></text>
</g>
<g >
<title>consume_stock (255,391,762 samples, 0.02%)</title><rect x="873.8" y="1301" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="876.81" y="1311.5" ></text>
</g>
<g >
<title>filename_lookup (145,282,536 samples, 0.01%)</title><rect x="16.8" y="1413" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="19.80" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (215,938,567 samples, 0.02%)</title><rect x="15.5" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.45" y="1439.5" ></text>
</g>
<g >
<title>sock_recvmsg (195,142,316,822 samples, 18.78%)</title><rect x="941.8" y="1429" width="221.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="944.82" y="1439.5" >sock_recvmsg</text>
</g>
<g >
<title>unix_stream_read_generic (168,697,848,713 samples, 16.24%)</title><rect x="971.9" y="1397" width="191.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="974.85" y="1407.5" >unix_stream_read_generic</text>
</g>
<g >
<title>__sys_recvfrom (206,956,497,509 samples, 19.92%)</title><rect x="936.1" y="1445" width="235.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="939.07" y="1455.5" >__sys_recvfrom</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,207,572,037 samples, 0.12%)</title><rect x="27.5" y="1205" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.48" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (738,323,899 samples, 0.07%)</title><rect x="27.5" y="853" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.54" y="863.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (613,617,617 samples, 0.06%)</title><rect x="1180.1" y="1429" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1183.13" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1077" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="133" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="143.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (560,706,603 samples, 0.05%)</title><rect x="854.1" y="1317" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="857.12" y="1327.5" ></text>
</g>
<g >
<title>getgrgid (113,964,447 samples, 0.01%)</title><rect x="16.2" y="1493" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="19.24" y="1503.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (256,268,227 samples, 0.02%)</title><rect x="728.0" y="1349" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="731.01" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="405" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1397" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1407.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (612,673,185 samples, 0.06%)</title><rect x="832.6" y="1317" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="835.57" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (103,389,516 samples, 0.01%)</title><rect x="46.3" y="1333" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="49.31" y="1343.5" ></text>
</g>
<g >
<title>do_dentry_open (102,591,905 samples, 0.01%)</title><rect x="46.3" y="1205" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="49.31" y="1215.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (23,020,141,010 samples, 2.22%)</title><rect x="739.5" y="1365" width="26.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="742.45" y="1375.5" >_..</text>
</g>
<g >
<title>__slab_free (102,429,162 samples, 0.01%)</title><rect x="506.0" y="1317" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="509.05" y="1327.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (311,012,281 samples, 0.03%)</title><rect x="48.7" y="1589" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="51.68" y="1599.5" ></text>
</g>
<g >
<title>__fdget (5,012,316,911 samples, 0.48%)</title><rect x="615.0" y="1413" width="5.7" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="618.00" y="1423.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (5,426,778,853 samples, 0.52%)</title><rect x="1175.1" y="1461" width="6.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1178.07" y="1471.5" ></text>
</g>
<g >
<title>__schedule (230,598,754 samples, 0.02%)</title><rect x="65.3" y="1509" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="68.28" y="1519.5" ></text>
</g>
<g >
<title>kmalloc_reserve (39,029,729,243 samples, 3.76%)</title><rect x="792.6" y="1349" width="44.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="795.60" y="1359.5" >kmal..</text>
</g>
<g >
<title>security_socket_sendmsg (102,544,704 samples, 0.01%)</title><rect x="106.6" y="1429" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="109.59" y="1439.5" ></text>
</g>
<g >
<title>__cond_resched (357,241,959 samples, 0.03%)</title><rect x="711.5" y="1397" width="0.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="714.46" y="1407.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (9,254,331,332 samples, 0.89%)</title><rect x="812.5" y="1301" width="10.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="815.53" y="1311.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (301,197,984 samples, 0.03%)</title><rect x="48.7" y="1525" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="51.68" y="1535.5" ></text>
</g>
<g >
<title>unmap_page_range (2,878,618,159 samples, 0.28%)</title><rect x="35.3" y="1333" width="3.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="38.26" y="1343.5" ></text>
</g>
<g >
<title>charge_memcg (188,796,342 samples, 0.02%)</title><rect x="10.3" y="1445" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="13.34" y="1455.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (36,883,552,674 samples, 3.55%)</title><rect x="233.6" y="1333" width="41.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="236.63" y="1343.5" >__k..</text>
</g>
<g >
<title>__sys_sendto (307,001,040 samples, 0.03%)</title><rect x="102.9" y="1461" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="105.87" y="1471.5" ></text>
</g>
<g >
<title>__check_object_size (102,467,437 samples, 0.01%)</title><rect x="157.7" y="1381" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="160.71" y="1391.5" ></text>
</g>
<g >
<title>put_pid (512,350,112 samples, 0.05%)</title><rect x="550.6" y="1381" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="553.65" y="1391.5" ></text>
</g>
<g >
<title>skb_copy_datagram_from_iter (358,053,957 samples, 0.03%)</title><rect x="689.4" y="1413" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="692.37" y="1423.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (102,471,917 samples, 0.01%)</title><rect x="563.3" y="1333" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="566.31" y="1343.5" ></text>
</g>
<g >
<title>all (1,038,976,108,628 samples, 100%)</title><rect x="10.0" y="1621" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" ></text>
</g>
<g >
<title>__check_heap_object (2,252,191,925 samples, 0.22%)</title><rect x="1126.8" y="1269" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1129.78" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (396,747,082 samples, 0.04%)</title><rect x="27.6" y="533" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.58" y="543.5" ></text>
</g>
<g >
<title>mmput (3,521,587,096 samples, 0.34%)</title><rect x="34.5" y="1413" width="4.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="37.53" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (131,285,370 samples, 0.01%)</title><rect x="45.0" y="1477" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="47.97" y="1487.5" ></text>
</g>
<g >
<title>__rcu_read_lock (102,500,860 samples, 0.01%)</title><rect x="258.1" y="1285" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="261.09" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1125" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1135.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (308,398,010 samples, 0.03%)</title><rect x="11.6" y="1525" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.59" y="1535.5" ></text>
</g>
<g >
<title>pthread_cond_wait (91,501,583 samples, 0.01%)</title><rect x="34.2" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="37.24" y="1535.5" ></text>
</g>
<g >
<title>vfs_statx (406,388,911 samples, 0.04%)</title><rect x="29.5" y="1429" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="32.51" y="1439.5" ></text>
</g>
<g >
<title>skb_release_data (204,906,789 samples, 0.02%)</title><rect x="1103.8" y="1381" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1106.77" y="1391.5" ></text>
</g>
<g >
<title>unmap_vmas (2,901,230,678 samples, 0.28%)</title><rect x="35.2" y="1365" width="3.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="38.23" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (499,472,757 samples, 0.05%)</title><rect x="10.9" y="1429" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.87" y="1439.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (204,884,555 samples, 0.02%)</title><rect x="495.9" y="1285" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="498.94" y="1295.5" ></text>
</g>
<g >
<title>exec_binprm (116,822,642 samples, 0.01%)</title><rect x="48.1" y="1493" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="51.12" y="1503.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (4,246,970,708 samples, 0.41%)</title><rect x="341.9" y="1445" width="4.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="344.89" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock (356,918,992 samples, 0.03%)</title><rect x="713.7" y="1397" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="716.72" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (95,476,832 samples, 0.01%)</title><rect x="61.3" y="1589" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="64.26" y="1599.5" ></text>
</g>
<g >
<title>sock_def_readable (458,228,314 samples, 0.04%)</title><rect x="691.1" y="1413" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="694.12" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="405" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="415.5" ></text>
</g>
<g >
<title>kmalloc_size_roundup (204,838,006 samples, 0.02%)</title><rect x="877.6" y="1365" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="880.58" y="1375.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (135,281,243 samples, 0.01%)</title><rect x="65.8" y="1381" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="68.81" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (234,016,923 samples, 0.02%)</title><rect x="15.0" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="17.99" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="773" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,899,646 samples, 0.04%)</title><rect x="31.5" y="69" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="79.5" ></text>
</g>
<g >
<title>[libc.so.6] (153,838,233 samples, 0.01%)</title><rect x="47.6" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="50.60" y="1407.5" ></text>
</g>
<g >
<title>unix_destruct_scm (205,015,768 samples, 0.02%)</title><rect x="545.9" y="1365" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="548.93" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (99,649,804 samples, 0.01%)</title><rect x="15.1" y="1461" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="18.10" y="1471.5" ></text>
</g>
<g >
<title>epoll_wait (159,361,314 samples, 0.02%)</title><rect x="32.2" y="1557" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="35.17" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="949" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="959.5" ></text>
</g>
<g >
<title>sock_recvmsg (153,566,969 samples, 0.01%)</title><rect x="1172.5" y="1445" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1175.45" y="1455.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (141,539,163 samples, 0.01%)</title><rect x="30.3" y="1509" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="33.26" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (238,517,525 samples, 0.02%)</title><rect x="14.2" y="1525" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="17.25" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1429" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1439.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (204,868,183 samples, 0.02%)</title><rect x="945.8" y="1413" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="948.77" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1253" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1263.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (204,175,567 samples, 0.02%)</title><rect x="132.4" y="1413" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="135.43" y="1423.5" ></text>
</g>
<g >
<title>skb_free_head (358,086,502 samples, 0.03%)</title><rect x="1025.1" y="1365" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1028.13" y="1375.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (766,987,974 samples, 0.07%)</title><rect x="232.1" y="1349" width="0.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="235.12" y="1359.5" ></text>
</g>
<g >
<title>skb_free_head (29,203,882,259 samples, 2.81%)</title><rect x="1027.3" y="1349" width="33.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1030.28" y="1359.5" >sk..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,734,996,681 samples, 0.17%)</title><rect x="27.4" y="1445" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.37" y="1455.5" ></text>
</g>
<g >
<title>check_heap_object (611,932,361 samples, 0.06%)</title><rect x="167.1" y="1365" width="0.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="170.06" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="517" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,039,122 samples, 0.03%)</title><rect x="27.6" y="453" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.60" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (183,085,058 samples, 0.02%)</title><rect x="46.4" y="1317" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="49.42" y="1327.5" ></text>
</g>
<g >
<title>[grep] (595,259,472 samples, 0.06%)</title><rect x="12.1" y="1541" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.11" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="277" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="287.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (256,156,990 samples, 0.02%)</title><rect x="876.1" y="1349" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="879.13" y="1359.5" ></text>
</g>
<g >
<title>memset_erms (1,431,210,379 samples, 0.14%)</title><rect x="308.5" y="1349" width="1.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="311.48" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1461" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="485" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="495.5" ></text>
</g>
<g >
<title>wait_for_unix_gc (358,747,569 samples, 0.03%)</title><rect x="330.4" y="1397" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="333.38" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (678,574,211 samples, 0.07%)</title><rect x="27.5" y="805" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.54" y="815.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (9,620,320,436 samples, 0.93%)</title><rect x="570.5" y="1301" width="10.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="573.51" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="165" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="175.5" ></text>
</g>
<g >
<title>execute_command (529,852,002 samples, 0.05%)</title><rect x="46.8" y="1365" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="49.75" y="1375.5" ></text>
</g>
<g >
<title>mod_memcg_state (102,265,156 samples, 0.01%)</title><rect x="467.1" y="1285" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="470.15" y="1295.5" ></text>
</g>
<g >
<title>tcp_get_idx (282,932,601 samples, 0.03%)</title><rect x="33.9" y="1349" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="36.90" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (553,103,080 samples, 0.05%)</title><rect x="49.2" y="1413" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.23" y="1423.5" ></text>
</g>
<g >
<title>worker_thread (215,965,972 samples, 0.02%)</title><rect x="62.0" y="1557" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="64.99" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="309" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="319.5" ></text>
</g>
<g >
<title>ion (104,518,047 samples, 0.01%)</title><rect x="41.8" y="1509" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="44.78" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1413" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1423.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (459,566,549 samples, 0.04%)</title><rect x="468.7" y="1349" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="471.72" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,228,872,336 samples, 0.12%)</title><rect x="40.4" y="1429" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="43.36" y="1439.5" ></text>
</g>
<g >
<title>kmalloc_slab (868,351,853 samples, 0.08%)</title><rect x="831.6" y="1317" width="1.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="834.59" y="1327.5" ></text>
</g>
<g >
<title>unix_scm_to_skb (460,734,213 samples, 0.04%)</title><rect x="133.7" y="1413" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="136.71" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="581" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="591.5" ></text>
</g>
<g >
<title>__mod_memcg_state (817,939,339 samples, 0.08%)</title><rect x="267.6" y="1253" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="270.62" y="1263.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (307,409,045 samples, 0.03%)</title><rect x="425.1" y="1381" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="428.05" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (919,336,743 samples, 0.09%)</title><rect x="27.5" y="1029" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.52" y="1039.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (10,283,327,077 samples, 0.99%)</title><rect x="251.3" y="1301" width="11.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="254.35" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1445" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1455.5" ></text>
</g>
<g >
<title>copy_p4d_range (2,187,001,309 samples, 0.21%)</title><rect x="22.0" y="1317" width="2.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="24.95" y="1327.5" ></text>
</g>
<g >
<title>exec_mmap (114,150,940 samples, 0.01%)</title><rect x="48.1" y="1429" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="51.12" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (208,897,565,350 samples, 20.11%)</title><rect x="935.8" y="1461" width="237.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="938.84" y="1471.5" >__x64_sys_recvfrom</text>
</g>
<g >
<title>do_mmap (144,170,371 samples, 0.01%)</title><rect x="48.8" y="1349" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="51.76" y="1359.5" ></text>
</g>
<g >
<title>[bash] (552,679,814 samples, 0.05%)</title><rect x="46.8" y="1381" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="49.75" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="965" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="975.5" ></text>
</g>
<g >
<title>wb_writeback (115,651,840 samples, 0.01%)</title><rect x="62.0" y="1493" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="65.05" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1509" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1519.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (513,813,564 samples, 0.05%)</title><rect x="915.7" y="1477" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="918.73" y="1487.5" ></text>
</g>
<g >
<title>d_hash_and_lookup (126,336,931 samples, 0.01%)</title><rect x="46.5" y="1221" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="49.47" y="1231.5" ></text>
</g>
<g >
<title>free_pgd_range (311,474,918 samples, 0.03%)</title><rect x="34.5" y="1349" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="37.53" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (211,883,653 samples, 0.02%)</title><rect x="12.1" y="1461" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="15.12" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="485" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="495.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (272,988,380 samples, 0.03%)</title><rect x="15.7" y="1381" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="18.70" y="1391.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (6,351,942,349 samples, 0.61%)</title><rect x="823.6" y="1301" width="7.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="826.62" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,021,726,610 samples, 0.10%)</title><rect x="27.5" y="1109" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.49" y="1119.5" ></text>
</g>
<g >
<title>unix_passcred_enabled (152,258,084 samples, 0.01%)</title><rect x="328.7" y="1397" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="331.70" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (129,483,121 samples, 0.01%)</title><rect x="44.2" y="1573" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="47.23" y="1583.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (204,611,507 samples, 0.02%)</title><rect x="250.8" y="1285" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="253.83" y="1295.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (299,910,558 samples, 0.03%)</title><rect x="66.0" y="1429" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="68.99" y="1439.5" ></text>
</g>
<g >
<title>ttwu_do_activate (93,772,451 samples, 0.01%)</title><rect x="45.1" y="1429" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="48.13" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="917" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="927.5" ></text>
</g>
<g >
<title>[bash] (505,019,107 samples, 0.05%)</title><rect x="46.8" y="1333" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="49.78" y="1343.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (231,881,883 samples, 0.02%)</title><rect x="33.0" y="1413" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="35.97" y="1423.5" ></text>
</g>
<g >
<title>established_get_next (180,148,225 samples, 0.02%)</title><rect x="34.0" y="1333" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="37.00" y="1343.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (306,827,883 samples, 0.03%)</title><rect x="1060.1" y="1317" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1063.10" y="1327.5" ></text>
</g>
<g >
<title>path_openat (270,438,042 samples, 0.03%)</title><rect x="15.7" y="1269" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="18.70" y="1279.5" ></text>
</g>
<g >
<title>__clone (1,402,567,107 samples, 0.13%)</title><rect x="32.8" y="1589" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="35.75" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (152,718,425 samples, 0.01%)</title><rect x="32.2" y="1525" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="35.17" y="1535.5" ></text>
</g>
<g >
<title>__pte_alloc (271,468,952 samples, 0.03%)</title><rect x="22.5" y="1269" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="25.49" y="1279.5" ></text>
</g>
<g >
<title>kfree_skbmem (358,239,096 samples, 0.03%)</title><rect x="546.2" y="1381" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="549.16" y="1391.5" ></text>
</g>
<g >
<title>consume_obj_stock (357,014,733 samples, 0.03%)</title><rect x="857.7" y="1333" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="860.65" y="1343.5" ></text>
</g>
<g >
<title>v8::internal::Object::GetPropertyWithAccessor (213,279,144 samples, 0.02%)</title><rect x="21.4" y="1493" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="24.36" y="1503.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (6,343,068,856 samples, 0.61%)</title><rect x="1106.9" y="1349" width="7.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1109.91" y="1359.5" ></text>
</g>
<g >
<title>[perf-1156129.map] (3,492,599,499 samples, 0.34%)</title><rect x="21.1" y="1589" width="4.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="24.12" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="181" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="191.5" ></text>
</g>
<g >
<title>vfs_open (102,591,905 samples, 0.01%)</title><rect x="46.3" y="1221" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="49.31" y="1231.5" ></text>
</g>
<g >
<title>cache_from_obj (4,188,657,609 samples, 0.40%)</title><rect x="451.9" y="1333" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="454.94" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,713,231,758 samples, 0.16%)</title><rect x="27.4" y="1429" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.39" y="1439.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (4,547,447,603 samples, 0.44%)</title><rect x="900.6" y="1429" width="5.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="903.59" y="1439.5" ></text>
</g>
<g >
<title>aa_unix_msg_perm (152,815,023 samples, 0.01%)</title><rect x="945.6" y="1381" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="948.59" y="1391.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (111,477,483 samples, 0.01%)</title><rect x="62.0" y="1477" width="0.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="65.05" y="1487.5" ></text>
</g>
<g >
<title>__fdget (3,223,164,353 samples, 0.31%)</title><rect x="332.4" y="1413" width="3.7" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="335.42" y="1423.5" ></text>
</g>
<g >
<title>setlocale (432,056,761 samples, 0.04%)</title><rect x="47.6" y="1509" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="50.60" y="1519.5" ></text>
</g>
<g >
<title>__alloc_skb (88,556,231,704 samples, 8.52%)</title><rect x="210.1" y="1365" width="100.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="213.11" y="1375.5" >__alloc_skb</text>
</g>
<g >
<title>__kmem_cache_alloc_node (717,034,961 samples, 0.07%)</title><rect x="275.5" y="1333" width="0.8" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="278.52" y="1343.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (715,175,556 samples, 0.07%)</title><rect x="243.4" y="1285" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="246.45" y="1295.5" ></text>
</g>
<g >
<title>recv (249,667,151,900 samples, 24.03%)</title><rect x="348.7" y="1509" width="283.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="351.74" y="1519.5" >recv</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="837" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="847.5" ></text>
</g>
<g >
<title>_copy_to_iter (4,416,419,988 samples, 0.43%)</title><rect x="582.5" y="1317" width="5.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="585.49" y="1327.5" ></text>
</g>
<g >
<title>_dl_catch_error (93,858,678 samples, 0.01%)</title><rect x="16.2" y="1381" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="19.24" y="1391.5" ></text>
</g>
<g >
<title>__slab_free (7,516,980,731 samples, 0.72%)</title><rect x="480.3" y="1301" width="8.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="483.27" y="1311.5" ></text>
</g>
<g >
<title>[bash] (391,080,291 samples, 0.04%)</title><rect x="46.9" y="1237" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="49.90" y="1247.5" ></text>
</g>
<g >
<title>mod_objcg_state (255,853,452 samples, 0.02%)</title><rect x="870.7" y="1333" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="873.73" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (110,440,525 samples, 0.01%)</title><rect x="27.6" y="245" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.61" y="255.5" ></text>
</g>
<g >
<title>seq_read_iter (437,355,770 samples, 0.04%)</title><rect x="33.7" y="1381" width="0.5" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="36.73" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (124,252,059 samples, 0.01%)</title><rect x="12.6" y="1397" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.57" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1541" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1551.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (102,543,645 samples, 0.01%)</title><rect x="581.1" y="1269" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="584.15" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (394,561,608 samples, 0.04%)</title><rect x="27.6" y="501" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.59" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (926,740,866 samples, 0.09%)</title><rect x="27.5" y="1045" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.51" y="1055.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (5,628,198,049 samples, 0.54%)</title><rect x="340.6" y="1461" width="6.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="343.61" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="693" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="703.5" ></text>
</g>
<g >
<title>__sys_sendto (205,540,362,837 samples, 19.78%)</title><rect x="103.3" y="1445" width="233.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="106.34" y="1455.5" >__sys_sendto</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1221" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1231.5" ></text>
</g>
<g >
<title>unix_destruct_scm (307,339,342 samples, 0.03%)</title><rect x="1097.0" y="1365" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1100.04" y="1375.5" ></text>
</g>
<g >
<title>irq_exit_rcu (126,494,607 samples, 0.01%)</title><rect x="62.6" y="1445" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="65.55" y="1455.5" ></text>
</g>
<g >
<title>__tsearch (106,591,287 samples, 0.01%)</title><rect x="48.5" y="1573" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="51.54" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1317" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="261" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="271.5" ></text>
</g>
<g >
<title>vm_area_dup (260,611,121 samples, 0.03%)</title><rect x="24.6" y="1333" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="27.58" y="1343.5" ></text>
</g>
<g >
<title>consume_obj_stock (972,618,130 samples, 0.09%)</title><rect x="872.1" y="1317" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="875.06" y="1327.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (251,693,114 samples, 0.02%)</title><rect x="24.6" y="1317" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="27.59" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="613" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="623.5" ></text>
</g>
<g >
<title>arch_call_rest_init (445,917,430 samples, 0.04%)</title><rect x="74.5" y="1541" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="77.49" y="1551.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (206,829,045 samples, 0.02%)</title><rect x="34.9" y="1349" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="37.88" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (624,127,099 samples, 0.06%)</title><rect x="27.6" y="741" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.55" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1141" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1151.5" ></text>
</g>
<g >
<title>__cond_resched (409,160,624 samples, 0.04%)</title><rect x="791.1" y="1349" width="0.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="794.09" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (1,175,918,108 samples, 0.11%)</title><rect x="78.4" y="1589" width="1.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="81.35" y="1599.5" ></text>
</g>
<g >
<title>mmput (233,413,133 samples, 0.02%)</title><rect x="19.1" y="1493" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="22.11" y="1503.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (203,492,893 samples, 0.02%)</title><rect x="632.1" y="1493" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="635.07" y="1503.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (4,960,503,088 samples, 0.48%)</title><rect x="445.5" y="1317" width="5.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="448.50" y="1327.5" ></text>
</g>
<g >
<title>uv__fs_read (488,793,405 samples, 0.05%)</title><rect x="33.7" y="1525" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="36.67" y="1535.5" ></text>
</g>
<g >
<title>do_iter_write (921,667,358 samples, 0.09%)</title><rect x="40.7" y="1333" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="43.68" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (204,931,577 samples, 0.02%)</title><rect x="424.8" y="1381" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="427.82" y="1391.5" ></text>
</g>
<g >
<title>begin_new_exec (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1445" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="41.55" y="1455.5" ></text>
</g>
<g >
<title>inode_permission (191,383,940 samples, 0.02%)</title><rect x="29.5" y="1365" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="32.54" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="725" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="735.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (256,163,602 samples, 0.02%)</title><rect x="1024.5" y="1349" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1027.54" y="1359.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (173,465,557 samples, 0.02%)</title><rect x="39.8" y="1445" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="42.80" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,673,440,636 samples, 0.16%)</title><rect x="27.4" y="1397" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.44" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (215,938,567 samples, 0.02%)</title><rect x="15.5" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.45" y="1407.5" ></text>
</g>
<g >
<title>expand_string_assignment (190,038,871 samples, 0.02%)</title><rect x="47.4" y="1349" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="50.38" y="1359.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (409,222,128 samples, 0.04%)</title><rect x="570.0" y="1317" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="573.05" y="1327.5" ></text>
</g>
<g >
<title>__send (234,134,104,614 samples, 22.54%)</title><rect x="82.8" y="1509" width="265.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="85.83" y="1519.5" >__send</text>
</g>
<g >
<title>mmap_region (144,170,371 samples, 0.01%)</title><rect x="48.8" y="1333" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="51.76" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (89,561,692 samples, 0.01%)</title><rect x="47.5" y="1205" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="50.49" y="1215.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (4,664,175,168 samples, 0.45%)</title><rect x="25.4" y="1573" width="5.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="28.36" y="1583.5" ></text>
</g>
<g >
<title>__rcu_read_lock (460,711,652 samples, 0.04%)</title><rect x="1058.3" y="1317" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1061.30" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="149" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="159.5" ></text>
</g>
<g >
<title>do_sys_openat2 (270,438,042 samples, 0.03%)</title><rect x="15.7" y="1301" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="18.70" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (422,776,481 samples, 0.04%)</title><rect x="31.6" y="53" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="34.58" y="63.5" ></text>
</g>
<g >
<title>__refill_stock (460,310,565 samples, 0.04%)</title><rect x="503.6" y="1237" width="0.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="506.61" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1269" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (856,553,194 samples, 0.08%)</title><rect x="27.5" y="981" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.53" y="991.5" ></text>
</g>
<g >
<title>refill_obj_stock (306,172,245 samples, 0.03%)</title><rect x="467.7" y="1333" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="470.73" y="1343.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (818,243,235 samples, 0.08%)</title><rect x="304.2" y="1301" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="307.24" y="1311.5" ></text>
</g>
<g >
<title>__tsearch (119,283,461 samples, 0.01%)</title><rect x="11.3" y="1413" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="14.29" y="1423.5" ></text>
</g>
<g >
<title>generic_perform_write (797,045,356 samples, 0.08%)</title><rect x="40.8" y="1269" width="0.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="43.80" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;v8::internal::TranslatedFrame, std::allocator&lt;v8::internal::TranslatedFrame&gt; &gt;::emplace_back&lt;v8::internal::TranslatedFrame&gt; (110,227,839 samples, 0.01%)</title><rect x="21.4" y="1413" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="24.41" y="1423.5" ></text>
</g>
<g >
<title>wait4 (89,561,692 samples, 0.01%)</title><rect x="47.5" y="1221" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="50.49" y="1231.5" ></text>
</g>
<g >
<title>__mod_memcg_state (102,470,589 samples, 0.01%)</title><rect x="873.3" y="1285" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="876.34" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="581" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="591.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (158,304,377 samples, 0.02%)</title><rect x="15.5" y="1205" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="18.46" y="1215.5" ></text>
</g>
<g >
<title>__x64_sys_poll (455,294,556 samples, 0.04%)</title><rect x="32.8" y="1461" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="35.83" y="1471.5" ></text>
</g>
<g >
<title>__mod_memcg_state (102,448,821 samples, 0.01%)</title><rect x="307.2" y="1285" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="310.20" y="1295.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (307,174,993 samples, 0.03%)</title><rect x="376.7" y="1397" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="379.70" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1301" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="1311.5" ></text>
</g>
<g >
<title>memcg_account_kmem (867,559,753 samples, 0.08%)</title><rect x="1056.0" y="1253" width="1.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1058.98" y="1263.5" ></text>
</g>
<g >
<title>uv__stream_io (102,078,010 samples, 0.01%)</title><rect x="32.6" y="1557" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="35.63" y="1567.5" ></text>
</g>
<g >
<title>security_socket_getpeersec_dgram (460,433,196 samples, 0.04%)</title><rect x="155.8" y="1397" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="158.79" y="1407.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (335,084,353 samples, 0.03%)</title><rect x="32.9" y="1429" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="35.86" y="1439.5" ></text>
</g>
<g >
<title>unix_scm_to_skb (255,871,169 samples, 0.02%)</title><rect x="692.1" y="1413" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="695.11" y="1423.5" ></text>
</g>
<g >
<title>__kmem_cache_free (25,829,747,169 samples, 2.49%)</title><rect x="1029.0" y="1317" width="29.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1031.96" y="1327.5" >__..</text>
</g>
<g >
<title>[ls] (108,486,156 samples, 0.01%)</title><rect x="18.9" y="1541" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.86" y="1551.5" ></text>
</g>
<g >
<title>execute_command_internal (397,431,092 samples, 0.04%)</title><rect x="46.9" y="1317" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="49.90" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1365" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1375.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (140,153,811 samples, 0.01%)</title><rect x="48.8" y="1301" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="51.76" y="1311.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (189,867,449 samples, 0.02%)</title><rect x="65.0" y="1493" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="68.02" y="1503.5" ></text>
</g>
<g >
<title>memcg_account_kmem (461,033,400 samples, 0.04%)</title><rect x="1022.6" y="1285" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1025.63" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (183,085,058 samples, 0.02%)</title><rect x="46.4" y="1333" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="49.42" y="1343.5" ></text>
</g>
<g >
<title>kmalloc_size_roundup (665,174,367 samples, 0.06%)</title><rect x="276.5" y="1349" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="279.45" y="1359.5" ></text>
</g>
<g >
<title>__nss_next2 (215,938,567 samples, 0.02%)</title><rect x="15.5" y="1445" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="18.45" y="1455.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (474,790,097 samples, 0.05%)</title><rect x="40.9" y="1253" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="43.88" y="1263.5" ></text>
</g>
<g >
<title>[[heap]] (101,209,796 samples, 0.01%)</title><rect x="10.6" y="1589" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.65" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (394,561,608 samples, 0.04%)</title><rect x="27.6" y="517" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.59" y="527.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,765,177,351 samples, 0.27%)</title><rect x="71.2" y="1509" width="3.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="74.24" y="1519.5" ></text>
</g>
<g >
<title>kfree (358,116,298 samples, 0.03%)</title><rect x="471.0" y="1349" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="474.04" y="1359.5" ></text>
</g>
<g >
<title>refill_stock (153,469,457 samples, 0.01%)</title><rect x="1023.1" y="1285" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1026.15" y="1295.5" ></text>
</g>
<g >
<title>alloc_pages (128,776,365 samples, 0.01%)</title><rect x="22.5" y="1237" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="25.49" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1509" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1061" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1071.5" ></text>
</g>
<g >
<title>refill_obj_stock (3,225,159,972 samples, 0.31%)</title><rect x="1019.7" y="1317" width="3.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1022.72" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (415,137,687 samples, 0.04%)</title><rect x="31.0" y="101" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="111.5" ></text>
</g>
<g >
<title>__unfreeze_partials (563,359,807 samples, 0.05%)</title><rect x="451.2" y="1301" width="0.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="454.24" y="1311.5" ></text>
</g>
<g >
<title>__alloc_pages (128,776,365 samples, 0.01%)</title><rect x="22.5" y="1221" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="25.49" y="1231.5" ></text>
</g>
<g >
<title>refill_obj_stock (409,617,146 samples, 0.04%)</title><rect x="504.4" y="1301" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="507.42" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (488,793,405 samples, 0.05%)</title><rect x="33.7" y="1493" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="36.67" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (856,553,194 samples, 0.08%)</title><rect x="27.5" y="965" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.53" y="975.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1,226,413,530 samples, 0.12%)</title><rect x="1173.7" y="1461" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1176.67" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (512,550,127 samples, 0.05%)</title><rect x="32.8" y="1493" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="35.82" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (204,946,805 samples, 0.02%)</title><rect x="348.0" y="1493" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="350.99" y="1503.5" ></text>
</g>
<g >
<title>do_idle (270,126,138 samples, 0.03%)</title><rect x="14.2" y="1541" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="17.24" y="1551.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (101,492,537 samples, 0.01%)</title><rect x="258.3" y="1285" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="261.26" y="1295.5" ></text>
</g>
<g >
<title>ksys_write (1,215,484,470 samples, 0.12%)</title><rect x="40.4" y="1397" width="1.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="43.37" y="1407.5" ></text>
</g>
<g >
<title>command_substitute (190,038,871 samples, 0.02%)</title><rect x="47.4" y="1317" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="50.38" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (415,137,687 samples, 0.04%)</title><rect x="31.0" y="149" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="159.5" ></text>
</g>
<g >
<title>execute_command (107,418,781 samples, 0.01%)</title><rect x="46.8" y="1317" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="49.78" y="1327.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (7,620,097,394 samples, 0.73%)</title><rect x="158.4" y="1365" width="8.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="161.41" y="1375.5" ></text>
</g>
<g >
<title>mod_objcg_state (5,569,922,491 samples, 0.54%)</title><rect x="489.4" y="1301" width="6.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="492.44" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="869" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="879.5" ></text>
</g>
<g >
<title>search_binary_handler (116,822,642 samples, 0.01%)</title><rect x="48.1" y="1477" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="51.12" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (23,274,516,538 samples, 2.24%)</title><rect x="739.2" y="1381" width="26.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="742.16" y="1391.5" >_..</text>
</g>
<g >
<title>unix_stream_sendmsg (182,794,798,677 samples, 17.59%)</title><rect x="692.4" y="1413" width="207.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="695.40" y="1423.5" >unix_stream_sendmsg</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="341" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="351.5" ></text>
</g>
<g >
<title>__entry_text_start (9,766,759,166 samples, 0.94%)</title><rect x="642.5" y="1493" width="11.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="645.46" y="1503.5" ></text>
</g>
<g >
<title>unix_write_space (461,117,023 samples, 0.04%)</title><rect x="1096.5" y="1333" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1099.51" y="1343.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run (621,881,929 samples, 0.06%)</title><rect x="32.8" y="1541" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="35.75" y="1551.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (1,457,380,401 samples, 0.14%)</title><rect x="40.2" y="1541" width="1.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="43.24" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1141" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (171,306,305 samples, 0.02%)</title><rect x="27.6" y="325" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.61" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="709" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="719.5" ></text>
</g>
<g >
<title>do_sys_openat2 (103,389,516 samples, 0.01%)</title><rect x="46.3" y="1285" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="49.31" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="661" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1061" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1071.5" ></text>
</g>
<g >
<title>__rcu_read_lock (562,723,193 samples, 0.05%)</title><rect x="539.0" y="1317" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="542.01" y="1327.5" ></text>
</g>
<g >
<title>drain_stock (255,947,656 samples, 0.02%)</title><rect x="503.8" y="1221" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="506.84" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="933" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="943.5" ></text>
</g>
<g >
<title>__fget_light (2,813,685,279 samples, 0.27%)</title><rect x="332.9" y="1397" width="3.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="335.88" y="1407.5" ></text>
</g>
<g >
<title>thread_group_cputime (89,561,692 samples, 0.01%)</title><rect x="47.5" y="1061" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="50.49" y="1071.5" ></text>
</g>
<g >
<title>setlocale (1,274,211,041 samples, 0.12%)</title><rect x="17.1" y="1525" width="1.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="20.12" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="421" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="431.5" ></text>
</g>
<g >
<title>__slab_free (7,824,978,574 samples, 0.75%)</title><rect x="1034.9" y="1301" width="8.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1037.89" y="1311.5" ></text>
</g>
<g >
<title>__kmem_cache_free (408,418,201 samples, 0.04%)</title><rect x="1027.6" y="1333" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1030.62" y="1343.5" ></text>
</g>
<g >
<title>kmalloc_size_roundup (255,861,520 samples, 0.02%)</title><rect x="311.1" y="1365" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="314.15" y="1375.5" ></text>
</g>
<g >
<title>mutex_lock (3,489,006,549 samples, 0.34%)</title><rect x="546.6" y="1381" width="3.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="549.57" y="1391.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (461,167,976 samples, 0.04%)</title><rect x="295.3" y="1317" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="298.34" y="1327.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (357,741,361 samples, 0.03%)</title><rect x="623.4" y="1461" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="626.37" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,899,646 samples, 0.04%)</title><rect x="31.5" y="101" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="111.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (3,120,718,385 samples, 0.30%)</title><rect x="483.6" y="1285" width="3.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="486.64" y="1295.5" ></text>
</g>
<g >
<title>sh (2,537,034,179 samples, 0.24%)</title><rect x="45.4" y="1605" width="2.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="48.41" y="1615.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (184,315,958 samples, 0.02%)</title><rect x="19.2" y="1397" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="22.16" y="1407.5" ></text>
</g>
<g >
<title>check_heap_object (6,963,926,560 samples, 0.67%)</title><rect x="573.4" y="1285" width="7.9" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="576.36" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1365" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="1375.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (963,220,143 samples, 0.09%)</title><rect x="623.8" y="1461" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="626.77" y="1471.5" ></text>
</g>
<g >
<title>__slab_free (306,554,330 samples, 0.03%)</title><rect x="1059.2" y="1317" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1062.23" y="1327.5" ></text>
</g>
<g >
<title>irq_exit_rcu (135,281,243 samples, 0.01%)</title><rect x="65.8" y="1397" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="68.81" y="1407.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (255,511,674 samples, 0.02%)</title><rect x="308.0" y="1349" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="310.95" y="1359.5" ></text>
</g>
<g >
<title>record__mmap_read_all (1,457,380,401 samples, 0.14%)</title><rect x="40.2" y="1557" width="1.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="43.24" y="1567.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (1,380,917,838 samples, 0.13%)</title><rect x="687.8" y="1413" width="1.6" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="690.80" y="1423.5" ></text>
</g>
<g >
<title>consume_skb (106,327,225,800 samples, 10.23%)</title><rect x="425.4" y="1381" width="120.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="428.40" y="1391.5" >consume_skb</text>
</g>
<g >
<title>__fdget (305,943,464 samples, 0.03%)</title><rect x="940.7" y="1429" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="943.72" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="325" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="335.5" ></text>
</g>
<g >
<title>__slab_free (358,050,156 samples, 0.03%)</title><rect x="431.1" y="1349" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="434.10" y="1359.5" ></text>
</g>
<g >
<title>___slab_alloc (8,274,755,241 samples, 0.80%)</title><rect x="845.4" y="1333" width="9.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="848.35" y="1343.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (409,948,262 samples, 0.04%)</title><rect x="336.3" y="1429" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="339.31" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (234,280,871,777 samples, 22.55%)</title><rect x="364.9" y="1477" width="266.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="367.94" y="1487.5" >do_syscall_64</text>
</g>
<g >
<title>pick_next_task (372,796,290 samples, 0.04%)</title><rect x="74.6" y="1445" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="77.57" y="1455.5" ></text>
</g>
<g >
<title>check_stack_object (511,271,535 samples, 0.05%)</title><rect x="581.9" y="1301" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="584.91" y="1311.5" ></text>
</g>
<g >
<title>__do_softirq (246,488,913 samples, 0.02%)</title><rect x="71.2" y="1413" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="74.24" y="1423.5" ></text>
</g>
<g >
<title>put_cpu_partial (1,073,466,696 samples, 0.10%)</title><rect x="1042.6" y="1285" width="1.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1045.56" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (93,858,678 samples, 0.01%)</title><rect x="16.2" y="1445" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.24" y="1455.5" ></text>
</g>
<g >
<title>_Fork (2,879,512,912 samples, 0.28%)</title><rect x="21.6" y="1477" width="3.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="24.65" y="1487.5" ></text>
</g>
<g >
<title>__send (247,216,367,834 samples, 23.79%)</title><rect x="636.9" y="1509" width="280.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="639.88" y="1519.5" >__send</text>
</g>
<g >
<title>cache_from_obj (307,375,802 samples, 0.03%)</title><rect x="996.1" y="1349" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="999.13" y="1359.5" ></text>
</g>
<g >
<title>kfree (30,312,886,996 samples, 2.92%)</title><rect x="472.4" y="1333" width="34.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="475.37" y="1343.5" >kf..</text>
</g>
<g >
<title>check_heap_object (204,884,288 samples, 0.02%)</title><rect x="1131.4" y="1301" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1134.37" y="1311.5" ></text>
</g>
<g >
<title>__rcu_read_lock (409,957,406 samples, 0.04%)</title><rect x="499.3" y="1269" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="502.25" y="1279.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (104,568,840 samples, 0.01%)</title><rect x="34.3" y="1509" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="37.35" y="1519.5" ></text>
</g>
<g >
<title>consume_skb (408,628,000 samples, 0.04%)</title><rect x="396.4" y="1397" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="399.45" y="1407.5" ></text>
</g>
<g >
<title>igc_clean_rx_irq (246,220,364 samples, 0.02%)</title><rect x="71.2" y="1349" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="74.24" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (931,875,708 samples, 0.09%)</title><rect x="27.5" y="1061" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.50" y="1071.5" ></text>
</g>
<g >
<title>__nss_next2 (93,858,678 samples, 0.01%)</title><rect x="16.2" y="1461" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="19.24" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="741" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="751.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (2,096,177,078 samples, 0.20%)</title><rect x="305.5" y="1333" width="2.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="308.46" y="1343.5" ></text>
</g>
<g >
<title>igc_poll (246,488,913 samples, 0.02%)</title><rect x="71.2" y="1365" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="74.24" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (303,251,031 samples, 0.03%)</title><rect x="14.6" y="1573" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.61" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="469" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="479.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (213,279,144 samples, 0.02%)</title><rect x="21.4" y="1525" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="24.36" y="1535.5" ></text>
</g>
<g >
<title>put_pid (256,127,468 samples, 0.02%)</title><rect x="1101.9" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1104.85" y="1391.5" ></text>
</g>
<g >
<title>[grep] (245,247,256 samples, 0.02%)</title><rect x="12.1" y="1509" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.12" y="1519.5" ></text>
</g>
<g >
<title>[ls] (135,157,909 samples, 0.01%)</title><rect x="18.8" y="1557" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.83" y="1567.5" ></text>
</g>
<g >
<title>__check_object_size (10,541,410,808 samples, 1.01%)</title><rect x="570.5" y="1317" width="12.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="573.51" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1429" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="1439.5" ></text>
</g>
<g >
<title>exec_mmap (3,521,587,096 samples, 0.34%)</title><rect x="34.5" y="1429" width="4.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="37.53" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4,959,684,489 samples, 0.48%)</title><rect x="983.4" y="1381" width="5.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="986.41" y="1391.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (3,521,587,096 samples, 0.34%)</title><rect x="34.5" y="1509" width="4.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="37.53" y="1519.5" ></text>
</g>
<g >
<title>sock_wfree (29,712,041,350 samples, 2.86%)</title><rect x="1062.8" y="1333" width="33.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1065.77" y="1343.5" >so..</text>
</g>
<g >
<title>_dl_catch_exception (208,244,803 samples, 0.02%)</title><rect x="15.5" y="1301" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.46" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1317" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1327.5" ></text>
</g>
<g >
<title>search_binary_handler (3,521,587,096 samples, 0.34%)</title><rect x="34.5" y="1477" width="4.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="37.53" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (709,640,099 samples, 0.07%)</title><rect x="10.8" y="1509" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.77" y="1519.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (167,646,628 samples, 0.02%)</title><rect x="64.8" y="1509" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="67.78" y="1519.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (2,402,334,341 samples, 0.23%)</title><rect x="248.3" y="1301" width="2.8" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="251.33" y="1311.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (126,494,607 samples, 0.01%)</title><rect x="62.6" y="1429" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="65.55" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (435,544,289 samples, 0.04%)</title><rect x="27.6" y="597" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.58" y="607.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (5,881,202,275 samples, 0.57%)</title><rect x="614.3" y="1429" width="6.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="617.30" y="1439.5" ></text>
</g>
<g >
<title>kfree_skbmem (26,806,868,038 samples, 2.58%)</title><rect x="994.4" y="1365" width="30.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="997.39" y="1375.5" >kf..</text>
</g>
<g >
<title>newidle_balance (371,928,595 samples, 0.04%)</title><rect x="74.6" y="1429" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="77.57" y="1439.5" ></text>
</g>
<g >
<title>_dl_catch_exception (102,657,463 samples, 0.01%)</title><rect x="15.1" y="1509" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.10" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1573" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="41.55" y="1583.5" ></text>
</g>
<g >
<title>main (1,872,374,818 samples, 0.18%)</title><rect x="46.0" y="1541" width="2.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="48.96" y="1551.5" ></text>
</g>
<g >
<title>node::Start (104,568,840 samples, 0.01%)</title><rect x="34.3" y="1541" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="37.35" y="1551.5" ></text>
</g>
<g >
<title>do_futex (127,336,580 samples, 0.01%)</title><rect x="30.3" y="1429" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="33.27" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="565" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="575.5" ></text>
</g>
<g >
<title>__rcu_read_lock (254,432,154 samples, 0.02%)</title><rect x="430.2" y="1349" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="433.23" y="1359.5" ></text>
</g>
<g >
<title>__fdget (4,860,567,378 samples, 0.47%)</title><rect x="1164.6" y="1413" width="5.5" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1167.61" y="1423.5" ></text>
</g>
<g >
<title>memset_erms (1,070,519,234 samples, 0.10%)</title><rect x="874.9" y="1349" width="1.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="877.91" y="1359.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Debounce::Debounce (141,610,561 samples, 0.01%)</title><rect x="33.5" y="1541" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="36.46" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_write (1,226,007,593 samples, 0.12%)</title><rect x="40.4" y="1413" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="43.36" y="1423.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (306,561,273 samples, 0.03%)</title><rect x="914.9" y="1429" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="917.92" y="1439.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (868,548,213 samples, 0.08%)</title><rect x="339.6" y="1461" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="342.62" y="1471.5" ></text>
</g>
<g >
<title>[bash] (391,292,523 samples, 0.04%)</title><rect x="46.9" y="1301" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="49.90" y="1311.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (512,010,402 samples, 0.05%)</title><rect x="155.2" y="1397" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="158.21" y="1407.5" ></text>
</g>
<g >
<title>poll_idle (490,430,091 samples, 0.05%)</title><rect x="63.9" y="1477" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.89" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (299,483,384 samples, 0.03%)</title><rect x="27.6" y="437" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.60" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_poll (734,623,008 samples, 0.07%)</title><rect x="39.3" y="1493" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="42.34" y="1503.5" ></text>
</g>
<g >
<title>glob_vector (423,927,742 samples, 0.04%)</title><rect x="46.2" y="1381" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="49.19" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (708,941,377 samples, 0.07%)</title><rect x="10.8" y="1493" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.77" y="1503.5" ></text>
</g>
<g >
<title>run_rebalance_domains (88,666,607 samples, 0.01%)</title><rect x="62.6" y="1397" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="65.58" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,878,970,359 samples, 0.18%)</title><rect x="62.3" y="1493" width="2.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="65.34" y="1503.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (408,551,585 samples, 0.04%)</title><rect x="1172.6" y="1445" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1175.63" y="1455.5" ></text>
</g>
<g >
<title>mod_memcg_state (1,380,883,108 samples, 0.13%)</title><rect x="267.0" y="1269" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="270.04" y="1279.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (459,199,017 samples, 0.04%)</title><rect x="836.3" y="1333" width="0.5" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="839.29" y="1343.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,317,455,353 samples, 0.32%)</title><rect x="71.2" y="1589" width="3.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="74.23" y="1599.5" ></text>
</g>
<g >
<title>__rcu_read_lock (715,562,406 samples, 0.07%)</title><rect x="294.5" y="1317" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="297.53" y="1327.5" ></text>
</g>
<g >
<title>mod_objcg_state (562,820,751 samples, 0.05%)</title><rect x="1023.9" y="1349" width="0.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1026.91" y="1359.5" ></text>
</g>
<g >
<title>___slab_alloc (3,991,444,047 samples, 0.38%)</title><rect x="800.6" y="1301" width="4.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="803.56" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (111,927,800 samples, 0.01%)</title><rect x="27.6" y="293" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.61" y="303.5" ></text>
</g>
<g >
<title>consume_skb (94,725,739,649 samples, 9.12%)</title><rect x="989.8" y="1381" width="107.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="992.80" y="1391.5" >consume_skb</text>
</g>
<g >
<title>do_sys_openat2 (211,883,653 samples, 0.02%)</title><rect x="12.1" y="1413" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="15.12" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1013" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="1023.5" ></text>
</g>
<g >
<title>uv_spawn (2,892,989,054 samples, 0.28%)</title><rect x="21.6" y="1541" width="3.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="24.64" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (303,844,549 samples, 0.03%)</title><rect x="17.7" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.65" y="1423.5" ></text>
</g>
<g >
<title>__sys_recvfrom (224,724,813,339 samples, 21.63%)</title><rect x="366.4" y="1445" width="255.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="369.40" y="1455.5" >__sys_recvfrom</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="453" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (130,803,154 samples, 0.01%)</title><rect x="12.6" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.56" y="1423.5" ></text>
</g>
<g >
<title>unmap_page_range (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1333" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="41.55" y="1343.5" ></text>
</g>
<g >
<title>v8::internal::Object::GetProperty (213,279,144 samples, 0.02%)</title><rect x="21.4" y="1509" width="0.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="24.36" y="1519.5" ></text>
</g>
<g >
<title>put_cpu_partial (255,201,130 samples, 0.02%)</title><rect x="287.6" y="1301" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="290.56" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (415,137,687 samples, 0.04%)</title><rect x="31.0" y="117" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="127.5" ></text>
</g>
<g >
<title>poll_idle (110,695,160 samples, 0.01%)</title><rect x="44.6" y="1477" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="47.62" y="1487.5" ></text>
</g>
<g >
<title>put_cpu_partial (1,429,966,364 samples, 0.14%)</title><rect x="487.2" y="1285" width="1.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="490.18" y="1295.5" ></text>
</g>
<g >
<title>consume_stock (459,573,885 samples, 0.04%)</title><rect x="269.7" y="1269" width="0.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="272.71" y="1279.5" ></text>
</g>
<g >
<title>kmalloc_slab (256,329,288 samples, 0.02%)</title><rect x="277.2" y="1349" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="280.21" y="1359.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,687,396,594 samples, 0.16%)</title><rect x="805.6" y="1301" width="1.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="808.62" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7,162,930,286 samples, 0.69%)</title><rect x="555.3" y="1365" width="8.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="558.29" y="1375.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (39,598,822,536 samples, 3.81%)</title><rect x="1117.4" y="1349" width="45.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1120.43" y="1359.5" >__sk..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1493" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="1503.5" ></text>
</g>
<g >
<title>consume_skb (767,377,281 samples, 0.07%)</title><rect x="966.3" y="1397" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="969.33" y="1407.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (356,395,366 samples, 0.03%)</title><rect x="631.4" y="1477" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="634.37" y="1487.5" ></text>
</g>
<g >
<title>readdir64 (183,085,058 samples, 0.02%)</title><rect x="46.4" y="1365" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="49.42" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (236,786,617,429 samples, 22.79%)</title><rect x="362.8" y="1493" width="269.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="365.85" y="1503.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>[bash] (127,968,918 samples, 0.01%)</title><rect x="46.9" y="1205" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="49.91" y="1215.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (3,272,649,371 samples, 0.31%)</title><rect x="500.5" y="1269" width="3.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="503.47" y="1279.5" ></text>
</g>
<g >
<title>__build_skb_around (1,229,417,855 samples, 0.12%)</title><rect x="230.6" y="1349" width="1.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="233.55" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,336,354,418 samples, 0.22%)</title><rect x="62.3" y="1525" width="2.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="65.32" y="1535.5" ></text>
</g>
<g >
<title>read (207,381,695 samples, 0.02%)</title><rect x="30.4" y="1557" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="33.42" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (139,363,237 samples, 0.01%)</title><rect x="11.0" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.04" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (201,319,938 samples, 0.02%)</title><rect x="45.6" y="1589" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="48.62" y="1599.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (214,589,731 samples, 0.02%)</title><rect x="38.2" y="1269" width="0.3" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="41.22" y="1279.5" ></text>
</g>
<g >
<title>open_last_lookups (211,883,653 samples, 0.02%)</title><rect x="12.1" y="1365" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="15.12" y="1375.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (358,199,324 samples, 0.03%)</title><rect x="1180.8" y="1445" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1183.82" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (669,633,343 samples, 0.06%)</title><rect x="27.5" y="757" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.55" y="767.5" ></text>
</g>
<g >
<title>execute_command_internal (107,418,781 samples, 0.01%)</title><rect x="46.8" y="1301" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="49.78" y="1311.5" ></text>
</g>
<g >
<title>proc_fill_cache (146,774,889 samples, 0.01%)</title><rect x="46.5" y="1237" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="49.46" y="1247.5" ></text>
</g>
<g >
<title>refill_obj_stock (7,262,178,584 samples, 0.70%)</title><rect x="496.2" y="1285" width="8.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="499.17" y="1295.5" ></text>
</g>
<g >
<title>memcg_account_kmem (205,009,488 samples, 0.02%)</title><rect x="307.1" y="1317" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="310.14" y="1327.5" ></text>
</g>
<g >
<title>unix_destruct_scm (33,734,365,943 samples, 3.25%)</title><rect x="507.6" y="1349" width="38.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="510.61" y="1359.5" >uni..</text>
</g>
<g >
<title>page_counter_uncharge (153,803,009 samples, 0.01%)</title><rect x="1057.6" y="1205" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1060.60" y="1215.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (194,603,604 samples, 0.02%)</title><rect x="18.6" y="1573" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="21.61" y="1583.5" ></text>
</g>
<g >
<title>worker (614,424,619 samples, 0.06%)</title><rect x="33.6" y="1557" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="36.65" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (563,268,213 samples, 0.05%)</title><rect x="653.5" y="1493" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="656.55" y="1503.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (512,259,540 samples, 0.05%)</title><rect x="1054.5" y="1269" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1057.47" y="1279.5" ></text>
</g>
<g >
<title>kmalloc_slab (102,313,410 samples, 0.01%)</title><rect x="276.3" y="1333" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="279.34" y="1343.5" ></text>
</g>
<g >
<title>mod_memcg_state (255,902,178 samples, 0.02%)</title><rect x="873.2" y="1301" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="876.17" y="1311.5" ></text>
</g>
<g >
<title>skb_set_owner_w (7,829,963,122 samples, 0.75%)</title><rect x="311.7" y="1381" width="8.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="314.73" y="1391.5" ></text>
</g>
<g >
<title>filename_lookup (339,121,774 samples, 0.03%)</title><rect x="29.5" y="1413" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="32.51" y="1423.5" ></text>
</g>
<g >
<title>[expr] (717,840,000 samples, 0.07%)</title><rect x="10.8" y="1541" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.76" y="1551.5" ></text>
</g>
<g >
<title>__rcu_read_lock (102,337,835 samples, 0.01%)</title><rect x="300.6" y="1317" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="303.63" y="1327.5" ></text>
</g>
<g >
<title>__rcu_read_lock (102,459,708 samples, 0.01%)</title><rect x="480.1" y="1301" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="483.10" y="1311.5" ></text>
</g>
<g >
<title>exec_binprm (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1493" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="41.55" y="1503.5" ></text>
</g>
<g >
<title>v8::internal::TranslatedState::Init (113,256,509 samples, 0.01%)</title><rect x="21.4" y="1429" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="24.41" y="1439.5" ></text>
</g>
<g >
<title>start_secondary (3,067,203,422 samples, 0.30%)</title><rect x="62.2" y="1573" width="3.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="65.23" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1189" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1199.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (141,142,021 samples, 0.01%)</title><rect x="15.5" y="1189" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="18.46" y="1199.5" ></text>
</g>
<g >
<title>__entry_text_start (8,798,379,892 samples, 0.85%)</title><rect x="88.9" y="1493" width="10.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="91.87" y="1503.5" ></text>
</g>
<g >
<title>main (971,683,626,091 samples, 93.52%)</title><rect x="79.7" y="1541" width="1103.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="82.69" y="1551.5" >main</text>
</g>
<g >
<title>should_failslab (205,004,298 samples, 0.02%)</title><rect x="876.4" y="1349" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="879.42" y="1359.5" ></text>
</g>
<g >
<title>[bash] (190,038,871 samples, 0.02%)</title><rect x="47.4" y="1365" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="50.38" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (399,062,300 samples, 0.04%)</title><rect x="18.6" y="1589" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="21.57" y="1599.5" ></text>
</g>
<g >
<title>generic_write_end (231,591,398 samples, 0.02%)</title><rect x="41.4" y="1237" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="44.42" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (256,185,941 samples, 0.02%)</title><rect x="714.8" y="1397" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="717.83" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1173" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="1183.5" ></text>
</g>
<g >
<title>_dl_catch_exception (215,938,567 samples, 0.02%)</title><rect x="15.5" y="1349" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.45" y="1359.5" ></text>
</g>
<g >
<title>pagecache_get_page (353,796,170 samples, 0.03%)</title><rect x="41.0" y="1221" width="0.4" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="44.01" y="1231.5" ></text>
</g>
<g >
<title>__virt_addr_valid (409,946,743 samples, 0.04%)</title><rect x="161.0" y="1349" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="163.96" y="1359.5" ></text>
</g>
<g >
<title>check_stack_object (461,051,136 samples, 0.04%)</title><rect x="1131.6" y="1301" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1134.60" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1477" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (511,906,848 samples, 0.05%)</title><rect x="101.1" y="1477" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="104.07" y="1487.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1317" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="41.55" y="1327.5" ></text>
</g>
<g >
<title>kmalloc_slab (511,627,837 samples, 0.05%)</title><rect x="276.6" y="1333" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="279.63" y="1343.5" ></text>
</g>
<g >
<title>__libc_fork (117,295,737 samples, 0.01%)</title><rect x="47.1" y="1189" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="50.07" y="1199.5" ></text>
</g>
<g >
<title>[bash] (190,038,871 samples, 0.02%)</title><rect x="47.4" y="1397" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="50.38" y="1407.5" ></text>
</g>
<g >
<title>__alloc_skb (255,735,607 samples, 0.02%)</title><rect x="208.2" y="1381" width="0.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="211.19" y="1391.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (204,757,376 samples, 0.02%)</title><rect x="995.3" y="1349" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="998.32" y="1359.5" ></text>
</g>
<g >
<title>__sys_sendto (665,541,776 samples, 0.06%)</title><rect x="657.8" y="1461" width="0.7" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="660.79" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_clone (2,876,616,044 samples, 0.28%)</title><rect x="21.6" y="1429" width="3.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="24.65" y="1439.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast (141,539,163 samples, 0.01%)</title><rect x="30.3" y="1493" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="33.26" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1349" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1359.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (102,436,724 samples, 0.01%)</title><rect x="1130.7" y="1269" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1133.73" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="197" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,448,958,214 samples, 0.14%)</title><rect x="27.5" y="1333" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.47" y="1343.5" ></text>
</g>
<g >
<title>cfree (157,756,738 samples, 0.02%)</title><rect x="31.0" y="69" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="34.05" y="79.5" ></text>
</g>
<g >
<title>__check_object_size (458,908,734 samples, 0.04%)</title><rect x="710.9" y="1397" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="713.94" y="1407.5" ></text>
</g>
<g >
<title>__cond_resched (256,196,193 samples, 0.02%)</title><rect x="418.2" y="1381" width="0.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="421.20" y="1391.5" ></text>
</g>
<g >
<title>uv__io_poll (510,560,998 samples, 0.05%)</title><rect x="32.2" y="1573" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="35.16" y="1583.5" ></text>
</g>
<g >
<title>_compound_head (865,021,261 samples, 0.08%)</title><rect x="22.8" y="1269" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="25.80" y="1279.5" ></text>
</g>
<g >
<title>consume_obj_stock (1,382,515,575 samples, 0.13%)</title><rect x="265.1" y="1285" width="1.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="268.12" y="1295.5" ></text>
</g>
<g >
<title>kthread (317,866,325 samples, 0.03%)</title><rect x="61.9" y="1573" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="64.87" y="1583.5" ></text>
</g>
<g >
<title>page_remove_rmap (366,796,570 samples, 0.04%)</title><rect x="37.8" y="1285" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="40.80" y="1295.5" ></text>
</g>
<g >
<title>copy_present_pte (465,558,910 samples, 0.04%)</title><rect x="23.8" y="1269" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="26.78" y="1279.5" ></text>
</g>
<g >
<title>_dl_catch_error (215,938,567 samples, 0.02%)</title><rect x="15.5" y="1365" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="18.45" y="1375.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (2,354,268,306 samples, 0.23%)</title><rect x="809.9" y="1301" width="2.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="812.86" y="1311.5" ></text>
</g>
<g >
<title>__fget_light (2,758,216,795 samples, 0.27%)</title><rect x="902.2" y="1397" width="3.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="905.21" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (313,279,238 samples, 0.03%)</title><rect x="12.4" y="1461" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.40" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1445" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1455.5" ></text>
</g>
<g >
<title>mas_store (126,049,012 samples, 0.01%)</title><rect x="24.4" y="1333" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="27.44" y="1343.5" ></text>
</g>
<g >
<title>mod_memcg_state (1,021,873,879 samples, 0.10%)</title><rect x="501.6" y="1237" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="504.58" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (678,574,211 samples, 0.07%)</title><rect x="27.5" y="789" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.54" y="799.5" ></text>
</g>
<g >
<title>cpuidle_enter (536,580,256 samples, 0.05%)</title><rect x="65.7" y="1461" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="68.74" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (217,189,442,312 samples, 20.90%)</title><rect x="934.6" y="1477" width="246.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="937.56" y="1487.5" >do_syscall_64</text>
</g>
<g >
<title>__libc_start_main (1,279,634,806 samples, 0.12%)</title><rect x="49.0" y="1573" width="1.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="52.03" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (919,336,743 samples, 0.09%)</title><rect x="27.5" y="1013" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.52" y="1023.5" ></text>
</g>
<g >
<title>memcg_account_kmem (255,902,178 samples, 0.02%)</title><rect x="873.2" y="1317" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="876.17" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,876,616,044 samples, 0.28%)</title><rect x="21.6" y="1461" width="3.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="24.65" y="1471.5" ></text>
</g>
<g >
<title>common_interrupt (246,488,913 samples, 0.02%)</title><rect x="71.2" y="1461" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="74.24" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (189,248,991 samples, 0.02%)</title><rect x="30.4" y="1525" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="33.44" y="1535.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (614,289,694 samples, 0.06%)</title><rect x="791.6" y="1349" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="794.56" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (6,586,286,083 samples, 0.63%)</title><rect x="25.3" y="1589" width="7.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="28.27" y="1599.5" ></text>
</g>
<g >
<title>__switch_to_asm (557,408,985 samples, 0.05%)</title><rect x="70.5" y="1589" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="73.49" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,460,687,799 samples, 0.14%)</title><rect x="27.5" y="1365" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.45" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (971,683,626,091 samples, 93.52%)</title><rect x="79.7" y="1557" width="1103.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="82.69" y="1567.5" >[libc.so.6]</text>
</g>
<g >
<title>skb_put (459,996,368 samples, 0.04%)</title><rect x="131.6" y="1413" width="0.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="134.56" y="1423.5" ></text>
</g>
<g >
<title>page_counter_try_charge (102,069,209 samples, 0.01%)</title><rect x="874.1" y="1301" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="877.10" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1557" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1173" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1183.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (95,556,568 samples, 0.01%)</title><rect x="45.5" y="1573" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="48.50" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (256,094,212 samples, 0.02%)</title><rect x="989.5" y="1381" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="992.51" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (362,937,663 samples, 0.03%)</title><rect x="47.6" y="1413" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="50.60" y="1423.5" ></text>
</g>
<g >
<title>begin_new_exec (3,521,587,096 samples, 0.34%)</title><rect x="34.5" y="1445" width="4.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="37.53" y="1455.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (408,739,960 samples, 0.04%)</title><rect x="310.1" y="1349" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="313.10" y="1359.5" ></text>
</g>
<g >
<title>arch_call_rest_init (266,781,604 samples, 0.03%)</title><rect x="45.0" y="1541" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="47.97" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (222,618,586 samples, 0.02%)</title><rect x="16.8" y="1477" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="19.80" y="1487.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (357,387,628 samples, 0.03%)</title><rect x="916.3" y="1477" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="919.32" y="1487.5" ></text>
</g>
<g >
<title>proc_reg_read (437,355,770 samples, 0.04%)</title><rect x="33.7" y="1413" width="0.5" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="36.73" y="1423.5" ></text>
</g>
<g >
<title>[grep] (245,247,256 samples, 0.02%)</title><rect x="12.1" y="1525" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.12" y="1535.5" ></text>
</g>
<g >
<title>refill_stock (204,654,570 samples, 0.02%)</title><rect x="504.2" y="1269" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="507.19" y="1279.5" ></text>
</g>
<g >
<title>check_heap_object (4,553,023,483 samples, 0.44%)</title><rect x="161.4" y="1349" width="5.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="164.42" y="1359.5" ></text>
</g>
<g >
<title>execute_command (745,612,556 samples, 0.07%)</title><rect x="46.8" y="1461" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="49.75" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (102,094,059 samples, 0.01%)</title><rect x="11.8" y="1493" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.82" y="1503.5" ></text>
</g>
<g >
<title>skb_copy_datagram_from_iter (18,205,775,042 samples, 1.75%)</title><rect x="156.3" y="1397" width="20.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="159.31" y="1407.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (102,163,737 samples, 0.01%)</title><rect x="1050.6" y="1253" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1053.57" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (819,902,917 samples, 0.08%)</title><rect x="655.9" y="1477" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="658.93" y="1487.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (306,279,043 samples, 0.03%)</title><rect x="860.0" y="1317" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="862.99" y="1327.5" ></text>
</g>
<g >
<title>vfs_write (1,206,895,083 samples, 0.12%)</title><rect x="40.4" y="1381" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="43.38" y="1391.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (459,767,960 samples, 0.04%)</title><rect x="338.1" y="1445" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="341.05" y="1455.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (937,302,636 samples, 0.09%)</title><rect x="65.7" y="1573" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="68.71" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (215,938,567 samples, 0.02%)</title><rect x="15.5" y="1413" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.45" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (435,544,289 samples, 0.04%)</title><rect x="27.6" y="613" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.58" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="245" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="255.5" ></text>
</g>
<g >
<title>kworker/dying (1,491,508,024 samples, 0.14%)</title><rect x="12.9" y="1605" width="1.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="15.92" y="1615.5" ></text>
</g>
<g >
<title>ion (1,266,479,441 samples, 0.12%)</title><rect x="40.3" y="1477" width="1.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="43.34" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (358,719,693 samples, 0.03%)</title><rect x="127.6" y="1413" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="130.56" y="1423.5" ></text>
</g>
<g >
<title>thread_group_cputime_adjusted (89,561,692 samples, 0.01%)</title><rect x="47.5" y="1077" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="50.49" y="1087.5" ></text>
</g>
<g >
<title>[bash] (694,705,501 samples, 0.07%)</title><rect x="46.0" y="1461" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="48.96" y="1471.5" ></text>
</g>
<g >
<title>read (91,369,229 samples, 0.01%)</title><rect x="47.5" y="1285" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="50.49" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,207,572,037 samples, 0.12%)</title><rect x="27.5" y="1237" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.48" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (409,393,953 samples, 0.04%)</title><rect x="1010.1" y="1285" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1013.08" y="1295.5" ></text>
</g>
<g >
<title>DirTree::update (1,444,642,771 samples, 0.14%)</title><rect x="25.4" y="1525" width="1.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="28.42" y="1535.5" ></text>
</g>
<g >
<title>vfs_iter_write (921,667,358 samples, 0.09%)</title><rect x="40.7" y="1349" width="1.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="43.68" y="1359.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (612,247,489 samples, 0.06%)</title><rect x="338.9" y="1461" width="0.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="341.93" y="1471.5" ></text>
</g>
<g >
<title>mod_memcg_state (358,583,093 samples, 0.03%)</title><rect x="1022.7" y="1269" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1025.74" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1093" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="901" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="911.5" ></text>
</g>
<g >
<title>command_substitute (388,027,140 samples, 0.04%)</title><rect x="46.9" y="1221" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="49.91" y="1231.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (234,016,923 samples, 0.02%)</title><rect x="15.0" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="17.99" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1269" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,779,290,401 samples, 0.17%)</title><rect x="27.3" y="1477" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.32" y="1487.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (745,832,957 samples, 0.07%)</title><rect x="44.4" y="1589" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="47.42" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,876,616,044 samples, 0.28%)</title><rect x="21.6" y="1445" width="3.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="24.65" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="165" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="175.5" ></text>
</g>
<g >
<title>_nss_systemd_getgrgid_r (282,435,070 samples, 0.03%)</title><rect x="15.7" y="1445" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="18.70" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (2,361,635,032 samples, 0.23%)</title><rect x="39.2" y="1589" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="42.23" y="1599.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (2,442,889,849 samples, 0.24%)</title><rect x="71.6" y="1477" width="2.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="74.57" y="1487.5" ></text>
</g>
<g >
<title>_start (104,568,840 samples, 0.01%)</title><rect x="34.3" y="1589" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="37.35" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (147,657,240 samples, 0.01%)</title><rect x="32.2" y="1509" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="35.18" y="1519.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1,226,634,917 samples, 0.12%)</title><rect x="1129.3" y="1269" width="1.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1132.34" y="1279.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (208,244,803 samples, 0.02%)</title><rect x="15.5" y="1253" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="18.46" y="1263.5" ></text>
</g>
<g >
<title>skb_queue_tail (254,770,971 samples, 0.02%)</title><rect x="690.3" y="1413" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="693.31" y="1423.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (125,237,860 samples, 0.01%)</title><rect x="41.5" y="1189" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="44.54" y="1199.5" ></text>
</g>
<g >
<title>__fget_light (358,035,892 samples, 0.03%)</title><rect x="905.3" y="1413" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="908.34" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (263,101,092 samples, 0.03%)</title><rect x="16.4" y="1477" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="19.37" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (432,056,761 samples, 0.04%)</title><rect x="47.6" y="1445" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="50.60" y="1455.5" ></text>
</g>
<g >
<title>wb_workfn (125,560,094 samples, 0.01%)</title><rect x="62.0" y="1525" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="65.03" y="1535.5" ></text>
</g>
<g >
<title>_copy_to_iter (611,631,715 samples, 0.06%)</title><rect x="1119.5" y="1333" width="0.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1122.52" y="1343.5" ></text>
</g>
<g >
<title>setlocale (709,640,099 samples, 0.07%)</title><rect x="10.8" y="1525" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.77" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (268,130,245 samples, 0.03%)</title><rect x="12.4" y="1429" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.44" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1045" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1381" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1391.5" ></text>
</g>
<g >
<title>load_elf_binary (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1461" width="0.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="41.55" y="1471.5" ></text>
</g>
<g >
<title>fgets_unlocked (97,302,700 samples, 0.01%)</title><rect x="18.4" y="1461" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="21.37" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,840,137,735 samples, 0.18%)</title><rect x="1183.3" y="1589" width="2.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1186.26" y="1599.5" ></text>
</g>
<g >
<title>do_sys_poll (432,107,344 samples, 0.04%)</title><rect x="32.8" y="1445" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="35.83" y="1455.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (2,876,616,044 samples, 0.28%)</title><rect x="21.6" y="1365" width="3.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.65" y="1375.5" ></text>
</g>
<g >
<title>dequeue_task_fair (98,749,733 samples, 0.01%)</title><rect x="39.8" y="1365" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="42.82" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (856,553,194 samples, 0.08%)</title><rect x="27.5" y="949" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.53" y="959.5" ></text>
</g>
<g >
<title>lookup_fast (90,335,683 samples, 0.01%)</title><rect x="16.5" y="1349" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="19.51" y="1359.5" ></text>
</g>
<g >
<title>__rcu_read_lock (614,326,484 samples, 0.06%)</title><rect x="811.5" y="1285" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="814.48" y="1295.5" ></text>
</g>
<g >
<title>__unfreeze_partials (1,072,853,348 samples, 0.10%)</title><rect x="487.6" y="1269" width="1.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="490.59" y="1279.5" ></text>
</g>
<g >
<title>send_to_group (148,395,374 samples, 0.01%)</title><rect x="40.4" y="1333" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="43.44" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="213" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="223.5" ></text>
</g>
<g >
<title>[anon] (891,938,255 samples, 0.09%)</title><rect x="20.1" y="1589" width="1.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="23.07" y="1599.5" ></text>
</g>
<g >
<title>malloc (104,252,785 samples, 0.01%)</title><rect x="31.2" y="53" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="34.23" y="63.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (3,132,060,741 samples, 0.30%)</title><rect x="858.1" y="1333" width="3.5" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="861.06" y="1343.5" ></text>
</g>
<g >
<title>try_charge_memcg (188,796,342 samples, 0.02%)</title><rect x="10.3" y="1429" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="13.34" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="837" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="847.5" ></text>
</g>
<g >
<title>process_one_work (168,839,049 samples, 0.02%)</title><rect x="62.0" y="1541" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="64.99" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (654,870,444 samples, 0.06%)</title><rect x="10.8" y="1477" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.77" y="1487.5" ></text>
</g>
<g >
<title>schedule (195,344,821 samples, 0.02%)</title><rect x="33.0" y="1381" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="36.01" y="1391.5" ></text>
</g>
<g >
<title>[sleep] (1,277,320,037 samples, 0.12%)</title><rect x="49.0" y="1541" width="1.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="52.03" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="693" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="703.5" ></text>
</g>
<g >
<title>menu_select (227,320,031 samples, 0.02%)</title><rect x="64.5" y="1493" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="67.51" y="1503.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (2,878,618,159 samples, 0.28%)</title><rect x="35.3" y="1317" width="3.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="38.26" y="1327.5" ></text>
</g>
<g >
<title>bprm_execve (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1525" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="41.55" y="1535.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (6,191,528,161 samples, 0.60%)</title><rect x="263.6" y="1301" width="7.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="266.55" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="357" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1349" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1359.5" ></text>
</g>
<g >
<title>unix_scm_to_skb (1,331,179,494 samples, 0.13%)</title><rect x="328.9" y="1397" width="1.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="331.87" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (794,946,465 samples, 0.08%)</title><rect x="39.3" y="1525" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="42.32" y="1535.5" ></text>
</g>
<g >
<title>__open64_nocancel (103,389,516 samples, 0.01%)</title><rect x="46.3" y="1349" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="49.31" y="1359.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (899,903,158 samples, 0.09%)</title><rect x="40.7" y="1285" width="1.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="43.68" y="1295.5" ></text>
</g>
<g >
<title>unix_write_space (4,241,657,716 samples, 0.41%)</title><rect x="1091.7" y="1317" width="4.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1094.70" y="1327.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (201,319,938 samples, 0.02%)</title><rect x="45.6" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="48.62" y="1567.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (6,191,161,984 samples, 0.60%)</title><rect x="1163.4" y="1429" width="7.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1166.45" y="1439.5" ></text>
</g>
<g >
<title>expand_string_assignment (391,080,291 samples, 0.04%)</title><rect x="46.9" y="1253" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="49.90" y="1263.5" ></text>
</g>
<g >
<title>wait_consider_task (89,561,692 samples, 0.01%)</title><rect x="47.5" y="1109" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="50.49" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,899,646 samples, 0.04%)</title><rect x="31.5" y="117" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="127.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (307,230,007 samples, 0.03%)</title><rect x="275.1" y="1317" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="278.06" y="1327.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (250,386,681 samples, 0.02%)</title><rect x="48.7" y="1461" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="51.74" y="1471.5" ></text>
</g>
<g >
<title>refill_stock (612,005,764 samples, 0.06%)</title><rect x="1057.1" y="1253" width="0.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1060.08" y="1263.5" ></text>
</g>
<g >
<title>child (1,381,201,579 samples, 0.13%)</title><rect x="75.5" y="1573" width="1.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="78.45" y="1583.5" ></text>
</g>
<g >
<title>__virt_addr_valid (511,836,345 samples, 0.05%)</title><rect x="572.8" y="1285" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="575.78" y="1295.5" ></text>
</g>
<g >
<title>__mmput (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1397" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="41.55" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,090,229,199 samples, 0.10%)</title><rect x="17.1" y="1461" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.13" y="1471.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (461,044,605 samples, 0.04%)</title><rect x="688.8" y="1397" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="691.85" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (459,659,407 samples, 0.04%)</title><rect x="362.3" y="1493" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="365.33" y="1503.5" ></text>
</g>
<g >
<title>cpuidle_enter (99,587,336 samples, 0.01%)</title><rect x="45.0" y="1461" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="47.97" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (488,793,405 samples, 0.05%)</title><rect x="33.7" y="1477" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="36.67" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (222,618,586 samples, 0.02%)</title><rect x="16.8" y="1461" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="19.80" y="1471.5" ></text>
</g>
<g >
<title>put_cpu_partial (358,562,484 samples, 0.03%)</title><rect x="804.7" y="1269" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="807.69" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,011,045,718 samples, 0.10%)</title><rect x="27.5" y="1093" width="1.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.50" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="645" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="655.5" ></text>
</g>
<g >
<title>skb_release_head_state (34,449,199,443 samples, 3.32%)</title><rect x="506.8" y="1365" width="39.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="509.80" y="1375.5" >skb..</text>
</g>
<g >
<title>flush_smp_call_function_queue (105,173,995 samples, 0.01%)</title><rect x="66.5" y="1477" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="69.50" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="805" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="815.5" ></text>
</g>
<g >
<title>[ls] (745,264,192 samples, 0.07%)</title><rect x="15.4" y="1493" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="18.38" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (231,159,506,537 samples, 22.25%)</title><rect x="654.2" y="1493" width="262.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="657.19" y="1503.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__slab_free (512,532,325 samples, 0.05%)</title><rect x="995.6" y="1349" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="998.55" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (93,858,678 samples, 0.01%)</title><rect x="16.2" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.24" y="1439.5" ></text>
</g>
<g >
<title>__slab_free (8,336,917,616 samples, 0.80%)</title><rect x="442.4" y="1333" width="9.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="445.42" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (215,938,567 samples, 0.02%)</title><rect x="15.5" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.45" y="1391.5" ></text>
</g>
<g >
<title>zap_pte_range (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1301" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="41.55" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="597" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1333" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="1343.5" ></text>
</g>
<g >
<title>psi_task_change (88,482,045 samples, 0.01%)</title><rect x="45.1" y="1397" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="48.13" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (89,561,692 samples, 0.01%)</title><rect x="47.5" y="1269" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="50.49" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (97,964,214 samples, 0.01%)</title><rect x="28.7" y="1189" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="31.74" y="1199.5" ></text>
</g>
<g >
<title>getgrgid (498,373,637 samples, 0.05%)</title><rect x="15.5" y="1477" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="18.45" y="1487.5" ></text>
</g>
<g >
<title>consume_stock (102,487,794 samples, 0.01%)</title><rect x="266.7" y="1285" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="269.69" y="1295.5" ></text>
</g>
<g >
<title>v8::base::Time::Now (544,278,896 samples, 0.05%)</title><rect x="19.4" y="1573" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="22.40" y="1583.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (819,455,205 samples, 0.08%)</title><rect x="1022.4" y="1301" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1025.39" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1045" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1055.5" ></text>
</g>
<g >
<title>check_heap_object (5,729,300,241 samples, 0.55%)</title><rect x="721.5" y="1349" width="6.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="724.50" y="1359.5" ></text>
</g>
<g >
<title>__sys_recvfrom (204,459,710 samples, 0.02%)</title><rect x="366.2" y="1461" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="369.16" y="1471.5" ></text>
</g>
<g >
<title>page_counter_try_charge (307,418,358 samples, 0.03%)</title><rect x="270.2" y="1269" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="273.23" y="1279.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (613,416,298 samples, 0.06%)</title><rect x="463.0" y="1317" width="0.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="465.97" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="517" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="527.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (4,554,810,001 samples, 0.44%)</title><rect x="331.1" y="1429" width="5.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="334.14" y="1439.5" ></text>
</g>
<g >
<title>pick_next_task (90,633,027 samples, 0.01%)</title><rect x="65.3" y="1493" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="68.31" y="1503.5" ></text>
</g>
<g >
<title>do_idle (2,867,693,174 samples, 0.28%)</title><rect x="71.2" y="1541" width="3.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="74.23" y="1551.5" ></text>
</g>
<g >
<title>handle_mm_fault (202,868,814 samples, 0.02%)</title><rect x="10.3" y="1525" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.33" y="1535.5" ></text>
</g>
<g >
<title>do_mas_munmap (140,153,811 samples, 0.01%)</title><rect x="48.8" y="1317" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="51.76" y="1327.5" ></text>
</g>
<g >
<title>__cond_resched (256,262,441 samples, 0.02%)</title><rect x="151.9" y="1397" width="0.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="154.89" y="1407.5" ></text>
</g>
<g >
<title>__check_heap_object (459,440,360 samples, 0.04%)</title><rect x="572.3" y="1285" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="575.25" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_execve (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1557" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="41.55" y="1567.5" ></text>
</g>
<g >
<title>__check_object_size (8,895,599,546 samples, 0.86%)</title><rect x="158.4" y="1381" width="10.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="161.41" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (309,435,202 samples, 0.03%)</title><rect x="27.6" y="485" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.59" y="495.5" ></text>
</g>
<g >
<title>mod_objcg_state (562,409,783 samples, 0.05%)</title><rect x="468.1" y="1349" width="0.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="471.08" y="1359.5" ></text>
</g>
<g >
<title>get_page_from_freelist (97,317,262 samples, 0.01%)</title><rect x="22.1" y="1237" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="25.10" y="1247.5" ></text>
</g>
<g >
<title>__kmem_cache_free (27,247,281,519 samples, 2.62%)</title><rect x="473.9" y="1317" width="31.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="476.94" y="1327.5" >__..</text>
</g>
<g >
<title>skb_release_head_state (357,356,866 samples, 0.03%)</title><rect x="553.5" y="1381" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="556.49" y="1391.5" ></text>
</g>
<g >
<title>tcp_seq_next (153,826,116 samples, 0.01%)</title><rect x="33.7" y="1365" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="36.73" y="1375.5" ></text>
</g>
<g >
<title>Glob::isIgnored (1,991,846,934 samples, 0.19%)</title><rect x="27.1" y="1509" width="2.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="30.09" y="1519.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (306,644,705 samples, 0.03%)</title><rect x="377.0" y="1413" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="380.04" y="1423.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (102,531,530 samples, 0.01%)</title><rect x="550.5" y="1381" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="553.53" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (91,230,885 samples, 0.01%)</title><rect x="11.8" y="1445" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.82" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (794,330,381 samples, 0.08%)</title><rect x="27.5" y="917" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.53" y="927.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (401,735,968 samples, 0.04%)</title><rect x="75.0" y="1589" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="77.99" y="1599.5" ></text>
</g>
<g >
<title>__mmput (233,413,133 samples, 0.02%)</title><rect x="19.1" y="1477" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="22.11" y="1487.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (144,170,371 samples, 0.01%)</title><rect x="48.8" y="1381" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="51.76" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (368,877,344 samples, 0.04%)</title><rect x="31.0" y="85" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="34.05" y="95.5" ></text>
</g>
<g >
<title>start_secondary (274,712,029 samples, 0.03%)</title><rect x="14.2" y="1573" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="17.24" y="1583.5" ></text>
</g>
<g >
<title>skb_queue_tail (24,962,774,604 samples, 2.40%)</title><rect x="177.0" y="1397" width="28.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="179.99" y="1407.5" >sk..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (102,094,059 samples, 0.01%)</title><rect x="11.8" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.82" y="1487.5" ></text>
</g>
<g >
<title>[bash] (89,561,692 samples, 0.01%)</title><rect x="47.5" y="1237" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="50.49" y="1247.5" ></text>
</g>
<g >
<title>___slab_alloc (2,815,576,536 samples, 0.27%)</title><rect x="284.7" y="1333" width="3.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="287.65" y="1343.5" ></text>
</g>
<g >
<title>kfree_skbmem (34,705,198,014 samples, 3.34%)</title><rect x="429.8" y="1365" width="39.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="432.82" y="1375.5" >kfr..</text>
</g>
<g >
<title>page_counter_try_charge (305,526,461 samples, 0.03%)</title><rect x="830.5" y="1269" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="833.49" y="1279.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (912,011,128 samples, 0.09%)</title><rect x="40.7" y="1317" width="1.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="43.68" y="1327.5" ></text>
</g>
<g >
<title>__build_skb_around (410,644,662 samples, 0.04%)</title><rect x="876.6" y="1365" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="879.65" y="1375.5" ></text>
</g>
<g >
<title>shell_glob_filename (466,167,804 samples, 0.04%)</title><rect x="46.1" y="1413" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="49.15" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1,074,731,752 samples, 0.10%)</title><rect x="1114.1" y="1365" width="1.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1117.12" y="1375.5" ></text>
</g>
<g >
<title>perf_poll (212,424,019 samples, 0.02%)</title><rect x="39.6" y="1445" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="42.56" y="1455.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (460,972,108 samples, 0.04%)</title><rect x="152.7" y="1397" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="155.65" y="1407.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (143,104,018 samples, 0.01%)</title><rect x="30.3" y="1541" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="33.25" y="1551.5" ></text>
</g>
<g >
<title>v8::internal::TranslatedState::TranslatedState (113,256,509 samples, 0.01%)</title><rect x="21.4" y="1445" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="24.41" y="1455.5" ></text>
</g>
<g >
<title>ovl_permission (137,135,713 samples, 0.01%)</title><rect x="29.6" y="1349" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="32.60" y="1359.5" ></text>
</g>
<g >
<title>__do_sys_newstat (503,877,476 samples, 0.05%)</title><rect x="29.4" y="1461" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="32.39" y="1471.5" ></text>
</g>
<g >
<title>mod_memcg_state (205,009,488 samples, 0.02%)</title><rect x="307.1" y="1301" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="310.14" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,857,784,714 samples, 0.28%)</title><rect x="15.3" y="1557" width="3.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.32" y="1567.5" ></text>
</g>
<g >
<title>path_lookupat (325,568,053 samples, 0.03%)</title><rect x="29.5" y="1397" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="32.52" y="1407.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (511,669,613 samples, 0.05%)</title><rect x="1182.3" y="1493" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1185.33" y="1503.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (204,863,104 samples, 0.02%)</title><rect x="154.0" y="1381" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="156.99" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,104,803,874 samples, 0.11%)</title><rect x="27.5" y="1141" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.49" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (792,193,706 samples, 0.08%)</title><rect x="27.5" y="901" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.54" y="911.5" ></text>
</g>
<g >
<title>uv__async_io (203,568,699 samples, 0.02%)</title><rect x="32.3" y="1557" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="35.35" y="1567.5" ></text>
</g>
<g >
<title>__build_skb_around (1,022,929,584 samples, 0.10%)</title><rect x="789.9" y="1349" width="1.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="792.93" y="1359.5" ></text>
</g>
<g >
<title>put_cpu_partial (920,446,384 samples, 0.09%)</title><rect x="1009.6" y="1317" width="1.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1012.55" y="1327.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (461,365,245 samples, 0.04%)</title><rect x="917.1" y="1493" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="920.13" y="1503.5" ></text>
</g>
<g >
<title>__fdget (358,576,103 samples, 0.03%)</title><rect x="662.2" y="1429" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="665.20" y="1439.5" ></text>
</g>
<g >
<title>__cond_resched (152,470,835 samples, 0.01%)</title><rect x="232.0" y="1349" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="234.95" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (307,044,903 samples, 0.03%)</title><rect x="686.5" y="1413" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="689.47" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1381" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1391.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (459,251,715 samples, 0.04%)</title><rect x="348.2" y="1493" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="351.22" y="1503.5" ></text>
</g>
<g >
<title>node::SpinEventLoop (104,568,840 samples, 0.01%)</title><rect x="34.3" y="1493" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="37.35" y="1503.5" ></text>
</g>
<g >
<title>exit_mmap (233,413,133 samples, 0.02%)</title><rect x="19.1" y="1461" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="22.11" y="1471.5" ></text>
</g>
<g >
<title>asm_common_interrupt (246,488,913 samples, 0.02%)</title><rect x="71.2" y="1477" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="74.24" y="1487.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (22,203,378,098 samples, 2.14%)</title><rect x="179.3" y="1365" width="25.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="182.31" y="1375.5" >_..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (460,866,134 samples, 0.04%)</title><rect x="1181.2" y="1477" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1184.23" y="1487.5" ></text>
</g>
<g >
<title>established_get_first (180,148,225 samples, 0.02%)</title><rect x="34.0" y="1317" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="37.00" y="1327.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (460,206,455 samples, 0.04%)</title><rect x="870.1" y="1285" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="873.15" y="1295.5" ></text>
</g>
<g >
<title>consume_obj_stock (307,031,215 samples, 0.03%)</title><rect x="809.5" y="1301" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="812.51" y="1311.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (152,856,189 samples, 0.01%)</title><rect x="630.4" y="1429" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="633.39" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="709" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="719.5" ></text>
</g>
<g >
<title>statx (263,101,092 samples, 0.03%)</title><rect x="16.4" y="1493" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="19.37" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (221,564,238 samples, 0.02%)</title><rect x="48.3" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="51.29" y="1583.5" ></text>
</g>
<g >
<title>unmap_vmas (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1365" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="41.55" y="1375.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (306,726,393 samples, 0.03%)</title><rect x="966.0" y="1397" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="968.98" y="1407.5" ></text>
</g>
<g >
<title>consume_obj_stock (358,837,414 samples, 0.03%)</title><rect x="247.9" y="1301" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="250.92" y="1311.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (239,252,240 samples, 0.02%)</title><rect x="62.4" y="1461" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="65.44" y="1471.5" ></text>
</g>
<g >
<title>recv (510,383,045 samples, 0.05%)</title><rect x="79.1" y="1573" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="82.11" y="1583.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (99,999,627 samples, 0.01%)</title><rect x="41.1" y="1157" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="44.09" y="1167.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (3,580,077,673 samples, 0.34%)</title><rect x="463.7" y="1333" width="4.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="466.66" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="181" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="191.5" ></text>
</g>
<g >
<title>__pmd_alloc (212,254,902 samples, 0.02%)</title><rect x="22.0" y="1285" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="25.00" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,361,986,105 samples, 0.13%)</title><rect x="27.5" y="1269" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.48" y="1279.5" ></text>
</g>
<g >
<title>should_failslab (101,287,965 samples, 0.01%)</title><rect x="310.6" y="1349" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="313.57" y="1359.5" ></text>
</g>
<g >
<title>_start (1,872,374,818 samples, 0.18%)</title><rect x="46.0" y="1589" width="2.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="48.96" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (153,838,233 samples, 0.01%)</title><rect x="47.6" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="50.60" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (129,483,121 samples, 0.01%)</title><rect x="44.2" y="1589" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="47.23" y="1599.5" ></text>
</g>
<g >
<title>zread (91,369,229 samples, 0.01%)</title><rect x="47.5" y="1301" width="0.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="50.49" y="1311.5" ></text>
</g>
<g >
<title>ext4_writepages (111,477,483 samples, 0.01%)</title><rect x="62.0" y="1413" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="65.05" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="885" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="895.5" ></text>
</g>
<g >
<title>mutex_unlock (2,662,749,291 samples, 0.26%)</title><rect x="967.6" y="1397" width="3.0" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="970.61" y="1407.5" ></text>
</g>
<g >
<title>drain_stock (153,803,009 samples, 0.01%)</title><rect x="1057.6" y="1221" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1060.60" y="1231.5" ></text>
</g>
<g >
<title>cpuidle_select (227,972,955 samples, 0.02%)</title><rect x="64.5" y="1509" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="67.51" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1125" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1135.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (869,039,590 samples, 0.08%)</title><rect x="364.0" y="1477" width="0.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="366.96" y="1487.5" ></text>
</g>
<g >
<title>grep (731,660,370 samples, 0.07%)</title><rect x="12.1" y="1605" width="0.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="15.09" y="1615.5" ></text>
</g>
<g >
<title>__schedule (164,192,562 samples, 0.02%)</title><rect x="39.8" y="1397" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="42.81" y="1407.5" ></text>
</g>
<g >
<title>__rcu_read_lock (459,015,444 samples, 0.04%)</title><rect x="711.9" y="1397" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="714.87" y="1407.5" ></text>
</g>
<g >
<title>should_failslab (102,446,120 samples, 0.01%)</title><rect x="307.8" y="1333" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="310.84" y="1343.5" ></text>
</g>
<g >
<title>__getdelim (88,052,958 samples, 0.01%)</title><rect x="50.0" y="1429" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="53.00" y="1439.5" ></text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (124,741,871 samples, 0.01%)</title><rect x="40.5" y="1317" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="43.46" y="1327.5" ></text>
</g>
<g >
<title>__mod_memcg_state (101,449,191 samples, 0.01%)</title><rect x="1056.0" y="1237" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1058.98" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="917" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="927.5" ></text>
</g>
<g >
<title>__virt_addr_valid (153,799,363 samples, 0.01%)</title><rect x="1122.8" y="1285" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1125.83" y="1295.5" ></text>
</g>
<g >
<title>should_failslab (102,143,535 samples, 0.01%)</title><rect x="275.4" y="1317" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="278.41" y="1327.5" ></text>
</g>
<g >
<title>Watcher::notify (180,777,984 samples, 0.02%)</title><rect x="30.2" y="1557" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="33.21" y="1567.5" ></text>
</g>
<g >
<title>__rcu_read_lock (358,552,353 samples, 0.03%)</title><rect x="1054.1" y="1269" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1057.06" y="1279.5" ></text>
</g>
<g >
<title>refill_obj_stock (461,181,839 samples, 0.04%)</title><rect x="268.8" y="1285" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="271.84" y="1295.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,761,465,552 samples, 0.27%)</title><rect x="71.2" y="1493" width="3.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="74.24" y="1503.5" ></text>
</g>
<g >
<title>do_idle (264,290,918 samples, 0.03%)</title><rect x="45.0" y="1493" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="47.97" y="1503.5" ></text>
</g>
<g >
<title>do_writepages (111,477,483 samples, 0.01%)</title><rect x="62.0" y="1429" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="65.05" y="1439.5" ></text>
</g>
<g >
<title>enqueue_task (90,059,276 samples, 0.01%)</title><rect x="66.5" y="1413" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="69.51" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (231,113,274 samples, 0.02%)</title><rect x="27.6" y="389" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.60" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (103,389,516 samples, 0.01%)</title><rect x="46.3" y="1317" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="49.31" y="1327.5" ></text>
</g>
<g >
<title>getgrgid_r (498,373,637 samples, 0.05%)</title><rect x="15.5" y="1461" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="18.45" y="1471.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (409,928,956 samples, 0.04%)</title><rect x="630.6" y="1445" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="633.56" y="1455.5" ></text>
</g>
<g >
<title>[bash] (391,080,291 samples, 0.04%)</title><rect x="46.9" y="1269" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="49.90" y="1279.5" ></text>
</g>
<g >
<title>unix_passcred_enabled (152,502,227 samples, 0.01%)</title><rect x="897.6" y="1397" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="900.62" y="1407.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (255,270,386 samples, 0.02%)</title><rect x="828.4" y="1237" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="831.39" y="1247.5" ></text>
</g>
<g >
<title>[libc.so.6] (432,056,761 samples, 0.04%)</title><rect x="47.6" y="1429" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="50.60" y="1439.5" ></text>
</g>
<g >
<title>try_to_unlazy (211,883,653 samples, 0.02%)</title><rect x="12.1" y="1333" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="15.12" y="1343.5" ></text>
</g>
<g >
<title>skb_free_head (31,129,782,141 samples, 3.00%)</title><rect x="471.4" y="1349" width="35.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="474.45" y="1359.5" >sk..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (5,111,612,114 samples, 0.49%)</title><rect x="909.9" y="1461" width="5.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="912.93" y="1471.5" ></text>
</g>
<g >
<title>irq_exit_rcu (246,488,913 samples, 0.02%)</title><rect x="71.2" y="1445" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="74.24" y="1455.5" ></text>
</g>
<g >
<title>std::__condvar::notify_all (141,539,163 samples, 0.01%)</title><rect x="30.3" y="1525" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="33.26" y="1535.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (3,682,554,413 samples, 0.35%)</title><rect x="1038.4" y="1285" width="4.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1041.38" y="1295.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (266,781,604 samples, 0.03%)</title><rect x="45.0" y="1573" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="47.97" y="1583.5" ></text>
</g>
<g >
<title>__fdget (255,271,071 samples, 0.02%)</title><rect x="371.9" y="1429" width="0.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="374.86" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock (19,216,487,449 samples, 1.85%)</title><rect x="664.6" y="1413" width="21.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="667.64" y="1423.5" >_..</text>
</g>
<g >
<title>grab_cache_page_write_begin (357,192,104 samples, 0.03%)</title><rect x="41.0" y="1237" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="44.01" y="1247.5" ></text>
</g>
<g >
<title>__mod_memcg_state (459,531,620 samples, 0.04%)</title><rect x="502.2" y="1221" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="505.16" y="1231.5" ></text>
</g>
<g >
<title>__check_object_size (204,757,591 samples, 0.02%)</title><rect x="151.7" y="1397" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="154.66" y="1407.5" ></text>
</g>
<g >
<title>__filemap_get_folio (310,595,003 samples, 0.03%)</title><rect x="41.1" y="1205" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="44.06" y="1215.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (562,887,569 samples, 0.05%)</title><rect x="621.0" y="1429" width="0.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="623.98" y="1439.5" ></text>
</g>
<g >
<title>malloc (107,145,885 samples, 0.01%)</title><rect x="28.9" y="1221" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="31.89" y="1231.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (3,579,003,366 samples, 0.34%)</title><rect x="1005.5" y="1317" width="4.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1008.49" y="1327.5" ></text>
</g>
<g >
<title>kfree_skbmem (613,455,045 samples, 0.06%)</title><rect x="1097.4" y="1381" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1100.39" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (311,012,281 samples, 0.03%)</title><rect x="48.7" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="51.68" y="1583.5" ></text>
</g>
<g >
<title>__do_sys_clone (2,876,616,044 samples, 0.28%)</title><rect x="21.6" y="1413" width="3.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="24.65" y="1423.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (7,620,500,357 samples, 0.73%)</title><rect x="495.8" y="1301" width="8.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="498.77" y="1311.5" ></text>
</g>
<g >
<title>ksys_write (100,684,441 samples, 0.01%)</title><rect x="41.8" y="1429" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="44.78" y="1439.5" ></text>
</g>
<g >
<title>consume_stock (162,889,128 samples, 0.02%)</title><rect x="826.8" y="1285" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="829.81" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (102,009,096 samples, 0.01%)</title><rect x="41.8" y="1477" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="44.78" y="1487.5" ></text>
</g>
<g >
<title>execute_command_internal (1,440,318,057 samples, 0.14%)</title><rect x="46.0" y="1493" width="1.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="48.96" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="501" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="511.5" ></text>
</g>
<g >
<title>child (486,819,152,058 samples, 46.86%)</title><rect x="79.7" y="1525" width="552.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="82.69" y="1535.5" >child</text>
</g>
<g >
<title>perf-exec (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1605" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="41.55" y="1615.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (460,960,750 samples, 0.04%)</title><rect x="154.7" y="1397" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="157.69" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1333" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1343.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (255,024,241 samples, 0.02%)</title><rect x="1103.5" y="1381" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1106.48" y="1391.5" ></text>
</g>
<g >
<title>skb_set_owner_w (614,094,186 samples, 0.06%)</title><rect x="205.3" y="1397" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="208.34" y="1407.5" ></text>
</g>
<g >
<title>start_kernel (266,781,604 samples, 0.03%)</title><rect x="45.0" y="1557" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="47.97" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="533" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="543.5" ></text>
</g>
<g >
<title>try_charge_memcg (562,180,385 samples, 0.05%)</title><rect x="873.6" y="1317" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="876.57" y="1327.5" ></text>
</g>
<g >
<title>search_binary_handler (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1477" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="41.55" y="1487.5" ></text>
</g>
<g >
<title>open64 (211,883,653 samples, 0.02%)</title><rect x="12.1" y="1477" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="15.12" y="1487.5" ></text>
</g>
<g >
<title>put_cpu_partial (151,856,913 samples, 0.01%)</title><rect x="244.1" y="1269" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="247.09" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,361,986,105 samples, 0.13%)</title><rect x="27.5" y="1285" width="1.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.48" y="1295.5" ></text>
</g>
<g >
<title>unmap_single_vma (184,315,958 samples, 0.02%)</title><rect x="19.2" y="1429" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="22.16" y="1439.5" ></text>
</g>
<g >
<title>do_fault (199,264,388 samples, 0.02%)</title><rect x="10.3" y="1477" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="13.33" y="1487.5" ></text>
</g>
<g >
<title>exit_mmap (3,521,587,096 samples, 0.34%)</title><rect x="34.5" y="1381" width="4.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="37.53" y="1391.5" ></text>
</g>
<g >
<title>__check_heap_object (1,893,599,594 samples, 0.18%)</title><rect x="723.3" y="1333" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="726.31" y="1343.5" ></text>
</g>
<g >
<title>perf_mmap__push (1,327,663,078 samples, 0.13%)</title><rect x="40.3" y="1525" width="1.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="43.27" y="1535.5" ></text>
</g>
<g >
<title>arch_call_rest_init (937,302,636 samples, 0.09%)</title><rect x="65.7" y="1541" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="68.71" y="1551.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (768,236,687 samples, 0.07%)</title><rect x="1012.8" y="1333" width="0.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1015.80" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (250,386,681 samples, 0.02%)</title><rect x="48.7" y="1493" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="51.74" y="1503.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (511,723,842 samples, 0.05%)</title><rect x="430.5" y="1349" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="433.52" y="1359.5" ></text>
</g>
<g >
<title>record__pushfn (1,276,584,924 samples, 0.12%)</title><rect x="40.3" y="1509" width="1.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="43.33" y="1519.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (461,214,943 samples, 0.04%)</title><rect x="262.4" y="1253" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="265.39" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (432,056,761 samples, 0.04%)</title><rect x="47.6" y="1477" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="50.60" y="1487.5" ></text>
</g>
<g >
<title>__libc_start_main (104,568,840 samples, 0.01%)</title><rect x="34.3" y="1573" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="37.35" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="453" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="463.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (2,894,382,507 samples, 0.28%)</title><rect x="21.6" y="1557" width="3.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="24.64" y="1567.5" ></text>
</g>
<g >
<title>mod_memcg_state (102,662,551 samples, 0.01%)</title><rect x="502.7" y="1253" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="505.74" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (175,238,478 samples, 0.02%)</title><rect x="27.6" y="357" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.61" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,274,211,041 samples, 0.12%)</title><rect x="17.1" y="1509" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.12" y="1519.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (153,721,544 samples, 0.01%)</title><rect x="831.4" y="1317" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="834.41" y="1327.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (281,679,791 samples, 0.03%)</title><rect x="15.7" y="1429" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="18.70" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (255,643,242 samples, 0.02%)</title><rect x="396.2" y="1397" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="399.15" y="1407.5" ></text>
</g>
<g >
<title>mutex_lock (358,551,034 samples, 0.03%)</title><rect x="967.2" y="1397" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="970.20" y="1407.5" ></text>
</g>
<g >
<title>operator new (104,252,785 samples, 0.01%)</title><rect x="31.2" y="69" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="34.23" y="79.5" ></text>
</g>
<g >
<title>do_sys_poll (734,623,008 samples, 0.07%)</title><rect x="39.3" y="1477" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="42.34" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (101,845,398 samples, 0.01%)</title><rect x="989.0" y="1381" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="992.05" y="1391.5" ></text>
</g>
<g >
<title>try_charge_memcg (306,904,074 samples, 0.03%)</title><rect x="307.5" y="1317" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="310.49" y="1327.5" ></text>
</g>
<g >
<title>make_child (139,609,114 samples, 0.01%)</title><rect x="47.1" y="1205" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="50.07" y="1215.5" ></text>
</g>
<g >
<title>import_single_range (1,174,232,631 samples, 0.11%)</title><rect x="1171.1" y="1445" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1174.12" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (408,265,953 samples, 0.04%)</title><rect x="488.3" y="1253" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="491.34" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,872,374,818 samples, 0.18%)</title><rect x="46.0" y="1557" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.96" y="1567.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (154,202,822 samples, 0.01%)</title><rect x="64.8" y="1493" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="67.80" y="1503.5" ></text>
</g>
<g >
<title>mod_objcg_state (458,520,198 samples, 0.04%)</title><rect x="1059.6" y="1317" width="0.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1062.57" y="1327.5" ></text>
</g>
<g >
<title>should_failslab (102,373,606 samples, 0.01%)</title><rect x="874.2" y="1333" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="877.21" y="1343.5" ></text>
</g>
<g >
<title>record__write (104,518,047 samples, 0.01%)</title><rect x="41.8" y="1525" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="44.78" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (897,735,957 samples, 0.09%)</title><rect x="17.3" y="1429" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.28" y="1439.5" ></text>
</g>
<g >
<title>[bash] (190,038,871 samples, 0.02%)</title><rect x="47.4" y="1333" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="50.38" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1237" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="1247.5" ></text>
</g>
<g >
<title>[grep] (595,259,472 samples, 0.06%)</title><rect x="12.1" y="1589" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.11" y="1599.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (199,006,007 samples, 0.02%)</title><rect x="14.3" y="1493" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="17.25" y="1503.5" ></text>
</g>
<g >
<title>__build_skb_around (153,704,356 samples, 0.01%)</title><rect x="310.7" y="1365" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="313.68" y="1375.5" ></text>
</g>
<g >
<title>v8::internal::Accessors::FunctionArgumentsGetter (154,356,284 samples, 0.01%)</title><rect x="21.4" y="1477" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="24.36" y="1487.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (213,279,144 samples, 0.02%)</title><rect x="21.4" y="1541" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="24.36" y="1551.5" ></text>
</g>
<g >
<title>__sys_sendto (217,761,532,244 samples, 20.96%)</title><rect x="658.7" y="1445" width="247.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="661.72" y="1455.5" >__sys_sendto</text>
</g>
<g >
<title>__mod_memcg_state (612,838,688 samples, 0.06%)</title><rect x="828.0" y="1253" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="830.98" y="1263.5" ></text>
</g>
<g >
<title>copy_pmd_range (2,144,298,036 samples, 0.21%)</title><rect x="22.0" y="1301" width="2.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="25.00" y="1311.5" ></text>
</g>
<g >
<title>bprm_execve (116,822,642 samples, 0.01%)</title><rect x="48.1" y="1525" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="51.12" y="1535.5" ></text>
</g>
<g >
<title>walk_component (90,335,683 samples, 0.01%)</title><rect x="16.5" y="1365" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="19.51" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="421" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="431.5" ></text>
</g>
<g >
<title>unix_stream_read_actor (42,362,797,849 samples, 4.08%)</title><rect x="1115.3" y="1381" width="48.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1118.34" y="1391.5" >unix..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (91,248,624 samples, 0.01%)</title><rect x="62.4" y="1445" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="65.44" y="1455.5" ></text>
</g>
<g >
<title>skb_unlink (356,954,211 samples, 0.03%)</title><rect x="971.1" y="1397" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="974.10" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (104,568,840 samples, 0.01%)</title><rect x="34.3" y="1557" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="37.35" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_statx (235,606,066 samples, 0.02%)</title><rect x="16.4" y="1445" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="19.40" y="1455.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (104,375,602 samples, 0.01%)</title><rect x="22.6" y="1221" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="25.64" y="1231.5" ></text>
</g>
<g >
<title>sock_def_readable (7,525,140,134 samples, 0.72%)</title><rect x="889.1" y="1397" width="8.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="892.08" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1525" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,230,288,458 samples, 0.12%)</title><rect x="40.4" y="1445" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="43.36" y="1455.5" ></text>
</g>
<g >
<title>send@plt (256,091,212 samples, 0.02%)</title><rect x="1183.0" y="1509" width="0.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1185.97" y="1519.5" ></text>
</g>
<g >
<title>getdents64 (183,085,058 samples, 0.02%)</title><rect x="46.4" y="1349" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="49.42" y="1359.5" ></text>
</g>
<g >
<title>cpu_startup_entry (274,712,029 samples, 0.03%)</title><rect x="14.2" y="1557" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="17.24" y="1567.5" ></text>
</g>
<g >
<title>[[heap]] (330,466,981 samples, 0.03%)</title><rect x="48.3" y="1589" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="51.29" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="997" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="549" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (134,963,582 samples, 0.01%)</title><rect x="30.3" y="1477" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="33.26" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (102,094,059 samples, 0.01%)</title><rect x="11.8" y="1461" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.82" y="1471.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (8,337,317,614 samples, 0.80%)</title><rect x="718.8" y="1365" width="9.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="721.83" y="1375.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (184,504,112 samples, 0.02%)</title><rect x="38.2" y="1253" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="41.22" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (233,413,133 samples, 0.02%)</title><rect x="19.1" y="1557" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="22.11" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="357" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="367.5" ></text>
</g>
<g >
<title>rest_init (937,302,636 samples, 0.09%)</title><rect x="65.7" y="1525" width="1.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="68.71" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="949" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="959.5" ></text>
</g>
<g >
<title>copy_page_range (2,222,090,872 samples, 0.21%)</title><rect x="21.9" y="1333" width="2.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="24.91" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,212,768 samples, 0.05%)</title><rect x="31.0" y="1557" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1567.5" ></text>
</g>
<g >
<title>down_write (124,239,077 samples, 0.01%)</title><rect x="35.0" y="1333" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="37.98" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,108,264,018 samples, 0.11%)</title><rect x="27.5" y="1189" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.49" y="1199.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (921,388,461 samples, 0.09%)</title><rect x="1162.4" y="1349" width="1.0" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1165.40" y="1359.5" ></text>
</g>
<g >
<title>free_pud_range (311,474,918 samples, 0.03%)</title><rect x="34.5" y="1317" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="37.53" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_openat (103,389,516 samples, 0.01%)</title><rect x="46.3" y="1301" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="49.31" y="1311.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (144,170,371 samples, 0.01%)</title><rect x="48.8" y="1365" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="51.76" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (535,740,766 samples, 0.05%)</title><rect x="27.6" y="629" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.58" y="639.5" ></text>
</g>
<g >
<title>established_get_first (105,133,614 samples, 0.01%)</title><rect x="33.7" y="1333" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="36.73" y="1343.5" ></text>
</g>
<g >
<title>uv__fs_work (504,257,881 samples, 0.05%)</title><rect x="33.7" y="1541" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="36.65" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="261" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="271.5" ></text>
</g>
<g >
<title>[bash] (101,851,564 samples, 0.01%)</title><rect x="46.8" y="1285" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="49.78" y="1295.5" ></text>
</g>
<g >
<title>kmalloc_slab (356,730,112 samples, 0.03%)</title><rect x="838.2" y="1349" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="841.21" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (216,024,647,617 samples, 20.79%)</title><rect x="101.7" y="1477" width="245.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="104.65" y="1487.5" >do_syscall_64</text>
</g>
<g >
<title>syscall_enter_from_user_mode (663,697,915 samples, 0.06%)</title><rect x="909.2" y="1461" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="912.18" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (276,705,356 samples, 0.03%)</title><rect x="17.7" y="1397" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.69" y="1407.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (31,919,744,675 samples, 3.07%)</title><rect x="234.7" y="1317" width="36.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="237.68" y="1327.5" >__k..</text>
</g>
<g >
<title>__alloc_pages (181,498,883 samples, 0.02%)</title><rect x="22.0" y="1253" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="25.00" y="1263.5" ></text>
</g>
<g >
<title>__entry_text_start (8,129,667,201 samples, 0.78%)</title><rect x="353.0" y="1493" width="9.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="356.03" y="1503.5" ></text>
</g>
<g >
<title>[bash] (556,906,344 samples, 0.05%)</title><rect x="46.1" y="1429" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="49.05" y="1439.5" ></text>
</g>
<g >
<title>refill_obj_stock (461,071,139 samples, 0.04%)</title><rect x="1023.4" y="1333" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1026.38" y="1343.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (357,758,266 samples, 0.03%)</title><rect x="877.8" y="1365" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="880.81" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="853" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="863.5" ></text>
</g>
<g >
<title>enqueue_task_fair (90,797,966 samples, 0.01%)</title><rect x="65.0" y="1445" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="68.04" y="1455.5" ></text>
</g>
<g >
<title>dequeue_task (105,160,278 samples, 0.01%)</title><rect x="39.8" y="1381" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="42.82" y="1391.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (2,890,798,362 samples, 0.28%)</title><rect x="21.6" y="1525" width="3.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="24.65" y="1535.5" ></text>
</g>
<g >
<title>perf (2,375,890,786 samples, 0.23%)</title><rect x="39.2" y="1605" width="2.7" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="42.22" y="1615.5" ></text>
</g>
<g >
<title>operator new (110,227,839 samples, 0.01%)</title><rect x="21.4" y="1381" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="24.41" y="1391.5" ></text>
</g>
<g >
<title>filemap_add_folio (198,274,657 samples, 0.02%)</title><rect x="41.1" y="1189" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="44.06" y="1199.5" ></text>
</g>
<g >
<title>__libc_fork (2,882,448,813 samples, 0.28%)</title><rect x="21.6" y="1493" width="3.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="24.65" y="1503.5" ></text>
</g>
<g >
<title>__do_softirq (134,716,683 samples, 0.01%)</title><rect x="65.8" y="1365" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="68.81" y="1375.5" ></text>
</g>
<g >
<title>sock_def_readable (560,834,329 samples, 0.05%)</title><rect x="132.7" y="1413" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="135.67" y="1423.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (4,004,506,058 samples, 0.39%)</title><rect x="62.2" y="1589" width="4.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="65.23" y="1599.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (99,437,825 samples, 0.01%)</title><rect x="64.7" y="1477" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="67.66" y="1487.5" ></text>
</g>
<g >
<title>__libc_start_main (971,683,626,091 samples, 93.52%)</title><rect x="79.7" y="1573" width="1103.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="82.69" y="1583.5" >__libc_start_main</text>
</g>
<g >
<title>__rcu_read_unlock (1,638,740,494 samples, 0.16%)</title><rect x="246.1" y="1301" width="1.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="249.06" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (667,531,858 samples, 0.06%)</title><rect x="65.7" y="1477" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="68.74" y="1487.5" ></text>
</g>
<g >
<title>getgrgid_r (113,964,447 samples, 0.01%)</title><rect x="16.2" y="1477" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="19.24" y="1487.5" ></text>
</g>
<g >
<title>do_idle (3,020,920,920 samples, 0.29%)</title><rect x="62.2" y="1541" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="65.24" y="1551.5" ></text>
</g>
<g >
<title>seq_read (437,355,770 samples, 0.04%)</title><rect x="33.7" y="1397" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="36.73" y="1407.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (460,813,369 samples, 0.04%)</title><rect x="554.8" y="1365" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="557.77" y="1375.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (3,521,587,096 samples, 0.34%)</title><rect x="34.5" y="1541" width="4.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="37.53" y="1551.5" ></text>
</g>
<g >
<title>__xstat64 (523,884,898 samples, 0.05%)</title><rect x="29.4" y="1525" width="0.6" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="32.38" y="1535.5" ></text>
</g>
<g >
<title>InotifyBackend::start (621,881,929 samples, 0.06%)</title><rect x="32.8" y="1525" width="0.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="35.75" y="1535.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (563,279,681 samples, 0.05%)</title><rect x="908.5" y="1461" width="0.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="911.54" y="1471.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (613,472,595 samples, 0.06%)</title><rect x="128.0" y="1413" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="130.96" y="1423.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (153,672,276 samples, 0.01%)</title><rect x="1013.7" y="1333" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1016.68" y="1343.5" ></text>
</g>
<g >
<title>do_filp_open (211,883,653 samples, 0.02%)</title><rect x="12.1" y="1397" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="15.12" y="1407.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,867,693,174 samples, 0.28%)</title><rect x="71.2" y="1557" width="3.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="74.23" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,677,713,511 samples, 0.16%)</title><rect x="27.4" y="1413" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.44" y="1423.5" ></text>
</g>
<g >
<title>refill_obj_stock (152,394,065 samples, 0.01%)</title><rect x="270.6" y="1301" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="273.58" y="1311.5" ></text>
</g>
<g >
<title>dup_mmap (2,876,616,044 samples, 0.28%)</title><rect x="21.6" y="1349" width="3.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="24.65" y="1359.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (96,017,166 samples, 0.01%)</title><rect x="45.1" y="1461" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="48.12" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (203,921,419 samples, 0.02%)</title><rect x="714.1" y="1397" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="717.13" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_lock (16,518,819,251 samples, 1.59%)</title><rect x="108.8" y="1413" width="18.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="111.80" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1589" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="41.55" y="1599.5" ></text>
</g>
<g >
<title>do_open (102,591,905 samples, 0.01%)</title><rect x="46.3" y="1237" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="49.31" y="1247.5" ></text>
</g>
<g >
<title>do_idle (917,635,942 samples, 0.09%)</title><rect x="65.7" y="1493" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="68.72" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_write (102,009,096 samples, 0.01%)</title><rect x="41.8" y="1445" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="44.78" y="1455.5" ></text>
</g>
<g >
<title>ttwu_do_activate (173,964,371 samples, 0.02%)</title><rect x="65.0" y="1477" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="68.04" y="1487.5" ></text>
</g>
<g >
<title>uv_cond_wait (91,501,583 samples, 0.01%)</title><rect x="34.2" y="1541" width="0.1" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="37.24" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1109" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="1119.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (254,995,928 samples, 0.02%)</title><rect x="346.7" y="1445" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="349.71" y="1455.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (307,051,305 samples, 0.03%)</title><rect x="166.2" y="1333" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="169.25" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="501" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (144,170,371 samples, 0.01%)</title><rect x="48.8" y="1397" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="51.76" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1397" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (724,744,859 samples, 0.07%)</title><rect x="10.8" y="1557" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.76" y="1567.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (31,447,190,873 samples, 3.03%)</title><rect x="838.6" y="1349" width="35.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="841.61" y="1359.5" >kme..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1461" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1471.5" ></text>
</g>
<g >
<title>aa_unix_msg_perm (255,697,973 samples, 0.02%)</title><rect x="376.4" y="1397" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="379.41" y="1407.5" ></text>
</g>
<g >
<title>kmalloc_slab (102,458,468 samples, 0.01%)</title><rect x="836.8" y="1333" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="839.81" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock (16,826,817,577 samples, 1.62%)</title><rect x="946.9" y="1397" width="19.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="949.87" y="1407.5" ></text>
</g>
<g >
<title>kmem_cache_free (31,842,417,609 samples, 3.06%)</title><rect x="431.9" y="1349" width="36.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="434.91" y="1359.5" >kme..</text>
</g>
<g >
<title>opendir (103,389,516 samples, 0.01%)</title><rect x="46.3" y="1365" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="49.31" y="1375.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,811,790,479 samples, 0.27%)</title><rect x="71.2" y="1525" width="3.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="74.24" y="1535.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (4,194,085,180 samples, 0.40%)</title><rect x="625.8" y="1445" width="4.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="628.80" y="1455.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (410,028,056 samples, 0.04%)</title><rect x="347.0" y="1477" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="350.00" y="1487.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3,476,213,269 samples, 0.33%)</title><rect x="733.9" y="1381" width="3.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="736.88" y="1391.5" ></text>
</g>
<g >
<title>memset_erms (2,404,633,186 samples, 0.23%)</title><rect x="272.3" y="1317" width="2.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="275.33" y="1327.5" ></text>
</g>
<g >
<title>user_path_at_empty (145,282,536 samples, 0.01%)</title><rect x="16.8" y="1429" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="19.80" y="1439.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (664,238,537 samples, 0.06%)</title><rect x="942.9" y="1413" width="0.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="945.92" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="437" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="447.5" ></text>
</g>
<g >
<title>mutex_lock (3,321,302,707 samples, 0.32%)</title><rect x="1098.1" y="1381" width="3.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1101.08" y="1391.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (664,941,374 samples, 0.06%)</title><rect x="941.1" y="1429" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="944.06" y="1439.5" ></text>
</g>
<g >
<title>wb_do_writeback (125,560,094 samples, 0.01%)</title><rect x="62.0" y="1509" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="65.03" y="1519.5" ></text>
</g>
<g >
<title>mod_objcg_state (255,314,229 samples, 0.02%)</title><rect x="506.2" y="1317" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="509.16" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (262,686,914 samples, 0.03%)</title><rect x="19.1" y="1573" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="22.07" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="437" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="447.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (612,910,069 samples, 0.06%)</title><rect x="945.1" y="1397" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="948.07" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (110,440,525 samples, 0.01%)</title><rect x="27.6" y="261" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.61" y="271.5" ></text>
</g>
<g >
<title>inotify_read (124,527,953 samples, 0.01%)</title><rect x="30.5" y="1461" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="33.48" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (432,964,103 samples, 0.04%)</title><rect x="27.6" y="581" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.58" y="591.5" ></text>
</g>
<g >
<title>__fget_light (4,858,555,613 samples, 0.47%)</title><rect x="615.2" y="1397" width="5.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="618.18" y="1407.5" ></text>
</g>
<g >
<title>path_lookupat (270,438,042 samples, 0.03%)</title><rect x="15.7" y="1253" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="18.70" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,083,577,752 samples, 0.10%)</title><rect x="17.1" y="1445" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.13" y="1455.5" ></text>
</g>
<g >
<title>[bash] (89,561,692 samples, 0.01%)</title><rect x="47.5" y="1253" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="50.49" y="1263.5" ></text>
</g>
<g >
<title>start_secondary (479,051,353 samples, 0.05%)</title><rect x="44.4" y="1573" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="47.42" y="1583.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (274,179,175 samples, 0.03%)</title><rect x="15.7" y="1413" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="18.70" y="1423.5" ></text>
</g>
<g >
<title>skb_copy_datagram_from_iter (306,834,149 samples, 0.03%)</title><rect x="131.2" y="1413" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="134.21" y="1423.5" ></text>
</g>
<g >
<title>schedule (170,074,332 samples, 0.02%)</title><rect x="39.8" y="1413" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.80" y="1423.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (357,637,714 samples, 0.03%)</title><rect x="1058.8" y="1317" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1061.82" y="1327.5" ></text>
</g>
<g >
<title>zap_pte_range (177,462,009 samples, 0.02%)</title><rect x="19.2" y="1381" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="22.17" y="1391.5" ></text>
</g>
<g >
<title>mod_objcg_state (5,416,530,110 samples, 0.52%)</title><rect x="457.5" y="1333" width="6.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="460.51" y="1343.5" ></text>
</g>
<g >
<title>enqueue_task (93,595,159 samples, 0.01%)</title><rect x="45.1" y="1413" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="48.13" y="1423.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (255,866,848 samples, 0.02%)</title><rect x="311.4" y="1365" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="314.44" y="1375.5" ></text>
</g>
<g >
<title>[sleep] (1,279,634,806 samples, 0.12%)</title><rect x="49.0" y="1589" width="1.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="52.03" y="1599.5" ></text>
</g>
<g >
<title>__check_heap_object (2,212,625,104 samples, 0.21%)</title><rect x="576.8" y="1269" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="579.84" y="1279.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (202,868,814 samples, 0.02%)</title><rect x="10.3" y="1589" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.33" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1285" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1295.5" ></text>
</g>
<g >
<title>skb_set_owner_w (358,396,079 samples, 0.03%)</title><rect x="766.5" y="1397" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="769.47" y="1407.5" ></text>
</g>
<g >
<title>recv@plt (153,542,863 samples, 0.01%)</title><rect x="632.3" y="1509" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="635.30" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (321,855,498 samples, 0.03%)</title><rect x="11.6" y="1589" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.59" y="1599.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (357,026,565 samples, 0.03%)</title><rect x="488.4" y="1237" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="491.40" y="1247.5" ></text>
</g>
<g >
<title>refill_stock (357,962,228 samples, 0.03%)</title><rect x="467.3" y="1285" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="470.27" y="1295.5" ></text>
</g>
<g >
<title>parent (1,175,959,045 samples, 0.11%)</title><rect x="77.0" y="1573" width="1.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="80.02" y="1583.5" ></text>
</g>
<g >
<title>__rcu_read_lock (102,315,048 samples, 0.01%)</title><rect x="500.9" y="1253" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="503.94" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (108,954,288 samples, 0.01%)</title><rect x="33.5" y="1477" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="36.49" y="1487.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (969,074,421 samples, 0.09%)</title><rect x="856.6" y="1333" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="859.55" y="1343.5" ></text>
</g>
<g >
<title>sock_wfree (358,647,041 samples, 0.03%)</title><rect x="1061.1" y="1349" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1064.14" y="1359.5" ></text>
</g>
<g >
<title>scm_recv.constprop.0 (1,580,954,788 samples, 0.15%)</title><rect x="551.2" y="1381" width="1.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="554.23" y="1391.5" ></text>
</g>
<g >
<title>iterate_dir (183,085,058 samples, 0.02%)</title><rect x="46.4" y="1285" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="49.42" y="1295.5" ></text>
</g>
<g >
<title>skb_set_owner_w (9,561,266,440 samples, 0.92%)</title><rect x="878.2" y="1381" width="10.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="881.22" y="1391.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (26,814,567,588 samples, 2.58%)</title><rect x="277.5" y="1349" width="30.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="280.50" y="1359.5" >km..</text>
</g>
<g >
<title>free_pgtables (518,303,963 samples, 0.05%)</title><rect x="34.5" y="1365" width="0.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="37.53" y="1375.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (358,094,586 samples, 0.03%)</title><rect x="154.3" y="1397" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="157.28" y="1407.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (2,349,389,765 samples, 0.23%)</title><rect x="1055.1" y="1269" width="2.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1058.11" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (102,009,096 samples, 0.01%)</title><rect x="41.8" y="1461" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="44.78" y="1471.5" ></text>
</g>
<g >
<title>__rcu_read_lock (153,666,193 samples, 0.01%)</title><rect x="1034.7" y="1301" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1037.72" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (789,894,485 samples, 0.08%)</title><rect x="39.3" y="1509" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="42.32" y="1519.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (2,036,691,075 samples, 0.20%)</title><rect x="27.1" y="1525" width="2.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="30.06" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (270,438,042 samples, 0.03%)</title><rect x="15.7" y="1349" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="18.70" y="1359.5" ></text>
</g>
<g >
<title>__fdget (102,123,291 samples, 0.01%)</title><rect x="106.5" y="1429" width="0.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="109.47" y="1439.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (408,751,101 samples, 0.04%)</title><rect x="1113.7" y="1333" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1116.65" y="1343.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (31,616,847,975 samples, 3.04%)</title><rect x="795.5" y="1317" width="35.9" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="798.51" y="1327.5" >__k..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (102,657,463 samples, 0.01%)</title><rect x="15.1" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="18.10" y="1487.5" ></text>
</g>
<g >
<title>anon_vma_fork (211,139,026 samples, 0.02%)</title><rect x="21.7" y="1333" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="24.67" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (93,858,678 samples, 0.01%)</title><rect x="16.2" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.24" y="1423.5" ></text>
</g>
<g >
<title>free_p4d_range (311,474,918 samples, 0.03%)</title><rect x="34.5" y="1333" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="37.53" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (98,874,383 samples, 0.01%)</title><rect x="45.8" y="1589" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="48.85" y="1599.5" ></text>
</g>
<g >
<title>write (1,246,629,945 samples, 0.12%)</title><rect x="40.3" y="1461" width="1.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="43.34" y="1471.5" ></text>
</g>
<g >
<title>readlink (255,793,521 samples, 0.02%)</title><rect x="16.8" y="1509" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="19.76" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (307,398,225 samples, 0.03%)</title><rect x="989.2" y="1381" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="992.16" y="1391.5" ></text>
</g>
<g >
<title>_copy_from_iter (3,888,002,364 samples, 0.37%)</title><rect x="729.5" y="1381" width="4.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="732.46" y="1391.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (763,492,490 samples, 0.07%)</title><rect x="32.8" y="1557" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="35.75" y="1567.5" ></text>
</g>
<g >
<title>ovl_write_iter (971,482,213 samples, 0.09%)</title><rect x="40.6" y="1365" width="1.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="43.62" y="1375.5" ></text>
</g>
<g >
<title>vfs_read (160,052,299 samples, 0.02%)</title><rect x="30.5" y="1477" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="33.47" y="1487.5" ></text>
</g>
<g >
<title>wait_for_unix_gc (511,729,880 samples, 0.05%)</title><rect x="900.0" y="1413" width="0.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="903.00" y="1423.5" ></text>
</g>
<g >
<title>do_epoll_wait (145,581,483 samples, 0.01%)</title><rect x="32.2" y="1493" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="35.18" y="1503.5" ></text>
</g>
<g >
<title>filename_lookup (184,352,934 samples, 0.02%)</title><rect x="16.4" y="1397" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="19.40" y="1407.5" ></text>
</g>
<g >
<title>malloc (110,227,839 samples, 0.01%)</title><rect x="21.4" y="1365" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="24.41" y="1375.5" ></text>
</g>
<g >
<title>aa_unix_msg_perm (101,207,150 samples, 0.01%)</title><rect x="688.7" y="1397" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="691.73" y="1407.5" ></text>
</g>
<g >
<title>execute_command (552,679,814 samples, 0.05%)</title><rect x="46.8" y="1413" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="49.75" y="1423.5" ></text>
</g>
<g >
<title>[bash] (190,038,871 samples, 0.02%)</title><rect x="47.4" y="1381" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="50.38" y="1391.5" ></text>
</g>
<g >
<title>refill_stock (1,176,259,955 samples, 0.11%)</title><rect x="502.9" y="1253" width="1.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="505.85" y="1263.5" ></text>
</g>
<g >
<title>__cond_resched (256,278,409 samples, 0.02%)</title><rect x="234.4" y="1317" width="0.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="237.39" y="1327.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1,636,373,937 samples, 0.16%)</title><rect x="290.0" y="1333" width="1.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="293.00" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (250,386,681 samples, 0.02%)</title><rect x="48.7" y="1445" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="51.74" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (240,109,376 samples, 0.02%)</title><rect x="15.0" y="1589" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="17.99" y="1599.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (188,603,896 samples, 0.02%)</title><rect x="65.8" y="1413" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="68.75" y="1423.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (4,959,684,489 samples, 0.48%)</title><rect x="983.4" y="1365" width="5.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="986.41" y="1375.5" ></text>
</g>
<g >
<title>__tsearch (259,023,693 samples, 0.02%)</title><rect x="50.1" y="1429" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="53.10" y="1439.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (43,269,209,288 samples, 4.16%)</title><rect x="565.2" y="1365" width="49.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="568.16" y="1375.5" >skb_..</text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (310,160,619 samples, 0.03%)</title><rect x="21.3" y="1573" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="24.26" y="1583.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (111,477,483 samples, 0.01%)</title><rect x="62.0" y="1461" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="65.05" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (262,686,914 samples, 0.03%)</title><rect x="19.1" y="1589" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="22.07" y="1599.5" ></text>
</g>
<g >
<title>schedule_idle (374,940,327 samples, 0.04%)</title><rect x="74.6" y="1477" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="77.57" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (211,883,653 samples, 0.02%)</title><rect x="12.1" y="1445" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="15.12" y="1455.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (8,136,582,816 samples, 0.78%)</title><rect x="295.9" y="1333" width="9.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="298.93" y="1343.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1,841,479,726 samples, 0.18%)</title><rect x="943.7" y="1413" width="2.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="946.68" y="1423.5" ></text>
</g>
<g >
<title>[ls] (2,857,784,714 samples, 0.28%)</title><rect x="15.3" y="1589" width="3.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="18.32" y="1599.5" ></text>
</g>
<g >
<title>established_get_next (105,133,614 samples, 0.01%)</title><rect x="33.7" y="1349" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="36.73" y="1359.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (255,096,909 samples, 0.02%)</title><rect x="836.0" y="1317" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="839.00" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="725" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="735.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (3,934,701,722 samples, 0.38%)</title><rect x="910.8" y="1445" width="4.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="913.80" y="1455.5" ></text>
</g>
<g >
<title>ext4_da_write_end (235,690,801 samples, 0.02%)</title><rect x="41.4" y="1253" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="44.42" y="1263.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (208,244,803 samples, 0.02%)</title><rect x="15.5" y="1285" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="18.46" y="1295.5" ></text>
</g>
<g >
<title>[bash] (742,718,685 samples, 0.07%)</title><rect x="46.8" y="1429" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="49.75" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (234,016,923 samples, 0.02%)</title><rect x="15.0" y="1541" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="17.99" y="1551.5" ></text>
</g>
<g >
<title>consume_obj_stock (817,539,956 samples, 0.08%)</title><rect x="306.2" y="1317" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="309.21" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (339,853,121 samples, 0.03%)</title><rect x="12.4" y="1493" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.40" y="1503.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (307,414,507 samples, 0.03%)</title><rect x="1181.8" y="1477" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1184.75" y="1487.5" ></text>
</g>
<g >
<title>import_single_range (972,100,161 samples, 0.09%)</title><rect x="621.6" y="1445" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="624.62" y="1455.5" ></text>
</g>
<g >
<title>[perf-486471.map] (89,979,960 samples, 0.01%)</title><rect x="25.1" y="1589" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="28.09" y="1599.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (269,912,165 samples, 0.03%)</title><rect x="15.7" y="1237" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="18.70" y="1247.5" ></text>
</g>
<g >
<title>_dl_catch_exception (208,244,803 samples, 0.02%)</title><rect x="15.5" y="1269" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.46" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (539,678,807 samples, 0.05%)</title><rect x="27.6" y="661" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.58" y="671.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (445,917,430 samples, 0.04%)</title><rect x="74.5" y="1573" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="77.49" y="1583.5" ></text>
</g>
<g >
<title>record__write (1,275,385,575 samples, 0.12%)</title><rect x="40.3" y="1493" width="1.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="43.33" y="1503.5" ></text>
</g>
<g >
<title>consume_stock (516,934,077 samples, 0.05%)</title><rect x="829.9" y="1269" width="0.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="832.90" y="1279.5" ></text>
</g>
<g >
<title>cpu_startup_entry (266,781,604 samples, 0.03%)</title><rect x="45.0" y="1509" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="47.97" y="1519.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (202,868,814 samples, 0.02%)</title><rect x="10.3" y="1573" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.33" y="1583.5" ></text>
</g>
<g >
<title>do_statx (211,391,804 samples, 0.02%)</title><rect x="16.4" y="1429" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="19.40" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (22,355,993,845 samples, 2.15%)</title><rect x="179.1" y="1381" width="25.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="182.14" y="1391.5" >_..</text>
</g>
<g >
<title>__mmput (107,776,385 samples, 0.01%)</title><rect x="48.1" y="1397" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="51.13" y="1407.5" ></text>
</g>
<g >
<title>vfs_read (488,793,405 samples, 0.05%)</title><rect x="33.7" y="1429" width="0.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="36.67" y="1439.5" ></text>
</g>
<g >
<title>begin_new_exec (116,249,000 samples, 0.01%)</title><rect x="48.1" y="1445" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="51.12" y="1455.5" ></text>
</g>
<g >
<title>__rcu_read_lock (254,917,524 samples, 0.02%)</title><rect x="442.1" y="1333" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="445.07" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (415,137,687 samples, 0.04%)</title><rect x="31.0" y="133" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (239,718,671 samples, 0.02%)</title><rect x="62.4" y="1477" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="65.44" y="1487.5" ></text>
</g>
<g >
<title>__check_heap_object (1,484,278,455 samples, 0.14%)</title><rect x="163.2" y="1333" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="166.17" y="1343.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (116,822,642 samples, 0.01%)</title><rect x="48.1" y="1541" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="51.12" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1013" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1023.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (459,415,309 samples, 0.04%)</title><rect x="805.1" y="1301" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="808.09" y="1311.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (173,065,269,737 samples, 16.66%)</title><rect x="134.2" y="1413" width="196.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="137.23" y="1423.5" >unix_stream_sendmsg</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1,431,271,761 samples, 0.14%)</title><rect x="202.9" y="1349" width="1.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="205.90" y="1359.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (246,488,913 samples, 0.02%)</title><rect x="71.2" y="1429" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="74.24" y="1439.5" ></text>
</g>
<g >
<title>proc_readfd (183,085,058 samples, 0.02%)</title><rect x="46.4" y="1269" width="0.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="49.42" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (339,853,121 samples, 0.03%)</title><rect x="12.4" y="1509" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.40" y="1519.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (152,951,860 samples, 0.01%)</title><rect x="553.0" y="1381" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="556.02" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (211,921,192 samples, 0.02%)</title><rect x="15.0" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="17.99" y="1535.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (208,597,750,099 samples, 20.08%)</title><rect x="377.4" y="1413" width="236.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="380.39" y="1423.5" >unix_stream_recvmsg</text>
</g>
<g >
<title>simple_copy_to_iter (37,144,917,396 samples, 3.58%)</title><rect x="1120.2" y="1333" width="42.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1123.22" y="1343.5" >sim..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1541" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="41.55" y="1551.5" ></text>
</g>
<g >
<title>__poll (582,291,536 samples, 0.06%)</title><rect x="32.8" y="1509" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="35.77" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="565" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="575.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (250,386,681 samples, 0.02%)</title><rect x="48.7" y="1477" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="51.74" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (218,838,008,521 samples, 21.06%)</title><rect x="99.4" y="1493" width="248.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="102.44" y="1503.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>check_heap_object (409,818,837 samples, 0.04%)</title><rect x="581.4" y="1301" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="584.44" y="1311.5" ></text>
</g>
<g >
<title>put_cpu_partial (664,701,801 samples, 0.06%)</title><rect x="451.1" y="1317" width="0.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="454.13" y="1327.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (272,988,380 samples, 0.03%)</title><rect x="15.7" y="1397" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="18.70" y="1407.5" ></text>
</g>
<g >
<title>check_heap_object (6,907,744,447 samples, 0.66%)</title><rect x="1123.0" y="1285" width="7.8" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1126.00" y="1295.5" ></text>
</g>
<g >
<title>unix_scm_to_skb (1,432,838,753 samples, 0.14%)</title><rect x="897.8" y="1397" width="1.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="900.80" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1029" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1221" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1231.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (409,046,962 samples, 0.04%)</title><rect x="718.4" y="1381" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="721.37" y="1391.5" ></text>
</g>
<g >
<title>__rcu_read_lock (153,486,796 samples, 0.01%)</title><rect x="1055.7" y="1253" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1058.75" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="597" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="607.5" ></text>
</g>
<g >
<title>unmap_single_vma (2,898,538,872 samples, 0.28%)</title><rect x="35.2" y="1349" width="3.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="38.24" y="1359.5" ></text>
</g>
<g >
<title>parse_and_execute (92,864,718 samples, 0.01%)</title><rect x="47.2" y="1205" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="50.23" y="1215.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (358,271,757 samples, 0.03%)</title><rect x="715.1" y="1397" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="718.12" y="1407.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (153,099,461 samples, 0.01%)</title><rect x="581.3" y="1285" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="584.27" y="1295.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (356,918,992 samples, 0.03%)</title><rect x="713.7" y="1381" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="716.72" y="1391.5" ></text>
</g>
<g >
<title>execute_command_internal (190,038,871 samples, 0.02%)</title><rect x="47.4" y="1413" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="50.38" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (232,876,295 samples, 0.02%)</title><rect x="48.8" y="1413" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="51.76" y="1423.5" ></text>
</g>
<g >
<title>DirTree::_find (1,437,560,309 samples, 0.14%)</title><rect x="25.4" y="1509" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="28.42" y="1519.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (665,801,539 samples, 0.06%)</title><rect x="1018.8" y="1317" width="0.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1021.79" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1525" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="1535.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (203,628,516 samples, 0.02%)</title><rect x="233.0" y="1349" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="235.99" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (204,461,349 samples, 0.02%)</title><rect x="631.8" y="1493" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="634.77" y="1503.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (153,286,780 samples, 0.01%)</title><rect x="1019.4" y="1285" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1022.37" y="1295.5" ></text>
</g>
<g >
<title>aa_unix_msg_perm (204,506,564 samples, 0.02%)</title><rect x="944.8" y="1397" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="947.84" y="1407.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (461,037,378 samples, 0.04%)</title><rect x="451.4" y="1269" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="454.36" y="1279.5" ></text>
</g>
<g >
<title>put_pid (306,184,873 samples, 0.03%)</title><rect x="507.2" y="1349" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="510.21" y="1359.5" ></text>
</g>
<g >
<title>mmput (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1413" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="41.55" y="1423.5" ></text>
</g>
<g >
<title>scm_recv.constprop.0 (409,757,046 samples, 0.04%)</title><rect x="970.6" y="1397" width="0.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="973.63" y="1407.5" ></text>
</g>
<g >
<title>unmap_single_vma (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1349" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="41.55" y="1359.5" ></text>
</g>
<g >
<title>_dl_catch_exception (102,094,059 samples, 0.01%)</title><rect x="11.8" y="1509" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="14.82" y="1519.5" ></text>
</g>
<g >
<title>__entry_text_start (8,797,866,261 samples, 0.85%)</title><rect x="922.5" y="1493" width="10.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="925.48" y="1503.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (330,702,485 samples, 0.03%)</title><rect x="14.2" y="1589" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="17.24" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (497,706,092 samples, 0.05%)</title><rect x="32.8" y="1477" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="35.83" y="1487.5" ></text>
</g>
<g >
<title>should_failslab (101,633,920 samples, 0.01%)</title><rect x="831.2" y="1301" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="834.24" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1093" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1103.5" ></text>
</g>
<g >
<title>__fget_light (204,963,925 samples, 0.02%)</title><rect x="336.1" y="1413" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="339.08" y="1423.5" ></text>
</g>
<g >
<title>do_filp_open (103,389,516 samples, 0.01%)</title><rect x="46.3" y="1269" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="49.31" y="1279.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (2,812,958,050 samples, 0.27%)</title><rect x="871.0" y="1333" width="3.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="874.02" y="1343.5" ></text>
</g>
<g >
<title>ret_from_fork (317,866,325 samples, 0.03%)</title><rect x="61.9" y="1589" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="64.87" y="1599.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,075,787,164 samples, 0.10%)</title><rect x="244.8" y="1301" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="247.84" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,247,668,586 samples, 0.12%)</title><rect x="17.1" y="1477" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.13" y="1487.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (511,976,619 samples, 0.05%)</title><rect x="861.0" y="1317" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="864.03" y="1327.5" ></text>
</g>
<g >
<title>sock_sendmsg (197,608,090,499 samples, 19.02%)</title><rect x="106.7" y="1429" width="224.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="109.71" y="1439.5" >sock_sendmsg</text>
</g>
<g >
<title>___slab_alloc (102,542,192 samples, 0.01%)</title><rect x="789.8" y="1349" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="792.81" y="1359.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (459,735,697 samples, 0.04%)</title><rect x="907.4" y="1445" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="910.37" y="1455.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (461,370,852 samples, 0.04%)</title><rect x="1173.1" y="1461" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1176.15" y="1471.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (102,453,111 samples, 0.01%)</title><rect x="262.9" y="1253" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="265.91" y="1263.5" ></text>
</g>
<g >
<title>cpuidle_enter (202,983,541 samples, 0.02%)</title><rect x="14.3" y="1509" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="17.25" y="1519.5" ></text>
</g>
<g >
<title>__schedule (374,940,327 samples, 0.04%)</title><rect x="74.6" y="1461" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="77.57" y="1471.5" ></text>
</g>
<g >
<title>kmem_cache_free (358,554,699 samples, 0.03%)</title><rect x="469.2" y="1365" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="472.24" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="933" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="943.5" ></text>
</g>
<g >
<title>[libc.so.6] (215,938,567 samples, 0.02%)</title><rect x="15.5" y="1333" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.45" y="1343.5" ></text>
</g>
<g >
<title>security_socket_getpeersec_dgram (355,785,217 samples, 0.03%)</title><rect x="129.1" y="1413" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="132.07" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="805" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="815.5" ></text>
</g>
<g >
<title>kernel_clone (2,876,616,044 samples, 0.28%)</title><rect x="21.6" y="1397" width="3.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="24.65" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="533" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,011,045,718 samples, 0.10%)</title><rect x="27.5" y="1077" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.50" y="1087.5" ></text>
</g>
<g >
<title>security_socket_getpeersec_dgram (204,690,233 samples, 0.02%)</title><rect x="687.6" y="1413" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="690.57" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_openat (270,438,042 samples, 0.03%)</title><rect x="15.7" y="1317" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="18.70" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="757" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="767.5" ></text>
</g>
<g >
<title>skb_release_data (32,408,976,060 samples, 3.12%)</title><rect x="470.0" y="1365" width="36.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="472.99" y="1375.5" >skb..</text>
</g>
<g >
<title>skb_free_head (307,436,500 samples, 0.03%)</title><rect x="469.6" y="1365" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="472.65" y="1375.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (102,478,794 samples, 0.01%)</title><rect x="305.1" y="1269" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="308.05" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (438,229,332 samples, 0.04%)</title><rect x="31.0" y="1541" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1551.5" ></text>
</g>
<g >
<title>memset_erms (2,405,129,089 samples, 0.23%)</title><rect x="833.3" y="1317" width="2.7" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="836.27" y="1327.5" ></text>
</g>
<g >
<title>write (104,518,047 samples, 0.01%)</title><rect x="41.8" y="1493" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="44.78" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="469" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (147,849,546 samples, 0.01%)</title><rect x="28.9" y="1253" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="31.86" y="1263.5" ></text>
</g>
<g >
<title>cpu_startup_entry (932,969,732 samples, 0.09%)</title><rect x="65.7" y="1509" width="1.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="68.71" y="1519.5" ></text>
</g>
<g >
<title>do_idle (445,794,520 samples, 0.04%)</title><rect x="74.5" y="1493" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="77.49" y="1503.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (561,555,647 samples, 0.05%)</title><rect x="456.7" y="1333" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="459.70" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (270,438,042 samples, 0.03%)</title><rect x="15.7" y="1333" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="18.70" y="1343.5" ></text>
</g>
<g >
<title>do_idle (477,575,436 samples, 0.05%)</title><rect x="44.4" y="1541" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="47.43" y="1551.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (305,818,754 samples, 0.03%)</title><rect x="502.3" y="1205" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="505.33" y="1215.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,223,900,194 samples, 0.12%)</title><rect x="49.1" y="1493" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.08" y="1503.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (664,662,293 samples, 0.06%)</title><rect x="304.4" y="1285" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="307.41" y="1295.5" ></text>
</g>
<g >
<title>try_charge_memcg (1,074,036,686 samples, 0.10%)</title><rect x="269.4" y="1285" width="1.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="272.36" y="1295.5" ></text>
</g>
<g >
<title>skb_queue_tail (307,473,698 samples, 0.03%)</title><rect x="132.1" y="1413" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="135.08" y="1423.5" ></text>
</g>
<g >
<title>consume_stock (102,426,438 samples, 0.01%)</title><rect x="307.7" y="1301" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="310.66" y="1311.5" ></text>
</g>
<g >
<title>__check_heap_object (409,502,655 samples, 0.04%)</title><rect x="160.5" y="1349" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="163.49" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (3,475,544,509 samples, 0.33%)</title><rect x="1185.4" y="1589" width="3.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1188.35" y="1599.5" ></text>
</g>
<g >
<title>openat64 (270,438,042 samples, 0.03%)</title><rect x="15.7" y="1365" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="18.70" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (235,606,066 samples, 0.02%)</title><rect x="16.4" y="1461" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="19.40" y="1471.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (188,603,896 samples, 0.02%)</title><rect x="65.8" y="1429" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="68.75" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (396,747,082 samples, 0.04%)</title><rect x="27.6" y="549" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.58" y="559.5" ></text>
</g>
<g >
<title>scm_recv.constprop.0 (204,941,129 samples, 0.02%)</title><rect x="400.9" y="1397" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="403.91" y="1407.5" ></text>
</g>
<g >
<title>__unfreeze_partials (665,535,178 samples, 0.06%)</title><rect x="1009.8" y="1301" width="0.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1012.84" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (595,259,472 samples, 0.06%)</title><rect x="12.1" y="1557" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.11" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="197" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="207.5" ></text>
</g>
<g >
<title>mod_memcg_state (102,520,121 samples, 0.01%)</title><rect x="1057.0" y="1253" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1059.96" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1237" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="677" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="687.5" ></text>
</g>
<g >
<title>recv (233,558,451,998 samples, 22.48%)</title><rect x="917.7" y="1509" width="265.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="920.65" y="1519.5" >recv</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="629" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="639.5" ></text>
</g>
<g >
<title>skb_release_head_state (409,829,544 samples, 0.04%)</title><rect x="1104.0" y="1381" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1107.00" y="1391.5" ></text>
</g>
<g >
<title>exec_mmap (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1429" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="41.55" y="1439.5" ></text>
</g>
<g >
<title>__libc_start_main (1,872,374,818 samples, 0.18%)</title><rect x="46.0" y="1573" width="2.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="48.96" y="1583.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (202,183,558 samples, 0.02%)</title><rect x="489.2" y="1301" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="492.21" y="1311.5" ></text>
</g>
<g >
<title>__cond_resched (204,715,689 samples, 0.02%)</title><rect x="795.3" y="1317" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="798.27" y="1327.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;v8::internal::TranslatedValue, std::allocator&lt;v8::internal::TranslatedValue&gt; &gt;::_M_initialize_map (110,227,839 samples, 0.01%)</title><rect x="21.4" y="1397" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="24.41" y="1407.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (614,201,634 samples, 0.06%)</title><rect x="1106.2" y="1365" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1109.16" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (93,274,812 samples, 0.01%)</title><rect x="28.1" y="613" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="31.08" y="623.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (458,662,886 samples, 0.04%)</title><rect x="686.8" y="1413" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="689.82" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,521,587,096 samples, 0.34%)</title><rect x="34.5" y="1573" width="4.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="37.53" y="1583.5" ></text>
</g>
<g >
<title>setlocale (339,853,121 samples, 0.03%)</title><rect x="12.4" y="1525" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="15.40" y="1535.5" ></text>
</g>
<g >
<title>__fsnotify_parent (192,019,622 samples, 0.02%)</title><rect x="40.4" y="1365" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="43.40" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1157" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1167.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (274,434,638 samples, 0.03%)</title><rect x="61.6" y="1589" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="64.56" y="1599.5" ></text>
</g>
<g >
<title>refill_obj_stock (3,221,754,515 samples, 0.31%)</title><rect x="464.1" y="1317" width="3.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="467.07" y="1327.5" ></text>
</g>
<g >
<title>[anon] (106,070,846 samples, 0.01%)</title><rect x="45.5" y="1589" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="48.50" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="293" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1301" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1311.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (182,203,470 samples, 0.02%)</title><rect x="41.5" y="1221" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="44.47" y="1231.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1,636,299,740 samples, 0.16%)</title><rect x="375.2" y="1413" width="1.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="378.19" y="1423.5" ></text>
</g>
<g >
<title>__tsearch (120,437,010 samples, 0.01%)</title><rect x="18.1" y="1413" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="21.11" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (171,306,305 samples, 0.02%)</title><rect x="27.6" y="309" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.61" y="319.5" ></text>
</g>
<g >
<title>refill_obj_stock (357,434,903 samples, 0.03%)</title><rect x="830.8" y="1301" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="833.83" y="1311.5" ></text>
</g>
<g >
<title>[[heap]] (331,202,976 samples, 0.03%)</title><rect x="14.6" y="1589" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="17.61" y="1599.5" ></text>
</g>
<g >
<title>page_remove_rmap (591,263,513 samples, 0.06%)</title><rect x="38.6" y="1285" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="41.55" y="1295.5" ></text>
</g>
<g >
<title>path_openat (211,883,653 samples, 0.02%)</title><rect x="12.1" y="1381" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="15.12" y="1391.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (306,907,929 samples, 0.03%)</title><rect x="812.2" y="1285" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="815.18" y="1295.5" ></text>
</g>
<g >
<title>__mod_memcg_state (153,820,604 samples, 0.01%)</title><rect x="266.9" y="1269" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="269.86" y="1279.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (191,460,897,543 samples, 18.43%)</title><rect x="946.0" y="1413" width="217.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="949.00" y="1423.5" >unix_stream_recvmsg</text>
</g>
<g >
<title>inotify_handle_inode_event (120,735,775 samples, 0.01%)</title><rect x="40.5" y="1301" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="43.47" y="1311.5" ></text>
</g>
<g >
<title>mod_objcg_state (5,320,929,365 samples, 0.51%)</title><rect x="1044.6" y="1301" width="6.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1047.65" y="1311.5" ></text>
</g>
<g >
<title>_dl_catch_exception (250,386,681 samples, 0.02%)</title><rect x="48.7" y="1509" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="51.74" y="1519.5" ></text>
</g>
<g >
<title>5_ (117,441,389 samples, 0.01%)</title><rect x="10.0" y="1605" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" ></text>
</g>
<g >
<title>memcg_account_kmem (101,739,460 samples, 0.01%)</title><rect x="467.0" y="1285" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="470.03" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="309" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="319.5" ></text>
</g>
<g >
<title>import_single_range (971,771,841 samples, 0.09%)</title><rect x="336.8" y="1445" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="339.78" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (219,549,715,343 samples, 21.13%)</title><rect x="658.5" y="1461" width="249.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="661.55" y="1471.5" >__x64_sys_sendto</text>
</g>
<g >
<title>__kmalloc_node_track_caller (37,342,990,663 samples, 3.59%)</title><rect x="793.9" y="1333" width="42.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="796.88" y="1343.5" >__k..</text>
</g>
<g >
<title>__skb_datagram_iter (611,119,615 samples, 0.06%)</title><rect x="564.5" y="1365" width="0.7" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="567.47" y="1375.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (408,914,194 samples, 0.04%)</title><rect x="712.4" y="1397" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="715.39" y="1407.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (7,920,383,350 samples, 0.76%)</title><rect x="861.7" y="1333" width="9.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="864.73" y="1343.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (611,803,648 samples, 0.06%)</title><rect x="499.7" y="1269" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="502.72" y="1279.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (358,029,104 samples, 0.03%)</title><rect x="294.1" y="1317" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="297.12" y="1327.5" ></text>
</g>
<g >
<title>mmput (107,776,385 samples, 0.01%)</title><rect x="48.1" y="1413" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="51.13" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (296,596,242 samples, 0.03%)</title><rect x="12.4" y="1445" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.42" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (274,434,638 samples, 0.03%)</title><rect x="61.6" y="1573" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="64.56" y="1583.5" ></text>
</g>
<g >
<title>futex_wake (113,316,245 samples, 0.01%)</title><rect x="30.3" y="1413" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="33.28" y="1423.5" ></text>
</g>
<g >
<title>remove_vma (102,052,455 samples, 0.01%)</title><rect x="35.1" y="1365" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="38.12" y="1375.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (4,254,647,286 samples, 0.41%)</title><rect x="25.4" y="1557" width="4.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="28.38" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (222,618,586 samples, 0.02%)</title><rect x="16.8" y="1493" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="19.80" y="1503.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (2,890,798,362 samples, 0.28%)</title><rect x="21.6" y="1509" width="3.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="24.65" y="1519.5" ></text>
</g>
<g >
<title>cache_from_obj (1,941,932,591 samples, 0.19%)</title><rect x="1010.6" y="1333" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1013.60" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (432,056,761 samples, 0.04%)</title><rect x="47.6" y="1493" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="50.60" y="1503.5" ></text>
</g>
<g >
<title>__virt_addr_valid (407,888,960 samples, 0.04%)</title><rect x="721.0" y="1349" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="724.04" y="1359.5" ></text>
</g>
<g >
<title>__rcu_read_lock (102,426,828 samples, 0.01%)</title><rect x="462.9" y="1317" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="465.85" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="373" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="383.5" ></text>
</g>
<g >
<title>__rcu_read_lock (563,058,527 samples, 0.05%)</title><rect x="250.2" y="1285" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="253.19" y="1295.5" ></text>
</g>
<g >
<title>exit_mm (233,413,133 samples, 0.02%)</title><rect x="19.1" y="1509" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="22.11" y="1519.5" ></text>
</g>
<g >
<title>copy_pte_range (1,859,753,457 samples, 0.18%)</title><rect x="22.3" y="1285" width="2.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="25.32" y="1295.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (922,125,898 samples, 0.09%)</title><rect x="262.0" y="1269" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="264.98" y="1279.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (183,085,058 samples, 0.02%)</title><rect x="46.4" y="1301" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="49.42" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="853" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="863.5" ></text>
</g>
<g >
<title>sock_recvmsg (211,920,392,448 samples, 20.40%)</title><rect x="373.6" y="1429" width="240.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="376.62" y="1439.5" >sock_recvmsg</text>
</g>
<g >
<title>exec_binprm (3,521,587,096 samples, 0.34%)</title><rect x="34.5" y="1493" width="4.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="37.53" y="1503.5" ></text>
</g>
<g >
<title>mod_objcg_state (5,011,927,663 samples, 0.48%)</title><rect x="1013.9" y="1333" width="5.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1016.85" y="1343.5" ></text>
</g>
<g >
<title>__cond_resched (204,954,300 samples, 0.02%)</title><rect x="983.2" y="1381" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="986.18" y="1391.5" ></text>
</g>
<g >
<title>sshd (14,277,556,307 samples, 1.37%)</title><rect x="50.6" y="1605" width="16.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="53.57" y="1615.5" ></text>
</g>
<g >
<title>refill_stock (101,524,228 samples, 0.01%)</title><rect x="1057.8" y="1269" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1060.77" y="1279.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (201,319,938 samples, 0.02%)</title><rect x="45.6" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="48.62" y="1583.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (511,378,378 samples, 0.05%)</title><rect x="157.8" y="1381" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="160.82" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (621,397,203 samples, 0.06%)</title><rect x="27.6" y="693" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.55" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (605,006,003 samples, 0.06%)</title><rect x="10.8" y="1445" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.78" y="1455.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (306,757,397 samples, 0.03%)</title><rect x="1043.4" y="1237" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1046.43" y="1247.5" ></text>
</g>
<g >
<title>__sys_recvfrom (256,234,932 samples, 0.02%)</title><rect x="935.5" y="1461" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="938.55" y="1471.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (716,116,617 samples, 0.07%)</title><rect x="287.8" y="1333" width="0.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="290.85" y="1343.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (100,888,644,172 samples, 9.71%)</title><rect x="206.0" y="1397" width="114.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="209.04" y="1407.5" >sock_alloc_sen..</text>
</g>
<g >
<title>start_kernel (937,302,636 samples, 0.09%)</title><rect x="65.7" y="1557" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="68.71" y="1567.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (549,570,736 samples, 0.05%)</title><rect x="39.4" y="1461" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="42.37" y="1471.5" ></text>
</g>
<g >
<title>aa_unix_msg_perm (254,482,345 samples, 0.02%)</title><rect x="130.9" y="1381" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="133.92" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (259,023,693 samples, 0.02%)</title><rect x="50.1" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="53.10" y="1423.5" ></text>
</g>
<g >
<title>__libc_start_main (724,744,859 samples, 0.07%)</title><rect x="10.8" y="1573" width="0.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.76" y="1583.5" ></text>
</g>
<g >
<title>__kmem_cache_free (256,220,975 samples, 0.02%)</title><rect x="472.1" y="1333" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="475.08" y="1343.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (512,007,075 samples, 0.05%)</title><rect x="244.3" y="1301" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="247.26" y="1311.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (41,544,474,853 samples, 4.00%)</title><rect x="1116.3" y="1365" width="47.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1119.27" y="1375.5" >skb_..</text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (511,639,425 samples, 0.05%)</title><rect x="810.9" y="1285" width="0.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="813.90" y="1295.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (615,662,624 samples, 0.06%)</title><rect x="738.5" y="1381" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="741.46" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,025,731 samples, 0.02%)</title><rect x="27.6" y="405" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.60" y="415.5" ></text>
</g>
<g >
<title>__mod_memcg_state (153,563,999 samples, 0.01%)</title><rect x="1023.0" y="1253" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1025.97" y="1263.5" ></text>
</g>
<g >
<title>skb_release_head_state (32,219,449,697 samples, 3.10%)</title><rect x="1060.4" y="1365" width="36.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1063.44" y="1375.5" >skb..</text>
</g>
<g >
<title>anon_vma_clone (184,972,627 samples, 0.02%)</title><rect x="21.7" y="1317" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="24.67" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1253" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="373" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (535,740,766 samples, 0.05%)</title><rect x="27.6" y="645" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.58" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="325" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="335.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (510,731,039 samples, 0.05%)</title><rect x="268.0" y="1237" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="270.97" y="1247.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (459,459,080 samples, 0.04%)</title><rect x="347.5" y="1477" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="350.46" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="757" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="767.5" ></text>
</g>
<g >
<title>skb_unlink (409,300,712 samples, 0.04%)</title><rect x="401.1" y="1397" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="404.15" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (310,457,270 samples, 0.03%)</title><rect x="48.7" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="51.68" y="1567.5" ></text>
</g>
<g >
<title>uds (981,347,607,268 samples, 94.45%)</title><rect x="75.5" y="1605" width="1114.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="78.45" y="1615.5" >uds</text>
</g>
<g >
<title>do_syscall_64 (306,893,911 samples, 0.03%)</title><rect x="932.5" y="1493" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="935.47" y="1503.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (306,613,147 samples, 0.03%)</title><rect x="506.5" y="1317" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="509.45" y="1327.5" ></text>
</g>
<g >
<title>rest_init (445,917,430 samples, 0.04%)</title><rect x="74.5" y="1525" width="0.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="77.49" y="1535.5" ></text>
</g>
<g >
<title>__mod_memcg_state (102,450,307 samples, 0.01%)</title><rect x="1022.6" y="1269" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1025.63" y="1279.5" ></text>
</g>
<g >
<title>__x64_sys_execve (116,822,642 samples, 0.01%)</title><rect x="48.1" y="1557" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="51.12" y="1567.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (186,969,732,272 samples, 18.00%)</title><rect x="402.0" y="1397" width="212.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="404.96" y="1407.5" >unix_stream_read_generic</text>
</g>
<g >
<title>[bash] (1,440,318,057 samples, 0.14%)</title><rect x="46.0" y="1477" width="1.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="48.96" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1157" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1167.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (515,884,769 samples, 0.05%)</title><rect x="29.4" y="1509" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="32.39" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,265,512,416 samples, 0.12%)</title><rect x="17.1" y="1493" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.13" y="1503.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1,226,687,737 samples, 0.12%)</title><rect x="164.9" y="1333" width="1.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="167.85" y="1343.5" ></text>
</g>
<g >
<title>__rcu_read_lock (459,707,954 samples, 0.04%)</title><rect x="994.8" y="1349" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="997.80" y="1359.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (459,459,099 samples, 0.04%)</title><rect x="690.6" y="1413" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="693.60" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_wait4 (89,561,692 samples, 0.01%)</title><rect x="47.5" y="1173" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="50.49" y="1183.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (562,144,033 samples, 0.05%)</title><rect x="463.0" y="1301" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="466.03" y="1311.5" ></text>
</g>
<g >
<title>kmem_cache_free (24,146,287,320 samples, 2.32%)</title><rect x="996.5" y="1349" width="27.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="999.48" y="1359.5" >k..</text>
</g>
<g >
<title>[libc.so.6] (104,252,785 samples, 0.01%)</title><rect x="31.2" y="37" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="34.23" y="47.5" ></text>
</g>
<g >
<title>[ls] (1,167,186,214 samples, 0.11%)</title><rect x="15.3" y="1509" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="18.34" y="1519.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,074,051,603 samples, 0.10%)</title><rect x="855.3" y="1333" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="858.33" y="1343.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (355,891,214 samples, 0.03%)</title><rect x="488.8" y="1301" width="0.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="491.81" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (130,471,839 samples, 0.01%)</title><rect x="30.3" y="1461" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="33.27" y="1471.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (941,189,329 samples, 0.09%)</title><rect x="62.8" y="1477" width="1.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="65.82" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (1,983,038,392 samples, 0.19%)</title><rect x="27.1" y="1493" width="2.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="30.10" y="1503.5" ></text>
</g>
<g >
<title>__poll (857,374,123 samples, 0.08%)</title><rect x="39.3" y="1541" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="42.26" y="1551.5" ></text>
</g>
<g >
<title>memcg_account_kmem (1,278,077,618 samples, 0.12%)</title><rect x="501.3" y="1253" width="1.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="504.29" y="1263.5" ></text>
</g>
<g >
<title>import_single_range (970,569,051 samples, 0.09%)</title><rect x="906.0" y="1445" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="909.04" y="1455.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (408,596,605 samples, 0.04%)</title><rect x="166.6" y="1349" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="169.60" y="1359.5" ></text>
</g>
<g >
<title>try_charge_memcg (1,129,717,928 samples, 0.11%)</title><rect x="829.6" y="1285" width="1.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="832.55" y="1295.5" ></text>
</g>
<g >
<title>kmem_cache_free (255,677,070 samples, 0.02%)</title><rect x="1024.8" y="1365" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1027.84" y="1375.5" ></text>
</g>
<g >
<title>__napi_poll (246,488,913 samples, 0.02%)</title><rect x="71.2" y="1381" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="74.24" y="1391.5" ></text>
</g>
<g >
<title>__rcu_read_lock (409,511,557 samples, 0.04%)</title><rect x="1090.9" y="1317" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1093.88" y="1327.5" ></text>
</g>
<g >
<title>skb_unlink (9,567,069,522 samples, 0.92%)</title><rect x="1104.5" y="1381" width="10.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1107.47" y="1391.5" ></text>
</g>
<g >
<title>__check_object_size (614,555,025 samples, 0.06%)</title><rect x="1118.8" y="1333" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1121.82" y="1343.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (312,023,092 samples, 0.03%)</title><rect x="44.4" y="1493" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="47.43" y="1503.5" ></text>
</g>
<g >
<title>poll_idle (94,731,221 samples, 0.01%)</title><rect x="14.3" y="1477" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="17.34" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_lock (5,420,959,673 samples, 0.52%)</title><rect x="418.5" y="1381" width="6.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="421.49" y="1391.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (9,004,047,380 samples, 0.87%)</title><rect x="1121.1" y="1301" width="10.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1124.14" y="1311.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (207,033,540 samples, 0.02%)</title><rect x="61.0" y="1589" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="64.02" y="1599.5" ></text>
</g>
<g >
<title>__rcu_read_lock (409,235,065 samples, 0.04%)</title><rect x="152.2" y="1397" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="155.19" y="1407.5" ></text>
</g>
<g >
<title>load_elf_binary (116,822,642 samples, 0.01%)</title><rect x="48.1" y="1461" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="51.12" y="1471.5" ></text>
</g>
<g >
<title>proc_readfd_common (183,085,058 samples, 0.02%)</title><rect x="46.4" y="1253" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="49.42" y="1263.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (204,560,742 samples, 0.02%)</title><rect x="804.5" y="1269" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="807.45" y="1279.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (615,220,201 samples, 0.06%)</title><rect x="1189.3" y="1589" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.30" y="1599.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (314,402,835 samples, 0.03%)</title><rect x="11.6" y="1541" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.59" y="1551.5" ></text>
</g>
<g >
<title>unmap_page_range (184,315,958 samples, 0.02%)</title><rect x="19.2" y="1413" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="22.16" y="1423.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (307,378,582 samples, 0.03%)</title><rect x="662.6" y="1429" width="0.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="665.61" y="1439.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (358,554,517 samples, 0.03%)</title><rect x="271.9" y="1317" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="274.86" y="1327.5" ></text>
</g>
<g >
<title>sock_sendmsg (153,756,282 samples, 0.01%)</title><rect x="337.9" y="1445" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="340.88" y="1455.5" ></text>
</g>
<g >
<title>__rcu_read_lock (409,024,306 samples, 0.04%)</title><rect x="504.9" y="1317" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="507.89" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,226,360,244 samples, 0.12%)</title><rect x="49.1" y="1509" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.08" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,456,453,196 samples, 0.14%)</title><rect x="27.5" y="1349" width="1.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.46" y="1359.5" ></text>
</g>
<g >
<title>aa_unix_msg_perm (102,333,268 samples, 0.01%)</title><rect x="376.9" y="1381" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="379.93" y="1391.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (4,136,006,597 samples, 0.40%)</title><rect x="25.4" y="1541" width="4.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="28.39" y="1551.5" ></text>
</g>
<g >
<title>security_socket_getpeersec_dgram (664,503,262 samples, 0.06%)</title><rect x="715.5" y="1397" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="718.52" y="1407.5" ></text>
</g>
<g >
<title>sock_wfree (32,508,832,251 samples, 3.13%)</title><rect x="508.6" y="1333" width="36.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="511.60" y="1343.5" >soc..</text>
</g>
<g >
<title>parse_and_execute (1,440,318,057 samples, 0.14%)</title><rect x="46.0" y="1509" width="1.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="48.96" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (796,660,300 samples, 0.08%)</title><rect x="27.5" y="933" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.53" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (151,073,870 samples, 0.01%)</title><rect x="48.1" y="1573" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="51.12" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (6,393,889,797 samples, 0.62%)</title><rect x="1106.9" y="1365" width="7.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1109.85" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="741" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,157,904,592 samples, 0.11%)</title><rect x="49.1" y="1445" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.08" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="277" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="287.5" ></text>
</g>
<g >
<title>path_lookupat (184,352,934 samples, 0.02%)</title><rect x="16.4" y="1381" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="19.40" y="1391.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4,246,199,967 samples, 0.41%)</title><rect x="172.2" y="1381" width="4.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="175.17" y="1391.5" ></text>
</g>
<g >
<title>[bash] (391,080,291 samples, 0.04%)</title><rect x="46.9" y="1285" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="49.90" y="1295.5" ></text>
</g>
<g >
<title>scm_recv.constprop.0 (1,177,228,192 samples, 0.11%)</title><rect x="1102.1" y="1381" width="1.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1105.15" y="1391.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (409,458,676 samples, 0.04%)</title><rect x="915.3" y="1445" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="918.27" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (461,037,378 samples, 0.04%)</title><rect x="451.4" y="1285" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="454.36" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="613" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="623.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,177,837,750 samples, 0.11%)</title><rect x="288.7" y="1333" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="291.66" y="1343.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (819,080,863 samples, 0.08%)</title><rect x="613.4" y="1349" width="0.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="616.37" y="1359.5" ></text>
</g>
<g >
<title>swapper (7,633,460,774 samples, 0.73%)</title><rect x="66.8" y="1605" width="8.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="69.78" y="1615.5" ></text>
</g>
<g >
<title>___slab_alloc (238,600,885 samples, 0.02%)</title><rect x="24.6" y="1301" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="27.59" y="1311.5" ></text>
</g>
<g >
<title>__x64_sys_read (488,793,405 samples, 0.05%)</title><rect x="33.7" y="1461" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="36.67" y="1471.5" ></text>
</g>
<g >
<title>skb_release_data (256,139,576 samples, 0.02%)</title><rect x="553.2" y="1381" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="556.20" y="1391.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (409,804,754 samples, 0.04%)</title><rect x="346.2" y="1429" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="349.24" y="1439.5" ></text>
</g>
<g >
<title>kmalloc_reserve (256,209,898 samples, 0.02%)</title><rect x="310.9" y="1365" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="313.86" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (201,319,938 samples, 0.02%)</title><rect x="45.6" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="48.62" y="1551.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (95,481,394 samples, 0.01%)</title><rect x="45.1" y="1445" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="48.13" y="1455.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,051,339,851 samples, 0.29%)</title><rect x="62.2" y="1557" width="3.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="65.23" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (201,319,938 samples, 0.02%)</title><rect x="45.6" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="48.62" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (728,975,980 samples, 0.07%)</title><rect x="49.2" y="1429" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.17" y="1439.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (3,378,666,390 samples, 0.33%)</title><rect x="1019.5" y="1333" width="3.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1022.54" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_futex (130,471,839 samples, 0.01%)</title><rect x="30.3" y="1445" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="33.27" y="1455.5" ></text>
</g>
<g >
<title>mod_objcg_state (460,935,127 samples, 0.04%)</title><rect x="263.0" y="1301" width="0.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="266.03" y="1311.5" ></text>
</g>
<g >
<title>refill_obj_stock (357,842,750 samples, 0.03%)</title><rect x="829.1" y="1285" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="832.14" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="1477" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="1487.5" ></text>
</g>
<g >
<title>[[stack]] (603,975,659 samples, 0.06%)</title><rect x="19.4" y="1589" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="22.38" y="1599.5" ></text>
</g>
<g >
<title>tcp_seq_start (282,932,601 samples, 0.03%)</title><rect x="33.9" y="1365" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="36.90" y="1375.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (818,256,759 samples, 0.08%)</title><rect x="1049.8" y="1285" width="0.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1052.76" y="1295.5" ></text>
</g>
<g >
<title>consume_stock (188,796,342 samples, 0.02%)</title><rect x="10.3" y="1413" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="13.34" y="1423.5" ></text>
</g>
<g >
<title>sock_sendmsg (209,226,120,331 samples, 20.14%)</title><rect x="663.0" y="1429" width="237.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="665.96" y="1439.5" >sock_sendmsg</text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (203,793,563 samples, 0.02%)</title><rect x="1182.1" y="1493" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1185.10" y="1503.5" ></text>
</g>
<g >
<title>cpu_startup_entry (445,917,430 samples, 0.04%)</title><rect x="74.5" y="1509" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="77.49" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (127,432,917 samples, 0.01%)</title><rect x="33.5" y="1509" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="36.47" y="1519.5" ></text>
</g>
<g >
<title>unmap_vmas (184,315,958 samples, 0.02%)</title><rect x="19.2" y="1445" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="22.16" y="1455.5" ></text>
</g>
<g >
<title>__rcu_read_lock (614,043,783 samples, 0.06%)</title><rect x="860.3" y="1317" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="863.34" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="821" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="831.5" ></text>
</g>
<g >
<title>unix_write_space (358,736,729 samples, 0.03%)</title><rect x="545.5" y="1333" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="548.52" y="1343.5" ></text>
</g>
<g >
<title>put_pid (102,538,238 samples, 0.01%)</title><rect x="1061.0" y="1349" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1064.02" y="1359.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (409,651,414 samples, 0.04%)</title><rect x="1115.8" y="1365" width="0.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1118.80" y="1375.5" ></text>
</g>
<g >
<title>copy_process (2,876,616,044 samples, 0.28%)</title><rect x="21.6" y="1381" width="3.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="24.65" y="1391.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (22,780,704,354 samples, 2.19%)</title><rect x="587.5" y="1317" width="25.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="590.50" y="1327.5" >c..</text>
</g>
<g >
<title>mod_objcg_state (3,684,873,320 samples, 0.35%)</title><rect x="301.0" y="1317" width="4.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="303.98" y="1327.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (254,203,915 samples, 0.02%)</title><rect x="29.5" y="1381" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="32.54" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="981" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1029" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (227,935,444,932 samples, 21.94%)</title><rect x="656.9" y="1477" width="258.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="659.86" y="1487.5" >do_syscall_64</text>
</g>
<g >
<title>__d_lookup (91,911,004 samples, 0.01%)</title><rect x="46.5" y="1205" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="49.47" y="1215.5" ></text>
</g>
<g >
<title>__mmput (3,521,587,096 samples, 0.34%)</title><rect x="34.5" y="1397" width="4.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="37.53" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,369,515,152 samples, 0.13%)</title><rect x="27.5" y="1317" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.47" y="1327.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (158,304,377 samples, 0.02%)</title><rect x="15.5" y="1221" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="18.46" y="1231.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (409,554,449 samples, 0.04%)</title><rect x="714.4" y="1397" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="717.36" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (231,113,274 samples, 0.02%)</title><rect x="27.6" y="373" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.60" y="383.5" ></text>
</g>
<g >
<title>__virt_addr_valid (2,199,383,564 samples, 0.21%)</title><rect x="725.5" y="1333" width="2.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="728.46" y="1343.5" ></text>
</g>
<g >
<title>localtime_r (150,254,650 samples, 0.01%)</title><rect x="16.1" y="1477" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="19.05" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="229" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="239.5" ></text>
</g>
<g >
<title>do_group_exit (233,413,133 samples, 0.02%)</title><rect x="19.1" y="1541" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="22.11" y="1551.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (306,757,397 samples, 0.03%)</title><rect x="1043.4" y="1253" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1046.43" y="1263.5" ></text>
</g>
<g >
<title>load_elf_binary (3,521,587,096 samples, 0.34%)</title><rect x="34.5" y="1461" width="4.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="37.53" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1205" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="1215.5" ></text>
</g>
<g >
<title>kmalloc_size_roundup (1,125,968,662 samples, 0.11%)</title><rect x="836.9" y="1349" width="1.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="839.93" y="1359.5" ></text>
</g>
<g >
<title>mod_memcg_state (358,387,005 samples, 0.03%)</title><rect x="828.7" y="1285" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="831.74" y="1295.5" ></text>
</g>
<g >
<title>mod_memcg_state (204,767,311 samples, 0.02%)</title><rect x="268.6" y="1285" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="271.61" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,049,555 samples, 0.02%)</title><rect x="11.0" y="1413" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.02" y="1423.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, DirEntry&gt;, std::allocator&lt;std::pair&lt;std::string const, DirEntry&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1,435,046,094 samples, 0.14%)</title><rect x="25.4" y="1493" width="1.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="28.43" y="1503.5" ></text>
</g>
<g >
<title>send@plt (102,619,024 samples, 0.01%)</title><rect x="632.5" y="1509" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="635.47" y="1519.5" ></text>
</g>
<g >
<title>node (16,888,718,094 samples, 1.63%)</title><rect x="19.4" y="1605" width="19.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="22.37" y="1615.5" ></text>
</g>
<g >
<title>__do_sys_wait4 (89,561,692 samples, 0.01%)</title><rect x="47.5" y="1157" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="50.49" y="1167.5" ></text>
</g>
<g >
<title>__fget_light (254,490,077 samples, 0.02%)</title><rect x="620.7" y="1413" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="623.70" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,212,453,330 samples, 0.12%)</title><rect x="27.5" y="1253" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.48" y="1263.5" ></text>
</g>
<g >
<title>path_lookupat (145,282,536 samples, 0.01%)</title><rect x="16.8" y="1397" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="19.80" y="1407.5" ></text>
</g>
<g >
<title>memset (256,212,633 samples, 0.02%)</title><rect x="874.6" y="1349" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="877.62" y="1359.5" ></text>
</g>
<g >
<title>skb_copy_datagram_from_iter (18,972,960,509 samples, 1.83%)</title><rect x="716.3" y="1397" width="21.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="719.28" y="1407.5" >s..</text>
</g>
<g >
<title>mutex_lock (511,889,374 samples, 0.05%)</title><rect x="396.9" y="1397" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="399.91" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (102,657,463 samples, 0.01%)</title><rect x="15.1" y="1493" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="18.10" y="1503.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (188,796,342 samples, 0.02%)</title><rect x="10.3" y="1461" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.34" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,757,643,814 samples, 0.17%)</title><rect x="27.3" y="1461" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.35" y="1471.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (153,334,764 samples, 0.01%)</title><rect x="457.3" y="1333" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="460.34" y="1343.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (102,208,363 samples, 0.01%)</title><rect x="300.9" y="1317" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="303.87" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,181,359,869 samples, 0.11%)</title><rect x="49.1" y="1477" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.08" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (461,013,267 samples, 0.04%)</title><rect x="31.5" y="389" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.54" y="399.5" ></text>
</g>
<g >
<title>execute_command_internal (616,021,605 samples, 0.06%)</title><rect x="46.1" y="1445" width="0.7" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="49.05" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock (15,854,023,223 samples, 1.53%)</title><rect x="378.1" y="1397" width="18.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="381.15" y="1407.5" ></text>
</g>
<g >
<title>bprm_execve (3,521,587,096 samples, 0.34%)</title><rect x="34.5" y="1525" width="4.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="37.53" y="1535.5" ></text>
</g>
<g >
<title>__libc_start_main (2,857,784,714 samples, 0.28%)</title><rect x="15.3" y="1573" width="3.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="18.32" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (219,493,234,780 samples, 21.13%)</title><rect x="932.8" y="1493" width="249.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="935.82" y="1503.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>[libc.so.6] (432,056,761 samples, 0.04%)</title><rect x="47.6" y="1461" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="50.60" y="1471.5" ></text>
</g>
<g >
<title>mod_memcg_state (766,110,562 samples, 0.07%)</title><rect x="1056.1" y="1237" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1059.09" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (856,553,194 samples, 0.08%)</title><rect x="27.5" y="997" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.53" y="1007.5" ></text>
</g>
<g >
<title>do_syscall_64 (89,561,692 samples, 0.01%)</title><rect x="47.5" y="1189" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="50.49" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="1493" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (112,692,320 samples, 0.01%)</title><rect x="33.5" y="1493" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="36.49" y="1503.5" ></text>
</g>
<g >
<title>_start (971,683,626,091 samples, 93.52%)</title><rect x="79.7" y="1589" width="1103.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="82.69" y="1599.5" >_start</text>
</g>
<g >
<title>read (488,793,405 samples, 0.05%)</title><rect x="33.7" y="1509" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="36.67" y="1519.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (1,532,165,784 samples, 0.15%)</title><rect x="129.5" y="1413" width="1.7" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="132.47" y="1423.5" ></text>
</g>
<g >
<title>check_heap_object (459,289,013 samples, 0.04%)</title><rect x="728.3" y="1365" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="731.30" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (232,876,295 samples, 0.02%)</title><rect x="48.8" y="1429" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="51.76" y="1439.5" ></text>
</g>
<g >
<title>_copy_from_iter (715,955,904 samples, 0.07%)</title><rect x="153.2" y="1397" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="156.17" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (198,022,976 samples, 0.02%)</title><rect x="29.1" y="1381" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="32.12" y="1391.5" ></text>
</g>
<g >
<title>uv__read (102,078,010 samples, 0.01%)</title><rect x="32.6" y="1541" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="35.63" y="1551.5" ></text>
</g>
<g >
<title>memcg_account_kmem (203,366,121 samples, 0.02%)</title><rect x="251.1" y="1301" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="254.12" y="1311.5" ></text>
</g>
<g >
<title>[ls] (1,541,601,380 samples, 0.15%)</title><rect x="15.3" y="1525" width="1.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="18.32" y="1535.5" ></text>
</g>
<g >
<title>execute_command_internal (552,679,814 samples, 0.05%)</title><rect x="46.8" y="1397" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="49.75" y="1407.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (665,042,223 samples, 0.06%)</title><rect x="822.2" y="1253" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="825.23" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (511,160,141 samples, 0.05%)</title><rect x="98.9" y="1493" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="101.86" y="1503.5" ></text>
</g>
<g >
<title>release_pages (184,504,112 samples, 0.02%)</title><rect x="38.2" y="1237" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="41.22" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (189,248,991 samples, 0.02%)</title><rect x="30.4" y="1541" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="33.44" y="1551.5" ></text>
</g>
<g >
<title>_copy_to_iter (613,084,531 samples, 0.06%)</title><rect x="568.5" y="1333" width="0.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="571.54" y="1343.5" ></text>
</g>
<g >
<title>__fget_light (307,178,178 samples, 0.03%)</title><rect x="1170.1" y="1413" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1173.13" y="1423.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (186,685,166 samples, 0.02%)</title><rect x="11.6" y="1509" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.60" y="1519.5" ></text>
</g>
<g >
<title>kmalloc_slab (614,254,994 samples, 0.06%)</title><rect x="271.2" y="1317" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="274.16" y="1327.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (5,422,756,333 samples, 0.52%)</title><rect x="624.9" y="1461" width="6.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="627.87" y="1471.5" ></text>
</g>
<g >
<title>skb_put (471,766,663 samples, 0.05%)</title><rect x="689.8" y="1413" width="0.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="692.78" y="1423.5" ></text>
</g>
<g >
<title>rest_init (266,781,604 samples, 0.03%)</title><rect x="45.0" y="1525" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="47.97" y="1535.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (2,916,211,721 samples, 0.28%)</title><rect x="292.6" y="1333" width="3.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="295.56" y="1343.5" ></text>
</g>
<g >
<title>unix_stream_read_actor (44,187,862,815 samples, 4.25%)</title><rect x="564.1" y="1381" width="50.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="567.12" y="1391.5" >unix_..</text>
</g>
<g >
<title>__check_object_size (9,669,982,804 samples, 0.93%)</title><rect x="1121.1" y="1317" width="11.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1124.14" y="1327.5" ></text>
</g>
<g >
<title>__alloc_skb (356,629,450 samples, 0.03%)</title><rect x="769.2" y="1381" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="772.20" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,166,050,851 samples, 0.11%)</title><rect x="49.1" y="1461" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.08" y="1471.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (4,045,187,328 samples, 0.39%)</title><rect x="1176.2" y="1445" width="4.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1179.23" y="1455.5" ></text>
</g>
<g >
<title>__refill_stock (204,677,863 samples, 0.02%)</title><rect x="501.1" y="1253" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="504.05" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,523,854,611 samples, 0.34%)</title><rect x="34.5" y="1589" width="4.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="37.53" y="1599.5" ></text>
</g>
<g >
<title>v8::internal::OptimizedFrame::Summarize (153,089,189 samples, 0.01%)</title><rect x="21.4" y="1461" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="24.36" y="1471.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (460,948,924 samples, 0.04%)</title><rect x="1130.8" y="1285" width="0.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1133.85" y="1295.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (511,940,395 samples, 0.05%)</title><rect x="854.8" y="1333" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="857.75" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,021,726,610 samples, 0.10%)</title><rect x="27.5" y="1125" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.49" y="1135.5" ></text>
</g>
<g >
<title>exit_mmap (107,199,385 samples, 0.01%)</title><rect x="48.1" y="1381" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="51.13" y="1391.5" ></text>
</g>
<g >
<title>kfree (28,488,125,512 samples, 2.74%)</title><rect x="1028.1" y="1333" width="32.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1031.09" y="1343.5" >kf..</text>
</g>
<g >
<title>put_pid (204,794,105 samples, 0.02%)</title><rect x="687.3" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="690.34" y="1423.5" ></text>
</g>
<g >
<title>skb_queue_tail (25,217,202,057 samples, 2.43%)</title><rect x="737.8" y="1397" width="28.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="740.83" y="1407.5" >sk..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (431,190,705 samples, 0.04%)</title><rect x="31.0" y="773" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.99" y="783.5" ></text>
</g>
<g >
<title>memcg_account_kmem (1,533,999,058 samples, 0.15%)</title><rect x="827.0" y="1285" width="1.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="830.00" y="1295.5" ></text>
</g>
<g >
<title>mas_wr_modify (108,955,296 samples, 0.01%)</title><rect x="24.5" y="1301" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="27.46" y="1311.5" ></text>
</g>
<g >
<title>__refill_stock (153,803,009 samples, 0.01%)</title><rect x="1057.6" y="1237" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1060.60" y="1247.5" ></text>
</g>
<g >
<title>pte_alloc_one (271,468,952 samples, 0.03%)</title><rect x="22.5" y="1253" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="25.49" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,899,646 samples, 0.04%)</title><rect x="31.5" y="85" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="95.5" ></text>
</g>
<g >
<title>put_pid (358,590,771 samples, 0.03%)</title><rect x="128.7" y="1413" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="131.66" y="1423.5" ></text>
</g>
<g >
<title>memcg_account_kmem (101,891,089 samples, 0.01%)</title><rect x="861.6" y="1333" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="864.62" y="1343.5" ></text>
</g>
<g >
<title>ttwu_do_activate (92,520,042 samples, 0.01%)</title><rect x="66.5" y="1429" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="69.51" y="1439.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (1,176,093,073 samples, 0.11%)</title><rect x="821.7" y="1269" width="1.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="824.71" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (431,190,705 samples, 0.04%)</title><rect x="31.0" y="245" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.99" y="255.5" ></text>
</g>
<g >
<title>runc (91,816,815 samples, 0.01%)</title><rect x="45.3" y="1605" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="48.30" y="1615.5" ></text>
</g>
<g >
<title>unix_passcred_enabled (407,137,247 samples, 0.04%)</title><rect x="691.6" y="1413" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="694.65" y="1423.5" ></text>
</g>
<g >
<title>wait_for_unix_gc (510,621,867 samples, 0.05%)</title><rect x="899.4" y="1397" width="0.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="902.42" y="1407.5" ></text>
</g>
<g >
<title>glob_filename (461,058,939 samples, 0.04%)</title><rect x="46.1" y="1397" width="0.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="49.15" y="1407.5" ></text>
</g>
<g >
<title>__unfreeze_partials (665,444,418 samples, 0.06%)</title><rect x="1043.0" y="1269" width="0.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1046.02" y="1279.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (110,231,671 samples, 0.01%)</title><rect x="24.5" y="1317" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="27.46" y="1327.5" ></text>
</g>
<g >
<title>mod_objcg_state (509,654,481 samples, 0.05%)</title><rect x="823.0" y="1301" width="0.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="826.04" y="1311.5" ></text>
</g>
<g >
<title>__check_object_size (255,916,012 samples, 0.02%)</title><rect x="718.1" y="1381" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="721.08" y="1391.5" ></text>
</g>
<g >
<title>__writeback_single_inode (111,477,483 samples, 0.01%)</title><rect x="62.0" y="1445" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="65.05" y="1455.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1,739,783,569 samples, 0.17%)</title><rect x="807.5" y="1301" width="2.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="810.53" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,475,417,660 samples, 0.14%)</title><rect x="27.4" y="1381" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.44" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_read (179,489,736 samples, 0.02%)</title><rect x="30.4" y="1509" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="33.45" y="1519.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (358,593,415 samples, 0.03%)</title><rect x="1120.7" y="1317" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1123.74" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (461,013,267 samples, 0.04%)</title><rect x="31.5" y="789" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="34.54" y="799.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (96,194,458 samples, 0.01%)</title><rect x="45.1" y="1477" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="48.12" y="1487.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1,581,829,640 samples, 0.15%)</title><rect x="579.4" y="1269" width="1.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="582.35" y="1279.5" ></text>
</g>
<g >
<title>uv_run (104,568,840 samples, 0.01%)</title><rect x="34.3" y="1477" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="37.35" y="1487.5" ></text>
</g>
<g >
<title>__filemap_add_folio (140,844,101 samples, 0.01%)</title><rect x="41.1" y="1173" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="44.07" y="1183.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (90,910,860,259 samples, 8.75%)</title><rect x="208.5" y="1381" width="103.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="211.48" y="1391.5" >alloc_skb_wi..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (152,803,111 samples, 0.01%)</title><rect x="45.6" y="1509" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="48.62" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (624,532,730 samples, 0.06%)</title><rect x="10.8" y="1461" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.78" y="1471.5" ></text>
</g>
<g >
<title>set_default_locale (432,056,761 samples, 0.04%)</title><rect x="47.6" y="1525" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="50.60" y="1535.5" ></text>
</g>
</g>
</svg>
