<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1686.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1669" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1669" > </text>
<g id="frames">
<g >
<title>seq_read (7,702,004 samples, 0.02%)</title><rect x="104.7" y="1413" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="107.70" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (954,019,912 samples, 2.38%)</title><rect x="1092.9" y="1589" width="28.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1095.86" y="1599.5" >d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,429,191 samples, 0.01%)</title><rect x="41.1" y="613" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.05" y="623.5" ></text>
</g>
<g >
<title>sock_sendmsg (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1285" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="13.47" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1061" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="1071.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (7,446,813 samples, 0.02%)</title><rect x="121.9" y="1461" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="124.86" y="1471.5" ></text>
</g>
<g >
<title>copy_process (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1397" width="2.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="40.21" y="1407.5" ></text>
</g>
<g >
<title>irq_exit_rcu (6,293,605 samples, 0.02%)</title><rect x="1188.9" y="1413" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1191.88" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,595,018 samples, 0.13%)</title><rect x="40.4" y="1445" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.38" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (51,107,362 samples, 0.13%)</title><rect x="179.8" y="1381" width="1.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="182.83" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,409,352 samples, 0.08%)</title><rect x="40.4" y="965" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="821" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="831.5" ></text>
</g>
<g >
<title>__libc_start_main (10,430,556 samples, 0.03%)</title><rect x="10.1" y="1589" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.08" y="1599.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (50,828,103 samples, 0.13%)</title><rect x="123.3" y="1589" width="1.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="126.29" y="1599.5" ></text>
</g>
<g >
<title>copy_event_to_user (547,338,305 samples, 1.36%)</title><rect x="61.1" y="1461" width="16.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="64.10" y="1471.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (51,110,558 samples, 0.13%)</title><rect x="164.8" y="1429" width="1.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="167.80" y="1439.5" ></text>
</g>
<g >
<title>ksys_write (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1333" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="13.47" y="1343.5" ></text>
</g>
<g >
<title>sched_clock (102,121,519 samples, 0.25%)</title><rect x="1041.9" y="1317" width="3.0" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1044.94" y="1327.5" ></text>
</g>
<g >
<title>all (40,137,772,825 samples, 100%)</title><rect x="10.0" y="1637" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1365" width="8.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1115.05" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,702,004 samples, 0.02%)</title><rect x="104.7" y="1509" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="107.70" y="1519.5" ></text>
</g>
<g >
<title>dup_mmap (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1365" width="2.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="40.21" y="1375.5" ></text>
</g>
<g >
<title>sock_write_iter (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1525" width="8.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1115.05" y="1535.5" ></text>
</g>
<g >
<title>search_binary_handler (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1493" width="20.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="19.53" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_read (7,702,004 samples, 0.02%)</title><rect x="104.7" y="1477" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="107.70" y="1487.5" ></text>
</g>
<g >
<title>[grep] (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1525" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.47" y="1535.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (3,839,470 samples, 0.01%)</title><rect x="1174.4" y="1493" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1177.41" y="1503.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (51,182,491 samples, 0.13%)</title><rect x="1046.4" y="1413" width="1.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1049.44" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="501" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="869" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (40,880,314 samples, 0.10%)</title><rect x="40.4" y="1173" width="1.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="293" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="303.5" ></text>
</g>
<g >
<title>__fsnotify_parent (5,475,903 samples, 0.01%)</title><rect x="122.3" y="1381" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="125.29" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,103,369,192 samples, 2.75%)</title><rect x="1142.3" y="1541" width="32.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1145.25" y="1551.5" >cp..</text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1573" width="2.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="40.21" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1157" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1167.5" ></text>
</g>
<g >
<title>__x64_sys_read (652,886,145 samples, 1.63%)</title><rect x="1092.9" y="1573" width="19.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1095.86" y="1583.5" ></text>
</g>
<g >
<title>ksys_read (652,886,145 samples, 1.63%)</title><rect x="1092.9" y="1557" width="19.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1095.86" y="1567.5" ></text>
</g>
<g >
<title>irq_exit_rcu (4,376,644 samples, 0.01%)</title><rect x="1142.3" y="1461" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1145.31" y="1471.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (4,864,648 samples, 0.01%)</title><rect x="123.0" y="1189" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="125.99" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1381" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.47" y="1391.5" ></text>
</g>
<g >
<title>ovl_permission (10,251,454 samples, 0.03%)</title><rect x="11.4" y="1365" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="14.44" y="1375.5" ></text>
</g>
<g >
<title>do_mmap (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1397" width="20.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="19.53" y="1407.5" ></text>
</g>
<g >
<title>vm_mmap (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1429" width="20.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="19.53" y="1439.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (51,216,979 samples, 0.13%)</title><rect x="1049.5" y="1525" width="1.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1052.45" y="1535.5" ></text>
</g>
<g >
<title>__cmd_record (61,503,618 samples, 0.15%)</title><rect x="121.5" y="1589" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.47" y="1599.5" ></text>
</g>
<g >
<title>__alloc_pages (48,930,039 samples, 0.12%)</title><rect x="37.2" y="1237" width="1.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="40.21" y="1247.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (102,507,354 samples, 0.26%)</title><rect x="1011.9" y="1477" width="3.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1014.86" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (10,251,454 samples, 0.03%)</title><rect x="11.4" y="1477" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="14.44" y="1487.5" ></text>
</g>
<g >
<title>NaClSysSendDecoder (12,438,713,408 samples, 30.99%)</title><rect x="683.8" y="1573" width="365.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="686.77" y="1583.5" >NaClSysSendDecoder</text>
</g>
<g >
<title>start_secondary (1,586,019,749 samples, 3.95%)</title><rect x="1142.2" y="1589" width="46.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1145.25" y="1599.5" >star..</text>
</g>
<g >
<title>[libc.so.6] (162,929,834 samples, 0.41%)</title><rect x="11.7" y="1461" width="4.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.74" y="1471.5" ></text>
</g>
<g >
<title>ext4_fill_raw_inode (4,864,648 samples, 0.01%)</title><rect x="123.0" y="1157" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="125.99" y="1167.5" ></text>
</g>
<g >
<title>__handle_mm_fault (646,022,029 samples, 1.61%)</title><rect x="124.8" y="1493" width="19.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="127.78" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (30,674,620 samples, 0.08%)</title><rect x="40.4" y="853" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="863.5" ></text>
</g>
<g >
<title>native_sched_clock (102,121,519 samples, 0.25%)</title><rect x="1041.9" y="1301" width="3.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1044.94" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,409,352 samples, 0.08%)</title><rect x="40.4" y="933" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,239,140 samples, 0.12%)</title><rect x="40.4" y="1285" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1295.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1189" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.47" y="1199.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1525" width="2.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="40.21" y="1535.5" ></text>
</g>
<g >
<title>load_balance (4,376,644 samples, 0.01%)</title><rect x="1142.3" y="1381" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1145.31" y="1391.5" ></text>
</g>
<g >
<title>vfs_fstatat (633,773,721 samples, 1.58%)</title><rect x="42.1" y="1461" width="18.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="45.13" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_write (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1349" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="13.47" y="1359.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (10,251,454 samples, 0.03%)</title><rect x="11.4" y="1397" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="14.44" y="1407.5" ></text>
</g>
<g >
<title>copy_present_pte (38,987,325 samples, 0.10%)</title><rect x="38.7" y="1285" width="1.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="41.65" y="1295.5" ></text>
</g>
<g >
<title>[grep] (8,152,251 samples, 0.02%)</title><rect x="10.5" y="1605" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.47" y="1615.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (639,899,783 samples, 1.59%)</title><rect x="42.0" y="1493" width="18.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="44.95" y="1503.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (204,300,893 samples, 0.51%)</title><rect x="172.3" y="1381" width="6.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="175.31" y="1391.5" ></text>
</g>
<g >
<title>cpuacct_charge (51,220,025 samples, 0.13%)</title><rect x="1038.9" y="1301" width="1.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1041.93" y="1311.5" ></text>
</g>
<g >
<title>perf (61,745,211 samples, 0.15%)</title><rect x="121.5" y="1621" width="1.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="124.47" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (9,688,229 samples, 0.02%)</title><rect x="40.5" y="373" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="43.47" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1413" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1423.5" ></text>
</g>
<g >
<title>node (2,309,920,243 samples, 5.75%)</title><rect x="37.0" y="1621" width="67.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="40.02" y="1631.5" >node</text>
</g>
<g >
<title>[libc.so.6] (162,929,834 samples, 0.41%)</title><rect x="11.7" y="1413" width="4.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.74" y="1423.5" ></text>
</g>
<g >
<title>uv__async_io (536,214,679 samples, 1.34%)</title><rect x="88.9" y="1573" width="15.7" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="91.86" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1029" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="853" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="863.5" ></text>
</g>
<g >
<title>setlocale (162,929,834 samples, 0.41%)</title><rect x="11.7" y="1541" width="4.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="14.74" y="1551.5" ></text>
</g>
<g >
<title>shell_glob_filename (4,566,470 samples, 0.01%)</title><rect x="1052.5" y="1429" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1055.46" y="1439.5" ></text>
</g>
<g >
<title>__sched_yield (1,124,896,763 samples, 2.80%)</title><rect x="1014.9" y="1461" width="33.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1017.88" y="1471.5" >__..</text>
</g>
<g >
<title>kfree (3,943,676 samples, 0.01%)</title><rect x="77.2" y="1429" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="80.19" y="1439.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (51,110,558 samples, 0.13%)</title><rect x="164.8" y="1413" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="167.80" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_enter (20,775,998 samples, 0.05%)</title><rect x="1188.9" y="1477" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1191.88" y="1487.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (17,550,469,041 samples, 43.73%)</title><rect x="167.8" y="1461" width="516.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="170.81" y="1471.5" >rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="341" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="351.5" ></text>
</g>
<g >
<title>ovl_write_iter (26,135,981 samples, 0.07%)</title><rect x="122.5" y="1381" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="125.45" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (30,674,620 samples, 0.08%)</title><rect x="40.4" y="789" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="757" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="885" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="895.5" ></text>
</g>
<g >
<title>find_busiest_group (3,917,060 samples, 0.01%)</title><rect x="1188.9" y="1301" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1191.88" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1381" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (954,019,912 samples, 2.38%)</title><rect x="1092.9" y="1605" width="28.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1095.86" y="1615.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,978,288 samples, 0.07%)</title><rect x="40.4" y="741" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="751.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51,147,935 samples, 0.13%)</title><rect x="686.8" y="1477" width="1.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="689.78" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="741" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="751.5" ></text>
</g>
<g >
<title>__filemap_get_folio (4,277,375 samples, 0.01%)</title><rect x="122.9" y="1221" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="125.86" y="1231.5" ></text>
</g>
<g >
<title>kernel_clone (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1413" width="2.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="40.21" y="1423.5" ></text>
</g>
<g >
<title>inet_sendmsg (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1493" width="8.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1115.05" y="1503.5" ></text>
</g>
<g >
<title>load_elf_binary (562,767,539 samples, 1.40%)</title><rect x="104.9" y="1477" width="16.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="107.93" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,273,389 samples, 0.14%)</title><rect x="40.3" y="1493" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.27" y="1503.5" ></text>
</g>
<g >
<title>__schedule (7,446,813 samples, 0.02%)</title><rect x="121.9" y="1413" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="124.86" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (656,170,260 samples, 1.63%)</title><rect x="1052.8" y="1605" width="19.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1055.82" y="1615.5" ></text>
</g>
<g >
<title>inotify_free_event (3,943,676 samples, 0.01%)</title><rect x="77.2" y="1445" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="80.19" y="1455.5" ></text>
</g>
<g >
<title>read (560,109,523 samples, 1.40%)</title><rect x="60.8" y="1573" width="16.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="63.84" y="1583.5" ></text>
</g>
<g >
<title>NaClSysRecv (17,755,025,963 samples, 44.24%)</title><rect x="161.8" y="1557" width="522.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="164.79" y="1567.5" >NaClSysRecv</text>
</g>
<g >
<title>execute_command (7,557,218 samples, 0.02%)</title><rect x="1052.6" y="1477" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1055.60" y="1487.5" ></text>
</g>
<g >
<title>handle_mm_fault (646,022,029 samples, 1.61%)</title><rect x="124.8" y="1509" width="19.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="127.78" y="1519.5" ></text>
</g>
<g >
<title>run_rebalance_domains (6,293,605 samples, 0.02%)</title><rect x="1188.9" y="1365" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1191.88" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (536,214,679 samples, 1.34%)</title><rect x="88.9" y="1525" width="15.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="91.86" y="1535.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (51,078,912 samples, 0.13%)</title><rect x="166.3" y="1461" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="169.31" y="1471.5" ></text>
</g>
<g >
<title>alloc_pages (48,930,039 samples, 0.12%)</title><rect x="37.2" y="1253" width="1.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="40.21" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,674,620 samples, 0.08%)</title><rect x="40.4" y="821" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="831.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,738,512 samples, 0.01%)</title><rect x="41.4" y="1093" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="44.42" y="1103.5" ></text>
</g>
<g >
<title>update_rq_clock (153,305,156 samples, 0.38%)</title><rect x="1040.4" y="1349" width="4.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1043.44" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="533" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="543.5" ></text>
</g>
<g >
<title>do_idle (38,253,319 samples, 0.10%)</title><rect x="1188.9" y="1509" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1191.88" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (49,209,036 samples, 0.12%)</title><rect x="40.4" y="1429" width="1.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="1439.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (51,078,912 samples, 0.13%)</title><rect x="166.3" y="1445" width="1.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="169.31" y="1455.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (10,842,634 samples, 0.03%)</title><rect x="122.7" y="1269" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="125.67" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,430,556 samples, 0.03%)</title><rect x="10.1" y="1573" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.08" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_write (33,728,486 samples, 0.08%)</title><rect x="122.3" y="1429" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="125.29" y="1439.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::consumer::Consumer&lt;u8&gt;&gt;&gt; (204,300,893 samples, 0.51%)</title><rect x="172.3" y="1413" width="6.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="175.31" y="1423.5" ></text>
</g>
<g >
<title>rebalance_domains (4,376,644 samples, 0.01%)</title><rect x="1142.3" y="1397" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1145.31" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="309" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (51,188,529 samples, 0.13%)</title><rect x="1028.4" y="1349" width="1.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1031.41" y="1359.5" ></text>
</g>
<g >
<title>kthread (42,718,507 samples, 0.11%)</title><rect x="1141.0" y="1589" width="1.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1143.99" y="1599.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (41,918,527 samples, 0.10%)</title><rect x="1141.0" y="1573" width="1.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1144.02" y="1583.5" ></text>
</g>
<g >
<title>ovl_inode_upper (3,615,189 samples, 0.01%)</title><rect x="42.2" y="1365" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="45.24" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="149" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="159.5" ></text>
</g>
<g >
<title>_IO_file_write (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1413" width="0.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="13.47" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1109" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1119.5" ></text>
</g>
<g >
<title>__do_sys_clone (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1429" width="2.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="40.21" y="1439.5" ></text>
</g>
<g >
<title>__calc_delta (50,984,115 samples, 0.13%)</title><rect x="1037.4" y="1301" width="1.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1040.43" y="1311.5" ></text>
</g>
<g >
<title>exec_binprm (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1509" width="20.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="19.53" y="1519.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1253" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.47" y="1263.5" ></text>
</g>
<g >
<title>__libc_fork (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1205" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1055.60" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,702,004 samples, 0.02%)</title><rect x="104.7" y="1493" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="107.70" y="1503.5" ></text>
</g>
<g >
<title>[bash] (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1317" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1055.60" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,239,140 samples, 0.12%)</title><rect x="40.4" y="1317" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="197" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="207.5" ></text>
</g>
<g >
<title>NaClSysRecvDecoder (17,755,025,963 samples, 44.24%)</title><rect x="161.8" y="1573" width="522.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="164.79" y="1583.5" >NaClSysRecvDecoder</text>
</g>
<g >
<title>[bash] (12,123,688 samples, 0.03%)</title><rect x="1052.5" y="1493" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1055.46" y="1503.5" ></text>
</g>
<g >
<title>[bash] (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1397" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1055.60" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (817,982,443 samples, 2.04%)</title><rect x="1022.4" y="1413" width="24.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1025.40" y="1423.5" >_..</text>
</g>
<g >
<title>schedule (7,446,813 samples, 0.02%)</title><rect x="121.9" y="1429" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.86" y="1439.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (50,982,643 samples, 0.13%)</title><rect x="167.8" y="1429" width="1.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="170.81" y="1439.5" ></text>
</g>
<g >
<title>ip_queue_xmit (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1381" width="8.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1115.05" y="1391.5" ></text>
</g>
<g >
<title>execute_command (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1429" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1055.60" y="1439.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (102,160,171 samples, 0.25%)</title><rect x="688.3" y="1493" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="691.28" y="1503.5" ></text>
</g>
<g >
<title>tick_nohz_restart (4,490,724 samples, 0.01%)</title><rect x="1188.7" y="1525" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1191.74" y="1535.5" ></text>
</g>
<g >
<title>operator delete (373,249,565 samples, 0.93%)</title><rect x="77.7" y="53" width="10.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="80.66" y="63.5" ></text>
</g>
<g >
<title>[ls] (173,181,288 samples, 0.43%)</title><rect x="11.4" y="1557" width="5.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="14.44" y="1567.5" ></text>
</g>
<g >
<title>operator new (3,738,512 samples, 0.01%)</title><rect x="41.4" y="1125" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="44.42" y="1135.5" ></text>
</g>
<g >
<title>ovl_mmap (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1365" width="20.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="19.53" y="1375.5" ></text>
</g>
<g >
<title>cpuidle_select (8,365,117 samples, 0.02%)</title><rect x="1174.3" y="1525" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1177.27" y="1535.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1397" width="8.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1115.05" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,880,314 samples, 0.10%)</title><rect x="40.4" y="1205" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1215.5" ></text>
</g>
<g >
<title>__x64_sys_clone (4,207,732 samples, 0.01%)</title><rect x="1052.6" y="1141" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1055.60" y="1151.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (51,147,935 samples, 0.13%)</title><rect x="686.8" y="1445" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="689.78" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (162,929,834 samples, 0.41%)</title><rect x="11.7" y="1429" width="4.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.74" y="1439.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (14,160,964 samples, 0.04%)</title><rect x="121.7" y="1477" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="124.67" y="1487.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,586,019,749 samples, 3.95%)</title><rect x="1142.2" y="1573" width="46.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1145.25" y="1583.5" >cpu_..</text>
</g>
<g >
<title>vm_mmap_pgoff (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1413" width="20.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="19.53" y="1423.5" ></text>
</g>
<g >
<title>copy_process (4,207,732 samples, 0.01%)</title><rect x="1052.6" y="1093" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1055.60" y="1103.5" ></text>
</g>
<g >
<title>file_modified_flags (6,100,211 samples, 0.02%)</title><rect x="122.5" y="1269" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="125.49" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1573" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="1583.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (560,640,869 samples, 1.40%)</title><rect x="691.3" y="1461" width="16.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="694.29" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (61,503,618 samples, 0.15%)</title><rect x="121.5" y="1605" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="124.47" y="1615.5" ></text>
</g>
<g >
<title>find_busiest_group (4,376,644 samples, 0.01%)</title><rect x="1142.3" y="1365" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1145.31" y="1375.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (17,090,446,344 samples, 42.58%)</title><rect x="181.3" y="1413" width="502.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="184.33" y="1423.5" >ringbuf::consumer::Consumer&lt;T&gt;::pop_slice</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (10,343,803,204 samples, 25.77%)</title><rect x="707.8" y="1445" width="304.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="710.77" y="1455.5" >ringbuf::producer::Producer&lt;T&gt;::push_acc..</text>
</g>
<g >
<title>__ip_local_out (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1333" width="8.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1115.05" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,674,620 samples, 0.08%)</title><rect x="40.4" y="837" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="847.5" ></text>
</g>
<g >
<title>sock_sendmsg (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1509" width="8.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1115.05" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,731,965 samples, 0.05%)</title><rect x="40.4" y="581" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (646,022,029 samples, 1.61%)</title><rect x="124.8" y="1525" width="19.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="127.78" y="1535.5" ></text>
</g>
<g >
<title>copy_pmd_range (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1317" width="2.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="40.21" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="917" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="693" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="703.5" ></text>
</g>
<g >
<title>record__mmap_read_all (35,466,264 samples, 0.09%)</title><rect x="122.2" y="1573" width="1.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="125.24" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="965" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="975.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (474,937,119 samples, 1.18%)</title><rect x="1174.9" y="1541" width="14.0" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1177.91" y="1551.5" ></text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (5,359,833 samples, 0.01%)</title><rect x="122.3" y="1333" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="125.29" y="1343.5" ></text>
</g>
<g >
<title>fsnotify_destroy_event (3,426,854 samples, 0.01%)</title><rect x="122.3" y="1301" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="125.35" y="1311.5" ></text>
</g>
<g >
<title>__check_heap_object (547,338,305 samples, 1.36%)</title><rect x="61.1" y="1413" width="16.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.10" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1509" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,566,470 samples, 0.01%)</title><rect x="1052.5" y="1253" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1055.46" y="1263.5" ></text>
</g>
<g >
<title>ext4_da_write_end (7,865,666 samples, 0.02%)</title><rect x="123.0" y="1269" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="125.99" y="1279.5" ></text>
</g>
<g >
<title>start_kernel (38,253,319 samples, 0.10%)</title><rect x="1188.9" y="1573" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1191.88" y="1583.5" ></text>
</g>
<g >
<title>pick_next_task_fair (204,644,225 samples, 0.51%)</title><rect x="1034.4" y="1333" width="6.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1037.42" y="1343.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (20,660,059 samples, 0.05%)</title><rect x="1188.9" y="1461" width="0.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1191.88" y="1471.5" ></text>
</g>
<g >
<title>filename_lookup (10,251,454 samples, 0.03%)</title><rect x="11.4" y="1429" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="14.44" y="1439.5" ></text>
</g>
<g >
<title>record__pushfn (33,728,486 samples, 0.08%)</title><rect x="122.3" y="1525" width="1.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="125.29" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,566,470 samples, 0.01%)</title><rect x="1052.5" y="1285" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1055.46" y="1295.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (713,282,244 samples, 1.78%)</title><rect x="39.8" y="1557" width="21.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="42.80" y="1567.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (560,640,869 samples, 1.40%)</title><rect x="691.3" y="1445" width="16.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="694.29" y="1455.5" ></text>
</g>
<g >
<title>dput (623,945,029 samples, 1.55%)</title><rect x="42.4" y="1413" width="18.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="45.42" y="1423.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (17,090,446,344 samples, 42.58%)</title><rect x="181.3" y="1349" width="502.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="184.33" y="1359.5" >core::intrinsics::copy_nonoverlapping</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,209,036 samples, 0.12%)</title><rect x="40.4" y="1413" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1423.5" ></text>
</g>
<g >
<title>do_fault (646,022,029 samples, 1.61%)</title><rect x="124.8" y="1461" width="19.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="127.78" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (34,130,517 samples, 0.09%)</title><rect x="40.4" y="1109" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="1119.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (51,107,362 samples, 0.13%)</title><rect x="179.8" y="1365" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="182.83" y="1375.5" ></text>
</g>
<g >
<title>run_rebalance_domains (4,376,644 samples, 0.01%)</title><rect x="1142.3" y="1413" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1145.31" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,696,332 samples, 0.01%)</title><rect x="41.2" y="757" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="44.21" y="767.5" ></text>
</g>
<g >
<title>schedule_idle (8,658,940 samples, 0.02%)</title><rect x="1189.7" y="1493" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1192.74" y="1503.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (5,830,397 samples, 0.01%)</title><rect x="1174.5" y="1525" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1177.52" y="1535.5" ></text>
</g>
<g >
<title>sock_write_iter (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1301" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.47" y="1311.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (10,343,803,204 samples, 25.77%)</title><rect x="707.8" y="1461" width="304.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="710.77" y="1471.5" >ringbuf::producer::Producer&lt;T&gt;::push_copy</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,220,386 samples, 0.03%)</title><rect x="40.4" y="437" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1429" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1439.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (6,293,605 samples, 0.02%)</title><rect x="1188.9" y="1397" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1191.88" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,430,556 samples, 0.03%)</title><rect x="10.1" y="1525" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.08" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,409,352 samples, 0.08%)</title><rect x="40.4" y="917" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1349" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1359.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (3,839,470 samples, 0.01%)</title><rect x="1174.4" y="1477" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1177.41" y="1487.5" ></text>
</g>
<g >
<title>expand_string_assignment (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1269" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1055.60" y="1279.5" ></text>
</g>
<g >
<title>_Fork (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1493" width="2.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="40.21" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1477" width="2.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="40.21" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="645" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="655.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (51,216,979 samples, 0.13%)</title><rect x="1049.5" y="1589" width="1.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1052.45" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="581" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="591.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (204,035,564 samples, 0.51%)</title><rect x="155.8" y="1573" width="6.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="158.80" y="1583.5" ></text>
</g>
<g >
<title>operator new (10,972,591 samples, 0.03%)</title><rect x="39.9" y="1493" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="42.95" y="1503.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (715,847,625 samples, 1.78%)</title><rect x="39.8" y="1573" width="21.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="42.80" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,130,517 samples, 0.09%)</title><rect x="40.4" y="1077" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1087.5" ></text>
</g>
<g >
<title>schedule (664,524,865 samples, 1.66%)</title><rect x="1026.9" y="1381" width="19.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1029.91" y="1391.5" ></text>
</g>
<g >
<title>[grep] (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1509" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.47" y="1519.5" ></text>
</g>
<g >
<title>elf_map (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1445" width="20.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="19.53" y="1455.5" ></text>
</g>
<g >
<title>__kmem_cache_free (3,943,676 samples, 0.01%)</title><rect x="77.2" y="1413" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="80.19" y="1423.5" ></text>
</g>
<g >
<title>execute_command (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1381" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1055.60" y="1391.5" ></text>
</g>
<g >
<title>fdarray__poll (21,632,619 samples, 0.05%)</title><rect x="121.6" y="1573" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="124.60" y="1583.5" ></text>
</g>
<g >
<title>uv__io_poll (536,214,679 samples, 1.34%)</title><rect x="88.9" y="1589" width="15.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="91.86" y="1599.5" ></text>
</g>
<g >
<title>rebalance_domains (3,917,060 samples, 0.01%)</title><rect x="1188.9" y="1333" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1191.88" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="101" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="111.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,089,173,678 samples, 2.71%)</title><rect x="1142.3" y="1509" width="32.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1145.25" y="1519.5" >cp..</text>
</g>
<g >
<title>CompareAndSwap (152,982,866 samples, 0.38%)</title><rect x="157.3" y="1557" width="4.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="160.30" y="1567.5" ></text>
</g>
<g >
<title>cp_new_stat (6,126,062 samples, 0.02%)</title><rect x="42.0" y="1461" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="44.95" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,348,544 samples, 0.03%)</title><rect x="104.6" y="1589" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="107.62" y="1599.5" ></text>
</g>
<g >
<title>operator new (3,696,332 samples, 0.01%)</title><rect x="41.2" y="741" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="44.21" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_read (560,109,523 samples, 1.40%)</title><rect x="60.8" y="1525" width="16.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="63.84" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (34,130,517 samples, 0.09%)</title><rect x="40.4" y="1045" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="1055.5" ></text>
</g>
<g >
<title>tcp_write_xmit (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1413" width="8.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1115.05" y="1423.5" ></text>
</g>
<g >
<title>sleep (21,374,616 samples, 0.05%)</title><rect x="1072.1" y="1621" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1075.11" y="1631.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (4,864,648 samples, 0.01%)</title><rect x="123.0" y="1141" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="125.99" y="1151.5" ></text>
</g>
<g >
<title>pick_next_task (3,604,834 samples, 0.01%)</title><rect x="1174.7" y="1509" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1177.71" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,343,803,204 samples, 25.77%)</title><rect x="707.8" y="1397" width="304.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="710.77" y="1407.5" >[libc.so.6]</text>
</g>
<g >
<title>record_times (41,918,527 samples, 0.10%)</title><rect x="1141.0" y="1461" width="1.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1144.02" y="1471.5" ></text>
</g>
<g >
<title>vma_set_file (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1349" width="20.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="19.53" y="1359.5" ></text>
</g>
<g >
<title>kmem_cache_free (651,016,355 samples, 1.62%)</title><rect x="1052.8" y="1349" width="19.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1055.82" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_execve (652,863,570 samples, 1.63%)</title><rect x="1052.8" y="1573" width="19.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1055.82" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="325" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="405" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1253" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="1263.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (652,863,570 samples, 1.63%)</title><rect x="1052.8" y="1525" width="19.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1055.82" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,220,386 samples, 0.03%)</title><rect x="40.4" y="421" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="431.5" ></text>
</g>
<g >
<title>__wake_up_locked_key (536,214,679 samples, 1.34%)</title><rect x="88.9" y="1445" width="15.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="91.86" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,273,389 samples, 0.14%)</title><rect x="40.3" y="1477" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.27" y="1487.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (102,160,171 samples, 0.25%)</title><rect x="688.3" y="1477" width="3.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="691.28" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1365" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.47" y="1375.5" ></text>
</g>
<g >
<title>ext4_inode_csum (4,864,648 samples, 0.01%)</title><rect x="123.0" y="1125" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="125.99" y="1135.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (51,216,979 samples, 0.13%)</title><rect x="1049.5" y="1557" width="1.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1052.45" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="901" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="911.5" ></text>
</g>
<g >
<title>vfs_read (560,109,523 samples, 1.40%)</title><rect x="60.8" y="1493" width="16.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="63.84" y="1503.5" ></text>
</g>
<g >
<title>generic_update_time (6,100,211 samples, 0.02%)</title><rect x="122.5" y="1253" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="125.49" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,239,140 samples, 0.12%)</title><rect x="40.4" y="1397" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1407.5" ></text>
</g>
<g >
<title>getenv (24,927,426 samples, 0.06%)</title><rect x="10.7" y="1589" width="0.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="13.71" y="1599.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51,110,558 samples, 0.13%)</title><rect x="164.8" y="1445" width="1.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="167.80" y="1455.5" ></text>
</g>
<g >
<title>__es_insert_extent (4,451,010 samples, 0.01%)</title><rect x="122.7" y="1189" width="0.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="125.73" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,430,556 samples, 0.03%)</title><rect x="10.1" y="1493" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.08" y="1503.5" ></text>
</g>
<g >
<title>mm_update_next_owner (562,767,539 samples, 1.40%)</title><rect x="104.9" y="1445" width="16.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="107.93" y="1455.5" ></text>
</g>
<g >
<title>begin_new_exec (562,767,539 samples, 1.40%)</title><rect x="104.9" y="1461" width="16.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="107.93" y="1471.5" ></text>
</g>
<g >
<title>lind_recv (17,755,025,963 samples, 44.24%)</title><rect x="161.8" y="1541" width="522.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="164.79" y="1551.5" >lind_recv</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="517" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="527.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (51,636,237 samples, 0.13%)</title><rect x="178.3" y="1397" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="181.31" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1173" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1183.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (4,451,010 samples, 0.01%)</title><rect x="122.7" y="1221" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="125.73" y="1231.5" ></text>
</g>
<g >
<title>poll_freewait (5,257,999 samples, 0.01%)</title><rect x="122.1" y="1477" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="125.08" y="1487.5" ></text>
</g>
<g >
<title>[[heap]] (16,081,536 samples, 0.04%)</title><rect x="1072.1" y="1605" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1075.11" y="1615.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (51,636,237 samples, 0.13%)</title><rect x="178.3" y="1413" width="1.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="181.31" y="1423.5" ></text>
</g>
<g >
<title>__do_softirq (4,376,644 samples, 0.01%)</title><rect x="1142.3" y="1429" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1145.31" y="1439.5" ></text>
</g>
<g >
<title>mmput (652,863,570 samples, 1.63%)</title><rect x="1052.8" y="1429" width="19.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1055.82" y="1439.5" ></text>
</g>
<g >
<title>seq_read_iter (7,702,004 samples, 0.02%)</title><rect x="104.7" y="1397" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="107.70" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1205" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1215.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1381" width="2.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="40.21" y="1391.5" ></text>
</g>
<g >
<title>native_sched_clock (51,183,637 samples, 0.13%)</title><rect x="1040.4" y="1317" width="1.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1043.44" y="1327.5" ></text>
</g>
<g >
<title>[sel_ldr] (30,704,385,980 samples, 76.50%)</title><rect x="146.8" y="1605" width="902.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="149.78" y="1615.5" >[sel_ldr]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="357" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (50,982,643 samples, 0.13%)</title><rect x="167.8" y="1397" width="1.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="170.81" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="997" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="1007.5" ></text>
</g>
<g >
<title>bprm_execve (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1541" width="20.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="19.53" y="1551.5" ></text>
</g>
<g >
<title>exc_page_fault (646,022,029 samples, 1.61%)</title><rect x="124.8" y="1541" width="19.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="127.78" y="1551.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1589" width="2.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="40.21" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_read (536,214,679 samples, 1.34%)</title><rect x="88.9" y="1509" width="15.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="91.86" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1493" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1503.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (17,397,490,836 samples, 43.34%)</title><rect x="172.3" y="1429" width="511.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="175.31" y="1439.5" >rustposix::interface::pipe::EmulatedPipe::read_from_pipe</text>
</g>
<g >
<title>copy_page_range (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1349" width="2.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="40.21" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,153,985 samples, 0.01%)</title><rect x="40.8" y="469" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="43.75" y="479.5" ></text>
</g>
<g >
<title>grep (8,152,251 samples, 0.02%)</title><rect x="10.5" y="1621" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="13.47" y="1631.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::get_read_ref (51,146,801 samples, 0.13%)</title><rect x="1047.9" y="1477" width="1.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1050.95" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,220,386 samples, 0.03%)</title><rect x="40.4" y="501" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="511.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,836,907 samples, 0.02%)</title><rect x="1188.9" y="1429" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1191.88" y="1439.5" ></text>
</g>
<g >
<title>nf_hook_slow (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1317" width="8.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1115.05" y="1327.5" ></text>
</g>
<g >
<title>execute_command_internal (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1365" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1055.60" y="1375.5" ></text>
</g>
<g >
<title>inode_permission (5,179,074 samples, 0.01%)</title><rect x="42.2" y="1381" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="45.24" y="1391.5" ></text>
</g>
<g >
<title>[anon] (50,828,103 samples, 0.13%)</title><rect x="123.3" y="1605" width="1.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="126.29" y="1615.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (24,808,511 samples, 0.06%)</title><rect x="122.5" y="1333" width="0.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="125.49" y="1343.5" ></text>
</g>
<g >
<title>[grep] (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1493" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.47" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="725" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1525" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1535.5" ></text>
</g>
<g >
<title>__poll (21,632,619 samples, 0.05%)</title><rect x="121.6" y="1557" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="124.60" y="1567.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.isra.0 (3,917,060 samples, 0.01%)</title><rect x="1188.9" y="1349" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1191.88" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,430,556 samples, 0.03%)</title><rect x="10.1" y="1445" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.08" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1141" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1151.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,430,556 samples, 0.03%)</title><rect x="10.1" y="1477" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.08" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (646,022,029 samples, 1.61%)</title><rect x="124.8" y="1573" width="19.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="127.78" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,731,965 samples, 0.05%)</title><rect x="40.4" y="597" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="607.5" ></text>
</g>
<g >
<title>do_read_fault (646,022,029 samples, 1.61%)</title><rect x="124.8" y="1445" width="19.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="127.78" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,251,454 samples, 0.03%)</title><rect x="11.4" y="1509" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="14.44" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="837" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="847.5" ></text>
</g>
<g >
<title>uv__fs_read (7,702,004 samples, 0.02%)</title><rect x="104.7" y="1541" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="107.70" y="1551.5" ></text>
</g>
<g >
<title>bprm_execve (652,863,570 samples, 1.63%)</title><rect x="1052.8" y="1541" width="19.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1055.82" y="1551.5" ></text>
</g>
<g >
<title>__check_object_size (547,338,305 samples, 1.36%)</title><rect x="61.1" y="1445" width="16.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="64.10" y="1455.5" ></text>
</g>
<g >
<title>record__write (33,728,486 samples, 0.08%)</title><rect x="122.3" y="1509" width="1.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="125.29" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="981" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="991.5" ></text>
</g>
<g >
<title>do_syscall_64 (33,728,486 samples, 0.08%)</title><rect x="122.3" y="1445" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="125.29" y="1455.5" ></text>
</g>
<g >
<title>inotify_handle_inode_event (5,359,833 samples, 0.01%)</title><rect x="122.3" y="1317" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="125.29" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1445" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="1455.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::cagetable_getref (51,181,713 samples, 0.13%)</title><rect x="163.3" y="1509" width="1.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="166.30" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="437" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="447.5" ></text>
</g>
<g >
<title>tcp_sendmsg (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1477" width="8.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1115.05" y="1487.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (652,886,145 samples, 1.63%)</title><rect x="1092.9" y="1493" width="19.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1095.86" y="1503.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (38,253,319 samples, 0.10%)</title><rect x="1188.9" y="1589" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1191.88" y="1599.5" ></text>
</g>
<g >
<title>strvec_posixcmp (4,566,470 samples, 0.01%)</title><rect x="1052.5" y="1269" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1055.46" y="1279.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::lind_yield (1,124,896,763 samples, 2.80%)</title><rect x="1014.9" y="1477" width="33.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1017.88" y="1487.5" >ru..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21,632,619 samples, 0.05%)</title><rect x="121.6" y="1541" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="124.60" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_execve (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1573" width="20.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="19.53" y="1583.5" ></text>
</g>
<g >
<title>vfs_write (33,728,486 samples, 0.08%)</title><rect x="122.3" y="1397" width="1.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="125.29" y="1407.5" ></text>
</g>
<g >
<title>fwrite_unlocked (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1477" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.47" y="1487.5" ></text>
</g>
<g >
<title>filemap_map_pages (646,022,029 samples, 1.61%)</title><rect x="124.8" y="1429" width="19.0" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="127.78" y="1439.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1557" width="20.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="19.53" y="1567.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (50,982,643 samples, 0.13%)</title><rect x="167.8" y="1413" width="1.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="170.81" y="1423.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (4,451,010 samples, 0.01%)</title><rect x="122.7" y="1205" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="125.73" y="1215.5" ></text>
</g>
<g >
<title>inode_permission (10,251,454 samples, 0.03%)</title><rect x="11.4" y="1381" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="14.44" y="1391.5" ></text>
</g>
<g >
<title>_Fork (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1189" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1055.60" y="1199.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (562,767,539 samples, 1.40%)</title><rect x="104.9" y="1557" width="16.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="107.93" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1285" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1295.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (547,338,305 samples, 1.36%)</title><rect x="61.1" y="1429" width="16.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="64.10" y="1439.5" ></text>
</g>
<g >
<title>begin_new_exec (652,863,570 samples, 1.63%)</title><rect x="1052.8" y="1461" width="19.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1055.82" y="1471.5" ></text>
</g>
<g >
<title>[bash] (4,566,470 samples, 0.01%)</title><rect x="1052.5" y="1445" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1055.46" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,251,454 samples, 0.03%)</title><rect x="11.4" y="1493" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.44" y="1503.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (5,568,910 samples, 0.01%)</title><rect x="1174.5" y="1509" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1177.53" y="1519.5" ></text>
</g>
<g >
<title>mutex_lock (652,886,145 samples, 1.63%)</title><rect x="1092.9" y="1461" width="19.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1095.86" y="1471.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (6,100,211 samples, 0.02%)</title><rect x="122.5" y="1237" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="125.49" y="1247.5" ></text>
</g>
<g >
<title>load_balance (3,917,060 samples, 0.01%)</title><rect x="1188.9" y="1317" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1191.88" y="1327.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (35,466,264 samples, 0.09%)</title><rect x="122.2" y="1557" width="1.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="125.24" y="1567.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (204,300,893 samples, 0.51%)</title><rect x="172.3" y="1397" width="6.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="175.31" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,978,288 samples, 0.07%)</title><rect x="40.4" y="661" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="671.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (4,290,157 samples, 0.01%)</title><rect x="1188.7" y="1477" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1191.74" y="1487.5" ></text>
</g>
<g >
<title>ion (33,728,486 samples, 0.08%)</title><rect x="122.3" y="1493" width="1.0" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="125.29" y="1503.5" ></text>
</g>
<g >
<title>vfs_read (652,886,145 samples, 1.63%)</title><rect x="1092.9" y="1541" width="19.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1095.86" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1125" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="1135.5" ></text>
</g>
<g >
<title>[expr] (10,430,556 samples, 0.03%)</title><rect x="10.1" y="1557" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.08" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,749,797 samples, 0.02%)</title><rect x="41.4" y="1141" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="44.42" y="1151.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (4,864,648 samples, 0.01%)</title><rect x="123.0" y="1173" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="125.99" y="1183.5" ></text>
</g>
<g >
<title>write (33,728,486 samples, 0.08%)</title><rect x="122.3" y="1477" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="125.29" y="1487.5" ></text>
</g>
<g >
<title>copy_p4d_range (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1333" width="2.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="40.21" y="1343.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (17,090,446,344 samples, 42.58%)</title><rect x="181.3" y="1397" width="502.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="184.33" y="1407.5" >ringbuf::consumer::Consumer&lt;T&gt;::pop_copy</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15,374,371 samples, 0.04%)</title><rect x="40.4" y="517" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,731,965 samples, 0.05%)</title><rect x="40.4" y="629" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="639.5" ></text>
</g>
<g >
<title>path_lookupat (10,251,454 samples, 0.03%)</title><rect x="11.4" y="1413" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="14.44" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (162,929,834 samples, 0.41%)</title><rect x="11.7" y="1509" width="4.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.74" y="1519.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::net::SocketHandle&gt;&gt; (50,982,643 samples, 0.13%)</title><rect x="167.8" y="1445" width="1.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="170.81" y="1455.5" ></text>
</g>
<g >
<title>pte_alloc_one (48,930,039 samples, 0.12%)</title><rect x="37.2" y="1269" width="1.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="40.21" y="1279.5" ></text>
</g>
<g >
<title>__x64_sys_clone (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1445" width="2.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="40.21" y="1455.5" ></text>
</g>
<g >
<title>remove_wait_queue (5,257,999 samples, 0.01%)</title><rect x="122.1" y="1461" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="125.08" y="1471.5" ></text>
</g>
<g >
<title>execute_command_internal (4,566,470 samples, 0.01%)</title><rect x="1052.5" y="1461" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1055.46" y="1471.5" ></text>
</g>
<g >
<title>send_to_group (5,475,903 samples, 0.01%)</title><rect x="122.3" y="1349" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="125.29" y="1359.5" ></text>
</g>
<g >
<title>parse_and_execute (12,123,688 samples, 0.03%)</title><rect x="1052.5" y="1525" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1055.46" y="1535.5" ></text>
</g>
<g >
<title>command_substitute (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1237" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1055.60" y="1247.5" ></text>
</g>
<g >
<title>ksys_read (7,702,004 samples, 0.02%)</title><rect x="104.7" y="1461" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="107.70" y="1471.5" ></text>
</g>
<g >
<title>user_path_at_empty (10,251,454 samples, 0.03%)</title><rect x="11.4" y="1445" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="14.44" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1301" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1311.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (4,277,375 samples, 0.01%)</title><rect x="122.9" y="1253" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="125.86" y="1263.5" ></text>
</g>
<g >
<title>sock_recvmsg (652,886,145 samples, 1.63%)</title><rect x="1092.9" y="1509" width="19.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1095.86" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,978,288 samples, 0.07%)</title><rect x="40.4" y="693" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,220,386 samples, 0.03%)</title><rect x="40.4" y="453" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="463.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (562,767,539 samples, 1.40%)</title><rect x="104.9" y="1525" width="16.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="107.93" y="1535.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common (17,652,658,511 samples, 43.98%)</title><rect x="164.8" y="1477" width="519.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="167.80" y="1487.5" >rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt; (51,211,380 samples, 0.13%)</title><rect x="685.3" y="1509" width="1.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="688.27" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="389" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,358,826 samples, 0.01%)</title><rect x="41.6" y="1269" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="44.62" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (384,522,992 samples, 0.96%)</title><rect x="77.6" y="69" width="11.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="80.56" y="79.5" ></text>
</g>
<g >
<title>__mmput (652,863,570 samples, 1.63%)</title><rect x="1052.8" y="1413" width="19.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1055.82" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (51,078,912 samples, 0.13%)</title><rect x="166.3" y="1429" width="1.5" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="169.31" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (162,929,834 samples, 0.41%)</title><rect x="11.7" y="1525" width="4.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.74" y="1535.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51,211,380 samples, 0.13%)</title><rect x="685.3" y="1493" width="1.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="688.27" y="1503.5" ></text>
</g>
<g >
<title>uv_spawn (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1557" width="2.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="40.21" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,152,251 samples, 0.02%)</title><rect x="10.5" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.47" y="1583.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (12,891,716 samples, 0.03%)</title><rect x="1189.1" y="1445" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.10" y="1455.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (5,179,074 samples, 0.01%)</title><rect x="42.2" y="1397" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="45.24" y="1407.5" ></text>
</g>
<g >
<title>cpu_startup_entry (38,253,319 samples, 0.10%)</title><rect x="1188.9" y="1525" width="1.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1191.88" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (101,995,562 samples, 0.25%)</title><rect x="169.3" y="1413" width="3.0" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="172.31" y="1423.5" ></text>
</g>
<g >
<title>vfs_read (7,702,004 samples, 0.02%)</title><rect x="104.7" y="1445" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="107.70" y="1455.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (51,136,230 samples, 0.13%)</title><rect x="1051.0" y="1605" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1053.96" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,674,620 samples, 0.08%)</title><rect x="40.4" y="773" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="783.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,836,907 samples, 0.02%)</title><rect x="1188.9" y="1445" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1191.88" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,409,352 samples, 0.08%)</title><rect x="40.4" y="949" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="959.5" ></text>
</g>
<g >
<title>mod_memcg_state (46,379,008 samples, 0.12%)</title><rect x="37.2" y="1189" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="40.21" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="469" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="479.5" ></text>
</g>
<g >
<title>fsnotify_destroy_event (3,943,676 samples, 0.01%)</title><rect x="77.2" y="1461" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="80.19" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,566,470 samples, 0.01%)</title><rect x="1052.5" y="1301" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1055.46" y="1311.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (51,198,931 samples, 0.13%)</title><rect x="683.8" y="1557" width="1.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="686.77" y="1567.5" ></text>
</g>
<g >
<title>pagecache_get_page (4,277,375 samples, 0.01%)</title><rect x="122.9" y="1237" width="0.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="125.86" y="1247.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (41,918,527 samples, 0.10%)</title><rect x="1141.0" y="1557" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1144.02" y="1567.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (30,602,102,699 samples, 76.24%)</title><rect x="149.8" y="1589" width="899.7" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="152.79" y="1599.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>perf-exec (562,767,539 samples, 1.40%)</title><rect x="104.9" y="1621" width="16.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="107.93" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,409,352 samples, 0.08%)</title><rect x="40.4" y="901" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="911.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (7,865,666 samples, 0.02%)</title><rect x="123.0" y="1221" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="125.99" y="1231.5" ></text>
</g>
<g >
<title>ret_from_fork (42,718,507 samples, 0.11%)</title><rect x="1141.0" y="1605" width="1.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1143.99" y="1615.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (646,022,029 samples, 1.61%)</title><rect x="124.8" y="1605" width="19.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="127.78" y="1615.5" ></text>
</g>
<g >
<title>execute_command_internal (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1413" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1055.60" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,566,470 samples, 0.01%)</title><rect x="1052.5" y="1333" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1055.46" y="1343.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1269" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="13.47" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,972,591 samples, 0.03%)</title><rect x="39.9" y="1461" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="42.95" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (17,090,446,344 samples, 42.58%)</title><rect x="181.3" y="1333" width="502.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="184.33" y="1343.5" >[libc.so.6]</text>
</g>
<g >
<title>do_syscall_64 (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1589" width="20.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="19.53" y="1599.5" ></text>
</g>
<g >
<title>_IO_do_write (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1445" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="13.47" y="1455.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (10,343,803,204 samples, 25.77%)</title><rect x="707.8" y="1477" width="304.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="710.77" y="1487.5" >ringbuf::producer::Producer&lt;T&gt;::push_slice</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="933" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="943.5" ></text>
</g>
<g >
<title>read (536,214,679 samples, 1.34%)</title><rect x="88.9" y="1557" width="15.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="91.86" y="1567.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (51,107,362 samples, 0.13%)</title><rect x="179.8" y="1413" width="1.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="182.83" y="1423.5" ></text>
</g>
<g >
<title>ksys_write (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1557" width="8.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1115.05" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (24,999,347 samples, 0.06%)</title><rect x="1188.9" y="1493" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1191.88" y="1503.5" ></text>
</g>
<g >
<title>main (12,123,688 samples, 0.03%)</title><rect x="1052.5" y="1557" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1055.46" y="1567.5" ></text>
</g>
<g >
<title>psi_group_change (41,918,527 samples, 0.10%)</title><rect x="1141.0" y="1477" width="1.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1144.02" y="1487.5" ></text>
</g>
<g >
<title>malloc (7,648,986 samples, 0.02%)</title><rect x="88.6" y="37" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="91.64" y="47.5" ></text>
</g>
<g >
<title>cfree (4,153,985 samples, 0.01%)</title><rect x="40.8" y="485" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="43.75" y="495.5" ></text>
</g>
<g >
<title>[bash] (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1349" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1055.60" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,220,386 samples, 0.03%)</title><rect x="40.4" y="405" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="415.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1461" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="13.47" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,731,965 samples, 0.05%)</title><rect x="40.4" y="613" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="623.5" ></text>
</g>
<g >
<title>[libc.so.6] (162,929,834 samples, 0.41%)</title><rect x="11.7" y="1493" width="4.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.74" y="1503.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (3,839,470 samples, 0.01%)</title><rect x="1174.4" y="1461" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1177.41" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_write (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1573" width="8.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1115.05" y="1583.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (4,534,897 samples, 0.01%)</title><rect x="1174.5" y="1493" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1177.53" y="1503.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (560,640,869 samples, 1.40%)</title><rect x="691.3" y="1477" width="16.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="694.29" y="1487.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (101,995,562 samples, 0.25%)</title><rect x="169.3" y="1445" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="172.31" y="1455.5" ></text>
</g>
<g >
<title>filename_lookup (9,828,692 samples, 0.02%)</title><rect x="42.1" y="1429" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="45.13" y="1439.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,624,273,068 samples, 4.05%)</title><rect x="1142.2" y="1605" width="47.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1145.25" y="1615.5" >seco..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="133" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,246,323 samples, 0.02%)</title><rect x="41.0" y="629" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="43.97" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (51,211,380 samples, 0.13%)</title><rect x="685.3" y="1461" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="688.27" y="1471.5" ></text>
</g>
<g >
<title>operator new (7,648,986 samples, 0.02%)</title><rect x="88.6" y="53" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="91.64" y="63.5" ></text>
</g>
<g >
<title>readlink (10,251,454 samples, 0.03%)</title><rect x="11.4" y="1525" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="14.44" y="1535.5" ></text>
</g>
<g >
<title>__wake_up_common (536,214,679 samples, 1.34%)</title><rect x="88.9" y="1429" width="15.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="91.86" y="1439.5" ></text>
</g>
<g >
<title>[bash] (12,123,688 samples, 0.03%)</title><rect x="1052.5" y="1541" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1055.46" y="1551.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (51,390,544 samples, 0.13%)</title><rect x="1013.4" y="1429" width="1.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1016.37" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,130,517 samples, 0.09%)</title><rect x="40.4" y="1141" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1151.5" ></text>
</g>
<g >
<title>exec_mmap (652,863,570 samples, 1.63%)</title><rect x="1052.8" y="1445" width="19.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1055.82" y="1455.5" ></text>
</g>
<g >
<title>do_sys_poll (21,632,619 samples, 0.05%)</title><rect x="121.6" y="1493" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="124.60" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.47" y="1439.5" ></text>
</g>
<g >
<title>generic_permission (10,251,454 samples, 0.03%)</title><rect x="11.4" y="1349" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="14.44" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="805" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="815.5" ></text>
</g>
<g >
<title>__libc_start_main (12,123,688 samples, 0.03%)</title><rect x="1052.5" y="1589" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1055.46" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,220,386 samples, 0.03%)</title><rect x="40.4" y="469" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,130,517 samples, 0.09%)</title><rect x="40.4" y="1125" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1135.5" ></text>
</g>
<g >
<title>do_idle (1,585,822,905 samples, 3.95%)</title><rect x="1142.2" y="1557" width="46.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1145.25" y="1567.5" >do_i..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="661" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (40,880,314 samples, 0.10%)</title><rect x="40.4" y="1237" width="1.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (51,216,979 samples, 0.13%)</title><rect x="1049.5" y="1605" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1052.45" y="1615.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (51,146,801 samples, 0.13%)</title><rect x="1047.9" y="1445" width="1.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1050.95" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="949" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,239,140 samples, 0.12%)</title><rect x="40.4" y="1381" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1391.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (4,534,897 samples, 0.01%)</title><rect x="1174.5" y="1477" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1177.53" y="1487.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (4,376,644 samples, 0.01%)</title><rect x="1142.3" y="1445" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1145.31" y="1455.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1205" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.47" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,978,288 samples, 0.07%)</title><rect x="40.4" y="757" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,239,140 samples, 0.12%)</title><rect x="40.4" y="1333" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1343.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (7,446,813 samples, 0.02%)</title><rect x="121.9" y="1445" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="124.86" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1077" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1087.5" ></text>
</g>
<g >
<title>path_lookupat (9,828,692 samples, 0.02%)</title><rect x="42.1" y="1413" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="45.13" y="1423.5" ></text>
</g>
<g >
<title>[bash] (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1285" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1055.60" y="1295.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (17,652,658,511 samples, 43.98%)</title><rect x="164.8" y="1509" width="519.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="167.80" y="1519.5" >rustposix::safeposix::dispatcher::dispatcher::{{closure}}</text>
</g>
<g >
<title>uv__fs_work (7,702,004 samples, 0.02%)</title><rect x="104.7" y="1557" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="107.70" y="1567.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::send_syscall (12,336,303,097 samples, 30.73%)</title><rect x="686.8" y="1509" width="362.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="689.78" y="1519.5" >rustposix::safeposix::syscalls::net_calls::&lt;impl ..</text>
</g>
<g >
<title>qsort_r (4,566,470 samples, 0.01%)</title><rect x="1052.5" y="1413" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1055.46" y="1423.5" ></text>
</g>
<g >
<title>vfs_write (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1541" width="8.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1115.05" y="1551.5" ></text>
</g>
<g >
<title>[grep] (8,152,251 samples, 0.02%)</title><rect x="10.5" y="1557" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.47" y="1567.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (51,182,491 samples, 0.13%)</title><rect x="1046.4" y="1397" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1049.44" y="1407.5" ></text>
</g>
<g >
<title>os_xsave (683,210,181 samples, 1.70%)</title><rect x="1120.9" y="1605" width="20.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1123.91" y="1615.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (12,182,994,991 samples, 30.35%)</title><rect x="691.3" y="1493" width="358.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="694.29" y="1503.5" >rustposix::interface::pipe::EmulatedPipe::write_..</text>
</g>
<g >
<title>inotify_read (554,055,122 samples, 1.38%)</title><rect x="61.0" y="1477" width="16.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="64.02" y="1487.5" ></text>
</g>
<g >
<title>ip_local_out (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1349" width="8.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1115.05" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15,374,371 samples, 0.04%)</title><rect x="40.4" y="549" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,674,620 samples, 0.08%)</title><rect x="40.4" y="805" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="815.5" ></text>
</g>
<g >
<title>ksys_read (536,214,679 samples, 1.34%)</title><rect x="88.9" y="1493" width="15.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="91.86" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="629" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="639.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (4,382,126 samples, 0.01%)</title><rect x="122.5" y="1221" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="125.54" y="1231.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (646,022,029 samples, 1.61%)</title><rect x="124.8" y="1557" width="19.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="127.78" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="261" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="271.5" ></text>
</g>
<g >
<title>[bash] (7,557,218 samples, 0.02%)</title><rect x="1052.6" y="1445" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1055.60" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (536,214,679 samples, 1.34%)</title><rect x="88.9" y="1541" width="15.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="91.86" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,207,732 samples, 0.01%)</title><rect x="1052.6" y="1173" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1055.60" y="1183.5" ></text>
</g>
<g >
<title>generic_perform_write (18,708,300 samples, 0.05%)</title><rect x="122.7" y="1285" width="0.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="125.67" y="1295.5" ></text>
</g>
<g >
<title>HandleStackContext (153,127,826 samples, 0.38%)</title><rect x="151.3" y="1573" width="4.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="154.29" y="1583.5" ></text>
</g>
<g >
<title>__do_softirq (6,293,605 samples, 0.02%)</title><rect x="1188.9" y="1381" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1191.88" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (46,239,140 samples, 0.12%)</title><rect x="40.4" y="1365" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="1375.5" ></text>
</g>
<g >
<title>bprm_execve (562,767,539 samples, 1.40%)</title><rect x="104.9" y="1541" width="16.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="107.93" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1317" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="1327.5" ></text>
</g>
<g >
<title>execute_command_internal (12,123,688 samples, 0.03%)</title><rect x="1052.5" y="1509" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1055.46" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (162,929,834 samples, 0.41%)</title><rect x="11.7" y="1445" width="4.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.74" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (562,767,539 samples, 1.40%)</title><rect x="104.9" y="1589" width="16.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="107.93" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (162,929,834 samples, 0.41%)</title><rect x="11.7" y="1477" width="4.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.74" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33,728,486 samples, 0.08%)</title><rect x="122.3" y="1461" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="125.29" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,220,386 samples, 0.03%)</title><rect x="40.4" y="389" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="399.5" ></text>
</g>
<g >
<title>path_put (623,945,029 samples, 1.55%)</title><rect x="42.4" y="1429" width="18.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="45.42" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,880,314 samples, 0.10%)</title><rect x="40.4" y="1269" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,409,352 samples, 0.08%)</title><rect x="40.4" y="997" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1007.5" ></text>
</g>
<g >
<title>dispatcher (17,703,840,224 samples, 44.11%)</title><rect x="163.3" y="1525" width="520.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="166.30" y="1535.5" >dispatcher</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,273,389 samples, 0.14%)</title><rect x="40.3" y="1461" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.27" y="1471.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (4,376,644 samples, 0.01%)</title><rect x="1142.3" y="1333" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1145.31" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_poll (21,632,619 samples, 0.05%)</title><rect x="121.6" y="1509" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="124.60" y="1519.5" ></text>
</g>
<g >
<title>__alloc_skb (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1221" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.47" y="1231.5" ></text>
</g>
<g >
<title>expr (15,850,918 samples, 0.04%)</title><rect x="10.0" y="1621" width="0.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="213" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="223.5" ></text>
</g>
<g >
<title>do_readlinkat (10,251,454 samples, 0.03%)</title><rect x="11.4" y="1461" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="14.44" y="1471.5" ></text>
</g>
<g >
<title>setlocale (10,430,556 samples, 0.03%)</title><rect x="10.1" y="1541" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.08" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,978,288 samples, 0.07%)</title><rect x="40.4" y="645" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="655.5" ></text>
</g>
<g >
<title>read (7,702,004 samples, 0.02%)</title><rect x="104.7" y="1525" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="107.70" y="1535.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (51,216,979 samples, 0.13%)</title><rect x="1049.5" y="1573" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1052.45" y="1583.5" ></text>
</g>
<g >
<title>[ls] (10,251,454 samples, 0.03%)</title><rect x="11.4" y="1541" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="14.44" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (71,275,036 samples, 0.18%)</title><rect x="39.9" y="1509" width="2.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="42.86" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1269" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1279.5" ></text>
</g>
<g >
<title>search_binary_handler (652,863,570 samples, 1.63%)</title><rect x="1052.8" y="1493" width="19.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1055.82" y="1503.5" ></text>
</g>
<g >
<title>execute_command_internal (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1333" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1055.60" y="1343.5" ></text>
</g>
<g >
<title>dispatcher (12,387,514,477 samples, 30.86%)</title><rect x="685.3" y="1525" width="364.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="688.27" y="1535.5" >dispatcher</text>
</g>
<g >
<title>malloc (3,696,332 samples, 0.01%)</title><rect x="41.2" y="725" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="44.21" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (101,995,562 samples, 0.25%)</title><rect x="169.3" y="1397" width="3.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="172.31" y="1407.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1525" width="20.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="19.53" y="1535.5" ></text>
</g>
<g >
<title>rest_init (38,253,319 samples, 0.10%)</title><rect x="1188.9" y="1541" width="1.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1191.88" y="1551.5" ></text>
</g>
<g >
<title>[sel_ldr] (102,286,474 samples, 0.25%)</title><rect x="143.8" y="1589" width="3.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="146.77" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (639,899,783 samples, 1.59%)</title><rect x="42.0" y="1525" width="18.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="44.95" y="1535.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (51,107,362 samples, 0.13%)</title><rect x="179.8" y="1397" width="1.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="182.83" y="1407.5" ></text>
</g>
<g >
<title>malloc (3,738,512 samples, 0.01%)</title><rect x="41.4" y="1109" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="44.42" y="1119.5" ></text>
</g>
<g >
<title>do_syscall_64 (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1461" width="2.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="40.21" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,220,386 samples, 0.03%)</title><rect x="40.4" y="485" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="495.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (646,022,029 samples, 1.61%)</title><rect x="124.8" y="1589" width="19.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="127.78" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,409,352 samples, 0.08%)</title><rect x="40.4" y="1013" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1023.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (4,290,157 samples, 0.01%)</title><rect x="1188.7" y="1493" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1191.74" y="1503.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (204,300,893 samples, 0.51%)</title><rect x="172.3" y="1349" width="6.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="175.31" y="1359.5" ></text>
</g>
<g >
<title>swapper (3,988,726,161 samples, 9.94%)</title><rect x="1072.7" y="1621" width="117.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1075.74" y="1631.5" >swapper</text>
</g>
<g >
<title>do_syscall_64 (656,170,260 samples, 1.63%)</title><rect x="1052.8" y="1589" width="19.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1055.82" y="1599.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner_tcp (17,397,490,836 samples, 43.34%)</title><rect x="172.3" y="1445" width="511.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="175.31" y="1455.5" >rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix:..</text>
</g>
<g >
<title>[libc.so.6] (10,430,556 samples, 0.03%)</title><rect x="10.1" y="1509" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.08" y="1519.5" ></text>
</g>
<g >
<title>memcg_account_kmem (46,379,008 samples, 0.12%)</title><rect x="37.2" y="1205" width="1.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="40.21" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1541" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (3,678,371 samples, 0.01%)</title><rect x="40.3" y="1445" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="43.27" y="1455.5" ></text>
</g>
<g >
<title>exec_binprm (652,863,570 samples, 1.63%)</title><rect x="1052.8" y="1509" width="19.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1055.82" y="1519.5" ></text>
</g>
<g >
<title>execute_command_internal (7,557,218 samples, 0.02%)</title><rect x="1052.6" y="1461" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1055.60" y="1471.5" ></text>
</g>
<g >
<title>__pte_alloc (48,930,039 samples, 0.12%)</title><rect x="37.2" y="1285" width="1.5" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="40.21" y="1295.5" ></text>
</g>
<g >
<title>malloc (10,972,591 samples, 0.03%)</title><rect x="39.9" y="1477" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="42.95" y="1487.5" ></text>
</g>
<g >
<title>sched_clock_cpu (153,305,156 samples, 0.38%)</title><rect x="1040.4" y="1333" width="4.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1043.44" y="1343.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (4,451,010 samples, 0.01%)</title><rect x="122.7" y="1237" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="125.73" y="1247.5" ></text>
</g>
<g >
<title>do_sched_yield (817,982,443 samples, 2.04%)</title><rect x="1022.4" y="1397" width="24.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1025.40" y="1407.5" >d..</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,082,745,055 samples, 2.70%)</title><rect x="1142.4" y="1493" width="31.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1145.44" y="1503.5" >mw..</text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (102,160,171 samples, 0.25%)</title><rect x="688.3" y="1445" width="3.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="691.28" y="1455.5" ></text>
</g>
<g >
<title>ls (895,066,143 samples, 2.23%)</title><rect x="10.7" y="1621" width="26.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="13.71" y="1631.5" >ls</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1605" width="20.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="19.53" y="1615.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (51,390,544 samples, 0.13%)</title><rect x="1013.4" y="1413" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1016.37" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,430,556 samples, 0.03%)</title><rect x="10.1" y="1461" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.08" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,978,288 samples, 0.07%)</title><rect x="40.4" y="709" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1093" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1103.5" ></text>
</g>
<g >
<title>tcp_seq_next (7,702,004 samples, 0.02%)</title><rect x="104.7" y="1381" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="107.70" y="1391.5" ></text>
</g>
<g >
<title>established_get_first (7,702,004 samples, 0.02%)</title><rect x="104.7" y="1349" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="107.70" y="1359.5" ></text>
</g>
<g >
<title>ep_poll_callback (536,214,679 samples, 1.34%)</title><rect x="88.9" y="1413" width="15.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="91.86" y="1423.5" ></text>
</g>
<g >
<title>__libc_start_main (8,152,251 samples, 0.02%)</title><rect x="10.5" y="1589" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.47" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15,374,371 samples, 0.04%)</title><rect x="40.4" y="565" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="575.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (652,863,570 samples, 1.63%)</title><rect x="1052.8" y="1557" width="19.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1055.82" y="1567.5" ></text>
</g>
<g >
<title>tcp_push (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1445" width="8.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1115.05" y="1455.5" ></text>
</g>
<g >
<title>[expr] (10,430,556 samples, 0.03%)</title><rect x="10.1" y="1605" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.08" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,880,314 samples, 0.10%)</title><rect x="40.4" y="1221" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1231.5" ></text>
</g>
<g >
<title>[grep] (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1541" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.47" y="1551.5" ></text>
</g>
<g >
<title>NaClSysSend (12,387,514,477 samples, 30.86%)</title><rect x="685.3" y="1557" width="364.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="688.27" y="1567.5" >NaClSysSend</text>
</g>
<g >
<title>__schedule (8,658,940 samples, 0.02%)</title><rect x="1189.7" y="1477" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1192.74" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (562,767,539 samples, 1.40%)</title><rect x="104.9" y="1605" width="16.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="107.93" y="1615.5" ></text>
</g>
<g >
<title>load_elf_interp.constprop.0 (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1461" width="20.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="19.53" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,880,314 samples, 0.10%)</title><rect x="40.4" y="1189" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1199.5" ></text>
</g>
<g >
<title>__clone (10,348,544 samples, 0.03%)</title><rect x="104.6" y="1605" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="107.62" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (2,205,077,391 samples, 5.49%)</title><rect x="39.8" y="1605" width="64.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="42.80" y="1615.5" >[unknown]</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (51,216,979 samples, 0.13%)</title><rect x="1049.5" y="1509" width="1.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1052.45" y="1519.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (17,090,446,344 samples, 42.58%)</title><rect x="181.3" y="1381" width="502.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="184.33" y="1391.5" >ringbuf::consumer::Consumer&lt;T&gt;::pop_access</text>
</g>
<g >
<title>established_get_next (7,702,004 samples, 0.02%)</title><rect x="104.7" y="1365" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="107.70" y="1375.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (7,865,666 samples, 0.02%)</title><rect x="123.0" y="1205" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="125.99" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1477" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,566,470 samples, 0.01%)</title><rect x="1052.5" y="1397" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1055.46" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="597" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="607.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,566,470 samples, 0.01%)</title><rect x="1052.5" y="1317" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1055.46" y="1327.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (51,078,912 samples, 0.13%)</title><rect x="166.3" y="1413" width="1.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="169.31" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="181" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="191.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1461" width="8.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1115.05" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,566,470 samples, 0.01%)</title><rect x="1052.5" y="1349" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1055.46" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (21,632,619 samples, 0.05%)</title><rect x="121.6" y="1525" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="124.60" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1045" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1055.5" ></text>
</g>
<g >
<title>perf_mmap__push (33,728,486 samples, 0.08%)</title><rect x="122.3" y="1541" width="1.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="125.29" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="421" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="431.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (6,565,259 samples, 0.02%)</title><rect x="122.7" y="1253" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="125.67" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,400,612 samples, 0.02%)</title><rect x="10.1" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.08" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,978,288 samples, 0.07%)</title><rect x="40.4" y="677" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="687.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (51,181,713 samples, 0.13%)</title><rect x="163.3" y="1493" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="166.30" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="565" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="575.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (51,178,027 samples, 0.13%)</title><rect x="148.3" y="1589" width="1.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="151.28" y="1599.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,428,623 samples, 0.02%)</title><rect x="1142.3" y="1493" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1145.25" y="1503.5" ></text>
</g>
<g >
<title>move_queued_task (41,918,527 samples, 0.10%)</title><rect x="1141.0" y="1525" width="1.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1144.02" y="1535.5" ></text>
</g>
<g >
<title>hrtimer_forward (470,446,395 samples, 1.17%)</title><rect x="1174.9" y="1525" width="13.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1177.91" y="1535.5" ></text>
</g>
<g >
<title>do_iter_write (24,808,511 samples, 0.06%)</title><rect x="122.5" y="1349" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="125.49" y="1359.5" ></text>
</g>
<g >
<title>__schedule (3,604,834 samples, 0.01%)</title><rect x="1174.7" y="1525" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1177.71" y="1535.5" ></text>
</g>
<g >
<title>vfs_write (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1317" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="13.47" y="1327.5" ></text>
</g>
<g >
<title>update_curr (153,122,123 samples, 0.38%)</title><rect x="1035.9" y="1317" width="4.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1038.94" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,022,624,438 samples, 2.55%)</title><rect x="1017.9" y="1445" width="30.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1020.88" y="1455.5" >en..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1013" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1023.5" ></text>
</g>
<g >
<title>sh (668,293,948 samples, 1.67%)</title><rect x="1052.5" y="1621" width="19.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1055.46" y="1631.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (102,160,171 samples, 0.25%)</title><rect x="688.3" y="1461" width="3.0" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="691.28" y="1471.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (10,343,803,204 samples, 25.77%)</title><rect x="707.8" y="1429" width="304.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="710.77" y="1439.5" >ringbuf::producer::Producer&lt;T&gt;::push_cop..</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (4,376,644 samples, 0.01%)</title><rect x="1142.3" y="1349" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1145.31" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (560,109,523 samples, 1.40%)</title><rect x="60.8" y="1541" width="16.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="63.84" y="1551.5" ></text>
</g>
<g >
<title>schedule_idle (3,604,834 samples, 0.01%)</title><rect x="1174.7" y="1541" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1177.71" y="1551.5" ></text>
</g>
<g >
<title>exit_mmap (652,863,570 samples, 1.63%)</title><rect x="1052.8" y="1397" width="19.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1055.82" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,978,288 samples, 0.07%)</title><rect x="40.4" y="725" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="735.5" ></text>
</g>
<g >
<title>ksys_write (33,728,486 samples, 0.08%)</title><rect x="122.3" y="1413" width="1.0" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="125.29" y="1423.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (46,379,008 samples, 0.12%)</title><rect x="37.2" y="1221" width="1.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="40.21" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1221" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (51,147,935 samples, 0.13%)</title><rect x="686.8" y="1493" width="1.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="689.78" y="1503.5" ></text>
</g>
<g >
<title>__do_sys_clone (4,207,732 samples, 0.01%)</title><rect x="1052.6" y="1125" width="0.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1055.60" y="1135.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_syscall (17,652,658,511 samples, 43.98%)</title><rect x="164.8" y="1493" width="519.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="167.80" y="1503.5" >rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::..</text>
</g>
<g >
<title>[perf-1156129.map] (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1605" width="2.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="40.21" y="1615.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (51,110,558 samples, 0.13%)</title><rect x="164.8" y="1461" width="1.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="167.80" y="1471.5" ></text>
</g>
<g >
<title>load_elf_binary (652,863,570 samples, 1.63%)</title><rect x="1052.8" y="1477" width="19.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1055.82" y="1487.5" ></text>
</g>
<g >
<title>copy_pte_range (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1301" width="2.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="40.21" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15,374,371 samples, 0.04%)</title><rect x="40.4" y="533" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (560,640,869 samples, 1.40%)</title><rect x="691.3" y="1429" width="16.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="694.29" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1461" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1471.5" ></text>
</g>
<g >
<title>ksys_read (560,109,523 samples, 1.40%)</title><rect x="60.8" y="1509" width="16.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="63.84" y="1519.5" ></text>
</g>
<g >
<title>dput (3,444,151 samples, 0.01%)</title><rect x="42.1" y="1397" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="45.13" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="549" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="559.5" ></text>
</g>
<g >
<title>[ls] (173,181,288 samples, 0.43%)</title><rect x="11.4" y="1605" width="5.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="14.44" y="1615.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (10,343,803,204 samples, 25.77%)</title><rect x="707.8" y="1413" width="304.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="710.77" y="1423.5" >core::intrinsics::copy_nonoverlapping</text>
</g>
<g >
<title>file_modified (6,100,211 samples, 0.02%)</title><rect x="122.5" y="1285" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="125.49" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1237" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,022,624,438 samples, 2.55%)</title><rect x="1017.9" y="1429" width="30.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1020.88" y="1439.5" >do..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1365" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="709" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="719.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (50,982,643 samples, 0.13%)</title><rect x="167.8" y="1381" width="1.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="170.81" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,130,517 samples, 0.09%)</title><rect x="40.4" y="1093" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1103.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (651,016,355 samples, 1.62%)</title><rect x="1052.8" y="1365" width="19.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1055.82" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (560,109,523 samples, 1.40%)</title><rect x="60.8" y="1557" width="16.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="63.84" y="1567.5" ></text>
</g>
<g >
<title>__calc_delta (51,522,102 samples, 0.13%)</title><rect x="1034.4" y="1317" width="1.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1037.42" y="1327.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,089,173,678 samples, 2.71%)</title><rect x="1142.3" y="1525" width="32.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1145.25" y="1535.5" >cp..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (17,090,446,344 samples, 42.58%)</title><rect x="181.3" y="1365" width="502.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="184.33" y="1375.5" >ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}}</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (102,507,354 samples, 0.26%)</title><rect x="1011.9" y="1445" width="3.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1014.86" y="1455.5" ></text>
</g>
<g >
<title>handle_pte_fault (646,022,029 samples, 1.61%)</title><rect x="124.8" y="1477" width="19.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="127.78" y="1487.5" ></text>
</g>
<g >
<title>[anon] (3,781,746 samples, 0.01%)</title><rect x="37.1" y="1605" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="40.10" y="1615.5" ></text>
</g>
<g >
<title>mmap_region (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1381" width="20.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="19.53" y="1391.5" ></text>
</g>
<g >
<title>load_elf_binary (696,957,429 samples, 1.74%)</title><rect x="16.5" y="1477" width="20.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="19.53" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_lock (102,236,870 samples, 0.25%)</title><rect x="1023.9" y="1381" width="3.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1026.90" y="1391.5" ></text>
</g>
<g >
<title>vfs_read (536,214,679 samples, 1.34%)</title><rect x="88.9" y="1477" width="15.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="91.86" y="1487.5" ></text>
</g>
<g >
<title>timerqueue_add (4,534,897 samples, 0.01%)</title><rect x="1174.5" y="1445" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1177.53" y="1455.5" ></text>
</g>
<g >
<title>__schedule (613,500,771 samples, 1.53%)</title><rect x="1026.9" y="1365" width="18.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1029.91" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,925,919 samples, 0.03%)</title><rect x="1072.1" y="1589" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1075.11" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,674,620 samples, 0.08%)</title><rect x="40.4" y="869" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="879.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (71,275,036 samples, 0.18%)</title><rect x="39.9" y="1541" width="2.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="42.86" y="1551.5" ></text>
</g>
<g >
<title>menu_select (8,365,117 samples, 0.02%)</title><rect x="1174.3" y="1509" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1177.27" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="277" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="287.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (3,917,060 samples, 0.01%)</title><rect x="1188.9" y="1285" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1191.88" y="1295.5" ></text>
</g>
<g >
<title>[bash] (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1301" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1055.60" y="1311.5" ></text>
</g>
<g >
<title>lind_send (12,387,514,477 samples, 30.86%)</title><rect x="685.3" y="1541" width="364.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="688.27" y="1551.5" >lind_send</text>
</g>
<g >
<title>__x64_sys_execve (562,767,539 samples, 1.40%)</title><rect x="104.9" y="1573" width="16.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="107.93" y="1583.5" ></text>
</g>
<g >
<title>kernel_clone (4,207,732 samples, 0.01%)</title><rect x="1052.6" y="1109" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1055.60" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="117" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="127.5" ></text>
</g>
<g >
<title>sock_read_iter (652,886,145 samples, 1.63%)</title><rect x="1092.9" y="1525" width="19.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1095.86" y="1535.5" ></text>
</g>
<g >
<title>ovl_get_inode_acl (10,251,454 samples, 0.03%)</title><rect x="11.4" y="1333" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="14.44" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="773" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,409,352 samples, 0.08%)</title><rect x="40.4" y="981" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="991.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (204,300,893 samples, 0.51%)</title><rect x="172.3" y="1365" width="6.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="175.31" y="1375.5" ></text>
</g>
<g >
<title>__do_sys_newstat (639,899,783 samples, 1.59%)</title><rect x="42.0" y="1477" width="18.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="44.95" y="1487.5" ></text>
</g>
<g >
<title>[[stack]] (24,927,426 samples, 0.06%)</title><rect x="10.7" y="1605" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.71" y="1615.5" ></text>
</g>
<g >
<title>psi_task_change (41,918,527 samples, 0.10%)</title><rect x="1141.0" y="1493" width="1.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1144.02" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,566,470 samples, 0.01%)</title><rect x="1052.5" y="1381" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1055.46" y="1391.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (301,133,767 samples, 0.75%)</title><rect x="1112.1" y="1429" width="8.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1115.05" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,153,985 samples, 0.01%)</title><rect x="40.8" y="501" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="43.75" y="511.5" ></text>
</g>
<g >
<title>worker (7,702,004 samples, 0.02%)</title><rect x="104.7" y="1573" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="107.70" y="1583.5" ></text>
</g>
<g >
<title>[bash] (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1253" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1055.60" y="1263.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (652,886,145 samples, 1.63%)</title><rect x="1092.9" y="1477" width="19.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1095.86" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,239,140 samples, 0.12%)</title><rect x="40.4" y="1349" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (173,181,288 samples, 0.43%)</title><rect x="11.4" y="1573" width="5.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.44" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="229" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="239.5" ></text>
</g>
<g >
<title>vfs_statx (633,773,721 samples, 1.58%)</title><rect x="42.1" y="1445" width="18.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="45.13" y="1455.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (102,507,354 samples, 0.26%)</title><rect x="1011.9" y="1461" width="3.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1014.86" y="1471.5" ></text>
</g>
<g >
<title>update_rq_clock (51,024,094 samples, 0.13%)</title><rect x="1044.9" y="1365" width="1.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1047.94" y="1375.5" ></text>
</g>
<g >
<title>search_binary_handler (562,767,539 samples, 1.40%)</title><rect x="104.9" y="1493" width="16.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="107.93" y="1503.5" ></text>
</g>
<g >
<title>__xstat64 (639,899,783 samples, 1.59%)</title><rect x="42.0" y="1541" width="18.8" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="44.95" y="1551.5" ></text>
</g>
<g >
<title>[bash] (4,566,470 samples, 0.01%)</title><rect x="1052.5" y="1477" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1055.46" y="1487.5" ></text>
</g>
<g >
<title>fsnotify (5,475,903 samples, 0.01%)</title><rect x="122.3" y="1365" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="125.29" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1189" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="485" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="789" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="799.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (4,534,897 samples, 0.01%)</title><rect x="1174.5" y="1461" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1177.53" y="1471.5" ></text>
</g>
<g >
<title>inotify_free_event (3,426,854 samples, 0.01%)</title><rect x="122.3" y="1285" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="125.35" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="165" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="175.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU32::load (51,146,801 samples, 0.13%)</title><rect x="1047.9" y="1461" width="1.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1050.95" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="677" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,429,191 samples, 0.01%)</title><rect x="41.1" y="597" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.05" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (384,522,992 samples, 0.96%)</title><rect x="77.6" y="613" width="11.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.56" y="623.5" ></text>
</g>
<g >
<title>proc_reg_read (7,702,004 samples, 0.02%)</title><rect x="104.7" y="1429" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="107.70" y="1439.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (51,147,935 samples, 0.13%)</title><rect x="686.8" y="1461" width="1.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="689.78" y="1471.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (51,636,237 samples, 0.13%)</title><rect x="178.3" y="1365" width="1.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="181.31" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,880,314 samples, 0.10%)</title><rect x="40.4" y="1253" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1263.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (24,808,511 samples, 0.06%)</title><rect x="122.5" y="1317" width="0.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="125.49" y="1327.5" ></text>
</g>
<g >
<title>vfs_iter_write (24,808,511 samples, 0.06%)</title><rect x="122.5" y="1365" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="125.49" y="1375.5" ></text>
</g>
<g >
<title>kfree (3,426,854 samples, 0.01%)</title><rect x="122.3" y="1269" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="125.35" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,130,517 samples, 0.09%)</title><rect x="40.4" y="1061" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1333" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1557" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,207,732 samples, 0.01%)</title><rect x="1052.6" y="1157" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1055.60" y="1167.5" ></text>
</g>
<g >
<title>_start (12,123,688 samples, 0.03%)</title><rect x="1052.5" y="1605" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1055.46" y="1615.5" ></text>
</g>
<g >
<title>[perf-1305770.map] (102,286,474 samples, 0.25%)</title><rect x="143.8" y="1605" width="3.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="146.77" y="1615.5" ></text>
</g>
<g >
<title>migration_cpu_stop (41,918,527 samples, 0.10%)</title><rect x="1141.0" y="1541" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1144.02" y="1551.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (51,636,237 samples, 0.13%)</title><rect x="178.3" y="1381" width="1.5" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="181.31" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,130,517 samples, 0.09%)</title><rect x="40.4" y="1029" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1039.5" ></text>
</g>
<g >
<title>__libc_fork (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1509" width="2.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="40.21" y="1519.5" ></text>
</g>
<g >
<title>idle_cpu (4,376,644 samples, 0.01%)</title><rect x="1142.3" y="1317" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1145.31" y="1327.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (87,917,364 samples, 0.22%)</title><rect x="37.2" y="1541" width="2.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="40.21" y="1551.5" ></text>
</g>
<g >
<title>__libc_start_main (173,181,288 samples, 0.43%)</title><rect x="11.4" y="1589" width="5.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="14.44" y="1599.5" ></text>
</g>
<g >
<title>__entry_text_start (51,059,739 samples, 0.13%)</title><rect x="1016.4" y="1445" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1019.38" y="1455.5" ></text>
</g>
<g >
<title>pick_next_task (357,836,032 samples, 0.89%)</title><rect x="1029.9" y="1349" width="10.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1032.92" y="1359.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (4,490,724 samples, 0.01%)</title><rect x="1188.7" y="1509" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1191.74" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="245" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,428,623 samples, 0.02%)</title><rect x="1142.3" y="1477" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1145.25" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (46,239,140 samples, 0.12%)</title><rect x="40.4" y="1301" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.42" y="1311.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (51,216,979 samples, 0.13%)</title><rect x="1049.5" y="1541" width="1.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1052.45" y="1551.5" ></text>
</g>
<g >
<title>eventfd_read (536,214,679 samples, 1.34%)</title><rect x="88.9" y="1461" width="15.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="91.86" y="1471.5" ></text>
</g>
<g >
<title>timerqueue_add (4,290,157 samples, 0.01%)</title><rect x="1188.7" y="1461" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1191.74" y="1471.5" ></text>
</g>
<g >
<title>arch_call_rest_init (38,253,319 samples, 0.10%)</title><rect x="1188.9" y="1557" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1191.88" y="1567.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (560,640,869 samples, 1.40%)</title><rect x="691.3" y="1413" width="16.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="694.29" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (387,294,956 samples, 0.96%)</title><rect x="77.5" y="1589" width="11.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.47" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="453" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (51,211,380 samples, 0.13%)</title><rect x="685.3" y="1477" width="1.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="688.27" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="85" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="95.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1237" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.47" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,674,620 samples, 0.08%)</title><rect x="40.4" y="885" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,880,314 samples, 0.10%)</title><rect x="40.4" y="1157" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.42" y="1167.5" ></text>
</g>
<g >
<title>sel_ldr (31,605,875,795 samples, 78.74%)</title><rect x="123.3" y="1621" width="929.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="126.29" y="1631.5" >sel_ldr</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="1397" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="1407.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (7,865,666 samples, 0.02%)</title><rect x="123.0" y="1237" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="125.99" y="1247.5" ></text>
</g>
<g >
<title>make_child (4,341,831 samples, 0.01%)</title><rect x="1052.6" y="1221" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1055.60" y="1231.5" ></text>
</g>
<g >
<title>Glob::isIgnored (71,275,036 samples, 0.18%)</title><rect x="39.9" y="1525" width="2.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="42.86" y="1535.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (1,275,957,148 samples, 3.18%)</title><rect x="39.8" y="1589" width="37.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="42.80" y="1599.5" >Ino..</text>
</g>
<g >
<title>do_syscall_64 (639,899,783 samples, 1.59%)</title><rect x="42.0" y="1509" width="18.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="44.95" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,123,688 samples, 0.03%)</title><rect x="1052.5" y="1573" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1055.46" y="1583.5" ></text>
</g>
<g >
<title>generic_write_end (7,865,666 samples, 0.02%)</title><rect x="123.0" y="1253" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="125.99" y="1263.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (24,808,511 samples, 0.06%)</title><rect x="122.5" y="1301" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="125.49" y="1311.5" ></text>
</g>
<g >
<title>dequeue_task (41,918,527 samples, 0.10%)</title><rect x="1141.0" y="1509" width="1.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1144.02" y="1519.5" ></text>
</g>
<g >
<title>exec_binprm (562,767,539 samples, 1.40%)</title><rect x="104.9" y="1509" width="16.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="107.93" y="1519.5" ></text>
</g>
<g >
<title>write (4,950,073 samples, 0.01%)</title><rect x="10.5" y="1397" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.47" y="1407.5" ></text>
</g>
<g >
<title>free_pgtables (652,863,570 samples, 1.63%)</title><rect x="1052.8" y="1381" width="19.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1055.82" y="1391.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (101,995,562 samples, 0.25%)</title><rect x="169.3" y="1429" width="3.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="172.31" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,522,992 samples, 0.96%)</title><rect x="77.6" y="373" width="11.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.56" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,566,470 samples, 0.01%)</title><rect x="1052.5" y="1365" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1055.46" y="1375.5" ></text>
</g>
</g>
</svg>
