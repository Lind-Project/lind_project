<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1670.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1653" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1653" > </text>
<g id="frames">
<g >
<title>[bash] (2,481,833,477 samples, 0.03%)</title><rect x="1172.8" y="1285" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1175.76" y="1295.5" ></text>
</g>
<g >
<title>handle_mm_fault (637,421,109 samples, 0.01%)</title><rect x="1184.6" y="1525" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1187.59" y="1535.5" ></text>
</g>
<g >
<title>docker (1,389,502,319 samples, 0.02%)</title><rect x="10.1" y="1605" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="13.09" y="1615.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::Cage::get_filedescriptor (2,097,608,142 samples, 0.03%)</title><rect x="65.0" y="1557" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="68.04" y="1567.5" ></text>
</g>
<g >
<title>readlink (1,801,990,758 samples, 0.03%)</title><rect x="20.5" y="1509" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="23.54" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_write (666,872,348 samples, 0.01%)</title><rect x="45.2" y="1445" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="48.16" y="1455.5" ></text>
</g>
<g >
<title>copy_present_pte (3,965,555,620 samples, 0.06%)</title><rect x="27.3" y="1269" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="30.31" y="1279.5" ></text>
</g>
<g >
<title>HandleStackContext (4,805,777,458 samples, 0.07%)</title><rect x="1136.2" y="1573" width="0.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1139.17" y="1583.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (4,239,336,555 samples, 0.06%)</title><rect x="1053.7" y="1397" width="0.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1056.71" y="1407.5" ></text>
</g>
<g >
<title>do_statx (1,525,998,427 samples, 0.02%)</title><rect x="20.2" y="1429" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="23.17" y="1439.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run (4,744,795,120 samples, 0.07%)</title><rect x="35.8" y="1541" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="38.79" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="165" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="175.5" ></text>
</g>
<g >
<title>__mmput (1,395,240,940 samples, 0.02%)</title><rect x="1173.7" y="1397" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1176.70" y="1407.5" ></text>
</g>
<g >
<title>vm_area_dup (689,483,739 samples, 0.01%)</title><rect x="28.2" y="1333" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="31.17" y="1343.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (9,373,368,240 samples, 0.13%)</title><rect x="1185.5" y="1493" width="1.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1188.47" y="1503.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2,855,024,309 samples, 0.04%)</title><rect x="41.7" y="1285" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="44.66" y="1295.5" ></text>
</g>
<g >
<title>generic_perform_write (5,728,938,892 samples, 0.08%)</title><rect x="44.2" y="1269" width="0.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="47.15" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,324,495,273 samples, 0.16%)</title><rect x="29.6" y="1317" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.62" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1141" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1151.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (23,241,019,411 samples, 0.32%)</title><rect x="38.5" y="1317" width="3.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="41.48" y="1327.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (2,907,173,811 samples, 0.04%)</title><rect x="19.4" y="1429" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="22.41" y="1439.5" ></text>
</g>
<g >
<title>cfree (1,150,866,795 samples, 0.02%)</title><rect x="33.8" y="69" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="36.85" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1237" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="549" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="559.5" ></text>
</g>
<g >
<title>down_write (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1333" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="21.06" y="1343.5" ></text>
</g>
<g >
<title>filename_lookup (2,368,154,937 samples, 0.03%)</title><rect x="32.0" y="1413" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="34.96" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="213" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1013" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1023.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (27,205,235,371 samples, 0.38%)</title><rect x="29.0" y="1573" width="4.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="31.98" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1301" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="1311.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (2,846,575,533 samples, 0.04%)</title><rect x="41.7" y="1269" width="0.4" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="44.66" y="1279.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (3,680,489,293 samples, 0.05%)</title><rect x="15.8" y="1493" width="0.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="18.75" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="661" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="671.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,413,574,650 samples, 0.09%)</title><rect x="1174.7" y="1477" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1177.73" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,211,799,262 samples, 0.04%)</title><rect x="23.5" y="1589" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="26.48" y="1599.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (9,250,196,231 samples, 0.13%)</title><rect x="217.5" y="1573" width="1.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="220.55" y="1583.5" ></text>
</g>
<g >
<title>__tfind (745,757,800 samples, 0.01%)</title><rect x="22.0" y="1413" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="25.03" y="1423.5" ></text>
</g>
<g >
<title>v8::internal::ScavengerCollector::CollectGarbage (716,368,191 samples, 0.01%)</title><rect x="35.5" y="1429" width="0.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="38.47" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,950,056,038 samples, 0.08%)</title><rect x="29.8" y="837" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.79" y="847.5" ></text>
</g>
<g >
<title>[bash] (4,732,783,893 samples, 0.07%)</title><rect x="1172.6" y="1429" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1175.59" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (893,062,562 samples, 0.01%)</title><rect x="29.9" y="293" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.90" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::consumer::Consumer&lt;u8&gt;&gt;&gt; (494,399,470,373 samples, 6.87%)</title><rect x="621.0" y="1397" width="81.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="624.05" y="1407.5" >core::ptr..</text>
</g>
<g >
<title>cpuidle_enter_state (693,248,611 samples, 0.01%)</title><rect x="16.7" y="1445" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="19.68" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter (3,748,528,095 samples, 0.05%)</title><rect x="15.8" y="1509" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="18.75" y="1519.5" ></text>
</g>
<g >
<title>Glob::isIgnored (15,898,266,138 samples, 0.22%)</title><rect x="29.2" y="1509" width="2.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="32.18" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1045" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (618,910,582 samples, 0.01%)</title><rect x="33.4" y="197" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="207.5" ></text>
</g>
<g >
<title>free_pud_range (1,181,336,583 samples, 0.02%)</title><rect x="37.8" y="1317" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="40.76" y="1327.5" ></text>
</g>
<g >
<title>wake_up_q (686,456,839 samples, 0.01%)</title><rect x="33.0" y="1397" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="36.01" y="1407.5" ></text>
</g>
<g >
<title>sh (14,734,144,055 samples, 0.20%)</title><rect x="1171.6" y="1605" width="2.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1174.58" y="1615.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (2,356,296,259 samples, 0.03%)</title><rect x="19.4" y="1413" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="22.41" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1445" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,053,831,129 samples, 0.10%)</title><rect x="10.5" y="1557" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.54" y="1567.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_offset (4,244,452,573 samples, 0.06%)</title><rect x="742.3" y="1333" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="745.33" y="1343.5" ></text>
</g>
<g >
<title>inode_permission (1,234,494,252 samples, 0.02%)</title><rect x="32.0" y="1365" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="35.01" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="437" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="447.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (98,017,717,690 samples, 1.36%)</title><rect x="459.4" y="1525" width="16.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="462.37" y="1535.5" ></text>
</g>
<g >
<title>proc_readfd (1,282,547,910 samples, 0.02%)</title><rect x="1172.3" y="1269" width="0.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1175.27" y="1279.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (90,491,656,972 samples, 1.26%)</title><rect x="914.9" y="1413" width="14.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="917.91" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,472,987,059 samples, 0.09%)</title><rect x="29.8" y="885" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.78" y="895.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt; (83,584,598,389 samples, 1.16%)</title><rect x="531.1" y="1445" width="13.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="534.13" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1349" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1359.5" ></text>
</g>
<g >
<title>page_remove_rmap (4,415,165,709 samples, 0.06%)</title><rect x="40.9" y="1285" width="0.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="43.93" y="1295.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,902,383,200 samples, 0.05%)</title><rect x="48.3" y="1557" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="51.33" y="1567.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1,841,492,955 samples, 0.03%)</title><rect x="56.3" y="1573" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="59.26" y="1583.5" ></text>
</g>
<g >
<title>do_idle (2,108,814,445 samples, 0.03%)</title><rect x="13.6" y="1541" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="16.60" y="1551.5" ></text>
</g>
<g >
<title>cpu_startup_entry (787,469,242 samples, 0.01%)</title><rect x="17.6" y="1557" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="20.63" y="1567.5" ></text>
</g>
<g >
<title>NaClLog (37,434,350,006 samples, 0.52%)</title><rect x="798.7" y="1525" width="6.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="801.73" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1493" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1503.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (46,580,219,586 samples, 0.65%)</title><rect x="507.6" y="1461" width="7.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="510.57" y="1471.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (32,306,786,414 samples, 0.45%)</title><rect x="552.3" y="1413" width="5.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="555.30" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,513,447,316 samples, 0.02%)</title><rect x="48.1" y="1573" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="51.05" y="1583.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (90,491,656,972 samples, 1.26%)</title><rect x="914.9" y="1445" width="14.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="917.91" y="1455.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (17,333,986,236 samples, 0.24%)</title><rect x="608.7" y="1429" width="2.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="611.65" y="1439.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1,749,277,598 samples, 0.02%)</title><rect x="43.7" y="1365" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="46.66" y="1375.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (209,215,589,232 samples, 2.91%)</title><rect x="1072.3" y="1397" width="34.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1075.33" y="1407.5" >co..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="773" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="783.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (40,525,216,370 samples, 0.56%)</title><rect x="869.7" y="1445" width="6.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="872.68" y="1455.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (76,068,683,399 samples, 1.06%)</title><rect x="584.1" y="1397" width="12.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="587.08" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,298,363,947 samples, 0.16%)</title><rect x="29.6" y="1301" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.62" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="469" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="479.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1,000,172,711 samples, 0.01%)</title><rect x="19.2" y="1301" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="22.18" y="1311.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (700,791,443 samples, 0.01%)</title><rect x="44.9" y="1189" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="47.94" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,642,346,958 samples, 0.02%)</title><rect x="12.4" y="1445" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.35" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,642,225,098 samples, 0.02%)</title><rect x="19.1" y="1429" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.14" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_enter (705,472,589 samples, 0.01%)</title><rect x="16.7" y="1461" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="19.68" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,312,347,490 samples, 0.13%)</title><rect x="43.6" y="1429" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="46.62" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="901" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="911.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,619,449,241 samples, 0.04%)</title><rect x="18.4" y="1525" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.44" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="293" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="303.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,634,096,891 samples, 0.02%)</title><rect x="11.7" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.69" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="997" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1541" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1551.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (3,886,169,962 samples, 0.05%)</title><rect x="1051.2" y="1413" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1054.17" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1477" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.22" y="1487.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (69,493,569,876 samples, 0.96%)</title><rect x="1045.2" y="1445" width="11.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1048.18" y="1455.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (9,663,372,558 samples, 0.13%)</title><rect x="68.7" y="1573" width="1.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="71.73" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_enter (9,728,318,366 samples, 0.14%)</title><rect x="1185.4" y="1509" width="1.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1188.43" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="549" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="559.5" ></text>
</g>
<g >
<title>node (111,629,259,197 samples, 1.55%)</title><rect x="24.0" y="1605" width="18.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="27.01" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,706,559,645 samples, 0.04%)</title><rect x="33.8" y="85" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="36.85" y="95.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (2,765,805,481 samples, 0.04%)</title><rect x="13.6" y="1589" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="16.59" y="1599.5" ></text>
</g>
<g >
<title>[ls] (1,046,049,847 samples, 0.01%)</title><rect x="23.2" y="1573" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="26.18" y="1583.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (11,657,412,666 samples, 0.16%)</title><rect x="861.7" y="1493" width="1.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="864.68" y="1503.5" ></text>
</g>
<g >
<title>parse_and_execute (8,679,247,383 samples, 0.12%)</title><rect x="1171.9" y="1509" width="1.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1174.94" y="1519.5" ></text>
</g>
<g >
<title>ion (9,447,528,579 samples, 0.13%)</title><rect x="43.6" y="1477" width="1.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="46.60" y="1487.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (72,415,511,576 samples, 1.01%)</title><rect x="495.7" y="1461" width="11.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="498.70" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,869,186,192 samples, 0.03%)</title><rect x="29.9" y="389" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.89" y="399.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (852,598,292 samples, 0.01%)</title><rect x="16.7" y="1477" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="19.68" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,098,064,394 samples, 0.02%)</title><rect x="1174.4" y="1477" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1177.41" y="1487.5" ></text>
</g>
<g >
<title>non-virtual thunk to v8::internal::CancelableTask::Run (1,088,432,766 samples, 0.02%)</title><rect x="35.4" y="1509" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="38.42" y="1519.5" ></text>
</g>
<g >
<title>do_idle (3,932,476,592 samples, 0.05%)</title><rect x="1189.3" y="1541" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.30" y="1551.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (72,550,530,922 samples, 1.01%)</title><rect x="890.5" y="1429" width="11.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="893.53" y="1439.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (74,116,822,143 samples, 1.03%)</title><rect x="725.5" y="1365" width="12.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="728.47" y="1375.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common (6,491,743,793 samples, 0.09%)</title><rect x="64.3" y="1573" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="67.32" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1125" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="389" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_mutcbuf (2,299,844,532 samples, 0.03%)</title><rect x="516.6" y="1477" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="519.61" y="1487.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1,158,901,982 samples, 0.02%)</title><rect x="1187.4" y="1477" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1190.40" y="1487.5" ></text>
</g>
<g >
<title>node::SpinEventLoop (995,671,573 samples, 0.01%)</title><rect x="37.5" y="1493" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="40.48" y="1503.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (81,906,810,868 samples, 1.14%)</title><rect x="1031.8" y="1461" width="13.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1034.76" y="1471.5" ></text>
</g>
<g >
<title>dequeue_task (778,184,994 samples, 0.01%)</title><rect x="36.1" y="1349" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="39.12" y="1359.5" ></text>
</g>
<g >
<title>search_binary_handler (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1477" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="21.06" y="1487.5" ></text>
</g>
<g >
<title>start_secondary (2,202,155,220 samples, 0.03%)</title><rect x="1176.7" y="1573" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1179.69" y="1583.5" ></text>
</g>
<g >
<title>bprm_execve (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1525" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="21.06" y="1535.5" ></text>
</g>
<g >
<title>pool-udisksd (1,203,386,935 samples, 0.02%)</title><rect x="45.3" y="1605" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="48.30" y="1615.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,271,527,683 samples, 0.02%)</title><rect x="48.5" y="1477" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="51.46" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1093" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1103.5" ></text>
</g>
<g >
<title>dispatcher (4,752,561,717 samples, 0.07%)</title><rect x="63.3" y="1573" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="66.26" y="1583.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (5,320,885,850 samples, 0.07%)</title><rect x="69.4" y="1557" width="0.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="72.44" y="1567.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (6,082,770,474 samples, 0.08%)</title><rect x="50.8" y="1589" width="1.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="53.77" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="421" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="431.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (5,781,718,609 samples, 0.08%)</title><rect x="35.8" y="1557" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="38.79" y="1567.5" ></text>
</g>
<g >
<title>InotifyBackend::start (4,744,795,120 samples, 0.07%)</title><rect x="35.8" y="1525" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="38.79" y="1535.5" ></text>
</g>
<g >
<title>tcp_seq_next (694,646,493 samples, 0.01%)</title><rect x="37.1" y="1365" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="40.10" y="1375.5" ></text>
</g>
<g >
<title>generic_update_time (654,390,944 samples, 0.01%)</title><rect x="44.0" y="1237" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="47.04" y="1247.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (6,580,281,916 samples, 0.09%)</title><rect x="44.0" y="1285" width="1.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="47.02" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="245" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="255.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (4,296,728,623 samples, 0.06%)</title><rect x="957.5" y="1429" width="0.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="960.49" y="1439.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (9,409,249,271 samples, 0.13%)</title><rect x="314.7" y="1557" width="1.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="317.67" y="1567.5" ></text>
</g>
<g >
<title>kernel_clone (18,280,759,524 samples, 0.25%)</title><rect x="25.3" y="1397" width="3.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="28.30" y="1407.5" ></text>
</g>
<g >
<title>journal-offline (7,225,532,594 samples, 0.10%)</title><rect x="12.9" y="1605" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="15.86" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1365" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1375.5" ></text>
</g>
<g >
<title>__fdget (716,515,900 samples, 0.01%)</title><rect x="42.6" y="1445" width="0.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="45.59" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (834,327,769 samples, 0.01%)</title><rect x="1173.4" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.43" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,875,357,486 samples, 0.10%)</title><rect x="10.6" y="1493" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.55" y="1503.5" ></text>
</g>
<g >
<title>NaClSysSendDecoder (1,993,906,331 samples, 0.03%)</title><rect x="1148.2" y="1573" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1151.25" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,469,646,722 samples, 0.06%)</title><rect x="31.8" y="1509" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="34.83" y="1519.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (27,906,692,828 samples, 0.39%)</title><rect x="37.7" y="1541" width="4.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="40.71" y="1551.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (680,562,634 samples, 0.01%)</title><rect x="1187.9" y="1525" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1190.87" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1301" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1311.5" ></text>
</g>
<g >
<title>dispatcher (1,678,058,195,769 samples, 23.30%)</title><rect x="491.6" y="1509" width="275.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="494.61" y="1519.5" >dispatcher</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (78,779,570,562 samples, 1.09%)</title><rect x="531.9" y="1397" width="12.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="534.92" y="1407.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (3,014,257,139 samples, 0.04%)</title><rect x="44.3" y="1253" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="47.27" y="1263.5" ></text>
</g>
<g >
<title>tcp_get_idx (806,135,373 samples, 0.01%)</title><rect x="37.2" y="1349" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="40.22" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="805" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1509" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1519.5" ></text>
</g>
<g >
<title>begin_new_exec (1,410,660,722 samples, 0.02%)</title><rect x="1173.7" y="1445" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1176.70" y="1455.5" ></text>
</g>
<g >
<title>vfs_fstatat (4,155,606,278 samples, 0.06%)</title><rect x="31.9" y="1445" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="34.87" y="1455.5" ></text>
</g>
<g >
<title>[sel_ldr] (816,193,964,112 samples, 11.33%)</title><rect x="74.3" y="1573" width="133.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="77.31" y="1583.5" >[sel_ldr]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="741" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1477" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1487.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (689,123,870 samples, 0.01%)</title><rect x="1189.3" y="1429" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1192.30" y="1439.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1,529,414,792,025 samples, 21.24%)</title><rect x="516.0" y="1493" width="250.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="518.97" y="1503.5" >rustposix::safeposix::dispatcher:..</text>
</g>
<g >
<title>record__pushfn (9,499,451,374 samples, 0.13%)</title><rect x="43.6" y="1509" width="1.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="46.59" y="1519.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,116,744,919 samples, 0.03%)</title><rect x="13.6" y="1557" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="16.59" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (749,779,530 samples, 0.01%)</title><rect x="1174.5" y="1429" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1177.46" y="1439.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (4,959,562,109 samples, 0.07%)</title><rect x="1144.4" y="1573" width="0.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1147.36" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,457,389,819 samples, 0.02%)</title><rect x="1184.9" y="1573" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1187.95" y="1583.5" ></text>
</g>
<g >
<title>[grep] (2,710,980,627 samples, 0.04%)</title><rect x="12.2" y="1589" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.23" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,416,684,246 samples, 0.19%)</title><rect x="29.5" y="1429" width="2.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.53" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="501" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (913,967,586 samples, 0.01%)</title><rect x="35.3" y="1541" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="38.25" y="1551.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectGetOwnPropertyDescriptors (1,748,866,347 samples, 0.02%)</title><rect x="24.9" y="1557" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="27.93" y="1567.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (69,945,738,377 samples, 0.97%)</title><rect x="878.4" y="1445" width="11.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="881.39" y="1455.5" ></text>
</g>
<g >
<title>cpu_startup_entry (748,910,149 samples, 0.01%)</title><rect x="1177.0" y="1509" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1180.05" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1397" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,420,495,652 samples, 0.02%)</title><rect x="19.2" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.18" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,492,223,002 samples, 0.02%)</title><rect x="11.7" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.69" y="1535.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (73,903,141,687 samples, 1.03%)</title><rect x="596.5" y="1413" width="12.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="599.54" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,203,279,179 samples, 0.09%)</title><rect x="10.6" y="1461" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.56" y="1471.5" ></text>
</g>
<g >
<title>kernel_clone (1,009,865,395 samples, 0.01%)</title><rect x="1172.8" y="1093" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1175.79" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="821" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="831.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (78,327,246,690 samples, 1.09%)</title><rect x="1032.4" y="1413" width="12.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1035.35" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1477" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,761,375,523 samples, 0.07%)</title><rect x="29.8" y="741" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.81" y="751.5" ></text>
</g>
<g >
<title>_dl_catch_exception (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1397" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="26.22" y="1407.5" ></text>
</g>
<g >
<title>core::cmp::min (4,296,728,623 samples, 0.06%)</title><rect x="957.5" y="1461" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="960.49" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (719,453,551 samples, 0.01%)</title><rect x="1173.4" y="1413" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.44" y="1423.5" ></text>
</g>
<g >
<title>proc_reg_read (1,500,781,866 samples, 0.02%)</title><rect x="37.1" y="1413" width="0.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="40.10" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="725" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1253" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1263.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,967,845,924 samples, 0.03%)</title><rect x="15.9" y="1477" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="18.91" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,321,881,822 samples, 0.05%)</title><rect x="10.7" y="1413" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.68" y="1423.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (4,551,113,963 samples, 0.06%)</title><rect x="515.2" y="1477" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="518.22" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,549,710,010 samples, 0.02%)</title><rect x="18.6" y="1445" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.56" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,681,532,839 samples, 0.15%)</title><rect x="29.6" y="1221" width="1.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.63" y="1231.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1557" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="36.43" y="1567.5" ></text>
</g>
<g >
<title>command_substitute (1,081,722,610 samples, 0.02%)</title><rect x="1173.2" y="1317" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1176.18" y="1327.5" ></text>
</g>
<g >
<title>__mmput (27,906,692,828 samples, 0.39%)</title><rect x="37.7" y="1397" width="4.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="40.71" y="1407.5" ></text>
</g>
<g >
<title>node::PerIsolatePlatformData::RunForegroundTask (1,088,432,766 samples, 0.02%)</title><rect x="35.4" y="1525" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="38.42" y="1535.5" ></text>
</g>
<g >
<title>free_pgd_range (1,181,336,583 samples, 0.02%)</title><rect x="37.8" y="1349" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="40.76" y="1359.5" ></text>
</g>
<g >
<title>__libc_start_main (7,053,831,129 samples, 0.10%)</title><rect x="10.5" y="1573" width="1.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.54" y="1583.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (962,745,735 samples, 0.01%)</title><rect x="1188.1" y="1429" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1191.07" y="1439.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76,695,226,535 samples, 1.06%)</title><rect x="889.8" y="1461" width="12.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="892.85" y="1471.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (11,607,534,485 samples, 0.16%)</title><rect x="1051.8" y="1397" width="1.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1054.80" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="949" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1,617,101,465 samples, 0.02%)</title><rect x="1173.7" y="1557" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1176.68" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (25,466,403,123 samples, 0.35%)</title><rect x="18.9" y="1557" width="4.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.91" y="1567.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (5,352,724,800 samples, 0.07%)</title><rect x="1185.8" y="1477" width="0.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1188.79" y="1487.5" ></text>
</g>
<g >
<title>uv__async_io (1,786,096,205 samples, 0.02%)</title><rect x="35.4" y="1557" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="38.41" y="1567.5" ></text>
</g>
<g >
<title>ovl_write_iter (7,048,548,903 samples, 0.10%)</title><rect x="44.0" y="1365" width="1.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="46.96" y="1375.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (18,499,740,508 samples, 0.26%)</title><rect x="25.3" y="1509" width="3.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="28.29" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,223,153,859 samples, 0.02%)</title><rect x="32.9" y="1445" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="35.93" y="1455.5" ></text>
</g>
<g >
<title>[bash] (1,088,653,350 samples, 0.02%)</title><rect x="1173.2" y="1381" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1176.18" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1157" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1167.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1237" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.22" y="1247.5" ></text>
</g>
<g >
<title>_dl_catch_exception (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1269" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="26.22" y="1279.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,328,957,806 samples, 0.02%)</title><rect x="49.0" y="1509" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="51.97" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,659,529,379 samples, 0.02%)</title><rect x="11.7" y="1589" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.69" y="1599.5" ></text>
</g>
<g >
<title>__tsearch (1,027,456,008 samples, 0.01%)</title><rect x="1175.5" y="1413" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1178.49" y="1423.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (18,222,754,566 samples, 0.25%)</title><rect x="25.3" y="1365" width="3.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="28.30" y="1375.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (5,320,885,850 samples, 0.07%)</title><rect x="69.4" y="1541" width="0.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="72.44" y="1551.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (746,103,286 samples, 0.01%)</title><rect x="1189.8" y="1493" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1192.80" y="1503.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (56,247,144,911 samples, 0.78%)</title><rect x="1045.2" y="1429" width="9.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1048.18" y="1439.5" ></text>
</g>
<g >
<title>copy_page_range (14,814,908,405 samples, 0.21%)</title><rect x="25.6" y="1333" width="2.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="28.61" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,094,170,120 samples, 0.02%)</title><rect x="1174.4" y="1461" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1177.41" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,710,980,627 samples, 0.04%)</title><rect x="12.2" y="1557" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.23" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1461" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1471.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (4,705,728,673 samples, 0.07%)</title><rect x="50.0" y="1589" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="53.00" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,714,961,101 samples, 0.19%)</title><rect x="29.5" y="1461" width="2.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.49" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,760,550,613 samples, 0.04%)</title><rect x="1174.9" y="1413" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1177.91" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1525" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="36.43" y="1535.5" ></text>
</g>
<g >
<title>__filemap_get_folio (1,902,016,504 samples, 0.03%)</title><rect x="44.4" y="1205" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="47.44" y="1215.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,000,172,711 samples, 0.01%)</title><rect x="19.2" y="1253" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.18" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="469" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="479.5" ></text>
</g>
<g >
<title>do_user_addr_fault (638,155,180 samples, 0.01%)</title><rect x="1184.6" y="1541" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1187.59" y="1551.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (22,680,242,456 samples, 0.31%)</title><rect x="29.0" y="1541" width="3.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="32.01" y="1551.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (145,808,251,046 samples, 2.02%)</title><rect x="713.9" y="1397" width="23.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="716.94" y="1407.5" >r..</text>
</g>
<g >
<title>NaClSysSendDecoder (1,840,609,002 samples, 0.03%)</title><rect x="56.0" y="1589" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.96" y="1599.5" ></text>
</g>
<g >
<title>__libc_start_main (25,472,540,803 samples, 0.35%)</title><rect x="18.9" y="1573" width="4.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="21.91" y="1583.5" ></text>
</g>
<g >
<title>[unknown]  (103,331,931,168 samples, 1.43%)</title><rect x="1116.9" y="1589" width="16.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1119.89" y="1599.5" ></text>
</g>
<g >
<title>worker_thread (683,233,396 samples, 0.01%)</title><rect x="1185.2" y="1557" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1188.22" y="1567.5" ></text>
</g>
<g >
<title>execute_command_internal (694,457,587 samples, 0.01%)</title><rect x="1173.0" y="1141" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1175.99" y="1151.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (18,935,426,793 samples, 0.26%)</title><rect x="25.3" y="1573" width="3.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="28.28" y="1583.5" ></text>
</g>
<g >
<title>NaClLog (10,330,256,123 samples, 0.14%)</title><rect x="440.7" y="1541" width="1.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="443.75" y="1551.5" ></text>
</g>
<g >
<title>[ls] (11,845,633,622 samples, 0.16%)</title><rect x="18.9" y="1525" width="2.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.93" y="1535.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (175,233,514,817 samples, 2.43%)</title><rect x="737.8" y="1397" width="28.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="740.84" y="1407.5" >ri..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,652,185,038 samples, 0.02%)</title><rect x="11.7" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.69" y="1583.5" ></text>
</g>
<g >
<title>psi_task_change (735,022,523 samples, 0.01%)</title><rect x="1189.8" y="1445" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1192.80" y="1455.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (3,424,687,135 samples, 0.05%)</title><rect x="616.2" y="1413" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="619.17" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1509" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1519.5" ></text>
</g>
<g >
<title>bprm_execve (1,617,101,465 samples, 0.02%)</title><rect x="1173.7" y="1525" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1176.68" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,163,466,622 samples, 0.06%)</title><rect x="29.8" y="661" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.83" y="671.5" ></text>
</g>
<g >
<title>vm_normal_page (655,565,990 samples, 0.01%)</title><rect x="42.2" y="1285" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="45.18" y="1295.5" ></text>
</g>
<g >
<title>exit_mm (2,314,009,182 samples, 0.03%)</title><rect x="23.6" y="1509" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="26.57" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (692,336,338 samples, 0.01%)</title><rect x="45.2" y="1477" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="48.16" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="597" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1205" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="1215.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (6,597,155,686 samples, 0.09%)</title><rect x="44.0" y="1301" width="1.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="47.02" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1381" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1391.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (914,423,116,807 samples, 12.70%)</title><rect x="616.7" y="1413" width="149.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="619.73" y="1423.5" >rustposix::interfac..</text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (494,399,470,373 samples, 6.87%)</title><rect x="621.0" y="1365" width="81.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="624.05" y="1375.5" >&lt;parking_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,613,597,062 samples, 0.05%)</title><rect x="29.8" y="565" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.84" y="575.5" ></text>
</g>
<g >
<title>readdir64 (1,352,191,598 samples, 0.02%)</title><rect x="1172.3" y="1365" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1175.27" y="1375.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::send_syscall (1,536,337,155,902 samples, 21.33%)</title><rect x="863.6" y="1493" width="251.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="866.59" y="1503.5" >rustposix::safeposix::syscalls::n..</text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (439,962,939,165 samples, 6.11%)</title><rect x="959.0" y="1413" width="72.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="962.00" y="1423.5" >core::sy..</text>
</g>
<g >
<title>do_iter_readv_writev (6,620,599,006 samples, 0.09%)</title><rect x="44.0" y="1317" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="47.01" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="757" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="767.5" ></text>
</g>
<g >
<title>cpuidle_enter (3,000,402,885 samples, 0.04%)</title><rect x="1189.3" y="1509" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1192.30" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (3,712,996,155 samples, 0.05%)</title><rect x="1175.9" y="1589" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1178.92" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="517" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="527.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (10,823,385,227 samples, 0.15%)</title><rect x="43.5" y="1541" width="1.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="46.50" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="693" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="703.5" ></text>
</g>
<g >
<title>perf_poll (1,782,327,411 samples, 0.02%)</title><rect x="42.8" y="1445" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="45.76" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,556,094,339 samples, 0.02%)</title><rect x="33.2" y="1541" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="36.17" y="1551.5" ></text>
</g>
<g >
<title>__libc_fork (1,057,827,468 samples, 0.01%)</title><rect x="1172.8" y="1189" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1175.79" y="1199.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,828,778,081 samples, 0.03%)</title><rect x="20.2" y="1461" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="23.17" y="1471.5" ></text>
</g>
<g >
<title>swapper (6,862,893,586 samples, 0.10%)</title><rect x="1188.9" y="1605" width="1.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1191.88" y="1615.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (42,189,613,877 samples, 0.59%)</title><rect x="545.0" y="1413" width="6.9" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="548.03" y="1423.5" ></text>
</g>
<g >
<title>expand_string_assignment (2,474,732,379 samples, 0.03%)</title><rect x="1172.8" y="1253" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1175.76" y="1263.5" ></text>
</g>
<g >
<title>_Fork (1,039,039,471 samples, 0.01%)</title><rect x="1172.8" y="1173" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1175.79" y="1183.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,249,983,412 samples, 0.02%)</title><rect x="1176.7" y="1493" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1179.70" y="1503.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait (825,068,290 samples, 0.01%)</title><rect x="36.6" y="1525" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.58" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,631,429,901 samples, 0.05%)</title><rect x="29.8" y="581" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.84" y="591.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (73,058,371,368 samples, 1.01%)</title><rect x="428.8" y="1541" width="11.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="431.78" y="1551.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (2,951,380,548 samples, 0.04%)</title><rect x="1176.7" y="1589" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1179.69" y="1599.5" ></text>
</g>
<g >
<title>zap_pte_range (800,980,833 samples, 0.01%)</title><rect x="23.8" y="1381" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="26.82" y="1391.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (494,524,570,591 samples, 6.87%)</title><rect x="316.2" y="1557" width="81.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="319.22" y="1567.5" >NaClAppTh..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1365" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1375.5" ></text>
</g>
<g >
<title>_dl_catch_error (1,420,495,652 samples, 0.02%)</title><rect x="19.2" y="1365" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="22.18" y="1375.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (841,231,970 samples, 0.01%)</title><rect x="23.8" y="1397" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="26.81" y="1407.5" ></text>
</g>
<g >
<title>__tsearch (2,687,313,054 samples, 0.04%)</title><rect x="22.2" y="1413" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="25.16" y="1423.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1,151,782,242 samples, 0.02%)</title><rect x="16.7" y="1573" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="19.67" y="1583.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,935,063,023 samples, 0.05%)</title><rect x="1189.3" y="1557" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1192.30" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1285" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,308,518,103 samples, 0.02%)</title><rect x="1172.3" y="1317" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1175.27" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="565" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="575.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (3,272,304,037 samples, 0.05%)</title><rect x="1188.0" y="1445" width="0.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1191.05" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,066,124,414 samples, 0.01%)</title><rect x="1174.4" y="1445" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1177.41" y="1455.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (4,446,505,690 samples, 0.06%)</title><rect x="860.9" y="1477" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="863.95" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="965" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="975.5" ></text>
</g>
<g >
<title>schedule_idle (1,512,819,267 samples, 0.02%)</title><rect x="1187.6" y="1525" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1190.61" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,393,862,974 samples, 0.03%)</title><rect x="29.9" y="437" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.87" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,255,257,118 samples, 0.16%)</title><rect x="29.6" y="1269" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.63" y="1279.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (5,310,425,588 samples, 0.07%)</title><rect x="1188.0" y="1573" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1191.00" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (846,768,956 samples, 0.01%)</title><rect x="49.0" y="1445" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="51.97" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="837" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="847.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (4,354,263,183 samples, 0.06%)</title><rect x="15.7" y="1525" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="18.74" y="1535.5" ></text>
</g>
<g >
<title>CompareAndSwap (357,537,146,129 samples, 4.96%)</title><rect x="338.7" y="1541" width="58.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="341.66" y="1551.5" >Compar..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,657,249,104 samples, 0.05%)</title><rect x="33.8" y="1557" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.77" y="1567.5" ></text>
</g>
<g >
<title>getgrgid (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1525" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="26.22" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1269" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1279.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (3,784,183,266 samples, 0.05%)</title><rect x="1145.2" y="1573" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1148.17" y="1583.5" ></text>
</g>
<g >
<title>kmem_cache_free (684,063,983 samples, 0.01%)</title><rect x="38.2" y="1333" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="41.21" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1173" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1183.5" ></text>
</g>
<g >
<title>unmap_single_vma (23,521,745,479 samples, 0.33%)</title><rect x="38.4" y="1349" width="3.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="41.43" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,749,403,850 samples, 0.02%)</title><rect x="20.5" y="1477" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="23.54" y="1487.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (62,560,873,926 samples, 0.87%)</title><rect x="561.2" y="1397" width="10.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="564.18" y="1407.5" ></text>
</g>
<g >
<title>_nss_systemd_getgrgid_r (2,915,369,636 samples, 0.04%)</title><rect x="19.4" y="1445" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="22.41" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1253" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1141" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="1151.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,067,417,109 samples, 0.01%)</title><rect x="12.0" y="1589" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="15.04" y="1599.5" ></text>
</g>
<g >
<title>setlocale (6,917,737,324 samples, 0.10%)</title><rect x="10.5" y="1525" width="1.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.55" y="1535.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (33,741,625,202 samples, 0.47%)</title><rect x="433.8" y="1525" width="5.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="436.75" y="1535.5" ></text>
</g>
<g >
<title>__alloc_pages (812,598,181 samples, 0.01%)</title><rect x="26.2" y="1221" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="29.16" y="1231.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (5,163,771,908 samples, 0.07%)</title><rect x="397.2" y="1557" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="400.24" y="1567.5" ></text>
</g>
<g >
<title>seq_read_iter (771,883,071 samples, 0.01%)</title><rect x="48.1" y="1509" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="51.10" y="1519.5" ></text>
</g>
<g >
<title>dispatcher@plt (4,246,619,194 samples, 0.06%)</title><rect x="1115.3" y="1509" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1118.33" y="1519.5" ></text>
</g>
<g >
<title>[libcrypto.so.3] (695,973,855 samples, 0.01%)</title><rect x="1184.7" y="1589" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1187.74" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1189" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="437" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="447.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (950,731,026 samples, 0.01%)</title><rect x="44.3" y="1237" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="47.27" y="1247.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (5,011,148,397 samples, 0.07%)</title><rect x="862.8" y="1477" width="0.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="865.77" y="1487.5" ></text>
</g>
<g >
<title>start_kernel (648,198,257 samples, 0.01%)</title><rect x="13.9" y="1557" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="16.94" y="1567.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (42,189,613,877 samples, 0.59%)</title><rect x="545.0" y="1397" width="6.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="548.03" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="901" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="911.5" ></text>
</g>
<g >
<title>unmap_vmas (1,127,978,193 samples, 0.02%)</title><rect x="23.8" y="1445" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="26.77" y="1455.5" ></text>
</g>
<g >
<title>CompareAndSwap (10,330,390,711 samples, 0.14%)</title><rect x="256.3" y="1557" width="1.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="259.35" y="1567.5" ></text>
</g>
<g >
<title>exec_mmap (1,400,026,512 samples, 0.02%)</title><rect x="1173.7" y="1429" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1176.70" y="1439.5" ></text>
</g>
<g >
<title>start_secondary (787,469,242 samples, 0.01%)</title><rect x="17.6" y="1573" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="20.63" y="1583.5" ></text>
</g>
<g >
<title>execute_command_internal (3,828,777,993 samples, 0.05%)</title><rect x="1172.0" y="1445" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1174.96" y="1455.5" ></text>
</g>
<g >
<title>NaClSysRecvDecoder (2,301,095,381 samples, 0.03%)</title><rect x="55.6" y="1589" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="58.58" y="1599.5" ></text>
</g>
<g >
<title>__handle_mm_fault (637,421,109 samples, 0.01%)</title><rect x="1184.6" y="1509" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1187.59" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (11,597,935,852 samples, 0.16%)</title><rect x="1185.4" y="1525" width="1.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1188.42" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27,914,395,585 samples, 0.39%)</title><rect x="37.7" y="1589" width="4.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="40.71" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="181" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="191.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,826,800,918 samples, 0.03%)</title><rect x="1174.3" y="1525" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1177.30" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (68,684,817,428 samples, 0.95%)</title><rect x="597.4" y="1397" width="11.3" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="600.40" y="1407.5" ></text>
</g>
<g >
<title>record__write (735,405,334 samples, 0.01%)</title><rect x="45.2" y="1525" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="48.15" y="1535.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (43,667,905,719 samples, 0.61%)</title><rect x="306.2" y="1541" width="7.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="309.23" y="1551.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (112,874,409,551 samples, 1.57%)</title><rect x="746.0" y="1333" width="18.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="748.98" y="1343.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,096,195,486 samples, 0.02%)</title><rect x="1185.5" y="1477" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1188.52" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,682,454,703 samples, 0.02%)</title><rect x="12.4" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.35" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,668,574,584 samples, 0.15%)</title><rect x="29.6" y="1205" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.64" y="1215.5" ></text>
</g>
<g >
<title>v8::internal::ConcurrentMarking::Run (817,646,371 samples, 0.01%)</title><rect x="36.8" y="1509" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="39.83" y="1519.5" ></text>
</g>
<g >
<title>run-parts (876,789,506 samples, 0.01%)</title><rect x="45.5" y="1605" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="48.49" y="1615.5" ></text>
</g>
<g >
<title>asm_common_interrupt (689,795,322 samples, 0.01%)</title><rect x="1189.3" y="1477" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1192.30" y="1487.5" ></text>
</g>
<g >
<title>irq_exit_rcu (689,123,870 samples, 0.01%)</title><rect x="1189.3" y="1445" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1192.30" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="533" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="543.5" ></text>
</g>
<g >
<title>v8::internal::Heap::Scavenge (716,368,191 samples, 0.01%)</title><rect x="35.5" y="1445" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="38.47" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="133" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4,809,790,492 samples, 0.07%)</title><rect x="557.6" y="1429" width="0.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="560.60" y="1439.5" ></text>
</g>
<g >
<title>rest_init (5,310,425,588 samples, 0.07%)</title><rect x="1188.0" y="1525" width="0.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1191.00" y="1535.5" ></text>
</g>
<g >
<title>do_group_exit (684,298,732 samples, 0.01%)</title><rect x="12.1" y="1541" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="15.10" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="821" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="831.5" ></text>
</g>
<g >
<title>common_interrupt (689,795,322 samples, 0.01%)</title><rect x="1189.3" y="1461" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1192.30" y="1471.5" ></text>
</g>
<g >
<title>unmap_page_range (866,637,857 samples, 0.01%)</title><rect x="23.8" y="1413" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="26.81" y="1423.5" ></text>
</g>
<g >
<title>exit_mmap (27,906,692,828 samples, 0.39%)</title><rect x="37.7" y="1381" width="4.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="40.71" y="1391.5" ></text>
</g>
<g >
<title>arch_call_rest_init (648,198,257 samples, 0.01%)</title><rect x="13.9" y="1541" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="16.94" y="1551.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1,151,782,242 samples, 0.02%)</title><rect x="16.7" y="1541" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="19.67" y="1551.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76,965,926,013 samples, 1.07%)</title><rect x="495.0" y="1477" width="12.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="497.95" y="1487.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (15,846,871,040 samples, 0.22%)</title><rect x="1051.8" y="1413" width="2.6" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1054.80" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="277" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (995,671,573 samples, 0.01%)</title><rect x="37.5" y="1557" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="40.48" y="1567.5" ></text>
</g>
<g >
<title>__libc_fork (18,411,825,425 samples, 0.26%)</title><rect x="25.3" y="1493" width="3.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="28.29" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="901" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="911.5" ></text>
</g>
<g >
<title>__x64_sys_execve (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1557" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="21.06" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (652,530,480 samples, 0.01%)</title><rect x="1175.5" y="1397" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1178.52" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1557" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_statx (1,732,467,198 samples, 0.02%)</title><rect x="20.2" y="1445" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="23.17" y="1455.5" ></text>
</g>
<g >
<title>do_idle (5,218,358,686 samples, 0.07%)</title><rect x="1188.0" y="1493" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1191.02" y="1503.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (5,320,885,850 samples, 0.07%)</title><rect x="69.4" y="1509" width="0.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="72.44" y="1519.5" ></text>
</g>
<g >
<title>std::__condvar::notify_all (1,365,309,620 samples, 0.02%)</title><rect x="32.9" y="1525" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="35.91" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,324,047,462 samples, 0.07%)</title><rect x="29.8" y="805" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.80" y="815.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,252,326,292 samples, 0.02%)</title><rect x="22.3" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="25.32" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="693" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="703.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (1,731,831,116 samples, 0.02%)</title><rect x="32.0" y="1381" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="35.00" y="1391.5" ></text>
</g>
<g >
<title>read_tsc (687,881,794 samples, 0.01%)</title><rect x="1189.3" y="1397" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1192.30" y="1407.5" ></text>
</g>
<g >
<title>lind_recv (3,491,515,517 samples, 0.05%)</title><rect x="767.3" y="1541" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="770.34" y="1551.5" ></text>
</g>
<g >
<title>lind_recv (4,500,730,913 samples, 0.06%)</title><rect x="1160.1" y="1573" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1163.09" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,120,927,364 samples, 0.06%)</title><rect x="34.4" y="69" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="79.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (758,178,880 samples, 0.01%)</title><rect x="1189.8" y="1525" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.80" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (4,093,328,183 samples, 0.06%)</title><rect x="1106.6" y="1429" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1109.62" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="149" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="159.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1301" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.22" y="1311.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4,809,790,492 samples, 0.07%)</title><rect x="557.6" y="1413" width="0.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="560.60" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="229" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="239.5" ></text>
</g>
<g >
<title>__libc_start_main (995,671,573 samples, 0.01%)</title><rect x="37.5" y="1573" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="40.48" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,436,455,166 samples, 0.02%)</title><rect x="13.6" y="1509" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="16.60" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="373" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="869" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="879.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,532,904,257 samples, 0.02%)</title><rect x="12.4" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.36" y="1439.5" ></text>
</g>
<g >
<title>vfs_read (1,655,753,456 samples, 0.02%)</title><rect x="37.1" y="1429" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="40.08" y="1439.5" ></text>
</g>
<g >
<title>path_lookupat (1,191,477,540 samples, 0.02%)</title><rect x="20.2" y="1381" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="23.18" y="1391.5" ></text>
</g>
<g >
<title>__filemap_add_folio (1,017,975,243 samples, 0.01%)</title><rect x="44.5" y="1173" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="47.45" y="1183.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,423,048,635 samples, 0.08%)</title><rect x="1174.8" y="1429" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1177.80" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1285" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.22" y="1295.5" ></text>
</g>
<g >
<title>v8::internal::Object::GetPropertyWithAccessor (1,290,313,797 samples, 0.02%)</title><rect x="25.0" y="1493" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="27.97" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,987,290,565 samples, 0.08%)</title><rect x="29.8" y="853" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.79" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,991,940,772 samples, 0.14%)</title><rect x="29.6" y="1141" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.65" y="1151.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,901,281,196 samples, 0.10%)</title><rect x="1152.8" y="1573" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1155.85" y="1583.5" ></text>
</g>
<g >
<title>execute_command_internal (1,092,934,804 samples, 0.02%)</title><rect x="1173.2" y="1413" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1176.18" y="1423.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (1,494,707,795 samples, 0.02%)</title><rect x="19.4" y="1365" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="22.44" y="1375.5" ></text>
</g>
<g >
<title>[bash] (3,590,011,011 samples, 0.05%)</title><rect x="1172.0" y="1429" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1174.96" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="645" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="655.5" ></text>
</g>
<g >
<title>poll_idle (741,571,756 samples, 0.01%)</title><rect x="16.2" y="1477" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="19.23" y="1487.5" ></text>
</g>
<g >
<title>rest_init (749,225,328 samples, 0.01%)</title><rect x="1177.0" y="1525" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1180.05" y="1535.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1,135,148,503 samples, 0.02%)</title><rect x="44.9" y="1205" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="47.87" y="1215.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,491,081,688 samples, 0.03%)</title><rect x="1174.3" y="1557" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1177.25" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="389" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="399.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (72,549,358,701 samples, 1.01%)</title><rect x="702.1" y="1397" width="11.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="705.06" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,598,090,898 samples, 0.02%)</title><rect x="1176.7" y="1525" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1179.69" y="1535.5" ></text>
</g>
<g >
<title>NaClLog (9,559,819,007 samples, 0.13%)</title><rect x="51.8" y="1589" width="1.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="54.77" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,120,927,364 samples, 0.06%)</title><rect x="34.4" y="101" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,520,820,143 samples, 0.02%)</title><rect x="33.2" y="1525" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="36.18" y="1535.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1,168,624,395 samples, 0.02%)</title><rect x="44.9" y="1221" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="47.87" y="1231.5" ></text>
</g>
<g >
<title>NaClLog (79,383,539,742 samples, 1.10%)</title><rect x="398.1" y="1557" width="13.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="401.10" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,259,259,773 samples, 0.05%)</title><rect x="33.8" y="1541" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.77" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,333,152,898 samples, 0.13%)</title><rect x="43.6" y="1445" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="46.62" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,150,866,795 samples, 0.02%)</title><rect x="33.8" y="53" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="36.85" y="63.5" ></text>
</g>
<g >
<title>[bash] (1,086,237,238 samples, 0.02%)</title><rect x="1173.2" y="1365" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1176.18" y="1375.5" ></text>
</g>
<g >
<title>unmap_single_vma (866,637,857 samples, 0.01%)</title><rect x="23.8" y="1429" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="26.81" y="1439.5" ></text>
</g>
<g >
<title>getgrgid (848,314,333 samples, 0.01%)</title><rect x="20.0" y="1493" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="22.98" y="1503.5" ></text>
</g>
<g >
<title>perf_mmap__push (9,891,591,718 samples, 0.14%)</title><rect x="43.5" y="1525" width="1.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="46.53" y="1535.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (22,092,389,775 samples, 0.31%)</title><rect x="1163.6" y="1573" width="3.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1166.61" y="1583.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (121,413,818,628 samples, 1.69%)</title><rect x="745.2" y="1349" width="19.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="748.15" y="1359.5" ></text>
</g>
<g >
<title>statx (1,828,778,081 samples, 0.03%)</title><rect x="20.2" y="1493" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="23.17" y="1503.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (299,382,695,138 samples, 4.16%)</title><rect x="1057.6" y="1429" width="49.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1060.56" y="1439.5" >ring..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="309" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="319.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (73,903,141,687 samples, 1.03%)</title><rect x="596.5" y="1429" width="12.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="599.54" y="1439.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (90,491,656,972 samples, 1.26%)</title><rect x="914.9" y="1461" width="14.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="917.91" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1301" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,993,911,220 samples, 0.06%)</title><rect x="1188.0" y="1477" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1191.02" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_clone (18,280,759,524 samples, 0.25%)</title><rect x="25.3" y="1429" width="3.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="28.30" y="1439.5" ></text>
</g>
<g >
<title>setlocale (1,209,975,512 samples, 0.02%)</title><rect x="1173.4" y="1509" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1176.43" y="1519.5" ></text>
</g>
<g >
<title>execute_command_internal (3,617,199,031 samples, 0.05%)</title><rect x="1172.6" y="1397" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1175.59" y="1407.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (444,869,710,621 samples, 6.18%)</title><rect x="958.2" y="1445" width="72.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="961.19" y="1455.5" >&lt;lock_ap..</text>
</g>
<g >
<title>load_elf_binary (1,617,101,465 samples, 0.02%)</title><rect x="1173.7" y="1461" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1176.68" y="1471.5" ></text>
</g>
<g >
<title>arch_call_rest_init (749,225,328 samples, 0.01%)</title><rect x="1177.0" y="1541" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1180.05" y="1551.5" ></text>
</g>
<g >
<title>__cmd_record (17,447,213,641 samples, 0.24%)</title><rect x="42.4" y="1573" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="45.42" y="1583.5" ></text>
</g>
<g >
<title>__schedule (1,015,085,554 samples, 0.01%)</title><rect x="43.1" y="1397" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="46.07" y="1407.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (3,876,333,304 samples, 0.05%)</title><rect x="743.0" y="1349" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="746.03" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="469" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,209,975,512 samples, 0.02%)</title><rect x="1173.4" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.43" y="1487.5" ></text>
</g>
<g >
<title>mas_wr_modify (661,165,474 samples, 0.01%)</title><rect x="28.1" y="1301" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="31.06" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,183,650,588 samples, 0.06%)</title><rect x="29.8" y="677" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.82" y="687.5" ></text>
</g>
<g >
<title>_start (10,367,914,871 samples, 0.14%)</title><rect x="1171.9" y="1589" width="1.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1174.93" y="1599.5" ></text>
</g>
<g >
<title>vfs_read (1,205,303,058 samples, 0.02%)</title><rect x="33.2" y="1477" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="36.21" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1477" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,094,541,791 samples, 0.08%)</title><rect x="10.6" y="1445" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.57" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="485" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="405" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (77,294,998,486 samples, 1.07%)</title><rect x="518.5" y="1445" width="12.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="521.47" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (902,763,221 samples, 0.01%)</title><rect x="30.8" y="933" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="33.85" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1141" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1151.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,313,151,249 samples, 0.10%)</title><rect x="439.3" y="1525" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="442.28" y="1535.5" ></text>
</g>
<g >
<title>v8::internal::Object::GetProperty (1,290,313,797 samples, 0.02%)</title><rect x="25.0" y="1509" width="0.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="27.97" y="1519.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (8,371,628,485 samples, 0.12%)</title><rect x="411.1" y="1557" width="1.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="414.11" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,372,016,872 samples, 0.09%)</title><rect x="10.6" y="1477" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.56" y="1487.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (4,907,185,407 samples, 0.07%)</title><rect x="1050.4" y="1413" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1053.36" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_execve (27,906,692,828 samples, 0.39%)</title><rect x="37.7" y="1557" width="4.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="40.71" y="1567.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (138,823,287,557 samples, 1.93%)</title><rect x="929.7" y="1461" width="22.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="932.74" y="1471.5" >&lt;..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,900,459,084 samples, 0.03%)</title><rect x="29.9" y="405" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.88" y="415.5" ></text>
</g>
<g >
<title>dispatcher@plt (4,753,437,873 samples, 0.07%)</title><rect x="766.6" y="1509" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="769.56" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,017,332,034 samples, 0.11%)</title><rect x="33.7" y="1573" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.74" y="1583.5" ></text>
</g>
<g >
<title>__do_sys_newstat (4,320,678,210 samples, 0.06%)</title><rect x="31.8" y="1461" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="34.84" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="725" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="735.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1,617,101,465 samples, 0.02%)</title><rect x="1173.7" y="1541" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1176.68" y="1551.5" ></text>
</g>
<g >
<title>Watcher::notify (1,591,070,397 samples, 0.02%)</title><rect x="32.9" y="1557" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="35.87" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,223,160,982 samples, 0.03%)</title><rect x="1175.0" y="1397" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1178.00" y="1407.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (138,823,287,557 samples, 1.93%)</title><rect x="929.7" y="1477" width="22.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="932.74" y="1487.5" >l..</text>
</g>
<g >
<title>parse_and_execute (999,974,055 samples, 0.01%)</title><rect x="1173.0" y="1205" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1175.98" y="1215.5" ></text>
</g>
<g >
<title>try_to_wake_up (615,124,789 samples, 0.01%)</title><rect x="33.0" y="1381" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="36.02" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1381" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.22" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,063,142,081 samples, 0.01%)</title><rect x="12.0" y="1573" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="15.04" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="677" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="687.5" ></text>
</g>
<g >
<title>proc_pid_readlink (805,255,477 samples, 0.01%)</title><rect x="20.7" y="1413" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="23.69" y="1423.5" ></text>
</g>
<g >
<title>proc_readfd_common (1,277,497,680 samples, 0.02%)</title><rect x="1172.3" y="1253" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1175.27" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,414,553,939 samples, 0.03%)</title><rect x="29.9" y="453" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.87" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="437" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1109" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1429" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1439.5" ></text>
</g>
<g >
<title>ovl_permission (752,904,541 samples, 0.01%)</title><rect x="32.1" y="1349" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="35.07" y="1359.5" ></text>
</g>
<g >
<title>memcpy@plt (1,635,957,406 samples, 0.02%)</title><rect x="440.5" y="1525" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="443.48" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1061" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1071.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (5,007,514,811 samples, 0.07%)</title><rect x="54.1" y="1589" width="0.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="57.11" y="1599.5" ></text>
</g>
<g >
<title>NaClSysSend (2,010,191,764,261 samples, 27.91%)</title><rect x="786.6" y="1541" width="329.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="789.65" y="1551.5" >NaClSysSend</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (658,841,370 samples, 0.01%)</title><rect x="15.8" y="1477" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="18.77" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (643,823,459 samples, 0.01%)</title><rect x="17.6" y="1525" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="20.63" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (74,116,822,143 samples, 1.03%)</title><rect x="725.5" y="1349" width="12.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="728.47" y="1359.5" ></text>
</g>
<g >
<title>NaClSysSend (4,141,177,280 samples, 0.06%)</title><rect x="1147.6" y="1573" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1150.57" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,914,864,242 samples, 0.19%)</title><rect x="29.5" y="1477" width="2.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.46" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="325" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="335.5" ></text>
</g>
<g >
<title>menu_select (969,803,468 samples, 0.01%)</title><rect x="1187.0" y="1493" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1190.05" y="1503.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (43,416,618,074 samples, 0.60%)</title><rect x="544.8" y="1429" width="7.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="547.83" y="1439.5" ></text>
</g>
<g >
<title>[[heap]] (8,540,886,960 samples, 0.12%)</title><rect x="56.3" y="1589" width="1.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="59.26" y="1599.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (961,771,863 samples, 0.01%)</title><rect x="1188.1" y="1413" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1191.07" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1493" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,889,464,231 samples, 0.03%)</title><rect x="1173.7" y="1573" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1176.68" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (41,929,833,317 samples, 0.58%)</title><rect x="28.9" y="1589" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="31.92" y="1599.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (1,362,823,064 samples, 0.02%)</title><rect x="32.9" y="1509" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="35.91" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="517" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="527.5" ></text>
</g>
<g >
<title>[anon] (2,439,690,013 samples, 0.03%)</title><rect x="24.1" y="1589" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="27.09" y="1599.5" ></text>
</g>
<g >
<title>mmput (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1413" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="21.06" y="1423.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Debounce::Debounce (1,036,923,489 samples, 0.01%)</title><rect x="36.6" y="1541" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="39.57" y="1551.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (69,493,569,876 samples, 0.96%)</title><rect x="1045.2" y="1461" width="11.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1048.18" y="1471.5" ></text>
</g>
<g >
<title>arch_call_rest_init (5,310,425,588 samples, 0.07%)</title><rect x="1188.0" y="1541" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1191.00" y="1551.5" ></text>
</g>
<g >
<title>setlocale (1,905,203,984 samples, 0.03%)</title><rect x="12.3" y="1525" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="15.35" y="1535.5" ></text>
</g>
<g >
<title>record__write (9,490,813,698 samples, 0.13%)</title><rect x="43.6" y="1493" width="1.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="46.60" y="1503.5" ></text>
</g>
<g >
<title>do_idle (1,144,163,800 samples, 0.02%)</title><rect x="16.7" y="1493" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="19.68" y="1503.5" ></text>
</g>
<g >
<title>execute_command_internal (1,028,321,288 samples, 0.01%)</title><rect x="1172.6" y="1301" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1175.59" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="853" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="863.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (3,322,444,930 samples, 0.05%)</title><rect x="1138.5" y="1573" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1141.49" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,236,727,558 samples, 0.09%)</title><rect x="1174.7" y="1461" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1177.74" y="1471.5" ></text>
</g>
<g >
<title>search_binary_handler (1,617,101,465 samples, 0.02%)</title><rect x="1173.7" y="1477" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1176.68" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,261,247,406 samples, 0.16%)</title><rect x="29.6" y="1285" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.63" y="1295.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (36,298,245,050 samples, 0.50%)</title><rect x="1109.4" y="1445" width="5.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1112.38" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (489,947,508,698 samples, 6.80%)</title><rect x="621.8" y="1349" width="80.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="624.78" y="1359.5" >core::syn..</text>
</g>
<g >
<title>core::sync::atomic::atomic_store (4,858,418,326 samples, 0.07%)</title><rect x="743.7" y="1333" width="0.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="746.66" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,633,012,044 samples, 0.13%)</title><rect x="21.0" y="1429" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="24.05" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.22" y="1439.5" ></text>
</g>
<g >
<title>malloc (765,180,436 samples, 0.01%)</title><rect x="34.0" y="53" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="37.03" y="63.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (4,243,464,431 samples, 0.06%)</title><rect x="744.5" y="1333" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="747.46" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1221" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1231.5" ></text>
</g>
<g >
<title>_raw_spin_lock (714,745,092 samples, 0.01%)</title><rect x="38.5" y="1301" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="41.54" y="1311.5" ></text>
</g>
<g >
<title>execute_command_internal (3,524,814,144 samples, 0.05%)</title><rect x="1172.6" y="1349" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1175.59" y="1359.5" ></text>
</g>
<g >
<title>futex_wake (1,071,623,275 samples, 0.01%)</title><rect x="32.9" y="1413" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="35.94" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="245" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="255.5" ></text>
</g>
<g >
<title>do_epoll_wait (778,930,513 samples, 0.01%)</title><rect x="35.3" y="1493" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="38.25" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="549" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,908,877,902 samples, 0.17%)</title><rect x="20.9" y="1445" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.89" y="1455.5" ></text>
</g>
<g >
<title>grep (3,959,918,142 samples, 0.05%)</title><rect x="12.2" y="1605" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="15.22" y="1615.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1,584,387,166 samples, 0.02%)</title><rect x="18.6" y="1509" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="21.56" y="1519.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (46,580,219,586 samples, 0.65%)</title><rect x="507.6" y="1445" width="7.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="510.57" y="1455.5" ></text>
</g>
<g >
<title>_start (995,671,573 samples, 0.01%)</title><rect x="37.5" y="1589" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="40.48" y="1599.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (8,801,339,818 samples, 0.12%)</title><rect x="1148.6" y="1573" width="1.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1151.57" y="1583.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (70,562,299,466 samples, 0.98%)</title><rect x="773.6" y="1541" width="11.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="776.56" y="1551.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (5,519,511,935 samples, 0.08%)</title><rect x="620.1" y="1381" width="0.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="623.14" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,841,122,518 samples, 0.04%)</title><rect x="18.4" y="1573" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.43" y="1583.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt; (76,284,519,827 samples, 1.06%)</title><rect x="902.4" y="1477" width="12.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="905.41" y="1487.5" ></text>
</g>
<g >
<title>__do_sys_clone (1,009,865,395 samples, 0.01%)</title><rect x="1172.8" y="1109" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1175.79" y="1119.5" ></text>
</g>
<g >
<title>[bash] (1,092,934,804 samples, 0.02%)</title><rect x="1173.2" y="1397" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1176.18" y="1407.5" ></text>
</g>
<g >
<title>copy_process (975,432,793 samples, 0.01%)</title><rect x="1172.8" y="1077" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1175.79" y="1087.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1541" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="21.06" y="1551.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,080,192,294 samples, 0.04%)</title><rect x="1189.3" y="1525" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.30" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (72,550,530,922 samples, 1.01%)</title><rect x="890.5" y="1445" width="11.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="893.53" y="1455.5" ></text>
</g>
<g >
<title>HandleStackContext (4,501,385,863 samples, 0.06%)</title><rect x="49.3" y="1589" width="0.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="52.26" y="1599.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1,335,457,499 samples, 0.02%)</title><rect x="49.0" y="1573" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="51.97" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,989,172,898 samples, 0.06%)</title><rect x="21.4" y="1397" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="24.36" y="1407.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (4,907,185,407 samples, 0.07%)</title><rect x="1050.4" y="1397" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1053.36" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="741" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="751.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (21,613,323,884 samples, 0.30%)</title><rect x="1185.3" y="1589" width="3.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1188.33" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="709" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="719.5" ></text>
</g>
<g >
<title>NaClSysRecvDecoder (2,097,329,271 samples, 0.03%)</title><rect x="1147.2" y="1573" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1150.22" y="1583.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common (1,518,632,806,892 samples, 21.09%)</title><rect x="517.7" y="1461" width="248.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="520.73" y="1471.5" >rustposix::safeposix::syscalls::n..</text>
</g>
<g >
<title>NaClGetThreadCtxSp (10,583,019,958 samples, 0.15%)</title><rect x="57.7" y="1573" width="1.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="60.66" y="1583.5" ></text>
</g>
<g >
<title>[librustposix.so] (9,663,372,558 samples, 0.13%)</title><rect x="68.7" y="1589" width="1.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="71.73" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1221" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1231.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (34,455,697,819 samples, 0.48%)</title><rect x="552.0" y="1429" width="5.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="554.95" y="1439.5" ></text>
</g>
<g >
<title>ep_poll (610,798,430 samples, 0.01%)</title><rect x="35.3" y="1477" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="38.28" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1237" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1247.5" ></text>
</g>
<g >
<title>ion (728,475,363 samples, 0.01%)</title><rect x="45.2" y="1509" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="48.16" y="1519.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (8,799,048,020 samples, 0.12%)</title><rect x="60.7" y="1573" width="1.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="63.71" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="517" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="293" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="303.5" ></text>
</g>
<g >
<title>execute_command (3,622,842,508 samples, 0.05%)</title><rect x="1172.6" y="1413" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1175.59" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,561,724,056 samples, 0.09%)</title><rect x="29.8" y="933" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.77" y="943.5" ></text>
</g>
<g >
<title>do_idle (2,190,322,077 samples, 0.03%)</title><rect x="1176.7" y="1541" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1179.69" y="1551.5" ></text>
</g>
<g >
<title>dup_mmap (18,222,754,566 samples, 0.25%)</title><rect x="25.3" y="1349" width="3.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="28.30" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,030,749,347 samples, 0.14%)</title><rect x="29.6" y="1173" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.64" y="1183.5" ></text>
</g>
<g >
<title>write (728,475,363 samples, 0.01%)</title><rect x="45.2" y="1493" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="48.16" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1509" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1519.5" ></text>
</g>
<g >
<title>[grep] (2,624,732,028 samples, 0.04%)</title><rect x="12.2" y="1541" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.23" y="1551.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,363,239,889 samples, 0.02%)</title><rect x="1176.7" y="1509" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1179.70" y="1519.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (74,291,100,822 samples, 1.03%)</title><rect x="841.7" y="1461" width="12.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="844.74" y="1471.5" ></text>
</g>
<g >
<title>[bash] (1,086,237,238 samples, 0.02%)</title><rect x="1173.2" y="1333" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1176.18" y="1343.5" ></text>
</g>
<g >
<title>pagecache_get_page (1,973,344,856 samples, 0.03%)</title><rect x="44.4" y="1221" width="0.4" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="47.43" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,991,762,699 samples, 0.04%)</title><rect x="33.8" y="133" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="143.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2,345,281,358 samples, 0.03%)</title><rect x="36.0" y="1397" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="39.03" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,718,761,319 samples, 0.15%)</title><rect x="29.6" y="1253" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.63" y="1263.5" ></text>
</g>
<g >
<title>cpuidle_enter (3,482,243,982 samples, 0.05%)</title><rect x="1188.0" y="1461" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1191.03" y="1471.5" ></text>
</g>
<g >
<title>mmput (2,314,009,182 samples, 0.03%)</title><rect x="23.6" y="1493" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="26.57" y="1503.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (1,439,090,524 samples, 0.02%)</title><rect x="32.9" y="1541" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="35.90" y="1551.5" ></text>
</g>
<g >
<title>dispatcher (37,328,168,977 samples, 0.52%)</title><rect x="1154.0" y="1573" width="6.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1156.98" y="1583.5" ></text>
</g>
<g >
<title>start_secondary (3,903,262,760 samples, 0.05%)</title><rect x="48.3" y="1573" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="51.33" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,642,860,654 samples, 0.18%)</title><rect x="20.9" y="1477" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.87" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,415,452,828 samples, 0.13%)</title><rect x="29.6" y="1125" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.65" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,435,682,650 samples, 0.03%)</title><rect x="29.9" y="469" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.87" y="479.5" ></text>
</g>
<g >
<title>v8::internal::Accessors::FunctionArgumentsGetter (802,130,203 samples, 0.01%)</title><rect x="25.0" y="1477" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="27.98" y="1487.5" ></text>
</g>
<g >
<title>__clone (10,262,847,532 samples, 0.14%)</title><rect x="35.8" y="1589" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="38.79" y="1599.5" ></text>
</g>
<g >
<title>command_substitute (2,449,626,811 samples, 0.03%)</title><rect x="1172.8" y="1221" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1175.76" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="165" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="175.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1,875,714,461 samples, 0.03%)</title><rect x="41.7" y="1253" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="44.66" y="1263.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (76,068,683,399 samples, 1.06%)</title><rect x="584.1" y="1413" width="12.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="587.08" y="1423.5" ></text>
</g>
<g >
<title>ret_from_fork (818,505,845 samples, 0.01%)</title><rect x="1185.2" y="1589" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1188.20" y="1599.5" ></text>
</g>
<g >
<title>HandleStackContext (345,622,519,727 samples, 4.80%)</title><rect x="258.0" y="1557" width="56.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="261.04" y="1567.5" >Handl..</text>
</g>
<g >
<title>kworker/u48:1 (1,717,102,363 samples, 0.02%)</title><rect x="17.8" y="1605" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="20.78" y="1615.5" ></text>
</g>
<g >
<title>__poll (4,603,212,842 samples, 0.06%)</title><rect x="35.8" y="1509" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="38.82" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,584,387,166 samples, 0.02%)</title><rect x="18.6" y="1493" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.56" y="1503.5" ></text>
</g>
<g >
<title>start_secondary (2,117,607,224 samples, 0.03%)</title><rect x="13.6" y="1573" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="16.59" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="837" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,664,971,023 samples, 0.05%)</title><rect x="29.8" y="613" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.83" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,119,665,456 samples, 0.04%)</title><rect x="29.8" y="533" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.85" y="543.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,570,298,734 samples, 0.04%)</title><rect x="48.3" y="1493" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="51.34" y="1503.5" ></text>
</g>
<g >
<title>do_futex (1,196,366,947 samples, 0.02%)</title><rect x="32.9" y="1429" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="35.93" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,993,133,750 samples, 0.17%)</title><rect x="29.6" y="1333" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.62" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1221" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.22" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1461" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,504,428,163 samples, 0.10%)</title><rect x="1174.7" y="1557" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1177.69" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,748,439,320 samples, 0.02%)</title><rect x="12.3" y="1477" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.35" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="565" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,035,794,707 samples, 0.18%)</title><rect x="29.6" y="1397" width="2.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.59" y="1407.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (2,360,214,104 samples, 0.03%)</title><rect x="36.0" y="1413" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="39.02" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (439,962,939,165 samples, 6.11%)</title><rect x="959.0" y="1397" width="72.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="962.00" y="1407.5" >core::sy..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="485" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1381" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="629" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="639.5" ></text>
</g>
<g >
<title>rest_init (648,198,257 samples, 0.01%)</title><rect x="13.9" y="1525" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="16.94" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,928,195,956 samples, 0.03%)</title><rect x="29.9" y="421" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.88" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,117,408,555 samples, 0.02%)</title><rect x="18.6" y="1429" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="21.63" y="1439.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (6,971,983,149 samples, 0.10%)</title><rect x="15.7" y="1589" width="1.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="18.72" y="1599.5" ></text>
</g>
<g >
<title>NaClSysSendDecoder (2,124,518,798,008 samples, 29.50%)</title><rect x="768.7" y="1557" width="348.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="771.65" y="1567.5" >NaClSysSendDecoder</text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (3,933,889,679 samples, 0.05%)</title><rect x="54.9" y="1589" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="57.93" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,280,759,524 samples, 0.25%)</title><rect x="25.3" y="1445" width="3.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="28.30" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,258,350,835 samples, 0.02%)</title><rect x="32.9" y="1461" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="35.92" y="1471.5" ></text>
</g>
<g >
<title>anon_vma_fork (1,548,012,493 samples, 0.02%)</title><rect x="25.4" y="1333" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="28.35" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="485" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="495.5" ></text>
</g>
<g >
<title>do_idle (3,870,799,005 samples, 0.05%)</title><rect x="48.3" y="1541" width="0.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="51.33" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="501" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1061" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="1071.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1333" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.22" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="773" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="783.5" ></text>
</g>
<g >
<title>cpu_startup_entry (5,307,520,506 samples, 0.07%)</title><rect x="1188.0" y="1509" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1191.00" y="1519.5" ></text>
</g>
<g >
<title>send_to_group (1,330,989,143 samples, 0.02%)</title><rect x="43.7" y="1333" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="46.72" y="1343.5" ></text>
</g>
<g >
<title>all (7,201,569,687,195 samples, 100%)</title><rect x="10.0" y="1621" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" ></text>
</g>
<g >
<title>__tsearch (814,446,593 samples, 0.01%)</title><rect x="11.3" y="1413" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="14.35" y="1423.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (11,747,677,092 samples, 0.16%)</title><rect x="1161.7" y="1573" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1164.69" y="1583.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,554,408,799 samples, 0.02%)</title><rect x="1189.5" y="1477" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.51" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1365" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.22" y="1375.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (3,629,305,498 samples, 0.05%)</title><rect x="1166.6" y="1557" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1169.64" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="837" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="847.5" ></text>
</g>
<g >
<title>kworker/u48:0 (5,568,056,743 samples, 0.08%)</title><rect x="16.9" y="1605" width="0.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="19.86" y="1615.5" ></text>
</g>
<g >
<title>NaClSysRecv (1,982,879,631,118 samples, 27.53%)</title><rect x="442.4" y="1541" width="324.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="445.44" y="1551.5" >NaClSysRecv</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,098,064,394 samples, 0.02%)</title><rect x="1174.4" y="1493" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1177.41" y="1503.5" ></text>
</g>
<g >
<title>NaClMaskRestore (29,443,126,217 samples, 0.41%)</title><rect x="418.1" y="1541" width="4.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="421.09" y="1551.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,616,839,990 samples, 0.04%)</title><rect x="48.3" y="1509" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="51.34" y="1519.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (71,261,115,654 samples, 0.99%)</title><rect x="584.9" y="1381" width="11.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="587.87" y="1391.5" ></text>
</g>
<g >
<title>record__mmap_read_all (10,837,928,136 samples, 0.15%)</title><rect x="43.5" y="1557" width="1.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="46.50" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="277" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,081,361,700 samples, 0.07%)</title><rect x="21.2" y="1413" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="24.18" y="1423.5" ></text>
</g>
<g >
<title>rest_init (1,335,457,499 samples, 0.02%)</title><rect x="49.0" y="1525" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="51.97" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (69,945,738,377 samples, 0.97%)</title><rect x="878.4" y="1429" width="11.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="881.39" y="1439.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (1,290,721,568 samples, 0.02%)</title><rect x="1187.4" y="1493" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1190.39" y="1503.5" ></text>
</g>
<g >
<title>proc_fill_cache (949,629,646 samples, 0.01%)</title><rect x="1172.3" y="1237" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1175.30" y="1247.5" ></text>
</g>
<g >
<title>__libc_start_main (7,504,994,801 samples, 0.10%)</title><rect x="1174.7" y="1573" width="1.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1177.69" y="1583.5" ></text>
</g>
<g >
<title>CompareAndSwap (14,366,260,025 samples, 0.20%)</title><rect x="1133.8" y="1573" width="2.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1136.82" y="1583.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (3,629,305,498 samples, 0.05%)</title><rect x="1166.6" y="1525" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1169.64" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,367,914,871 samples, 0.14%)</title><rect x="1171.9" y="1557" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1174.93" y="1567.5" ></text>
</g>
<g >
<title>[bash] (2,474,732,379 samples, 0.03%)</title><rect x="1172.8" y="1269" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1175.76" y="1279.5" ></text>
</g>
<g >
<title>NaClLog (35,960,246,389 samples, 0.50%)</title><rect x="453.5" y="1525" width="5.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="456.48" y="1535.5" ></text>
</g>
<g >
<title>load_elf_binary (27,906,692,828 samples, 0.39%)</title><rect x="37.7" y="1461" width="4.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="40.71" y="1471.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (76,284,519,827 samples, 1.06%)</title><rect x="902.4" y="1445" width="12.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="905.41" y="1455.5" ></text>
</g>
<g >
<title>NaClSysRecv (4,094,261,924 samples, 0.06%)</title><rect x="422.9" y="1557" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="425.91" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="885" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1317" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1349" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="389" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="399.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1205" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.22" y="1215.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (749,225,328 samples, 0.01%)</title><rect x="1177.0" y="1573" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1180.05" y="1583.5" ></text>
</g>
<g >
<title>v8::platform::DefaultJobWorker::Run (1,167,356,129 samples, 0.02%)</title><rect x="36.8" y="1541" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="39.83" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1157" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1167.5" ></text>
</g>
<g >
<title>v8::internal::ConcurrentMarking::JobTask::Run (817,646,371 samples, 0.01%)</title><rect x="36.8" y="1525" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="39.83" y="1535.5" ></text>
</g>
<g >
<title>poll_freewait (704,245,966 samples, 0.01%)</title><rect x="43.3" y="1461" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="46.33" y="1471.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (3,015,731,711 samples, 0.04%)</title><rect x="35.9" y="1429" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="38.92" y="1439.5" ></text>
</g>
<g >
<title>__xstat64 (4,585,738,915 samples, 0.06%)</title><rect x="31.8" y="1525" width="0.8" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="34.81" y="1535.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (4,350,081,302 samples, 0.06%)</title><rect x="1049.7" y="1397" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1052.65" y="1407.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (3,527,502,450 samples, 0.05%)</title><rect x="764.5" y="1333" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="767.47" y="1343.5" ></text>
</g>
<g >
<title>_Fork (18,292,180,614 samples, 0.25%)</title><rect x="25.3" y="1477" width="3.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="28.30" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="757" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,325,436,001 samples, 0.13%)</title><rect x="29.7" y="1077" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.66" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="261" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="271.5" ></text>
</g>
<g >
<title>[ls] (955,965,729 samples, 0.01%)</title><rect x="23.2" y="1557" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="26.19" y="1567.5" ></text>
</g>
<g >
<title>ksys_read (1,326,932,926 samples, 0.02%)</title><rect x="33.2" y="1493" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="36.19" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,069,546,948 samples, 0.11%)</title><rect x="29.7" y="997" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.67" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="661" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="671.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,078,587,246 samples, 0.01%)</title><rect x="1171.6" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1174.65" y="1535.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectDefineProperties (804,082,255 samples, 0.01%)</title><rect x="24.8" y="1557" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="27.77" y="1567.5" ></text>
</g>
<g >
<title>[ls] (865,033,313 samples, 0.01%)</title><rect x="23.2" y="1541" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="26.19" y="1551.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner_tcp (4,653,560,893 samples, 0.06%)</title><rect x="65.7" y="1557" width="0.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="68.75" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="693" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,495,718,891 samples, 0.09%)</title><rect x="29.8" y="901" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.78" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="709" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="181" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="885" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1397" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1407.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79,194,459,118 samples, 1.10%)</title><rect x="840.9" y="1477" width="13.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="843.93" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="981" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="991.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (1,321,323,903 samples, 0.02%)</title><rect x="25.0" y="1525" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="27.97" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (42,442,202,982 samples, 0.59%)</title><rect x="853.9" y="1445" width="7.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="856.94" y="1455.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (863,918,543 samples, 0.01%)</title><rect x="17.6" y="1589" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="20.63" y="1599.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (1,363,169,202 samples, 0.02%)</title><rect x="25.0" y="1541" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="27.97" y="1551.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (489,947,508,698 samples, 6.80%)</title><rect x="621.8" y="1333" width="80.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="624.78" y="1343.5" >core::syn..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1029" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1039.5" ></text>
</g>
<g >
<title>[libc.so.6] (804,967,193 samples, 0.01%)</title><rect x="36.6" y="1509" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="39.59" y="1519.5" ></text>
</g>
<g >
<title>__schedule (1,425,916,651 samples, 0.02%)</title><rect x="1187.6" y="1509" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1190.61" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="581" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="591.5" ></text>
</g>
<g >
<title>rest_init (1,151,782,242 samples, 0.02%)</title><rect x="16.7" y="1525" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="19.67" y="1535.5" ></text>
</g>
<g >
<title>unmap_page_range (23,307,977,506 samples, 0.32%)</title><rect x="38.5" y="1333" width="3.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="41.47" y="1343.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (444,869,710,621 samples, 6.18%)</title><rect x="958.2" y="1461" width="72.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="961.19" y="1471.5" >core::pt..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,000,172,711 samples, 0.01%)</title><rect x="19.2" y="1285" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.18" y="1295.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,614,497,523 samples, 0.02%)</title><rect x="11.7" y="1541" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.69" y="1551.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::cagetable_getref (47,450,461,036 samples, 0.66%)</title><rect x="853.9" y="1493" width="7.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="856.91" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="357" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="367.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (954,100,653,059 samples, 13.25%)</title><rect x="952.5" y="1477" width="156.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="955.49" y="1487.5" >rustposix::interface..</text>
</g>
<g >
<title>bprm_execve.part.0 (27,906,692,828 samples, 0.39%)</title><rect x="37.7" y="1509" width="4.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="40.71" y="1519.5" ></text>
</g>
<g >
<title>[perf-1296765.map] (840,582,699,070 samples, 11.67%)</title><rect x="70.3" y="1589" width="137.7" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="73.31" y="1599.5" >[perf-1296765.map]</text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (5,677,721,877 samples, 0.08%)</title><rect x="1137.6" y="1573" width="0.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1140.56" y="1583.5" ></text>
</g>
<g >
<title>lind_send (5,211,615,635 samples, 0.07%)</title><rect x="1160.8" y="1573" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1163.83" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (893,519,108 samples, 0.01%)</title><rect x="18.2" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.21" y="1583.5" ></text>
</g>
<g >
<title>exec_binprm (27,906,692,828 samples, 0.39%)</title><rect x="37.7" y="1493" width="4.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="40.71" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,970,145,614 samples, 0.04%)</title><rect x="10.7" y="1397" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.73" y="1407.5" ></text>
</g>
<g >
<title>vfs_statx (1,492,765,370 samples, 0.02%)</title><rect x="20.2" y="1413" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="23.18" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,429,392,952 samples, 0.02%)</title><rect x="29.9" y="357" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.89" y="367.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (995,671,573 samples, 0.01%)</title><rect x="37.5" y="1509" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="40.48" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1029" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,604,103,542 samples, 0.12%)</title><rect x="29.7" y="1029" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.67" y="1039.5" ></text>
</g>
<g >
<title>__libc_start_main (10,367,914,871 samples, 0.14%)</title><rect x="1171.9" y="1573" width="1.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1174.93" y="1583.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (930,584,481 samples, 0.01%)</title><rect x="1184.6" y="1589" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1187.55" y="1599.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,389,863,638 samples, 0.02%)</title><rect x="13.6" y="1493" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="16.60" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="661" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="949" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="959.5" ></text>
</g>
<g >
<title>uv_spawn (18,517,113,819 samples, 0.26%)</title><rect x="25.3" y="1541" width="3.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="28.29" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="261" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1,009,865,395 samples, 0.01%)</title><rect x="1172.8" y="1125" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1175.79" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1157" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1167.5" ></text>
</g>
<g >
<title>alloc_pages (754,151,985 samples, 0.01%)</title><rect x="25.7" y="1269" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="28.73" y="1279.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (67,846,678,846 samples, 0.94%)</title><rect x="702.8" y="1365" width="11.1" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="705.83" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,901,815,124 samples, 0.05%)</title><rect x="34.4" y="53" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="37.40" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,397,716,937 samples, 0.13%)</title><rect x="29.7" y="1109" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.65" y="1119.5" ></text>
</g>
<g >
<title>[perf-1156129.map] (25,516,375,222 samples, 0.35%)</title><rect x="24.5" y="1589" width="4.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="27.50" y="1599.5" ></text>
</g>
<g >
<title>getgrgid_r (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1509" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="26.22" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,137,789,998 samples, 0.04%)</title><rect x="29.8" y="549" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.84" y="559.5" ></text>
</g>
<g >
<title>zap_pte_range (21,737,447,861 samples, 0.30%)</title><rect x="38.7" y="1301" width="3.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="41.72" y="1311.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (4,334,130,595 samples, 0.06%)</title><rect x="31.8" y="1477" width="0.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="34.84" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="373" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,991,762,699 samples, 0.04%)</title><rect x="33.8" y="117" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="325" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="335.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (4,300,744,354 samples, 0.06%)</title><rect x="1189.3" y="1589" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1192.30" y="1599.5" ></text>
</g>
<g >
<title>alloc_pages (824,776,852 samples, 0.01%)</title><rect x="26.2" y="1237" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="29.16" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="341" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="949" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="959.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (3,630,406,770 samples, 0.05%)</title><rect x="1137.0" y="1573" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1139.96" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_read (1,663,664,681 samples, 0.02%)</title><rect x="37.1" y="1461" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="40.08" y="1471.5" ></text>
</g>
<g >
<title>vfs_read (860,505,337 samples, 0.01%)</title><rect x="48.1" y="1525" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="51.09" y="1535.5" ></text>
</g>
<g >
<title>__alloc_pages (729,647,616 samples, 0.01%)</title><rect x="25.7" y="1253" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="28.73" y="1263.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1,100,215,614 samples, 0.02%)</title><rect x="43.1" y="1445" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="46.06" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (685,602,515 samples, 0.01%)</title><rect x="45.2" y="1461" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="48.16" y="1471.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (1,722,166,627 samples, 0.02%)</title><rect x="36.7" y="1557" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="39.74" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (787,174,003 samples, 0.01%)</title><rect x="35.3" y="1509" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="38.25" y="1519.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (72,549,358,701 samples, 1.01%)</title><rect x="702.1" y="1381" width="11.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="705.06" y="1391.5" ></text>
</g>
<g >
<title>main (10,367,914,871 samples, 0.14%)</title><rect x="1171.9" y="1541" width="1.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1174.93" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,346,331,580 samples, 0.19%)</title><rect x="20.9" y="1493" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.87" y="1503.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (7,870,672,175 samples, 0.11%)</title><rect x="219.1" y="1573" width="1.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="222.06" y="1583.5" ></text>
</g>
<g >
<title>exit_mmap (2,314,009,182 samples, 0.03%)</title><rect x="23.6" y="1461" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="26.57" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="229" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="239.5" ></text>
</g>
<g >
<title>exec_mmap (27,906,692,828 samples, 0.39%)</title><rect x="37.7" y="1429" width="4.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="40.71" y="1439.5" ></text>
</g>
<g >
<title>v8::internal::ScavengeJob::Task::RunInternal (783,561,710 samples, 0.01%)</title><rect x="35.5" y="1493" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="38.46" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="725" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="735.5" ></text>
</g>
<g >
<title>filemap_add_folio (1,151,650,415 samples, 0.02%)</title><rect x="44.5" y="1189" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="47.45" y="1199.5" ></text>
</g>
<g >
<title>__x64_sys_poll (5,843,603,684 samples, 0.08%)</title><rect x="42.5" y="1493" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="45.49" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,650,176,167 samples, 0.12%)</title><rect x="29.7" y="1061" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.66" y="1071.5" ></text>
</g>
<g >
<title>exec_mmap (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1429" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="21.06" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1269" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="1279.5" ></text>
</g>
<g >
<title>execute_command_internal (949,249,788 samples, 0.01%)</title><rect x="1173.0" y="1189" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1175.98" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1285" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="709" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="933" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (841,261,503 samples, 0.01%)</title><rect x="29.9" y="261" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.90" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (76,284,519,827 samples, 1.06%)</title><rect x="902.4" y="1413" width="12.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="905.41" y="1423.5" ></text>
</g>
<g >
<title>cpu_startup_entry (16,293,327,483 samples, 0.23%)</title><rect x="1185.3" y="1557" width="2.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1188.33" y="1567.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (835,238,692 samples, 0.01%)</title><rect x="1176.7" y="1477" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1179.73" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,039,250,301 samples, 0.01%)</title><rect x="1173.4" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.43" y="1471.5" ></text>
</g>
<g >
<title>v8::internal::Heap::CollectGarbage (783,561,710 samples, 0.01%)</title><rect x="35.5" y="1477" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="38.46" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,140,275,884 samples, 0.09%)</title><rect x="1174.7" y="1445" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1177.74" y="1455.5" ></text>
</g>
<g >
<title>bprm_execve (27,906,692,828 samples, 0.39%)</title><rect x="37.7" y="1525" width="4.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="40.71" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (897,796,284 samples, 0.01%)</title><rect x="31.6" y="1381" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="34.58" y="1391.5" ></text>
</g>
<g >
<title>set_default_locale (1,209,975,512 samples, 0.02%)</title><rect x="1173.4" y="1525" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1176.43" y="1535.5" ></text>
</g>
<g >
<title>__pollwait (862,841,652 samples, 0.01%)</title><rect x="42.9" y="1429" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="45.86" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,420,495,652 samples, 0.02%)</title><rect x="19.2" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.18" y="1407.5" ></text>
</g>
<g >
<title>node::PerIsolatePlatformData::FlushForegroundTasksInternal (1,088,432,766 samples, 0.02%)</title><rect x="35.4" y="1541" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="38.42" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_poll (3,708,356,435 samples, 0.05%)</title><rect x="35.9" y="1461" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="38.86" y="1471.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (2,003,456,741 samples, 0.03%)</title><rect x="44.4" y="1237" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="47.43" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (749,779,530 samples, 0.01%)</title><rect x="1174.5" y="1413" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1177.46" y="1423.5" ></text>
</g>
<g >
<title>[grep] (702,455,471 samples, 0.01%)</title><rect x="12.2" y="1525" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.23" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (72,363,402,490 samples, 1.00%)</title><rect x="572.2" y="1381" width="11.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="575.22" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="533" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (77,171,501,777 samples, 1.07%)</title><rect x="571.4" y="1413" width="12.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="574.43" y="1423.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (949,459,110 samples, 0.01%)</title><rect x="1172.8" y="1061" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1175.80" y="1071.5" ></text>
</g>
<g >
<title>[ls] (25,474,257,321 samples, 0.35%)</title><rect x="18.9" y="1589" width="4.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.90" y="1599.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (66,856,811,785 samples, 0.93%)</title><rect x="560.5" y="1429" width="10.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="563.48" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1333" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="1343.5" ></text>
</g>
<g >
<title>path_lookupat (2,258,065,523 samples, 0.03%)</title><rect x="32.0" y="1397" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="34.98" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1397" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1407.5" ></text>
</g>
<g >
<title>[bash] (8,752,909,771 samples, 0.12%)</title><rect x="1171.9" y="1525" width="1.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1174.93" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (869,263,871 samples, 0.01%)</title><rect x="29.9" y="277" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.90" y="287.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1509" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="21.06" y="1519.5" ></text>
</g>
<g >
<title>core::cmp::min (5,519,511,935 samples, 0.08%)</title><rect x="620.1" y="1397" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="623.14" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,514,182,444 samples, 0.03%)</title><rect x="1174.3" y="1589" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1177.25" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,801,412,204 samples, 0.09%)</title><rect x="62.1" y="1573" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="65.15" y="1583.5" ></text>
</g>
<g >
<title>NaClLog (9,305,494,111 samples, 0.13%)</title><rect x="785.1" y="1541" width="1.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="788.12" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="981" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,340,254,096 samples, 0.13%)</title><rect x="29.7" y="1093" width="1.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.66" y="1103.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,846,762,623 samples, 0.04%)</title><rect x="18.4" y="1589" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.43" y="1599.5" ></text>
</g>
<g >
<title>shell_glob_filename (2,654,910,495 samples, 0.04%)</title><rect x="1172.1" y="1413" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1175.11" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1237" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="1247.5" ></text>
</g>
<g >
<title>[bash] (3,928,268,379 samples, 0.05%)</title><rect x="1171.9" y="1461" width="0.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1174.94" y="1471.5" ></text>
</g>
<g >
<title>read (1,664,948,400 samples, 0.02%)</title><rect x="37.1" y="1509" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="40.08" y="1519.5" ></text>
</g>
<g >
<title>uv__fs_work (2,102,997,507 samples, 0.03%)</title><rect x="37.0" y="1541" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="40.04" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,298,747,897 samples, 0.17%)</title><rect x="20.9" y="1461" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.89" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,120,927,364 samples, 0.06%)</title><rect x="34.4" y="85" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (27,906,692,828 samples, 0.39%)</title><rect x="37.7" y="1573" width="4.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="40.71" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="613" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1077" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1087.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,584,387,166 samples, 0.02%)</title><rect x="18.6" y="1461" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.56" y="1471.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (67,846,678,846 samples, 0.94%)</title><rect x="702.8" y="1349" width="11.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="705.83" y="1359.5" ></text>
</g>
<g >
<title>inotify_handle_inode_event (1,058,559,389 samples, 0.01%)</title><rect x="43.8" y="1301" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="46.76" y="1311.5" ></text>
</g>
<g >
<title>getgrgid_r (4,576,389,167 samples, 0.06%)</title><rect x="19.1" y="1461" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="22.14" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="613" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="623.5" ></text>
</g>
<g >
<title>unmap_vmas (23,532,728,497 samples, 0.33%)</title><rect x="38.4" y="1365" width="3.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="41.43" y="1375.5" ></text>
</g>
<g >
<title>NaClLog (16,365,815,904 samples, 0.23%)</title><rect x="214.9" y="1573" width="2.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="217.87" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (943,431,871 samples, 0.01%)</title><rect x="1173.4" y="1445" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.43" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1381" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,859,749,852 samples, 0.03%)</title><rect x="29.9" y="373" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.89" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,262,847,532 samples, 0.14%)</title><rect x="35.8" y="1573" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="38.79" y="1583.5" ></text>
</g>
<g >
<title>unlink_file_vma (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1349" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="21.06" y="1359.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (63,695,156,369 samples, 0.88%)</title><rect x="412.5" y="1557" width="10.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="415.48" y="1567.5" ></text>
</g>
<g >
<title>__nss_next2 (1,642,225,098 samples, 0.02%)</title><rect x="19.1" y="1445" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="22.14" y="1455.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (657,991,374 samples, 0.01%)</title><rect x="15.8" y="1461" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="18.77" y="1471.5" ></text>
</g>
<g >
<title>NaClSysRecvDecoder (2,101,455,259,951 samples, 29.18%)</title><rect x="423.6" y="1557" width="344.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="426.59" y="1567.5" >NaClSysRecvDecoder</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,515,438,337 samples, 0.02%)</title><rect x="48.1" y="1589" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="51.05" y="1599.5" ></text>
</g>
<g >
<title>node::Start (995,671,573 samples, 0.01%)</title><rect x="37.5" y="1541" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="40.48" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="757" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,415,829,793 samples, 0.06%)</title><rect x="31.8" y="1493" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="34.84" y="1503.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (4,749,173,653 samples, 0.07%)</title><rect x="53.3" y="1589" width="0.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="56.34" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (618,910,582 samples, 0.01%)</title><rect x="33.4" y="181" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="325" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="335.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,198,692,707 samples, 0.03%)</title><rect x="1176.7" y="1557" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1179.69" y="1567.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (73,629,245,449 samples, 1.02%)</title><rect x="877.8" y="1461" width="12.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="880.78" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,393,968,996 samples, 0.02%)</title><rect x="29.9" y="325" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.89" y="335.5" ></text>
</g>
<g >
<title>do_sys_poll (3,480,245,690 samples, 0.05%)</title><rect x="35.9" y="1445" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="38.87" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (134,120,163,535 samples, 1.86%)</title><rect x="930.5" y="1445" width="22.0" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="933.51" y="1455.5" >c..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,058,206,429 samples, 0.17%)</title><rect x="29.6" y="1365" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.61" y="1375.5" ></text>
</g>
<g >
<title>lind_send (1,800,135,024,944 samples, 25.00%)</title><rect x="821.1" y="1525" width="294.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="824.07" y="1535.5" >lind_send</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (698,122,393 samples, 0.01%)</title><rect x="36.6" y="1493" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="39.60" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,209,975,512 samples, 0.02%)</title><rect x="1173.4" y="1493" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.43" y="1503.5" ></text>
</g>
<g >
<title>do_idle (5,768,423,903 samples, 0.08%)</title><rect x="15.7" y="1541" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="18.72" y="1551.5" ></text>
</g>
<g >
<title>pte_alloc_one (1,000,899,952 samples, 0.01%)</title><rect x="26.2" y="1253" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="29.16" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (12,008,273,967 samples, 0.17%)</title><rect x="29.6" y="1349" width="2.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.61" y="1359.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (1,270,526,406,763 samples, 17.64%)</title><rect x="558.4" y="1445" width="208.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="561.38" y="1455.5" >rustposix::safeposix::sysca..</text>
</g>
<g >
<title>[[heap]] (1,414,460,138 samples, 0.02%)</title><rect x="18.2" y="1589" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="21.17" y="1599.5" ></text>
</g>
<g >
<title>__fget_light (627,055,975 samples, 0.01%)</title><rect x="42.6" y="1429" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="45.59" y="1439.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (15,237,163,716 samples, 0.21%)</title><rect x="212.4" y="1573" width="2.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="215.37" y="1583.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (40,525,216,370 samples, 0.56%)</title><rect x="869.7" y="1461" width="6.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="872.68" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,663,353,590 samples, 0.02%)</title><rect x="13.6" y="1525" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="16.60" y="1535.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (83,584,598,389 samples, 1.16%)</title><rect x="531.1" y="1429" width="13.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="534.13" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1029" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1039.5" ></text>
</g>
<g >
<title>getgrgid_r (848,314,333 samples, 0.01%)</title><rect x="20.0" y="1477" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="22.98" y="1487.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (45,335,084,738 samples, 0.63%)</title><rect x="868.9" y="1477" width="7.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="871.89" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,048,577,334 samples, 0.14%)</title><rect x="29.6" y="1189" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.64" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="197" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="207.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common (12,877,976,048 samples, 0.18%)</title><rect x="1167.2" y="1573" width="2.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1170.25" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="789" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="799.5" ></text>
</g>
<g >
<title>enqueue_task (1,072,802,476 samples, 0.01%)</title><rect x="1187.4" y="1461" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1190.40" y="1471.5" ></text>
</g>
<g >
<title>vfs_statx (3,603,271,658 samples, 0.05%)</title><rect x="32.0" y="1429" width="0.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="34.96" y="1439.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (98,842,019,536 samples, 1.37%)</title><rect x="804.9" y="1525" width="16.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="807.86" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,120,927,364 samples, 0.06%)</title><rect x="34.4" y="117" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1173" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1183.5" ></text>
</g>
<g >
<title>tcp_seq_start (806,135,373 samples, 0.01%)</title><rect x="37.2" y="1365" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="40.22" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,277,203,855 samples, 0.02%)</title><rect x="32.9" y="1477" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="35.92" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,642,225,098 samples, 0.02%)</title><rect x="19.1" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.14" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1109" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1119.5" ></text>
</g>
<g >
<title>uv__fs_read (1,667,444,009 samples, 0.02%)</title><rect x="37.1" y="1525" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="40.08" y="1535.5" ></text>
</g>
<g >
<title>Glob::isIgnored (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1541" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="36.43" y="1551.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (145,808,251,046 samples, 2.02%)</title><rect x="713.9" y="1381" width="23.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="716.94" y="1391.5" >r..</text>
</g>
<g >
<title>mmput (27,906,692,828 samples, 0.39%)</title><rect x="37.7" y="1413" width="4.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="40.71" y="1423.5" ></text>
</g>
<g >
<title>do_exit (676,225,902 samples, 0.01%)</title><rect x="12.1" y="1525" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="15.10" y="1535.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (37,168,148,510 samples, 0.52%)</title><rect x="1109.2" y="1461" width="6.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1112.24" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,288,590,226 samples, 0.07%)</title><rect x="29.8" y="773" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.80" y="783.5" ></text>
</g>
<g >
<title>sleep (19,409,408,100 samples, 0.27%)</title><rect x="1174.0" y="1605" width="3.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1176.99" y="1615.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (444,869,710,621 samples, 6.18%)</title><rect x="958.2" y="1429" width="72.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="961.19" y="1439.5" >&lt;parking..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1061" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1071.5" ></text>
</g>
<g >
<title>epoll_wait (1,116,726,937 samples, 0.02%)</title><rect x="35.2" y="1557" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="38.23" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="629" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="639.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (4,295,037,770 samples, 0.06%)</title><rect x="765.0" y="1349" width="0.8" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="768.05" y="1359.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (42,442,202,982 samples, 0.59%)</title><rect x="853.9" y="1461" width="7.0" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="856.94" y="1471.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt; (76,965,926,013 samples, 1.07%)</title><rect x="495.0" y="1493" width="12.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="497.95" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (1,835,131,472 samples, 0.03%)</title><rect x="23.1" y="1589" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="26.08" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1045" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="1055.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (5,471,576,806,183 samples, 75.98%)</title><rect x="220.4" y="1573" width="896.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="223.35" y="1583.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,185,280,371 samples, 0.09%)</title><rect x="42.5" y="1525" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="45.47" y="1535.5" ></text>
</g>
<g >
<title>read (1,714,702,926 samples, 0.02%)</title><rect x="33.2" y="1557" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="36.15" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,701,898,532 samples, 0.15%)</title><rect x="29.6" y="1237" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.63" y="1247.5" ></text>
</g>
<g >
<title>fsnotify (1,598,110,807 samples, 0.02%)</title><rect x="43.7" y="1349" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="46.68" y="1359.5" ></text>
</g>
<g >
<title>perf (17,700,682,500 samples, 0.25%)</title><rect x="42.4" y="1605" width="2.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="45.40" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,120,053,326 samples, 0.06%)</title><rect x="29.8" y="645" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.83" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1525" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1535.5" ></text>
</g>
<g >
<title>worker (2,758,962,296 samples, 0.04%)</title><rect x="37.0" y="1557" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="40.02" y="1567.5" ></text>
</g>
<g >
<title>do_sys_poll (5,802,135,329 samples, 0.08%)</title><rect x="42.5" y="1477" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="45.50" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (893,938,173 samples, 0.01%)</title><rect x="12.4" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.38" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="373" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="213" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="223.5" ></text>
</g>
<g >
<title>user_path_at_empty (788,897,183 samples, 0.01%)</title><rect x="20.6" y="1429" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="23.56" y="1439.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1,098,064,394 samples, 0.02%)</title><rect x="1174.4" y="1509" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1177.41" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,744,992,812 samples, 0.07%)</title><rect x="29.8" y="725" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.81" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1,685,675,458 samples, 0.02%)</title><rect x="64.0" y="1573" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="67.04" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="213" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="223.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (8,537,578,299 samples, 0.12%)</title><rect x="1150.0" y="1573" width="1.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1153.01" y="1583.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::get_read_ref (13,399,506,022 samples, 0.19%)</title><rect x="1106.6" y="1461" width="2.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1109.62" y="1471.5" ></text>
</g>
<g >
<title>uv__run_check (884,144,860 samples, 0.01%)</title><rect x="37.5" y="1461" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="40.48" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,534,720,963 samples, 0.09%)</title><rect x="29.8" y="917" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.78" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="917" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="927.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (42,646,613,345 samples, 0.59%)</title><rect x="853.9" y="1477" width="7.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="856.91" y="1487.5" ></text>
</g>
<g >
<title>start_secondary (5,820,200,907 samples, 0.08%)</title><rect x="15.7" y="1573" width="1.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="18.72" y="1583.5" ></text>
</g>
<g >
<title>poll_idle (2,012,575,126 samples, 0.03%)</title><rect x="1186.7" y="1477" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.67" y="1487.5" ></text>
</g>
<g >
<title>[bash] (930,886,205 samples, 0.01%)</title><rect x="1172.6" y="1285" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1175.59" y="1295.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (638,155,180 samples, 0.01%)</title><rect x="1184.6" y="1573" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1187.59" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1365" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,504,493,797 samples, 0.03%)</title><rect x="1174.3" y="1573" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1177.25" y="1583.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (77,294,998,486 samples, 1.07%)</title><rect x="518.5" y="1429" width="12.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="521.47" y="1439.5" ></text>
</g>
<g >
<title>ksys_read (860,747,708 samples, 0.01%)</title><rect x="48.1" y="1541" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="51.09" y="1551.5" ></text>
</g>
<g >
<title>[sleep] (7,504,994,801 samples, 0.10%)</title><rect x="1174.7" y="1589" width="1.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1177.69" y="1599.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (74,291,100,822 samples, 1.03%)</title><rect x="841.7" y="1445" width="12.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="844.74" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="309" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="597" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="607.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (81,906,810,868 samples, 1.14%)</title><rect x="1031.8" y="1445" width="13.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1034.76" y="1455.5" ></text>
</g>
<g >
<title>make_child (1,133,762,259 samples, 0.02%)</title><rect x="1172.8" y="1205" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1175.79" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1189" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="405" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (71,261,115,654 samples, 0.99%)</title><rect x="584.9" y="1365" width="11.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="587.87" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,069,953,825 samples, 0.18%)</title><rect x="29.6" y="1413" width="2.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.59" y="1423.5" ></text>
</g>
<g >
<title>[bash] (2,474,732,379 samples, 0.03%)</title><rect x="1172.8" y="1237" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1175.76" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,239,286 samples, 0.02%)</title><rect x="29.9" y="309" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.89" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,308,518,103 samples, 0.02%)</title><rect x="1172.3" y="1333" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1175.27" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="309" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="319.5" ></text>
</g>
<g >
<title>m_show (706,980,472 samples, 0.01%)</title><rect x="48.1" y="1493" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="51.11" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="677" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="687.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (3,000,402,885 samples, 0.04%)</title><rect x="1189.3" y="1493" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1192.30" y="1503.5" ></text>
</g>
<g >
<title>start_kernel (1,335,457,499 samples, 0.02%)</title><rect x="49.0" y="1557" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="51.97" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,020,609,988 samples, 0.04%)</title><rect x="29.9" y="501" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.86" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,591,270,954 samples, 0.12%)</title><rect x="29.7" y="1013" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.67" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,405,351,782 samples, 0.02%)</title><rect x="29.9" y="341" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.89" y="351.5" ></text>
</g>
<g >
<title>dispatcher (1,696,508,348,176 samples, 23.56%)</title><rect x="837.3" y="1509" width="278.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="840.35" y="1519.5" >dispatcher</text>
</g>
<g >
<title>v8::internal::Heap::PerformGarbageCollection (751,804,169 samples, 0.01%)</title><rect x="35.5" y="1461" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="38.47" y="1471.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (72,363,402,490 samples, 1.00%)</title><rect x="572.2" y="1397" width="11.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="575.22" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,801,943,032 samples, 0.09%)</title><rect x="783.8" y="1525" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="786.77" y="1535.5" ></text>
</g>
<g >
<title>[expr] (7,053,831,129 samples, 0.10%)</title><rect x="10.5" y="1589" width="1.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.54" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,097,746,146 samples, 0.10%)</title><rect x="1174.7" y="1493" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1177.73" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (668,438,140 samples, 0.01%)</title><rect x="31.1" y="1061" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="34.08" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1317" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="197" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="207.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1,096,649,143 samples, 0.02%)</title><rect x="43.1" y="1429" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="46.06" y="1439.5" ></text>
</g>
<g >
<title>free_pgtables (3,713,884,002 samples, 0.05%)</title><rect x="37.7" y="1365" width="0.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="40.73" y="1375.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (3,629,305,498 samples, 0.05%)</title><rect x="1166.6" y="1541" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1169.64" y="1551.5" ></text>
</g>
<g >
<title>__mmput (2,314,009,182 samples, 0.03%)</title><rect x="23.6" y="1477" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="26.57" y="1487.5" ></text>
</g>
<g >
<title>__schedule (1,949,483,286 samples, 0.03%)</title><rect x="36.1" y="1365" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="39.09" y="1375.5" ></text>
</g>
<g >
<title>anon_vma_clone (1,255,812,575 samples, 0.02%)</title><rect x="25.4" y="1317" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="28.35" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,092,633,142 samples, 0.17%)</title><rect x="29.6" y="1381" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.60" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="805" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="853" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1589" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="21.06" y="1599.5" ></text>
</g>
<g >
<title>[perf-486471.map] (1,164,320,057 samples, 0.02%)</title><rect x="28.7" y="1589" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="31.68" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (618,910,582 samples, 0.01%)</title><rect x="33.4" y="149" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="159.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (5,320,885,850 samples, 0.07%)</title><rect x="69.4" y="1525" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.44" y="1535.5" ></text>
</g>
<g >
<title>dup_mmap (929,782,581 samples, 0.01%)</title><rect x="1172.8" y="1045" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1175.80" y="1055.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (625,230,351 samples, 0.01%)</title><rect x="1187.2" y="1509" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1190.21" y="1519.5" ></text>
</g>
<g >
<title>exit_mmap (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1381" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="21.06" y="1391.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::Cage::get_filedescriptor (39,724,686,986 samples, 0.55%)</title><rect x="1108.8" y="1477" width="6.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1111.82" y="1487.5" ></text>
</g>
<g >
<title>execute_command_internal (8,666,334,606 samples, 0.12%)</title><rect x="1171.9" y="1493" width="1.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1174.94" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="917" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="927.5" ></text>
</g>
<g >
<title>[bash] (3,617,199,031 samples, 0.05%)</title><rect x="1172.6" y="1381" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1175.59" y="1391.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner_tcp (946,413,879,171 samples, 13.14%)</title><rect x="611.5" y="1429" width="155.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="614.49" y="1439.5" >rustposix::safeposi..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,820,639,365 samples, 0.04%)</title><rect x="18.4" y="1557" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.43" y="1567.5" ></text>
</g>
<g >
<title>free_p4d_range (1,181,336,583 samples, 0.02%)</title><rect x="37.8" y="1333" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="40.76" y="1343.5" ></text>
</g>
<g >
<title>NaClSysSend (4,499,656,370 samples, 0.06%)</title><rect x="767.9" y="1557" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="770.92" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1045" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1055.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::send_syscall (6,699,394,005 samples, 0.09%)</title><rect x="56.6" y="1573" width="1.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="59.56" y="1583.5" ></text>
</g>
<g >
<title>do_idle (748,015,596 samples, 0.01%)</title><rect x="1177.0" y="1493" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1180.05" y="1503.5" ></text>
</g>
<g >
<title>getgrgid (4,576,389,167 samples, 0.06%)</title><rect x="19.1" y="1477" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="22.14" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1573" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="21.06" y="1583.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (5,238,720,259 samples, 0.07%)</title><rect x="48.3" y="1589" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="51.33" y="1599.5" ></text>
</g>
<g >
<title>[[heap]] (1,230,446,294 samples, 0.02%)</title><rect x="1174.0" y="1589" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1177.05" y="1599.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (3,886,169,962 samples, 0.05%)</title><rect x="1051.2" y="1397" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1054.17" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1413" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1423.5" ></text>
</g>
<g >
<title>execute_command (3,524,814,144 samples, 0.05%)</title><rect x="1172.6" y="1365" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1175.59" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (618,910,582 samples, 0.01%)</title><rect x="33.4" y="165" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="175.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (1,574,529,471 samples, 0.02%)</title><rect x="1187.3" y="1509" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1190.34" y="1519.5" ></text>
</g>
<g >
<title>execute_command (4,738,066,227 samples, 0.07%)</title><rect x="1172.6" y="1461" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1175.59" y="1471.5" ></text>
</g>
<g >
<title>start_kernel (749,225,328 samples, 0.01%)</title><rect x="1177.0" y="1557" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1180.05" y="1567.5" ></text>
</g>
<g >
<title>setlocale (13,399,810,162 samples, 0.19%)</title><rect x="20.9" y="1525" width="2.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="23.87" y="1535.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1573" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="36.43" y="1583.5" ></text>
</g>
<g >
<title>seq_read_iter (1,500,781,866 samples, 0.02%)</title><rect x="37.1" y="1381" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="40.10" y="1391.5" ></text>
</g>
<g >
<title>glob_vector (1,667,995,017 samples, 0.02%)</title><rect x="1172.2" y="1381" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1175.22" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,215,944,864 samples, 0.06%)</title><rect x="35.9" y="1493" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="38.86" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1525" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1221" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1231.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (73,771,834,101 samples, 1.02%)</title><rect x="519.0" y="1413" width="12.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="522.05" y="1423.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (7,766,477,988 samples, 0.11%)</title><rect x="313.4" y="1541" width="1.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="316.38" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="581" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1093" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1103.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (648,198,257 samples, 0.01%)</title><rect x="13.9" y="1573" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="16.94" y="1583.5" ></text>
</g>
<g >
<title>__getdelim (829,413,414 samples, 0.01%)</title><rect x="22.6" y="1429" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="25.63" y="1439.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (1,617,101,465 samples, 0.02%)</title><rect x="1173.7" y="1509" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1176.68" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1205" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1215.5" ></text>
</g>
<g >
<title>[libc.so.6] (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1461" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.22" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,399,810,162 samples, 0.19%)</title><rect x="20.9" y="1509" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.87" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="357" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (910,441,408 samples, 0.01%)</title><rect x="35.3" y="1525" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="38.25" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (9,101,882,757 samples, 0.13%)</title><rect x="743.7" y="1349" width="1.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="746.66" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (684,298,732 samples, 0.01%)</title><rect x="12.1" y="1557" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="15.10" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_select (1,029,227,713 samples, 0.01%)</title><rect x="1187.0" y="1509" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1190.04" y="1519.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_cbuf (2,251,311,137 samples, 0.03%)</title><rect x="862.4" y="1477" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="865.40" y="1487.5" ></text>
</g>
<g >
<title>start_secondary (3,935,063,023 samples, 0.05%)</title><rect x="1189.3" y="1573" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1192.30" y="1583.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (305,418,682,264 samples, 4.24%)</title><rect x="1056.6" y="1445" width="50.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1059.57" y="1455.5" >ringb..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="293" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="303.5" ></text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (4,350,081,302 samples, 0.06%)</title><rect x="1049.7" y="1413" width="0.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1052.65" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,197,804,449 samples, 0.10%)</title><rect x="1174.7" y="1509" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1177.72" y="1519.5" ></text>
</g>
<g >
<title>kworker/dying (17,113,887,674 samples, 0.24%)</title><rect x="14.1" y="1605" width="2.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="17.06" y="1615.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::cagetable_getref (51,284,671,565 samples, 0.71%)</title><rect x="507.6" y="1493" width="8.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="510.56" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1349" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1359.5" ></text>
</g>
<g >
<title>__nss_next2 (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1493" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="26.22" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,275,589,415 samples, 0.07%)</title><rect x="29.8" y="757" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.81" y="767.5" ></text>
</g>
<g >
<title>setlocale (7,204,503,520 samples, 0.10%)</title><rect x="1174.7" y="1525" width="1.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1177.72" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1429" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="421" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="431.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,420,495,652 samples, 0.02%)</title><rect x="19.2" y="1317" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.18" y="1327.5" ></text>
</g>
<g >
<title>vfs_readlink (861,501,343 samples, 0.01%)</title><rect x="20.7" y="1429" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="23.69" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1317" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1327.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (666,762,715 samples, 0.01%)</title><rect x="28.1" y="1317" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="31.06" y="1327.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::net::SocketHandle&gt;&gt;&gt; (76,695,226,535 samples, 1.06%)</title><rect x="889.8" y="1477" width="12.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="892.85" y="1487.5" ></text>
</g>
<g >
<title>do_idle (634,468,299 samples, 0.01%)</title><rect x="13.9" y="1493" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="16.94" y="1503.5" ></text>
</g>
<g >
<title>do_iter_write (6,718,952,672 samples, 0.09%)</title><rect x="44.0" y="1333" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="47.01" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1205" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1215.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4,140,712,393 samples, 0.06%)</title><rect x="1031.1" y="1445" width="0.7" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="1034.09" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,455,652,943 samples, 0.03%)</title><rect x="29.9" y="485" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.86" y="495.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4,809,790,492 samples, 0.07%)</title><rect x="557.6" y="1397" width="0.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="560.60" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,730,972,561 samples, 0.07%)</title><rect x="29.8" y="709" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.81" y="719.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (8,027,387,709 samples, 0.11%)</title><rect x="59.4" y="1573" width="1.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="62.39" y="1583.5" ></text>
</g>
<g >
<title>walk_component (707,912,090 samples, 0.01%)</title><rect x="20.3" y="1365" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="23.26" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (230,340,671,275 samples, 3.20%)</title><rect x="1133.8" y="1589" width="37.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1136.82" y="1599.5" >[un..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="677" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="687.5" ></text>
</g>
<g >
<title>fsnotify_insert_event (627,439,121 samples, 0.01%)</title><rect x="43.8" y="1285" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="46.83" y="1295.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,156,193,703 samples, 0.02%)</title><rect x="1171.6" y="1589" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1174.65" y="1599.5" ></text>
</g>
<g >
<title>ls (35,637,868,445 samples, 0.49%)</title><rect x="18.2" y="1605" width="5.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="21.17" y="1615.5" ></text>
</g>
<g >
<title>iterate_dir (1,298,199,246 samples, 0.02%)</title><rect x="1172.3" y="1285" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1175.27" y="1295.5" ></text>
</g>
<g >
<title>expand_string_assignment (1,086,237,238 samples, 0.02%)</title><rect x="1173.2" y="1349" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1176.18" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="789" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="341" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="351.5" ></text>
</g>
<g >
<title>do_idle (787,469,242 samples, 0.01%)</title><rect x="17.6" y="1541" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="20.63" y="1551.5" ></text>
</g>
<g >
<title>[ls] (25,379,326,506 samples, 0.35%)</title><rect x="18.9" y="1541" width="4.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.91" y="1551.5" ></text>
</g>
<g >
<title>operator new (765,180,436 samples, 0.01%)</title><rect x="34.0" y="69" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="37.03" y="79.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (83,584,598,389 samples, 1.16%)</title><rect x="531.1" y="1413" width="13.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="534.13" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (72,415,511,576 samples, 1.01%)</title><rect x="495.7" y="1445" width="11.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="498.70" y="1455.5" ></text>
</g>
<g >
<title>[sleep] (7,392,441,955 samples, 0.10%)</title><rect x="1174.7" y="1541" width="1.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1177.69" y="1551.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,141,369,247 samples, 0.02%)</title><rect x="1171.6" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1174.65" y="1583.5" ></text>
</g>
<g >
<title>vfs_getattr (781,262,004 samples, 0.01%)</title><rect x="32.4" y="1381" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="35.42" y="1391.5" ></text>
</g>
<g >
<title>[bash] (944,108,837 samples, 0.01%)</title><rect x="1173.0" y="1173" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1175.98" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1445" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1455.5" ></text>
</g>
<g >
<title>do_exit (2,669,997,693 samples, 0.04%)</title><rect x="23.6" y="1525" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="26.57" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,791,011,285 samples, 0.04%)</title><rect x="18.4" y="1541" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.43" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,001,886,162 samples, 0.08%)</title><rect x="29.8" y="869" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.79" y="879.5" ></text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (1,096,973,915 samples, 0.02%)</title><rect x="43.8" y="1317" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="46.76" y="1327.5" ></text>
</g>
<g >
<title>execute_command_internal (2,493,836,465 samples, 0.03%)</title><rect x="1172.8" y="1317" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1175.76" y="1327.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (2,331,703,020 samples, 0.03%)</title><rect x="19.4" y="1381" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="22.42" y="1391.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (13,246,424,965 samples, 0.18%)</title><rect x="1054.4" y="1429" width="2.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1057.40" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="885" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="895.5" ></text>
</g>
<g >
<title>vfs_write (9,102,174,511 samples, 0.13%)</title><rect x="43.6" y="1381" width="1.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="46.64" y="1391.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1,420,495,652 samples, 0.02%)</title><rect x="19.2" y="1349" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="22.18" y="1359.5" ></text>
</g>
<g >
<title>free_pgtables (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1365" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="21.06" y="1375.5" ></text>
</g>
<g >
<title>search_binary_handler (27,906,692,828 samples, 0.39%)</title><rect x="37.7" y="1477" width="4.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="40.71" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,612,443,591 samples, 0.08%)</title><rect x="10.6" y="1429" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.61" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,621,215,430 samples, 0.12%)</title><rect x="29.7" y="1045" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.67" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="789" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="799.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,141,369,247 samples, 0.02%)</title><rect x="1171.6" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1174.65" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,141,369,247 samples, 0.02%)</title><rect x="1171.6" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1174.65" y="1551.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (73,771,834,101 samples, 1.02%)</title><rect x="519.0" y="1397" width="12.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="522.05" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1269" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1279.5" ></text>
</g>
<g >
<title>lind (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1605" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="21.06" y="1615.5" ></text>
</g>
<g >
<title>tick_nohz_irq_exit (687,881,794 samples, 0.01%)</title><rect x="1189.3" y="1413" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1192.30" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (3,876,333,304 samples, 0.05%)</title><rect x="743.0" y="1333" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="746.03" y="1343.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (1,329,688,906 samples, 0.02%)</title><rect x="737.6" y="1365" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="740.62" y="1375.5" ></text>
</g>
<g >
<title>uv_run (995,671,573 samples, 0.01%)</title><rect x="37.5" y="1477" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="40.48" y="1487.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (23,688,264,511 samples, 0.33%)</title><rect x="29.0" y="1557" width="3.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="31.99" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,620,977,721 samples, 0.19%)</title><rect x="29.5" y="1445" width="2.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.50" y="1455.5" ></text>
</g>
<g >
<title>[bash] (2,492,912,637 samples, 0.03%)</title><rect x="1172.8" y="1301" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1175.76" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,211,799,262 samples, 0.04%)</title><rect x="23.5" y="1573" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="26.48" y="1583.5" ></text>
</g>
<g >
<title>start_kernel (1,151,782,242 samples, 0.02%)</title><rect x="16.7" y="1557" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="19.67" y="1567.5" ></text>
</g>
<g >
<title>NaClMaskRestore (8,132,878,183 samples, 0.11%)</title><rect x="1143.0" y="1573" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1146.03" y="1583.5" ></text>
</g>
<g >
<title>uv__io_poll (3,454,711,125 samples, 0.05%)</title><rect x="35.2" y="1573" width="0.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="38.21" y="1583.5" ></text>
</g>
<g >
<title>_dl_catch_exception (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1317" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="26.22" y="1327.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::DefineProperties (774,634,756 samples, 0.01%)</title><rect x="24.8" y="1541" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="27.77" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,008,464,951 samples, 0.14%)</title><rect x="29.6" y="1157" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.65" y="1167.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (3,629,305,498 samples, 0.05%)</title><rect x="1166.6" y="1509" width="0.6" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1169.64" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="981" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="991.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (62,560,873,926 samples, 0.87%)</title><rect x="561.2" y="1413" width="10.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="564.18" y="1423.5" ></text>
</g>
<g >
<title>ksys_read (1,663,664,681 samples, 0.02%)</title><rect x="37.1" y="1445" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="40.08" y="1455.5" ></text>
</g>
<g >
<title>file_modified_flags (719,677,269 samples, 0.01%)</title><rect x="44.0" y="1253" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="47.03" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_add (4,244,452,573 samples, 0.06%)</title><rect x="742.3" y="1349" width="0.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="745.33" y="1359.5" ></text>
</g>
<g >
<title>__pmd_alloc (1,158,299,698 samples, 0.02%)</title><rect x="25.7" y="1285" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="28.72" y="1295.5" ></text>
</g>
<g >
<title>exit_mmap (1,356,224,930 samples, 0.02%)</title><rect x="1173.7" y="1381" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1176.70" y="1391.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1,000,172,711 samples, 0.01%)</title><rect x="19.2" y="1269" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="22.18" y="1279.5" ></text>
</g>
<g >
<title>[bash] (3,524,814,144 samples, 0.05%)</title><rect x="1172.6" y="1333" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1175.59" y="1343.5" ></text>
</g>
<g >
<title>copy_pmd_range (14,439,874,798 samples, 0.20%)</title><rect x="25.7" y="1301" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="28.67" y="1311.5" ></text>
</g>
<g >
<title>__libc_start_main (2,710,980,627 samples, 0.04%)</title><rect x="12.2" y="1573" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="15.23" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1125" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="773" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (678,254,035 samples, 0.01%)</title><rect x="36.6" y="1477" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="39.60" y="1487.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,949,524,586 samples, 0.03%)</title><rect x="1188.2" y="1429" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1191.24" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,009,865,395 samples, 0.01%)</title><rect x="1172.8" y="1157" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1175.79" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1333" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1343.5" ></text>
</g>
<g >
<title>getdents64 (1,322,034,510 samples, 0.02%)</title><rect x="1172.3" y="1349" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1175.27" y="1359.5" ></text>
</g>
<g >
<title>[bash] (8,666,334,606 samples, 0.12%)</title><rect x="1171.9" y="1477" width="1.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1174.94" y="1487.5" ></text>
</g>
<g >
<title>file_modified (755,308,307 samples, 0.01%)</title><rect x="44.0" y="1269" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="47.03" y="1279.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1253" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.22" y="1263.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (18,509,351,892 samples, 0.26%)</title><rect x="25.3" y="1525" width="3.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="28.29" y="1535.5" ></text>
</g>
<g >
<title>load_elf_binary (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1461" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="21.06" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,828,778,081 samples, 0.03%)</title><rect x="20.2" y="1477" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="23.17" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,302,642,036 samples, 0.07%)</title><rect x="29.8" y="789" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.80" y="799.5" ></text>
</g>
<g >
<title>ksys_write (658,644,990 samples, 0.01%)</title><rect x="45.2" y="1429" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="48.16" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1093" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1103.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (961,132,647 samples, 0.01%)</title><rect x="49.0" y="1477" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="51.97" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,636,718,185 samples, 0.05%)</title><rect x="29.8" y="597" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.84" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_read (860,747,708 samples, 0.01%)</title><rect x="48.1" y="1557" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="51.09" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="229" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="239.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,050,389,284 samples, 0.04%)</title><rect x="48.3" y="1525" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="51.34" y="1535.5" ></text>
</g>
<g >
<title>ksys_write (9,201,174,013 samples, 0.13%)</title><rect x="43.6" y="1397" width="1.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="46.63" y="1407.5" ></text>
</g>
<g >
<title>start_secondary (16,302,898,296 samples, 0.23%)</title><rect x="1185.3" y="1573" width="2.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1188.33" y="1583.5" ></text>
</g>
<g >
<title>ttwu_do_activate (746,103,286 samples, 0.01%)</title><rect x="1189.8" y="1477" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1192.80" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="453" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="463.5" ></text>
</g>
<g >
<title>__pte_alloc (1,067,975,976 samples, 0.01%)</title><rect x="26.1" y="1269" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="29.14" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (112,874,409,551 samples, 1.57%)</title><rect x="746.0" y="1317" width="18.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="748.98" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,991,762,699 samples, 0.04%)</title><rect x="33.8" y="149" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="159.5" ></text>
</g>
<g >
<title>node::LoadSnapshotDataAndRun (995,671,573 samples, 0.01%)</title><rect x="37.5" y="1525" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="40.48" y="1535.5" ></text>
</g>
<g >
<title>enqueue_task (742,438,432 samples, 0.01%)</title><rect x="1189.8" y="1461" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1192.80" y="1471.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4,140,712,393 samples, 0.06%)</title><rect x="1031.1" y="1461" width="0.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1034.09" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="997" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1445" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="1455.5" ></text>
</g>
<g >
<title>filename_lookup (1,218,323,847 samples, 0.02%)</title><rect x="20.2" y="1397" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="23.18" y="1407.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (9,306,177,839 samples, 0.13%)</title><rect x="1107.3" y="1429" width="1.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1110.29" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1013" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="1023.5" ></text>
</g>
<g >
<title>[sel_ldr] (715,806,009 samples, 0.01%)</title><rect x="1116.8" y="1557" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1119.76" y="1567.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::net::SocketHandle&gt;&gt;&gt; (77,171,501,777 samples, 1.07%)</title><rect x="571.4" y="1429" width="12.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="574.43" y="1439.5" ></text>
</g>
<g >
<title>sel_ldr (6,849,518,299,243 samples, 95.11%)</title><rect x="49.3" y="1605" width="1122.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="52.26" y="1615.5" >sel_ldr</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="421" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="431.5" ></text>
</g>
<g >
<title>execute_command (694,457,587 samples, 0.01%)</title><rect x="1173.0" y="1157" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1175.99" y="1167.5" ></text>
</g>
<g >
<title>__mmput (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1397" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="21.06" y="1407.5" ></text>
</g>
<g >
<title>do_readlinkat (1,724,671,976 samples, 0.02%)</title><rect x="20.5" y="1445" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="23.54" y="1455.5" ></text>
</g>
<g >
<title>seq_read (1,500,781,866 samples, 0.02%)</title><rect x="37.1" y="1397" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="40.10" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (661,266,983 samples, 0.01%)</title><rect x="31.5" y="1317" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="34.47" y="1327.5" ></text>
</g>
<g >
<title>do_idle (15,965,799,914 samples, 0.22%)</title><rect x="1185.4" y="1541" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1188.37" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="933" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="965" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="341" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="351.5" ></text>
</g>
<g >
<title>write (9,414,636,080 samples, 0.13%)</title><rect x="43.6" y="1461" width="1.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="46.61" y="1471.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (4,220,026,396 samples, 0.06%)</title><rect x="42.5" y="1461" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="45.55" y="1471.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU32::load (13,399,506,022 samples, 0.19%)</title><rect x="1106.6" y="1445" width="2.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1109.62" y="1455.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (76,284,519,827 samples, 1.06%)</title><rect x="902.4" y="1461" width="12.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="905.41" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1413" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1423.5" ></text>
</g>
<g >
<title>exec_binprm (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1493" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="21.06" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1125" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="405" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (5,811,917,312 samples, 0.08%)</title><rect x="15.7" y="1557" width="1.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="18.72" y="1567.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (8,384,241,589 samples, 0.12%)</title><rect x="304.9" y="1541" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="307.86" y="1551.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (494,399,470,373 samples, 6.87%)</title><rect x="621.0" y="1381" width="81.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="624.05" y="1391.5" >&lt;lock_api..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,772,836,676 samples, 0.02%)</title><rect x="20.5" y="1493" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="23.54" y="1503.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,095,866,420 samples, 0.02%)</title><rect x="1185.5" y="1461" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1188.52" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="645" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,889,464,231 samples, 0.03%)</title><rect x="1173.7" y="1589" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1176.68" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="453" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="463.5" ></text>
</g>
<g >
<title>exc_page_fault (638,155,180 samples, 0.01%)</title><rect x="1184.6" y="1557" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1187.59" y="1567.5" ></text>
</g>
<g >
<title>_dl_catch_error (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1413" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="26.22" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (2,813,082,960 samples, 0.04%)</title><rect x="23.5" y="1557" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="26.55" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="629" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1413" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1423.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1,877,181,875 samples, 0.03%)</title><rect x="44.8" y="1253" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="47.76" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,485,539,676 samples, 0.10%)</title><rect x="29.8" y="981" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.77" y="991.5" ></text>
</g>
<g >
<title>copy_p4d_range (14,769,376,804 samples, 0.21%)</title><rect x="25.6" y="1317" width="2.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="28.61" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,139,707,765 samples, 0.02%)</title><rect x="1174.0" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1177.05" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,893,832,077 samples, 0.03%)</title><rect x="12.3" y="1493" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.35" y="1503.5" ></text>
</g>
<g >
<title>schedule (1,075,891,349 samples, 0.01%)</title><rect x="43.1" y="1413" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.06" y="1423.5" ></text>
</g>
<g >
<title>memcpy@plt (1,432,510,769 samples, 0.02%)</title><rect x="784.9" y="1525" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="787.89" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_read (1,373,718,851 samples, 0.02%)</title><rect x="33.2" y="1509" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="36.18" y="1519.5" ></text>
</g>
<g >
<title>schedule (2,032,434,806 samples, 0.03%)</title><rect x="36.1" y="1381" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.08" y="1391.5" ></text>
</g>
<g >
<title>[ls] (9,138,066,714 samples, 0.13%)</title><rect x="19.0" y="1509" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.97" y="1519.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (4,499,302,020 samples, 0.06%)</title><rect x="1145.8" y="1573" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1148.79" y="1583.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::net::SocketHandle&gt;&gt; (76,068,683,399 samples, 1.06%)</title><rect x="584.1" y="1429" width="12.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="587.08" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="821" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="831.5" ></text>
</g>
<g >
<title>NaClLog (24,385,570,096 samples, 0.34%)</title><rect x="1139.0" y="1573" width="4.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1142.03" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,939,619,645 samples, 0.08%)</title><rect x="29.8" y="821" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.79" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,036,379,172 samples, 0.04%)</title><rect x="29.9" y="517" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.86" y="527.5" ></text>
</g>
<g >
<title>ovl_getattr (898,291,926 samples, 0.01%)</title><rect x="32.4" y="1397" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="35.40" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,009,865,395 samples, 0.01%)</title><rect x="1172.8" y="1141" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1175.79" y="1151.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (33,025,180,383 samples, 0.46%)</title><rect x="778.4" y="1525" width="5.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="781.36" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="277" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="287.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (3,730,153,906 samples, 0.05%)</title><rect x="516.0" y="1477" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="519.00" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="853" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="863.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_syscall (1,523,181,157,155 samples, 21.15%)</title><rect x="517.0" y="1477" width="249.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="519.99" y="1487.5" >rustposix::safeposix::syscalls::n..</text>
</g>
<g >
<title>[libnss_systemd.so.2] (2,339,031,327 samples, 0.03%)</title><rect x="19.4" y="1397" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="22.42" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,474,080,727 samples, 0.02%)</title><rect x="1184.9" y="1589" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1187.95" y="1599.5" ></text>
</g>
<g >
<title>generic_write_end (1,793,172,624 samples, 0.02%)</title><rect x="44.8" y="1237" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="47.77" y="1247.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (51,385,897,384 samples, 0.71%)</title><rect x="812.6" y="1509" width="8.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="815.64" y="1519.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (209,215,589,232 samples, 2.91%)</title><rect x="1072.3" y="1413" width="34.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1075.33" y="1423.5" >co..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="917" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="927.5" ></text>
</g>
<g >
<title>copy_process (18,232,337,360 samples, 0.25%)</title><rect x="25.3" y="1381" width="3.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="28.30" y="1391.5" ></text>
</g>
<g >
<title>_compound_head (6,037,763,890 samples, 0.08%)</title><rect x="26.3" y="1269" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="29.32" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="613" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="869" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="879.5" ></text>
</g>
<g >
<title>sshd (71,418,950,573 samples, 0.99%)</title><rect x="1177.2" y="1605" width="11.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1180.17" y="1615.5" ></text>
</g>
<g >
<title>cpu_startup_entry (641,911,706 samples, 0.01%)</title><rect x="13.9" y="1509" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="16.94" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1461" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1471.5" ></text>
</g>
<g >
<title>begin_new_exec (27,906,692,828 samples, 0.39%)</title><rect x="37.7" y="1445" width="4.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="40.71" y="1455.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (8,943,268,168 samples, 0.12%)</title><rect x="876.3" y="1477" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="879.32" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="869" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="879.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (15,859,491,067 samples, 0.22%)</title><rect x="29.2" y="1493" width="2.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="32.18" y="1503.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (68,684,817,428 samples, 0.95%)</title><rect x="597.4" y="1381" width="11.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="600.40" y="1391.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (73,629,245,449 samples, 1.02%)</title><rect x="877.8" y="1477" width="12.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="880.78" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1285" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (1,302,637,818 samples, 0.02%)</title><rect x="1172.3" y="1301" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1175.27" y="1311.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::net::SocketHandle&gt;&gt; (90,491,656,972 samples, 1.26%)</title><rect x="914.9" y="1477" width="14.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="917.91" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1077" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="1087.5" ></text>
</g>
<g >
<title>fdarray__poll (6,365,014,009 samples, 0.09%)</title><rect x="42.5" y="1557" width="1.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="45.46" y="1567.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (2,276,050,815 samples, 0.03%)</title><rect x="38.0" y="1349" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="40.97" y="1359.5" ></text>
</g>
<g >
<title>copy_pte_range (12,149,194,922 samples, 0.17%)</title><rect x="26.0" y="1285" width="2.0" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="29.04" y="1295.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1,335,457,499 samples, 0.02%)</title><rect x="49.0" y="1541" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="51.97" y="1551.5" ></text>
</g>
<g >
<title>handle_pte_fault (637,421,109 samples, 0.01%)</title><rect x="1184.6" y="1493" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1187.59" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,120,053,326 samples, 0.06%)</title><rect x="29.8" y="629" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.83" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (76,284,519,827 samples, 1.06%)</title><rect x="902.4" y="1429" width="12.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="905.41" y="1439.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3,629,305,498 samples, 0.05%)</title><rect x="1166.6" y="1493" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1169.64" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1333" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1343.5" ></text>
</g>
<g >
<title>kthread (818,505,845 samples, 0.01%)</title><rect x="1185.2" y="1573" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1188.20" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (1,724,671,976 samples, 0.02%)</title><rect x="20.5" y="1461" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="23.54" y="1471.5" ></text>
</g>
<g >
<title>vfs_iter_write (6,721,212,682 samples, 0.09%)</title><rect x="44.0" y="1349" width="1.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="47.01" y="1359.5" ></text>
</g>
<g >
<title>free_swap_cache (970,861,072 samples, 0.01%)</title><rect x="42.0" y="1253" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="44.97" y="1263.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (36,298,245,050 samples, 0.50%)</title><rect x="1109.4" y="1429" width="5.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1112.38" y="1439.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1,617,544,138 samples, 0.02%)</title><rect x="1187.3" y="1525" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1190.34" y="1535.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4,703,873,827 samples, 0.07%)</title><rect x="1048.9" y="1397" width="0.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1051.88" y="1407.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::send_syscall (13,544,088,937 samples, 0.19%)</title><rect x="66.5" y="1573" width="2.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="69.51" y="1583.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (3,401,798,212 samples, 0.05%)</title><rect x="24.7" y="1573" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="27.65" y="1583.5" ></text>
</g>
<g >
<title>lind_send (4,504,842,406 samples, 0.06%)</title><rect x="1116.0" y="1541" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1119.02" y="1551.5" ></text>
</g>
<g >
<title>NaClSysRecv (4,246,276,536 samples, 0.06%)</title><rect x="1146.5" y="1573" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1149.53" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1493" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="1503.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (4,296,728,623 samples, 0.06%)</title><rect x="957.5" y="1445" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="960.49" y="1455.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (13,452,744,206 samples, 0.19%)</title><rect x="1169.4" y="1573" width="2.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1172.36" y="1583.5" ></text>
</g>
<g >
<title>node::Environment::CheckImmediate (858,061,829 samples, 0.01%)</title><rect x="37.5" y="1445" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="40.49" y="1455.5" ></text>
</g>
<g >
<title>[sel_ldr] (5,546,677,796,298 samples, 77.02%)</title><rect x="208.0" y="1589" width="908.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="211.05" y="1599.5" >[sel_ldr]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="1077" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="1087.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (78,327,246,690 samples, 1.09%)</title><rect x="1032.4" y="1429" width="12.8" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="1035.35" y="1439.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (32,306,786,414 samples, 0.45%)</title><rect x="552.3" y="1397" width="5.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="555.30" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,472,065,142 samples, 0.10%)</title><rect x="29.8" y="949" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.77" y="959.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,420,495,652 samples, 0.02%)</title><rect x="19.2" y="1333" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.18" y="1343.5" ></text>
</g>
<g >
<title>[grep] (654,688,451 samples, 0.01%)</title><rect x="12.2" y="1509" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.23" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,663,895,371 samples, 0.02%)</title><rect x="37.1" y="1493" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="40.08" y="1503.5" ></text>
</g>
<g >
<title>show_mountinfo (673,982,711 samples, 0.01%)</title><rect x="48.1" y="1477" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="51.11" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="1253" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="453" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="463.5" ></text>
</g>
<g >
<title>[anon] (67,591,097,970 samples, 0.94%)</title><rect x="57.7" y="1589" width="11.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="60.66" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (627,317,336 samples, 0.01%)</title><rect x="33.4" y="357" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.43" y="367.5" ></text>
</g>
<g >
<title>execute_command (1,030,856,070 samples, 0.01%)</title><rect x="1172.6" y="1317" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1175.59" y="1327.5" ></text>
</g>
<g >
<title>[ls] (771,436,387 samples, 0.01%)</title><rect x="19.0" y="1477" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="22.02" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_write (9,225,773,682 samples, 0.13%)</title><rect x="43.6" y="1413" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="46.62" y="1423.5" ></text>
</g>
<g >
<title>vfs_write (643,095,104 samples, 0.01%)</title><rect x="45.2" y="1413" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="48.17" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,478,154,824 samples, 0.10%)</title><rect x="29.8" y="965" width="1.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.77" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="645" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4,703,873,827 samples, 0.07%)</title><rect x="1048.9" y="1413" width="0.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1051.88" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="261" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="271.5" ></text>
</g>
<g >
<title>_dl_catch_exception (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1349" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="26.22" y="1359.5" ></text>
</g>
<g >
<title>execute_command_internal (4,737,492,879 samples, 0.07%)</title><rect x="1172.6" y="1445" width="0.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1175.59" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (826,186,933 samples, 0.01%)</title><rect x="29.9" y="245" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.91" y="255.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast (1,362,823,064 samples, 0.02%)</title><rect x="32.9" y="1493" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="35.91" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="501" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="245" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="255.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,151,094,046 samples, 0.02%)</title><rect x="16.7" y="1509" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="19.67" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,179,455,252 samples, 0.06%)</title><rect x="35.9" y="1477" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="38.86" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (812,262,047 samples, 0.01%)</title><rect x="19.2" y="1237" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.21" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1429" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="1439.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (5,519,511,935 samples, 0.08%)</title><rect x="620.1" y="1365" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="623.14" y="1375.5" ></text>
</g>
<g >
<title>__poll (6,350,172,152 samples, 0.09%)</title><rect x="42.5" y="1541" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="45.46" y="1551.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt; (79,194,459,118 samples, 1.10%)</title><rect x="840.9" y="1493" width="13.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="843.93" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (765,180,436 samples, 0.01%)</title><rect x="34.0" y="37" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="37.03" y="47.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (51,793,336,215 samples, 0.72%)</title><rect x="466.9" y="1509" width="8.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="469.95" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter (857,838,830 samples, 0.01%)</title><rect x="49.0" y="1461" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="51.97" y="1471.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::Cage::get_filedescriptor (39,316,685,539 samples, 0.55%)</title><rect x="551.9" y="1445" width="6.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="554.94" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (78,779,570,562 samples, 1.09%)</title><rect x="531.9" y="1381" width="12.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="534.92" y="1391.5" ></text>
</g>
<g >
<title>mas_store (666,762,715 samples, 0.01%)</title><rect x="28.1" y="1333" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="31.06" y="1343.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (18,564,874,288 samples, 0.26%)</title><rect x="25.3" y="1557" width="3.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="28.28" y="1567.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (175,233,514,817 samples, 2.43%)</title><rect x="737.8" y="1381" width="28.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="740.84" y="1391.5" >ri..</text>
</g>
<g >
<title>dequeue_task_fair (750,698,390 samples, 0.01%)</title><rect x="36.1" y="1333" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="39.13" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1109" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="1119.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (305,418,682,264 samples, 4.24%)</title><rect x="1056.6" y="1461" width="50.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1059.57" y="1471.5" >ringb..</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (46,631,528,125 samples, 0.65%)</title><rect x="507.6" y="1477" width="7.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="510.56" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="565" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.80" y="575.5" ></text>
</g>
<g >
<title>begin_new_exec (690,643,210 samples, 0.01%)</title><rect x="18.1" y="1445" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="21.06" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1013" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1023.5" ></text>
</g>
<g >
<title>__do_sys_clone (18,280,759,524 samples, 0.25%)</title><rect x="25.3" y="1413" width="3.0" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="28.30" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18,280,759,524 samples, 0.25%)</title><rect x="25.3" y="1461" width="3.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="28.30" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="581" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="591.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (16,286,374,452 samples, 0.23%)</title><rect x="29.1" y="1525" width="2.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="32.14" y="1535.5" ></text>
</g>
<g >
<title>mmput (1,395,240,940 samples, 0.02%)</title><rect x="1173.7" y="1413" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1176.70" y="1423.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (43,416,618,074 samples, 0.60%)</title><rect x="544.8" y="1445" width="7.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="547.83" y="1455.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (5,470,981,575 samples, 0.08%)</title><rect x="741.4" y="1349" width="0.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="744.44" y="1359.5" ></text>
</g>
<g >
<title>start_kernel (5,310,425,588 samples, 0.07%)</title><rect x="1188.0" y="1557" width="0.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1191.00" y="1567.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (170,378,304,478 samples, 2.37%)</title><rect x="737.8" y="1365" width="28.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="740.84" y="1375.5" >r..</text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (134,120,163,535 samples, 1.86%)</title><rect x="930.5" y="1429" width="22.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="933.51" y="1439.5" >c..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,264,589,047 samples, 0.03%)</title><rect x="1174.3" y="1541" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1177.29" y="1551.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (5,320,885,850 samples, 0.07%)</title><rect x="69.4" y="1493" width="0.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="72.44" y="1503.5" ></text>
</g>
<g >
<title>[ls] (6,033,065,087 samples, 0.08%)</title><rect x="19.0" y="1493" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.98" y="1503.5" ></text>
</g>
<g >
<title>runc:[1:CHILD] (21,451,222,364 samples, 0.30%)</title><rect x="45.7" y="1605" width="3.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="48.67" y="1615.5" ></text>
</g>
<g >
<title>release_pages (1,645,639,987 samples, 0.02%)</title><rect x="41.7" y="1237" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="44.70" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1189" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1199.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,663,895,371 samples, 0.02%)</title><rect x="37.1" y="1477" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="40.08" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="965" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="805" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="815.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (1,007,423,121 samples, 0.01%)</title><rect x="32.4" y="1413" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="35.39" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="997" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (17,564,854,181 samples, 0.24%)</title><rect x="42.4" y="1589" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="45.42" y="1599.5" ></text>
</g>
<g >
<title>[expr] (6,991,811,556 samples, 0.10%)</title><rect x="10.5" y="1541" width="1.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.54" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (719,919,849 samples, 0.01%)</title><rect x="23.2" y="1445" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.22" y="1455.5" ></text>
</g>
<g >
<title>do_group_exit (2,813,082,960 samples, 0.04%)</title><rect x="23.5" y="1541" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="26.55" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,905,203,984 samples, 0.03%)</title><rect x="12.3" y="1509" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.35" y="1519.5" ></text>
</g>
<g >
<title>lind_recv (1,781,474,673,082 samples, 24.74%)</title><rect x="475.4" y="1525" width="291.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="478.44" y="1535.5" >lind_recv</text>
</g>
<g >
<title>do_idle (1,318,098,719 samples, 0.02%)</title><rect x="49.0" y="1493" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="51.97" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="1173" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.37" y="1183.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (8,744,064,513 samples, 0.12%)</title><rect x="1151.4" y="1573" width="1.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1154.41" y="1583.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (6,906,160,174 samples, 0.10%)</title><rect x="65.4" y="1573" width="1.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="68.38" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (627,317,336 samples, 0.01%)</title><rect x="33.4" y="597" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.43" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="741" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,722,348,892 samples, 0.07%)</title><rect x="29.8" y="693" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.82" y="703.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (4,855,210,339 samples, 0.07%)</title><rect x="765.8" y="1365" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="768.75" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,607,534,485 samples, 0.16%)</title><rect x="1051.8" y="1381" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1054.80" y="1391.5" ></text>
</g>
<g >
<title>exec_binprm (1,617,101,465 samples, 0.02%)</title><rect x="1173.7" y="1493" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1176.68" y="1503.5" ></text>
</g>
<g >
<title>expr (11,017,737,205 samples, 0.15%)</title><rect x="10.4" y="1605" width="1.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="13.41" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,114,432,298 samples, 0.08%)</title><rect x="42.5" y="1509" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="45.49" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,182,219,226 samples, 0.06%)</title><rect x="34.4" y="933" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.37" y="943.5" ></text>
</g>
<g >
<title>glob_filename (2,512,196,929 samples, 0.03%)</title><rect x="1172.1" y="1397" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1175.11" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,917,737,324 samples, 0.10%)</title><rect x="10.5" y="1509" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.55" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,584,387,166 samples, 0.02%)</title><rect x="18.6" y="1477" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.56" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,991,762,699 samples, 0.04%)</title><rect x="33.8" y="101" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="111.5" ></text>
</g>
<g >
<title>inotify_read (814,118,756 samples, 0.01%)</title><rect x="33.2" y="1461" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="36.24" y="1471.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (90,491,656,972 samples, 1.26%)</title><rect x="914.9" y="1429" width="14.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="917.91" y="1439.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (755,411,217 samples, 0.01%)</title><rect x="1189.8" y="1509" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1192.80" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,111,868,679 samples, 0.02%)</title><rect x="18.6" y="1413" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="21.63" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,088,542,652 samples, 0.04%)</title><rect x="33.8" y="533" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.80" y="543.5" ></text>
</g>
<g >
<title>lookup_fast (683,324,370 samples, 0.01%)</title><rect x="20.3" y="1349" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="23.26" y="1359.5" ></text>
</g>
</g>
</svg>
